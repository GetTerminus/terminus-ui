@import '../../../scss/typography/typography';
@import '../../../scss/spacing/spacing';
@import '../../../scss/color/color';
@import '../../../scss/cursors/cursors';


.ts-expansion-panel__trigger {
  @include typography(body);
  align-items: center;
  border-radius: inherit;
  display: flex;
  flex-direction: row;
  padding: 0 spacing(large);

  &.ts-expansion-panel__trigger--transparent {
    padding: 0;
  }

  &:focus,
  &:hover {
    outline: none;
  }

  &.ts-expansion-panel__trigger--expanded {
    &:focus,
    &:hover {
      background: inherit;
    }
  }

  &[aria-disabled='true'] {
    color: color(utility, light);

    .ts-expansion-panel__trigger-title,
    .ts-expansion-panel__trigger-description {
      color: inherit;
    }
  }

  &:not([aria-disabled='true']) {
    cursor: cursor(pointer);
  }
}


@media (hover: none) {
  .ts-expansion-panel {
    &:not(.ts-expansion-panel--expanded) {
      &:not([aria-disabled='true']) {
        .ts-expansion-panel__trigger {
          &:hover {
            background: color(pure);
          }
        }
      }
    }
  }
}

.ts-expansion-panel__trigger-content {
  display: flex;
  flex: 1;
  flex-direction: row;
  overflow: hidden;
}

.ts-expansion-panel__trigger-title,
.ts-expansion-panel__trigger-description {
  display: flex;
  flex-grow: 0;
  margin-right: spacing(large, 1);
}

.ts-expansion-panel__trigger-description {
  color: color(utility, dark);
  flex-grow: 2;
}

/**
 * Creates the expansion indicator arrow. Done using ::after rather than having
 * additional nodes in the template.
 */
.ts-expansion-panel__indicator {
  $arrow-inner-spacing: 3px;

  &::after {
    border-style: solid;
    border-width: 0 2px 2px 0;
    color: color(utility);
    content: '';
    display: inline-block;
    padding: $arrow-inner-spacing;
    transform: rotate(45deg);
    vertical-align: middle;
  }
}

.ts-expansion-panel {
  &:not(.ts-expansion-panel--expanded) {
    .ts-expansion-panel__trigger {
      &:not([aria-disabled='true']) {
        &.cdk-keyboard-focused,
        &.cdk-program-focused,
        &:hover {
          background: color(utility, xlight);
        }
      }
    }
  }
}
