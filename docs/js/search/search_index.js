var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/injectables/HighchartsService.html",[0,1.382,1,3.405]],["body/injectables/HighchartsService.html",[0,2.811,1,6.092,2,0.089,3,0.065,4,0.041,5,0.052,6,6.84,7,0.833,8,3.448,9,4.493,10,3.19,11,0.937,12,1.131,13,1.374,14,1.843,15,6.84,16,0.847,17,6.84,18,1.882,19,0.008,20,0.775,21,0.804,22,1.217,23,3.374,24,6.84,25,0.114,26,5.545,27,0.299,28,2.141,29,4.6,30,2.342,31,4.02,32,4.02,33,0.091,34,1.351,35,1.529,36,6.84,37,0.065,38,6.84,39,0.007,40,0.007]],["title/interfaces/KeyboardEvent.html",[41,0.55,42,3.405]],["body/interfaces/KeyboardEvent.html",[2,0.038,3,0.028,4,0.018,5,0.027,11,0.756,13,1.464,16,0.885,19,0.008,20,0.513,21,0.734,22,1.576,25,0.127,27,0.129,28,1.417,30,1.006,33,0.08,34,1.091,35,1.498,37,0.059,39,0.006,40,0.005,41,0.756,42,3.415,43,1.006,44,2.217,45,2.097,46,1.269,47,2.938,48,6.142,49,0.826,50,0.792,51,2.181,52,1.744,53,4.018,54,1.754,55,5.233,56,3.234,57,3.651,58,1.276,59,2.715,60,4.875,61,5.563,62,1.549,63,2.934,64,1.683,65,2.899,66,1.427,67,3.023,68,2.423,69,1.515,70,3.799,71,2.906,72,2.104,73,2.051,74,0.88,75,1.819,76,2.085,77,2.085,78,2.085,79,1.882,80,0.842,81,1.976,82,3.382,83,4.804,84,2.085,85,4.171,86,2.559,87,4.402,88,2.085,89,2.382,90,0.858,91,5.977,92,1.289,93,1.006,94,2.382,95,1.882,96,2.173,97,2.66,98,3.669,99,2.786,100,3.669,101,3.669,102,4.476,103,2.906,104,2.382,105,3.669,106,1.054,107,4.476,108,0.826,109,1.207,110,3.669,111,3.669,112,2.383,113,3.382,114,1.058,115,3.669,116,1.077,117,3.009,118,1.867,119,3.669,120,1.276,121,3.669,122,4.68,123,2.111,124,0.971,125,5.339,126,3.669,127,3.411,128,0.883,129,1.079,130,3.044,131,2.382,132,1.727,133,2.423,134,0.9,135,3.669,136,1.661,137,3.669,138,2.382,139,2.382,140,1.941,141,4.476,142,4.68,143,2.382,144,2.085,145,1.417,146,1.882,147,2.382,148,4.476,149,2.085,150,5.563,151,2.382,152,2.232,153,2.382,154,2.906,155,2.027,156,2.772,157,1.161,158,1.671,159,2.382,160,1.191,161,1.029,162,2.097,163,2.382,164,2.305,165,0.862,166,1.623,167,2.392,168,1.652,169,2.296,170,2.102,171,1.791,172,1.326,173,0.744,174,2.382,175,0.843,176,5.028,177,3.669,178,5.028,179,2.217,180,2.085,181,3.669,182,2.305,183,1.976,184,2.811,185,1.132,186,2.382,187,1.976,188,1.22,189,1.161,190,2.382,191,2.085,192,2.559,193,0.983,194,1.933,195,1.289,196,1.289,197,1.601,198,2.165,199,3.415,200,0.699,201,2.29,202,0.826,203,1.662,204,1.341,205,1.234,206,2.772,207,1.986,208,2.811,209,4.504,210,0.671,211,2.382,212,2.382,213,2.382,214,2.382,215,2.382,216,2.382,217,2.382,218,2.382,219,2.382,220,2.382,221,2.382,222,2.382,223,2.382,224,0.88,225,0.501,226,0.858,227,0.843,228,2.382,229,0.808,230,2.382,231,1.029,232,2.382,233,0.605,234,0.862,235,0.862,236,0.744,237,0.744,238,0.728,239,1.727,240,3.669,241,2.076,242,2.382,243,2.382,244,2.382,245,0.84,246,3.669,247,1.467,248,2.382,249,0.673,250,2.076,251,2.382,252,2.382,253,2.382,254,3.669,255,2.382,256,1.054,257,0.724,258,2.382,259,2.382,260,1.683,261,3.669,262,3.212,263,2.382,264,2.085,265,1.245,266,1.603,267,1.744,268,0.862,269,2.382,270,2.085,271,4.476,272,2.315,273,2.315,274,2.165,275,3.669,276,2.772,277,1.976,278,1.8,279,2.085,280,2.382,281,1.029,282,2.382,283,3.669,284,2.382,285,2.382,286,1.547,287,2.382,288,2.382,289,4.476,290,2.382,291,1.727,292,1.496,293,1.661,294,1.702,295,2.491,296,1.727,297,2.382,298,1.882,299,1.702,300,0.92,301,2.382,302,3.669,303,2.382,304,4.476,305,3.669,306,3.669,307,2.382,308,2.382,309,0.983,310,1.449,311,2.382,312,2.217,313,0.894,314,1.449,315,1.547,316,2.217,317,2.382,318,2.217,319,1.727,320,1.976,321,1.496,322,1.475,323,2.085,324,2.382,325,1.661,326,2.382,327,2.217,328,2.382,329,2.382,330,2.382,331,1.496,332,2.217,333,2.382,334,2.382,335,1.364,336,1.417,337,1.601,338,2.382,339,2.382,340,2.217,341,1.601,342,1.105,343,2.382,344,2.217,345,2.382,346,2.382,347,0.759,348,2.382,349,0.792,350,2.382,351,2.382,352,1.191,353,2.382,354,2.382,355,3.669,356,2.382,357,1.882,358,2.382]],["title/interfaces/Mask.html",[41,0.55,359,3.034]],["body/interfaces/Mask.html",[2,0.056,3,0.041,4,0.026,5,0.026,7,0.522,11,0.586,12,0.836,13,1.25,16,0.78,19,0.008,20,0.676,21,0.844,22,1.223,25,0.124,27,0.187,28,2.447,33,0.091,34,1.544,37,0.041,39,0.005,40,0.006,41,0.837,43,1.466,45,1.34,46,1.233,49,1.203,50,1.154,51,2.358,52,2.3,54,1.634,56,1.5,58,1.346,66,0.864,70,2.622,72,1.575,73,1.828,74,1.283,79,1.781,90,1.409,108,1.931,109,1.145,114,1.268,117,2.333,120,1.358,123,1.084,128,1.295,129,2.192,134,1.311,145,1.34,152,2.944,161,2.604,166,1.535,168,1.597,169,2.482,175,1.229,205,0.957,207,2.619,210,0.977,225,0.73,231,1.5,233,0.882,238,1.48,241,2.94,245,1.275,247,1.885,249,0.837,257,1.189,260,1.634,265,1.891,266,1.542,272,1.953,273,1.953,296,4.038,309,1.997,322,1.634,336,2.327,349,2.106,359,6.357,360,3.471,361,2.944,362,6.585,363,7.141,364,6.026,365,1.805,366,6.585,367,6.087,368,2.42,369,2.549,370,5.185,371,3.793,372,3.793,373,5.287,374,5.57,375,6.087,376,5.185,377,6.563,378,3.793,379,3.471,380,2.622,381,2.622,382,3.793,383,2.742,384,3.793,385,6.087,386,4.209,387,1.535,388,3.793,389,3.823,390,5.287,391,3.508,392,2.944,393,3.793,394,2.879,395,3.508,396,4.236,397,3.793,398,3.793,399,3.793,400,3.793,401,3.793,402,1.789,403,3.793,404,3.793,405,3.793,406,4.401,407,6.087,408,2.112,409,3.471,410,4.839,411,6.026,412,4.236,413,3.793,414,1.535,415,2.516,416,1.42,417,4.504,418,1.879,419,2.192,420,2.516,421,2.516,422,1.61,423,3.793,424,2.516,425,4.236,426,5.287,427,3.793,428,3.793,429,3.793,430,1.879,431,3.793,432,3.793,433,3.793,434,1.311,435,3.793,436,1.04,437,3.793,438,2.254,439,3.793,440,3.793,441,3.793,442,3.793,443,2.523,444,6.087,445,3.039,446,3.793,447,3.374,448,3.039,449,3.793,450,3.793,451,6.585,452,3.039,453,3.793,454,3.793,455,3.793,456,3.793,457,3.793,458,5.57,459,5.57,460,3.793,461,3.793,462,3.793,463,2.42,464,4.236,465,3.793,466,3.793]],["title/interfaces/MaskCollection.html",[41,0.55,409,3.658]],["body/interfaces/MaskCollection.html",[2,0.057,3,0.041,4,0.026,5,0.036,7,0.531,11,0.597,13,1.258,16,0.826,19,0.008,20,0.684,21,0.811,22,0.776,25,0.125,27,0.191,28,2.463,33,0.092,34,1.554,37,0.041,39,0.005,40,0.006,41,0.845,43,1.492,45,1.892,46,1.219,49,1.225,50,1.175,51,2.388,52,2.33,54,1.65,56,1.527,58,1.349,66,0.879,70,2.67,72,1.595,73,1.851,74,1.306,79,1.813,90,1.42,108,1.95,109,1.153,114,1.278,117,2.376,120,1.364,123,1.103,128,1.302,129,2.219,134,1.335,145,1.365,152,2.981,161,2.624,166,1.563,168,1.604,169,2.514,175,1.252,205,0.975,207,1.913,210,0.995,225,0.744,231,1.527,233,0.898,238,1.498,241,2.959,245,1.288,247,1.893,249,0.845,257,1.198,260,1.65,265,1.909,272,1.978,273,1.978,296,4.077,309,2.023,322,1.65,336,2.345,349,2.12,359,6.339,360,3.534,361,2.15,362,3.862,363,6.768,364,4.9,365,1.819,366,6.636,367,6.146,368,2.465,369,2.581,370,5.235,371,3.862,372,3.862,373,5.354,374,5.624,375,6.146,376,5.235,377,6.6,378,3.862,379,3.534,380,2.67,381,2.67,382,3.862,383,2.792,384,3.862,385,6.146,386,4.25,387,1.563,388,3.862,389,3.871,390,5.354,391,3.552,392,2.981,393,3.862,394,2.931,395,3.552,396,4.29,397,3.862,398,3.862,399,3.862,400,3.862,401,3.862,402,1.811,403,3.862,404,3.862,405,3.862,406,4.444,407,6.146,408,2.981,409,4.9,410,4.9,411,6.073,412,4.29,413,3.862,414,1.563,415,2.562,416,1.438,417,4.561,418,1.913,419,2.219,420,2.562,421,2.562,422,1.64,423,3.862,424,2.562,425,4.29,426,5.354,427,3.862,428,3.862,429,3.862,430,1.913,431,3.862,432,3.862,433,3.862,434,1.335,435,3.862,436,1.059,437,3.862,438,2.295,439,3.862,440,3.862,441,3.862,442,3.862,443,2.547,444,6.146,445,3.094,446,3.862,447,3.417,448,3.094,449,3.862,450,3.862,451,6.636,452,3.094,453,3.862,454,3.862,455,3.862,456,3.862,457,3.862,458,5.624,459,5.624,460,3.862,461,3.862,462,3.862,463,2.465,464,4.29,465,3.862,466,3.862,467,4.359]],["title/interfaces/MouseEvent.html",[41,0.55,197,2.459]],["body/interfaces/MouseEvent.html",[2,0.038,3,0.028,4,0.018,5,0.027,11,0.756,13,1.464,16,0.885,19,0.008,20,0.513,21,0.734,22,1.576,25,0.127,27,0.129,28,1.417,30,1.006,33,0.08,34,1.091,35,1.498,37,0.059,39,0.006,40,0.005,41,0.756,42,2.217,43,1.006,44,2.217,45,2.097,46,1.269,48,6.142,49,0.826,50,0.792,51,2.181,52,1.744,53,4.018,54,1.754,55,5.233,56,3.234,57,3.651,58,1.276,59,2.715,60,4.875,61,5.563,62,1.549,63,2.934,64,1.683,65,2.899,66,1.427,67,3.023,68,2.423,69,1.515,70,3.799,71,2.906,72,2.104,73,2.051,74,0.88,75,1.819,76,2.085,77,2.085,78,2.085,79,1.882,80,0.842,81,1.976,82,3.382,83,4.804,84,2.085,85,4.171,86,2.559,87,4.402,88,2.085,89,2.382,90,0.858,91,5.977,92,1.289,93,1.006,94,2.382,95,1.882,96,2.173,97,2.66,98,3.669,99,2.786,100,3.669,101,3.669,102,4.476,103,2.906,104,2.382,105,3.669,106,1.054,107,4.476,108,0.826,109,1.207,110,3.669,111,3.669,112,2.383,113,3.382,114,1.058,115,3.669,116,1.077,117,3.009,118,1.867,119,3.669,120,1.276,121,3.669,122,4.68,123,2.111,124,0.971,125,5.339,126,3.669,127,3.411,128,0.883,129,1.079,130,3.044,131,2.382,132,1.727,133,2.423,134,0.9,135,3.669,136,1.661,137,3.669,138,2.382,139,2.382,140,1.941,141,4.476,142,4.68,143,2.382,144,2.085,145,1.417,146,1.882,147,2.382,148,4.476,149,2.085,150,5.563,151,2.382,152,2.232,153,2.382,154,2.906,155,2.027,156,2.772,157,1.161,158,1.671,159,2.382,160,1.191,161,1.029,162,2.097,163,2.382,164,2.305,165,0.862,166,1.623,167,2.392,168,1.652,169,2.296,170,2.102,171,1.791,172,1.326,173,0.744,174,2.382,175,0.843,176,5.028,177,3.669,178,5.028,179,2.217,180,2.085,181,3.669,182,2.305,183,1.976,184,2.811,185,1.132,186,2.382,187,1.976,188,1.22,189,1.161,190,2.382,191,2.085,192,2.559,193,0.983,194,1.933,195,1.289,196,1.289,197,2.467,198,2.165,199,3.415,200,0.699,201,2.29,202,0.826,203,1.662,204,1.341,205,1.234,206,2.772,207,1.986,208,2.811,209,4.504,210,0.671,211,2.382,212,2.382,213,2.382,214,2.382,215,2.382,216,2.382,217,2.382,218,2.382,219,2.382,220,2.382,221,2.382,222,2.382,223,2.382,224,0.88,225,0.501,226,0.858,227,0.843,228,2.382,229,0.808,230,2.382,231,1.029,232,2.382,233,0.605,234,0.862,235,0.862,236,0.744,237,0.744,238,0.728,239,1.727,240,3.669,241,2.076,242,2.382,243,2.382,244,2.382,245,0.84,246,3.669,247,1.467,248,2.382,249,0.673,250,2.076,251,2.382,252,2.382,253,2.382,254,3.669,255,2.382,256,1.054,257,0.724,258,2.382,259,2.382,260,1.683,261,3.669,262,3.212,263,2.382,264,2.085,265,1.245,266,1.603,267,1.744,268,0.862,269,2.382,270,2.085,271,4.476,272,2.315,273,2.315,274,2.165,275,3.669,276,2.772,277,1.976,278,1.8,279,2.085,280,2.382,281,1.029,282,2.382,283,3.669,284,2.382,285,2.382,286,1.547,287,2.382,288,2.382,289,4.476,290,2.382,291,1.727,292,1.496,293,1.661,294,1.702,295,2.491,296,1.727,297,2.382,298,1.882,299,1.702,300,0.92,301,2.382,302,3.669,303,2.382,304,4.476,305,3.669,306,3.669,307,2.382,308,2.382,309,0.983,310,1.449,311,2.382,312,2.217,313,0.894,314,1.449,315,1.547,316,2.217,317,2.382,318,2.217,319,1.727,320,1.976,321,1.496,322,1.475,323,2.085,324,2.382,325,1.661,326,2.382,327,2.217,328,2.382,329,2.382,330,2.382,331,1.496,332,2.217,333,2.382,334,2.382,335,1.364,336,1.417,337,1.601,338,2.382,339,2.382,340,2.217,341,1.601,342,1.105,343,2.382,344,2.217,345,2.382,346,2.382,347,0.759,348,2.382,349,0.792,350,2.382,351,2.382,352,1.191,353,2.382,354,2.382,355,3.669,356,2.382,357,1.882,358,2.382,468,2.938]],["title/interfaces/NavigationItemBase.html",[41,0.55,469,2.89]],["body/interfaces/NavigationItemBase.html",[0,1.042,2,0.044,3,0.032,4,0.02,5,0.02,7,0.414,10,1.344,11,0.466,12,0.708,13,1.375,14,0.776,16,0.893,19,0.008,20,0.878,21,0.793,22,1.189,25,0.101,27,0.149,28,1.065,33,0.087,34,1.698,35,1.35,37,0.057,39,0.004,40,0.004,41,0.944,45,2.236,46,1.253,54,1.699,56,1.192,58,0.884,63,1.311,64,1.436,69,1.138,71,1.79,72,1.885,73,2.605,74,1.809,75,1.77,79,1.415,80,0.795,83,1.854,97,1.999,103,2.662,108,0.956,109,1.246,112,1.79,114,0.58,118,1.334,120,0.826,123,1.28,124,1.331,128,1.069,129,1.249,132,1.999,133,1.493,134,2.047,140,1.065,154,2.662,155,3.461,158,0.916,160,1.378,162,1.583,164,2.575,165,0.998,166,2.164,167,1.848,168,1.24,171,1.28,172,1.535,173,0.861,182,1.732,184,3.637,185,1.311,188,0.916,193,1.138,197,1.854,200,1.203,201,2.273,202,0.956,204,1.623,205,1.781,208,3.947,210,0.776,224,1.019,225,0.58,226,0.958,227,0.976,229,0.936,233,0.7,234,0.998,235,0.998,236,0.861,237,0.861,238,0.843,241,1.279,245,1.559,247,1.698,256,2.561,260,1.59,265,1.391,267,2.326,268,1.483,272,1.655,273,1.655,292,1.732,293,1.923,310,1.678,313,1.192,321,1.732,322,1.78,336,1.583,342,1.279,347,1.727,352,2.446,365,1.466,402,2.003,408,1.678,430,1.493,434,1.549,436,1.228,443,1.857,469,4.28,470,2.178,471,2.536,472,4.803,473,3.016,474,4.494,475,5.355,476,3.994,477,3.4,478,2.724,479,2.178,480,2.103,481,3.097,482,2.083,483,2.287,484,3.239,485,3.547,486,2.287,487,2.859,488,3.4,489,1.771,490,3.097,491,4.575,492,3.285,493,1.22,494,3.239,495,2.178,496,2.287,497,3.097,498,2.287,499,1.923,500,5.304,501,2.287,502,3.239,503,1.378,504,2.326,505,2.292,506,3.4,507,2.083,508,2.066,509,2.859,510,1.28,511,4.984,512,1.79,513,2.287,514,2.287,515,2.287,516,1.999,517,2.287,518,3.074,519,2.348,520,4.08,521,2.287,522,3.4,523,1.923,524,2.287,525,2.083,526,3.4,527,3.927,528,2.287,529,2.287,530,4.059,531,3.4,532,2.287,533,2.287,534,2.287,535,2.287,536,2.287,537,2.494,538,2.287,539,2.287,540,3.4,541,2.287,542,2.287,543,2.287,544,3.4,545,3.4,546,4.494,547,0.956,548,3.239,549,2.287,550,2.287,551,2.287,552,2.287,553,2.287,554,2.446,555,2.178,556,2.287,557,2.287,558,2.287,559,1.678,560,1.415,561,1.678,562,3.177,563,1.311,564,2.287,565,3.4,566,2.287,567,2.287,568,2.287,569,3.239,570,2.287,571,2.178,572,2.287,573,3.4,574,1.58,575,2.287,576,1.732,577,2.287,578,1.923,579,2.287,580,2.287,581,2.287,582,3.239,583,2.287,584,2.287,585,3.097,586,2.287,587,2.287,588,2.083,589,1.453,590,2.287,591,3.4,592,3.4,593,1.378,594,3.4,595,3.4,596,2.972,597,2.287,598,3.4,599,4.494,600,2.287,601,2.287,602,3.4,603,3.697,604,2.287,605,2.287,606,1.378,607,1.692,608,1.732,609,1.453,610,2.287,611,2.287,612,2.287,613,2.287,614,1.493,615,2.287,616,2.178,617,2.287,618,2.287]],["title/modules/TerminusUIModule.html",[619,0.618,620,3.405]],["body/modules/TerminusUIModule.html",[0,1.953,2,0.049,3,0.036,4,0.033,5,0.022,19,0.008,25,0.158,27,0.164,33,0.084,37,0.036,39,0.005,40,0.005,66,0.754,69,2.134,80,0.832,93,1.28,116,0.89,118,1.683,140,2.189,249,0.777,294,1.407,300,1.171,313,0.739,347,1.401,416,1.517,563,2.458,619,1.017,620,7.315,621,1.008,622,0.573,623,1.074,624,3.313,625,3.313,626,3.313,627,3.313,628,3.313,629,2.591,630,6.154,631,5.83,632,4.564,633,6.154,634,6.154,635,6.154,636,5.83,637,6.154,638,6.154,639,6.154,640,5.83,641,6.154,642,5.553,643,3.913,644,5.311,645,5.83,646,6.154,647,6.154,648,6.154,649,5.83,650,6.154,651,5.83,652,6.154,653,6.154,654,5.83,655,5.83,656,5.83,657,6.154,658,6.154,659,5.095,660,4.726,661,4.742,662,1.59,663,3.74,664,2.654,665,1.59,666,3.74,667,3.313,668,2.038,669,3.74,670,3.74,671,3.313,672,3.74,673,3.74,674,1.31,675,2.822,676,3.74,677,0.966,678,3.032,679,3.74,680,3.313,681,3.313,682,3.74,683,1.252,684,2.654,685,3.032,686,1.904,687,2.822,688,3.313,689,2.822,690,3.74,691,2.822,692,3.74,693,3.74,694,3.313,695,3.74,696,3.313,697,4.526,698,3.74,699,1.341,700,2.654,701,3.74,702,3.74,703,3.313,704,3.313,705,3.313,706,3.74,707,3.74,708,2.654,709,2.114,710,2.395,711,6.377,712,3.748,713,3.247,714,6.377,715,2.654,716,2.291,717,2.291]],["title/injectables/TsAmChartsService.html",[0,1.382,718,3.034]],["body/injectables/TsAmChartsService.html",[0,2.783,2,0.086,3,0.062,4,0.039,5,0.051,7,0.798,8,3.36,9,3.132,10,3.108,11,0.897,12,1.102,13,1.349,14,1.796,16,0.826,18,1.802,19,0.008,20,0.741,21,0.784,22,1.165,23,3.23,25,0.109,26,6.377,27,0.287,28,2.05,29,4.403,30,2.242,31,3.848,32,3.848,33,0.095,34,1.554,35,1.464,37,0.062,39,0.007,40,0.007,41,0.798,157,3.108,272,2.142,273,2.142,299,3.172,402,1.962,718,5.29,719,5.8,720,6.992,721,6.547,722,6.857,723,6.547,724,6.547,725,4.647,726,2.955,727,2.873,728,4.941,729,5.8,730,5.8,731,6.969,732,5.8,733,5.8]],["title/interfaces/TsAmChartsToken.html",[41,0.55,722,3.405]],["body/interfaces/TsAmChartsToken.html",[0,2.688,2,0.086,3,0.063,4,0.04,5,0.04,8,2.824,9,3.163,10,2.613,11,0.905,12,1.108,13,1.058,14,1.509,19,0.008,21,0.874,22,1.562,25,0.11,26,6.415,27,0.29,28,2.07,29,4.447,30,2.264,31,3.886,32,3.886,33,0.096,34,1.563,35,1.479,37,0.063,39,0.007,40,0.007,41,0.964,157,2.613,272,2.164,273,2.164,299,3.426,402,1.982,718,4.447,719,5.858,720,6.39,722,6.39,725,6.229,726,3.961,727,3.852,728,4.99,729,5.858,730,5.858,731,7.01,732,5.858,733,5.858]],["title/modules/TsAutocompleteModule.html",[619,0.618,630,3.203]],["body/modules/TsAutocompleteModule.html",[2,0.083,3,0.06,4,0.038,5,0.038,19,0.008,25,0.158,27,0.277,33,0.1,37,0.06,39,0.007,40,0.007,66,1.275,96,3.297,116,1.503,175,1.814,179,4.768,206,3.871,249,0.77,313,1.248,416,1.975,619,1.054,621,1.703,622,0.968,623,1.814,630,6.704,643,4.067,644,5.52,660,4.912,662,2.258,665,2.258,686,3.218,687,4.768,709,3.572,710,4.047,734,5.598,735,5.598,736,6.319,737,5.598,738,6.319,739,2.358,740,1.894,741,4.353,742,5.177,743,7.699,744,7.699,745,6.319,746,5.81,747,4.768,748,6.82,749,5.123,750,7.699]],["title/classes/TsAutocompleteSelectedEvent.html",[37,0.043,199,3.405]],["body/classes/TsAutocompleteSelectedEvent.html",[2,0.038,3,0.028,4,0.018,5,0.018,11,0.621,13,1.465,16,0.876,19,0.008,20,0.513,21,0.735,22,1.577,25,0.127,27,0.129,28,1.419,30,1.008,33,0.08,34,1.092,35,1.499,37,0.064,39,0.006,40,0.005,41,0.673,42,2.221,43,1.008,44,2.221,45,1.943,46,1.263,48,6.144,49,0.827,50,0.793,51,2.184,52,1.747,53,4.021,54,1.755,55,5.236,56,3.234,57,3.654,58,1.277,59,2.717,60,4.879,61,5.567,62,1.552,63,2.936,64,1.684,65,2.903,66,1.428,67,3.026,68,2.426,69,1.517,70,3.803,71,2.91,72,2.105,73,2.053,74,0.882,75,1.821,76,2.089,77,2.089,78,2.089,79,1.885,80,0.842,81,1.979,82,3.386,83,4.805,84,2.089,85,4.175,86,2.563,87,4.407,88,2.089,89,2.386,90,0.859,91,5.981,92,1.292,93,1.008,94,2.386,95,1.885,96,2.175,97,2.664,98,3.675,99,2.789,100,3.675,101,3.675,102,4.481,103,2.91,104,2.386,105,3.675,106,1.056,107,4.481,108,0.827,109,1.207,110,3.675,111,3.675,112,2.386,113,3.386,114,1.059,115,3.675,116,1.078,117,3.013,118,1.869,119,3.675,120,1.277,121,3.675,122,4.685,123,2.112,124,0.972,125,5.344,126,3.675,127,3.414,128,0.884,129,1.081,130,3.048,131,2.386,132,1.73,133,2.426,134,0.901,135,3.675,136,1.664,137,3.675,138,2.386,139,2.386,140,1.943,141,4.481,142,4.685,143,2.386,144,2.089,145,1.419,146,1.885,147,2.386,148,4.481,149,2.089,150,5.567,151,2.386,152,2.236,153,2.386,154,2.91,155,2.03,156,2.777,157,1.163,158,1.673,159,2.386,160,1.193,161,1.031,162,2.099,163,2.386,164,2.308,165,0.863,166,1.625,167,2.393,168,1.652,169,2.299,170,2.105,171,1.792,172,1.328,173,0.745,174,2.386,175,0.845,176,5.033,177,4.481,178,5.033,179,2.221,180,2.089,181,3.675,182,2.308,183,1.979,184,2.815,185,1.135,186,2.386,187,1.979,188,1.221,189,1.163,190,2.386,191,2.089,192,2.563,193,0.985,194,1.936,195,1.292,196,1.292,197,1.604,198,2.168,199,4.171,200,1.078,201,2.292,202,0.827,203,1.664,204,1.342,205,1.236,206,2.777,207,1.989,208,2.815,209,4.508,210,0.672,211,2.386,212,2.386,213,2.386,214,2.386,215,2.386,216,2.386,217,2.386,218,2.386,219,2.386,220,2.386,221,2.386,222,2.386,223,2.386,224,0.882,225,0.502,226,0.859,227,0.845,228,2.386,229,0.81,230,2.386,231,1.031,232,2.386,233,0.606,234,0.863,235,0.863,236,0.745,237,0.745,238,0.73,239,1.73,240,3.675,241,2.079,242,2.386,243,2.386,244,2.386,245,0.841,246,3.675,247,1.469,248,2.386,249,0.673,250,2.079,251,2.386,252,2.386,253,2.386,254,3.675,255,2.386,256,1.056,257,0.725,258,2.386,259,2.386,260,1.684,261,3.675,262,3.217,263,2.386,264,2.089,265,1.247,266,1.604,267,1.747,268,0.863,269,2.386,270,2.089,271,4.481,272,2.317,273,2.317,274,2.168,275,3.675,276,2.777,277,1.979,278,1.803,279,2.089,280,2.386,281,1.031,282,2.386,283,3.675,284,2.386,285,2.386,286,1.55,287,2.386,288,2.386,289,4.481,290,2.386,291,1.73,292,1.499,293,1.664,294,1.705,295,2.494,296,1.73,297,2.386,298,1.885,299,1.705,300,0.921,301,2.386,302,3.675,303,2.386,304,4.481,305,3.675,306,3.675,307,2.386,308,2.386,309,0.985,310,1.452,311,2.386,312,2.221,313,0.896,314,1.452,315,1.55,316,2.221,317,2.386,318,2.221,319,1.73,320,1.979,321,1.499,322,1.477,323,2.089,324,2.386,325,1.664,326,2.386,327,2.221,328,2.386,329,2.386,330,2.386,331,1.499,332,2.221,333,2.386,334,2.386,335,1.367,336,1.419,337,1.604,338,2.386,339,2.386,340,2.221,341,1.604,342,1.107,343,2.386,344,2.221,345,2.386,346,2.386,347,0.761,348,2.386,349,0.793,350,2.386,351,2.386,352,1.193,353,2.386,354,2.386,355,3.675,356,2.386,357,1.885,358,2.386]],["title/directives/TsAutofocusDirective.html",[257,0.722,751,1.657]],["body/directives/TsAutofocusDirective.html",[2,0.073,3,0.053,4,0.034,5,0.052,7,0.683,11,0.768,12,1.001,13,1.325,14,1.631,16,0.954,18,1.967,19,0.008,20,0.809,21,0.825,22,1.272,25,0.119,27,0.246,33,0.063,34,1.108,37,0.053,39,0.006,40,0.006,43,1.92,46,1.024,49,1.576,50,1.511,51,2.824,52,2.754,56,1.964,58,1.281,72,2.076,109,1.047,114,1.219,120,0.916,124,0.878,128,1.143,134,2.62,164,4.006,166,3.137,168,1.65,169,2.972,188,1.511,189,2.216,205,2.032,210,1.631,225,1.219,238,1.772,241,2.688,245,1.46,247,1.874,257,1.399,266,1.449,272,1.835,273,1.835,274,2.682,300,2.237,321,4.218,322,1.871,347,1.449,414,2.011,422,2.959,436,1.362,452,3.98,478,4.012,504,2.754,508,1.92,512,2.952,561,3.525,562,2.952,593,2.273,712,3.295,751,2.624,752,5.607,753,7.338,754,6.601,755,7.146,756,3.525,757,1.449,758,8.747,759,8.747,760,2.593,761,3.98,762,5.607,763,7.146,764,5.607,765,6.251,766,5.607,767,5.607,768,3.895,769,3.295,770,4.967,771,2.604,772,3.591,773,5.607,774,2.395,775,5.607,776,7.146,777,3.591,778,5.607,779,7.146,780,5.607]],["title/modules/TsAutofocusModule.html",[619,0.618,631,3.034]],["body/modules/TsAutofocusModule.html",[2,0.09,3,0.065,4,0.041,5,0.041,19,0.008,25,0.148,27,0.301,33,0.102,37,0.065,39,0.007,40,0.007,116,1.635,249,0.837,313,1.358,416,2.047,619,1.109,621,1.852,622,1.052,623,1.973,631,6.238,662,2.374,665,2.374,739,2.479,740,2.059,751,3.491,781,6.087,782,6.087,783,6.087,784,6.871,785,8.095]],["title/modules/TsButtonModule.html",[619,0.618,632,2.375]],["body/modules/TsButtonModule.html",[2,0.086,3,0.063,4,0.04,5,0.04,19,0.008,25,0.156,27,0.288,33,0.101,37,0.063,39,0.007,40,0.007,116,1.566,188,1.774,193,2.203,206,4.033,249,0.962,313,1.301,416,2.011,619,1.081,621,1.774,622,1.008,623,1.89,632,4.915,643,4.106,662,2.315,665,2.315,686,3.353,739,2.417,740,1.973,748,6.992,749,5.337,786,5.832,787,5.832,788,6.583,789,5.832,790,3.314,791,6.583,792,5.956,793,4.968,794,5.956,795,6.992]],["title/modules/TsCSVEntryModule.html",[619,0.618,633,3.203]],["body/modules/TsCSVEntryModule.html",[2,0.083,3,0.06,4,0.038,5,0.038,19,0.008,25,0.156,27,0.278,33,0.1,37,0.06,39,0.007,40,0.007,116,1.508,175,1.82,249,0.772,313,1.252,416,1.978,554,2.569,619,1.056,621,1.708,622,0.971,623,1.82,632,4.747,633,6.743,642,5.776,643,4.07,659,5.3,662,2.263,665,2.263,668,3.455,674,2.702,675,4.783,683,2.121,684,4.499,685,5.139,686,3.228,708,4.499,739,2.362,740,1.9,742,5.187,796,5.616,797,5.616,798,6.339,799,5.616,800,3.457,801,5.139,802,6.339,803,4.534,804,3.455,805,7.714]],["title/interfaces/TsCSVEntryRecord.html",[41,0.55,806,3.658]],["body/interfaces/TsCSVEntryRecord.html",[2,0.057,3,0.026,4,0.032,5,0.017,7,0.339,8,2.277,11,1.075,12,0.607,13,1.469,14,0.634,16,0.785,19,0.008,20,0.682,21,0.531,25,0.115,27,0.122,33,0.06,34,1.606,35,1.192,37,0.051,39,0.005,40,0.005,41,0.649,43,0.951,45,1.668,46,1.265,49,1.944,50,2.19,51,2.106,52,1.671,53,1.515,54,1.827,58,0.956,62,1.484,64,1.268,66,1.681,67,2.946,69,1.451,71,4.211,72,0.733,73,2.213,74,0.833,75,1.272,80,0.776,88,1.973,90,1.311,92,3.036,109,1.31,113,1.702,118,0.733,120,1.346,128,0.445,130,1.869,134,1.328,140,0.87,145,1.885,157,2.106,158,2.29,161,0.974,162,1.668,165,0.815,167,1.632,168,1.457,170,2.013,171,1.097,173,0.703,175,0.798,180,1.973,183,1.869,187,1.869,188,1.168,189,1.098,192,2.451,193,0.93,201,2.252,202,0.781,203,1.592,204,1.462,207,1.903,208,1.415,210,0.99,224,0.833,225,0.474,226,1.01,227,0.798,229,0.765,231,0.974,233,0.572,234,0.815,235,0.815,236,0.703,237,0.703,238,1.075,241,1.045,247,1.752,256,0.997,260,2.148,262,3.783,266,1.867,272,1.419,273,1.419,276,1.702,286,2.282,291,1.633,294,2.889,295,2.946,309,1.451,320,1.869,322,1.868,325,1.571,335,1.291,336,2.404,342,1.631,347,1.687,349,1.168,352,2.16,357,1.78,380,3.999,387,2.159,402,2.073,434,0.851,436,2.081,438,1.463,463,1.571,476,1.903,478,2.405,480,1.803,493,0.997,505,0.851,508,0.951,510,1.524,554,1.126,560,1.156,562,1.463,563,1.071,593,2.44,608,3.066,674,3.002,675,2.097,756,2.139,760,0.87,774,1.187,800,1.021,801,2.253,806,4.881,807,2.462,808,3.265,809,4.538,810,2.902,811,5.783,812,6.679,813,2.915,814,5.334,815,2.036,816,0.833,817,1.33,818,5.334,819,2.462,820,3.515,821,4.321,822,3.539,823,2.462,824,2.097,825,1.415,826,1.702,827,2.379,828,3.271,829,2.462,830,2.462,831,1.463,832,1.869,833,3.827,834,1.78,835,1.973,836,1.869,837,3.271,838,6.4,839,3.414,840,3.133,841,5.334,842,1.973,843,2.253,844,2.253,845,4.926,846,1.415,847,2.777,848,2.462,849,2.253,850,4.881,851,2.462,852,2.462,853,2.462,854,2.451,855,1.78,856,2.462,857,1.702,858,2.462,859,2.462,860,2.462,861,2.462,862,2.253,863,2.462,864,2.462,865,1.415,866,2.462,867,1.254,868,2.253,869,2.462,870,1.702,871,2.462,872,1.571,873,5.334,874,3.515,875,2.462,876,2.462,877,2.462,878,2.462,879,1.78,880,2.777,881,1.78,882,1.78,883,2.462,884,3.841,885,3.841,886,2.462,887,2.462,888,2.462,889,3.841,890,3.841,891,4.722,892,2.462,893,2.462,894,3.841,895,3.841,896,6.128,897,2.462,898,2.462,899,3.841,900,2.462,901,3.841,902,3.841,903,1.78,904,2.462,905,2.462,906,3.841,907,2.462,908,2.462,909,2.462,910,2.462,911,2.253,912,1.702,913,1.633,914,1.371,915,1.415,916,1.78,917,2.548,918,2.462,919,5.783,920,2.462,921,2.462,922,2.462,923,2.097,924,2.462,925,2.462,926,2.462,927,3.841,928,4.722,929,3.841,930,4.722,931,2.462,932,2.462,933,2.462,934,2.462,935,2.462,936,2.462,937,2.462,938,2.462,939,2.253,940,2.462,941,3.841,942,3.841,943,2.462,944,3.841,945,2.462,946,2.462,947,2.462,948,2.462,949,2.462,950,2.462,951,5.334,952,3.841,953,2.253,954,0.997,955,2.462,956,1.254,957,2.462,958,2.462,959,2.462,960,2.462,961,1.78,962,3.841,963,2.462,964,2.462,965,2.462,966,2.462,967,2.462,968,2.462,969,2.462,970,2.462,971,2.462,972,2.462,973,1.78,974,2.462,975,2.462,976,2.462,977,2.462,978,2.253,979,2.462,980,4.722,981,2.253,982,3.841,983,2.462,984,2.462,985,2.462,986,2.462,987,2.462,988,5.334,989,4.722,990,2.462,991,2.462,992,3.841,993,2.462,994,2.462,995,2.462,996,2.139,997,2.462,998,2.462,999,2.462,1000,2.462,1001,2.462,1002,2.462,1003,2.462,1004,2.462,1005,2.462,1006,1.463,1007,2.253,1008,2.462,1009,2.253]],["title/interfaces/TsCSVFormContents.html",[41,0.55,844,3.658]],["body/interfaces/TsCSVFormContents.html",[2,0.057,3,0.026,4,0.032,5,0.017,7,0.339,8,2.28,11,1.076,12,0.608,13,1.469,14,0.636,16,0.785,19,0.008,20,0.683,21,0.532,25,0.116,27,0.122,33,0.06,34,1.607,35,1.194,37,0.051,39,0.005,40,0.005,41,0.65,43,0.954,45,1.671,46,1.265,49,1.946,50,2.191,51,2.109,52,1.674,53,1.518,54,1.828,58,0.957,62,1.487,64,1.27,66,1.682,67,2.949,69,1.453,71,4.214,72,0.735,73,2.214,74,0.835,75,1.274,80,0.777,88,1.977,90,1.312,92,3.039,109,1.31,113,1.706,118,0.735,120,1.347,128,0.446,130,1.873,134,1.33,140,0.872,145,1.887,157,2.109,158,2.291,161,0.976,162,1.671,165,0.817,167,1.635,168,1.458,170,2.017,171,1.099,173,0.705,175,0.8,180,1.977,183,1.873,187,1.873,188,1.17,189,1.101,192,2.456,193,0.932,201,2.254,202,0.783,203,1.595,204,1.464,207,1.223,208,1.419,210,0.991,224,0.835,225,0.475,226,1.012,227,0.8,229,0.767,231,0.976,233,0.574,234,0.817,235,0.817,236,0.705,237,0.705,238,1.077,241,1.048,247,1.754,256,0.999,260,2.135,262,3.789,266,1.869,272,1.421,273,1.421,276,1.706,286,2.286,291,1.637,294,2.956,295,2.949,309,1.453,320,1.873,322,1.869,325,1.575,335,1.294,336,2.406,342,1.634,347,1.689,349,1.17,352,2.164,357,1.784,380,4.003,387,2.162,402,2.075,434,0.853,436,2.046,438,1.466,463,1.575,476,1.906,478,2.409,480,1.807,493,0.999,505,0.853,508,0.954,510,1.526,554,1.129,560,1.159,562,1.466,563,1.074,593,2.443,608,3.07,674,3.003,675,2.102,756,2.142,760,0.872,774,1.19,800,1.023,801,2.258,806,5.299,807,2.468,808,3.27,809,4.531,810,2.86,811,3.848,812,6.682,813,2.921,814,5.34,815,2.067,816,0.835,817,1.333,818,5.34,819,2.468,820,3.521,821,4.328,822,3.543,823,2.468,824,2.102,825,1.419,826,1.706,827,2.382,828,3.277,829,2.468,830,2.468,831,1.466,832,1.873,833,3.829,834,1.784,835,1.977,836,1.873,837,3.277,838,6.406,839,3.419,840,3.137,841,5.34,842,1.977,843,2.258,844,3.521,845,5.644,846,1.419,847,2.782,848,2.468,849,2.258,850,4.887,851,2.468,852,2.468,853,2.468,854,2.456,855,1.784,856,2.468,857,1.706,858,2.468,859,2.468,860,2.468,861,2.468,862,2.258,863,2.468,864,2.468,865,1.419,866,2.468,867,1.257,868,2.258,869,2.468,870,1.706,871,2.468,872,1.575,873,5.34,874,3.521,875,2.468,876,2.468,877,2.468,878,2.468,879,1.784,880,2.782,881,1.784,882,1.784,883,2.468,884,3.848,885,3.848,886,2.468,887,2.468,888,2.468,889,3.848,890,3.848,891,4.729,892,2.468,893,2.468,894,3.848,895,3.848,896,6.134,897,2.468,898,2.468,899,3.848,900,2.468,901,3.848,902,3.848,903,1.784,904,2.468,905,2.468,906,3.848,907,2.468,908,2.468,909,2.468,910,2.468,911,2.258,912,1.706,913,1.637,914,1.374,915,1.419,916,1.784,917,2.553,918,2.468,919,5.79,920,2.468,921,2.468,922,2.468,923,2.102,924,2.468,925,2.468,926,2.468,927,3.848,928,4.729,929,3.848,930,4.729,931,2.468,932,2.468,933,2.468,934,2.468,935,2.468,936,2.468,937,2.468,938,2.468,939,2.258,940,2.468,941,3.848,942,3.848,943,2.468,944,3.848,945,2.468,946,2.468,947,2.468,948,2.468,949,2.468,950,2.468,951,5.34,952,3.848,953,2.258,954,0.999,955,2.468,956,1.257,957,2.468,958,2.468,959,2.468,960,2.468,961,1.784,962,3.848,963,2.468,964,2.468,965,2.468,966,2.468,967,2.468,968,2.468,969,2.468,970,2.468,971,2.468,972,2.468,973,1.784,974,2.468,975,2.468,976,2.468,977,2.468,978,2.258,979,2.468,980,4.729,981,2.258,982,3.848,983,2.468,984,2.468,985,2.468,986,2.468,987,2.468,988,5.34,989,4.729,990,2.468,991,2.468,992,3.848,993,2.468,994,2.468,995,2.468,996,2.142,997,2.468,998,2.468,999,2.468,1000,2.468,1001,2.468,1002,2.468,1003,2.468,1004,2.468,1005,2.468,1006,1.466,1007,2.258,1008,2.468,1009,2.258]],["title/components/TsCardComponent.html",[80,0.537,1010,1.618]],["body/components/TsCardComponent.html",[2,0.04,3,0.029,4,0.028,5,0.054,7,0.574,8,2.013,11,0.424,12,0.66,13,1.363,14,1.302,16,0.988,18,1.755,19,0.008,20,0.851,21,0.849,22,1.135,25,0.079,27,0.136,33,0.064,34,1.127,37,0.071,39,0.004,40,0.004,43,1.061,46,1.209,49,0.871,50,2.215,51,1.862,52,1.817,54,1.632,58,1.295,62,1.614,66,0.625,72,1.682,80,1.003,81,2.083,90,1.533,92,3.608,93,1.061,96,1.085,108,1.325,109,1.236,114,1.32,120,1.181,123,1.193,124,1.074,128,0.754,129,1.137,145,0.97,157,1.862,158,0.835,165,0.909,166,1.111,168,1.596,173,0.784,194,3.086,195,1.36,196,1.36,201,2.119,202,1.325,203,2.341,205,1.616,210,1.302,224,1.413,225,1.61,226,1.773,227,1.353,229,1.297,231,1.651,233,0.971,234,1.382,235,1.382,236,1.193,237,1.193,245,1.437,247,1.583,249,0.377,256,1.111,257,1.02,260,1.357,266,1.218,277,4.288,292,2.4,299,2.912,300,0.97,319,2.77,322,1.517,336,0.97,347,1.218,349,1.537,365,1.926,368,1.751,369,1.323,376,4.305,387,1.69,402,0.928,414,1.111,419,1.137,438,1.631,471,1.014,499,3.878,504,1.194,505,1.953,510,0.784,512,4.075,518,2.4,523,2.665,585,1.898,622,0.474,629,1.037,674,1.085,677,0.801,683,2.134,699,1.111,751,1.137,757,0.801,769,2.77,771,1.439,790,1.085,800,1.137,815,1.098,816,1.413,827,1.862,846,1.578,847,3.654,854,4.085,855,4.084,879,1.984,880,3.019,881,3.654,882,4.084,912,1.898,913,1.821,914,1.528,915,1.578,916,1.984,917,2.77,954,1.111,956,2.877,1010,2.591,1011,1.475,1012,1.256,1013,2.744,1014,3.384,1015,2.4,1016,6.312,1017,6.86,1018,3.282,1019,4.713,1020,4.713,1021,4.713,1022,6.376,1023,6.376,1024,6.376,1025,6.376,1026,7.551,1027,6.376,1028,5.705,1029,6.376,1030,5.705,1031,3.098,1032,5.705,1033,7.385,1034,7.473,1035,4.713,1036,7.025,1037,4.713,1038,6.401,1039,3.17,1040,3.098,1041,3.098,1042,4.175,1043,3.098,1044,4.713,1045,3.225,1046,4.713,1047,2.254,1048,3.098,1049,4.713,1050,5.128,1051,4.625,1052,3.098,1053,5.169,1054,3.098,1055,3.098,1056,3.098,1057,3.098,1058,3.098,1059,3.098,1060,3.019,1061,3.098,1062,3.098,1063,3.098,1064,2.744,1065,3.098,1066,2.744,1067,3.098,1068,3.098,1069,3.098,1070,4.713,1071,3.098,1072,3.098,1073,1.751,1074,2.511,1075,2.511,1076,3.098,1077,3.098,1078,2.744,1079,3.098,1080,5.648,1081,4.175,1082,4.175,1083,4.175,1084,4.175,1085,4.175,1086,2.744,1087,2.338,1088,3.098,1089,1.821,1090,2.481,1091,2.4,1092,3.098,1093,2.511,1094,1.36,1095,2.338,1096,2.511,1097,2.199,1098,3.098,1099,2.481,1100,3.098,1101,2.481,1102,3.098,1103,2.511,1104,3.098,1105,3.098,1106,3.098,1107,4.713,1108,3.098,1109,4.713,1110,5.705,1111,4.713,1112,1.288,1113,2.584,1114,1.256,1115,1.256,1116,1.91,1117,1.256,1118,1.256,1119,1.165,1120,1.256,1121,1.165,1122,1.256,1123,1.111,1124,1.256,1125,1.137,1126,1.137,1127,1.256,1128,1.165,1129,1.256,1130,1.137,1131,1.256,1132,1.137,1133,1.256,1134,1.165,1135,1.256,1136,1.111,1137,1.91,1138,1.165,1139,1.165,1140,1.256,1141,1.111,1142,1.256,1143,1.137,1144,1.256,1145,1.137,1146,1.256,1147,1.137,1148,1.256,1149,1.137,1150,1.256,1151,1.256,1152,1.137,1153,1.256,1154,1.111,1155,1.256,1156,1.194,1157,1.256,1158,1.111,1159,1.137,1160,1.256,1161,1.194,1162,1.256,1163,1.037,1164,0.817,1165,1.256,1166,0.97,1167,1.256,1168,1.137,1169,1.256,1170,1.137,1171,1.256,1172,1.165,1173,1.256,1174,1.137,1175,1.256,1176,1.037,1177,1.256,1178,1.037,1179,1.91,1180,1.085,1181,1.256,1182,1.111,1183,1.256,1184,1.037,1185,1.256,1186,1.137,1187,1.256,1188,1.037,1189,1.256,1190,1.037,1191,1.111,1192,1.256,1193,1.137,1194,1.256,1195,1.256,1196,1.111,1197,1.256,1198,0.97,1199,1.256,1200,1.111,1201,1.224,1202,1.256]],["title/modules/TsCardModule.html",[619,0.618,634,3.203]],["body/modules/TsCardModule.html",[2,0.085,3,0.062,4,0.039,5,0.039,19,0.008,25,0.154,27,0.285,33,0.102,37,0.062,39,0.007,40,0.007,116,1.551,249,0.794,313,1.288,416,2.002,619,1.074,621,1.757,622,0.998,623,1.872,634,6.706,643,4.096,662,2.301,665,2.301,686,3.32,739,2.403,740,1.954,1010,3.388,1016,5.276,1174,3.469,1203,5.775,1204,5.775,1205,6.519,1206,5.775,1207,6.519,1208,5.92,1209,3.553,1210,6.95,1211,7.845]],["title/directives/TsCardTitleDirective.html",[257,0.722,1174,1.657]],["body/directives/TsCardTitleDirective.html",[2,0.078,3,0.057,4,0.036,5,0.053,11,0.814,12,1.039,14,1.693,16,0.914,18,1.637,19,0.008,20,0.674,21,0.739,22,1.438,25,0.124,27,0.26,33,0.067,37,0.084,39,0.006,40,0.006,58,0.871,79,3.085,80,0.961,81,4.988,90,1.127,109,1.087,118,1.957,120,1.212,124,1.161,169,3.085,225,1.265,233,1.527,238,1.839,241,2.79,247,1.771,257,1.456,272,1.946,273,1.946,274,2.845,322,1.764,392,3.987,412,6.302,464,5.264,757,1.537,760,2.322,956,3.347,1010,3.349,1016,4.988,1086,7.497,1174,2.724,1210,5.269,1212,8.879,1213,5.947,1214,8.462,1215,8.462,1216,5.42,1217,7.16,1218,5.947,1219,7.417,1220,6.7,1221,3.085,1222,5.334,1223,7.417,1224,5.947,1225,5.435,1226,5.947,1227,5.947,1228,6.571,1229,5.947,1230,7.417,1231,5.947,1232,5.269,1233,5.947]],["title/directives/TsCellDefDirective.html",[257,0.722,1176,1.51]],["body/directives/TsCellDefDirective.html",[2,0.069,3,0.05,4,0.032,5,0.032,7,0.644,12,1.135,13,1.224,14,1.207,16,0.851,19,0.008,20,0.779,25,0.115,27,0.232,33,0.095,34,1.045,37,0.087,39,0.006,40,0.006,46,0.986,49,1.487,50,1.425,62,1.811,68,2.321,72,1.396,74,1.585,114,0.902,120,1.324,124,1.197,145,1.656,166,3.145,168,1.559,200,2.049,204,1.671,225,1.469,226,1.536,233,1.417,245,0.982,249,1.068,257,1.403,266,1.367,342,1.99,347,1.779,361,3.997,418,3.358,489,2.68,510,1.339,519,3.197,547,1.935,757,1.367,809,3.395,810,2.967,815,1.958,827,2.09,833,4.471,846,2.694,903,3.388,1011,2.63,1015,3.896,1018,2.53,1047,2.09,1073,4.326,1091,3.505,1166,2.537,1176,2.561,1178,1.77,1184,2.561,1188,2.303,1190,1.77,1234,3.754,1235,4.326,1236,4.964,1237,5.145,1238,4.885,1239,4.885,1240,5.431,1241,5.617,1242,4.885,1243,5.431,1244,2.609,1245,3.754,1246,4.763,1247,3.754,1248,4.885,1249,5.431,1250,4.885,1251,3.754,1252,4.885,1253,3.752,1254,4.885,1255,3.388,1256,3.754,1257,3.754,1258,3.557,1259,3.109,1260,4.885,1261,3.754,1262,4.629,1263,3.754,1264,4.497,1265,1.99,1266,3.754,1267,2.09,1268,3.754]],["title/directives/TsCellDirective.html",[257,0.722,1178,1.51]],["body/directives/TsCellDirective.html",[2,0.068,3,0.049,4,0.031,5,0.045,7,0.63,11,0.709,12,1.169,13,1.334,14,1.549,16,0.899,18,1.424,19,0.008,20,0.857,21,0.676,22,0.921,25,0.113,27,0.227,33,0.094,34,1.022,37,0.088,39,0.006,40,0.006,46,0.972,49,1.454,50,1.394,62,1.772,68,2.271,72,1.366,74,1.551,114,0.883,120,1.313,124,1.185,145,1.62,166,3.264,168,1.548,200,2.037,204,1.838,225,1.46,226,1.581,233,1.397,245,0.96,249,1.043,257,1.395,266,1.337,342,1.946,347,1.956,361,3.734,418,3.322,489,2.377,510,1.31,519,3.151,547,1.454,757,1.337,809,2.553,810,2.956,815,1.944,827,2.045,833,4.445,846,2.635,903,3.315,1011,2.612,1015,4.665,1018,2.476,1047,2.045,1073,4.28,1091,3.855,1166,2.37,1176,2.271,1178,2.271,1184,2.533,1188,2.271,1190,1.732,1234,3.673,1235,3.836,1236,4.637,1237,4.563,1238,3.673,1239,4.816,1240,5.373,1241,5.734,1242,4.816,1243,5.373,1244,2.553,1245,3.673,1246,4.903,1247,4.816,1248,4.816,1249,5.373,1250,4.816,1251,3.673,1252,5.373,1253,3.698,1254,4.816,1255,3.315,1256,3.673,1257,3.673,1258,3.48,1259,3.041,1260,4.816,1261,3.673,1262,4.563,1263,3.673,1264,4.449,1265,1.946,1266,3.673,1267,2.045,1268,3.673,1269,5.175,1270,5.175]],["title/components/TsChart2Component.html",[80,0.537,1119,1.697]],["body/components/TsChart2Component.html",[0,2.129,2,0.042,3,0.03,4,0.029,5,0.052,7,0.587,9,1.527,11,0.437,12,0.675,13,1.383,14,1.101,16,0.927,18,1.782,19,0.008,20,0.859,21,0.908,22,1.152,23,1.575,25,0.133,27,0.14,28,1.509,29,2.147,33,0.066,34,0.631,35,0.714,37,0.062,39,0.004,40,0.004,43,1.093,49,0.897,50,0.86,51,1.905,52,1.858,58,1.018,64,1.382,66,0.644,69,1.614,72,0.842,79,2.006,80,0.969,90,0.605,93,1.093,96,1.118,108,1.633,109,1.172,118,1.533,120,1.195,123,1.471,124,0.5,128,0.929,134,2.496,140,1.509,145,1.819,157,1.261,158,0.86,162,1.509,165,0.936,166,2.322,167,1.983,168,1.202,169,2.006,170,2.699,171,1.639,172,2.176,173,0.808,188,0.86,193,1.068,201,1.899,202,1.355,203,1.771,204,1.775,205,1.078,210,1.478,224,1.445,225,1.613,226,1.772,227,1.384,229,1.327,231,1.689,233,0.993,234,1.414,235,1.414,236,1.22,237,1.22,238,1.195,241,1.814,247,1.922,249,0.789,250,2.186,257,0.771,266,0.825,267,2.24,272,1.578,273,1.578,276,2.954,296,2.834,299,1.814,300,0.999,322,1.97,335,3.007,336,0.999,337,2.628,342,1.814,347,1.246,349,2.105,369,2.482,387,1.145,392,2.866,394,4.354,414,1.145,419,1.172,443,2.134,471,1.044,480,2.417,505,1.477,510,1.22,560,2.693,563,1.23,622,0.489,629,1.068,665,0.936,674,1.118,677,0.825,683,1.068,699,1.145,713,2.959,718,4.354,720,6.248,722,5.516,725,3.422,726,4.214,727,3.208,728,4.385,751,1.172,757,0.825,760,1.509,771,1.482,790,1.118,800,1.172,815,1.124,816,1.445,817,2.307,868,3.909,954,1.145,1010,1.145,1011,0.999,1012,1.294,1060,4.147,1112,1.328,1113,2.624,1114,1.294,1115,1.294,1116,1.954,1117,1.294,1118,1.294,1119,2.614,1120,1.294,1121,1.201,1122,1.294,1123,1.145,1124,1.294,1125,1.172,1126,1.172,1127,1.294,1128,1.201,1129,1.294,1130,1.172,1131,1.294,1132,1.172,1133,1.294,1134,1.201,1135,1.294,1136,1.145,1137,1.954,1138,1.201,1139,1.201,1140,1.294,1141,1.145,1142,1.294,1143,1.172,1144,1.294,1145,1.172,1146,1.294,1147,1.172,1148,1.294,1149,1.172,1150,1.294,1151,1.294,1152,1.172,1153,1.294,1154,1.145,1155,1.294,1156,1.23,1157,1.294,1158,1.145,1159,1.172,1160,1.294,1161,1.23,1162,1.294,1163,1.068,1164,0.842,1165,1.294,1166,0.999,1167,1.294,1168,1.172,1169,1.294,1170,1.172,1171,1.294,1172,1.201,1173,1.294,1174,1.172,1175,1.294,1176,1.068,1177,1.294,1178,1.068,1179,1.954,1180,1.118,1181,1.294,1182,1.145,1183,1.294,1184,1.068,1185,1.294,1186,1.172,1187,1.294,1188,1.068,1189,1.294,1190,1.068,1191,1.145,1192,1.294,1193,1.172,1194,1.294,1195,1.294,1196,1.145,1197,1.294,1198,0.999,1199,1.294,1200,1.145,1201,1.261,1202,1.294,1216,3.088,1271,2.828,1272,7.589,1273,4.822,1274,3.638,1275,4.822,1276,4.822,1277,4.822,1278,5.81,1279,4.822,1280,4.822,1281,6.474,1282,6.474,1283,6.474,1284,4.271,1285,4.229,1286,5.81,1287,3.192,1288,6.474,1289,5.81,1290,4.822,1291,2.726,1292,2.866,1293,3.408,1294,4.822,1295,3.192,1296,4.296,1297,4.822,1298,7.434,1299,3.192,1300,3.638,1301,3.192,1302,4.822,1303,3.192,1304,3.192,1305,6.158,1306,3.192,1307,3.192,1308,5.103,1309,3.192,1310,3.192,1311,3.192,1312,3.192,1313,3.192,1314,3.907,1315,4.271,1316,2.147,1317,4.271,1318,2.828,1319,4.822,1320,3.192,1321,4.822,1322,3.192,1323,4.271,1324,4.271,1325,4.822,1326,2.828,1327,4.822,1328,3.192,1329,2.828,1330,1.876,1331,1.363,1332,3.192,1333,3.192,1334,1.74,1335,1.626,1336,2.828,1337,2.588,1338,3.192,1339,3.167,1340,5.147,1341,5.147,1342,5.147,1343,5.147,1344,3.192,1345,2.828,1346,2.828,1347,3.192,1348,3.192,1349,4.822,1350,4.822,1351,3.192,1352,2.828,1353,3.192,1354,4.822,1355,3.192,1356,2.828,1357,4.822,1358,4.822,1359,4.822,1360,3.192,1361,1.68,1362,2.588,1363,3.192,1364,7.589,1365,3.192,1366,3.192,1367,3.192,1368,3.192,1369,3.192,1370,3.192,1371,3.192,1372,3.192,1373,3.192,1374,3.192,1375,3.192]],["title/modules/TsChart2Module.html",[619,0.618,1376,3.405]],["body/modules/TsChart2Module.html",[0,1.977,2,0.084,3,0.061,4,0.039,5,0.039,19,0.008,25,0.153,27,0.283,29,4.341,33,0.102,37,0.061,39,0.007,40,0.007,75,1.893,116,1.536,120,1.055,249,1.086,299,2.428,313,1.275,416,1.994,436,1.568,619,1.068,621,1.739,622,0.988,623,1.853,662,2.288,665,2.288,718,6.09,720,5.886,725,4.582,726,2.913,728,5.886,739,2.389,740,1.935,1119,3.55,1308,5.245,1317,5.719,1318,5.719,1323,5.719,1324,5.719,1345,6.909,1376,7.023,1377,5.719,1378,5.719,1379,5.719,1380,5.719,1381,6.455,1382,7.799,1383,6.455,1384,4.341,1385,5.719]],["title/interfaces/TsChartAxis.html",[41,0.55,1386,2.551]],["body/interfaces/TsChartAxis.html",[2,0.039,3,0.028,4,0.018,5,0.018,9,1.431,11,0.41,12,0.877,16,0.868,19,0.008,20,0.807,21,0.905,22,1.533,25,0.05,30,1.024,33,0.096,39,0.004,40,0.004,41,1.02,45,1.437,46,1.293,54,1.092,58,1.317,59,2.738,73,2.404,74,1.877,75,1.638,90,0.87,106,2.556,109,0.438,114,0.783,120,0.489,123,1.878,124,1.294,128,1.002,155,1.685,160,1.213,171,1.162,198,3.55,200,1.092,207,2.014,245,1.323,260,1.992,265,2.042,266,0.773,267,1.153,268,1.346,281,3.019,314,2.264,315,2.416,331,1.524,349,0.806,365,1.521,369,3.044,422,2.953,430,1.313,434,1.406,436,1.802,443,1.099,476,1.313,489,1.608,493,1.646,503,1.213,505,0.916,510,2.12,547,2.496,563,1.153,574,2.908,589,2.385,606,1.213,609,1.278,614,1.313,622,0.855,677,1.186,713,3.44,726,3.455,727,3.128,756,2.264,810,1.502,815,1.459,816,1.376,825,3.189,831,1.575,865,1.524,867,1.35,956,3.679,1006,2.94,1014,2.264,1045,3.157,1090,2.416,1094,3.257,1099,4.219,1101,3.556,1164,1.211,1221,2.323,1265,1.125,1267,1.182,1285,2.264,1291,4.195,1292,2.264,1293,1.575,1331,1.961,1334,5.056,1335,4.69,1339,2.502,1361,1.575,1386,4.03,1387,1.692,1388,4.734,1389,3.68,1390,3.157,1391,2.264,1392,3.836,1393,3.157,1394,3.54,1395,4.361,1396,3.68,1397,4.361,1398,3.516,1399,3.297,1400,3.282,1401,2.996,1402,4.03,1403,2.698,1404,1.631,1405,3.54,1406,3.41,1407,1.692,1408,1.692,1409,1.631,1410,4.249,1411,3.157,1412,1.692,1413,1.692,1414,1.692,1415,1.692,1416,1.692,1417,1.692,1418,1.692,1419,1.692,1420,2.996,1421,4.264,1422,1.692,1423,1.692,1424,4.531,1425,2.595,1426,1.692,1427,1.692,1428,1.692,1429,4.045,1430,3.157,1431,3.157,1432,1.692,1433,2.451,1434,2.595,1435,1.759,1436,2.416,1437,3.819,1438,3.157,1439,3.157,1440,3.282,1441,3.97,1442,3.282,1443,3.282,1444,3.282,1445,3.282,1446,1.759,1447,1.814,1448,2.264,1449,2.416,1450,2.698,1451,2.698,1452,2.698,1453,2.698,1454,2.698,1455,2.698,1456,2.698,1457,3.54,1458,3.157,1459,1.631,1460,1.759,1461,2.502,1462,3.282,1463,1.575,1464,1.759,1465,3.282,1466,3.68,1467,1.575,1468,1.631,1469,1.631,1470,2.595,1471,1.692,1472,1.692,1473,1.759,1474,2.52,1475,1.39,1476,1.631,1477,1.692,1478,4.71,1479,2.416,1480,2.698,1481,1.692,1482,2.698,1483,2.502,1484,2.698,1485,2.502,1486,1.692]],["title/interfaces/TsChartAxisPlotBand.html",[41,0.55,1394,2.551]],["body/interfaces/TsChartAxisPlotBand.html",[2,0.039,3,0.029,4,0.018,5,0.018,7,0.368,9,1.444,11,0.413,12,0.881,16,0.87,19,0.008,20,0.768,21,0.882,22,1.366,25,0.05,30,1.033,33,0.097,39,0.004,40,0.004,41,1.022,45,1.446,46,1.294,54,1.099,58,1.319,59,2.275,73,2.351,74,1.885,75,1.647,90,0.876,106,2.669,109,0.442,114,0.788,120,0.493,123,1.884,124,1.297,128,0.898,155,1.697,160,1.223,171,1.169,198,3.561,200,1.099,207,2.028,245,1.327,260,2.036,265,2.113,266,0.78,267,1.163,268,1.355,281,3.023,314,2.279,315,2.432,331,1.537,349,0.813,365,1.528,369,3.055,422,2.96,430,1.324,434,1.415,436,2.037,443,1.108,476,1.324,489,1.619,493,1.657,503,1.223,505,0.924,510,2.098,547,2.499,563,1.163,574,2.921,589,2.398,606,1.223,609,1.289,614,2.028,622,0.86,677,1.194,713,3.203,726,3.465,727,3.139,756,2.279,810,1.512,815,1.466,816,1.385,825,3.203,831,1.589,865,1.537,867,1.362,956,3.359,1006,2.955,1014,1.489,1045,3.174,1090,2.432,1094,3.525,1099,4.228,1101,3.569,1164,1.219,1221,2.335,1265,1.135,1267,1.193,1285,2.279,1291,4.208,1292,2.279,1293,1.589,1331,1.973,1334,5.034,1335,4.694,1339,2.518,1361,1.589,1386,3.833,1387,1.706,1388,4.341,1389,1.774,1390,2.612,1391,1.489,1392,2.83,1393,2.612,1394,3.174,1395,4.801,1396,3.697,1397,4.801,1398,3.528,1399,3.311,1400,3.299,1401,2.686,1402,3.174,1403,2.715,1404,1.645,1405,3.556,1406,3.421,1407,1.706,1408,1.706,1409,1.645,1410,4.254,1411,3.174,1412,1.706,1413,1.706,1414,1.706,1415,1.706,1416,1.706,1417,1.706,1418,1.706,1419,1.706,1420,3.009,1421,4.272,1422,1.706,1423,1.706,1424,4.541,1425,2.612,1426,1.706,1427,1.706,1428,1.706,1429,4.057,1430,3.174,1431,3.174,1432,1.706,1433,2.976,1434,3.556,1435,1.774,1436,2.432,1437,3.833,1438,3.174,1439,3.174,1440,3.299,1441,3.985,1442,3.299,1443,3.299,1444,3.299,1445,3.299,1446,1.774,1447,1.826,1448,2.279,1449,2.432,1450,2.715,1451,2.715,1452,2.715,1453,2.715,1454,2.715,1455,2.715,1456,2.715,1457,3.556,1458,3.174,1459,1.645,1460,1.774,1461,2.518,1462,3.299,1463,1.589,1464,1.774,1465,3.299,1466,3.697,1467,1.589,1468,1.645,1469,1.645,1470,2.612,1471,1.706,1472,1.706,1473,1.774,1474,2.533,1475,1.402,1476,1.645,1477,1.706,1478,4.721,1479,2.432,1480,2.715,1481,1.706,1482,2.715,1483,2.518,1484,2.715,1485,2.518,1486,1.706]],["title/interfaces/TsChartDataItem.html",[41,0.55,1461,2.459]],["body/interfaces/TsChartDataItem.html",[2,0.038,3,0.028,4,0.017,5,0.017,7,0.355,9,1.392,11,0.399,12,0.934,16,0.874,19,0.008,20,0.882,21,0.899,22,1.574,25,0.049,30,0.996,33,0.096,39,0.004,40,0.004,41,1.014,45,1.932,46,1.304,54,1.069,58,1.322,59,2.224,73,2.517,74,1.85,75,1.61,90,0.852,106,2.528,109,0.426,114,0.766,120,0.476,123,1.86,124,1.286,128,0.987,155,2.266,160,1.821,171,1.137,198,3.515,200,1.069,207,2.709,245,1.408,260,1.926,265,2.022,266,0.752,267,1.122,268,1.318,281,2.916,314,2.217,315,2.365,331,1.482,349,0.784,365,1.62,369,3.011,422,2.992,430,1.277,434,1.376,436,1.932,443,1.069,476,1.277,489,1.923,493,1.611,503,1.821,505,0.891,510,2.107,547,2.565,563,1.122,574,2.866,589,2.344,606,1.821,609,1.919,614,1.277,622,0.945,677,1.161,713,3.143,726,3.514,727,3.33,756,2.217,810,1.47,815,1.438,816,1.347,825,3.143,831,2.365,865,2.288,867,2.028,956,3.316,1006,3.511,1014,1.436,1045,3.103,1090,2.365,1094,3.094,1099,4.187,1101,3.511,1164,1.186,1221,2.567,1265,1.095,1267,1.15,1285,2.707,1291,4.577,1292,2.217,1293,2.365,1331,1.919,1334,4.986,1335,4.705,1339,2.449,1361,1.532,1386,3.771,1387,1.646,1388,4.29,1389,1.711,1390,2.54,1391,1.436,1392,2.753,1393,2.54,1394,2.54,1395,4.143,1396,3.226,1397,4.143,1398,3.29,1399,2.889,1400,2.641,1401,2.626,1402,3.103,1403,2.641,1404,1.586,1405,3.489,1406,3.372,1407,1.646,1408,1.646,1409,1.586,1410,4.33,1411,3.103,1412,1.646,1413,1.646,1414,1.646,1415,1.646,1416,1.646,1417,1.646,1418,1.646,1419,1.646,1420,2.952,1421,4.286,1422,1.646,1423,1.646,1424,4.497,1425,3.489,1426,1.646,1427,1.646,1428,1.646,1429,4.005,1430,3.103,1431,3.103,1432,1.646,1433,2.709,1434,2.54,1435,1.711,1436,2.365,1437,3.771,1438,3.103,1439,3.103,1440,3.226,1441,3.92,1442,3.226,1443,3.226,1444,3.226,1445,3.226,1446,1.711,1447,1.776,1448,2.217,1449,2.365,1450,2.641,1451,2.641,1452,2.641,1453,2.641,1454,2.641,1455,2.641,1456,2.641,1457,3.489,1458,3.771,1459,1.586,1460,1.711,1461,2.991,1462,4.318,1463,2.365,1464,3.627,1465,3.92,1466,4.577,1467,2.365,1468,2.449,1469,2.449,1470,2.54,1471,1.646,1472,1.646,1473,1.711,1474,2.477,1475,1.352,1476,1.586,1477,1.646,1478,4.675,1479,2.365,1480,2.641,1481,1.646,1482,2.641,1483,2.449,1484,2.641,1485,2.449,1486,1.646]],["title/classes/TsChartEvent.html",[37,0.043,1487,3.203]],["body/classes/TsChartEvent.html",[2,0.087,3,0.063,4,0.04,5,0.053,7,0.812,11,0.913,12,1.114,14,1.815,16,0.892,18,1.834,19,0.008,20,0.755,21,0.846,22,1.186,25,0.111,33,0.075,37,0.084,39,0.007,40,0.007,64,2.26,124,1.043,162,2.489,210,1.521,268,1.955,336,2.489,1404,5.066,1475,3.692,1487,5.643,1488,6.664,1489,7.95,1490,7.094,1491,8.799,1492,6.664,1493,7.95,1494,6.664,1495,5.904,1496,6.664,1497,6.664]],["title/interfaces/TsChartEventOptions.html",[41,0.55,1498,3.997]],["body/interfaces/TsChartEventOptions.html",[2,0.069,3,0.05,4,0.032,5,0.032,7,0.644,11,0.724,12,0.964,19,0.008,21,0.915,22,1.614,25,0.135,28,2.153,33,0.078,34,1.701,39,0.006,40,0.006,41,0.838,45,2.629,46,1.308,56,2.41,59,2.142,64,2.23,90,1.002,109,1.12,123,2.25,124,1.315,152,2.607,157,2.088,268,2.376,300,1.654,310,3.773,336,2.394,352,2.142,368,2.988,387,1.895,447,4.58,504,3.122,578,2.988,664,3.751,726,3.886,808,4.214,1015,2.691,1121,2.877,1180,2.679,1182,2.743,1335,3.895,1390,4.58,1392,5.446,1410,3.659,1472,2.988,1477,4.749,1486,4.58,1487,3.751,1498,7.176,1499,5.285,1500,5.285,1501,6.879,1502,3.988,1503,4.682,1504,4.682,1505,4.284,1506,5.285,1507,5.285,1508,5.285,1509,5.285,1510,5.285,1511,5.285,1512,5.285,1513,4.682,1514,4.682,1515,4.682,1516,4.682,1517,5.577,1518,5.577,1519,5.285,1520,4.682,1521,5.285,1522,6.879,1523,7.648,1524,7.648,1525,5.285,1526,6.2,1527,5.285,1528,6.879,1529,7.648,1530,5.285,1531,7.648,1532,5.285,1533,6.879,1534,5.285,1535,5.285,1536,6.879,1537,5.285]],["title/interfaces/TsChartMapTooltip.html",[41,0.55,1457,2.551]],["body/interfaces/TsChartMapTooltip.html",[2,0.038,3,0.028,4,0.018,5,0.018,7,0.359,9,1.408,11,0.403,12,0.87,16,0.865,19,0.008,20,0.802,21,0.873,22,1.529,25,0.049,30,1.008,33,0.096,39,0.004,40,0.004,41,1.017,45,1.419,46,1.312,54,1.078,58,1.324,59,2.24,73,2.333,74,2.009,75,1.821,90,1.048,106,2.539,109,0.431,114,0.773,120,0.481,123,1.978,124,1.29,128,0.884,155,1.664,160,1.193,171,1.399,198,3.884,200,1.078,207,1.989,245,1.414,260,1.931,265,2.03,266,0.761,267,1.135,268,1.329,281,2.923,314,2.727,315,2.91,331,2.308,349,0.793,365,1.508,369,3.253,422,2.939,430,1.292,434,1.693,436,1.792,443,1.081,476,1.292,489,1.588,493,1.982,503,1.193,505,0.901,510,2.135,547,2.502,563,1.135,574,3.537,589,2.863,606,1.193,609,1.257,614,1.292,622,0.846,677,1.428,713,3.162,726,3.526,727,3.108,756,2.236,810,1.483,815,1.65,816,1.656,825,3.414,831,1.55,865,1.499,867,1.328,956,3.329,1006,2.91,1014,1.452,1045,3.51,1090,2.386,1094,3.108,1099,4.274,1101,3.884,1164,1.196,1221,2.299,1265,1.107,1267,1.163,1285,2.236,1291,4.171,1292,2.236,1293,1.55,1331,1.936,1334,5.022,1335,4.717,1339,2.471,1361,1.55,1386,3.79,1387,1.664,1388,4.306,1389,1.73,1390,2.563,1391,1.452,1393,2.563,1394,2.563,1395,4.162,1396,3.249,1397,4.162,1398,3.307,1399,2.91,1400,2.664,1401,2.644,1402,3.125,1403,2.664,1404,1.604,1405,3.79,1406,3.388,1407,1.664,1408,1.664,1409,1.604,1410,4.293,1411,3.125,1412,1.664,1413,1.664,1414,1.664,1415,1.664,1416,1.664,1417,1.664,1418,1.664,1419,1.664,1420,3.207,1421,4.408,1422,1.664,1423,1.664,1424,4.718,1425,2.563,1426,1.664,1427,1.664,1428,1.664,1429,4.021,1430,3.125,1431,3.125,1432,1.664,1433,2.426,1434,2.563,1435,1.73,1436,2.386,1437,3.79,1438,3.51,1439,3.125,1440,3.649,1441,4.336,1442,3.649,1443,3.649,1444,3.649,1445,3.649,1446,1.73,1447,2.184,1448,2.727,1449,2.91,1450,3.249,1451,3.94,1452,3.249,1453,3.94,1454,3.249,1455,3.249,1456,3.94,1457,4.003,1458,3.125,1459,1.604,1460,1.73,1461,2.471,1462,3.249,1463,1.55,1464,1.73,1465,3.249,1466,3.649,1467,1.55,1468,1.604,1469,1.604,1470,2.563,1471,1.664,1472,1.664,1473,1.73,1474,2.494,1475,1.367,1476,1.604,1477,1.664,1478,4.689,1479,2.386,1480,2.664,1481,1.664,1482,2.664,1483,2.471,1484,2.664,1485,2.471,1486,1.664]],["title/modules/TsChartModule.html",[619,0.618,635,3.203]],["body/modules/TsChartModule.html",[0,1.893,1,6.764,2,0.081,3,0.059,4,0.037,5,0.037,9,3.934,19,0.008,25,0.151,27,0.271,29,4.157,33,0.105,37,0.059,39,0.006,40,0.006,64,1.47,75,2.228,116,1.47,249,1.073,313,1.221,416,1.956,436,1.501,619,1.04,621,1.666,622,0.947,623,1.775,635,6.726,662,2.228,665,2.228,739,2.326,740,1.853,1121,3.53,1180,3.288,1182,3.366,1308,4.157,1384,4.157,1385,5.476,1495,5.476,1502,4.665,1503,6.729,1504,6.729,1505,6.158,1538,5.476,1539,5.476,1540,5.476,1541,5.476,1542,6.181,1543,7.596,1544,6.181,1545,6.181]],["title/interfaces/TsChartObject.html",[41,0.55,1404,2.459]],["body/interfaces/TsChartObject.html",[2,0.041,3,0.03,4,0.019,5,0.019,9,1.494,12,0.664,16,0.877,19,0.008,20,0.78,21,0.85,22,1.29,25,0.052,30,1.069,33,0.097,39,0.004,40,0.004,41,1.029,45,1.484,46,1.29,54,1.128,58,1.324,59,2.323,73,2.377,74,1.918,75,1.681,90,0.899,106,2.599,109,0.457,114,0.809,120,0.51,123,1.906,124,1.307,128,0.917,155,1.741,160,1.265,171,1.2,198,3.603,200,1.364,207,2.081,245,1.345,260,1.959,265,2.073,266,0.807,267,1.203,268,1.391,281,2.926,314,2.339,315,2.496,331,1.59,349,0.841,365,1.555,369,3.095,422,2.989,430,1.37,434,1.452,436,1.829,443,1.146,476,1.37,489,1.661,493,1.7,503,1.265,505,0.956,510,2.114,547,2.511,563,1.203,574,2.973,589,2.448,606,1.265,609,1.333,614,1.37,622,0.878,677,1.225,713,3.26,726,3.502,727,3.181,756,2.339,810,1.551,815,1.492,816,1.421,825,3.26,831,1.644,865,1.59,867,1.409,956,3.399,1006,3.018,1014,1.54,1045,3.241,1090,2.496,1094,3.181,1099,4.266,1101,3.624,1164,1.251,1221,2.384,1265,1.174,1267,1.234,1285,2.339,1291,4.258,1292,2.339,1293,1.644,1331,2.025,1334,5.02,1335,4.709,1339,2.584,1361,1.644,1386,3.892,1387,1.765,1388,4.387,1389,1.835,1390,2.681,1391,1.54,1393,2.681,1394,2.681,1395,4.259,1396,3.369,1397,4.259,1398,3.395,1399,3.018,1400,2.787,1401,2.742,1402,3.241,1403,3.369,1404,2.584,1405,3.619,1406,3.467,1407,1.765,1408,1.765,1409,1.702,1410,4.274,1411,3.241,1412,1.765,1413,1.765,1414,1.765,1415,1.765,1416,1.765,1417,1.765,1418,1.765,1419,1.765,1420,3.062,1421,4.303,1422,1.765,1423,1.765,1424,4.582,1425,2.681,1426,1.765,1427,1.765,1428,1.765,1429,4.105,1430,3.241,1431,3.241,1432,1.765,1433,2.516,1434,2.681,1435,1.835,1436,2.496,1437,3.892,1438,3.241,1439,3.241,1440,3.369,1441,4.046,1442,3.369,1443,3.369,1444,3.369,1445,3.369,1446,1.835,1447,1.874,1448,2.339,1449,2.496,1450,2.787,1451,2.787,1452,2.787,1453,2.787,1454,2.787,1455,2.787,1456,2.787,1457,3.619,1458,3.241,1459,1.702,1460,1.835,1461,2.584,1462,3.369,1463,1.644,1464,1.835,1465,3.369,1466,3.762,1467,1.644,1468,1.702,1469,1.702,1470,2.681,1471,1.765,1472,1.765,1473,1.835,1474,2.587,1475,1.45,1476,1.702,1477,1.765,1478,4.763,1479,2.496,1480,2.787,1481,1.765,1482,2.787,1483,2.584,1484,2.787,1485,2.584,1486,1.765]],["title/interfaces/TsChartOptions.html",[41,0.55,1471,2.551]],["body/interfaces/TsChartOptions.html",[2,0.038,3,0.027,4,0.017,5,0.017,7,0.351,9,1.378,11,0.395,12,0.86,16,0.861,19,0.008,20,0.752,21,0.918,22,1.614,25,0.048,30,1.526,33,0.096,39,0.004,40,0.004,41,1.023,45,1.396,46,1.277,54,1.061,58,1.316,59,2.21,73,2.316,74,1.84,75,1.8,90,0.845,106,2.517,109,0.422,114,0.76,120,0.729,123,1.853,124,1.283,128,0.872,155,1.637,160,1.168,171,1.128,198,3.502,200,1.061,207,1.957,245,1.303,260,1.921,265,2.015,266,0.745,267,1.111,268,1.8,281,2.872,314,2.199,315,2.347,331,1.467,349,0.776,365,1.491,369,2.998,422,2.92,430,1.264,434,1.365,436,1.778,443,1.058,476,1.264,489,1.562,493,1.599,503,1.168,505,0.882,510,2.102,547,2.483,563,1.111,574,2.851,589,2.329,606,1.168,609,1.231,614,1.264,622,1.075,677,1.152,713,3.126,726,3.579,727,3.407,756,2.199,810,1.459,815,1.43,816,1.336,825,3.381,831,1.517,865,1.467,867,1.3,956,3.644,1006,2.871,1014,1.421,1045,3.47,1090,2.347,1094,3.081,1099,4.251,1101,3.696,1164,1.176,1221,2.268,1265,1.084,1267,1.138,1285,2.199,1291,4.139,1292,2.199,1293,1.517,1331,1.904,1334,5.055,1335,4.692,1339,2.43,1361,1.517,1386,4.565,1387,1.629,1388,4.389,1389,1.693,1390,3.753,1391,1.421,1392,4.859,1393,2.521,1394,2.521,1395,4.126,1396,3.205,1397,4.126,1398,3.275,1399,2.871,1400,2.62,1401,2.609,1402,3.083,1403,2.62,1404,1.57,1405,3.47,1406,3.358,1407,1.629,1408,1.629,1409,1.57,1410,4.246,1411,3.753,1412,1.629,1413,1.629,1414,1.629,1415,1.629,1416,1.629,1417,1.629,1418,1.629,1419,1.629,1420,2.936,1421,4.391,1422,1.629,1423,1.629,1424,4.484,1425,2.521,1426,1.629,1427,1.629,1428,1.629,1429,3.99,1430,3.083,1431,3.753,1432,1.629,1433,2.393,1434,2.521,1435,1.693,1436,2.347,1437,4.565,1438,3.47,1439,3.969,1440,3.205,1441,3.902,1442,3.205,1443,3.205,1444,3.205,1445,3.205,1446,1.693,1447,1.762,1448,2.199,1449,2.347,1450,2.62,1451,2.62,1452,2.62,1453,2.62,1454,2.62,1455,2.62,1456,2.62,1457,4.139,1458,3.083,1459,1.57,1460,1.693,1461,2.43,1462,3.205,1463,1.517,1464,1.693,1465,3.205,1466,3.608,1467,1.517,1468,1.57,1469,1.57,1470,2.521,1471,2.521,1472,3.47,1473,3.608,1474,2.461,1475,2.071,1476,2.43,1477,3.47,1478,4.662,1479,2.347,1480,4.126,1481,2.521,1482,3.608,1483,3.346,1484,3.608,1485,3.346,1486,3.47]],["title/directives/TsChartPointDirective.html",[257,0.722,1180,1.581]],["body/directives/TsChartPointDirective.html",[2,0.074,3,0.054,4,0.034,5,0.054,13,1.424,16,0.935,19,0.008,21,0.887,25,0.12,27,0.247,30,1.934,33,0.064,35,1.991,37,0.054,39,0.006,40,0.006,56,2.91,64,2.144,80,0.672,86,4.06,123,1.43,128,1.148,133,3.151,152,4.323,167,2.918,171,2.303,205,1.263,225,1.417,226,1.361,257,1.329,347,1.46,352,3.552,368,4.06,383,5.32,387,2.026,503,3.367,504,3.474,606,2.29,757,1.46,760,2.6,827,2.232,835,4.01,954,2.831,1156,2.178,1180,2.516,1265,2.125,1398,4.097,1410,4.543,1449,4.373,1487,4.01,1502,4.263,1517,5.822,1518,5.822,1520,7.358,1546,5.649,1547,5.991,1548,5.649,1549,5.822,1550,5.649,1551,5.649,1552,5.649,1553,8.764,1554,5.649,1555,5.649,1556,5.649,1557,3.079,1558,3.079]],["title/directives/TsChartSeriesDirective.html",[257,0.722,1182,1.618]],["body/directives/TsChartSeriesDirective.html",[2,0.067,3,0.049,4,0.031,5,0.054,11,0.707,12,0.949,13,1.415,16,0.939,19,0.008,20,0.768,21,0.891,23,2.548,25,0.126,27,0.226,28,2.122,30,1.769,33,0.058,35,1.978,37,0.049,39,0.006,40,0.006,59,3.38,63,2.612,64,2.129,79,2.819,80,0.614,86,3.832,123,1.308,124,0.808,134,2.076,155,3.142,167,2.911,171,2.303,205,1.155,225,1.37,226,1.284,257,1.284,342,2.549,347,1.335,365,1.646,368,3.832,387,1.853,503,3.255,504,3.549,527,3.983,563,3.095,606,2.094,622,1.355,726,3.624,757,1.335,817,3.841,827,2.041,835,3.667,867,3.059,914,3.961,915,3.451,954,2.713,1039,4.558,1156,1.991,1180,2.998,1182,2.43,1265,1.943,1335,4.747,1401,3.242,1410,3.841,1447,2.678,1487,3.667,1502,3.898,1505,4.188,1513,6.701,1514,6.701,1515,7.387,1516,6.701,1517,6.132,1518,6.132,1547,5.971,1549,5.495,1557,2.816,1558,2.816,1559,5.166,1560,4.811,1561,5.7,1562,5.495,1563,5.166,1564,4.341,1565,5.166,1566,5.166,1567,5.166,1568,6.777,1569,5.166,1570,7.114,1571,5.166,1572,5.166,1573,5.166,1574,6.777,1575,5.166,1576,5.166]],["title/interfaces/TsChartTitle.html",[41,0.55,1437,2.551]],["body/interfaces/TsChartTitle.html",[2,0.04,3,0.029,4,0.019,5,0.019,7,0.377,9,1.479,11,0.423,12,0.892,16,0.875,19,0.008,20,0.776,21,0.856,22,1.285,25,0.052,30,1.058,33,0.097,39,0.004,40,0.004,41,1.027,45,1.473,46,1.298,54,1.119,58,1.323,59,2.581,73,2.369,74,1.909,75,1.671,90,0.892,106,2.589,109,0.453,114,0.803,120,0.505,123,1.9,124,1.304,128,0.911,155,1.728,160,1.253,171,1.191,198,3.591,200,1.119,207,2.065,245,1.34,260,1.955,265,2.261,266,0.799,267,1.192,268,1.38,281,2.919,314,2.321,315,2.477,331,1.574,349,0.833,365,1.547,369,3.084,422,2.981,430,1.357,434,1.441,436,1.823,443,1.135,476,1.357,489,1.649,493,1.688,503,1.253,505,0.947,510,2.109,547,2.508,563,1.192,574,2.958,589,2.434,606,1.253,609,1.32,614,1.357,622,0.872,677,1.216,713,3.49,726,3.491,727,3.168,756,2.321,810,1.54,815,1.484,816,1.41,825,3.243,831,1.627,865,1.574,867,1.395,956,3.576,1006,2.999,1014,1.525,1045,3.221,1090,2.477,1094,3.168,1099,4.255,1101,3.608,1164,1.242,1221,2.37,1265,1.163,1267,1.222,1285,2.321,1291,4.244,1292,2.321,1293,1.627,1331,2.01,1334,5.045,1335,4.705,1339,2.565,1361,1.627,1386,3.875,1387,1.748,1388,4.374,1389,1.817,1390,2.661,1391,1.525,1393,2.661,1394,2.661,1395,4.243,1396,3.349,1397,4.243,1398,3.381,1399,2.999,1400,2.766,1401,3.047,1402,3.221,1403,2.766,1404,1.685,1405,3.601,1406,3.454,1407,1.748,1408,1.748,1409,1.685,1410,4.268,1411,3.221,1412,1.748,1413,1.748,1414,1.748,1415,1.748,1416,1.748,1417,1.748,1418,1.748,1419,1.748,1420,3.047,1421,4.294,1422,1.748,1423,1.748,1424,4.57,1425,2.661,1426,1.748,1427,1.748,1428,1.748,1429,4.091,1430,3.221,1431,3.221,1432,1.748,1433,2.501,1434,2.661,1435,1.817,1436,2.999,1437,4.082,1438,3.221,1439,3.221,1440,3.349,1441,4.028,1442,3.349,1443,3.349,1444,3.349,1445,3.349,1446,1.817,1447,1.86,1448,2.321,1449,2.477,1450,2.766,1451,2.766,1452,2.766,1453,2.766,1454,2.766,1455,2.766,1456,2.766,1457,3.601,1458,3.221,1459,1.685,1460,1.817,1461,2.565,1462,3.349,1463,1.627,1464,1.817,1465,3.349,1466,3.743,1467,1.627,1468,1.685,1469,1.685,1470,2.661,1471,1.748,1472,1.748,1473,1.817,1474,2.571,1475,1.436,1476,1.685,1477,1.748,1478,4.751,1479,2.477,1480,2.766,1481,1.748,1482,2.766,1483,2.565,1484,2.766,1485,2.565,1486,1.748]],["title/interfaces/TsChartTooltip.html",[41,0.55,1439,2.551]],["body/interfaces/TsChartTooltip.html",[2,0.039,3,0.028,4,0.018,5,0.018,7,0.36,9,1.412,11,0.404,12,0.871,16,0.865,19,0.008,20,0.76,21,0.874,22,1.53,25,0.049,30,1.011,33,0.096,39,0.004,40,0.004,41,1.017,45,1.422,46,1.312,54,1.081,58,1.324,59,2.244,73,2.335,74,2.012,75,1.824,90,1.049,106,2.542,109,0.433,114,0.775,120,0.483,123,1.93,124,1.29,128,0.886,155,1.668,160,1.197,171,1.402,198,3.533,200,1.081,207,1.994,245,1.415,260,1.933,265,2.032,266,0.763,267,1.138,268,1.332,281,2.925,314,2.732,315,2.915,331,1.503,349,0.796,365,1.51,369,3.256,422,2.941,430,1.296,434,1.696,436,1.793,443,1.084,476,1.296,489,1.592,493,1.986,503,1.197,505,0.904,510,2.137,547,2.503,563,1.138,574,3.541,589,2.656,606,1.197,609,1.261,614,1.296,622,0.848,677,1.431,713,3.167,726,3.529,727,3.111,756,2.241,810,1.487,815,1.652,816,1.66,825,3.419,831,1.554,865,1.503,867,1.332,956,3.333,1006,2.915,1014,1.456,1045,3.516,1090,2.392,1094,3.111,1099,4.277,1101,3.888,1164,1.199,1221,2.303,1265,1.11,1267,1.167,1285,2.241,1291,4.175,1292,2.241,1293,1.554,1331,1.94,1334,5.024,1335,4.718,1339,2.476,1361,1.554,1386,3.795,1387,1.669,1388,4.31,1389,1.735,1390,2.568,1391,1.456,1393,2.568,1394,2.568,1395,4.167,1396,3.255,1397,4.167,1398,3.312,1399,2.915,1400,2.67,1401,2.649,1402,3.131,1403,2.67,1404,1.609,1405,3.795,1406,3.392,1407,1.669,1408,1.669,1409,1.609,1410,4.294,1411,3.131,1412,1.669,1413,1.669,1414,1.669,1415,1.669,1416,1.669,1417,1.669,1418,1.669,1419,1.669,1420,3.212,1421,4.41,1422,1.669,1423,1.669,1424,4.721,1425,2.568,1426,1.669,1427,1.669,1428,1.669,1429,4.025,1430,3.131,1431,3.131,1432,1.669,1433,2.43,1434,2.568,1435,1.735,1436,2.392,1437,3.795,1438,3.516,1439,3.516,1440,3.655,1441,4.341,1442,3.655,1443,3.655,1444,3.655,1445,3.655,1446,3.655,1447,2.188,1448,2.732,1449,2.915,1450,3.255,1451,3.946,1452,3.255,1453,3.946,1454,3.255,1455,3.255,1456,3.946,1457,3.516,1458,3.131,1459,1.609,1460,1.735,1461,2.476,1462,3.255,1463,1.554,1464,1.735,1465,3.255,1466,3.655,1467,1.554,1468,1.609,1469,1.609,1470,2.568,1471,1.669,1472,1.669,1473,1.735,1474,2.499,1475,1.371,1476,1.609,1477,1.669,1478,4.693,1479,2.392,1480,2.67,1481,1.669,1482,2.67,1483,2.476,1484,2.67,1485,2.476,1486,1.669]],["title/interfaces/TsChartZone.html",[41,0.55,1458,2.551]],["body/interfaces/TsChartZone.html",[2,0.04,3,0.029,4,0.018,5,0.018,7,0.37,9,1.454,11,0.416,12,0.884,16,0.891,19,0.008,20,0.77,21,0.873,22,1.477,25,0.051,30,1.041,33,0.097,39,0.004,40,0.004,41,1.024,45,1.454,46,1.303,54,1.105,58,1.34,59,2.285,73,2.357,74,1.892,75,1.654,90,0.88,106,2.572,109,0.445,114,0.792,120,0.497,123,1.889,124,1.299,128,0.902,155,1.706,160,1.232,171,1.176,198,3.57,200,1.341,207,2.039,245,1.331,260,1.999,265,2.053,266,1.201,267,1.172,268,1.363,281,2.908,314,2.292,315,2.446,331,1.548,349,0.819,365,1.533,369,3.063,422,2.966,430,2.039,434,1.423,436,1.812,443,1.706,476,1.334,489,1.627,493,1.666,503,1.232,505,0.931,510,2.101,547,2.502,563,1.172,574,2.932,589,2.408,606,1.232,609,1.298,614,1.334,622,0.863,677,1.201,713,3.215,726,3.473,727,3.148,756,2.292,810,1.52,815,1.471,816,1.392,825,3.215,831,1.6,865,1.548,867,1.372,956,3.367,1006,2.968,1014,1.499,1045,3.188,1090,2.446,1094,3.591,1099,4.236,1101,3.581,1164,1.226,1221,2.626,1265,1.143,1267,1.201,1285,2.292,1291,4.55,1292,2.292,1293,1.6,1331,1.984,1334,5.007,1335,4.737,1339,2.532,1361,1.6,1386,3.846,1387,1.718,1388,4.351,1389,1.786,1390,2.626,1391,1.499,1393,2.626,1394,2.626,1395,4.215,1396,3.711,1397,4.215,1398,3.538,1399,2.968,1400,2.73,1401,2.697,1402,3.188,1403,2.73,1404,1.657,1405,3.569,1406,3.431,1407,1.718,1408,1.718,1409,1.657,1410,4.258,1411,3.188,1412,1.718,1413,1.718,1414,1.718,1415,1.718,1416,1.718,1417,1.718,1418,1.718,1419,1.718,1420,3.02,1421,4.279,1422,1.718,1423,1.718,1424,4.55,1425,2.626,1426,1.718,1427,1.718,1428,1.718,1429,4.067,1430,3.188,1431,3.188,1432,1.718,1433,2.475,1434,2.626,1435,1.786,1436,2.446,1437,3.846,1438,3.188,1439,3.188,1440,3.314,1441,3.998,1442,3.314,1443,3.314,1444,3.314,1445,3.314,1446,1.786,1447,1.836,1448,2.292,1449,2.446,1450,2.73,1451,2.73,1452,2.73,1453,2.73,1454,2.73,1455,2.73,1456,2.73,1457,3.569,1458,3.569,1459,2.532,1460,3.711,1461,2.532,1462,3.314,1463,1.6,1464,1.786,1465,3.314,1466,3.711,1467,1.6,1468,1.657,1469,1.657,1470,2.626,1471,1.718,1472,1.718,1473,1.786,1474,2.545,1475,1.412,1476,1.657,1477,1.718,1478,4.73,1479,2.446,1480,2.73,1481,1.718,1482,2.73,1483,2.532,1484,2.73,1485,2.532,1486,1.718]],["title/classes/TsCheckboxChange.html",[37,0.043,1577,3.658]],["body/classes/TsCheckboxChange.html",[2,0.062,3,0.045,4,0.029,5,0.029,7,0.583,8,2.75,12,0.902,13,1.424,14,1.091,16,0.898,19,0.008,25,0.14,27,0.209,33,0.082,34,0.945,35,1.44,37,0.08,39,0.005,40,0.005,43,1.637,46,1.043,49,1.344,50,1.288,51,2.544,52,2.481,53,2.606,54,1.137,57,2.606,58,0.943,62,2.204,64,1.731,66,0.964,69,1.6,72,1.262,80,1.034,90,1.22,92,3.567,108,2.046,109,0.943,114,1.328,118,2.055,120,1.19,124,0.748,127,2.435,128,1.391,134,1.464,136,3.64,140,1.497,157,1.889,161,2.255,162,2.015,165,1.402,167,2.489,168,1.668,171,1.842,172,2.158,173,1.21,175,1.373,188,1.288,189,1.889,194,2.75,195,2.098,196,2.098,200,1.731,201,1.888,202,1.344,203,1.756,205,1.069,210,1.091,224,1.433,225,0.816,226,1.379,227,1.373,229,1.316,231,1.675,233,0.985,234,1.402,235,1.402,236,1.21,237,1.21,245,1.588,247,1.41,249,0.887,250,2.421,257,0.765,260,1.137,265,1.316,281,2.255,294,3.149,295,2.158,299,2.421,337,3.967,365,1.161,368,2.703,387,1.715,391,3.784,395,3.784,402,1.929,414,1.715,415,2.81,416,1.531,418,2.098,420,2.81,421,2.81,422,1.798,434,1.464,438,2.517,473,2.158,478,3.285,510,1.21,562,2.517,588,2.929,607,2.606,629,2.154,716,2.929,717,2.929,772,4.124,774,2.042,846,2.435,847,4.124,854,3.64,855,3.063,879,3.063,880,4.124,881,4.124,882,3.063,912,2.929,913,2.81,914,2.359,915,2.435,916,3.063,917,3.784,1073,2.703,1123,2.792,1225,3.215,1564,5.939,1577,6.313,1578,4.236,1579,7.2,1580,4.987,1581,6.589,1582,6.133,1583,4.236,1584,4.236,1585,3.876,1586,3.64,1587,4.236,1588,3.876,1589,5.703,1590,3.876,1591,4.858,1592,4.236,1593,4.236,1594,4.236,1595,4.236,1596,4.236,1597,4.236,1598,6.133,1599,2.81,1600,3.063,1601,4.236,1602,3.608,1603,5.703,1604,4.236,1605,3.215,1606,4.236,1607,4.236,1608,4.236,1609,3.215]],["title/components/TsCheckboxComponent.html",[80,0.537,1123,1.618]],["body/components/TsCheckboxComponent.html",[2,0.04,3,0.029,4,0.028,5,0.053,7,0.373,8,1.307,11,0.419,12,1.007,13,1.33,14,1.066,16,0.987,18,2.058,19,0.008,20,0.913,21,0.898,22,1.331,23,1.509,25,0.12,27,0.134,33,0.064,34,0.604,35,1.266,37,0.068,39,0.004,40,0.004,41,0.69,43,1.048,46,1.105,49,0.86,50,0.824,51,1.845,52,1.8,53,3.718,54,0.728,57,1.668,58,1.299,62,1.598,64,1.623,66,1.142,69,1.563,72,0.807,80,1.021,90,1.626,92,3.597,93,1.048,96,1.072,108,1.591,109,1.158,114,1.315,118,2.127,120,1.035,123,1.604,124,0.479,127,2.883,128,1.196,134,0.937,136,4.065,140,1.462,157,1.209,158,0.824,161,1.636,162,1.983,165,0.897,167,2.291,168,1.593,171,1.727,172,2.107,173,0.774,175,0.878,188,0.824,189,1.209,194,2.418,195,1.343,196,1.343,200,1.347,201,1.858,202,1.312,203,1.714,205,1.417,210,1.292,224,1.399,225,1.609,226,1.771,227,1.341,229,1.285,231,1.636,233,0.961,234,1.369,235,1.369,236,1.182,237,1.182,245,1.628,247,1.388,249,0.911,250,2.383,257,0.906,260,1.111,265,0.842,281,1.636,294,2.813,295,2.859,299,2.566,300,0.958,322,1.779,337,4.076,349,0.824,365,1.134,368,1.73,387,1.097,389,1.96,391,2.744,392,1.509,395,2.744,396,4.019,402,1.697,414,2.272,415,1.798,416,1.111,418,1.343,419,1.124,420,1.798,421,1.798,422,1.151,424,1.798,425,2.172,434,0.937,438,1.611,445,2.172,447,2.64,448,2.172,471,1.001,473,2.555,478,3.245,510,0.774,547,0.86,562,1.611,588,2.86,607,2.12,622,0.469,629,2.782,674,1.072,677,0.791,683,1.024,699,1.097,716,1.874,717,1.874,751,1.124,757,0.791,760,1.462,771,1.421,772,4.37,774,1.307,790,1.072,800,1.124,815,1.088,816,1.399,846,1.558,847,3.626,854,4.958,855,4.058,879,1.96,880,2.991,881,3.626,882,4.058,912,1.874,913,1.798,914,1.509,915,1.558,916,1.96,917,2.744,954,1.097,1010,1.097,1011,0.958,1012,1.24,1064,2.711,1066,2.711,1073,1.73,1112,1.273,1113,2.568,1114,1.24,1115,1.24,1116,1.892,1117,1.24,1118,1.24,1119,1.151,1120,1.24,1121,1.151,1122,1.24,1123,2.579,1124,1.24,1125,1.124,1126,1.124,1127,1.24,1128,1.151,1129,1.24,1130,1.124,1131,1.24,1132,1.124,1133,1.24,1134,1.151,1135,1.24,1136,1.097,1137,1.892,1138,1.151,1139,1.151,1140,1.24,1141,1.097,1142,1.24,1143,1.124,1144,1.24,1145,1.124,1146,1.24,1147,1.124,1148,1.24,1149,1.124,1150,1.24,1151,1.24,1152,1.124,1153,1.24,1154,1.097,1155,1.24,1156,1.179,1157,1.24,1158,1.097,1159,1.124,1160,1.24,1161,1.179,1162,1.24,1163,1.024,1164,0.807,1165,1.24,1166,0.958,1167,1.24,1168,1.124,1169,1.24,1170,1.124,1171,1.24,1172,1.151,1173,1.24,1174,1.124,1175,1.24,1176,1.024,1177,1.24,1178,1.024,1179,1.892,1180,1.072,1181,1.24,1182,1.097,1183,1.24,1184,1.024,1185,1.24,1186,1.124,1187,1.24,1188,1.024,1189,1.24,1190,1.024,1191,1.097,1192,1.24,1193,1.124,1194,1.24,1195,1.24,1196,1.097,1197,1.24,1198,0.958,1199,1.24,1200,1.097,1201,1.209,1202,1.24,1225,2.058,1420,3.031,1564,5.9,1577,3.785,1578,2.711,1579,5.016,1580,4.058,1581,6.536,1582,6.083,1583,2.711,1584,2.711,1585,2.481,1586,3.201,1587,2.711,1588,2.481,1589,5.612,1590,2.481,1591,4.272,1592,4.136,1593,4.136,1594,4.136,1595,4.136,1596,2.711,1597,2.711,1598,5.148,1599,1.798,1600,1.96,1601,2.711,1602,4.781,1603,5.612,1604,5.016,1605,3.807,1606,2.711,1607,5.016,1608,5.016,1609,2.058,1610,4.59,1611,4.59,1612,4.59,1613,4.59,1614,3.785,1615,3.785,1616,3.785,1617,2.711,1618,4.669,1619,4.669,1620,4.669,1621,3.06,1622,3.06,1623,3.06,1624,4.669,1625,3.06,1626,3.06,1627,6.831,1628,2.711,1629,3.06,1630,2.711,1631,2.309,1632,2.711,1633,2.991,1634,2.711,1635,2.481,1636,2.711,1637,2.481,1638,2.309,1639,3.06,1640,3.06,1641,3.06,1642,3.06,1643,2.711,1644,1.611,1645,3.785,1646,2.711,1647,3.14,1648,3.785,1649,2.711,1650,3.06,1651,2.711,1652,3.06,1653,3.06,1654,3.06]],["title/modules/TsCheckboxModule.html",[619,0.618,636,3.034]],["body/modules/TsCheckboxModule.html",[2,0.088,3,0.064,4,0.04,5,0.04,19,0.008,25,0.153,27,0.294,33,0.102,37,0.064,39,0.007,40,0.007,116,1.6,175,1.931,249,0.819,313,1.329,416,2.029,619,1.094,621,1.812,622,1.03,623,1.931,636,6.212,662,2.344,665,2.344,739,2.448,740,2.015,741,4.519,1123,3.419,1590,5.452,1591,6.436,1655,5.957,1656,5.957,1657,5.957,1658,5.957,1659,6.724,1660,7.992,1661,7.992]],["title/directives/TsColumnDefDirective.html",[257,0.722,1184,1.51]],["body/directives/TsColumnDefDirective.html",[2,0.067,3,0.049,4,0.031,5,0.048,7,0.623,11,0.701,12,1.055,13,1.204,14,1.168,16,0.954,19,0.008,20,0.853,21,0.75,25,0.112,27,0.224,33,0.094,34,1.011,37,0.087,39,0.006,40,0.006,46,1.146,49,1.893,50,1.815,58,0.75,62,1.752,68,2.956,72,1.35,74,2.019,90,0.97,114,1.149,120,1.359,124,1.178,145,1.602,166,3.12,168,1.615,200,2.03,204,1.636,225,1.456,226,1.516,233,1.387,245,1.25,249,1.06,257,1.392,266,1.741,342,1.925,347,1.741,361,3.946,418,3.304,489,2.36,510,1.295,519,3.497,547,1.438,757,1.322,809,2.524,810,3.023,815,1.937,827,2.022,833,4.42,846,3.43,903,3.278,1011,2.504,1015,3.834,1018,2.448,1047,2.022,1073,4.523,1091,3.43,1166,2.504,1176,2.254,1178,1.712,1184,2.677,1188,2.254,1190,1.712,1234,3.632,1235,3.808,1236,4.901,1237,4.529,1238,3.632,1239,4.781,1240,5.344,1241,5.573,1242,4.781,1243,5.344,1244,2.524,1245,3.632,1246,4.702,1247,3.632,1248,4.781,1249,5.344,1250,4.781,1251,3.632,1252,4.781,1253,3.671,1254,5.679,1255,3.278,1256,3.632,1257,3.632,1258,3.441,1259,3.007,1260,4.781,1261,3.632,1262,5.38,1263,5.679,1264,4.425,1265,1.925,1266,3.632,1267,2.022,1268,4.781,1662,5.117,1663,5.117,1664,5.117]],["title/directives/TsConfirmationDirective.html",[257,0.722,1186,1.657]],["body/directives/TsConfirmationDirective.html",[0,1.839,2,0.056,3,0.041,4,0.026,5,0.052,7,0.526,8,1.844,11,0.591,12,0.841,13,1.358,14,1.371,16,0.905,18,1.188,19,0.008,20,0.489,21,0.743,22,0.768,25,0.144,27,0.189,28,2.541,33,0.049,34,1.364,35,1.668,37,0.057,39,0.005,40,0.005,43,1.478,45,1.352,49,1.214,50,1.164,51,2.728,52,2.314,60,3.846,61,4.531,64,2.133,75,2.3,79,3.103,82,3.678,106,1.549,108,1.94,109,1.093,113,2.645,114,1.024,120,0.981,124,0.676,128,0.691,129,1.586,161,1.513,162,2.161,166,2.911,167,2.285,170,3.206,171,1.888,182,2.199,183,2.904,188,1.86,189,1.706,192,2.441,193,1.445,197,2.354,201,1.267,210,1.371,225,1.024,226,1.486,231,1.513,233,1.536,238,1.489,241,2.806,245,0.801,247,1.998,256,1.549,257,1.358,272,1.413,273,1.413,322,2.051,325,2.441,335,3.465,336,1.352,340,3.259,347,1.116,368,4.218,386,3.678,422,1.624,436,1.676,443,2.981,458,4.868,478,3.758,479,4.421,480,2.871,492,1.895,504,3.498,508,2.685,560,3.103,757,1.116,760,1.879,761,3.065,774,1.844,790,2.844,825,2.199,1038,5.319,1090,2.273,1096,3.501,1125,2.74,1126,3.399,1186,2.205,1449,2.273,1558,2.354,1665,4.318,1666,5.596,1667,6.115,1668,7.461,1669,8.49,1670,7.461,1671,7.461,1672,7.735,1673,6.986,1674,6.004,1675,3.501,1676,4.318,1677,4.318,1678,6.004,1679,4.318,1680,4.318,1681,7.461,1682,4.318,1683,3.395,1684,4.318,1685,5.319,1686,4.318,1687,6.946,1688,4.318,1689,4.318,1690,6.115,1691,4.318,1692,3.825,1693,3.825,1694,6.004,1695,7.461,1696,3.825,1697,3.825,1698,3.825,1699,6.004,1700,4.318,1701,2.904,1702,3.825,1703,4.318,1704,4.318,1705,4.318,1706,4.318,1707,6.004,1708,7.461,1709,6.004,1710,4.318,1711,4.318,1712,4.318,1713,4.318,1714,4.318,1715,4.318,1716,4.318,1717,4.318,1718,4.318,1719,4.318,1720,6.004,1721,4.318,1722,4.318,1723,4.318,1724,4.318,1725,4.318,1726,4.318,1727,4.318,1728,6.004,1729,4.318,1730,4.318,1731,4.318,1732,4.318,1733,6.004,1734,6.004,1735,4.318,1736,4.318,1737,4.318,1738,4.318,1739,4.318,1740,3.501]],["title/components/TsConfirmationModalComponent.html",[80,0.537,1125,1.657]],["body/components/TsConfirmationModalComponent.html",[2,0.066,3,0.048,4,0.04,5,0.045,7,0.62,11,0.697,12,0.94,13,1.363,16,0.838,19,0.008,20,0.85,21,0.668,25,0.125,27,0.223,33,0.057,35,1.5,37,0.064,39,0.006,40,0.006,46,1.076,58,0.983,66,1.026,80,0.987,85,4.512,90,1.271,93,1.741,96,1.782,124,0.796,128,1.073,158,1.371,165,1.492,173,1.287,185,1.961,205,1.5,225,1.649,226,1.823,227,1.926,229,1.846,231,2.35,233,1.381,234,1.968,235,1.968,236,1.698,237,1.698,257,1.073,300,1.592,419,1.868,471,1.664,508,2.297,520,3.657,589,2.865,622,0.779,629,1.702,674,1.782,677,1.315,683,1.702,699,1.824,751,1.868,757,1.315,790,1.782,800,1.868,815,1.563,816,2.011,842,3.61,843,4.124,862,6.471,954,1.824,1010,1.824,1011,1.592,1012,2.062,1113,3.235,1114,2.062,1115,2.062,1116,2.719,1117,2.062,1118,2.062,1119,1.913,1120,2.062,1121,1.913,1122,2.062,1123,1.824,1124,2.062,1125,2.931,1126,3.438,1127,2.062,1128,1.913,1129,2.062,1130,1.868,1131,2.062,1132,1.868,1133,2.062,1134,1.913,1135,2.062,1136,1.824,1137,2.719,1138,1.913,1139,1.913,1140,2.062,1141,1.824,1142,2.062,1143,1.868,1144,2.062,1145,1.868,1146,2.062,1147,1.868,1148,2.062,1149,1.868,1150,2.062,1151,2.062,1152,1.868,1153,2.062,1154,1.824,1155,2.062,1156,1.961,1157,2.062,1158,1.824,1159,1.868,1160,2.062,1161,1.961,1162,2.062,1163,1.702,1164,1.342,1165,2.062,1166,1.592,1167,2.062,1168,1.868,1169,2.062,1170,1.868,1171,2.062,1172,1.913,1173,2.062,1174,1.868,1175,2.062,1176,1.702,1177,2.062,1178,1.702,1179,2.719,1180,1.782,1181,2.062,1182,1.824,1183,2.062,1184,1.702,1185,2.062,1186,2.757,1187,2.062,1188,1.702,1189,2.062,1190,1.702,1191,1.824,1192,2.062,1193,1.868,1194,2.062,1195,2.062,1196,1.824,1197,2.062,1198,1.592,1199,2.062,1200,1.824,1201,2.01,1202,2.062,1667,5.943,1672,5.943,1687,7.071,1741,7.507,1742,5.087,1743,6.709,1744,6.709,1745,5.458,1746,5.087,1747,5.943,1748,6.709,1749,5.087]],["title/modules/TsConfirmationModule.html",[619,0.618,637,3.203]],["body/modules/TsConfirmationModule.html",[2,0.085,3,0.062,4,0.039,5,0.039,19,0.008,25,0.155,27,0.285,33,0.101,37,0.062,39,0.007,40,0.007,116,1.549,249,0.793,313,1.287,416,2.001,554,2.639,619,1.074,621,1.755,622,0.997,623,1.87,632,4.777,637,6.68,662,2.3,665,2.3,668,3.549,739,2.401,740,1.951,803,4.608,804,3.549,1125,3.399,1126,2.391,1186,3.469,1696,5.769,1702,5.769,1750,5.769,1751,5.769,1752,6.512,1753,5.769,1754,6.512,1755,6.946,1756,7.84,1757,7.84]],["title/components/TsCopyComponent.html",[80,0.537,1128,1.697]],["body/components/TsCopyComponent.html",[0,1.489,2,0.042,3,0.031,4,0.029,5,0.052,7,0.713,10,1.922,11,0.442,12,0.681,13,1.456,14,1.11,16,0.968,18,1.61,19,0.008,20,0.831,21,0.863,22,1.041,23,1.592,25,0.098,27,0.141,28,1.011,33,0.036,34,1.286,37,0.062,39,0.004,40,0.004,46,1.189,50,2.428,56,3.098,57,1.76,58,1.197,64,1.157,66,0.651,67,2.195,72,1.283,79,2.708,80,0.987,84,2.291,86,1.825,90,1.486,93,1.105,96,1.131,108,1.367,109,1.232,114,1.337,116,1.392,120,0.795,123,1.768,134,1.489,140,1.522,149,3.452,158,0.87,166,2.812,168,1.362,172,2.195,173,0.817,188,0.87,193,1.08,194,2.499,195,1.417,196,1.417,201,2.3,202,1.367,203,1.786,204,1.783,205,1.881,210,1.335,224,1.457,225,1.614,226,1.774,227,1.396,229,1.338,233,1.001,236,1.231,237,1.231,241,2.449,245,1.608,247,1.717,250,1.829,257,0.778,265,2.48,268,1.91,276,1.978,299,2.627,300,1.011,322,1.549,336,2.038,341,3.189,347,0.834,349,0.87,365,1.904,386,4.497,387,2.098,402,0.967,414,1.158,419,1.185,422,1.829,424,2.858,471,1.056,485,2.858,504,2.692,505,2.248,507,4.497,509,2.749,516,5.394,527,1.897,555,5.138,608,1.644,622,0.494,629,1.08,674,1.131,677,0.834,683,2.847,699,1.158,751,1.185,757,0.834,760,1.522,765,3.67,770,4.308,771,1.499,772,3.115,790,1.131,794,4.914,800,1.185,815,1.133,816,1.457,827,1.276,837,4.914,911,3.943,954,1.158,1010,1.158,1011,1.011,1012,1.308,1074,3.943,1089,2.858,1094,2.568,1112,1.343,1113,2.639,1114,1.308,1115,1.308,1116,1.971,1117,1.308,1118,1.308,1119,1.214,1120,1.308,1121,1.214,1122,1.308,1123,1.158,1124,1.308,1125,1.185,1126,1.185,1127,1.308,1128,2.761,1129,1.308,1130,1.185,1131,1.308,1132,1.185,1133,1.308,1134,1.214,1135,1.308,1136,1.158,1137,1.971,1138,1.214,1139,1.214,1140,1.308,1141,1.158,1142,1.308,1143,1.185,1144,1.308,1145,1.185,1146,1.308,1147,1.185,1148,1.308,1149,1.185,1150,1.308,1151,1.308,1152,1.185,1153,1.308,1154,1.158,1155,1.308,1156,1.244,1157,1.308,1158,1.158,1159,1.185,1160,1.308,1161,1.244,1162,1.308,1163,1.08,1164,0.852,1165,1.308,1166,1.011,1167,1.308,1168,1.185,1169,1.308,1170,1.185,1171,1.308,1172,1.214,1173,1.308,1174,1.185,1175,1.308,1176,1.08,1177,1.308,1178,1.08,1179,1.971,1180,1.131,1181,1.308,1182,1.158,1183,1.308,1184,1.08,1185,1.308,1186,1.185,1187,1.308,1188,1.08,1189,1.308,1190,1.08,1191,1.158,1192,1.308,1193,1.185,1194,1.308,1195,1.308,1196,1.158,1197,1.308,1198,1.011,1199,1.308,1200,1.158,1201,1.276,1202,1.308,1314,5.395,1463,2.56,1475,2.258,1476,1.76,1547,3.115,1638,4.415,1644,2.56,1675,2.617,1685,2.86,1758,3.228,1759,7.618,1760,4.863,1761,4.863,1762,8.022,1763,5.279,1764,4.863,1765,6.511,1766,4.863,1767,5.85,1768,5.85,1769,3.228,1770,4.743,1771,4.863,1772,3.228,1773,3.228,1774,4.863,1775,3.228,1776,3.228,1777,4.863,1778,3.228,1779,4.863,1780,4.863,1781,3.228,1782,4.863,1783,3.228,1784,3.228,1785,4.863,1786,3.228,1787,4.863,1788,3.228,1789,2.476,1790,3.943,1791,4.308,1792,3.228,1793,4.863,1794,3.228,1795,3.228,1796,3.228,1797,4.863,1798,3.228,1799,3.228,1800,4.863,1801,2.86,1802,3.228,1803,3.452,1804,2.86,1805,3.228,1806,2.617,1807,3.228,1808,3.228,1809,3.228,1810,3.228,1811,3.228,1812,4.863,1813,2.617,1814,3.228,1815,3.228,1816,3.228,1817,3.228,1818,2.617,1819,3.228,1820,3.228,1821,3.228,1822,3.228,1823,4.863,1824,3.228,1825,3.228,1826,3.228,1827,3.228,1828,3.228,1829,3.228,1830,3.943,1831,2.86,1832,2.617,1833,3.228,1834,3.228,1835,2.86,1836,2.617,1837,2.291,1838,3.228,1839,3.228]],["title/modules/TsCopyModule.html",[619,0.618,638,3.203]],["body/modules/TsCopyModule.html",[2,0.086,3,0.062,4,0.039,5,0.039,19,0.008,25,0.156,27,0.287,33,0.101,37,0.062,39,0.007,40,0.007,116,1.561,249,0.799,313,1.296,416,2.008,554,2.66,619,1.079,621,1.768,622,1.005,623,1.884,638,6.687,643,4.103,659,5.343,662,2.31,665,2.31,686,3.342,708,4.657,739,2.412,740,1.966,803,4.629,804,3.577,1128,3.557,1208,5.944,1209,3.577,1840,5.813,1841,5.813,1842,6.562,1843,5.813,1844,6.562,1845,7.876]],["title/pipes/TsDatePipe.html",[99,1.877,1846,3.203]],["body/pipes/TsDatePipe.html",[2,0.082,3,0.06,4,0.038,5,0.046,16,0.807,18,1.735,19,0.008,20,0.939,21,0.766,22,1.122,25,0.128,27,0.276,33,0.087,34,1.246,37,0.06,39,0.007,40,0.007,46,1.237,54,1.5,58,1.265,66,1.673,90,1.195,99,3.451,109,1.126,124,0.987,169,3.198,200,1.829,238,1.563,266,1.987,274,3.016,369,3.847,436,1.531,447,3.565,547,1.772,607,2.776,677,2.328,757,1.63,760,1.974,768,3.437,1846,5.888,1847,5.586,1848,6.812,1849,4.476,1850,5.458,1851,7.844,1852,6.305,1853,7.002,1854,5.458,1855,4.758,1856,6.305,1857,6.305,1858,7.689,1859,7.689,1860,7.349,1861,6.234,1862,6.305,1863,6.305,1864,6.305,1865,6.305,1866,6.234,1867,6.305,1868,6.305,1869,4.476,1870,4.24,1871,4.24,1872,5.586,1873,5.586,1874,6.305]],["title/interfaces/TsDateRange.html",[41,0.55,1875,3.997]],["body/interfaces/TsDateRange.html",[2,0.036,3,0.026,4,0.017,5,0.017,7,0.337,8,1.846,11,0.379,12,0.606,13,1.439,16,0.899,19,0.008,20,0.602,21,0.599,25,0.109,27,0.121,28,0.867,33,0.049,34,1.515,35,1.973,37,0.051,39,0.004,40,0.004,41,0.732,43,0.948,45,0.867,46,0.762,49,0.778,50,0.746,53,3.552,56,2.918,57,3.764,58,1.124,59,1.122,64,1.866,65,2.769,66,0.559,68,1.215,72,2.07,80,0.775,86,2.444,106,3.216,108,0.778,109,1.012,116,1.028,118,1.403,120,1.065,124,1.081,128,1.358,134,2.349,140,0.867,146,1.774,157,1.094,160,1.122,162,1.664,167,2.349,168,1.576,171,1.889,173,0.701,175,0.795,184,3.319,185,1.067,194,1.846,195,1.215,196,1.215,201,1.762,202,0.778,203,1.587,204,0.672,210,1.214,224,0.83,225,0.472,226,0.819,227,0.795,229,0.762,233,0.57,236,0.701,237,0.701,238,0.686,241,1.626,247,1.428,249,0.527,250,1.626,266,2.325,268,1.911,272,1.966,273,1.966,286,1.458,294,3.266,295,3.664,299,1.626,309,0.927,319,1.627,322,1.716,336,2.258,352,2.435,365,1.459,368,1.565,387,2.155,422,2,424,2.541,436,2.121,480,1.798,487,2.444,510,1.094,518,1.41,559,3.784,560,1.152,561,1.366,578,1.565,582,2.769,589,1.183,593,2.924,614,3.922,677,2.479,678,2.245,712,1.627,808,2.648,813,2.907,817,1.325,822,1.627,840,4.772,857,4.572,870,3.681,872,4.079,915,2.201,1060,1.774,1130,1.953,1132,2.206,1220,4.918,1225,1.862,1259,2.541,1391,2.132,1447,1.708,1547,3.406,1580,4.174,1647,2.907,1692,3.829,1803,6.459,1813,5.284,1875,5.323,1876,2.453,1877,2.769,1878,3.829,1879,6.795,1880,3.829,1881,6.517,1882,3.829,1883,3.576,1884,2.769,1885,2.769,1886,4.323,1887,4.323,1888,2.769,1889,2.453,1890,4.323,1891,6.008,1892,6.008,1893,4.323,1894,2.769,1895,7.378,1896,2.769,1897,5.212,1898,2.769,1899,2.769,1900,2.769,1901,4.323,1902,4.323,1903,2.245,1904,2.245,1905,2.089,1906,2.089,1907,1.565,1908,4.041,1909,2.769,1910,6.391,1911,6.795,1912,6.795,1913,4.323,1914,2.453,1915,3.505,1916,2.453,1917,2.453,1918,2.907,1919,2.769,1920,2.089,1921,7.214,1922,2.769,1923,2.769,1924,2.769,1925,7.67,1926,4.711,1927,2.245,1928,4.311,1929,2.769,1930,2.769,1931,6.517,1932,6.517,1933,4.323,1934,2.769,1935,6.517,1936,2.769,1937,2.769,1938,3.262,1939,4.323,1940,4.323,1941,2.769,1942,4.323,1943,2.769,1944,2.769,1945,2.769,1946,2.769,1947,2.769,1948,2.769,1949,2.453,1950,2.453,1951,3.829,1952,2.453,1953,2.769,1954,2.769,1955,2.453,1956,2.769,1957,4.323,1958,2.769,1959,2.769,1960,2.769,1961,4.323,1962,4.323,1963,4.323,1964,4.323,1965,6.008,1966,2.769,1967,6.008,1968,2.769,1969,2.769,1970,2.769,1971,2.769,1972,6.008,1973,5.323,1974,2.769,1975,6.008,1976,2.769,1977,2.769,1978,2.769,1979,2.769,1980,4.323,1981,4.323,1982,2.769,1983,2.769,1984,4.323,1985,3.829,1986,2.769,1987,2.769,1988,2.769,1989,2.769,1990,2.769,1991,2.769,1992,2.769,1993,2.769,1994,2.769,1995,2.769,1996,2.769,1997,2.769,1998,2.769]],["title/modules/TsDateRangeModule.html",[619,0.618,639,3.203]],["body/modules/TsDateRangeModule.html",[2,0.087,3,0.063,4,0.04,5,0.04,19,0.008,25,0.154,27,0.292,33,0.101,37,0.063,39,0.007,40,0.007,116,1.587,249,0.813,313,1.318,416,2.022,554,2.704,619,1.089,621,1.798,622,1.022,623,1.915,639,6.64,640,6.137,662,2.333,665,2.333,677,2.056,678,5.409,680,5.91,739,2.436,740,1.999,803,4.676,804,3.636,1130,3.479,1876,5.91,1999,5.91,2000,5.91,2001,6.672,2002,5.91,2003,6.672,2004,7.955]],["title/classes/TsDatepickerInputEvent.html",[37,0.043,2005,3.997]],["body/classes/TsDatepickerInputEvent.html",[2,0.044,3,0.032,4,0.02,5,0.02,7,0.406,8,2.826,13,1.441,16,0.927,19,0.008,21,0.496,25,0.118,27,0.146,28,1.043,30,1.141,32,2.927,33,0.067,34,1.468,35,1.915,37,0.071,39,0.004,40,0.005,43,1.141,46,1.18,49,0.937,50,1.342,54,0.793,56,2.773,57,1.817,58,1.225,62,2.042,63,1.285,64,1.96,65,3.19,66,1.818,67,1.504,68,1.463,69,2.486,72,1.96,75,0.978,80,0.884,90,0.632,106,1.786,108,1.4,109,1.128,114,0.569,116,0.793,118,1.574,120,1.399,124,0.779,128,1.382,134,2.026,136,1.884,140,1.043,145,1.867,149,2.366,157,1.317,158,1.783,161,1.745,167,2.169,168,1.679,171,1.509,173,0.844,175,0.957,182,3.369,194,2.127,195,1.463,196,1.463,200,1.419,201,2.258,202,0.937,203,1.224,204,1.448,205,1.114,209,4.996,210,1.137,224,0.999,225,0.569,226,0.944,227,0.957,229,0.917,233,0.686,236,0.844,237,0.844,238,0.826,241,1.254,245,1.107,247,0.73,249,0.727,250,1.254,260,0.793,266,2.129,268,2.077,272,1.091,273,1.091,276,2.042,277,2.241,278,2.042,279,2.366,286,1.754,294,3.221,295,3.718,299,1.873,310,1.644,313,0.984,319,1.959,322,0.793,336,1.043,337,1.817,342,2.243,347,1.541,349,0.898,352,2.019,365,0.809,387,2.664,391,2.927,395,2.927,402,1.493,414,1.195,415,1.959,416,1.185,418,1.463,420,1.959,421,1.959,422,1.254,424,2.927,434,1.021,436,1.72,438,1.754,463,1.884,473,1.504,480,2.072,504,1.285,508,1.705,510,1.261,518,1.697,559,3.493,560,1.386,561,1.644,578,1.884,593,2.681,629,1.667,677,2.452,716,2.042,717,2.042,760,1.867,765,2.515,768,1.817,772,3.19,813,2.241,817,2.383,822,1.959,827,1.317,832,2.241,840,2.927,857,4.053,867,1.504,870,3.653,872,4.003,913,2.927,939,4.038,996,2.457,1011,1.559,1018,2.383,1126,1.829,1130,1.224,1132,2.429,1220,4.5,1232,2.952,1259,1.959,1409,3.606,1436,1.754,1475,1.548,1547,2.135,1557,2.715,1562,4.038,1580,4.535,1600,3.19,1647,2.241,1693,2.952,1803,4.696,1837,2.366,1882,4.412,1883,4.01,1889,2.952,1895,7.012,1897,4.5,1903,2.702,1904,2.702,1906,2.515,1907,2.816,1908,4.449,1910,5.861,1911,6.273,1912,6.273,1914,2.952,1915,4.038,1916,2.952,1917,2.952,1918,5.178,1926,6.821,1927,2.702,1928,6.942,1950,2.952,1951,4.412,1952,2.952,1973,2.952,2005,5.861,2006,3.333,2007,4.412,2008,6.581,2009,4.233,2010,4.5,2011,3.333,2012,3.333,2013,3.333,2014,2.816,2015,3.333,2016,2.952,2017,3.333,2018,2.135,2019,3.333,2020,3.333,2021,3.758,2022,2.952,2023,3.758,2024,3.333,2025,4.98,2026,4.98,2027,4.98,2028,2.515,2029,3.333,2030,3.333,2031,3.333,2032,3.333,2033,3.333,2034,4.98,2035,4.98,2036,3.333,2037,4.98,2038,4.98,2039,3.333,2040,3.333,2041,3.333,2042,4.038,2043,2.366,2044,2.952,2045,3.333,2046,3.333,2047,3.333,2048,3.333,2049,3.333,2050,3.333,2051,3.333,2052,3.333,2053,3.333,2054,5.963,2055,3.333,2056,3.333,2057,3.333,2058,4.98,2059,4.98,2060,3.333,2061,2.952,2062,3.333,2063,4.98,2064,3.333,2065,4.038,2066,3.333,2067,3.333,2068,3.333,2069,3.333]],["title/modules/TsDatepickerModule.html",[619,0.618,640,3.034]],["body/modules/TsDatepickerModule.html",[2,0.085,3,0.062,4,0.039,5,0.039,19,0.008,25,0.156,27,0.285,33,0.101,37,0.062,39,0.007,40,0.007,66,1.313,116,1.549,175,1.87,249,0.793,313,1.287,416,2.001,619,1.074,621,1.755,622,0.997,623,1.87,640,6.267,660,4.946,662,2.3,665,2.3,709,3.682,710,4.171,739,2.401,740,1.951,741,4.433,746,5.916,747,4.914,1132,3.489,1209,3.549,1927,5.279,2042,6.82,2070,5.769,2071,5.769,2072,5.769,2073,6.512,2074,5.769,2075,6.512,2076,7.84,2077,7.84,2078,7.84]],["title/injectables/TsDropProtectionService.html",[0,1.382,2079,3.405]],["body/injectables/TsDropProtectionService.html",[0,2.487,2,0.078,3,0.057,4,0.036,5,0.053,11,0.823,12,1.045,14,1.704,16,0.917,18,2.054,19,0.008,20,0.845,21,0.744,22,1.328,25,0.124,27,0.263,33,0.068,37,0.057,39,0.006,40,0.006,58,0.88,64,2.147,79,3.104,90,1.539,108,1.688,109,1.189,114,1.54,118,1.969,145,2.336,152,4.499,188,1.619,193,2.01,247,1.86,292,4.325,322,2.117,336,1.88,347,2.3,387,2.676,760,2.658,794,6.408,854,4.801,1331,3.188,1558,4.068,1770,6.051,2018,5.439,2079,5.632,2080,5.702,2081,8.901,2082,6.007,2083,8.492,2084,6.007,2085,7.463,2086,6.007,2087,7.463,2088,6.007,2089,6.007,2090,6.007,2091,8.492,2092,6.007,2093,8.492,2094,6.007,2095,6.007,2096,6.007,2097,6.007]],["title/interfaces/TsFileImageDimensionContraint.html",[41,0.55,2098,3.658]],["body/interfaces/TsFileImageDimensionContraint.html",[2,0.091,3,0.066,4,0.049,5,0.042,7,0.846,11,0.951,12,1.141,19,0.008,21,0.926,33,0.092,39,0.007,40,0.007,41,0.992,73,2.126,260,2.121,519,4.141,813,5.477,1259,4.787,1392,5.462,2080,4.447,2098,7.008,2099,5.629,2100,4.447,2101,6.151,2102,6.943,2103,4.989,2104,5.781,2105,6.729,2106,5.239]],["title/modules/TsFileUploadModule.html",[619,0.618,641,3.203]],["body/modules/TsFileUploadModule.html",[2,0.078,3,0.057,4,0.049,5,0.036,19,0.008,25,0.158,27,0.263,33,0.1,37,0.057,39,0.006,40,0.006,66,1.211,116,1.428,175,1.723,188,1.617,193,2.008,249,0.989,292,3.056,313,1.186,416,1.93,554,2.432,619,1.021,621,1.617,622,0.919,623,1.723,632,4.685,641,6.763,642,5.7,643,4.016,659,5.23,660,4.851,662,2.188,665,2.188,668,3.271,681,5.317,683,2.008,684,4.26,685,4.866,686,3.056,708,4.26,709,3.393,710,3.844,739,2.284,740,1.799,741,4.217,749,4.866,803,4.384,804,3.271,837,5.628,1134,3.517,1292,2.96,2079,6.715,2080,3.844,2100,3.844,2104,4.26,2107,5.317,2108,5.317,2109,6.001,2110,5.317,2111,5.317,2112,6.001,2113,7.458,2114,7.458,2115,6.001,2116,4.26]],["title/interfaces/TsFileValidations.html",[41,0.55,2117,3.658]],["body/interfaces/TsFileValidations.html",[2,0.067,3,0.048,4,0.054,5,0.031,7,0.621,11,0.698,12,0.941,13,1.39,14,1.164,16,0.535,19,0.008,20,0.578,21,0.849,25,0.133,30,1.746,33,0.076,34,1.008,35,1.681,37,0.048,39,0.006,40,0.006,41,0.819,46,0.963,54,1.213,56,2.354,64,1.599,66,1.832,73,2.058,108,2.113,109,0.747,114,1.282,120,0.833,124,1.052,127,2.597,145,1.596,184,3.828,185,1.966,239,2.997,245,1.672,247,1.868,256,1.829,260,1.788,266,2.146,268,1.971,272,2.79,273,2.79,300,1.596,336,2.599,342,1.918,402,1.528,493,1.829,519,2.368,576,2.597,603,3.124,808,4.117,822,2.997,914,2.516,1274,3.848,1362,4.135,1420,3.972,1447,2.015,1448,2.516,1463,3.538,1644,3.538,1837,3.62,2080,3.266,2100,5.718,2103,4.604,2104,5.894,2105,3.848,2106,6.029,2116,6.262,2117,6.094,2118,4.518,2119,4.518,2120,6.732,2121,6.732,2122,6.732,2123,5.071,2124,6.478,2125,5.672,2126,4.518,2127,5.953,2128,5.953,2129,5.953,2130,4.518,2131,5.953,2132,5.953,2133,5.953,2134,5.448,2135,4.518,2136,7.078,2137,4.518,2138,5.953,2139,4.518,2140,4.518,2141,4.518,2142,4.518,2143,5.953,2144,4.518,2145,4.518,2146,4.518,2147,4.518,2148,4.518,2149,4.518,2150,4.518,2151,5.953,2152,4.518,2153,4.518,2154,4.518,2155,4.518,2156,4.518,2157,4.518,2158,5.953,2159,4.518,2160,3.62,2161,4.518,2162,3.62,2163,4.518,2164,4.135,2165,4.518,2166,4.518,2167,4.518,2168,4.518]],["title/directives/TsHeaderCellDefDirective.html",[257,0.722,1188,1.51]],["body/directives/TsHeaderCellDefDirective.html",[2,0.069,3,0.05,4,0.032,5,0.032,7,0.644,12,1.135,13,1.224,14,1.207,16,0.851,19,0.008,20,0.779,25,0.115,27,0.232,33,0.095,34,1.045,37,0.087,39,0.006,40,0.006,46,0.986,49,1.487,50,1.425,62,1.811,68,2.321,72,1.396,74,1.585,114,0.902,120,1.324,124,1.197,145,1.656,166,3.145,168,1.559,200,2.049,204,1.671,225,1.469,226,1.536,233,1.417,245,0.982,249,1.068,257,1.403,266,1.367,342,1.99,347,1.779,361,3.997,418,3.358,489,2.68,510,1.339,519,3.197,547,1.487,757,1.367,809,2.609,810,2.967,815,2.044,827,2.09,833,4.471,846,2.694,903,3.388,1011,2.63,1015,3.896,1018,2.53,1047,2.09,1073,4.326,1091,3.505,1166,2.537,1176,2.303,1178,1.77,1184,2.561,1188,2.561,1190,1.77,1234,3.754,1235,4.326,1236,4.964,1237,5.145,1238,3.754,1239,4.885,1240,5.431,1241,5.617,1242,4.885,1243,5.431,1244,2.609,1245,4.885,1246,4.763,1247,3.754,1248,4.885,1249,5.431,1250,4.885,1251,3.754,1252,4.885,1253,3.752,1254,4.885,1255,3.388,1256,3.754,1257,3.754,1258,3.557,1259,3.109,1260,4.885,1261,3.754,1262,4.629,1263,3.754,1264,4.497,1265,1.99,1266,3.754,1267,2.09,1268,3.754]],["title/directives/TsHeaderCellDirective.html",[257,0.722,1190,1.51]],["body/directives/TsHeaderCellDirective.html",[2,0.069,3,0.05,4,0.032,5,0.041,7,0.64,12,1.068,13,1.22,14,1.564,16,0.88,18,1.445,19,0.008,20,0.864,21,0.523,22,0.935,25,0.114,27,0.23,33,0.095,34,1.038,37,0.088,39,0.006,40,0.006,46,0.982,49,1.476,50,1.415,62,1.798,68,2.305,72,1.386,74,1.574,114,0.896,120,1.321,124,1.193,145,1.644,166,3.272,168,1.556,200,2.045,204,1.852,225,1.466,226,1.589,233,1.411,245,0.975,249,1.047,257,1.4,266,1.357,342,1.976,347,1.971,361,3.761,418,3.346,489,2.4,510,1.329,519,3.182,547,1.476,757,1.357,809,2.591,810,2.964,815,2.04,827,2.075,833,4.452,846,2.675,903,3.364,1011,2.624,1015,3.883,1018,2.513,1047,2.075,1073,4.311,1091,3.883,1166,2.387,1176,2.293,1178,1.758,1184,2.552,1188,2.293,1190,2.293,1234,3.728,1235,3.874,1236,4.671,1237,4.607,1238,3.728,1239,4.863,1240,5.412,1241,5.75,1242,4.863,1243,5.412,1244,2.591,1245,3.728,1246,4.927,1247,4.863,1248,4.863,1249,5.412,1250,4.863,1251,3.728,1252,5.412,1253,3.734,1254,4.863,1255,3.364,1256,3.728,1257,3.728,1258,3.532,1259,3.087,1260,4.863,1261,3.728,1262,4.607,1263,3.728,1264,4.481,1265,1.976,1266,3.728,1267,2.075,1268,3.728,2169,5.252]],["title/components/TsHeaderRowComponent.html",[80,0.537,1136,1.618]],["body/components/TsHeaderRowComponent.html",[2,0.061,3,0.045,4,0.038,5,0.028,7,0.571,12,1.166,19,0.008,20,0.816,21,0.467,23,3.81,25,0.106,27,0.205,33,0.087,37,0.083,39,0.005,40,0.005,63,2.448,66,0.945,80,0.99,93,1.605,96,1.642,114,1.229,124,0.994,128,1.291,145,1.988,158,1.263,165,1.375,168,1.58,173,1.186,200,1.92,204,2.021,205,1.42,225,1.646,226,1.818,231,2.524,233,1.484,234,2.113,235,2.113,236,1.824,237,1.824,249,0.941,257,1.291,300,1.467,347,1.862,361,3.133,365,1.543,418,2.788,419,1.721,471,1.534,547,1.785,622,0.718,629,1.569,674,1.642,677,1.211,683,1.569,699,1.681,751,1.721,757,1.211,790,1.642,800,1.721,809,4.451,810,2.527,815,2.086,816,1.904,833,3.447,954,1.681,1010,1.681,1011,2.71,1012,1.9,1091,3.669,1113,3.13,1114,1.9,1115,1.9,1116,2.575,1117,1.9,1118,1.9,1119,1.763,1120,1.9,1121,1.763,1122,1.9,1123,1.681,1124,1.9,1125,1.721,1126,1.721,1127,1.9,1128,1.763,1129,1.9,1130,1.721,1131,1.9,1132,1.721,1133,1.9,1134,1.763,1135,1.9,1136,2.77,1137,2.575,1138,1.763,1139,1.763,1140,1.9,1141,1.681,1142,1.9,1143,1.721,1144,1.9,1145,1.721,1146,1.9,1147,1.721,1148,1.9,1149,1.721,1150,1.9,1151,1.9,1152,1.721,1153,1.9,1154,1.681,1155,1.9,1156,1.807,1157,1.9,1158,2.278,1159,1.721,1160,1.9,1161,1.807,1162,1.9,1163,1.569,1164,1.237,1165,1.9,1166,2.255,1167,1.9,1168,1.721,1169,1.9,1170,1.721,1171,1.9,1172,1.763,1173,1.9,1174,1.721,1175,1.9,1176,1.569,1177,1.9,1178,1.569,1179,2.575,1180,1.642,1181,1.9,1182,1.681,1183,1.9,1184,1.569,1185,1.9,1186,1.721,1187,1.9,1188,1.569,1189,1.9,1190,1.569,1191,2.584,1192,1.9,1193,1.721,1194,1.9,1195,1.9,1196,2.584,1197,1.9,1198,1.467,1199,1.9,1200,1.681,1201,1.852,1202,1.9,1235,3.591,1244,2.312,1246,4.744,1253,3.462,1265,2.389,1267,2.51,1789,3.235,2170,3.537,2171,5.437,2172,5.437,2173,4.793,2174,4.845,2175,6.091,2176,5.437,2177,4.793,2178,5.437,2179,4.509,2180,4.272,2181,4.793,2182,4.509,2183,4.793,2184,3.537,2185,3.327,2186,3.327,2187,3.537,2188,3.537,2189,3.537]],["title/directives/TsHeaderRowDefDirective.html",[257,0.722,1191,1.618]],["body/directives/TsHeaderRowDefDirective.html",[2,0.074,3,0.054,4,0.034,5,0.034,7,0.694,12,1.25,19,0.008,21,0.568,23,4.11,25,0.12,27,0.249,33,0.094,37,0.086,39,0.006,40,0.006,63,3.055,80,0.943,114,1.232,124,1.13,128,1.375,145,2.26,165,1.671,168,1.656,173,1.442,200,1.982,204,2.023,225,1.467,226,1.579,231,2.529,233,1.487,234,2.118,235,2.118,236,1.827,237,1.827,249,1.047,257,1.333,347,1.866,361,3.909,365,1.753,418,3.169,547,2.029,757,1.473,809,4.581,810,2.813,815,2.139,833,3.454,1011,2.793,1091,3.677,1136,2.043,1158,2.043,1166,2.481,1191,2.842,1196,2.589,1235,4.481,1244,2.811,1246,4.897,1253,3.935,1265,2.716,1267,2.853,1789,3.677,2170,4.3,2171,5.448,2172,5.448,2173,4.3,2174,4.855,2175,5.98,2176,5.98,2177,5.448,2178,5.98,2179,5.625,2180,5.33,2181,5.98,2182,5.125,2183,5.448,2184,4.3,2185,4.044,2186,4.044,2187,4.3,2188,4.3,2189,4.3]],["title/components/TsIconButtonComponent.html",[80,0.537,1138,1.697]],["body/components/TsIconButtonComponent.html",[2,0.056,3,0.041,4,0.036,5,0.051,7,0.525,11,0.59,13,1.297,14,1.368,16,0.952,18,1.649,19,0.008,20,0.887,21,0.858,22,0.766,25,0.1,27,0.189,33,0.049,35,0.963,37,0.071,39,0.005,40,0.005,43,1.474,49,1.21,50,1.615,51,2.368,52,2.31,58,1.092,64,1.639,66,1.209,72,1.819,80,0.99,90,1.485,93,1.474,96,1.508,109,1.092,114,1.022,118,1.136,120,0.704,124,0.938,128,1.192,133,2.63,140,1.876,158,1.16,165,1.263,166,3.043,167,2.282,168,1.544,171,1.886,173,1.09,201,2.186,202,1.684,203,2.2,204,1.455,205,1.34,210,1.573,224,1.796,225,1.638,226,1.807,227,1.72,229,1.649,233,1.234,234,1.758,235,1.758,236,1.517,237,1.517,245,1.112,247,0.943,250,2.592,257,0.958,260,1.425,281,2.415,291,2.531,299,2.254,300,1.348,349,1.16,365,1.455,402,1.796,414,1.544,419,1.581,452,3.056,471,1.409,473,3.11,492,2.63,504,2.31,505,1.835,508,3.147,518,3.051,622,0.659,629,1.441,668,2.347,674,1.508,677,1.113,683,3.019,684,6.022,699,1.544,751,1.581,757,1.113,761,3.056,771,2,772,5.017,790,1.508,800,1.581,815,1.396,816,1.796,954,1.544,1010,1.544,1011,1.348,1012,1.745,1094,3.025,1112,1.791,1113,3.02,1114,1.745,1115,1.745,1116,2.429,1117,1.745,1118,1.745,1119,1.62,1120,1.745,1121,1.62,1122,1.745,1123,1.544,1124,1.745,1125,1.581,1126,1.581,1127,1.745,1128,1.62,1129,1.745,1130,1.581,1131,1.745,1132,1.581,1133,1.745,1134,1.62,1135,1.745,1136,1.544,1137,2.429,1138,2.803,1139,1.62,1140,1.745,1141,1.544,1142,1.745,1143,1.581,1144,1.745,1145,1.581,1146,1.745,1147,1.581,1148,1.745,1149,1.581,1150,1.745,1151,1.745,1152,1.581,1153,1.745,1154,1.544,1155,1.745,1156,1.66,1157,1.745,1158,1.544,1159,1.581,1160,1.745,1161,1.66,1162,1.745,1163,1.441,1164,1.136,1165,1.745,1166,1.348,1167,1.745,1168,1.581,1169,1.745,1170,1.581,1171,1.745,1172,1.62,1173,1.745,1174,1.581,1175,1.745,1176,1.441,1177,1.745,1178,1.441,1179,2.429,1180,1.508,1181,1.745,1182,1.544,1183,1.745,1184,1.441,1185,1.745,1186,1.581,1187,1.745,1188,1.441,1189,1.745,1190,1.441,1191,1.544,1192,1.745,1193,1.581,1194,1.745,1195,1.745,1196,1.544,1197,1.745,1198,1.348,1199,1.745,1200,1.544,1201,1.701,1202,1.745,1222,3.671,1447,2.368,1789,2.193,1836,4.858,2190,7.516,2191,4.306,2192,5.992,2193,5.992,2194,5.992,2195,7.833,2196,6.351,2197,6.892,2198,4.306,2199,3.897,2200,6.12,2201,4.306,2202,6.12,2203,4.306,2204,4.306,2205,4.306,2206,4.306,2207,5.992,2208,4.306,2209,4.306,2210,5.992,2211,4.306,2212,6.892,2213,4.306,2214,4.306,2215,3.249,2216,4.306]],["title/modules/TsIconButtonModule.html",[619,0.618,642,2.89]],["body/modules/TsIconButtonModule.html",[2,0.087,3,0.063,4,0.04,5,0.04,19,0.008,25,0.155,27,0.291,33,0.101,37,0.063,39,0.007,40,0.007,116,1.578,249,0.808,313,1.311,416,2.017,619,1.086,621,1.788,622,1.016,623,1.905,642,5.987,643,4.113,662,2.326,665,2.326,683,2.653,684,4.709,686,3.379,739,2.428,740,1.988,792,5.983,793,5.007,795,7.024,1138,3.561,1208,5.983,1209,3.616,2190,5.878,2217,5.878,2218,5.878,2219,6.634,2220,5.878,2221,6.634]],["title/components/TsIconComponent.html",[80,0.537,1139,1.697]],["body/components/TsIconComponent.html",[2,0.051,3,0.037,4,0.039,5,0.052,7,0.683,11,0.537,12,0.785,13,1.143,14,0.895,16,0.949,18,1.802,19,0.008,20,0.991,21,0.84,22,1.165,25,0.131,27,0.172,33,0.074,34,0.774,37,0.072,39,0.005,40,0.005,43,1.342,49,1.101,50,1.056,51,2.216,52,2.754,54,0.932,55,2.781,58,1.152,62,2.887,66,1.321,72,1.034,73,1.2,74,1.68,80,1.003,90,1.063,93,1.342,96,1.373,109,0.959,114,1.219,117,2.136,120,0.916,128,0.897,140,1.755,157,1.549,158,1.056,165,1.149,168,1.503,169,1.63,173,0.992,188,1.056,189,1.549,194,2.796,195,1.72,196,1.72,201,2.096,202,2.125,203,2.624,204,1.362,205,1.254,210,1.495,224,1.68,225,1.631,226,1.802,227,1.61,229,1.543,233,1.155,234,1.645,235,1.645,236,1.419,237,1.419,245,1.588,247,1.656,250,1.474,257,0.897,265,2.165,266,1.847,299,3.172,300,1.227,309,1.311,322,1.334,349,1.926,387,2.348,414,1.405,419,1.439,471,1.282,505,1.717,520,2.136,554,2.654,589,1.674,622,0.6,629,1.311,674,2.649,677,1.013,683,3.163,699,1.405,751,1.439,757,1.013,769,2.303,771,1.82,774,1.674,777,2.51,790,1.373,800,1.439,815,1.307,816,1.68,954,1.405,1010,1.405,1011,1.227,1012,1.588,1047,3.108,1060,3.591,1087,2.957,1094,2.873,1097,2.781,1112,2.332,1113,2.896,1114,1.588,1115,1.588,1116,2.273,1117,1.588,1118,1.588,1119,1.474,1120,1.588,1121,1.474,1122,1.588,1123,1.405,1124,1.588,1125,1.439,1126,1.439,1127,1.588,1128,1.474,1129,1.588,1130,1.439,1131,1.588,1132,1.439,1133,1.588,1134,1.474,1135,1.588,1136,1.405,1137,2.273,1138,1.474,1139,2.688,1140,1.588,1141,1.405,1142,1.588,1143,1.439,1144,1.588,1145,1.439,1146,1.588,1147,1.439,1148,1.588,1149,1.439,1150,1.588,1151,1.588,1152,1.439,1153,1.588,1154,1.405,1155,1.588,1156,1.51,1157,1.588,1158,1.405,1159,1.439,1160,1.588,1161,1.51,1162,1.588,1163,1.311,1164,1.034,1165,1.588,1166,1.227,1167,1.588,1168,1.439,1169,1.588,1170,1.439,1171,1.588,1172,1.474,1173,1.588,1174,1.439,1175,1.588,1176,1.311,1177,1.588,1178,1.311,1179,2.273,1180,1.373,1181,1.588,1182,1.405,1183,1.588,1184,1.311,1185,1.588,1186,1.439,1187,1.588,1188,1.311,1189,1.588,1190,1.311,1191,1.405,1192,1.588,1193,1.439,1194,1.588,1195,1.588,1196,1.405,1197,1.588,1198,1.227,1199,1.588,1200,1.405,1201,1.549,1202,1.588,1221,1.63,1225,3.771,1258,5.671,1459,3.056,1789,1.996,1813,3.177,2103,2.4,2222,3.472,2223,6.547,2224,3.98,2225,5.607,2226,5.607,2227,7.146,2228,6.547,2229,8.432,2230,6.547,2231,3.919,2232,7.146,2233,6.13,2234,5.607,2235,4.647,2236,5.607,2237,5.607,2238,3.919,2239,5.607,2240,3.919,2241,6.968,2242,3.919,2243,3.919,2244,3.919,2245,3.919,2246,3.919,2247,3.919,2248,3.919,2249,3.919,2250,2.957,2251,5.607,2252,3.919,2253,3.472,2254,3.472,2255,3.177,2256,3.919,2257,3.919,2258,3.919,2259,3.919,2260,3.919,2261,2.957,2262,3.472,2263,3.919,2264,3.919,2265,6.13,2266,4.546,2267,4.967,2268,3.919,2269,5.607,2270,3.919,2271,3.919,2272,3.919]],["title/modules/TsIconModule.html",[619,0.618,643,2.036]],["body/modules/TsIconModule.html",[2,0.089,3,0.065,4,0.041,5,0.041,19,0.008,25,0.151,27,0.299,33,0.102,37,0.065,39,0.007,40,0.007,116,1.623,249,0.831,313,1.348,416,2.041,619,1.104,621,1.839,622,1.045,623,1.959,643,4.18,662,2.365,665,2.365,739,2.469,740,2.045,1139,3.573,2262,6.045,2273,6.045,2274,6.045,2275,6.045,2276,6.824,2277,8.062,2278,8.062]],["title/classes/TsImageDimensions.html",[37,0.043,2123,3.405]],["body/classes/TsImageDimensions.html",[2,0.089,3,0.065,4,0.041,5,0.053,7,0.833,11,0.937,12,1.131,13,1.468,14,1.843,16,0.902,18,1.882,19,0.008,20,0.775,21,0.856,22,1.217,33,0.077,37,0.082,39,0.007,40,0.007,210,1.561,241,2.573,260,2.244,519,4.205,2080,5.684,2099,7.194,2100,4.381,2105,6.925,2116,4.855,2123,6.092,2279,6.84,2280,6.84,2281,6.84,2282,6.84,2283,6.84]],["title/modules/TsInputModule.html",[619,0.618,644,2.764]],["body/modules/TsInputModule.html",[2,0.082,3,0.06,4,0.038,5,0.038,19,0.008,25,0.156,27,0.275,33,0.1,37,0.06,39,0.007,40,0.007,66,1.266,116,1.494,175,1.803,249,1.009,313,1.241,416,1.97,619,1.05,621,1.692,622,0.961,623,1.803,631,6.051,643,4.06,644,5.814,660,4.904,661,5.512,662,2.249,665,2.249,667,5.562,686,3.198,709,3.55,710,4.022,715,4.457,739,2.349,740,1.882,741,4.336,742,5.157,746,5.787,747,4.738,1141,3.395,2284,5.562,2285,5.562,2286,5.562,2287,6.279,2288,5.562,2289,6.279,2290,7.336,2291,6.279,2292,7.669]],["title/components/TsLinkComponent.html",[80,0.537,1143,1.657]],["body/components/TsLinkComponent.html",[2,0.06,3,0.043,4,0.037,5,0.048,7,0.557,11,0.974,12,0.875,13,1.321,16,0.95,19,0.008,20,0.806,21,0.762,25,0.076,27,0.2,33,0.052,37,0.073,39,0.005,40,0.005,43,1.566,46,1.095,49,1.285,50,1.232,51,2.468,52,2.407,58,1.042,62,1.566,66,0.922,80,1.006,90,1.348,93,1.566,96,1.602,108,1.756,114,1.065,120,1.163,124,1.496,140,1.955,158,1.232,165,1.341,168,1.533,173,1.157,201,2.525,202,1.756,205,1.925,210,1.624,224,1.872,225,1.642,226,1.813,227,1.793,229,1.719,231,2.188,233,1.286,234,1.832,235,1.832,236,1.581,237,1.581,245,1.159,257,0.999,260,1.486,265,1.258,294,1.72,300,1.431,309,1.53,349,1.232,387,1.64,402,1.872,419,1.679,471,1.496,491,5.291,494,5.71,505,2.53,622,0.7,629,1.53,674,1.602,677,1.182,683,2.381,699,1.64,751,1.679,757,1.182,771,2.124,772,5.291,790,1.602,800,1.679,815,1.455,816,1.872,954,1.64,961,4.001,1010,1.64,1011,1.431,1012,1.853,1073,2.585,1112,1.902,1113,3.098,1114,1.853,1115,1.853,1116,2.532,1117,1.853,1118,1.853,1119,1.72,1120,1.853,1121,1.72,1122,1.853,1123,1.64,1124,1.853,1125,1.679,1126,1.679,1127,1.853,1128,1.72,1129,1.853,1130,1.679,1131,1.853,1132,1.679,1133,1.853,1134,1.72,1135,1.853,1136,1.64,1137,2.532,1138,1.72,1139,1.72,1140,1.853,1141,1.64,1142,1.853,1143,2.807,1144,1.853,1145,1.679,1146,1.853,1147,1.679,1148,1.853,1149,1.679,1150,1.853,1151,1.853,1152,1.679,1153,1.853,1154,1.64,1155,1.853,1156,1.763,1157,1.853,1158,1.64,1159,1.679,1160,1.853,1161,1.763,1162,1.853,1163,1.53,1164,1.207,1165,1.853,1166,1.431,1167,1.853,1168,1.679,1169,1.853,1170,1.679,1171,1.853,1172,1.72,1173,1.853,1174,1.679,1175,1.853,1176,1.53,1177,1.853,1178,1.53,1179,2.532,1180,1.602,1181,1.853,1182,1.64,1183,1.853,1184,1.53,1185,1.853,1186,1.679,1187,1.853,1188,1.53,1189,1.853,1190,1.53,1191,1.64,1192,1.853,1193,1.679,1194,1.853,1195,1.853,1196,1.64,1197,1.853,1198,1.431,1199,1.853,1200,1.64,1201,1.807,1202,1.853,1337,3.707,1549,3.707,1644,4.024,2253,6.772,2293,4.573,2294,6.246,2295,6.246,2296,6.246,2297,7.644,2298,7.113,2299,6.246,2300,4.573,2301,4.573,2302,4.573,2303,4.573,2304,5.533,2305,4.573,2306,4.573,2307,4.573,2308,3.246]],["title/modules/TsLinkModule.html",[619,0.618,645,3.034]],["body/modules/TsLinkModule.html",[2,0.088,3,0.064,4,0.04,5,0.04,19,0.008,25,0.154,27,0.294,33,0.102,37,0.064,39,0.007,40,0.007,116,1.596,249,0.817,313,1.326,416,2.027,619,1.093,621,1.808,622,1.027,623,1.926,643,4.124,645,6.297,662,2.341,665,2.341,686,3.417,739,2.445,740,2.011,1143,3.481,2309,5.944,2310,5.944,2311,6.709,2312,5.944,2313,6.709,2314,7.071,2315,5.439,2316,7.982]],["title/components/TsLoadingOverlayComponent.html",[80,0.537,1145,1.657]],["body/components/TsLoadingOverlayComponent.html",[2,0.07,3,0.051,4,0.042,5,0.032,7,0.65,19,0.008,20,0.87,25,0.089,27,0.233,33,0.06,37,0.077,39,0.006,40,0.006,66,1.075,80,1.045,93,1.825,96,1.868,124,1.083,158,1.437,173,1.35,201,2.384,202,1.945,204,1.68,205,1.547,206,4.238,210,1.579,225,1.652,226,1.827,229,1.904,233,1.425,236,1.751,237,1.751,238,1.715,257,1.107,300,2.88,419,1.958,471,1.745,505,2.119,507,4.238,622,0.816,629,1.784,674,1.868,677,1.378,683,1.784,689,4.023,699,1.912,751,1.958,757,1.378,790,1.868,800,1.958,815,1.612,816,2.073,954,1.912,1010,1.912,1011,2.166,1012,2.161,1060,4.432,1113,3.294,1114,2.161,1115,2.161,1116,2.804,1117,2.161,1118,2.161,1119,2.005,1120,2.161,1121,2.005,1122,2.161,1123,1.912,1124,2.161,1125,1.958,1126,1.958,1127,2.161,1128,2.005,1129,2.161,1130,1.958,1131,2.161,1132,1.958,1133,2.161,1134,2.005,1135,2.161,1136,1.912,1137,2.804,1138,2.005,1139,2.005,1140,2.161,1141,1.912,1142,2.161,1143,1.958,1144,2.161,1145,2.985,1146,2.161,1147,1.958,1148,2.161,1149,1.958,1150,2.161,1151,2.161,1152,1.958,1153,2.161,1154,1.912,1155,2.161,1156,2.055,1157,2.161,1158,1.912,1159,1.958,1160,2.161,1161,2.055,1162,2.161,1163,1.784,1164,1.407,1165,2.161,1166,1.669,1167,2.161,1168,1.958,1169,2.161,1170,1.958,1171,2.161,1172,2.005,1173,2.161,1174,1.958,1175,2.161,1176,1.784,1177,2.161,1178,1.784,1179,2.804,1180,1.868,1181,2.161,1182,1.912,1183,2.161,1184,1.784,1185,2.161,1186,1.958,1187,2.161,1188,1.784,1189,2.161,1190,1.784,1191,1.912,1192,2.161,1193,2.985,1194,2.161,1195,2.161,1196,1.912,1197,2.161,1198,1.669,1199,2.161,1200,1.912,1201,2.107,1202,2.161,1673,6.793,2317,4.323,2318,5.332,2319,6.919]],["title/directives/TsLoadingOverlayDirective.html",[257,0.722,1193,1.657]],["body/directives/TsLoadingOverlayDirective.html",[0,1.943,2,0.061,3,0.044,4,0.028,5,0.053,7,0.773,10,2.507,11,0.641,12,0.889,13,1.384,14,1.448,16,0.947,18,1.981,19,0.008,20,0.815,21,0.848,22,1.281,25,0.135,27,0.205,28,1.986,33,0.053,34,1.254,35,1.419,37,0.044,39,0.005,40,0.005,46,1.24,58,1.182,79,3.211,80,0.856,109,1.268,120,1.261,129,2.644,140,1.986,145,1.986,166,2.983,168,1.433,170,3.344,188,1.71,189,1.849,193,1.566,202,1.315,205,1.047,206,3.887,210,1.643,224,1.902,225,1.082,233,1.661,238,1.573,245,1.433,247,2,249,0.773,257,1.29,291,3.729,300,2.604,309,2.124,322,1.919,335,3.585,336,1.465,342,2.387,349,1.261,414,1.678,452,3.322,464,5.479,480,2.995,547,1.783,560,3.211,689,6.694,757,1.209,760,1.986,761,3.322,771,2.174,774,1.999,777,2.998,794,5.825,849,3.794,913,4.231,1047,2.507,1089,3.729,1112,1.947,1145,1.719,1193,2.33,1217,6.378,1296,3.729,1433,4.086,1673,6.088,1697,6.838,1698,4.146,1770,5.837,1791,4.146,1818,3.794,2317,7.192,2320,4.68,2321,8.508,2322,6.345,2323,6.345,2324,7.718,2325,7.718,2326,6.345,2327,7.199,2328,8.508,2329,7.199,2330,7.718,2331,8.508,2332,6.345,2333,7.199,2334,6.345,2335,6.345,2336,6.345,2337,6.345,2338,4.68,2339,4.68,2340,8.655,2341,4.68,2342,8.068,2343,4.68,2344,4.68,2345,4.68,2346,4.146,2347,4.68,2348,6.345,2349,4.68,2350,4.68,2351,4.68,2352,6.345,2353,4.68,2354,4.68,2355,4.68,2356,4.68,2357,4.68,2358,4.68,2359,4.68,2360,4.68,2361,4.68,2362,6.345]],["title/modules/TsLoadingOverlayModule.html",[619,0.618,646,3.203]],["body/modules/TsLoadingOverlayModule.html",[2,0.087,3,0.064,4,0.04,5,0.04,19,0.008,25,0.15,27,0.293,33,0.101,37,0.064,39,0.007,40,0.007,116,1.591,249,0.815,300,2.663,313,1.321,416,2.024,619,1.091,621,1.802,622,1.024,623,1.92,646,6.643,662,2.336,665,2.336,689,5.046,739,2.44,740,2.004,1145,3.415,1193,3.48,1755,7.057,2317,5.421,2346,5.924,2363,5.924,2364,5.924,2365,5.924,2366,6.686,2367,7.966]],["title/components/TsLoginFormComponent.html",[80,0.537,1147,1.657]],["body/components/TsLoginFormComponent.html",[0,1.382,2,0.038,3,0.028,4,0.027,5,0.052,7,0.55,10,1.784,11,0.401,12,0.632,13,1.401,14,1.03,16,0.965,18,1.242,19,0.008,20,0.757,21,0.848,22,0.803,23,2.227,25,0.112,27,0.128,30,1.545,33,0.051,35,0.655,37,0.072,39,0.004,40,0.004,41,0.357,46,1.089,54,1.074,58,1.235,59,1.829,60,2.891,64,1.31,66,1.534,68,1.981,72,0.773,75,1.324,80,0.928,90,1.51,93,3.101,96,1.026,108,1.88,109,0.661,112,1.541,114,1.331,116,1.895,118,2.058,120,0.478,124,1.269,128,1.316,129,1.075,134,2.048,140,1.413,152,3.299,157,1.784,158,0.789,162,1.413,167,1.896,168,1.626,171,1.567,172,2.037,173,0.741,175,0.841,201,2.472,202,1.269,204,1.096,205,1.384,210,1.257,224,1.353,225,1.604,226,1.76,227,1.296,229,1.242,233,0.929,236,1.143,237,1.143,238,1.119,245,1.479,247,1.666,249,0.754,250,2.329,256,1.619,257,0.722,260,1.31,265,1.704,268,1.324,294,3.528,300,0.916,309,1.511,313,0.578,322,1.473,336,0.916,347,0.757,349,0.789,381,5.396,386,3.374,392,2.717,394,4.163,419,1.075,436,1.846,471,0.958,481,3.792,482,2.765,485,2.653,492,1.981,505,2.52,508,2.119,510,1.143,525,2.765,559,2.227,561,2.227,608,2.299,622,0.448,629,0.98,661,3.792,674,1.026,677,0.757,683,0.98,691,6.526,699,1.05,715,2.078,751,1.075,757,0.757,760,2.212,771,1.36,790,1.93,800,1.075,808,1.793,815,1.052,816,1.353,817,2.159,827,1.784,839,4.526,840,3.638,914,2.227,954,2.641,973,2.891,996,1.444,1010,1.05,1011,0.916,1012,1.187,1047,1.784,1087,4.672,1089,1.721,1112,1.218,1113,2.509,1114,1.187,1115,1.187,1116,1.829,1117,1.187,1118,1.187,1119,1.101,1120,1.187,1121,1.101,1122,1.187,1123,2.641,1124,1.187,1125,1.075,1126,1.075,1127,1.187,1128,1.101,1129,1.187,1130,1.075,1131,1.187,1132,1.075,1133,1.187,1134,1.101,1135,1.187,1136,1.05,1137,1.829,1138,1.101,1139,1.101,1140,1.187,1141,2.534,1142,1.187,1143,2.023,1144,1.187,1145,1.075,1146,1.187,1147,2.273,1148,1.187,1149,1.075,1150,1.187,1151,1.187,1152,1.075,1153,1.187,1154,1.05,1155,1.187,1156,1.128,1157,1.187,1158,1.05,1159,1.075,1160,1.187,1161,1.128,1162,1.187,1163,0.98,1164,0.773,1165,1.187,1166,0.916,1167,1.187,1168,1.075,1169,1.187,1170,1.075,1171,1.187,1172,1.101,1173,1.187,1174,1.075,1175,1.187,1176,0.98,1177,1.187,1178,0.98,1179,1.829,1180,1.026,1181,1.187,1182,1.05,1183,1.187,1184,0.98,1185,1.187,1186,1.075,1187,1.187,1188,0.98,1189,1.187,1190,0.98,1191,1.05,1192,1.187,1193,1.075,1194,1.187,1195,1.187,1196,1.05,1197,1.187,1198,0.916,1199,1.187,1200,1.05,1201,1.157,1202,1.187,1216,2.891,1255,2.891,1296,1.721,1300,3.406,1436,1.541,1447,1.157,1467,2.376,1564,4.87,1789,2.299,1883,3.035,1897,3.406,1907,4.163,1918,4.163,1938,3.406,2014,2.552,2043,4.394,2368,7.011,2369,2.594,2370,5.113,2371,5.729,2372,7.29,2373,3.999,2374,3.999,2375,5.484,2376,5.484,2377,5.484,2378,5.484,2379,6.26,2380,6.26,2381,4.88,2382,5.925,2383,4.88,2384,4.88,2385,5.925,2386,5.925,2387,2.594,2388,4.466,2389,4.514,2390,2.928,2391,2.928,2392,2.928,2393,3.66,2394,5.484,2395,3.999,2396,2.928,2397,2.928,2398,2.928,2399,3.204,2400,2.928,2401,3.999,2402,2.928,2403,6.26,2404,3.999,2405,5.556,2406,3.999,2407,3.406,2408,2.928,2409,3.66,2410,4.88,2411,2.928,2412,2.928,2413,4.88,2414,2.928,2415,2.928,2416,3.204,2417,2.928,2418,3.999,2419,2.594,2420,2.594,2421,2.374,2422,2.594,2423,2.594,2424,2.594,2425,2.594,2426,2.594,2427,3.999,2428,3.999,2429,2.594,2430,2.594,2431,2.209,2432,1.875,2433,2.594]],["title/modules/TsLoginFormModule.html",[619,0.618,647,3.203]],["body/modules/TsLoginFormModule.html",[2,0.08,3,0.058,4,0.037,5,0.037,19,0.008,25,0.157,27,0.269,33,0.099,37,0.058,39,0.006,40,0.006,93,2.592,116,1.463,175,1.766,249,1,313,1.215,416,1.952,554,2.493,619,1.037,621,1.657,622,0.942,623,1.766,632,4.713,636,6.02,644,5.484,645,6.02,647,6.777,656,6.02,661,5.484,662,2.221,665,2.221,668,3.352,671,5.448,687,4.641,688,5.448,691,4.641,705,5.448,715,4.365,739,2.319,740,1.843,742,5.092,803,4.45,804,3.352,1147,3.444,2368,4.986,2434,5.448,2435,5.448,2436,6.15,2437,5.448,2438,6.15,2439,6.15,2440,7.572]],["title/interfaces/TsLoginFormResponse.html",[41,0.55,2421,3.658]],["body/interfaces/TsLoginFormResponse.html",[0,1.338,2,0.057,3,0.042,4,0.026,5,0.026,7,0.532,10,1.726,11,0.598,12,0.848,13,1.414,14,0.997,16,0.919,19,0.008,21,0.692,25,0.131,27,0.191,30,1.496,33,0.068,35,0.977,37,0.075,39,0.005,40,0.005,41,0.737,46,1.239,54,1.039,58,0.887,59,1.771,60,2.798,64,1.039,66,1.512,68,1.917,72,1.153,75,1.281,80,0.892,93,3.112,108,1.952,112,3.186,114,1.343,116,1.873,118,2.078,120,0.989,124,1.333,128,1.303,129,2.223,134,2.127,140,1.368,152,3.426,157,1.726,162,1.368,167,2.127,168,1.655,171,1.532,172,1.972,173,1.106,175,1.254,201,2.45,202,1.228,204,1.061,205,0.977,210,0.997,224,1.309,225,0.745,226,1.147,227,1.254,229,1.202,233,0.9,236,1.106,237,1.106,238,1.083,245,1.55,247,1.643,249,0.737,250,2.277,256,1.567,260,1.039,265,1.666,294,3.546,309,1.462,313,0.863,322,1.44,336,1.368,347,1.129,381,5.568,386,4.255,392,2.986,394,4.07,436,1.821,481,3.708,482,2.676,485,4.407,492,1.917,505,2.495,508,2.072,510,1.106,525,2.676,559,2.155,561,2.155,608,2.225,661,3.708,691,3.297,715,3.101,760,1.895,790,1.531,808,3.708,817,2.09,827,1.726,839,4.449,840,3.557,914,2.155,954,2.689,973,2.798,996,2.155,1047,1.726,1087,4.568,1089,2.568,1123,2.491,1141,2.491,1143,1.604,1147,1.604,1255,2.798,1296,2.568,1300,3.297,1436,2.3,1447,1.726,1467,2.3,1564,4.449,1789,2.225,1883,2.938,1897,3.297,1907,3.927,1918,4.07,1938,3.297,2014,2.47,2043,4.296,2368,3.542,2369,3.87,2370,5.814,2371,4.907,2372,7.217,2373,3.87,2374,3.87,2375,3.87,2376,3.87,2377,3.87,2378,3.87,2379,5.362,2380,5.362,2381,3.87,2382,3.87,2383,3.87,2384,3.87,2385,3.87,2386,5.362,2388,3.542,2393,3.542,2394,5.362,2395,3.87,2399,3.101,2401,3.87,2403,6.153,2404,3.87,2405,5.658,2406,3.87,2407,3.297,2409,3.542,2410,6.976,2413,5.362,2416,3.101,2418,3.87,2419,3.87,2420,3.87,2421,4.907,2422,5.362,2423,3.87,2424,3.87,2425,3.87,2426,3.87,2427,5.362,2428,5.362,2429,3.87,2430,3.87,2431,3.297,2432,2.798,2433,3.87]],["title/modules/TsMaskModule.html",[619,0.618,648,3.203]],["body/modules/TsMaskModule.html",[2,0.089,3,0.065,4,0.041,5,0.041,19,0.008,25,0.148,27,0.298,33,0.102,37,0.065,39,0.007,40,0.007,116,1.621,249,0.83,313,1.347,416,2.04,417,6.473,419,3.506,619,1.103,621,1.837,622,1.044,623,1.957,648,6.574,662,2.363,665,2.363,739,2.468,740,2.043,2441,6.039,2442,6.039,2443,6.039,2444,6.039,2445,6.816,2446,8.057]],["title/components/TsMenuComponent.html",[80,0.537,1149,1.657]],["body/components/TsMenuComponent.html",[2,0.044,3,0.032,4,0.03,5,0.053,7,0.407,8,2.83,11,0.458,12,0.699,13,1.436,16,0.981,19,0.008,20,0.75,21,0.875,22,0.595,23,1.65,25,0.1,27,0.146,28,1.87,30,1.145,33,0.075,37,0.063,39,0.004,40,0.004,43,1.145,45,1.047,49,0.94,50,1.345,51,2.361,52,2.303,54,1.769,56,2.484,58,1.187,59,1.355,62,1.709,64,0.795,66,0.674,73,1.529,76,4.241,80,0.917,90,1.715,93,1.145,96,1.172,108,1.863,109,1.09,114,1.269,120,0.816,123,0.846,124,0.935,128,0.799,133,1.468,134,1.529,140,1.047,155,2.909,158,0.901,161,1.172,164,3.043,165,0.981,166,1.199,168,1.53,172,2.253,173,0.846,194,2.552,195,1.468,196,1.468,201,2.182,202,1.403,203,1.833,205,1.336,208,1.703,210,1.619,224,1.496,225,1.617,226,1.778,227,1.433,229,1.374,233,1.028,234,1.464,235,1.464,236,1.264,237,1.264,238,1.238,245,1.503,247,1.629,249,0.608,250,1.878,256,3.268,257,0.799,279,3.544,294,2.798,295,1.509,299,2.667,300,1.047,309,1.671,310,1.65,321,3.375,322,1.576,331,1.703,349,0.901,365,1.213,387,1.791,414,1.199,419,1.228,422,1.258,434,1.529,471,1.094,473,2.696,480,2.485,505,2.03,508,2.547,512,4.951,560,2.756,561,2.463,622,0.512,629,1.119,674,1.172,677,0.864,683,2.58,699,1.199,712,1.965,751,1.228,757,0.864,760,1.563,771,1.553,790,2.093,800,1.228,810,1.634,815,1.163,816,1.496,826,3.66,857,2.048,872,1.891,954,1.791,956,1.509,1010,1.199,1011,2.074,1012,1.355,1014,2.463,1015,2.543,1047,1.321,1050,5.624,1051,4.844,1074,4.048,1097,2.374,1099,3.145,1101,3.145,1112,1.391,1113,2.686,1114,1.355,1115,1.355,1116,2.024,1117,1.355,1118,1.355,1119,1.258,1120,1.355,1121,1.258,1122,1.355,1123,1.199,1124,1.355,1125,1.228,1126,1.228,1127,1.355,1128,1.258,1129,1.355,1130,1.228,1131,1.355,1132,1.228,1133,1.355,1134,1.258,1135,1.355,1136,1.199,1137,2.024,1138,1.258,1139,1.258,1140,1.355,1141,1.199,1142,1.355,1143,1.228,1144,1.355,1145,1.228,1146,1.355,1147,1.228,1148,1.355,1149,2.433,1150,1.355,1151,1.355,1152,1.228,1153,1.355,1154,1.199,1155,1.355,1156,1.289,1157,1.355,1158,1.199,1159,1.228,1160,1.355,1161,1.289,1162,1.355,1163,1.119,1164,0.882,1165,1.355,1166,1.047,1167,1.355,1168,1.228,1169,1.355,1170,1.228,1171,1.355,1172,1.258,1173,1.355,1174,1.228,1175,1.355,1176,1.119,1177,1.355,1178,1.119,1179,2.024,1180,1.172,1181,1.355,1182,1.199,1183,1.355,1184,1.119,1185,1.355,1186,1.228,1187,1.355,1188,1.119,1189,1.355,1190,1.119,1191,1.199,1192,1.355,1193,1.228,1194,1.355,1195,1.355,1196,1.199,1197,1.355,1198,1.047,1199,1.355,1200,1.199,1201,1.321,1202,1.355,1220,2.523,1221,1.391,1225,2.249,1433,3.264,1475,2.319,1564,3.198,1908,2.249,2009,5.28,2014,1.891,2255,2.711,2308,3.544,2447,2.962,2448,4.993,2449,4.993,2450,6.627,2451,6.627,2452,6.627,2453,8.246,2454,5.975,2455,5.975,2456,5.975,2457,5.975,2458,7.091,2459,3.344,2460,3.344,2461,3.344,2462,5.293,2463,3.344,2464,5.293,2465,3.344,2466,3.344,2467,6.282,2468,4.423,2469,4.993,2470,3.344,2471,3.344,2472,3.344,2473,3.344,2474,6.627,2475,3.344,2476,7.438,2477,3.344,2478,7.438,2479,3.344,2480,3.344,2481,4.993,2482,3.344,2483,3.344,2484,4.993,2485,3.344,2486,2.374,2487,2.962,2488,3.344,2489,2.962,2490,2.962,2491,3.344,2492,2.142,2493,3.344,2494,3.344,2495,3.344,2496,3.344,2497,3.344,2498,3.344,2499,3.344,2500,2.711,2501,3.344,2502,3.344,2503,3.344,2504,3.344,2505,2.711,2506,4.993,2507,3.344,2508,3.344,2509,3.344,2510,3.344,2511,3.344,2512,3.344]],["title/modules/TsMenuModule.html",[619,0.618,649,3.034]],["body/modules/TsMenuModule.html",[2,0.086,3,0.062,4,0.039,5,0.039,19,0.008,25,0.156,27,0.288,33,0.101,37,0.062,39,0.007,40,0.007,116,1.563,249,0.8,313,1.298,416,2.009,619,1.079,621,1.77,622,1.006,623,1.886,632,4.787,643,4.104,649,6.336,662,2.312,665,2.312,668,3.58,686,3.345,739,2.414,740,1.969,792,5.948,793,4.957,1149,3.473,2505,5.326,2513,5.819,2514,5.819,2515,6.569,2516,5.819,2517,6.569,2518,6.982,2519,7.882]],["title/interfaces/TsNavigationActionItem.html",[41,0.55,497,2.764]],["body/interfaces/TsNavigationActionItem.html",[0,1.062,2,0.045,3,0.033,4,0.021,5,0.021,7,0.422,10,1.37,11,0.475,12,0.718,13,1.38,14,0.791,16,0.858,19,0.008,20,0.764,21,0.777,25,0.102,27,0.152,28,1.085,33,0.088,34,1.705,35,1.365,37,0.058,39,0.004,40,0.004,41,0.95,45,2.253,46,1.236,54,1.452,56,1.214,58,0.751,63,1.336,64,1.452,69,1.16,71,1.825,72,1.9,73,2.615,74,1.829,75,1.79,79,1.442,80,0.802,83,1.889,97,2.037,103,2.7,108,0.974,109,1.251,112,1.825,114,0.591,118,1.353,120,0.838,123,0.877,124,1.337,128,0.976,129,1.273,132,2.037,133,1.521,134,2.066,140,1.085,154,2.7,155,3.45,158,0.934,160,1.405,162,1.911,164,2.611,165,1.017,166,2.189,167,1.869,168,1.252,171,1.298,172,1.564,173,0.877,182,1.765,184,3.666,185,1.336,188,0.934,193,1.16,197,1.889,200,1.452,201,2.287,202,0.974,204,1.638,205,1.791,208,3.971,210,0.791,224,1.039,225,0.591,226,0.972,227,0.995,229,0.954,233,0.714,234,1.017,235,1.017,236,0.877,237,0.877,238,0.859,241,1.304,245,1.336,247,1.708,256,2.582,260,1.604,265,0.954,267,2.352,268,1.504,272,1.678,273,1.678,292,1.765,293,1.96,310,1.71,313,1.206,321,1.765,322,1.793,336,1.605,342,1.304,347,1.743,352,2.474,365,1.245,402,2.021,408,1.71,430,1.521,434,1.062,436,1.245,443,1.883,469,4.32,470,2.22,471,2.552,472,3.448,473,1.564,474,2.331,475,5.244,476,3.989,477,2.331,478,2.754,479,2.22,480,2.133,481,3.141,482,2.123,483,2.331,484,3.285,485,3.587,486,2.331,487,2.899,488,3.448,489,2.138,490,3.141,491,4.611,492,3.703,493,1.243,494,3.285,495,2.22,496,2.331,497,3.739,498,3.448,499,2.899,500,5.328,501,2.331,502,3.285,503,1.405,504,2.352,505,2.308,506,3.448,507,2.123,508,2.09,509,2.899,510,1.298,511,5.009,512,1.825,513,2.331,514,2.331,515,2.331,516,2.037,517,2.331,518,3.108,519,2.382,520,4.108,521,2.331,522,3.448,523,1.96,524,2.331,525,2.123,526,3.448,527,3.964,528,2.331,529,2.331,530,4.104,531,3.448,532,2.331,533,2.331,534,2.331,535,2.331,536,2.331,537,2.53,538,2.331,539,2.331,540,3.448,541,2.331,542,2.331,543,2.331,544,3.448,545,3.448,546,4.536,547,0.974,548,3.285,549,2.331,550,2.331,551,2.331,552,2.331,553,2.331,554,2.474,555,2.22,556,2.331,557,2.331,558,2.331,559,1.71,560,1.442,561,1.71,562,3.213,563,1.336,564,2.331,565,3.448,566,2.331,567,2.331,568,2.331,569,3.285,570,2.331,571,2.22,572,2.331,573,3.448,574,1.61,575,2.331,576,1.765,577,2.331,578,1.96,579,2.331,580,2.331,581,2.331,582,3.285,583,2.331,584,2.331,585,3.141,586,2.331,587,2.331,588,2.123,589,1.48,590,2.331,591,3.448,592,3.448,593,1.405,594,3.448,595,3.448,596,3.014,597,2.331,598,3.448,599,4.536,600,2.331,601,2.331,602,3.448,603,3.739,604,2.331,605,2.331,606,1.405,607,1.716,608,1.765,609,1.48,610,2.331,611,2.331,612,2.331,613,2.331,614,1.521,615,2.331,616,2.22,617,2.331,618,2.331,1392,3.141]],["title/components/TsNavigationComponent.html",[80,0.537,471,1.476]],["body/components/TsNavigationComponent.html",[0,1.192,2,0.032,3,0.023,4,0.023,5,0.052,7,0.594,10,1.538,11,0.332,12,0.545,13,1.415,14,0.888,16,0.949,18,1.535,19,0.008,20,0.889,21,0.839,22,0.993,23,1.92,25,0.081,27,0.106,28,0.759,33,0.077,34,1.575,35,1.366,37,0.053,39,0.003,40,0.003,41,0.795,45,1.746,46,1.224,54,1.16,56,0.85,58,1.004,63,1.5,64,1.453,66,0.489,69,1.302,71,2.049,72,1.472,73,2.532,74,1.831,75,1.913,79,1.619,80,0.874,83,2.121,90,1.057,93,0.83,96,0.85,97,1.425,103,2.049,108,0.682,109,1.286,112,1.277,114,0.414,118,1.027,120,0.797,123,0.614,124,1.28,128,0.78,129,1.429,132,1.425,133,1.064,134,2.182,140,1.218,154,2.049,155,3.441,158,1.314,160,1.577,162,1.526,164,2.482,165,0.711,166,2.191,167,1.709,168,1.21,171,1.412,172,1.756,173,0.614,182,1.235,184,3.924,185,0.935,188,0.653,193,0.812,197,1.322,200,0.926,201,2.371,202,1.094,204,1.73,205,1.882,208,4.116,210,1.113,224,1.166,225,1.583,226,1.731,227,1.117,229,1.071,233,0.801,234,1.142,235,1.142,236,0.985,237,0.985,238,0.965,241,1.464,245,1.272,247,1.828,256,2.704,257,0.622,260,1.695,265,0.667,267,2.151,268,1.142,272,1.273,273,1.273,292,1.982,293,2.2,300,0.759,310,1.196,313,0.963,321,2.841,322,1.867,336,1.218,342,1.464,347,1.442,349,0.653,352,2.476,365,0.945,402,1.672,408,1.92,414,0.87,419,0.89,430,1.064,434,0.743,436,1.184,443,1.79,469,3.122,470,1.553,471,2.405,472,2.617,473,1.094,474,1.631,475,5.361,476,4.023,477,1.631,478,2.943,479,3.122,480,2.028,481,3.418,482,2.384,483,1.631,484,3.122,485,3.279,486,1.631,487,2.2,488,2.617,489,1.363,490,2.384,491,4.563,492,3.126,493,0.87,494,3.122,495,1.553,496,1.631,497,2.384,498,1.631,499,1.371,500,5.296,501,1.631,502,3.122,503,0.983,504,2.355,505,2.403,506,3.752,507,2.384,508,2.233,509,3.154,510,1.412,511,4.951,512,2.049,513,2.617,514,2.617,515,2.617,516,2.287,517,3.752,518,3.321,519,2.591,520,3.735,521,2.617,522,2.617,523,1.371,524,1.631,525,2.384,526,4.386,527,3.59,528,3.752,529,3.752,530,3.278,531,2.617,532,1.631,533,1.631,534,3.752,535,2.617,536,1.631,537,3.014,538,3.278,539,1.631,540,2.617,541,1.631,542,1.631,543,1.631,544,2.617,545,2.617,546,3.752,547,1.094,548,3.574,549,4.108,550,1.631,551,3.752,552,1.631,553,3.752,554,2.476,555,2.493,556,2.617,557,1.631,558,1.631,559,1.92,560,2.321,561,1.92,562,2.566,563,1.5,564,3.752,565,2.617,566,1.631,567,1.631,568,1.631,569,2.493,570,1.631,571,1.553,572,1.631,573,3.278,574,1.807,575,2.617,576,1.982,577,2.617,578,1.371,579,1.631,580,1.631,581,1.631,582,2.493,583,1.631,584,1.631,585,2.384,586,1.631,587,1.631,588,2.384,589,1.662,590,3.752,591,2.617,592,2.617,593,0.983,594,2.617,595,2.617,596,2.287,597,1.631,598,2.617,599,3.752,600,1.631,601,1.631,602,2.617,603,3.418,604,1.631,605,1.631,606,0.983,607,1.631,608,1.235,609,1.036,610,1.631,611,1.631,612,1.631,613,1.631,614,1.064,615,1.631,616,2.493,617,2.617,618,1.631,622,0.371,629,0.812,674,0.85,677,0.627,683,0.812,699,0.87,751,0.89,757,0.627,760,1.218,771,1.126,790,0.85,800,0.89,815,0.907,816,1.166,954,0.87,1010,0.87,1011,0.759,1012,0.983,1112,1.009,1113,2.261,1114,0.983,1115,0.983,1116,1.577,1117,0.983,1118,0.983,1119,0.912,1120,0.983,1121,0.912,1122,0.983,1123,0.87,1124,0.983,1125,0.89,1126,0.89,1127,0.983,1128,0.912,1129,0.983,1130,0.89,1131,0.983,1132,0.89,1133,0.983,1134,0.912,1135,0.983,1136,0.87,1137,1.577,1138,0.912,1139,0.912,1140,0.983,1141,0.87,1142,0.983,1143,0.89,1144,0.983,1145,0.89,1146,0.983,1147,0.89,1148,0.983,1149,0.89,1150,0.983,1151,0.983,1152,0.89,1153,0.983,1154,0.87,1155,0.983,1156,0.935,1157,0.983,1158,0.87,1159,0.89,1160,0.983,1161,0.935,1162,0.983,1163,0.812,1164,0.64,1165,0.983,1166,0.759,1167,0.983,1168,0.89,1169,0.983,1170,0.89,1171,0.983,1172,0.912,1173,0.983,1174,0.89,1175,0.983,1176,0.812,1177,0.983,1178,0.812,1179,1.577,1180,0.85,1181,0.983,1182,0.87,1183,0.983,1184,0.812,1185,0.983,1186,0.89,1187,0.983,1188,0.812,1189,0.983,1190,0.812,1191,0.87,1192,0.983,1193,0.89,1194,0.983,1195,0.983,1196,0.87,1197,0.983,1198,0.759,1199,0.983,1200,0.87,1201,0.958,1202,0.983,1617,2.148,2520,3.892,2521,3.892,2522,4.875,2523,2.425,2524,3.892,2525,2.425,2526,2.425,2527,2.425,2528,2.425,2529,2.425,2530,2.425,2531,2.425,2532,2.425,2533,2.425,2534,2.425,2535,2.425,2536,2.425,2537,2.425,2538,2.425,2539,2.425,2540,2.425,2541,2.425,2542,2.425,2543,2.425,2544,2.425,2545,2.425,2546,2.425,2547,2.425,2548,7.541,2549,3.892]],["title/interfaces/TsNavigationLinkItem.html",[41,0.55,490,2.764]],["body/interfaces/TsNavigationLinkItem.html",[0,1.055,2,0.045,3,0.033,4,0.021,5,0.021,7,0.42,10,1.361,11,0.472,12,0.715,13,1.378,14,0.786,16,0.857,19,0.008,20,0.761,21,0.715,25,0.101,27,0.151,28,1.078,33,0.088,34,1.703,35,1.36,37,0.058,39,0.004,40,0.004,41,0.948,45,2.247,46,1.285,54,1.446,56,1.207,58,0.748,63,1.328,64,1.446,69,1.153,71,1.813,72,1.895,73,2.639,74,1.822,75,1.783,79,1.433,80,0.8,83,1.877,97,2.024,103,2.687,108,0.968,109,1.249,112,1.813,114,0.588,118,1.347,120,0.834,123,0.872,124,1.349,128,1.148,129,1.265,132,2.024,133,1.512,134,2.059,140,1.078,154,2.687,155,3.452,158,0.928,160,1.396,162,1.598,164,2.599,165,1.01,166,2.181,167,1.862,168,1.248,171,1.292,172,1.554,173,0.872,182,1.754,184,3.656,185,1.328,188,0.928,193,1.153,197,1.877,200,1.446,201,2.283,202,0.968,204,1.633,205,1.787,208,3.963,210,0.786,224,1.032,225,0.588,226,0.967,227,0.989,229,0.948,233,0.709,234,1.01,235,1.01,236,0.872,237,0.872,238,0.854,241,1.296,245,1.333,247,1.705,256,2.575,260,1.599,265,0.948,267,2.344,268,1.497,272,1.67,273,1.67,292,1.754,293,1.947,310,1.699,313,1.201,321,1.754,322,1.789,336,1.598,342,1.296,347,1.738,352,2.464,365,1.239,402,2.015,408,1.699,430,1.512,434,1.055,436,1.239,443,1.874,469,4.307,470,2.206,471,2.547,472,3.432,473,1.554,474,2.316,475,5.234,476,4,477,2.316,478,2.744,479,2.206,480,2.123,481,3.126,482,2.11,483,2.316,484,3.269,485,3.574,486,2.316,487,2.886,488,3.432,489,2.13,490,3.725,491,5.229,492,3.416,493,1.83,494,3.895,495,3.269,496,3.432,497,3.126,498,2.316,499,1.947,500,5.32,501,2.316,502,3.269,503,1.396,504,2.344,505,2.303,506,3.432,507,2.11,508,2.082,509,2.886,510,1.292,511,5.001,512,1.813,513,2.316,514,2.316,515,2.316,516,2.024,517,2.316,518,3.096,519,2.37,520,4.098,521,2.316,522,3.432,523,1.947,524,2.316,525,2.11,526,3.432,527,3.952,528,2.316,529,2.316,530,4.089,531,3.432,532,2.316,533,2.316,534,2.316,535,2.316,536,2.316,537,2.518,538,2.316,539,2.316,540,3.432,541,2.316,542,2.316,543,2.316,544,3.432,545,3.432,546,4.522,547,0.968,548,3.269,549,2.316,550,2.316,551,2.316,552,2.316,553,2.316,554,2.464,555,2.206,556,2.316,557,2.316,558,2.316,559,1.699,560,1.433,561,1.699,562,3.201,563,1.328,564,2.316,565,3.432,566,2.316,567,2.316,568,2.316,569,3.269,570,2.316,571,2.206,572,2.316,573,3.432,574,1.6,575,2.316,576,1.754,577,2.316,578,1.947,579,2.316,580,2.316,581,2.316,582,3.269,583,2.316,584,2.316,585,3.126,586,2.316,587,2.316,588,2.11,589,1.471,590,2.316,591,3.432,592,3.432,593,1.396,594,3.432,595,3.432,596,3,597,2.316,598,3.432,599,4.522,600,2.316,601,2.316,602,3.432,603,3.725,604,2.316,605,2.316,606,1.396,607,1.708,608,1.754,609,1.471,610,2.316,611,2.316,612,2.316,613,2.316,614,1.512,615,2.316,616,2.206,617,2.316,618,2.316]],["title/modules/TsNavigationModule.html",[619,0.618,650,3.203]],["body/modules/TsNavigationModule.html",[2,0.086,3,0.062,4,0.039,5,0.039,19,0.008,25,0.157,27,0.288,33,0.101,37,0.062,39,0.007,40,0.007,116,1.563,249,0.8,313,1.298,416,2.009,471,3.094,554,2.662,619,1.079,621,1.77,622,1.006,623,1.886,643,4.104,650,6.624,662,2.312,665,2.312,686,3.345,739,2.414,740,1.969,792,5.948,793,4.957,803,4.632,804,3.58,2314,6.982,2315,5.326,2505,5.326,2518,6.982,2550,5.819,2551,5.819,2552,6.569,2553,5.819,2554,6.569,2555,7.882]],["title/interfaces/TsNavigationPayload.html",[41,0.55,502,2.89]],["body/interfaces/TsNavigationPayload.html",[0,1.058,2,0.045,3,0.033,4,0.021,5,0.021,7,0.421,10,1.366,11,0.473,12,0.717,13,1.379,14,0.789,16,0.873,19,0.008,20,0.763,21,0.797,25,0.102,27,0.151,28,1.082,33,0.088,34,1.704,35,1.362,37,0.058,39,0.004,40,0.004,41,0.949,45,2.108,46,1.235,54,1.449,56,1.793,58,0.75,63,1.332,64,1.853,69,1.157,71,1.819,72,1.777,73,2.614,74,1.826,75,1.787,79,1.438,80,0.801,83,1.884,97,2.031,103,2.694,108,0.971,109,1.25,112,2.694,114,0.59,118,1.35,120,0.836,123,0.875,124,1.336,128,0.975,129,1.269,132,2.031,133,1.517,134,2.063,140,1.082,154,2.694,155,3.449,158,0.931,160,1.401,162,1.602,164,2.606,165,1.014,166,2.185,167,1.866,168,1.25,171,1.295,172,1.56,173,0.875,182,1.76,184,3.661,185,1.332,188,0.931,193,1.157,197,3.321,200,1.217,201,2.285,202,0.971,204,1.636,205,1.789,208,3.968,210,0.789,224,1.036,225,0.59,226,0.97,227,0.992,229,0.951,233,0.712,234,1.014,235,1.014,236,0.875,237,0.875,238,0.857,241,1.3,245,1.334,247,1.707,256,2.578,260,1.602,265,0.951,267,2.348,268,1.501,272,1.674,273,1.674,292,1.76,293,1.954,310,2.524,313,1.204,321,1.76,322,1.791,336,1.602,342,1.3,347,1.741,352,2.47,365,1.243,402,2.018,408,1.705,430,1.517,434,1.058,436,1.243,443,1.879,469,3.903,470,2.214,471,2.549,472,3.441,473,1.56,474,2.324,475,5.239,476,3.988,477,2.324,478,2.75,479,2.214,480,2.128,481,3.135,482,2.117,483,2.324,484,3.278,485,3.581,486,2.324,487,2.893,488,3.441,489,1.793,490,3.135,491,4.605,492,3.586,493,1.239,494,3.278,495,2.214,496,2.324,497,3.135,498,2.324,499,1.954,500,5.324,501,3.441,502,3.903,503,2.074,504,2.596,505,2.306,506,3.441,507,2.117,508,2.086,509,2.893,510,1.295,511,5.005,512,1.819,513,2.324,514,2.324,515,2.324,516,2.031,517,2.324,518,3.103,519,2.376,520,4.104,521,2.324,522,3.441,523,1.954,524,2.324,525,2.117,526,3.441,527,3.958,528,2.324,529,2.324,530,4.097,531,3.441,532,2.324,533,2.324,534,2.324,535,2.324,536,2.324,537,2.524,538,2.324,539,2.324,540,3.441,541,2.324,542,2.324,543,2.324,544,3.441,545,3.441,546,4.529,547,0.971,548,3.278,549,2.324,550,2.324,551,2.324,552,2.324,553,2.324,554,2.47,555,2.214,556,2.324,557,2.324,558,2.324,559,1.705,560,1.438,561,1.705,562,3.208,563,1.332,564,2.324,565,3.441,566,2.324,567,2.324,568,2.324,569,3.278,570,2.324,571,2.214,572,2.324,573,3.441,574,1.605,575,2.324,576,1.76,577,2.324,578,1.954,579,2.324,580,2.324,581,2.324,582,3.278,583,2.324,584,2.324,585,3.135,586,2.324,587,2.324,588,2.117,589,1.476,590,2.324,591,3.441,592,3.441,593,1.401,594,3.441,595,3.441,596,3.007,597,2.324,598,3.441,599,4.529,600,2.324,601,2.324,602,3.441,603,3.732,604,2.324,605,2.324,606,1.401,607,1.712,608,1.76,609,1.476,610,2.324,611,2.324,612,2.324,613,2.324,614,1.517,615,2.324,616,2.214,617,2.324,618,2.324,1392,3.135]],["title/interfaces/TsPaginatorMenuItem.html",[41,0.55,2556,3.658]],["body/interfaces/TsPaginatorMenuItem.html",[2,0.032,3,0.023,4,0.015,5,0.015,7,0.301,11,0.945,12,0.553,13,1.466,14,0.564,16,0.934,19,0.008,20,0.907,21,0.562,22,0.879,25,0.094,27,0.108,28,1.545,33,0.045,34,1.299,35,1.261,37,0.047,39,0.007,40,0.003,41,0.481,43,0.846,45,1.237,46,1.2,49,0.695,50,0.666,51,1.561,52,1.523,54,1.342,56,2.763,58,1.204,59,2.286,62,1.69,63,1.523,64,1.565,71,4.078,72,1.488,73,2.014,74,0.741,76,1.754,77,1.754,80,0.587,90,1.246,103,1.301,106,1.417,108,1.387,109,1.308,114,0.962,118,2.168,120,1.172,124,0.773,127,2.012,128,0.395,129,1.451,133,1.085,134,1.889,154,2.599,155,2.415,158,2.349,161,1.384,162,1.765,164,2.012,165,0.725,166,0.886,167,1.889,168,1.555,171,1.249,173,0.625,182,2.872,187,1.662,188,1.065,189,0.976,193,0.827,194,1.688,195,1.085,196,1.085,201,2.169,202,0.695,203,1.451,204,1.199,210,0.564,224,0.741,225,0.422,226,0.749,227,0.709,229,0.68,233,0.509,234,0.725,235,0.725,236,0.625,237,0.625,238,0.98,241,1.486,245,1.525,247,1.662,256,0.886,260,2.188,265,0.68,266,0.639,268,1.448,272,1.845,273,1.845,281,1.729,293,1.397,296,1.452,299,1.486,309,2.778,316,1.865,320,1.662,321,1.258,322,1.565,332,5.21,336,2.571,342,1.857,347,0.639,352,1.002,365,1.199,392,1.949,394,2.657,402,2.511,408,1.949,430,3.329,434,2.115,443,1.451,478,2.228,493,0.886,495,1.583,505,2.197,508,2.7,509,3.904,510,1,511,1.514,512,4.152,518,2.514,523,3.189,559,1.219,561,2.782,562,1.301,569,3.95,576,1.258,593,3.474,607,1.322,608,2.012,609,3.24,683,1.887,712,2.322,756,1.219,774,1.055,813,4.643,817,1.89,824,1.865,826,1.514,831,1.301,845,6.878,865,3.767,867,2.783,915,1.258,961,6.107,978,3.203,981,2.003,1011,1.765,1018,1.182,1051,3.203,1078,2.189,1089,1.452,1094,1.085,1097,1.754,1103,3.203,1149,1.451,1152,1.813,1221,1.643,1284,2.189,1300,1.865,1314,1.662,1346,2.189,1356,3.5,1401,3.146,1421,3.653,1438,1.397,1447,1.561,1448,4.095,1467,1.301,1469,3.074,1490,2.981,1599,1.452,1747,2.189,1803,1.754,1806,2.003,1831,2.189,1832,3.203,2009,2.804,2010,1.865,2014,1.397,2160,1.754,2180,1.662,2224,2.804,2266,2.003,2405,1.865,2432,1.583,2556,6.395,2557,2.471,2558,6.468,2559,4.373,2560,2.471,2561,2.471,2562,2.471,2563,3.951,2564,2.471,2565,4.936,2566,2.471,2567,2.189,2568,3.951,2569,2.189,2570,2.471,2571,2.471,2572,2.471,2573,2.471,2574,2.471,2575,2.471,2576,2.471,2577,2.471,2578,2.471,2579,2.471,2580,2.471,2581,2.471,2582,2.471,2583,2.471,2584,2.471,2585,2.471,2586,2.471,2587,2.471,2588,2.471,2589,2.471,2590,2.003,2591,2.471,2592,2.471,2593,2.471,2594,2.471,2595,3.951,2596,2.471,2597,3.951,2598,2.471,2599,2.471,2600,2.471,2601,2.471,2602,2.471,2603,2.471,2604,3.951,2605,3.951,2606,2.471,2607,2.471,2608,2.471,2609,2.471,2610,2.471,2611,2.471,2612,3.951,2613,2.471,2614,6.167,2615,2.471,2616,3.951,2617,2.471,2618,2.471,2619,2.471,2620,2.471,2621,2.471,2622,2.471,2623,2.471,2624,5.64,2625,2.471,2626,6.167,2627,5.64,2628,2.471,2629,4.936,2630,4.936,2631,2.471,2632,2.471,2633,6.577,2634,2.471,2635,2.189,2636,6.167,2637,2.471,2638,3.951,2639,3.951,2640,3.951,2641,4.936,2642,2.471,2643,2.471,2644,2.471,2645,2.471,2646,2.471,2647,6.167,2648,5.64,2649,2.471,2650,2.471,2651,3.951,2652,6.905,2653,2.471,2654,2.471,2655,2.471,2656,2.471,2657,2.471,2658,2.471,2659,2.471,2660,2.471,2661,2.471,2662,2.471,2663,2.471,2664,3.951,2665,2.471,2666,3.951,2667,2.471,2668,3.951,2669,5.826,2670,2.471,2671,2.471,2672,6.577,2673,2.471,2674,6.167,2675,4.936,2676,2.471,2677,2.471,2678,2.471,2679,2.471,2680,2.471]],["title/modules/TsPaginatorModule.html",[619,0.618,651,3.034]],["body/modules/TsPaginatorModule.html",[2,0.084,3,0.061,4,0.039,5,0.039,19,0.008,25,0.156,27,0.281,33,0.1,37,0.061,39,0.007,40,0.007,116,1.529,175,1.845,249,0.783,313,1.27,416,1.99,619,1.065,621,1.732,622,0.984,623,1.845,632,4.763,649,6.084,651,6.397,654,6.084,659,5.317,662,2.282,665,2.282,668,3.503,694,5.694,703,5.694,708,4.562,739,2.382,740,1.926,741,4.398,1152,3.463,2681,5.694,2682,5.694,2683,6.427,2684,5.694,2685,6.427,2686,7.779]],["title/modules/TsPipesModule.html",[619,0.618,697,3.203]],["body/modules/TsPipesModule.html",[2,0.079,3,0.057,4,0.036,5,0.036,19,0.008,25,0.152,27,0.264,33,0.104,37,0.057,39,0.006,40,0.006,116,1.436,249,0.912,313,1.193,416,1.936,619,1.025,621,1.627,622,0.925,623,1.733,662,2.196,665,2.196,697,6.767,739,2.293,740,1.809,817,3.582,956,3.379,1846,6.668,2687,5.349,2688,5.349,2689,5.349,2690,7.089,2691,7.089,2692,7.089,2693,7.089,2694,6.038,2695,7.486,2696,6.632,2697,6.632,2698,7.486,2699,6.632,2700,6.632,2701,8.507,2702,6.632,2703,7.486,2704,6.632]],["title/classes/TsRadioChange.html",[37,0.043,2705,3.658]],["body/classes/TsRadioChange.html",[2,0.039,3,0.028,4,0.018,5,0.018,7,0.363,8,2.378,10,1.177,12,0.417,13,1.451,14,0.68,16,0.922,19,0.008,20,0.518,21,0.622,22,1.543,25,0.128,27,0.13,28,0.932,33,0.076,34,0.903,35,0.666,37,0.068,39,0.004,40,0.005,41,0.363,43,1.019,45,1.955,46,1.233,49,0.837,50,1.816,51,1.807,52,1.762,54,1.088,56,1.602,58,1.34,62,2.138,63,3.259,64,1.603,65,2.929,66,1.26,69,2.255,72,2.069,73,1.4,80,0.881,90,1.055,92,2.958,99,1.238,108,1.755,109,1.261,114,0.95,118,1.648,120,1.382,123,1.984,124,1.159,127,3.623,128,1.352,129,2.293,140,2.319,145,1.431,155,3.072,157,1.177,158,1.232,161,1.602,162,0.932,165,0.873,167,1.705,168,1.584,169,2.598,170,2.124,171,1.157,173,0.754,175,0.855,188,1.232,189,1.177,191,2.113,192,2.585,193,0.996,194,2.378,195,1.307,196,1.307,198,3.75,200,1.324,201,1.832,202,0.837,203,1.679,204,1.352,205,0.666,207,1.307,210,0.68,224,0.892,225,0.508,226,1.055,227,0.855,229,0.819,231,1.043,233,0.613,234,0.873,235,0.873,236,0.754,237,0.754,238,0.738,245,1.455,247,1.675,249,0.557,250,1.12,265,1.855,266,1.439,268,0.873,270,3.951,272,2.044,273,2.044,274,2.663,281,2.804,291,3.961,294,2.676,295,3.21,296,2.687,299,1.72,313,0.588,319,1.75,322,1.324,323,2.113,325,1.683,335,1.383,336,1.743,337,2.492,347,0.769,349,0.802,352,1.207,365,2.031,369,1.272,386,1.824,387,1.64,389,3.566,391,2.687,395,2.687,402,0.892,414,1.068,415,1.75,416,1.088,418,1.307,420,1.75,421,1.75,422,2.094,434,0.912,436,1.11,438,1.567,463,3.147,473,2.064,478,2.512,480,1.902,487,1.683,493,1.068,504,1.148,508,1.019,510,0.754,518,1.516,537,2.256,559,4.211,560,1.238,593,1.207,607,0.996,629,1.53,699,3.21,700,2.113,716,1.824,717,1.824,774,1.272,777,2.929,816,1.37,846,1.516,847,2.929,854,2.585,855,1.907,872,2.585,879,1.907,880,2.929,881,4.001,882,1.907,912,1.824,913,1.75,914,1.469,915,1.516,916,1.907,917,2.687,923,2.247,1011,2.319,1018,1.424,1047,1.177,1050,2.113,1089,1.75,1094,1.307,1112,1.238,1154,2.417,1264,3.272,1265,1.12,1267,1.177,1285,3.509,1292,4.171,1330,1.75,1398,1.469,1558,1.623,1600,1.907,1605,2.002,1609,2.002,1644,1.567,1683,3.147,1740,3.707,1763,2.414,1790,3.707,1830,2.414,1907,1.683,1908,3.075,1918,2.002,2043,2.113,2162,2.113,2199,3.147,2233,4.513,2261,2.247,2308,3.246,2486,2.113,2492,2.929,2500,2.414,2705,5.464,2706,2.247,2707,2.414,2708,5.97,2709,5.533,2710,4.932,2711,7.491,2712,4.932,2713,5.533,2714,4.932,2715,4.932,2716,4.932,2717,4.051,2718,4.051,2719,4.051,2720,4.051,2721,2.638,2722,2.638,2723,4.932,2724,2.638,2725,2.638,2726,2.638,2727,3.45,2728,2.638,2729,4.051,2730,6.356,2731,4.932,2732,2.638,2733,2.638,2734,2.414,2735,2.638,2736,2.638,2737,6.856,2738,3.45,2739,2.638,2740,2.638,2741,2.638,2742,2.247,2743,2.414,2744,2.638,2745,2.638,2746,2.638,2747,4.932,2748,2.247,2749,4.051,2750,2.638,2751,4.051,2752,2.638,2753,2.638,2754,4.051,2755,2.638,2756,5.767,2757,2.638,2758,4.051,2759,4.932,2760,2.638,2761,2.638,2762,4.051,2763,2.638,2764,2.638,2765,4.051,2766,4.051,2767,2.638,2768,2.638,2769,2.638,2770,4.051,2771,2.638,2772,2.638,2773,4.051,2774,2.638,2775,2.638,2776,4.051,2777,2.638,2778,2.638,2779,4.051,2780,2.638,2781,2.247,2782,2.638,2783,2.638,2784,2.638,2785,2.638,2786,2.638,2787,2.638,2788,4.051,2789,2.638,2790,2.638,2791,2.638,2792,2.638,2793,2.638]],["title/modules/TsRadioGroupModule.html",[619,0.618,652,3.203]],["body/modules/TsRadioGroupModule.html",[2,0.083,3,0.061,4,0.038,5,0.038,19,0.008,25,0.157,27,0.279,33,0.1,37,0.061,39,0.007,40,0.007,66,1.285,116,1.516,175,1.83,249,0.776,313,1.259,416,1.983,554,2.583,619,1.06,621,1.717,622,0.976,623,1.83,643,4.075,652,6.661,660,4.921,662,2.27,665,2.27,686,3.245,699,2.775,700,4.523,709,3.603,710,4.082,739,2.37,740,1.91,741,4.375,742,5.204,803,4.548,804,3.474,1154,3.4,1208,5.84,1209,3.474,2706,4.809,2734,5.167,2738,6.289,2794,5.646,2795,5.646,2796,5.646,2797,6.373,2798,5.646,2799,6.373,2800,7.739,2801,7.739]],["title/interfaces/TsRadioOption.html",[41,0.55,2730,3.658]],["body/interfaces/TsRadioOption.html",[2,0.038,3,0.028,4,0.018,5,0.027,7,0.356,8,1.926,10,1.155,11,0.617,12,0.771,13,1.448,14,0.667,16,0.937,19,0.008,20,0.511,21,0.733,22,1.575,25,0.127,27,0.128,28,0.915,33,0.075,34,0.891,35,0.654,37,0.064,39,0.004,40,0.005,41,0.549,43,1.001,45,2.21,46,1.255,49,0.822,50,1.903,51,1.782,52,1.738,54,1.309,56,1.58,58,1.337,62,2.118,63,3.247,64,1.472,65,2.888,66,1.248,69,2.237,72,2.101,73,1.381,80,0.875,90,1.043,92,2.933,99,1.216,108,1.739,109,1.257,114,0.939,118,1.632,120,1.377,123,1.974,124,1.189,127,3.596,128,1.347,129,2.271,140,2.304,145,1.411,155,3.124,157,1.155,158,1.215,161,1.58,162,0.915,165,0.857,167,1.686,168,1.579,169,2.573,170,2.094,171,1.141,173,0.74,175,0.839,188,1.215,189,1.155,191,2.075,192,2.549,193,0.978,194,2.351,195,1.283,196,1.283,198,3.73,200,1.073,201,1.814,202,0.822,203,1.656,204,1.336,205,0.654,207,1.283,210,0.667,224,0.876,225,0.499,226,1.043,227,0.839,229,0.804,231,1.024,233,0.602,234,0.857,235,0.857,236,0.74,237,0.74,238,0.725,245,1.504,247,1.665,249,0.549,250,1.1,265,1.839,266,1.422,268,0.857,270,3.906,272,2.024,273,2.024,274,2.633,281,2.79,291,3.928,294,2.656,295,3.187,296,2.65,299,1.696,313,0.578,319,1.718,322,1.309,323,2.075,325,1.653,335,1.358,336,1.723,337,2.457,347,0.755,349,0.788,352,1.185,365,2.099,369,1.249,386,1.791,387,1.617,389,3.525,391,2.65,395,2.65,402,0.876,414,1.048,415,1.718,416,1.073,418,1.283,420,1.718,421,1.718,422,2.07,434,0.895,436,1.095,438,1.539,463,3.112,473,2.035,478,2.484,480,1.875,487,1.653,493,1.048,504,1.127,508,1.001,510,0.74,518,1.489,537,2.224,559,4.196,560,1.216,593,1.185,607,0.978,629,1.509,699,3.203,700,3.2,716,1.791,717,1.791,774,1.249,777,2.888,816,1.351,846,1.489,847,2.888,854,2.549,855,1.873,872,2.549,879,1.873,880,2.888,881,3.962,882,1.873,912,1.791,913,1.718,914,1.442,915,1.489,916,1.873,917,2.65,923,2.206,1011,2.537,1018,1.399,1047,1.155,1050,2.075,1089,1.718,1094,1.283,1112,1.216,1154,2.218,1264,3.235,1265,1.1,1267,1.155,1285,3.63,1292,4.156,1330,1.718,1398,1.442,1558,1.593,1600,1.873,1605,1.966,1609,1.966,1644,1.539,1683,3.112,1740,3.655,1763,2.37,1790,3.655,1830,2.37,1907,1.653,1908,3.032,1918,1.966,2043,2.075,2162,2.075,2199,3.112,2233,4.462,2261,2.206,2308,3.2,2486,2.075,2492,2.888,2500,2.37,2705,4.462,2706,3.402,2707,2.37,2708,4.876,2709,5.48,2710,4.876,2711,7.463,2712,4.876,2713,5.48,2714,4.876,2715,4.876,2716,4.876,2717,3.994,2718,3.994,2719,3.994,2720,3.994,2721,2.59,2722,2.59,2723,4.876,2724,2.59,2725,2.59,2726,2.59,2727,3.402,2728,2.59,2729,3.994,2730,6.456,2731,4.876,2732,2.59,2733,2.59,2734,2.37,2735,2.59,2736,3.994,2737,6.83,2738,3.402,2739,2.59,2740,2.59,2741,2.59,2742,2.206,2743,2.37,2744,2.59,2745,2.59,2746,2.59,2747,4.876,2748,2.206,2749,3.994,2750,2.59,2751,3.994,2752,2.59,2753,2.59,2754,3.994,2755,2.59,2756,5.725,2757,2.59,2758,3.994,2759,4.876,2760,2.59,2761,2.59,2762,3.994,2763,2.59,2764,2.59,2765,3.994,2766,3.994,2767,2.59,2768,2.59,2769,2.59,2770,3.994,2771,2.59,2772,2.59,2773,3.994,2774,2.59,2775,2.59,2776,3.994,2777,2.59,2778,2.59,2779,3.994,2780,2.59,2781,2.206,2782,2.59,2783,2.59,2784,2.59,2785,2.59,2786,2.59,2787,2.59,2788,3.994,2789,2.59,2790,2.59,2791,2.59,2792,2.59,2793,2.59,2802,2.923]],["title/components/TsReactiveFormBaseComponent.html",[80,0.537,629,1.51]],["body/components/TsReactiveFormBaseComponent.html",[2,0.053,3,0.038,4,0.034,5,0.052,7,0.492,11,0.553,12,0.803,13,1.271,16,0.958,18,1.994,19,0.008,20,0.925,21,0.832,22,1.29,25,0.111,27,0.177,33,0.075,35,1.281,37,0.076,39,0.005,40,0.005,41,0.968,53,4.551,58,1.331,62,1.962,66,1.343,80,0.91,90,1.373,93,1.383,96,1.416,109,1.164,120,1.25,123,1.834,127,3.391,144,2.868,158,1.089,168,1.345,175,1.16,188,1.089,193,1.352,200,1.363,205,1.62,210,1.308,225,1.636,226,1.799,249,0.883,250,2.155,257,0.917,272,1.322,273,1.322,294,3.381,295,3.586,300,1.265,309,1.352,322,1.944,387,2.055,389,3.671,392,3.574,396,5.64,414,2.931,419,1.484,424,3.368,425,4.068,434,1.755,443,1.484,445,4.068,447,4.097,448,4.068,471,1.322,547,1.611,563,1.557,622,0.619,629,2.659,674,1.416,677,1.044,683,1.352,699,1.449,751,1.484,757,1.044,760,1.794,790,1.416,800,1.484,815,1.335,816,1.717,854,5.157,914,2.827,954,1.449,1010,1.449,1011,1.265,1012,1.638,1113,2.937,1114,1.638,1115,1.638,1116,2.323,1117,1.638,1118,1.638,1119,1.52,1120,1.638,1121,1.52,1122,1.638,1123,1.449,1124,1.638,1125,1.484,1126,1.484,1127,1.638,1128,1.52,1129,1.638,1130,1.484,1131,1.638,1132,1.484,1133,1.638,1134,1.52,1135,1.638,1136,1.449,1137,2.323,1138,1.52,1139,1.52,1140,1.638,1141,2.388,1142,1.638,1143,1.484,1144,1.638,1145,1.484,1146,1.638,1147,1.484,1148,1.638,1149,1.484,1150,1.638,1151,1.638,1152,1.484,1153,1.638,1154,1.449,1155,1.638,1156,2.793,1157,1.638,1158,1.449,1159,1.484,1160,1.638,1161,1.557,1162,1.638,1163,1.352,1164,1.066,1165,1.638,1166,1.265,1167,1.638,1168,1.484,1169,1.638,1170,1.484,1171,1.638,1172,1.52,1173,1.638,1174,1.484,1175,1.638,1176,1.352,1177,1.638,1178,1.352,1179,2.323,1180,1.416,1181,1.638,1182,1.449,1183,1.638,1184,1.352,1185,1.638,1186,1.484,1187,1.638,1188,1.352,1189,1.638,1190,1.352,1191,1.449,1192,1.638,1193,1.484,1194,1.638,1195,1.638,1196,1.449,1197,1.638,1198,1.265,1199,1.638,1200,1.449,1201,1.597,1202,1.638,1420,4.12,1580,3.671,1610,5.874,1611,5.874,1612,5.874,1613,5.874,1614,4.646,1615,4.646,1616,4.646,1631,4.324,1633,4.641,1635,4.646,1637,4.646,1638,4.324,1644,3.017,1645,6.202,1647,4.873,1648,5.874,1883,2.717,1938,3.049,2044,3.58,2803,8.711,2804,4.041,2805,4.041,2806,4.041,2807,4.041,2808,4.041,2809,4.041,2810,4.041,2811,4.041,2812,4.041,2813,4.041,2814,4.041,2815,4.041,2816,4.041,2817,3.58,2818,4.041,2819,4.041,2820,7.65,2821,4.041,2822,5.73,2823,4.041,2824,4.041,2825,4.041]],["title/pipes/TsRoundNumberPipe.html",[99,1.877,2690,3.405]],["body/pipes/TsRoundNumberPipe.html",[2,0.088,3,0.064,4,0.041,5,0.048,16,0.71,18,1.861,19,0.008,20,0.968,21,0.674,22,1.203,25,0.134,27,0.296,33,0.076,37,0.064,39,0.007,40,0.007,58,1.295,90,1.282,99,3.556,109,1.252,188,1.822,193,2.263,238,1.677,260,2.2,266,2.072,402,2.403,436,1.642,547,1.901,607,2.263,757,1.748,760,2.117,768,3.686,1849,4.8,1850,5.692,1854,5.692,1869,4.8,1870,4.548,1871,4.548,2690,6.051,2697,7.104,2826,8.019,2827,6.762,2828,7.104,2829,7.832,2830,6.762,2831,6.762,2832,6.762]],["title/components/TsRowComponent.html",[80,0.537,1158,1.618]],["body/components/TsRowComponent.html",[2,0.061,3,0.045,4,0.038,5,0.028,7,0.571,12,1.166,19,0.008,20,0.816,21,0.467,23,3.81,25,0.106,27,0.205,33,0.087,37,0.083,39,0.005,40,0.005,63,2.448,66,0.945,80,0.99,93,1.605,96,1.642,114,1.229,124,0.994,128,1.291,145,1.988,158,1.263,165,1.375,168,1.58,173,1.186,200,1.92,204,2.021,205,1.42,225,1.646,226,1.818,231,2.524,233,1.484,234,2.113,235,2.113,236,1.824,237,1.824,249,0.941,257,1.291,300,1.467,347,1.862,361,3.133,365,1.543,418,2.788,419,1.721,471,1.534,547,2.025,622,0.718,629,1.569,674,1.642,677,1.211,683,1.569,699,1.681,751,1.721,757,1.211,790,1.642,800,1.721,809,4.48,810,2.527,815,2.045,816,1.904,833,3.447,954,1.681,1010,1.681,1011,2.71,1012,1.9,1091,3.669,1113,3.13,1114,1.9,1115,1.9,1116,2.575,1117,1.9,1118,1.9,1119,1.763,1120,1.9,1121,1.763,1122,1.9,1123,1.681,1124,1.9,1125,1.721,1126,1.721,1127,1.9,1128,1.763,1129,1.9,1130,1.721,1131,1.9,1132,1.721,1133,1.9,1134,1.763,1135,1.9,1136,2.278,1137,2.575,1138,1.763,1139,1.763,1140,1.9,1141,1.681,1142,1.9,1143,1.721,1144,1.9,1145,1.721,1146,1.9,1147,1.721,1148,1.9,1149,1.721,1150,1.9,1151,1.9,1152,1.721,1153,1.9,1154,1.681,1155,1.9,1156,1.807,1157,1.9,1158,2.77,1159,1.721,1160,1.9,1161,1.807,1162,1.9,1163,1.569,1164,1.237,1165,1.9,1166,2.255,1167,1.9,1168,1.721,1169,1.9,1170,1.721,1171,1.9,1172,1.763,1173,1.9,1174,1.721,1175,1.9,1176,1.569,1177,1.9,1178,1.569,1179,2.575,1180,1.642,1181,1.9,1182,1.681,1183,1.9,1184,1.569,1185,1.9,1186,1.721,1187,1.9,1188,1.569,1189,1.9,1190,1.569,1191,2.584,1192,1.9,1193,1.721,1194,1.9,1195,1.9,1196,2.584,1197,1.9,1198,1.467,1199,1.9,1200,1.681,1201,1.852,1202,1.9,1235,3.591,1244,2.312,1246,4.744,1253,3.462,1265,2.389,1267,2.51,1789,3.235,2170,3.537,2171,5.437,2172,4.793,2173,3.537,2174,4.845,2175,6.091,2176,5.437,2177,5.437,2178,5.437,2179,4.509,2180,4.272,2181,4.793,2182,4.509,2183,4.793,2184,3.537,2185,3.327,2186,3.327,2187,3.537,2188,3.537,2189,4.793]],["title/directives/TsRowDefDirective.html",[257,0.722,1196,1.618]],["body/directives/TsRowDefDirective.html",[2,0.074,3,0.054,4,0.034,5,0.034,7,0.692,12,1.249,19,0.008,21,0.565,23,4.104,25,0.12,27,0.249,33,0.094,37,0.086,39,0.006,40,0.006,63,3.049,80,0.941,114,1.229,124,1.127,128,1.403,145,2.255,165,1.665,168,1.654,173,1.437,200,1.979,204,2.021,225,1.465,226,1.577,231,2.523,233,1.483,234,2.112,235,2.112,236,1.823,237,1.823,249,1.046,257,1.331,347,1.861,361,3.902,365,1.749,418,3.161,547,2.224,757,1.467,809,4.617,810,2.81,815,2.102,833,3.446,1011,2.79,1091,3.668,1136,2.036,1158,2.036,1166,2.476,1191,2.583,1196,2.837,1235,4.473,1244,2.8,1246,4.89,1253,3.926,1265,2.709,1267,2.846,1789,3.668,2170,4.283,2171,5.435,2172,5.435,2173,4.283,2174,4.843,2175,5.97,2176,5.97,2177,5.435,2178,5.97,2179,5.615,2180,5.32,2181,5.435,2182,5.112,2183,5.435,2184,5.435,2185,5.112,2186,5.112,2187,4.283,2188,4.283,2189,4.283]],["title/components/TsSearchComponent.html",[80,0.537,1159,1.657]],["body/components/TsSearchComponent.html",[0,1.364,2,0.038,3,0.027,4,0.027,5,0.054,7,0.351,10,1.76,11,0.394,12,0.624,13,1.491,14,1.017,16,0.994,18,0.792,19,0.008,20,0.795,21,0.895,22,0.512,25,0.111,27,0.126,33,0.05,35,1.218,37,0.058,39,0.004,40,0.004,41,0.543,46,1.259,57,2.427,58,1.332,64,2.051,66,1.599,68,1.954,72,1.175,75,1.946,80,0.923,83,4.836,86,2.518,87,3.867,90,1.634,93,0.985,95,2.852,96,1.008,108,1.252,109,1.108,113,2.728,114,1.29,117,5.012,118,1.751,124,0.697,128,1.061,134,2.315,145,2.29,158,0.775,160,1.805,161,1.56,162,2.482,165,0.844,167,2.428,168,1.7,171,1.776,173,0.728,175,0.826,188,0.775,193,0.963,194,2.327,195,1.263,196,1.263,201,2.217,202,1.252,203,2.252,204,1.081,205,1.372,209,2.995,210,1.244,224,1.335,225,1.603,226,1.758,227,1.279,229,1.225,233,0.917,234,1.306,235,1.306,236,1.127,237,1.127,238,1.104,241,1.675,245,1.472,247,1.603,257,0.712,260,1.669,264,3.161,265,1.688,266,1.151,268,0.844,272,0.941,273,0.941,281,2.149,286,2.344,294,2.844,299,2.495,300,0.901,309,2.053,310,2.197,322,1.669,349,0.775,365,1.081,387,1.954,402,1.335,414,1.032,419,1.056,436,1.081,463,2.518,471,0.941,473,2.459,480,2.266,492,1.954,499,2.518,505,2.149,508,2.588,560,2.551,607,0.963,622,0.441,629,0.963,668,1.568,674,1.008,677,0.743,683,2.449,699,1.032,751,1.056,754,3.36,757,0.743,760,1.92,771,1.336,790,1.909,800,1.056,815,1.038,816,1.335,817,2.13,826,2.728,839,4.494,840,3.605,872,2.518,954,1.032,996,3.609,1010,1.032,1011,0.901,1012,1.166,1014,2.197,1015,2.268,1018,1.376,1112,1.197,1113,2.486,1114,1.166,1115,1.166,1116,1.805,1117,1.166,1118,1.166,1119,1.082,1120,1.166,1121,1.082,1122,1.166,1123,1.032,1124,1.166,1125,1.056,1126,1.056,1127,1.166,1128,1.082,1129,1.166,1130,1.056,1131,1.166,1132,1.056,1133,1.166,1134,1.082,1135,1.166,1136,1.032,1137,1.805,1138,1.082,1139,1.082,1140,1.166,1141,1.954,1142,1.166,1143,1.056,1144,1.166,1145,1.056,1146,1.166,1147,1.056,1148,1.166,1149,1.056,1150,1.166,1151,1.166,1152,1.056,1153,1.166,1154,1.032,1155,1.166,1156,1.109,1157,1.166,1158,1.032,1159,2.252,1160,1.166,1161,1.109,1162,1.166,1163,0.963,1164,0.759,1165,1.166,1166,0.901,1167,1.166,1168,1.056,1169,1.166,1170,1.056,1171,1.166,1172,1.082,1173,1.166,1174,1.056,1175,1.166,1176,0.963,1177,1.166,1178,0.963,1179,1.805,1180,1.008,1181,1.166,1182,1.032,1183,1.166,1184,0.963,1185,1.166,1186,1.056,1187,1.166,1188,0.963,1189,1.166,1190,0.963,1191,1.032,1192,1.166,1193,1.056,1194,1.166,1195,1.166,1196,1.032,1197,1.166,1198,0.901,1199,1.166,1200,1.032,1201,1.137,1202,1.166,1475,2.068,1483,1.568,1547,2.852,1644,3.229,1907,4.874,2196,4.973,2200,4.628,2202,4.628,2387,2.549,2399,3.161,2416,4.354,2833,2.549,2834,3.945,2835,3.945,2836,5.434,2837,5.434,2838,5.434,2839,5.434,2840,5.434,2841,5.434,2842,5.434,2843,6.215,2844,4.827,2845,4.827,2846,4.827,2847,4.827,2848,4.827,2849,4.827,2850,4.827,2851,4.453,2852,2.852,2853,2.877,2854,2.877,2855,3.61,2856,2.877,2857,2.877,2858,2.877,2859,2.877,2860,2.877,2861,2.877,2862,2.877,2863,2.877,2864,2.877,2865,2.877,2866,2.877,2867,2.877,2868,2.877,2869,2.877,2870,3.945,2871,3.945,2872,2.877,2873,2.877,2874,2.877,2875,3.945,2876,3.945,2877,3.945,2878,3.945,2879,2.877,2880,3.945,2881,3.61,2882,2.877,2883,2.877,2884,3.945,2885,3.945,2886,2.877,2887,3.945,2888,2.877,2889,2.877,2890,2.332,2891,2.549,2892,2.549,2893,3.945,2894,2.549,2895,2.549,2896,2.171,2897,3.61,2898,2.549,2899,2.549,2900,2.549,2901,2.549,2902,2.549,2903,2.549]],["title/modules/TsSearchModule.html",[619,0.618,653,3.203]],["body/modules/TsSearchModule.html",[2,0.086,3,0.062,4,0.039,5,0.039,19,0.008,25,0.156,27,0.287,33,0.101,37,0.062,39,0.007,40,0.007,116,1.561,175,1.884,249,0.799,313,1.296,416,2.008,554,2.66,619,1.079,621,1.768,622,1.005,623,1.884,632,4.786,644,5.569,653,6.687,662,2.31,665,2.31,668,3.577,687,4.952,739,2.412,740,1.966,742,5.297,803,4.629,804,3.577,1159,3.472,2904,5.813,2905,5.813,2906,6.562,2907,5.813,2908,6.562,2909,7.876]],["title/interfaces/TsSearchResponse.html",[41,0.55,2890,3.658]],["body/interfaces/TsSearchResponse.html",[0,1.344,2,0.057,3,0.042,4,0.026,5,0.026,7,0.535,10,1.734,11,0.601,12,0.85,13,1.495,14,1.002,16,0.97,19,0.008,20,0.497,21,0.694,25,0.132,27,0.192,33,0.068,35,1.557,37,0.066,39,0.005,40,0.005,41,0.915,46,1.268,57,2.392,58,1.195,64,1.989,66,1.687,68,1.926,72,1.158,75,2.203,80,0.893,83,4.981,86,2.481,87,4.309,95,2.811,108,1.233,109,1.02,113,2.688,114,1.281,117,5.022,118,1.602,124,0.95,128,1.113,134,2.301,145,2.352,160,1.778,161,1.537,162,2.469,165,1.287,167,2.561,168,1.721,171,1.901,173,1.111,175,1.26,188,1.182,193,1.468,194,2.593,195,1.926,196,1.926,201,2.203,202,1.233,203,2.229,204,1.066,205,0.981,209,2.951,210,1.002,224,1.315,225,0.748,226,1.151,227,1.26,229,1.208,233,0.904,234,1.287,235,1.287,236,1.111,237,1.111,238,1.088,241,1.65,245,1.464,247,1.525,260,1.444,264,3.115,265,1.671,266,1.134,268,1.781,272,1.436,273,1.436,281,2.127,286,2.31,294,2.826,299,2.284,309,2.032,310,2.165,322,1.656,365,1.066,387,2.177,402,1.82,436,1.066,463,2.481,473,1.98,480,2.525,492,1.926,499,2.481,505,2.132,508,2.572,560,1.825,607,1.468,668,2.392,683,2.032,754,3.311,760,1.374,790,1.537,817,2.099,826,2.688,839,4.459,840,3.568,872,2.481,996,3.434,1014,2.165,1015,2.235,1018,2.099,1141,1.574,1159,1.611,1475,2.038,1483,2.392,1547,2.811,1644,3.196,1907,4.819,2196,3.557,2200,4.581,2202,4.581,2399,3.115,2416,4.941,2833,3.887,2834,3.887,2835,3.887,2836,3.887,2837,3.887,2838,3.887,2839,3.887,2840,3.887,2841,3.887,2842,3.887,2843,5.379,2844,3.887,2845,3.887,2846,3.887,2847,3.887,2848,3.887,2849,3.887,2850,3.887,2852,2.811,2855,3.557,2870,3.887,2871,3.887,2875,3.887,2876,3.887,2877,3.887,2878,3.887,2880,3.887,2881,3.557,2884,3.887,2885,3.887,2887,3.887,2890,4.922,2891,3.887,2892,3.887,2893,5.379,2894,3.887,2895,3.887,2896,3.311,2897,4.922,2898,3.887,2899,3.887,2900,3.887,2901,3.887,2902,3.887,2903,3.887]],["title/modules/TsSelectModule.html",[619,0.618,654,3.034]],["body/modules/TsSelectModule.html",[2,0.086,3,0.063,4,0.04,5,0.04,19,0.008,25,0.155,27,0.289,33,0.101,37,0.063,39,0.007,40,0.007,66,1.331,116,1.57,175,1.894,249,0.804,313,1.304,416,2.013,619,1.082,621,1.778,622,1.01,623,1.894,654,6.28,660,4.961,662,2.318,665,2.318,709,3.73,710,4.226,739,2.42,740,1.977,741,4.468,1161,3.668,2910,5.845,2911,5.845,2912,5.845,2913,6.598,2914,5.845,2915,7.495,2916,6.598,2917,7.902,2918,6.598,2919,7.902]],["title/classes/TsSelectedFile.html",[37,0.043,2134,3.658]],["body/classes/TsSelectedFile.html",[2,0.052,3,0.038,4,0.055,5,0.055,7,0.806,11,0.547,12,0.796,13,1.473,14,1.297,16,0.963,18,1.82,19,0.008,20,0.922,21,0.894,22,1.355,25,0.12,30,1.945,33,0.064,34,0.789,35,1.703,37,0.054,39,0.006,40,0.005,41,0.486,46,1.167,50,1.076,54,0.95,56,2.317,58,0.969,64,1.352,66,1.82,73,1.74,90,1.254,108,1.859,109,1.241,114,1.35,120,0.652,123,1.674,124,0.889,127,2.033,129,1.466,145,1.778,184,4.03,185,1.539,210,0.911,239,3.339,245,1.594,247,1.953,256,1.432,260,2.015,266,2.319,268,1.171,272,2.59,273,2.59,300,1.25,322,0.95,336,2.384,342,1.502,402,1.196,414,1.432,493,2.037,509,3.212,519,3.072,576,2.893,603,2.445,674,1.399,760,1.778,808,2.445,822,2.346,914,2.803,1274,4.287,1362,3.237,1420,3.786,1447,1.577,1448,1.969,1463,2.102,1644,2.102,1837,4.033,1855,3.012,2080,5.857,2100,5.779,2103,4.848,2104,5.78,2105,4.992,2106,6.281,2116,6.328,2117,5.843,2118,8.101,2119,3.537,2120,5.363,2121,5.363,2122,5.363,2123,5.438,2124,6.417,2125,4.992,2126,3.537,2127,5.033,2128,6.384,2129,5.033,2130,3.537,2131,6.384,2132,6.384,2133,6.384,2134,6.174,2135,6.384,2136,7.61,2137,5.033,2138,7.011,2139,6.384,2140,5.033,2141,3.537,2142,3.537,2143,5.033,2144,3.537,2145,3.537,2146,3.537,2147,3.537,2148,3.537,2149,3.537,2150,3.537,2151,5.033,2152,3.537,2153,3.537,2154,3.537,2155,3.537,2156,3.537,2157,3.537,2158,5.033,2159,3.537,2160,2.834,2161,3.537,2162,2.834,2163,3.537,2164,4.606,2165,5.033,2166,3.537,2167,3.537,2168,3.537,2920,5.681,2921,5.681,2922,3.992,2923,5.681,2924,3.992,2925,3.992,2926,3.992,2927,3.992,2928,3.992,2929,3.992,2930,3.992,2931,3.992,2932,3.992,2933,3.992,2934,3.537,2935,3.992,2936,3.992,2937,3.992,2938,3.992,2939,3.992,2940,3.992,2941,3.992,2942,3.992,2943,3.992,2944,3.992,2945,3.992,2946,3.992,2947,3.992,2948,3.992,2949,3.992,2950,3.992,2951,3.992,2952,3.537]],["title/pipes/TsSentenceCasePipe.html",[99,1.877,2691,3.405]],["body/pipes/TsSentenceCasePipe.html",[2,0.09,3,0.065,4,0.041,5,0.049,16,0.722,18,1.893,19,0.008,20,0.975,21,0.685,22,1.224,25,0.115,27,0.301,33,0.078,37,0.065,39,0.007,40,0.007,46,1.299,58,1.262,99,3.582,109,1.262,238,1.705,266,2.094,436,1.671,547,1.933,607,2.302,757,1.778,760,2.153,768,3.75,1849,4.883,1850,5.75,1854,5.75,1869,4.883,1870,4.626,1871,4.626,2691,6.113,2700,7.176,2953,8.101,2954,6.094,2955,7.176,2956,6.094,2957,6.879,2958,6.879]],["title/classes/TsSlideToggleChange.html",[37,0.043,2959,3.658]],["body/classes/TsSlideToggleChange.html",[2,0.072,3,0.052,4,0.033,5,0.033,7,0.67,8,3.014,13,1.448,16,0.914,19,0.008,20,0.799,25,0.145,27,0.241,33,0.088,34,1.086,35,1.23,37,0.083,39,0.006,40,0.006,46,1.011,54,1.679,58,1.034,62,2.416,64,1.854,66,1.109,69,1.84,80,1.011,108,1.984,109,0.806,114,1.204,118,1.862,120,1.153,124,0.861,128,1.315,136,5.225,157,2.173,161,2.731,162,1.721,165,1.613,167,2.387,168,1.68,171,1.786,173,1.392,175,1.579,188,1.482,189,2.173,194,3.014,195,2.413,196,2.413,200,1.854,201,2.07,202,1.546,203,2.019,205,1.23,210,1.255,224,1.648,225,0.938,226,1.338,227,1.579,229,1.513,233,1.132,234,1.613,235,1.613,236,1.392,237,1.392,245,1.578,247,1.205,249,0.86,250,2.068,266,1.421,281,2.473,294,2.655,295,2.481,299,2.655,337,2.997,365,1.335,391,4.148,395,4.148,414,1.972,415,3.232,416,1.679,418,2.413,420,3.232,421,3.232,422,2.068,434,1.684,473,2.481,510,1.392,607,1.84,629,2.362,716,3.368,717,3.368,774,2.349,777,3.522,817,2.631,1168,3.02,1433,2.413,1582,4.149,1586,3.109,1598,5.882,1600,3.522,1602,4.149,1605,3.698,2199,3.109,2748,4.149,2959,6.667,2960,4.871,2961,7.534,2962,4.458,2963,5.326,2964,4.871,2965,4.871,2966,4.871,2967,4.871]],["title/classes/TsSortBase.html",[37,0.043,2968,3.203]],["body/classes/TsSortBase.html",[2,0.051,3,0.037,4,0.023,5,0.023,13,1.347,16,0.409,18,1.537,19,0.008,21,0.388,25,0.126,27,0.171,30,1.335,31,3.283,33,0.089,34,1.408,35,1.594,37,0.062,39,0.005,40,0.005,41,0.795,43,1.335,46,0.935,49,2.273,50,1.05,54,0.927,64,1.553,67,1.759,69,1.305,75,2.303,80,0.464,90,1.237,92,3.696,106,2.9,108,1.57,109,1.212,114,0.665,118,2.072,120,1.414,123,1.652,124,0.61,128,1.347,129,1.431,133,1.711,134,1.194,152,2.755,156,2.388,162,2.043,167,1.711,168,1.323,169,2.965,170,2.594,171,0.987,185,1.503,188,1.05,189,1.54,200,0.927,204,1.907,205,0.872,225,0.665,226,1.533,231,1.366,238,0.966,239,3.283,245,1.323,247,1.43,249,0.795,250,2.101,256,2.706,257,1.488,274,3.123,278,3.422,281,1.366,298,5.029,309,1.869,322,1.795,335,1.81,341,2.125,347,1.687,365,1.964,392,2.755,402,1.168,408,3.22,436,0.947,489,1.957,492,1.711,493,1.398,503,1.58,504,1.503,508,1.335,510,0.987,576,1.985,593,1.58,607,1.305,727,1.711,768,2.125,774,1.665,810,2.469,815,2.125,827,2.207,834,2.497,836,2.622,996,3.722,1039,2.622,1047,1.54,1163,1.305,1164,2.522,1198,2.636,1209,2.125,1216,2.497,1221,1.621,1222,2.388,1296,2.291,1330,2.291,1331,3.354,1384,3.756,1391,1.923,1401,3.123,1406,1.865,1474,2.521,1557,2.125,1558,2.125,1560,2.767,1586,4.439,1599,2.291,1633,3.578,1683,2.204,1745,3.578,2014,3.158,2018,3.578,2199,2.204,2235,2.767,2432,4.566,2968,3.965,2969,2.767,2970,2.388,2971,2.942,2972,5.067,2973,4.633,2974,2.942,2975,5.159,2976,5.54,2977,4.215,2978,2.942,2979,2.942,2980,5.438,2981,4.215,2982,2.388,2983,3.756,2984,2.622,2985,2.942,2986,2.942,2987,4.215,2988,2.767,2989,4.833,2990,2.767,2991,2.622,2992,2.622,2993,4.215,2994,2.942,2995,5.747,2996,5.28,2997,2.942,2998,2.942,2999,2.942,3000,4.215,3001,2.942,3002,2.942,3003,2.942,3004,2.942,3005,4.215,3006,2.942,3007,2.942,3008,2.622,3009,3.756,3010,2.622,3011,2.942,3012,2.942,3013,2.942,3014,2.942,3015,4.926,3016,2.942,3017,2.942,3018,2.942,3019,2.942,3020,2.942,3021,2.942,3022,2.942,3023,4.926,3024,4.926,3025,4.215,3026,4.215,3027,2.942,3028,2.942,3029,2.942,3030,4.215,3031,2.942,3032,2.942,3033,2.942,3034,4.926,3035,2.942,3036,2.942,3037,2.942,3038,2.942,3039,4.215,3040,2.942,3041,2.942]],["title/directives/TsSortDirective.html",[257,0.722,1198,1.412]],["body/directives/TsSortDirective.html",[2,0.041,3,0.03,4,0.019,5,0.053,7,0.384,11,0.431,12,0.668,13,1.38,16,0.935,18,2.192,19,0.008,20,0.823,21,0.833,22,1.294,25,0.115,27,0.138,30,1.078,31,3.386,33,0.082,34,1.27,35,1.689,37,0.045,39,0.004,40,0.004,41,0.702,43,1.078,46,0.921,49,2.123,50,0.848,54,0.749,58,1.012,64,1.643,67,1.421,69,1.054,75,2.337,80,0.568,90,1.51,92,3.622,106,2.79,108,1.341,109,1.283,114,0.814,118,2.102,120,1.383,123,1.749,124,0.493,127,1.603,128,1.338,129,1.752,133,1.382,134,1.461,152,2.842,156,2.923,162,2.012,167,1.765,168,1.444,169,2.674,170,2.676,171,1.458,185,1.214,188,0.848,189,1.244,200,0.749,204,1.972,205,0.704,225,0.814,226,1.432,231,1.103,238,1.183,239,3.778,245,1.479,247,1.745,249,0.783,250,1.795,256,2.607,257,1.492,274,2.756,278,3.53,281,1.103,298,5.286,309,2.152,322,1.99,335,2.986,341,1.716,347,1.661,365,2.004,392,2.842,402,0.944,408,3.587,414,1.129,436,0.765,489,1.672,492,1.382,493,1.129,503,1.276,504,1.214,508,1.078,510,0.797,576,2.43,593,1.276,607,1.597,727,2.094,757,0.814,760,1.494,768,1.716,774,1.345,810,2.261,815,2.064,827,1.886,834,2.017,836,2.117,996,3.93,1039,3.209,1047,1.244,1163,1.054,1164,2.52,1198,2.7,1209,1.716,1216,4.118,1221,1.31,1222,1.929,1296,2.804,1330,1.85,1331,3.105,1384,4.646,1391,1.553,1401,3.305,1406,1.506,1474,2.901,1557,1.716,1558,2.601,1560,4.09,1586,4.399,1599,1.85,1633,4.657,1683,2.698,1745,3.691,2014,2.698,2018,3.056,2199,1.78,2235,2.235,2432,4.657,2968,2.235,2969,2.235,2970,1.929,2971,2.376,2972,4.88,2973,4.09,2974,2.376,2975,5.056,2976,5.359,2977,3.601,2978,4.348,2979,4.348,2980,5.232,2981,3.601,2982,1.929,2983,3.875,2984,2.117,2985,2.376,2986,2.376,2987,3.601,2988,2.235,2989,5.422,2990,2.235,2991,2.117,2992,2.117,2993,3.601,2994,2.376,2995,6.015,2996,5.801,2997,4.851,2998,3.601,2999,2.376,3000,5.214,3001,2.376,3002,2.376,3003,2.376,3004,2.376,3005,3.601,3006,4.851,3007,2.376,3008,2.117,3009,3.209,3010,4.323,3011,2.376,3012,2.376,3013,2.376,3014,3.601,3015,4.348,3016,2.376,3017,2.376,3018,2.376,3019,3.601,3020,3.601,3021,2.376,3022,3.601,3023,4.348,3024,4.348,3025,3.601,3026,3.601,3027,2.376,3028,2.376,3029,3.601,3030,3.601,3031,2.376,3032,2.376,3033,2.376,3034,4.348,3035,2.376,3036,2.376,3037,2.376,3038,2.376,3039,3.601,3040,2.376,3041,2.376,3042,3.869,3043,4.772,3044,4.772,3045,4.772,3046,3.148,3047,4.772,3048,4.772,3049,3.148,3050,3.148,3051,3.148,3052,3.148,3053,3.148,3054,3.148,3055,3.148,3056,3.148,3057,3.148,3058,3.148,3059,3.148,3060,3.148,3061,3.148,3062,3.148,3063,3.148,3064,3.148,3065,3.148,3066,2.789]],["title/classes/TsSortHeaderBase.html",[37,0.043,3067,3.658]],["body/classes/TsSortHeaderBase.html",[2,0.063,3,0.046,4,0.029,5,0.029,13,1.395,14,1.104,19,0.008,20,0.735,22,1.303,25,0.15,27,0.212,31,3.812,33,0.083,34,0.955,37,0.074,39,0.005,40,0.005,46,0.693,58,1.072,63,2.5,64,1.15,67,2.182,80,0.999,82,2.962,90,1.387,92,3.433,95,3.097,99,2.011,106,2.326,109,1.072,114,0.825,118,2.064,120,1.196,128,1.038,145,2.031,161,1.694,165,1.418,168,1.618,169,2.698,170,3.013,173,1.224,185,1.864,188,1.748,189,1.911,192,2.734,193,1.618,200,1.15,203,1.776,204,1.9,205,1.451,225,1.334,226,1.229,227,1.388,229,1.331,231,1.694,233,0.996,234,1.418,235,1.418,236,1.224,237,1.224,238,1.199,245,1.359,247,1.059,249,0.589,257,1.171,274,2.313,309,2.171,322,1.543,325,2.734,335,2.246,361,2.385,365,1.9,443,1.776,478,3.303,480,2.698,504,2.821,560,2.011,596,2.842,606,1.96,607,1.618,769,2.842,774,2.065,810,2.123,815,2.058,827,1.911,833,2.313,917,4.302,996,2.385,1047,1.911,1163,1.618,1164,2.465,1198,2.291,1209,2.636,1221,2.698,1222,2.962,1236,2.962,1241,4.689,1244,2.385,1253,3.536,1264,4.302,1265,2.44,1267,2.563,1330,3.812,1331,2.065,1399,2.546,1433,2.122,1474,2.927,1479,2.546,1490,3.649,1561,4.604,1599,2.842,1609,3.252,1683,2.734,1701,3.252,2174,3.252,2265,5.259,2431,4.895,2486,3.432,2852,3.097,2970,2.962,2972,3.974,2975,3.974,2976,4.155,2980,3.252,2982,3.974,2983,4.362,2984,3.252,2989,4.155,2991,3.252,2992,3.252,2995,4.362,2996,3.252,3008,3.252,3009,4.362,3010,3.252,3042,3.92,3067,5.259,3068,3.92,3069,4.284,3070,4.895,3071,3.92,3072,5.746,3073,4.284,3074,5.746,3075,4.284,3076,5.746,3077,3.92,3078,3.92,3079,6.485,3080,4.284,3081,4.284,3082,5.746,3083,5.746,3084,5.746,3085,4.284,3086,4.284,3087,4.284,3088,4.284,3089,4.284,3090,4.284,3091,6.485,3092,4.284,3093,4.284,3094,4.284,3095,4.284,3096,4.284,3097,4.284,3098,4.284,3099,4.284,3100,4.284,3101,4.284,3102,4.284,3103,4.284,3104,4.284,3105,4.284,3106,3.92,3107,4.284,3108,5.746,3109,4.284,3110,4.284]],["title/components/TsSortHeaderComponent.html",[80,0.537,1163,1.51]],["body/components/TsSortHeaderComponent.html",[2,0.044,3,0.032,4,0.03,5,0.053,7,0.407,11,0.457,12,0.699,13,1.457,14,1.138,16,0.915,18,1.372,19,0.008,20,0.917,21,0.821,22,1.371,23,2.46,25,0.14,27,0.146,31,3.892,33,0.067,34,0.66,37,0.057,39,0.004,40,0.004,46,0.714,58,1.089,63,2.552,64,1.186,66,0.673,67,1.507,80,0.963,82,2.045,90,1.46,92,3.381,93,1.143,95,3.194,96,1.17,99,1.389,106,2.541,109,1.186,114,0.851,118,1.962,120,1.158,127,1.7,128,1.059,145,1.561,158,0.9,161,1.747,165,0.979,168,1.53,169,2.074,170,2.772,173,0.845,185,1.287,188,1.344,189,1.319,192,1.887,193,1.117,200,1.186,203,1.226,204,1.923,205,1.585,225,1.621,226,1.782,227,1.432,229,1.372,231,1.747,233,1.027,234,1.463,235,1.463,236,1.262,237,1.262,238,1.236,245,1.503,247,1.308,249,0.608,257,1.189,274,1.597,300,1.045,309,2.216,322,1.768,325,1.887,335,3.075,361,2.46,365,1.805,414,1.197,419,1.226,443,1.831,471,1.092,478,3.477,480,2.483,504,2.731,560,2.754,596,1.962,606,1.353,607,1.669,622,0.511,629,1.117,674,1.17,677,0.863,683,1.117,699,1.197,751,1.226,757,0.863,760,1.561,769,2.931,774,1.426,790,1.17,800,1.226,810,2.167,815,2.059,816,1.494,827,1.319,833,2.386,917,3.508,954,1.197,996,2.46,1010,1.197,1011,1.045,1012,1.353,1047,1.971,1113,2.684,1114,1.353,1115,1.353,1116,2.021,1117,1.353,1118,1.353,1119,1.256,1120,1.353,1121,1.256,1122,1.353,1123,1.197,1124,1.353,1125,1.226,1126,1.226,1127,1.353,1128,1.256,1129,1.353,1130,1.226,1131,1.353,1132,1.226,1133,1.353,1134,1.256,1135,1.353,1136,1.197,1137,2.021,1138,1.256,1139,1.256,1140,1.353,1141,1.197,1142,1.353,1143,1.226,1144,1.353,1145,1.226,1146,1.353,1147,1.226,1148,1.353,1149,1.226,1150,1.353,1151,1.353,1152,1.226,1153,1.353,1154,1.197,1155,1.353,1156,1.287,1157,1.353,1158,1.197,1159,1.226,1160,1.353,1161,1.287,1162,1.353,1163,2.216,1164,2.454,1165,1.353,1166,1.045,1167,1.353,1168,1.226,1169,1.353,1170,1.226,1171,1.353,1172,1.256,1173,1.353,1174,1.226,1175,1.353,1176,1.117,1177,1.353,1178,1.117,1179,2.021,1180,1.17,1181,1.353,1182,1.197,1183,1.353,1184,1.117,1185,1.353,1186,1.226,1187,1.353,1188,1.117,1189,1.353,1190,1.117,1191,1.197,1192,1.353,1193,1.226,1194,1.353,1195,1.353,1196,1.197,1197,1.353,1198,2.534,1199,1.353,1200,1.197,1201,1.319,1202,1.353,1209,1.82,1221,2.754,1222,3.055,1236,3.055,1241,5.073,1244,1.647,1253,2.718,1264,3.508,1265,1.876,1267,1.971,1330,3.508,1331,2.13,1399,1.757,1433,2.189,1474,2.988,1479,2.625,1490,3.763,1561,3.54,1599,1.962,1609,2.245,1683,2.819,1701,2.245,2174,3.353,2265,4.043,2431,4.504,2486,3.54,2852,3.194,2970,3.055,2972,4.056,2975,3.657,2976,3.823,2980,4.453,2982,4.554,2983,4.014,2984,2.245,2989,3.823,2991,2.245,2992,2.245,2995,4.453,2996,2.245,3008,2.245,3009,3.353,3010,4.453,3042,4.043,3066,2.957,3067,2.707,3068,7.118,3069,2.957,3070,3.763,3071,2.707,3072,4.418,3073,2.957,3074,5.288,3075,2.957,3076,5.866,3077,4.043,3078,2.707,3079,6.585,3080,4.418,3081,4.418,3082,6.277,3083,6.277,3084,6.277,3085,2.957,3086,2.957,3087,2.957,3088,2.957,3089,2.957,3090,5.288,3091,7.172,3092,6.277,3093,6.585,3094,2.957,3095,2.957,3096,2.957,3097,2.957,3098,4.418,3099,2.957,3100,2.957,3101,2.957,3102,4.418,3103,2.957,3104,2.957,3105,2.957,3106,4.043,3107,2.957,3108,4.418,3109,2.957,3110,2.957,3111,3.338,3112,4.987,3113,3.338,3114,3.338,3115,3.338,3116,3.338,3117,3.338,3118,3.338,3119,3.338,3120,3.338,3121,3.338,3122,3.338,3123,3.338,3124,3.338,3125,3.338,3126,3.338,3127,4.987,3128,4.987]],["title/injectables/TsSortHeaderIntl.html",[0,1.382,2982,2.764]],["body/injectables/TsSortHeaderIntl.html",[0,2.415,2,0.074,3,0.054,4,0.034,5,0.05,7,0.687,11,0.772,12,1.005,16,0.828,19,0.008,21,0.562,22,1.276,25,0.132,27,0.247,28,2.245,33,0.089,34,1.114,35,2.015,37,0.054,39,0.006,40,0.006,46,1.189,58,1.155,62,2.455,63,2.764,74,1.69,80,0.853,85,4.823,90,1.495,92,3.954,109,1.283,118,2.419,123,1.427,128,1.261,134,2.197,156,4.393,162,2.245,185,2.173,249,1.044,257,1.328,265,1.974,281,3.211,309,2.4,341,3.073,416,1.341,438,4.152,508,2.455,511,4.393,769,4.215,815,1.934,1018,3.431,1164,2.377,1198,2.469,1228,6.354,1315,4.995,1329,4.995,1447,2.228,1479,3.776,1745,5.611,2185,5.091,2199,4.055,2975,4.393,2982,5.65,3068,6.73,3070,4.255,3106,5.815,3129,5.639,3130,6.354,3131,8.3,3132,8.3,3133,5.639,3134,7.172,3135,5.639,3136,5.639,3137,7.172,3138,5.639,3139,5.639,3140,4.995,3141,4.995,3142,5.639,3143,5.639]],["title/modules/TsSortModule.html",[619,0.618,655,3.034]],["body/modules/TsSortModule.html",[2,0.083,3,0.079,4,0.038,5,0.038,7,0.771,19,0.008,25,0.15,27,0.277,33,0.104,37,0.06,39,0.007,40,0.007,116,1.505,146,4.935,249,0.939,313,1.641,406,4.935,416,1.976,607,2.578,619,1.055,621,1.704,622,0.969,623,1.816,655,6.275,662,2.26,664,5.468,665,2.26,739,2.359,740,1.896,815,1.795,1163,3.15,1164,2.339,1198,2.947,1468,4.199,1561,4.49,1789,3.923,3070,5.813,3071,6.246,3140,6.825,3144,5.604,3145,5.604,3146,5.604,3147,6.325,3148,6.825,3149,6.825,3150,6.825,3151,7.704,3152,7.704]],["title/interfaces/TsSortState.html",[41,0.55,2990,3.203]],["body/interfaces/TsSortState.html",[2,0.05,3,0.036,4,0.023,5,0.023,7,0.467,11,0.525,12,0.773,13,1.341,16,0.402,18,1.518,19,0.008,21,0.644,25,0.125,27,0.168,30,1.312,31,3.242,33,0.088,34,1.397,35,1.581,37,0.052,39,0.005,40,0.005,41,0.862,43,1.312,46,1.074,49,2.261,50,1.032,54,0.911,64,1.538,67,1.729,69,1.282,75,2.29,80,0.456,90,1.225,92,3.736,106,2.885,108,1.55,109,1.206,114,0.653,118,2.06,120,1.409,123,1.636,124,0.6,128,1.341,129,1.407,133,1.681,134,1.173,152,2.721,156,2.347,162,2.024,167,1.689,168,1.313,169,2.942,170,2.562,171,0.97,185,1.477,188,1.032,189,1.514,200,0.911,204,1.896,205,0.857,225,0.653,226,1.525,231,1.342,238,0.95,239,3.242,245,1.313,247,1.416,249,0.788,250,2.075,256,2.688,257,1.497,274,3.092,278,3.379,281,1.342,298,5.372,309,2.163,322,1.783,335,1.779,341,2.088,347,1.671,365,1.954,392,2.721,402,1.148,408,3.189,436,0.93,489,1.933,492,1.681,493,1.374,503,1.553,504,1.477,508,1.312,510,0.97,576,1.951,593,1.553,607,1.282,727,1.681,768,2.088,774,1.636,810,2.554,815,2.12,827,2.18,834,2.454,836,2.576,996,3.697,1039,2.576,1047,1.514,1163,1.282,1164,2.524,1198,2.698,1209,2.088,1216,2.454,1221,1.593,1222,2.347,1296,2.251,1330,2.251,1331,3.334,1384,3.71,1391,1.89,1401,3.092,1406,1.833,1474,2.489,1557,2.088,1558,2.088,1560,2.719,1586,4.548,1599,2.251,1633,3.533,1683,2.166,1745,3.533,2014,3.655,2018,3.533,2199,2.166,2235,2.719,2432,4.53,2968,2.719,2969,2.719,2970,2.347,2971,2.891,2972,5.043,2973,4.588,2974,2.891,2975,5.137,2976,5.521,2977,4.163,2978,2.891,2979,2.891,2980,5.41,2981,4.163,2982,2.347,2983,3.71,2984,2.576,2985,2.891,2986,2.891,2987,4.163,2988,2.719,2989,4.801,2990,3.915,2991,2.576,2992,2.576,2993,4.163,2994,2.891,2995,5.725,2996,5.249,2997,2.891,2998,2.891,2999,2.891,3000,4.163,3001,2.891,3002,2.891,3003,2.891,3004,2.891,3005,4.163,3006,2.891,3007,2.891,3008,2.576,3009,3.71,3010,2.576,3011,2.891,3012,2.891,3013,2.891,3014,2.891,3015,4.878,3016,2.891,3017,2.891,3018,2.891,3019,2.891,3020,2.891,3021,2.891,3022,2.891,3023,4.878,3024,4.878,3025,4.163,3026,4.163,3027,2.891,3028,2.891,3029,2.891,3030,4.163,3031,2.891,3032,2.891,3033,2.891,3034,4.878,3035,2.891,3036,2.891,3037,2.891,3038,2.891,3039,4.163,3040,2.891,3041,2.891]],["title/interfaces/TsSortableItem.html",[41,0.55,2989,2.89]],["body/interfaces/TsSortableItem.html",[2,0.049,3,0.036,4,0.023,5,0.023,7,0.461,11,0.518,12,0.765,13,1.337,16,0.397,18,1.503,19,0.008,21,0.7,25,0.124,27,0.166,30,1.87,31,3.211,33,0.088,34,1.389,35,1.572,37,0.052,39,0.005,40,0.005,41,0.908,43,1.294,46,1.068,49,2.252,50,1.019,54,0.899,64,1.526,67,1.706,69,1.265,75,2.279,80,0.45,90,1.216,92,3.848,106,3.082,108,1.536,109,1.202,114,0.645,118,2.05,120,1.405,123,1.624,124,0.592,128,1.337,129,1.388,133,1.659,134,1.158,152,2.695,156,2.315,162,2.008,167,1.673,168,1.304,169,2.923,170,2.537,171,0.957,185,1.457,188,1.019,189,1.494,200,0.899,204,1.887,205,0.845,225,0.645,226,1.518,231,1.324,238,0.937,239,3.211,245,1.442,247,1.405,249,0.782,250,2.055,256,2.674,257,1.49,274,3.069,278,3.347,281,1.324,298,4.977,309,1.828,322,1.774,335,1.755,341,2.06,347,1.658,365,1.992,392,2.695,402,1.133,408,3.165,436,0.918,489,1.914,492,1.659,493,1.356,503,1.532,504,1.457,508,1.294,510,0.957,576,1.925,593,1.532,607,1.265,727,1.659,768,2.06,774,1.614,810,2.543,815,2.116,827,2.159,834,2.421,836,2.542,996,3.833,1039,2.542,1047,1.494,1163,1.828,1164,2.524,1198,2.617,1209,2.06,1216,2.421,1221,1.572,1222,2.315,1296,2.222,1330,2.222,1331,3.319,1384,3.674,1391,1.865,1401,3.069,1406,1.808,1474,2.895,1557,2.06,1558,2.06,1560,2.683,1586,4.638,1599,2.222,1633,3.499,1683,2.137,1745,3.499,2014,3.627,2018,3.499,2199,2.137,2235,2.683,2432,4.502,2968,2.683,2969,2.683,2970,2.315,2971,2.852,2972,5.025,2973,4.554,2974,2.852,2975,5.265,2976,5.616,2977,4.123,2978,2.852,2979,2.852,2980,5.708,2981,4.123,2982,2.315,2983,3.674,2984,2.542,2985,2.852,2986,2.852,2987,4.123,2988,3.878,2989,4.977,2990,2.683,2991,2.542,2992,2.542,2993,4.123,2994,2.852,2995,5.708,2996,5.226,2997,2.852,2998,2.852,2999,2.852,3000,4.123,3001,2.852,3002,2.852,3003,2.852,3004,2.852,3005,4.123,3006,2.852,3007,2.852,3008,2.542,3009,3.674,3010,2.542,3011,2.852,3012,2.852,3013,2.852,3014,2.852,3015,4.841,3016,2.852,3017,2.852,3018,2.852,3019,2.852,3020,2.852,3021,2.852,3022,2.852,3023,4.841,3024,4.841,3025,4.123,3026,4.123,3027,2.852,3028,2.852,3029,2.852,3030,4.123,3031,2.852,3032,2.852,3033,2.852,3034,4.841,3035,2.852,3036,2.852,3037,2.852,3038,2.852,3039,4.123,3040,2.852,3041,2.852]],["title/modules/TsSpacingModule.html",[619,0.618,656,3.034]],["body/modules/TsSpacingModule.html",[2,0.09,3,0.065,4,0.041,5,0.041,19,0.008,25,0.148,27,0.3,33,0.102,37,0.065,39,0.007,40,0.007,116,1.631,249,0.835,313,1.354,416,2.045,619,1.107,621,1.847,622,1.05,623,1.968,656,6.235,662,2.371,665,2.371,739,2.476,740,2.055,1200,3.408,1485,4.406,3153,6.073,3154,6.073,3155,6.073,3156,6.855,3157,8.084]],["title/components/TsTableComponent.html",[80,0.537,1166,1.412]],["body/components/TsTableComponent.html",[2,0.042,3,0.055,4,0.029,5,0.019,7,0.39,12,0.908,13,0.512,14,0.731,16,0.87,19,0.008,20,1.011,21,0.319,25,0.14,27,0.255,28,2.448,33,0.086,34,1.15,35,1.878,37,0.07,39,0.004,40,0.005,41,0.79,43,1.096,46,1.12,49,2.387,50,1.747,51,1.91,52,1.863,56,1.693,57,1.745,58,1.072,63,2.5,64,0.762,66,1.174,68,1.405,69,1.618,72,1.275,73,0.981,74,0.96,75,0.939,79,2.422,80,0.952,82,1.962,90,0.607,92,1.405,93,1.096,96,1.122,99,1.332,103,2.544,109,1.02,116,1.15,118,1.931,120,0.523,128,1.037,134,0.981,140,1.002,145,1.002,155,2.138,158,0.863,164,3.302,165,0.939,168,0.594,172,2.181,173,0.811,185,1.234,200,1.15,202,0.9,204,1.414,205,1.081,208,2.461,210,1.785,225,1.615,226,1.775,229,1.33,231,1.693,233,0.995,234,1.418,235,1.418,236,1.223,237,1.223,238,1.443,247,0.702,249,0.892,256,1.148,257,1.171,260,1.94,265,0.881,267,2.5,268,0.939,286,2.544,300,1.002,313,0.633,319,1.882,321,2.461,322,1.15,347,1.676,352,1.959,361,3.199,383,2.051,402,1.449,419,1.176,422,1.205,436,0.778,438,2.544,471,1.048,489,1.122,510,1.641,519,3.233,523,1.811,547,2.556,554,1.298,593,1.959,609,1.368,616,3.096,622,0.49,623,0.919,629,1.072,674,1.122,677,0.828,683,1.072,699,1.148,727,1.405,751,1.176,756,1.58,757,0.828,790,1.122,800,1.176,809,4.024,810,3.001,815,1.77,816,1.943,821,2.596,827,1.265,828,2.417,832,2.154,833,3.501,845,2.417,846,1.631,857,1.962,867,1.445,915,1.631,954,1.148,956,3.141,961,4.154,1010,1.148,1011,2.03,1012,1.298,1015,3.727,1047,1.91,1073,3.666,1089,1.882,1095,2.417,1097,2.273,1113,2.628,1114,1.298,1115,1.298,1116,1.959,1117,1.298,1118,1.298,1119,1.205,1120,1.298,1121,1.205,1122,1.298,1123,1.148,1124,1.298,1125,1.176,1126,1.176,1127,1.298,1128,1.205,1129,1.298,1130,1.176,1131,1.298,1132,1.176,1133,1.298,1134,1.205,1135,1.298,1136,1.148,1137,1.959,1138,1.205,1139,1.205,1140,1.298,1141,1.148,1142,1.298,1143,1.176,1144,1.298,1145,1.176,1146,1.298,1147,1.176,1148,1.298,1149,1.176,1150,1.298,1151,1.298,1152,2.138,1153,1.298,1154,1.148,1155,1.298,1156,1.234,1157,1.298,1158,1.148,1159,1.176,1160,1.298,1161,2.5,1162,1.298,1163,1.072,1164,2.301,1165,1.298,1166,2.03,1167,1.298,1168,1.176,1169,1.298,1170,1.176,1171,1.298,1172,1.205,1173,1.298,1174,1.176,1175,1.298,1176,1.072,1177,1.298,1178,1.072,1179,1.959,1180,1.122,1181,1.298,1182,1.148,1183,1.298,1184,1.072,1185,1.298,1186,1.176,1187,1.298,1188,1.072,1189,1.298,1190,1.072,1191,1.148,1192,1.298,1193,1.176,1194,1.298,1195,1.298,1196,1.148,1197,1.298,1198,2.448,1199,1.298,1200,1.148,1201,1.265,1202,1.298,1235,1.811,1236,2.961,1244,1.58,1259,3.422,1262,2.154,1293,2.544,1316,3.25,1331,2.973,1406,2.312,1410,1.532,1433,2.121,1447,1.265,1448,1.58,1475,2.245,1557,1.745,1558,1.745,1581,2.596,1585,3.919,1586,3.935,1683,2.733,1701,2.154,1789,2.461,1801,2.837,1806,2.596,1835,2.837,1871,2.154,1905,3.647,1906,2.417,1949,2.837,1955,2.837,2010,5.522,2103,1.962,2179,2.273,2186,2.273,2224,2.273,2255,2.596,2468,2.837,2492,2.051,2556,2.596,2558,4.894,2669,2.837,2756,2.596,2852,2.051,2896,2.417,2970,1.962,2972,1.962,2973,2.273,3077,5.643,3158,3.202,3159,4.282,3160,4.833,3161,4.833,3162,6.166,3163,3.202,3164,6.483,3165,4.833,3166,2.837,3167,6.613,3168,6.96,3169,4.833,3170,3.202,3171,4.282,3172,3.202,3173,3.202,3174,3.202,3175,3.202,3176,5.822,3177,3.202,3178,3.202,3179,3.202,3180,3.202,3181,3.202,3182,3.202,3183,4.833,3184,4.833,3185,3.202,3186,3.202,3187,4.833,3188,4.833,3189,5.822,3190,4.833,3191,3.202,3192,3.202,3193,4.833,3194,3.202,3195,2.837,3196,3.202,3197,5.822,3198,5.822,3199,3.202,3200,2.837,3201,3.202,3202,3.202,3203,5.822,3204,3.202,3205,4.833,3206,3.202,3207,3.202,3208,4.833,3209,3.202,3210,4.833,3211,3.202,3212,3.202,3213,3.202,3214,3.202,3215,6.485,3216,3.202,3217,3.202,3218,4.833,3219,3.202,3220,3.202,3221,3.202,3222,3.202,3223,4.833,3224,3.202,3225,3.202,3226,3.202,3227,3.202,3228,3.202,3229,3.202,3230,3.202,3231,3.202,3232,3.202,3233,3.202,3234,3.202,3235,3.202,3236,2.596,3237,4.833,3238,4.833,3239,4.282,3240,3.202,3241,3.202,3242,3.202,3243,3.202,3244,4.833,3245,3.202,3246,3.202,3247,3.202,3248,3.202,3249,3.202,3250,3.202,3251,3.202,3252,3.202,3253,3.202,3254,3.202,3255,3.202,3256,3.202,3257,3.202]],["title/classes/TsTableDataSource.html",[37,0.043,3167,3.658]],["body/classes/TsTableDataSource.html",[2,0.06,3,0.08,4,0.027,5,0.053,7,0.556,11,0.625,12,0.874,14,1.041,16,0.927,18,1.716,19,0.008,20,0.706,21,0.797,22,1.11,25,0.104,33,0.051,35,1.788,37,0.059,39,0.006,40,0.006,46,0.893,49,2.453,56,2.185,58,0.668,73,2.528,75,1.829,82,3.82,85,5.136,90,0.865,109,1.209,118,2.401,120,1.468,123,1.578,124,1.195,128,1.412,162,2.391,182,4.677,184,4.204,185,1.758,210,1.424,238,1.546,247,1.808,249,0.866,256,2.739,268,1.829,309,2.087,322,1.817,344,4.706,349,1.68,352,3.095,414,1.636,434,2.449,443,2.29,509,4.318,510,1.578,537,3.076,547,2.705,621,1.68,760,1.952,769,3.665,809,4.072,867,2.814,914,3.767,961,2.922,1015,4.538,1093,5.056,1152,2.29,1164,2.178,1166,2.391,1198,1.952,1244,2.25,1296,3.665,1331,2.664,1447,2.464,1526,6.693,1557,3.399,1586,3.526,1836,5.056,1878,5.525,2180,4.194,2558,6.23,2781,4.706,3162,6.766,3167,5.056,3171,6.294,3258,8.911,3259,4.562,3260,6.236,3261,7.637,3262,7.637,3263,7.637,3264,7.637,3265,7.637,3266,7.637,3267,6.236,3268,8.451,3269,4.562,3270,8.604,3271,4.562,3272,4.562,3273,4.562,3274,4.562,3275,4.562,3276,6.236,3277,4.562,3278,6.236,3279,6.294,3280,4.562,3281,4.562,3282,6.236,3283,4.562,3284,4.562,3285,4.562,3286,4.562,3287,4.562,3288,4.562,3289,4.562,3290,6.236,3291,4.562,3292,4.562,3293,6.236,3294,4.562,3295,6.236,3296,4.562,3297,4.562,3298,4.562]],["title/modules/TsTableModule.html",[619,0.618,657,3.203]],["body/modules/TsTableModule.html",[2,0.067,3,0.076,4,0.031,5,0.031,7,0.628,19,0.008,25,0.151,27,0.226,33,0.101,37,0.049,39,0.006,40,0.006,49,1.449,116,1.227,146,4.336,249,0.628,313,1.493,406,4.336,416,1.798,547,1.449,607,2.266,619,0.927,621,1.39,622,0.79,623,1.481,651,5.752,655,5.752,657,6.828,662,1.986,664,4.805,665,1.986,696,4.568,704,5.997,739,2.073,740,1.545,809,3.339,833,3.239,1136,3.283,1158,3.283,1166,2.866,1176,3.095,1178,3.064,1184,3.095,1188,3.095,1190,3.064,1191,3.317,1196,3.317,1244,2.544,1468,3.69,1789,3.447,3148,5.997,3149,5.997,3150,5.997,3299,4.568,3300,4.568,3301,4.568,3302,5.157,3303,4.568,3304,5.157,3305,6.77,3306,6.77,3307,6.77]],["title/pipes/TsTimeAgoPipe.html",[99,1.877,2692,3.405]],["body/pipes/TsTimeAgoPipe.html",[2,0.082,3,0.06,4,0.038,5,0.046,16,0.658,18,1.724,19,0.008,20,0.937,21,0.624,22,1.115,25,0.128,27,0.274,33,0.071,34,1.513,35,1.713,37,0.06,39,0.006,40,0.006,46,1.352,58,1.318,66,1.669,99,3.441,109,1.212,169,3.441,238,1.553,266,1.979,268,1.838,274,3.664,327,5.78,436,1.86,447,3.543,547,1.761,607,2.563,677,2.42,757,1.619,760,1.961,768,3.415,1849,4.447,1850,5.437,1854,5.437,1855,4.728,1869,4.447,1870,4.214,1871,4.214,1872,5.551,1873,5.551,1903,5.08,1904,6.21,2065,5.08,2160,4.447,2692,5.78,2702,6.785,3308,7.659,3309,6.266,3310,6.785,3311,8.839,3312,6.266,3313,6.266,3314,6.266,3315,6.266,3316,6.266,3317,6.266,3318,6.266]],["title/pipes/TsTitleCasePipe.html",[99,1.877,2693,3.405]],["body/pipes/TsTitleCasePipe.html",[2,0.089,3,0.064,4,0.041,5,0.048,16,0.711,18,1.865,19,0.008,20,0.969,21,0.675,22,1.206,25,0.113,27,0.297,33,0.076,37,0.064,39,0.007,40,0.007,46,1.294,58,1.296,99,3.559,109,1.296,238,1.68,266,2.075,436,1.95,547,1.905,607,2.268,757,1.752,760,2.122,768,3.694,1006,3.568,1849,4.811,1850,5.7,1854,5.7,1869,4.811,1870,4.558,1871,4.558,2693,6.06,2704,7.114,2954,6.004,2956,6.004,3319,8.03,3320,7.114,3321,6.778,3322,6.778,3323,6.778,3324,6.778]],["title/components/TsToggleComponent.html",[80,0.537,1168,1.657]],["body/components/TsToggleComponent.html",[2,0.047,3,0.034,4,0.032,5,0.052,7,0.439,8,1.539,11,0.494,12,0.739,13,1.361,16,0.985,18,1.891,19,0.008,20,0.975,21,0.891,22,1.223,25,0.127,27,0.158,33,0.07,34,0.712,35,1.18,37,0.073,39,0.004,40,0.004,41,0.761,46,0.985,53,3.746,54,1.635,58,1.323,62,1.807,64,1.635,66,1.259,69,1.766,80,0.982,90,1.591,93,1.234,96,1.263,108,1.755,109,1.12,114,1.172,118,1.93,120,1.196,123,1.74,124,0.564,128,0.999,136,5.162,157,1.424,158,0.971,161,2.408,162,1.652,165,1.057,167,2.105,168,1.598,171,1.74,173,0.912,175,1.035,188,0.971,189,1.424,194,2.667,195,1.582,196,1.582,200,1.485,201,2.016,202,1.483,203,1.938,205,1.537,210,1.425,224,1.582,225,1.624,226,1.787,227,1.515,229,1.452,233,1.087,234,1.548,235,1.548,236,1.336,237,1.336,245,1.598,247,1.368,249,0.891,250,1.985,257,0.844,266,1.364,281,2.408,294,2.348,295,3.102,299,2.751,300,1.128,322,1.74,337,1.965,349,0.971,365,1.282,389,2.309,391,3.102,392,1.778,395,3.102,396,4.432,414,2.465,415,2.118,416,1.255,418,1.582,419,1.323,420,2.118,421,2.118,422,1.356,424,2.118,425,2.558,434,1.104,445,2.558,447,2.984,448,2.558,471,1.179,473,2.818,510,1.336,547,1.013,607,2.089,622,0.552,629,2.881,674,1.263,677,0.931,683,1.206,699,1.293,716,2.208,717,2.208,751,1.323,757,0.931,760,1.652,771,1.674,774,1.539,777,2.309,790,1.263,800,1.323,815,1.23,816,1.582,817,2.525,854,4.866,954,1.293,1010,1.293,1011,1.128,1012,1.461,1112,1.499,1113,2.786,1114,1.461,1115,1.461,1116,2.139,1117,1.461,1118,1.461,1119,1.356,1120,1.461,1121,1.356,1122,1.461,1123,1.293,1124,1.461,1125,1.323,1126,1.323,1127,1.461,1128,1.356,1129,1.461,1130,1.323,1131,1.461,1132,1.323,1133,1.461,1134,1.356,1135,1.461,1136,1.293,1137,2.139,1138,1.356,1139,1.356,1140,1.461,1141,1.293,1142,1.461,1143,1.323,1144,1.461,1145,1.323,1146,1.461,1147,1.323,1148,1.461,1149,1.323,1150,1.461,1151,1.461,1152,1.323,1153,1.461,1154,1.293,1155,1.461,1156,1.389,1157,1.461,1158,1.293,1159,1.323,1160,1.461,1161,1.389,1162,1.461,1163,1.206,1164,0.951,1165,1.461,1166,1.128,1167,1.461,1168,2.806,1169,1.461,1170,1.323,1171,1.461,1172,1.356,1173,1.461,1174,1.323,1175,1.461,1176,1.206,1177,1.461,1178,1.206,1179,2.139,1180,1.263,1181,1.461,1182,1.293,1183,1.461,1184,1.206,1185,1.461,1186,1.323,1187,1.461,1188,1.206,1189,1.461,1190,1.206,1191,1.293,1192,1.461,1193,1.323,1194,1.461,1195,1.461,1196,1.293,1197,1.461,1198,1.128,1199,1.461,1200,1.293,1201,1.424,1202,1.461,1420,3.288,1433,2.316,1582,5.186,1586,3.53,1598,4.712,1600,2.309,1602,5.186,1605,4.199,1610,5.062,1611,5.062,1612,5.062,1613,5.062,1614,4.279,1615,4.279,1616,4.279,1627,7.173,1628,3.193,1630,3.193,1631,2.72,1632,3.193,1633,3.38,1634,3.193,1635,2.922,1636,3.193,1637,2.922,1638,2.72,1643,3.193,1644,1.897,1645,4.279,1646,3.193,1647,3.549,1648,4.279,1649,3.193,1651,3.193,2199,2.984,2748,4.712,2959,4.279,2960,3.193,2961,5.531,2962,2.922,2963,4.712,2964,4.675,2965,4.675,2966,3.193,2967,5.531,3325,3.604,3326,5.277,3327,3.604,3328,3.604,3329,3.604,3330,3.604,3331,3.604,3332,3.604,3333,3.604,3334,3.604,3335,3.604]],["title/modules/TsToggleModule.html",[619,0.618,658,3.203]],["body/modules/TsToggleModule.html",[2,0.088,3,0.064,4,0.04,5,0.04,19,0.008,25,0.152,27,0.294,33,0.102,37,0.064,39,0.007,40,0.007,116,1.598,136,3.797,175,1.928,249,0.818,313,1.327,416,2.028,619,1.094,621,1.81,622,1.028,623,1.928,658,6.555,662,2.343,665,2.343,739,2.446,740,2.013,741,4.516,1168,3.5,2962,5.445,2963,6.433,3336,5.95,3337,5.95,3338,5.95,3339,5.95,3340,6.717,3341,7.987,3342,7.987]],["title/components/TsTooltipComponent.html",[80,0.537,1170,1.657]],["body/components/TsTooltipComponent.html",[2,0.064,3,0.046,4,0.039,5,0.047,7,0.592,11,0.666,13,1.174,16,0.938,19,0.008,20,0.831,21,0.781,25,0.081,27,0.213,33,0.073,37,0.075,39,0.006,40,0.006,46,1.052,50,1.755,58,1.075,63,2.51,66,0.981,80,1.052,90,1.234,93,1.665,96,1.704,114,1.111,124,0.761,128,1.041,140,2.038,158,1.31,161,1.704,165,1.426,168,1.561,173,1.231,201,2.3,202,1.83,205,1.753,210,1.676,224,1.951,225,1.647,226,1.819,227,1.869,229,1.792,233,1.341,234,1.91,235,1.91,236,1.648,237,1.648,245,1.209,257,1.041,265,1.792,300,1.522,349,1.31,419,1.786,471,1.591,505,1.994,537,2.399,622,0.745,629,1.627,674,1.704,677,1.257,683,1.627,699,1.744,712,2.858,751,1.786,757,1.257,771,2.259,790,1.704,800,1.786,815,1.517,816,1.951,826,4.497,867,2.939,954,1.744,1010,1.744,1011,1.522,1012,1.971,1091,2.476,1095,3.67,1112,2.023,1113,3.178,1114,1.971,1115,1.971,1116,2.639,1117,1.971,1118,1.971,1119,1.829,1120,1.971,1121,1.829,1122,1.971,1123,1.744,1124,1.971,1125,1.786,1126,1.786,1127,1.971,1128,1.829,1129,1.971,1130,1.786,1131,1.971,1132,1.786,1133,1.971,1134,1.829,1135,1.971,1136,1.744,1137,2.639,1138,1.829,1139,1.829,1140,1.971,1141,1.744,1142,1.971,1143,1.786,1144,1.971,1145,1.786,1146,1.971,1147,1.786,1148,1.971,1149,1.786,1150,1.971,1151,1.971,1152,1.786,1153,1.971,1154,1.744,1155,1.971,1156,1.874,1157,1.971,1158,1.744,1159,1.786,1160,1.971,1161,1.874,1162,1.971,1163,1.627,1164,1.283,1165,1.971,1166,1.522,1167,1.971,1168,1.786,1169,1.971,1170,3.001,1171,1.971,1172,1.829,1173,1.971,1174,1.786,1175,1.971,1176,1.627,1177,1.971,1178,1.627,1179,2.639,1180,1.704,1181,1.971,1182,1.744,1183,1.971,1184,1.627,1185,1.971,1186,1.786,1187,1.971,1188,1.627,1189,1.971,1190,1.627,1191,1.744,1192,1.971,1193,1.786,1194,1.971,1195,1.971,1196,1.744,1197,1.971,1198,1.522,1199,1.971,1200,1.744,1201,1.922,1202,1.971,1221,2.708,1421,4.649,1433,3.222,1474,2.939,3343,4.308,3344,5.768,3345,6.511,3346,6.511,3347,7.341,3348,7.341,3349,7.341,3350,6.511,3351,6.511,3352,4.863,3353,6.503,3354,4.863,3355,4.863]],["title/modules/TsTooltipModule.html",[619,0.618,659,2.652]],["body/modules/TsTooltipModule.html",[2,0.089,3,0.065,4,0.041,5,0.041,19,0.008,25,0.151,27,0.299,33,0.102,37,0.065,39,0.007,40,0.007,116,1.623,249,0.831,313,1.348,416,2.041,619,1.104,621,1.839,622,1.045,623,1.959,659,5.444,662,2.365,665,2.365,739,2.469,740,2.045,1170,3.488,3356,6.045,3357,6.045,3358,6.045,3359,6.824,3360,8.062,3361,6.824,3362,8.062]],["title/interfaces/TsUser.html",[41,0.55,484,2.89]],["body/interfaces/TsUser.html",[0,1.066,2,0.045,3,0.033,4,0.021,5,0.021,7,0.424,10,1.375,11,0.477,12,0.72,13,1.381,14,0.794,16,0.874,19,0.008,20,0.817,21,0.718,25,0.102,27,0.152,28,1.089,33,0.088,34,1.706,35,1.368,37,0.058,39,0.004,40,0.004,41,0.977,45,2.115,46,1.258,54,1.455,56,1.219,58,0.754,63,1.341,64,1.455,69,1.165,71,1.832,72,1.783,73,2.618,74,1.833,75,1.982,79,1.448,80,0.804,83,1.897,97,2.046,103,2.708,108,0.978,109,1.252,112,1.832,114,0.594,118,1.357,120,0.841,123,0.881,124,1.338,128,0.979,129,1.278,132,2.046,133,1.527,134,2.07,140,1.089,154,2.708,155,3.447,158,0.938,160,1.411,162,1.61,164,2.619,165,1.021,166,2.194,167,1.874,168,1.254,171,1.302,172,1.571,173,0.881,182,1.772,184,3.672,185,1.341,188,0.938,193,1.165,197,1.897,200,1.224,201,2.29,202,0.978,204,1.641,205,1.793,208,3.977,210,0.794,224,1.043,225,0.594,226,0.975,227,0.999,229,0.958,233,0.717,234,1.021,235,1.021,236,0.881,237,0.881,238,0.863,241,1.309,245,1.338,247,1.711,256,2.586,260,1.608,265,0.958,267,2.605,268,1.794,272,1.683,273,1.683,292,1.772,293,1.968,310,1.717,313,1.209,321,1.772,322,1.795,336,1.61,342,1.309,347,1.746,352,2.48,365,1.249,402,2.025,408,1.717,430,1.527,434,1.066,436,1.249,443,1.889,469,3.919,470,2.229,471,2.47,472,3.459,473,1.571,474,2.34,475,5.251,476,3.991,477,2.34,478,2.761,479,2.229,480,2.139,481,3.151,482,2.132,483,2.34,484,3.919,485,3.972,486,4.545,487,2.908,488,3.459,489,1.802,490,3.151,491,4.619,492,3.313,493,1.248,494,3.294,495,2.229,496,2.34,497,3.151,498,2.34,499,1.968,500,5.333,501,2.34,502,3.294,503,1.411,504,2.358,505,2.312,506,3.459,507,2.132,508,2.095,509,2.908,510,1.302,511,5.014,512,1.832,513,2.34,514,2.34,515,2.34,516,2.046,517,2.34,518,3.116,519,2.389,520,4.114,521,2.34,522,3.459,523,1.968,524,2.34,525,2.132,526,3.459,527,3.972,528,2.34,529,2.34,530,4.114,531,3.459,532,2.34,533,2.34,534,2.34,535,2.34,536,2.34,537,2.537,538,2.34,539,2.34,540,3.459,541,2.34,542,2.34,543,2.34,544,3.459,545,3.459,546,4.545,547,0.978,548,3.294,549,2.34,550,2.34,551,2.34,552,2.34,553,2.34,554,2.48,555,2.229,556,2.34,557,2.34,558,2.34,559,1.717,560,1.448,561,1.717,562,3.221,563,1.341,564,2.34,565,3.459,566,2.34,567,2.34,568,2.34,569,3.294,570,2.34,571,2.229,572,2.34,573,3.459,574,1.616,575,2.34,576,1.772,577,2.34,578,1.968,579,2.34,580,2.34,581,2.34,582,3.294,583,2.34,584,2.34,585,3.151,586,2.34,587,2.34,588,2.132,589,1.487,590,2.34,591,3.459,592,3.459,593,1.411,594,3.459,595,3.459,596,3.023,597,2.34,598,3.459,599,4.545,600,2.34,601,2.34,602,3.459,603,3.748,604,2.34,605,2.34,606,1.411,607,1.721,608,1.772,609,1.487,610,2.34,611,2.34,612,2.34,613,2.34,614,1.527,615,2.34,616,2.229,617,2.34,618,2.34]],["title/injectables/TsValidationMessageService.html",[0,1.382,3363,3.203]],["body/injectables/TsValidationMessageService.html",[0,2.339,2,0.069,3,0.05,4,0.032,5,0.041,7,0.837,10,2.714,11,0.722,13,1.222,16,0.903,18,1.45,19,0.008,20,0.865,21,0.684,22,0.938,25,0.115,27,0.231,30,1.804,33,0.059,34,1.7,37,0.05,39,0.006,40,0.006,45,1.65,46,1.255,54,1.254,55,3.741,56,1.847,58,1.006,59,2.136,62,2.771,66,1.812,67,4.01,68,2.313,69,2.298,70,3.229,72,1.391,75,1.546,78,3.741,109,1.229,112,3.615,144,3.741,145,2.15,154,2.775,158,2.488,161,1.847,204,2.038,260,1.996,268,1.546,312,3.977,313,1.357,336,2.15,341,2.873,349,1.85,369,2.251,380,4.206,381,4.679,447,2.98,459,4.273,464,4.874,487,3.882,520,2.873,537,2.6,589,2.251,614,2.313,677,1.974,709,3.882,760,2.15,822,3.098,870,3.229,953,4.273,973,3.376,1016,4.618,1060,3.376,1103,4.273,1337,4.273,1448,2.6,1476,3.743,2007,7.434,2021,5.182,2023,5.182,2100,3.376,2116,3.741,2120,4.273,2121,4.273,2122,5.567,2125,3.977,2224,3.741,2308,3.741,2370,5.136,2416,4.874,2742,3.977,2855,6.193,2897,4.273,2934,4.669,3363,4.874,3364,5.567,3365,5.271,3366,6.867,3367,6.867,3368,6.867,3369,8.092,3370,5.271,3371,8.392,3372,6.867,3373,4.273,3374,5.567,3375,6.867,3376,6.867,3377,5.271,3378,5.271,3379,6.867,3380,5.271,3381,4.273,3382,8.392,3383,4.273,3384,8.885,3385,5.567,3386,5.271,3387,4.273,3388,6.193,3389,5.271,3390,5.271,3391,4.273,3392,5.567,3393,5.271,3394,4.273,3395,5.271,3396,5.271,3397,5.271,3398,4.273,3399,5.271,3400,5.567,3401,5.271,3402,6.083,3403,5.271,3404,5.271,3405,5.271,3406,5.271,3407,5.271,3408,6.867,3409,5.271,3410,5.271,3411,5.271,3412,5.271,3413,5.271]],["title/components/TsValidationMessagesComponent.html",[80,0.537,1172,1.697]],["body/components/TsValidationMessagesComponent.html",[0,1.89,2,0.059,3,0.043,4,0.037,5,0.049,7,0.547,10,2.439,11,0.615,13,1.214,14,1.409,16,0.947,18,1.237,19,0.008,20,0.859,21,0.756,22,0.8,25,0.118,27,0.197,33,0.051,34,1.393,37,0.072,39,0.005,40,0.005,46,0.884,53,3.842,58,0.904,59,1.821,66,1.863,67,3.869,80,1.035,90,1.17,93,1.538,96,1.574,109,1.112,114,1.294,118,1.186,128,0.987,158,2.395,168,1.525,173,1.137,175,1.29,201,2.226,202,1.735,205,1.697,210,1.409,225,1.641,226,1.811,227,1.772,229,1.698,233,1.271,236,1.562,237,1.562,245,1.408,247,0.984,257,0.987,266,1.595,272,1.47,273,1.47,294,2.321,295,3.59,300,1.407,414,1.611,419,1.65,424,3.627,436,1.843,471,1.47,505,1.89,622,0.688,629,1.504,674,1.574,677,1.161,683,1.504,699,1.611,709,4.646,751,1.65,757,1.161,790,1.574,800,1.65,815,1.438,816,1.85,874,6.152,954,1.611,1010,1.611,1011,1.407,1012,1.821,1014,3.044,1015,3.143,1113,3.076,1114,1.821,1115,1.821,1116,2.501,1117,1.821,1118,1.821,1119,1.69,1120,1.821,1121,1.69,1122,1.821,1123,1.611,1124,1.821,1125,1.65,1126,1.65,1127,1.821,1128,1.69,1129,1.821,1130,1.65,1131,1.821,1132,1.65,1133,1.821,1134,1.69,1135,1.821,1136,1.611,1137,2.501,1138,1.69,1139,1.69,1140,1.821,1141,1.611,1142,1.821,1143,1.65,1144,1.821,1145,1.65,1146,1.821,1147,1.65,1148,1.821,1149,1.65,1150,1.821,1151,1.821,1152,1.65,1153,1.821,1154,1.611,1155,1.821,1156,1.732,1157,1.821,1158,1.611,1159,1.65,1160,1.821,1161,1.732,1162,1.821,1163,1.504,1164,1.186,1165,1.821,1166,1.407,1167,1.821,1168,1.65,1169,1.821,1170,1.65,1171,1.821,1172,2.854,1173,1.821,1174,1.65,1175,1.821,1176,1.504,1177,1.821,1178,1.504,1179,2.501,1180,1.574,1181,1.821,1182,1.611,1183,1.821,1184,1.504,1185,1.821,1186,1.65,1187,1.821,1188,1.504,1189,1.821,1190,1.504,1191,1.611,1192,1.821,1193,1.65,1194,1.821,1195,1.821,1196,1.611,1197,1.821,1198,1.407,1199,1.821,1200,1.611,1201,1.776,1202,1.821,1562,6.152,1631,3.391,1920,4.657,2061,6.245,2781,4.657,3363,5.386,3364,6.662,3414,4.493,3415,6.172,3416,6.172,3417,7.049,3418,4.493,3419,6.172,3420,6.172,3421,4.493,3422,4.493,3423,4.493,3424,4.493,3425,3.981,3426,4.493,3427,6.172,3428,6.172,3429,6.172,3430,4.493,3431,6.172,3432,4.493,3433,4.493,3434,4.493]],["title/modules/TsValidationMessagesModule.html",[619,0.618,660,2.459]],["body/modules/TsValidationMessagesModule.html",[2,0.086,3,0.063,4,0.039,5,0.039,19,0.008,25,0.153,27,0.288,33,0.103,37,0.063,39,0.007,40,0.007,66,1.767,116,1.564,175,1.888,249,1.029,313,1.299,416,2.01,619,1.08,621,1.772,622,1.007,623,1.888,660,5.088,662,2.313,665,2.313,709,3.718,739,2.415,740,1.971,741,4.459,746,5.952,747,4.962,1172,3.557,3363,6.456,3364,5.332,3425,6.987,3435,5.826,3436,5.826,3437,5.826,3438,5.826,3439,6.576,3440,7.887]],["title/injectables/TsValidatorsService.html",[0,1.382,661,2.764]],["body/injectables/TsValidatorsService.html",[0,2.223,2,0.062,3,0.045,4,0.029,5,0.055,7,0.579,8,2.739,10,2.868,11,0.651,12,0.898,14,1.085,16,0.969,19,0.008,25,0.155,27,0.208,28,1.488,32,2.794,33,0.072,37,0.069,39,0.005,40,0.005,43,1.628,49,1.336,50,1.281,51,2.868,52,2.472,58,1.379,62,2.196,66,1.824,67,2.146,68,3.41,69,2.146,70,3.929,74,2.175,80,0.565,90,1.734,109,0.697,123,1.203,128,1.026,154,2.503,158,1.281,161,1.666,175,1.365,204,1.557,247,1.405,260,2.135,294,3.051,380,5.12,381,5.12,434,1.456,436,1.762,606,3.288,661,4.759,677,2.008,822,2.794,832,3.197,839,4.649,840,3.769,872,2.688,1016,3.197,1316,3.197,1580,4.108,1675,3.855,1855,3.588,1908,3.197,2021,6.121,2023,6.121,2215,3.588,2250,3.588,2370,5.745,2388,3.855,2409,3.855,2590,5.884,3373,3.855,3374,3.855,3381,6.576,3383,6.776,3385,5.2,3387,6.576,3388,5.884,3391,6.576,3392,5.2,3394,6.576,3398,6.576,3400,6.776,3402,7.404,3441,4.755,3442,7.257,3443,4.755,3444,7.257,3445,4.755,3446,7.257,3447,4.755,3448,7.257,3449,4.755,3450,7.257,3451,4.755,3452,7.257,3453,4.755,3454,7.257,3455,4.755,3456,7.257,3457,4.755,3458,7.257,3459,4.755,3460,7.257,3461,4.755,3462,7.257,3463,4.755,3464,7.257,3465,4.755,3466,7.257,3467,4.755,3468,7.257,3469,4.755,3470,8.357,3471,4.755,3472,4.755,3473,5.682,3474,4.212,3475,4.212,3476,4.755,3477,4.755,3478,4.755,3479,4.755,3480,4.755,3481,4.755,3482,4.755,3483,4.755,3484,4.755,3485,4.755,3486,4.755,3487,4.755,3488,4.755,3489,4.755,3490,4.755,3491,4.755]],["title/directives/TsVerticalSpacingDirective.html",[257,0.722,1200,1.618]],["body/directives/TsVerticalSpacingDirective.html",[0,1.742,2,0.074,3,0.054,4,0.034,5,0.05,7,0.879,10,2.247,11,0.779,13,0.91,14,1.298,16,0.874,18,1.984,19,0.008,20,0.817,21,0.856,22,1.409,25,0.12,27,0.249,33,0.081,34,1.645,37,0.079,39,0.006,40,0.006,46,1.134,50,2.366,58,1.36,66,1.147,72,2.317,90,1.501,109,0.833,120,1.404,124,1.129,140,2.257,166,2.986,168,1.545,169,2.366,210,1.808,224,2.161,225,1.23,245,1.338,257,1.374,260,1.353,286,3.796,322,1.353,336,1.78,349,1.532,402,2.575,412,4.037,414,2.039,434,2.425,520,4.861,523,3.215,537,3.906,574,2.641,593,3.209,757,1.47,761,4.037,771,2.641,842,4.037,857,3.484,870,3.484,1053,5.846,1112,2.366,1200,2.84,1201,3.395,1485,3.93,1905,4.292,2028,4.292,2103,4.85,2492,5.072,2727,6.729,3492,7.376,3493,5.038,3494,7.376,3495,5.687,3496,7.211,3497,5.687,3498,5.687,3499,5.687,3500,5.687,3501,5.687,3502,5.687,3503,5.687,3504,5.687,3505,5.687,3506,5.687]],["title/classes/Version.html",[32,2.652,37,0.043]],["body/classes/Version.html",[2,0.085,3,0.062,4,0.039,5,0.054,7,0.795,11,0.894,12,1.1,13,1.506,14,1.49,16,0.938,18,1.796,19,0.008,20,0.739,21,0.891,22,1.161,28,2.043,32,5.254,33,0.089,34,1.289,35,1.459,37,0.075,39,0.007,40,0.007,46,1.365,267,3.446,834,5.971,1647,4.389,3507,6.526,3508,5.781,3509,7.741,3510,8.737,3511,7.741,3512,6.526,3513,7.851,3514,6.526,3515,6.526,3516,6.526,3517,6.526,3518,6.526,3519,6.526,3520,6.526,3521,6.526,3522,6.526,3523,6.526,3524,6.526]],["title/contributing.html",[106,1.346,3525,3.043,3526,3.043]],["body/contributing.html",[3,0.06,4,0.028,5,0.038,7,0.772,13,0.747,19,0.007,20,0.529,28,1.462,32,2.744,35,1.859,39,0.005,40,0.005,49,1.312,50,1.258,54,1.111,67,2.859,69,1.563,72,1.897,77,3.314,78,4.497,79,1.942,103,2.458,117,3.453,118,2.194,120,0.763,128,1.233,130,4.836,133,2.049,140,1.462,146,2.991,157,2.503,158,1.938,161,2.519,210,1.066,238,1.158,249,0.876,260,1.111,265,1.285,267,1.8,277,5.897,309,1.563,313,0.922,314,2.303,318,3.523,341,2.545,342,1.756,352,2.914,357,2.991,383,5.325,387,2.272,406,5.731,412,3.314,537,2.303,563,1.8,578,4.065,585,4.938,596,5.299,607,1.563,608,3.927,609,2.706,712,2.744,713,2.378,760,1.462,769,3.723,825,2.378,827,1.845,835,3.314,850,6.252,912,2.86,915,3.226,973,2.991,996,2.303,1007,3.785,1018,3.031,1047,1.845,1075,5.136,1112,2.635,1285,2.303,1308,3.14,1314,4.836,1316,3.14,1326,4.136,1352,4.136,1361,2.458,1410,2.234,1429,2.545,1434,2.64,1447,1.845,1449,2.458,1469,2.545,1481,2.64,1557,3.919,1666,3.785,1701,4.836,1804,4.136,1818,3.785,1832,3.785,1870,6.276,1907,5.059,1920,3.523,1985,4.136,2009,5.722,2014,3.582,2016,4.136,2018,2.991,2162,3.314,2182,5.473,2224,6.224,2250,3.523,2393,3.785,2399,3.314,2405,4.781,2407,5.426,2490,4.136,2492,2.991,2567,5.612,2852,2.991,2896,3.523,2970,2.86,3078,3.785,3166,4.136,3195,5.612,3236,7.013,3279,4.136,3475,7.532,3508,5.612,3509,4.136,3511,4.136,3526,5.83,3527,7.711,3528,4.136,3529,4.136,3530,6.335,3531,7.19,3532,8.061,3533,7.769,3534,8.948,3535,7.711,3536,6.335,3537,4.669,3538,7.19,3539,8.061,3540,4.669,3541,6.831,3542,4.669,3543,6.335,3544,6.335,3545,7.19,3546,4.669,3547,7.19,3548,6.335,3549,6.335,3550,4.669,3551,3.785,3552,4.669,3553,4.669,3554,4.669,3555,7.19,3556,6.335,3557,4.136,3558,4.669,3559,4.669,3560,4.669,3561,6.37,3562,4.669,3563,4.669,3564,4.669,3565,4.669,3566,4.669,3567,3.785,3568,4.669,3569,4.669,3570,4.669,3571,4.669,3572,4.669,3573,4.669,3574,4.669,3575,4.669,3576,4.669,3577,4.669,3578,4.669,3579,4.669,3580,4.669,3581,6.335,3582,6.335,3583,4.669,3584,4.669,3585,4.669,3586,7.141,3587,8.769,3588,9.127,3589,6.335,3590,7.711,3591,8.313,3592,7.19,3593,7.19,3594,6.335,3595,7.711,3596,6.335,3597,4.669,3598,4.669,3599,4.136,3600,4.669,3601,4.669,3602,7.19,3603,4.669,3604,6.335,3605,4.669,3606,6.335,3607,4.136,3608,7.19,3609,4.669,3610,4.669,3611,4.669,3612,4.669,3613,4.669,3614,4.669,3615,4.669,3616,4.669,3617,6.335,3618,4.669,3619,4.136,3620,4.136]],["title/dependencies.html",[621,1.465,3621,3.753]],["body/dependencies.html",[9,3.337,19,0.008,27,0.305,39,0.007,40,0.007,175,2.003,185,2.689,188,1.88,193,2.334,265,2.248,359,5.492,447,3.944,554,2.827,621,1.88,677,1.803,725,4.951,740,2.09,804,3.802,1112,3.397,1316,4.691,2010,5.264,2261,6.163,2315,5.655,3622,6.975,3623,9.368,3624,6.975,3625,6.975,3626,6.975,3627,6.975,3628,6.975,3629,6.975,3630,6.975,3631,6.975,3632,6.975,3633,6.975,3634,6.975,3635,6.975,3636,6.975]],["title/index.html",[11,0.514,106,1.346,3525,3.043]],["body/index.html",[3,0.039,4,0.044,5,0.048,8,2.476,10,2.291,11,0.562,19,0.006,20,0.465,25,0.122,28,1.286,32,2.414,39,0.005,40,0.005,45,1.286,46,0.831,48,4.115,49,2.245,50,1.562,52,3.596,56,1.439,58,1.228,60,3.713,62,1.985,66,1.656,68,2.544,69,1.94,70,2.516,74,2.394,80,0.799,84,2.915,86,2.322,93,1.406,99,3.415,106,1.473,117,3.16,123,1.467,124,0.907,128,1.167,136,2.322,140,2.103,145,1.286,150,3.099,158,1.107,161,1.439,168,1.524,188,1.107,193,1.375,200,0.977,202,1.154,204,1.408,205,0.918,206,2.516,226,0.778,249,0.706,250,1.545,260,1.9,292,2.092,294,2.181,295,1.854,300,2.103,309,1.375,313,1.145,314,2.86,347,1.498,349,1.562,357,2.631,359,3.899,369,1.754,370,3.099,380,3.551,381,3.551,383,3.713,387,2.76,406,2.631,408,2.86,434,1.258,443,2.129,463,4.642,476,2.544,489,2.354,499,2.322,508,2.3,510,1.04,512,3.052,516,2.414,520,3.978,548,2.631,554,1.665,559,2.026,561,2.026,563,2.59,571,2.631,606,3.12,609,1.754,614,1.803,621,1.107,664,2.915,674,2.031,677,2.065,683,2.249,699,1.473,726,2.616,753,3.639,754,3.099,760,1.286,765,3.099,804,2.239,810,1.344,812,3.33,817,1.965,822,2.414,824,3.099,832,2.762,842,2.915,865,2.092,915,3.422,956,1.854,961,2.631,973,2.631,1016,3.899,1018,1.965,1042,3.639,1047,3.042,1060,2.631,1075,4.7,1094,1.803,1126,2.129,1164,1.53,1237,2.762,1274,3.099,1293,3.052,1308,5.639,1314,5.521,1316,3.899,1336,8.409,1398,2.026,1421,2.092,1557,2.239,1561,2.915,1564,3.713,1570,3.639,1580,2.631,1588,3.33,1644,2.162,1666,3.33,1673,4.375,1690,5.136,1789,2.952,1803,2.915,1837,2.915,1848,3.639,1853,3.33,1861,3.33,1866,3.33,1879,3.639,1906,3.099,1928,3.33,2008,5.136,2009,2.915,2021,3.099,2023,3.099,2065,3.33,2103,2.516,2215,5.07,2250,4.375,2254,3.639,2304,3.639,2370,3.899,2371,3.33,2407,3.099,2487,5.136,2489,3.639,2558,3.099,2559,3.639,2569,3.639,2590,3.33,2635,5.136,2696,3.639,2699,3.639,2742,3.099,2743,5.447,2817,8.458,2828,3.639,2829,3.639,2852,2.631,2952,6.819,2955,3.639,2988,2.915,3159,5.136,3200,3.639,3236,3.33,3310,3.639,3320,3.639,3344,3.639,3373,4.7,3374,3.33,3381,3.33,3383,3.33,3385,4.7,3387,3.33,3388,5.447,3391,3.33,3392,4.7,3394,3.33,3398,3.33,3400,4.7,3473,5.136,3474,3.639,3526,5.447,3528,3.639,3529,5.952,3533,7.553,3541,3.639,3551,3.33,3557,5.952,3561,3.639,3586,3.639,3599,5.952,3607,3.639,3619,3.639,3620,3.639,3637,5.797,3638,6.719,3639,5.797,3640,5.797,3641,5.797,3642,4.107,3643,4.107,3644,4.107,3645,4.107,3646,4.107,3647,4.107,3648,4.107,3649,4.107,3650,3.639,3651,6.719,3652,4.107,3653,4.107,3654,4.107,3655,4.107,3656,4.107,3657,4.107,3658,4.107,3659,6.719,3660,9.566,3661,4.107,3662,4.107,3663,4.107,3664,4.107,3665,4.107,3666,4.107,3667,4.107,3668,5.797,3669,4.107,3670,4.107,3671,4.107,3672,4.107,3673,4.107,3674,4.107,3675,4.107,3676,4.107,3677,4.107,3678,4.107,3679,4.107,3680,4.107,3681,4.107,3682,4.107,3683,4.107,3684,4.107,3685,4.107,3686,4.107,3687,4.107,3688,4.107,3689,4.107,3690,4.107,3691,4.107,3692,4.107,3693,4.107,3694,4.107,3695,4.107,3696,4.107,3697,4.107,3698,4.107,3699,4.107,3700,4.107,3701,6.719,3702,4.107,3703,4.107,3704,4.107,3705,4.107,3706,4.107,3707,4.107,3708,4.107,3709,4.107,3710,4.107,3711,4.107,3712,4.107,3713,4.107,3714,4.107,3715,4.107,3716,4.107,3717,4.107,3718,4.107,3719,6.719,3720,4.107,3721,5.797,3722,5.797,3723,4.107,3724,4.107,3725,4.107]],["title/license.html",[106,1.346,3525,3.043,3726,3.325]],["body/license.html",[4,0.04,5,0.04,19,0.007,39,0.007,40,0.007,64,1.6,81,4.522,128,1.278,249,0.819,313,1.329,383,4.307,492,2.951,516,5.187,712,3.952,769,5.013,820,5.452,828,5.074,1091,3.424,1314,4.522,1474,3.035,1526,5.452,1701,4.522,1745,4.307,1860,5.957,1880,5.957,1883,5.735,1915,6.48,1920,5.074,2022,5.957,2160,5.673,2164,5.452,2215,5.074,2881,5.452,3130,5.957,3141,5.957,3239,7.08,3551,5.452,3726,5.957,3727,6.724,3728,8.529,3729,9.413,3730,6.724,3731,7.992,3732,6.724,3733,6.724,3734,6.724,3735,6.724,3736,7.992,3737,6.724,3738,6.724,3739,6.724,3740,6.724,3741,6.724,3742,6.724,3743,6.724,3744,6.724,3745,7.992,3746,6.724,3747,7.992,3748,6.724,3749,6.724,3750,6.724,3751,6.724,3752,6.724,3753,6.724,3754,6.724,3755,6.724,3756,6.724,3757,6.724,3758,6.724,3759,6.724]],["title/modules.html",[619,0.847]],["body/modules.html",[19,0.006,39,0.006,40,0.006,349,2.609,619,0.847,620,4.669,630,4.392,631,4.161,632,3.258,633,4.392,634,4.392,635,4.392,636,4.161,637,4.392,638,4.392,639,4.392,640,4.161,641,4.392,642,3.963,643,2.793,644,3.791,645,4.161,646,4.392,647,4.392,648,4.392,649,4.161,650,4.392,651,4.161,652,4.392,653,4.392,654,4.161,655,4.161,656,4.161,657,4.392,658,4.392,659,3.637,660,3.373,697,4.392,1112,4.027,1376,4.669,3650,8.577,3760,9.682]],["title/overview.html",[3567,5.018]],["body/overview.html",[0,0.819,1,3.923,19,0.008,33,0.03,37,0.025,39,0.004,40,0.004,41,0.326,80,0.318,96,2.494,99,1.112,116,0.636,249,0.326,257,0.428,313,0.528,416,0.636,417,3.923,419,2.786,471,2.33,619,0.576,620,7.237,621,0.72,622,0.409,623,0.768,624,2.368,625,2.368,626,2.368,627,2.368,628,2.368,629,1.74,630,5.987,631,5.325,632,4.544,633,6.084,634,5.93,635,6.084,636,5.325,637,5.867,638,5.867,639,5.714,640,5.49,641,6.231,642,5.294,643,3.962,644,5.35,645,5.49,646,5.714,647,6.231,648,5.512,649,5.619,650,5.714,651,5.804,652,5.867,653,5.867,654,5.49,655,5.558,656,5.325,657,6.562,658,5.512,659,4.858,660,4.672,661,3.926,662,1.234,697,6.038,718,3.496,734,2.368,735,2.368,737,2.368,751,2.614,781,2.368,782,2.368,783,2.368,786,2.368,787,2.368,789,2.368,790,2.494,796,2.368,797,2.368,799,2.368,800,2.614,870,1.638,1010,2.553,1119,2.678,1121,2.678,1123,2.721,1125,1.909,1128,2.678,1130,2.614,1132,2.786,1134,2.678,1136,2.553,1138,2.678,1139,2.678,1141,2.721,1143,2.614,1145,1.909,1147,2.614,1149,2.614,1152,2.614,1154,2.721,1158,2.553,1159,2.614,1161,2.924,1163,2.383,1166,2.229,1168,2.786,1170,2.614,1172,2.678,1174,2.614,1176,2.539,1178,2.383,1180,2.494,1182,2.553,1184,2.539,1186,2.614,1188,2.539,1190,2.383,1191,2.721,1193,2.614,1196,2.721,1198,2.229,1200,2.553,1203,2.368,1204,2.368,1206,2.368,1376,5.373,1377,2.368,1378,2.368,1379,2.368,1380,2.368,1538,2.368,1539,2.368,1540,2.368,1541,2.368,1591,3.923,1655,2.368,1656,2.368,1657,2.368,1658,2.368,1750,2.368,1751,2.368,1753,2.368,1840,2.368,1841,2.368,1843,2.368,1846,5.054,1999,2.368,2000,2.368,2002,2.368,2028,2.017,2042,4.215,2070,2.368,2071,2.368,2072,2.368,2074,2.368,2079,3.923,2107,2.368,2108,2.368,2110,2.368,2111,2.368,2217,2.368,2218,2.368,2220,2.368,2273,2.368,2274,2.368,2275,2.368,2284,2.368,2285,2.368,2286,2.368,2288,2.368,2290,4.605,2309,2.368,2310,2.368,2312,2.368,2363,2.368,2364,2.368,2365,2.368,2434,2.368,2435,2.368,2437,2.368,2441,2.368,2442,2.368,2443,2.368,2444,2.368,2513,2.368,2514,2.368,2516,2.368,2550,2.368,2551,2.368,2553,2.368,2681,2.368,2682,2.368,2684,2.368,2687,2.368,2688,2.368,2689,2.368,2690,5.373,2691,5.373,2692,5.373,2693,5.373,2738,3.923,2794,2.368,2795,2.368,2796,2.368,2798,2.368,2904,2.368,2905,2.368,2907,2.368,2910,2.368,2911,2.368,2912,2.368,2914,2.368,2915,4.605,2963,3.923,3144,2.368,3145,2.368,3146,2.368,3153,2.368,3154,2.368,3155,2.368,3299,2.368,3300,2.368,3301,2.368,3303,2.368,3336,2.368,3337,2.368,3338,2.368,3339,2.368,3356,2.368,3357,2.368,3358,2.368,3363,3.69,3435,2.368,3436,2.368,3437,2.368,3438,2.368,3567,2.168,3761,2.673,3762,2.673,3763,2.673,3764,2.673,3765,2.673]],["title/miscellaneous/typealiases.html",[3766,3.325,3767,5.435]],["body/miscellaneous/typealiases.html",[4,0.025,5,0.058,8,2.507,11,0.572,16,0.979,19,0.008,20,0.665,21,0.905,22,0.744,35,0.935,39,0.005,40,0.005,44,3.154,45,1.308,46,0.841,48,2.966,54,2.187,58,0.994,62,1.431,66,0.843,72,1.103,73,2.253,74,1.252,90,1.285,96,2.056,109,0.86,114,0.713,116,0.994,117,3.199,122,3.154,123,2.24,124,0.654,125,5.118,128,1.239,129,2.155,142,5.118,155,1.535,161,2.056,168,0.776,194,2.897,198,3.245,200,0.994,203,1.535,256,1.499,257,0.668,260,1.613,265,1.615,267,1.611,286,3.089,299,2.207,309,1.964,349,1.982,359,2.81,360,3.388,363,4.758,364,5.499,365,1.015,369,2.897,370,3.154,374,3.388,376,3.154,377,4.758,379,4.758,380,2.56,381,4.155,387,1.499,402,2.033,406,2.677,410,3.388,411,5.499,436,1.015,470,2.677,471,1.367,489,1.464,490,2.56,492,2.576,497,2.56,500,4.344,505,1.28,508,2.009,512,3.872,527,2.456,537,2.895,547,1.906,593,2.379,677,1.08,683,1.399,700,2.966,712,3.449,713,2.128,726,3.061,727,2.977,790,2.376,810,1.367,826,3.595,857,2.56,870,2.56,1009,3.388,1010,2.105,1013,3.702,1026,5.199,1033,3.702,1034,3.702,1036,6.008,1050,2.966,1053,4.758,1080,6.008,1081,3.702,1082,3.702,1083,3.702,1084,3.702,1085,3.702,1090,2.2,1091,2.989,1093,3.388,1094,1.834,1095,4.428,1096,3.388,1099,2.2,1101,2.2,1134,1.572,1141,2.105,1154,1.499,1164,1.103,1170,1.535,1198,2.123,1200,1.499,1271,3.702,1285,2.895,1292,2.062,1298,6.008,1305,3.702,1308,2.81,1334,3.697,1335,3.454,1339,3.199,1340,3.702,1341,3.702,1342,3.702,1343,3.702,1361,2.2,1387,2.363,1388,4.158,1393,2.363,1398,2.062,1399,2.2,1402,3.835,1405,3.318,1406,1.999,1407,2.363,1408,2.363,1409,2.278,1410,2.807,1411,2.363,1412,2.363,1413,2.363,1414,3.835,1415,2.363,1416,2.363,1417,2.363,1418,2.363,1419,2.363,1420,1.999,1421,2.989,1422,2.363,1423,2.363,1424,3.835,1425,3.835,1426,2.363,1427,2.363,1428,2.363,1429,2.278,1430,3.835,1431,2.363,1432,2.363,1433,2.977,1447,1.651,1459,2.278,1461,2.278,1470,3.835,1846,2.966,1847,3.702,1851,6.008,1853,3.388,1861,3.388,1866,3.388,1905,3.154,1907,3.318,2028,3.154,2080,3.759,2098,3.388,2099,3.388,2100,3.759,2101,5.199,2103,2.56,2104,2.966,2106,5.118,2124,5.499,2125,3.154,2200,5.118,2202,5.118,2222,3.702,2241,6.008,2266,3.388,2267,3.702,2370,3.946,2447,3.702,2462,6.008,2464,6.008,2467,6.008,2492,4.344,2706,3.154,2707,4.758,2727,6.226,2737,5.499,2969,2.966,2972,2.56,2975,2.56,2976,2.677,3164,3.702,3343,3.702,3353,6.008,3492,3.702,3493,5.199,3494,6.008,3766,3.702,3768,4.179,3769,5.868,3770,4.179,3771,5.868,3772,5.868,3773,6.782,3774,6.782,3775,4.179,3776,8.033,3777,4.179,3778,4.179,3779,5.868,3780,4.179,3781,6.782,3782,5.868,3783,6.782,3784,6.782,3785,4.179,3786,4.179,3787,6.782,3788,4.179,3789,4.179,3790,4.179,3791,5.868,3792,4.179,3793,4.179,3794,4.179,3795,4.179,3796,4.179,3797,4.179,3798,4.179,3799,4.179,3800,4.179,3801,4.179,3802,4.179,3803,4.179,3804,4.179]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":402,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsLinkComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["0,000[.00",{"_index":375,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["000",{"_index":372,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["0000",{"_index":373,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["00000|00000",{"_index":378,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["02",{"_index":1864,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["02/08/2018",{"_index":1857,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["08t05:00:00.000z",{"_index":1865,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["1",{"_index":593,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["1);set",{"_index":2024,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["10",{"_index":523,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["10.0.0",{"_index":1881,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["100",{"_index":1103,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsValidationMessageService.html":{}}}],["100px",{"_index":3201,"title":{},"body":{"components/TsTableComponent.html":{}}}],["101",{"_index":1820,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["1024",{"_index":2130,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["12",{"_index":3764,"title":{},"body":{"overview.html":{}}}],["12);use",{"_index":2029,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["12:00:00am",{"_index":1863,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["12rem",{"_index":3202,"title":{},"body":{"components/TsTableComponent.html":{}}}],["138",{"_index":2746,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["16",{"_index":3763,"title":{},"body":{"overview.html":{}}}],["16:9",{"_index":1081,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["1:1",{"_index":1085,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["1a237",{"_index":1787,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["1px",{"_index":1823,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["1}&per_page=${perpag",{"_index":3256,"title":{},"body":{"components/TsTableComponent.html":{}}}],["2",{"_index":286,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["2.0.0",{"_index":3629,"title":{},"body":{"dependencies.html":{}}}],["2.23.0",{"_index":3627,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":981,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["200",{"_index":264,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["2000",{"_index":860,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["2018",{"_index":1860,"title":{},"body":{"pipes/TsDatePipe.html":{},"license.html":{}}}],["243",{"_index":2667,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["2;set",{"_index":1900,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["3",{"_index":1905,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["3.7.2",{"_index":3635,"title":{},"body":{"dependencies.html":{}}}],["31",{"_index":3765,"title":{},"body":{"overview.html":{}}}],["312",{"_index":3590,"title":{},"body":{"contributing.html":{}}}],["32",{"_index":3762,"title":{},"body":{"overview.html":{}}}],["34",{"_index":3761,"title":{},"body":{"overview.html":{}}}],["3:2",{"_index":1083,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["3:4",{"_index":1079,"title":{},"body":{"components/TsCardComponent.html":{}}}],["4",{"_index":857,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["4:3",{"_index":1082,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["5",{"_index":2028,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"directives/TsVerticalSpacingDirective.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["5.0.1",{"_index":3636,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2563,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["5:4",{"_index":1084,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["6",{"_index":870,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["6.0.0",{"_index":3624,"title":{},"body":{"dependencies.html":{}}}],["6.0.7",{"_index":3623,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":3631,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":3633,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1897,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["8.13.1",{"_index":3628,"title":{},"body":{"dependencies.html":{}}}],["83",{"_index":2745,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["8th",{"_index":1859,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["9.]/g",{"_index":405,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["900",{"_index":371,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["9]/g",{"_index":403,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["9_",{"_index":2878,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["_",{"_index":2818,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["_background",{"_index":2227,"title":{},"body":{"components/TsIconComponent.html":{}}}],["_border",{"_index":1022,"title":{},"body":{"components/TsCardComponent.html":{}}}],["_cdkcolumndef",{"_index":3093,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_columncount",{"_index":892,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_columnhead",{"_index":904,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_columnvalid",{"_index":908,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_currentpageindex",{"_index":2607,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["_data",{"_index":3261,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["_debouncedelay",{"_index":263,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["_direct",{"_index":3006,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["_disableclear",{"_index":3010,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["_formatmodelvaluefn",{"_index":2767,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_formatuilabelfn",{"_index":2760,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_formatuisublabelfn",{"_index":2763,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_handleclick",{"_index":3084,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_id",{"_index":882,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_initiald",{"_index":2060,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["_intl",{"_index":3092,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_intl.chang",{"_index":3096,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_intl.sortdescriptionlabel(id",{"_index":3127,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["_ischeck",{"_index":1602,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["_isdis",{"_index":3083,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_issort",{"_index":3082,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_isvisu",{"_index":2771,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_iszerobas",{"_index":2598,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["_maxdat",{"_index":2047,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["_maxrow",{"_index":887,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_mindat",{"_index":2048,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["_minimumcharact",{"_index":285,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["_name",{"_index":2774,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_option",{"_index":2777,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_parent",{"_index":1214,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["_renderchangessubscript",{"_index":3262,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["_renderdata",{"_index":3263,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["_rowcount",{"_index":897,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_small",{"_index":2780,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_sort",{"_index":3091,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_sort._statechang",{"_index":3095,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_sort.direct",{"_index":3128,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["_statechang",{"_index":2997,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["_svgicon",{"_index":2228,"title":{},"body":{"components/TsIconComponent.html":{}}}],["_theme",{"_index":1023,"title":{},"body":{"components/TsCardComponent.html":{}}}],["_totalrecord",{"_index":2615,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["_tssortheadermixinbas",{"_index":3074,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_tssortmixinbas",{"_index":2993,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["_uid",{"_index":855,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_updatechangesubscript",{"_index":3265,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["_visual",{"_index":1281,"title":{},"body":{"components/TsChart2Component.html":{}}}],["abil",{"_index":953,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"injectables/TsValidationMessageService.html":{}}}],["abov",{"_index":712,"title":{},"body":{"modules/TerminusUIModule.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTooltipComponent.html":{},"contributing.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["absolut",{"_index":1818,"title":{},"body":{"components/TsCopyComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"contributing.html":{}}}],["abstract",{"_index":2742,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["abstractcontrol",{"_index":1925,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["accent",{"_index":2266,"title":{},"body":{"components/TsIconComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"miscellaneous/typealiases.html":{}}}],["accept",{"_index":537,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsTableDataSource.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["access",{"_index":250,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"index.html":{}}}],["accessor",{"_index":414,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["accident",{"_index":960,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["accord",{"_index":939,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["account",{"_index":2493,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["action",{"_index":492,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["actionnam",{"_index":2195,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["activ",{"_index":298,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["actual",{"_index":1436,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["actual_compon",{"_index":1202,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["ad",{"_index":827,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"directives/TsColumnDefDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"contributing.html":{}}}],["add",{"_index":347,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["add/remov",{"_index":2418,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["added(chip",{"_index":147,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["addheaders(headercount",{"_index":1003,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["addon",{"_index":3634,"title":{},"body":{"dependencies.html":{}}}],["addons/dist/createnumbermask",{"_index":400,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["address",{"_index":3373,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["addrows(rowcount",{"_index":926,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["addseri",{"_index":1507,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["adher",{"_index":3597,"title":{},"body":{"contributing.html":{}}}],["admin",{"_index":477,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["advis",{"_index":3601,"title":{},"body":{"contributing.html":{}}}],["affect",{"_index":2235,"title":{},"body":{"components/TsIconComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["afteranim",{"_index":1513,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"directives/TsChartSeriesDirective.html":{}}}],["afterprint",{"_index":1508,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["afterviewinit",{"_index":164,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["ag",{"_index":3176,"title":{},"body":{"components/TsTableComponent.html":{}}}],["again",{"_index":2034,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["ago.pip",{"_index":2703,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["ago.pipe.t",{"_index":3309,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["ago.pipe.ts:16",{"_index":3312,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["ago/tim",{"_index":2702,"title":{},"body":{"modules/TsPipesModule.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["alert",{"_index":1837,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"index.html":{}}}],["alia",{"_index":2335,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["alias",{"_index":3768,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":2237,"title":{},"body":{"components/TsIconComponent.html":{}}}],["allcolumn",{"_index":3183,"title":{},"body":{"components/TsTableComponent.html":{}}}],["allerror",{"_index":875,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["allitem",{"_index":580,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["allow",{"_index":54,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"pipes/TsDatePipe.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["allowdecim",{"_index":385,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["allowedmaskshorcut",{"_index":413,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["allowedmaskshorcuts.indexof(valu",{"_index":442,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["alon",{"_index":2499,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["along",{"_index":3278,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["alpha.7",{"_index":3630,"title":{},"body":{"dependencies.html":{}}}],["alpha.7glob",{"_index":3687,"title":{},"body":{"index.html":{}}}],["alreadi",{"_index":341,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCopyComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{}}}],["alter",{"_index":1046,"title":{},"body":{"components/TsCardComponent.html":{}}}],["altern",{"_index":2752,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["alway",{"_index":1326,"title":{},"body":{"components/TsChart2Component.html":{},"contributing.html":{}}}],["alwayshidden",{"_index":472,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["am4chart",{"_index":1319,"title":{},"body":{"components/TsChart2Component.html":{}}}],["am4charts.chart",{"_index":1333,"title":{},"body":{"components/TsChart2Component.html":{}}}],["am4cor",{"_index":1317,"title":{},"body":{"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{}}}],["am4core.usetheme(am4themes_anim",{"_index":1383,"title":{},"body":{"modules/TsChart2Module.html":{}}}],["am4map",{"_index":1321,"title":{},"body":{"components/TsChart2Component.html":{}}}],["am4themes_anim",{"_index":1323,"title":{},"body":{"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{}}}],["am4themes_materi",{"_index":1325,"title":{},"body":{"components/TsChart2Component.html":{}}}],["amchart",{"_index":720,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{}}}],["amcharts.core.usetheme(them",{"_index":733,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["amcharts.servic",{"_index":1345,"title":{},"body":{"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{}}}],["amcharts.them",{"_index":731,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["amcharts.themes.length",{"_index":732,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["amcharts/amcharts4/chart",{"_index":1320,"title":{},"body":{"components/TsChart2Component.html":{}}}],["amcharts/amcharts4/cor",{"_index":1318,"title":{},"body":{"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{}}}],["amcharts/amcharts4/map",{"_index":1322,"title":{},"body":{"components/TsChart2Component.html":{}}}],["amcharts/amcharts4/themes/anim",{"_index":1324,"title":{},"body":{"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{}}}],["amchartsfactori",{"_index":1327,"title":{},"body":{"components/TsChart2Component.html":{}}}],["amchartsservic",{"_index":1289,"title":{},"body":{"components/TsChart2Component.html":{}}}],["amount",{"_index":2590,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["and/or",{"_index":2022,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"license.html":{}}}],["angular",{"_index":664,"title":{},"body":{"modules/TerminusUIModule.html":{},"interfaces/TsChartEventOptions.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{},"index.html":{}}}],["angular'",{"_index":1584,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["angular/anim",{"_index":3622,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/overlay",{"_index":1696,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"modules/TsConfirmationModule.html":{}}}],["angular/cdk/port",{"_index":1698,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["angular/cdk/t",{"_index":1244,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{}}}],["angular/common",{"_index":740,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":3204,"title":{},"body":{"components/TsTableComponent.html":{}}}],["angular/cor",{"_index":27,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":804,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/form",{"_index":175,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsPaginatorModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"dependencies.html":{}}}],["angular/http",{"_index":3626,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplet",{"_index":179,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["angular/material/button",{"_index":793,"title":{},"body":{"modules/TsButtonModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{}}}],["angular/material/checkbox",{"_index":1590,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{}}}],["angular/material/chip",{"_index":745,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["angular/material/cor",{"_index":1209,"title":{},"body":{"modules/TsCardModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsRadioGroupModule.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["angular/material/datepick",{"_index":1927,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{}}}],["angular/material/icon",{"_index":2262,"title":{},"body":{"components/TsIconComponent.html":{},"modules/TsIconModule.html":{}}}],["angular/material/input",{"_index":747,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsInputModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["angular/material/menu",{"_index":2505,"title":{},"body":{"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{}}}],["angular/material/progress",{"_index":749,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsButtonModule.html":{},"modules/TsFileUploadModule.html":{}}}],["angular/material/radio",{"_index":2734,"title":{},"body":{"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{}}}],["angular/material/select",{"_index":2918,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["angular/material/slid",{"_index":2962,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{}}}],["angular/material/tooltip",{"_index":3361,"title":{},"body":{"modules/TsTooltipModule.html":{}}}],["angular/platform",{"_index":2261,"title":{},"body":{"components/TsIconComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":2315,"title":{},"body":{"modules/TsLinkModule.html":{},"modules/TsNavigationModule.html":{},"dependencies.html":{}}}],["anim",{"_index":1561,"title":{},"body":{"directives/TsChartSeriesDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{},"index.html":{}}}],["anoth",{"_index":606,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["answer",{"_index":3559,"title":{},"body":{"contributing.html":{}}}],["anyth",{"_index":320,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["anytim",{"_index":1955,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsTableComponent.html":{}}}],["api",{"_index":103,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["app",{"_index":1337,"title":{},"body":{"components/TsChart2Component.html":{},"components/TsLinkComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["appear",{"_index":825,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsConfirmationDirective.html":{},"contributing.html":{}}}],["appeas",{"_index":2137,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["append",{"_index":1452,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["appli",{"_index":1330,"title":{},"body":{"components/TsChart2Component.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["applic",{"_index":2487,"title":{},"body":{"components/TsMenuComponent.html":{},"index.html":{}}}],["applicationref",{"_index":2330,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["appref",{"_index":2329,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["appropri",{"_index":1361,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["area",{"_index":1398,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["argument",{"_index":1675,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["aria",{"_index":2199,"title":{},"body":{"components/TsIconButtonComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["ariadescribedbi",{"_index":2755,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["arialabel",{"_index":2748,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["arialabelledbi",{"_index":2753,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["aris",{"_index":828,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsTableComponent.html":{},"license.html":{}}}],["around",{"_index":1074,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsCopyComponent.html":{},"components/TsMenuComponent.html":{}}}],["arr",{"_index":970,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["arr.indexof(el",{"_index":971,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["array",{"_index":73,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["array.from(item",{"_index":581,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["arraycontainsobject",{"_index":190,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["arraycontainsobject(select",{"_index":343,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["arrow",{"_index":3076,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["arrow_drop_down",{"_index":2476,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["arrowposit",{"_index":3090,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["asc",{"_index":2975,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/typealiases.html":{}}}],["ascend",{"_index":1479,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["ask",{"_index":1691,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["aspect",{"_index":1033,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["aspectratio",{"_index":1025,"title":{},"body":{"components/TsCardComponent.html":{}}}],["aspectratio(valu",{"_index":1098,"title":{},"body":{"components/TsCardComponent.html":{}}}],["aspectratiopad",{"_index":1024,"title":{},"body":{"components/TsCardComponent.html":{}}}],["assembl",{"_index":1545,"title":{},"body":{"modules/TsChartModule.html":{}}}],["asset",{"_index":3679,"title":{},"body":{"index.html":{}}}],["assign",{"_index":1806,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["assist",{"_index":3640,"title":{},"body":{"index.html":{}}}],["associ",{"_index":1920,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsValidationMessagesComponent.html":{},"contributing.html":{},"license.html":{}}}],["assumpt",{"_index":3185,"title":{},"body":{"components/TsTableComponent.html":{}}}],["async",{"_index":2323,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["asynchron",{"_index":2935,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["attach",{"_index":368,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCardComponent.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{}}}],["attachev",{"_index":1501,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["attempt",{"_index":823,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["attribut",{"_index":291,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["author",{"_index":3752,"title":{},"body":{"license.html":{}}}],["auto",{"_index":95,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["autocomplet",{"_index":48,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["autocomplete'},{'nam",{"_index":1115,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["autocomplete.compon",{"_index":750,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["autocomplete.component.html",{"_index":228,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["autocomplete.component.scss",{"_index":230,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["autocomplete/autocomplete.modul",{"_index":666,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["autocompletetrigg",{"_index":255,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["autocompletetrigger(valu",{"_index":253,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["autofocu",{"_index":753,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"index.html":{}}}],["autofocus.direct",{"_index":785,"title":{},"body":{"modules/TsAutofocusModule.html":{}}}],["autofocus/autofocus.modul",{"_index":667,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsInputModule.html":{}}}],["automat",{"_index":2852,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{}}}],["autosubmit",{"_index":2844,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["avail",{"_index":74,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["availablespac",{"_index":521,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["avoid",{"_index":1869,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["axi",{"_index":1334,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["b",{"_index":77,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["back",{"_index":1089,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{}}}],["backdropclass",{"_index":1717,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["background",{"_index":2229,"title":{},"body":{"components/TsIconComponent.html":{}}}],["background(valu",{"_index":2268,"title":{},"body":{"components/TsIconComponent.html":{}}}],["badg",{"_index":3662,"title":{},"body":{"index.html":{}}}],["band",{"_index":1395,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["bar",{"_index":1292,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"modules/TsFileUploadModule.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["bar_valu",{"_index":2714,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["base",{"_index":434,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{}}}],["base.compon",{"_index":717,"title":{},"body":{"modules/TerminusUIModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["base.component.t",{"_index":2804,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:26",{"_index":2810,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:31",{"_index":2811,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:36",{"_index":2812,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:42",{"_index":2805,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:47",{"_index":2816,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:53",{"_index":2814,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:61",{"_index":2806,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:69",{"_index":2807,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:77",{"_index":2808,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:85",{"_index":2809,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["basic",{"_index":51,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["baz",{"_index":2716,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["baz_valu",{"_index":2715,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["be",{"_index":2014,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"contributing.html":{}}}],["befor",{"_index":161,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["beforeprint",{"_index":1509,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["begin",{"_index":603,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{}}}],["behavior",{"_index":2970,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"contributing.html":{}}}],["behaviorsubject",{"_index":184,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSelectedFile.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{}}}],["behaviorsubject(initialdata",{"_index":3291,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["behaviorsubject(this.filerefer",{"_index":2140,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["behaviorsubject(undefin",{"_index":1940,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["believ",{"_index":3658,"title":{},"body":{"index.html":{}}}],["belong",{"_index":1568,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["below",{"_index":826,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["benjamin",{"_index":3697,"title":{},"body":{"index.html":{}}}],["best",{"_index":314,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"contributing.html":{},"index.html":{}}}],["beta.15",{"_index":3685,"title":{},"body":{"index.html":{}}}],["beta.16",{"_index":3625,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1469,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["between",{"_index":589,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{}}}],["bind",{"_index":768,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"pipes/TsDatePipe.html":{},"classes/TsDatepickerInputEvent.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["bing",{"_index":2713,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["blob",{"_index":818,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["blob([join",{"_index":1008,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["blobgener",{"_index":910,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["block",{"_index":2260,"title":{},"body":{"components/TsIconComponent.html":{}}}],["blur",{"_index":424,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["bodi",{"_index":849,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["bodyportalhost",{"_index":2324,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["boilerpl",{"_index":2991,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["book",{"_index":3676,"title":{},"body":{"index.html":{}}}],["bookmark",{"_index":2216,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["boolean",{"_index":245,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["bootstrap",{"_index":623,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["border",{"_index":1026,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["border(valu",{"_index":1106,"title":{},"body":{"components/TsCardComponent.html":{}}}],["borderclass",{"_index":1070,"title":{},"body":{"components/TsCardComponent.html":{}}}],["both",{"_index":1949,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsTableComponent.html":{}}}],["bottom",{"_index":1096,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{},"miscellaneous/typealiases.html":{}}}],["bound",{"_index":1889,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["box",{"_index":2768,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["bracket",{"_index":388,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["branch",{"_index":3588,"title":{},"body":{"contributing.html":{}}}],["breadcrumb",{"_index":3663,"title":{},"body":{"index.html":{}}}],["break",{"_index":525,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["breakpoint",{"_index":571,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["breakwidth",{"_index":526,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["brian",{"_index":3707,"title":{},"body":{"index.html":{}}}],["brows",{"_index":3650,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browser",{"_index":1112,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"dependencies.html":{},"modules.html":{}}}],["budget",{"_index":2494,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["bug",{"_index":3539,"title":{},"body":{"contributing.html":{}}}],["built",{"_index":909,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["bullet",{"_index":1426,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["button",{"_index":508,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["button'",{"_index":1689,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["button'},{'nam",{"_index":1116,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["button.compon",{"_index":795,"title":{},"body":{"modules/TsButtonModule.html":{},"modules/TsIconButtonModule.html":{}}}],["button.component.html",{"_index":2194,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.scss",{"_index":2193,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.t",{"_index":2191,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:49",{"_index":2201,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:55",{"_index":2203,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:61",{"_index":2204,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:67",{"_index":2205,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:73",{"_index":2206,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:79",{"_index":2209,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:81",{"_index":2198,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.modul",{"_index":685,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsFileUploadModule.html":{}}}],["button.module.t",{"_index":2221,"title":{},"body":{"modules/TsIconButtonModule.html":{}}}],["button/button.compon",{"_index":1703,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["button/button.modul",{"_index":668,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsFileUploadModule.html":{},"components/TsIconButtonComponent.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMenuModule.html":{},"modules/TsPaginatorModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{}}}],["button/icon",{"_index":684,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsFileUploadModule.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{}}}],["buttonact",{"_index":2836,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["buttontyp",{"_index":2196,"title":{},"body":{"components/TsIconButtonComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["bypass",{"_index":2161,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["byte",{"_index":2126,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["bytes_per_kb",{"_index":2129,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["c",{"_index":81,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"license.html":{}}}],["calcul",{"_index":2128,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["calendar",{"_index":2008,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"index.html":{}}}],["call",{"_index":914,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsTableDataSource.html":{}}}],["callback",{"_index":1420,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsToggleComponent.html":{},"miscellaneous/typealiases.html":{}}}],["can't",{"_index":3583,"title":{},"body":{"contributing.html":{}}}],["cancel",{"_index":1672,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{}}}],["candis",{"_index":2983,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["capabl",{"_index":3675,"title":{},"body":{"index.html":{}}}],["captur",{"_index":1235,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTableComponent.html":{}}}],["card",{"_index":1016,"title":{},"body":{"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["card'},{'nam",{"_index":1118,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["card.compon",{"_index":1210,"title":{},"body":{"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{}}}],["card.component.html",{"_index":1021,"title":{},"body":{"components/TsCardComponent.html":{}}}],["card.component.scss",{"_index":1020,"title":{},"body":{"components/TsCardComponent.html":{}}}],["card/card.modul",{"_index":669,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["card__titl",{"_index":1223,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["case",{"_index":915,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{}}}],["case.pip",{"_index":2701,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["case.pipe.t",{"_index":2954,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["case.pipe.ts:11",{"_index":2956,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["case/sent",{"_index":2700,"title":{},"body":{"modules/TsPipesModule.html":{},"pipes/TsSentenceCasePipe.html":{}}}],["case/titl",{"_index":2704,"title":{},"body":{"modules/TsPipesModule.html":{},"pipes/TsTitleCasePipe.html":{}}}],["cast",{"_index":1256,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["catch",{"_index":1835,"title":{},"body":{"components/TsCopyComponent.html":{},"components/TsTableComponent.html":{}}}],["catcherror",{"_index":3210,"title":{},"body":{"components/TsTableComponent.html":{}}}],["categori",{"_index":1388,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["caus",{"_index":1804,"title":{},"body":{"components/TsCopyComponent.html":{},"contributing.html":{}}}],["cdk",{"_index":3098,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["cdk_row_templ",{"_index":2175,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdkcell",{"_index":1239,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["cdkcelldef",{"_index":1240,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["cdkcolumndef",{"_index":1241,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["cdkheadercel",{"_index":1242,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["cdkheadercelldef",{"_index":1243,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["cdkheaderrow",{"_index":2172,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdkheaderrowdef",{"_index":2176,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdkrow",{"_index":2177,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdkrowdef",{"_index":2178,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdktabl",{"_index":3077,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{}}}],["cdktablemodul",{"_index":3306,"title":{},"body":{"modules/TsTableModule.html":{}}}],["cell",{"_index":833,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{}}}],["cell'",{"_index":1002,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["cell'},{'nam",{"_index":1179,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["center",{"_index":1038,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{}}}],["centeredcont",{"_index":1027,"title":{},"body":{"components/TsCardComponent.html":{}}}],["certain",{"_index":832,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["chain",{"_index":1362,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["chanc",{"_index":3565,"title":{},"body":{"contributing.html":{}}}],["chang",{"_index":118,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"contributing.html":{}}}],["change(select",{"_index":153,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["changedetect",{"_index":234,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{}}}],["changedetectionstrategi",{"_index":165,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{}}}],["changedetectionstrategy.onpush",{"_index":235,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{}}}],["changedetectorref",{"_index":478,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{}}}],["changedetectorref.markforcheck",{"_index":3097,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["changelog",{"_index":3717,"title":{},"body":{"index.html":{}}}],["changepag",{"_index":2649,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["changes.hasownproperty('triggerformreset",{"_index":2425,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["changes.iszerobased.currentvalu",{"_index":2634,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["charact",{"_index":70,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["charg",{"_index":3735,"title":{},"body":{"license.html":{}}}],["charity&#x1f4bb",{"_index":3698,"title":{},"body":{"index.html":{}}}],["chart",{"_index":726,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["chart'",{"_index":1411,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["chart'},{'nam",{"_index":1122,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["chart.compon",{"_index":1503,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"modules/TsChartModule.html":{}}}],["chart.ev",{"_index":1502,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"modules/TsChartModule.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{}}}],["chart.responsive.en",{"_index":1372,"title":{},"body":{"components/TsChart2Component.html":{}}}],["chart/chart.modul",{"_index":670,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["chart/series/point",{"_index":1521,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["chart2",{"_index":1272,"title":{},"body":{"components/TsChart2Component.html":{}}}],["chart2'},{'nam",{"_index":1120,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["chart2.compon",{"_index":1382,"title":{},"body":{"modules/TsChart2Module.html":{}}}],["chart2.component.html",{"_index":1280,"title":{},"body":{"components/TsChart2Component.html":{}}}],["chart2.component.scss",{"_index":1279,"title":{},"body":{"components/TsChart2Component.html":{}}}],["chartcompon",{"_index":1522,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["chartcomponent[eventname].emit(new",{"_index":1530,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["chartdiv",{"_index":1282,"title":{},"body":{"components/TsChart2Component.html":{}}}],["chartev",{"_index":1506,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["chartevents.foreach((eventnam",{"_index":1527,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["chartiniti",{"_index":1286,"title":{},"body":{"components/TsChart2Component.html":{}}}],["chartobject",{"_index":1403,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["chart|series|point",{"_index":1489,"title":{},"body":{"classes/TsChartEvent.html":{}}}],["check",{"_index":607,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["checkbox",{"_index":1564,"title":{},"body":{"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"index.html":{}}}],["checkbox'},{'nam",{"_index":1124,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["checkbox.compon",{"_index":1661,"title":{},"body":{"modules/TsCheckboxModule.html":{}}}],["checkbox.component.html",{"_index":1592,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1593,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["checkbox/checkbox.compon",{"_index":2420,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["checkbox/checkbox.modul",{"_index":671,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{}}}],["checkboxclick",{"_index":1514,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"directives/TsChartSeriesDirective.html":{}}}],["checkout",{"_index":3589,"title":{},"body":{"contributing.html":{}}}],["checkpar",{"_index":1215,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["child",{"_index":1039,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["chip",{"_index":150,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"index.html":{}}}],["chips/select",{"_index":243,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["choic",{"_index":1747,"title":{},"body":{"components/TsConfirmationModalComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["chord",{"_index":1343,"title":{},"body":{"components/TsChart2Component.html":{},"miscellaneous/typealiases.html":{}}}],["chose",{"_index":345,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["chosen",{"_index":1693,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["circus_t",{"_index":3677,"title":{},"body":{"index.html":{}}}],["claim",{"_index":3755,"title":{},"body":{"license.html":{}}}],["clariti",{"_index":488,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["class",{"_index":37,"title":{"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsChartEvent.html":{},"classes/TsCheckboxChange.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsImageDimensions.html":{},"classes/TsRadioChange.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"classes/TsSortHeaderBase.html":{},"classes/TsTableDataSource.html":{},"classes/Version.html":{}},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"classes/TsChartEvent.html":{},"modules/TsChartModule.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"overview.html":{}}}],["class.t",{"_index":2265,"title":{},"body":{"components/TsIconComponent.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["clean",{"_index":458,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsConfirmationDirective.html":{}}}],["cleanvalue(valu",{"_index":460,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["clear",{"_index":996,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"contributing.html":{}}}],["clearallrow",{"_index":997,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["clearheadercel",{"_index":999,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["cli",{"_index":3720,"title":{},"body":{"index.html":{}}}],["click",{"_index":504,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}}}],["click(ev",{"_index":1676,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["clickabl",{"_index":2728,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["clickev",{"_index":2197,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["client",{"_index":3260,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["clipboard",{"_index":1759,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["clone",{"_index":573,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["close",{"_index":1449,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsConfirmationDirective.html":{},"contributing.html":{}}}],["cluster_terminusuimodul",{"_index":624,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_terminusuimodule_declar",{"_index":625,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_terminusuimodule_export",{"_index":627,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_terminusuimodule_import",{"_index":626,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_terminusuimodule_provid",{"_index":628,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_tsautocompletemodul",{"_index":734,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"overview.html":{}}}],["cluster_tsautocompletemodule_declar",{"_index":735,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"overview.html":{}}}],["cluster_tsautocompletemodule_export",{"_index":737,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"overview.html":{}}}],["cluster_tsautocompletemodule_import",{"_index":736,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["cluster_tsautofocusmodul",{"_index":781,"title":{},"body":{"modules/TsAutofocusModule.html":{},"overview.html":{}}}],["cluster_tsautofocusmodule_declar",{"_index":782,"title":{},"body":{"modules/TsAutofocusModule.html":{},"overview.html":{}}}],["cluster_tsautofocusmodule_export",{"_index":783,"title":{},"body":{"modules/TsAutofocusModule.html":{},"overview.html":{}}}],["cluster_tsbuttonmodul",{"_index":786,"title":{},"body":{"modules/TsButtonModule.html":{},"overview.html":{}}}],["cluster_tsbuttonmodule_declar",{"_index":787,"title":{},"body":{"modules/TsButtonModule.html":{},"overview.html":{}}}],["cluster_tsbuttonmodule_export",{"_index":789,"title":{},"body":{"modules/TsButtonModule.html":{},"overview.html":{}}}],["cluster_tsbuttonmodule_import",{"_index":788,"title":{},"body":{"modules/TsButtonModule.html":{}}}],["cluster_tscardmodul",{"_index":1203,"title":{},"body":{"modules/TsCardModule.html":{},"overview.html":{}}}],["cluster_tscardmodule_declar",{"_index":1204,"title":{},"body":{"modules/TsCardModule.html":{},"overview.html":{}}}],["cluster_tscardmodule_export",{"_index":1206,"title":{},"body":{"modules/TsCardModule.html":{},"overview.html":{}}}],["cluster_tscardmodule_import",{"_index":1205,"title":{},"body":{"modules/TsCardModule.html":{}}}],["cluster_tschart2modul",{"_index":1377,"title":{},"body":{"modules/TsChart2Module.html":{},"overview.html":{}}}],["cluster_tschart2module_declar",{"_index":1378,"title":{},"body":{"modules/TsChart2Module.html":{},"overview.html":{}}}],["cluster_tschart2module_export",{"_index":1379,"title":{},"body":{"modules/TsChart2Module.html":{},"overview.html":{}}}],["cluster_tschart2module_provid",{"_index":1380,"title":{},"body":{"modules/TsChart2Module.html":{},"overview.html":{}}}],["cluster_tschartmodul",{"_index":1538,"title":{},"body":{"modules/TsChartModule.html":{},"overview.html":{}}}],["cluster_tschartmodule_declar",{"_index":1539,"title":{},"body":{"modules/TsChartModule.html":{},"overview.html":{}}}],["cluster_tschartmodule_export",{"_index":1540,"title":{},"body":{"modules/TsChartModule.html":{},"overview.html":{}}}],["cluster_tschartmodule_provid",{"_index":1541,"title":{},"body":{"modules/TsChartModule.html":{},"overview.html":{}}}],["cluster_tscheckboxmodul",{"_index":1655,"title":{},"body":{"modules/TsCheckboxModule.html":{},"overview.html":{}}}],["cluster_tscheckboxmodule_declar",{"_index":1656,"title":{},"body":{"modules/TsCheckboxModule.html":{},"overview.html":{}}}],["cluster_tscheckboxmodule_export",{"_index":1658,"title":{},"body":{"modules/TsCheckboxModule.html":{},"overview.html":{}}}],["cluster_tscheckboxmodule_tscheckboxcomponent_provid",{"_index":1657,"title":{},"body":{"modules/TsCheckboxModule.html":{},"overview.html":{}}}],["cluster_tsconfirmationmodul",{"_index":1750,"title":{},"body":{"modules/TsConfirmationModule.html":{},"overview.html":{}}}],["cluster_tsconfirmationmodule_declar",{"_index":1751,"title":{},"body":{"modules/TsConfirmationModule.html":{},"overview.html":{}}}],["cluster_tsconfirmationmodule_export",{"_index":1753,"title":{},"body":{"modules/TsConfirmationModule.html":{},"overview.html":{}}}],["cluster_tsconfirmationmodule_import",{"_index":1752,"title":{},"body":{"modules/TsConfirmationModule.html":{}}}],["cluster_tscopymodul",{"_index":1840,"title":{},"body":{"modules/TsCopyModule.html":{},"overview.html":{}}}],["cluster_tscopymodule_declar",{"_index":1841,"title":{},"body":{"modules/TsCopyModule.html":{},"overview.html":{}}}],["cluster_tscopymodule_export",{"_index":1843,"title":{},"body":{"modules/TsCopyModule.html":{},"overview.html":{}}}],["cluster_tscopymodule_import",{"_index":1842,"title":{},"body":{"modules/TsCopyModule.html":{}}}],["cluster_tscsventrymodul",{"_index":796,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"overview.html":{}}}],["cluster_tscsventrymodule_declar",{"_index":797,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"overview.html":{}}}],["cluster_tscsventrymodule_export",{"_index":799,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"overview.html":{}}}],["cluster_tscsventrymodule_import",{"_index":798,"title":{},"body":{"modules/TsCSVEntryModule.html":{}}}],["cluster_tsdatepickermodul",{"_index":2070,"title":{},"body":{"modules/TsDatepickerModule.html":{},"overview.html":{}}}],["cluster_tsdatepickermodule_declar",{"_index":2071,"title":{},"body":{"modules/TsDatepickerModule.html":{},"overview.html":{}}}],["cluster_tsdatepickermodule_export",{"_index":2074,"title":{},"body":{"modules/TsDatepickerModule.html":{},"overview.html":{}}}],["cluster_tsdatepickermodule_import",{"_index":2073,"title":{},"body":{"modules/TsDatepickerModule.html":{}}}],["cluster_tsdatepickermodule_tsdatepickercomponent_provid",{"_index":2072,"title":{},"body":{"modules/TsDatepickerModule.html":{},"overview.html":{}}}],["cluster_tsdaterangemodul",{"_index":1999,"title":{},"body":{"modules/TsDateRangeModule.html":{},"overview.html":{}}}],["cluster_tsdaterangemodule_declar",{"_index":2000,"title":{},"body":{"modules/TsDateRangeModule.html":{},"overview.html":{}}}],["cluster_tsdaterangemodule_export",{"_index":2002,"title":{},"body":{"modules/TsDateRangeModule.html":{},"overview.html":{}}}],["cluster_tsdaterangemodule_import",{"_index":2001,"title":{},"body":{"modules/TsDateRangeModule.html":{}}}],["cluster_tsfileuploadmodul",{"_index":2107,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsfileuploadmodule_declar",{"_index":2108,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsfileuploadmodule_export",{"_index":2110,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsfileuploadmodule_import",{"_index":2109,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["cluster_tsfileuploadmodule_provid",{"_index":2111,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsiconbuttonmodul",{"_index":2217,"title":{},"body":{"modules/TsIconButtonModule.html":{},"overview.html":{}}}],["cluster_tsiconbuttonmodule_declar",{"_index":2218,"title":{},"body":{"modules/TsIconButtonModule.html":{},"overview.html":{}}}],["cluster_tsiconbuttonmodule_export",{"_index":2220,"title":{},"body":{"modules/TsIconButtonModule.html":{},"overview.html":{}}}],["cluster_tsiconbuttonmodule_import",{"_index":2219,"title":{},"body":{"modules/TsIconButtonModule.html":{}}}],["cluster_tsiconmodul",{"_index":2273,"title":{},"body":{"modules/TsIconModule.html":{},"overview.html":{}}}],["cluster_tsiconmodule_declar",{"_index":2274,"title":{},"body":{"modules/TsIconModule.html":{},"overview.html":{}}}],["cluster_tsiconmodule_export",{"_index":2275,"title":{},"body":{"modules/TsIconModule.html":{},"overview.html":{}}}],["cluster_tsinputmodul",{"_index":2284,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["cluster_tsinputmodule_declar",{"_index":2285,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["cluster_tsinputmodule_export",{"_index":2288,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["cluster_tsinputmodule_import",{"_index":2287,"title":{},"body":{"modules/TsInputModule.html":{}}}],["cluster_tsinputmodule_provid",{"_index":2289,"title":{},"body":{"modules/TsInputModule.html":{}}}],["cluster_tsinputmodule_tsinputcomponent_provid",{"_index":2286,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["cluster_tslinkmodul",{"_index":2309,"title":{},"body":{"modules/TsLinkModule.html":{},"overview.html":{}}}],["cluster_tslinkmodule_declar",{"_index":2310,"title":{},"body":{"modules/TsLinkModule.html":{},"overview.html":{}}}],["cluster_tslinkmodule_export",{"_index":2312,"title":{},"body":{"modules/TsLinkModule.html":{},"overview.html":{}}}],["cluster_tslinkmodule_import",{"_index":2311,"title":{},"body":{"modules/TsLinkModule.html":{}}}],["cluster_tsloadingoverlaymodul",{"_index":2363,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{},"overview.html":{}}}],["cluster_tsloadingoverlaymodule_declar",{"_index":2364,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{},"overview.html":{}}}],["cluster_tsloadingoverlaymodule_export",{"_index":2365,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{},"overview.html":{}}}],["cluster_tsloginformmodul",{"_index":2434,"title":{},"body":{"modules/TsLoginFormModule.html":{},"overview.html":{}}}],["cluster_tsloginformmodule_declar",{"_index":2435,"title":{},"body":{"modules/TsLoginFormModule.html":{},"overview.html":{}}}],["cluster_tsloginformmodule_export",{"_index":2437,"title":{},"body":{"modules/TsLoginFormModule.html":{},"overview.html":{}}}],["cluster_tsloginformmodule_import",{"_index":2436,"title":{},"body":{"modules/TsLoginFormModule.html":{}}}],["cluster_tsloginformmodule_provid",{"_index":2438,"title":{},"body":{"modules/TsLoginFormModule.html":{}}}],["cluster_tsmaskmodul",{"_index":2441,"title":{},"body":{"modules/TsMaskModule.html":{},"overview.html":{}}}],["cluster_tsmaskmodule_declar",{"_index":2442,"title":{},"body":{"modules/TsMaskModule.html":{},"overview.html":{}}}],["cluster_tsmaskmodule_export",{"_index":2444,"title":{},"body":{"modules/TsMaskModule.html":{},"overview.html":{}}}],["cluster_tsmaskmodule_tsmaskdirective_provid",{"_index":2443,"title":{},"body":{"modules/TsMaskModule.html":{},"overview.html":{}}}],["cluster_tsmenumodul",{"_index":2513,"title":{},"body":{"modules/TsMenuModule.html":{},"overview.html":{}}}],["cluster_tsmenumodule_declar",{"_index":2514,"title":{},"body":{"modules/TsMenuModule.html":{},"overview.html":{}}}],["cluster_tsmenumodule_export",{"_index":2516,"title":{},"body":{"modules/TsMenuModule.html":{},"overview.html":{}}}],["cluster_tsmenumodule_import",{"_index":2515,"title":{},"body":{"modules/TsMenuModule.html":{}}}],["cluster_tsnavigationmodul",{"_index":2550,"title":{},"body":{"modules/TsNavigationModule.html":{},"overview.html":{}}}],["cluster_tsnavigationmodule_declar",{"_index":2551,"title":{},"body":{"modules/TsNavigationModule.html":{},"overview.html":{}}}],["cluster_tsnavigationmodule_export",{"_index":2553,"title":{},"body":{"modules/TsNavigationModule.html":{},"overview.html":{}}}],["cluster_tsnavigationmodule_import",{"_index":2552,"title":{},"body":{"modules/TsNavigationModule.html":{}}}],["cluster_tspaginatormodul",{"_index":2681,"title":{},"body":{"modules/TsPaginatorModule.html":{},"overview.html":{}}}],["cluster_tspaginatormodule_declar",{"_index":2682,"title":{},"body":{"modules/TsPaginatorModule.html":{},"overview.html":{}}}],["cluster_tspaginatormodule_export",{"_index":2684,"title":{},"body":{"modules/TsPaginatorModule.html":{},"overview.html":{}}}],["cluster_tspaginatormodule_import",{"_index":2683,"title":{},"body":{"modules/TsPaginatorModule.html":{}}}],["cluster_tspipesmodul",{"_index":2687,"title":{},"body":{"modules/TsPipesModule.html":{},"overview.html":{}}}],["cluster_tspipesmodule_declar",{"_index":2688,"title":{},"body":{"modules/TsPipesModule.html":{},"overview.html":{}}}],["cluster_tspipesmodule_export",{"_index":2689,"title":{},"body":{"modules/TsPipesModule.html":{},"overview.html":{}}}],["cluster_tsradiogroupmodul",{"_index":2794,"title":{},"body":{"modules/TsRadioGroupModule.html":{},"overview.html":{}}}],["cluster_tsradiogroupmodule_declar",{"_index":2795,"title":{},"body":{"modules/TsRadioGroupModule.html":{},"overview.html":{}}}],["cluster_tsradiogroupmodule_export",{"_index":2798,"title":{},"body":{"modules/TsRadioGroupModule.html":{},"overview.html":{}}}],["cluster_tsradiogroupmodule_import",{"_index":2797,"title":{},"body":{"modules/TsRadioGroupModule.html":{}}}],["cluster_tsradiogroupmodule_tsradiogroupcomponent_provid",{"_index":2796,"title":{},"body":{"modules/TsRadioGroupModule.html":{},"overview.html":{}}}],["cluster_tssearchmodul",{"_index":2904,"title":{},"body":{"modules/TsSearchModule.html":{},"overview.html":{}}}],["cluster_tssearchmodule_declar",{"_index":2905,"title":{},"body":{"modules/TsSearchModule.html":{},"overview.html":{}}}],["cluster_tssearchmodule_export",{"_index":2907,"title":{},"body":{"modules/TsSearchModule.html":{},"overview.html":{}}}],["cluster_tssearchmodule_import",{"_index":2906,"title":{},"body":{"modules/TsSearchModule.html":{}}}],["cluster_tsselectmodul",{"_index":2910,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["cluster_tsselectmodule_declar",{"_index":2911,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["cluster_tsselectmodule_export",{"_index":2914,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["cluster_tsselectmodule_import",{"_index":2913,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["cluster_tsselectmodule_tsselectcomponent_provid",{"_index":2912,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["cluster_tssortmodul",{"_index":3144,"title":{},"body":{"modules/TsSortModule.html":{},"overview.html":{}}}],["cluster_tssortmodule_declar",{"_index":3145,"title":{},"body":{"modules/TsSortModule.html":{},"overview.html":{}}}],["cluster_tssortmodule_export",{"_index":3146,"title":{},"body":{"modules/TsSortModule.html":{},"overview.html":{}}}],["cluster_tsspacingmodul",{"_index":3153,"title":{},"body":{"modules/TsSpacingModule.html":{},"overview.html":{}}}],["cluster_tsspacingmodule_declar",{"_index":3154,"title":{},"body":{"modules/TsSpacingModule.html":{},"overview.html":{}}}],["cluster_tsspacingmodule_export",{"_index":3155,"title":{},"body":{"modules/TsSpacingModule.html":{},"overview.html":{}}}],["cluster_tstablemodul",{"_index":3299,"title":{},"body":{"modules/TsTableModule.html":{},"overview.html":{}}}],["cluster_tstablemodule_declar",{"_index":3300,"title":{},"body":{"modules/TsTableModule.html":{},"overview.html":{}}}],["cluster_tstablemodule_export",{"_index":3303,"title":{},"body":{"modules/TsTableModule.html":{},"overview.html":{}}}],["cluster_tstablemodule_import",{"_index":3302,"title":{},"body":{"modules/TsTableModule.html":{}}}],["cluster_tstablemodule_tscelldefdirective_provid",{"_index":3301,"title":{},"body":{"modules/TsTableModule.html":{},"overview.html":{}}}],["cluster_tstogglemodul",{"_index":3336,"title":{},"body":{"modules/TsToggleModule.html":{},"overview.html":{}}}],["cluster_tstogglemodule_declar",{"_index":3337,"title":{},"body":{"modules/TsToggleModule.html":{},"overview.html":{}}}],["cluster_tstogglemodule_export",{"_index":3339,"title":{},"body":{"modules/TsToggleModule.html":{},"overview.html":{}}}],["cluster_tstogglemodule_tstogglecomponent_provid",{"_index":3338,"title":{},"body":{"modules/TsToggleModule.html":{},"overview.html":{}}}],["cluster_tstooltipmodul",{"_index":3356,"title":{},"body":{"modules/TsTooltipModule.html":{},"overview.html":{}}}],["cluster_tstooltipmodule_declar",{"_index":3357,"title":{},"body":{"modules/TsTooltipModule.html":{},"overview.html":{}}}],["cluster_tstooltipmodule_export",{"_index":3358,"title":{},"body":{"modules/TsTooltipModule.html":{},"overview.html":{}}}],["cluster_tsvalidationmessagesmodul",{"_index":3435,"title":{},"body":{"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["cluster_tsvalidationmessagesmodule_declar",{"_index":3436,"title":{},"body":{"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["cluster_tsvalidationmessagesmodule_export",{"_index":3437,"title":{},"body":{"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["cluster_tsvalidationmessagesmodule_provid",{"_index":3438,"title":{},"body":{"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["code",{"_index":406,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["codecov",{"_index":3724,"title":{},"body":{"index.html":{}}}],["coercearray",{"_index":186,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["coercearray(selections.slic",{"_index":303,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["coercebooleanproperti",{"_index":774,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["coercebooleanproperty(shouldproce",{"_index":1737,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["coercebooleanproperty(v",{"_index":1599,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["coercebooleanproperty(valu",{"_index":777,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["coercenumberproperti",{"_index":187,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(a.valu",{"_index":2679,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(b.valu",{"_index":2680,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(pag",{"_index":2605,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(page.valu",{"_index":2645,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(pagescount",{"_index":2662,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(record",{"_index":2613,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(valu",{"_index":262,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["collaps",{"_index":3796,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["collect",{"_index":408,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["color",{"_index":1094,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["color(acc",{"_index":2258,"title":{},"body":{"components/TsIconComponent.html":{}}}],["color(pur",{"_index":2213,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["column",{"_index":810,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsMenuComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["column'",{"_index":1236,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{}}}],["column.minwidth",{"_index":1260,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["column.nowrap",{"_index":1257,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["columncount",{"_index":891,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["columncount(valu",{"_index":888,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["columndef",{"_index":1252,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["columndef.cssclassfriendlynam",{"_index":1250,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["columnhead",{"_index":903,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["columnheaders(valu",{"_index":898,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["columns[i",{"_index":2497,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["columnvalid",{"_index":907,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["columnvalidators(valu",{"_index":905,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["come",{"_index":84,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCopyComponent.html":{},"index.html":{}}}],["comment",{"_index":3215,"title":{},"body":{"components/TsTableComponent.html":{}}}],["commit",{"_index":3586,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["commitizen",{"_index":3719,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":739,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["compar",{"_index":122,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"miscellaneous/typealiases.html":{}}}],["comparatorfn",{"_index":290,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["comparedd",{"_index":3311,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["comparison",{"_index":431,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["compat",{"_index":3632,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":576,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}}}],["complient",{"_index":1276,"title":{},"body":{"components/TsChart2Component.html":{}}}],["compon",{"_index":80,"title":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":1114,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["componentfactoryresolv",{"_index":2328,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["componentport",{"_index":1697,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["componentportal(tsconfirmationmodalcompon",{"_index":1730,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["componentportal(tsloadingoverlaycompon",{"_index":2357,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["composeev",{"_index":1525,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["compress",{"_index":3199,"title":{},"body":{"components/TsTableComponent.html":{}}}],["concis",{"_index":3603,"title":{},"body":{"contributing.html":{}}}],["concret",{"_index":1338,"title":{},"body":{"components/TsChart2Component.html":{}}}],["condit",{"_index":3744,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":3531,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":1476,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCopyComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["config.imagedimens",{"_index":3411,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["config.maxd",{"_index":3406,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["config.mind",{"_index":3409,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["config[validatornam",{"_index":3413,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["confirm",{"_index":1126,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["confirmation.direct",{"_index":1757,"title":{},"body":{"modules/TsConfirmationModule.html":{}}}],["confirmation/confirmation.modul",{"_index":672,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["conform",{"_index":1032,"title":{},"body":{"components/TsCardComponent.html":{}}}],["connect",{"_index":1526,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"classes/TsTableDataSource.html":{},"license.html":{}}}],["connectedpositionstrategi",{"_index":1694,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["consid",{"_index":2567,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["consist",{"_index":2250,"title":{},"body":{"components/TsIconComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{}}}],["console.error",{"_index":1355,"title":{},"body":{"components/TsChart2Component.html":{}}}],["console.error(`tschart2compon",{"_index":1374,"title":{},"body":{"components/TsChart2Component.html":{}}}],["console.log('demo",{"_index":3232,"title":{},"body":{"components/TsTableComponent.html":{}}}],["console.log('select",{"_index":148,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["console.warn('github",{"_index":3240,"title":{},"body":{"components/TsTableComponent.html":{}}}],["const",{"_index":34,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartEventOptions.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{}}}],["constant",{"_index":3637,"title":{},"body":{"index.html":{}}}],["constraint",{"_index":2104,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{}}}],["constraint.height.min",{"_index":2167,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["constraint.width.min",{"_index":2168,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["constraints.length",{"_index":2166,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["constraints.t",{"_index":2101,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"miscellaneous/typealiases.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"classes/TsChartEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{}}}],["constructor(_intl",{"_index":3111,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["constructor(amchart",{"_index":721,"title":{},"body":{"injectables/TsAmChartsService.html":{}}}],["constructor(changedetectorref",{"_index":1617,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsNavigationComponent.html":{}}}],["constructor(columndef",{"_index":1247,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["constructor(documentservic",{"_index":1769,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["constructor(elementref",{"_index":761,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["constructor(ev",{"_index":1492,"title":{},"body":{"classes/TsChartEvent.html":{}}}],["constructor(fil",{"_index":2922,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["constructor(formbuild",{"_index":2387,"title":{},"body":{"components/TsLoginFormComponent.html":{},"components/TsSearchComponent.html":{}}}],["constructor(ful",{"_index":3512,"title":{},"body":{"classes/Version.html":{}}}],["constructor(highchart",{"_index":15,"title":{},"body":{"injectables/HighchartsService.html":{}}}],["constructor(initialdata",{"_index":3267,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["constructor(maticonregistri",{"_index":2231,"title":{},"body":{"components/TsIconComponent.html":{}}}],["constructor(par",{"_index":1218,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["constructor(priv",{"_index":3248,"title":{},"body":{"components/TsTableComponent.html":{}}}],["constructor(publ",{"_index":3517,"title":{},"body":{"classes/Version.html":{}}}],["constructor(validationmessageservic",{"_index":3418,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["constructor(width",{"_index":2280,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["constructor(windowservic",{"_index":2084,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["constructor(zon",{"_index":1287,"title":{},"body":{"components/TsChart2Component.html":{}}}],["consum",{"_index":30,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"injectables/TsValidationMessageService.html":{}}}],["contain",{"_index":204,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsColumnDefDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["content",{"_index":50,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"index.html":{}}}],["content.row",{"_index":948,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["content.rows.length",{"_index":947,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["content_copi",{"_index":1785,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["contentchild",{"_index":1574,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["contentchild(tschartpointdirect",{"_index":1576,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["context",{"_index":1490,"title":{},"body":{"classes/TsChartEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["continu",{"_index":1735,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["contract",{"_index":3758,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":3526,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contributor",{"_index":3529,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["control",{"_index":295,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["control'",{"_index":3473,"title":{},"body":{"injectables/TsValidatorsService.html":{},"index.html":{}}}],["control.setvalid",{"_index":2035,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["control.updatevalueandvalid",{"_index":2038,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["controlvalueaccessor",{"_index":396,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["convent",{"_index":3596,"title":{},"body":{"contributing.html":{}}}],["convert",{"_index":2065,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"pipes/TsTimeAgoPipe.html":{},"index.html":{}}}],["cooki",{"_index":2422,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["coordin",{"_index":3554,"title":{},"body":{"contributing.html":{}}}],["copi",{"_index":516,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{},"license.html":{}}}],["copy'},{'nam",{"_index":1129,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["copy.compon",{"_index":1845,"title":{},"body":{"modules/TsCopyModule.html":{}}}],["copy.component.html",{"_index":1761,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["copy.component.scss",{"_index":1760,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["copy/copy.modul",{"_index":673,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["copyright",{"_index":3728,"title":{},"body":{"license.html":{}}}],["copytoclipboard",{"_index":1764,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["copytoclipboard(text",{"_index":1774,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["core",{"_index":725,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"dependencies.html":{}}}],["core/dist/textmaskcor",{"_index":398,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["coreyterminator&#x1f4bb",{"_index":3704,"title":{},"body":{"index.html":{}}}],["corner",{"_index":1092,"title":{},"body":{"components/TsCardComponent.html":{}}}],["correct",{"_index":464,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"injectables/TsValidationMessageService.html":{}}}],["correctli",{"_index":2259,"title":{},"body":{"components/TsIconComponent.html":{}}}],["count",{"_index":71,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["coverag",{"_index":3725,"title":{},"body":{"index.html":{}}}],["craft",{"_index":3556,"title":{},"body":{"contributing.html":{}}}],["creat",{"_index":28,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartSeriesDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{}}}],["created_at",{"_index":3246,"title":{},"body":{"components/TsTableComponent.html":{}}}],["createdrow",{"_index":935,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["createnumbermask",{"_index":399,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["createoverlay",{"_index":1670,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["createpagesarray(tot",{"_index":2670,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["createtextmaskinputel",{"_index":397,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["createtextmaskinputelement(maskopt",{"_index":457,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["credit",{"_index":3374,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["creditcard",{"_index":3381,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["creditcardmessag",{"_index":3375,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["creditcardvalid",{"_index":3442,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["css",{"_index":202,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["csv",{"_index":674,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["csv_icon",{"_index":2263,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ctr",{"_index":1923,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["ctrl",{"_index":1921,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["ctrl+c",{"_index":1839,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ctrl.enabl",{"_index":1924,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["currenc",{"_index":374,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["currency|number|percentag",{"_index":384,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["current",{"_index":309,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["currenthidden",{"_index":610,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["currenthidden.shift",{"_index":611,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["currentmask",{"_index":427,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["currentpag",{"_index":2648,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentpagechanged(pag",{"_index":2644,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentpageindex",{"_index":2606,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentpageindex(pag",{"_index":2603,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentpagelabel",{"_index":2589,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentqueri",{"_index":2887,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["currentvis",{"_index":597,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["currentvisible.pop",{"_index":600,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["cursor",{"_index":3680,"title":{},"body":{"index.html":{}}}],["custom",{"_index":62,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSlideToggleChange.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["custom_checkbox_control_value_accessor",{"_index":1591,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"overview.html":{}}}],["custom_datepicker_control_value_accessor",{"_index":2042,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"overview.html":{}}}],["custom_input_control_value_accessor",{"_index":2290,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["custom_radio_control_value_accessor",{"_index":2738,"title":{},"body":{"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"overview.html":{}}}],["custom_select_control_value_accessor",{"_index":2915,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["custom_toggle_control_value_accessor",{"_index":2963,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"overview.html":{}}}],["cycl",{"_index":2432,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["d",{"_index":2016,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"contributing.html":{}}}],["d.getday",{"_index":2017,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["damag",{"_index":3756,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2214,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["data",{"_index":547,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"pipes/TsDatePipe.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"pipes/TsSentenceCasePipe.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["data(data",{"_index":3287,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["data.item",{"_index":3235,"title":{},"body":{"components/TsTableComponent.html":{}}}],["data.total_count",{"_index":3234,"title":{},"body":{"components/TsTableComponent.html":{}}}],["databas",{"_index":3247,"title":{},"body":{"components/TsTableComponent.html":{}}}],["datalabel",{"_index":1462,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["datasourc",{"_index":3171,"title":{},"body":{"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["datatorend",{"_index":3170,"title":{},"body":{"components/TsTableComponent.html":{}}}],["datatorender;dynam",{"_index":3182,"title":{},"body":{"components/TsTableComponent.html":{}}}],["date",{"_index":677,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["date(2017",{"_index":1895,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["date(compareddate).toisostr",{"_index":3317,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["date(d",{"_index":2069,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["date(value).toisostr",{"_index":3316,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["date/date.pip",{"_index":2695,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["date1",{"_index":1903,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["date2",{"_index":1904,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["date:shortd",{"_index":3198,"title":{},"body":{"components/TsTableComponent.html":{}}}],["datefilt",{"_index":2050,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["dateformgroup",{"_index":1913,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["datepick",{"_index":1928,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"index.html":{}}}],["datepicker'},{'nam",{"_index":1133,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["datepicker.compon",{"_index":2078,"title":{},"body":{"modules/TsDatepickerModule.html":{}}}],["datepicker.component.html",{"_index":2045,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["datepicker.component.scss",{"_index":2046,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["datepicker/datepicker.modul",{"_index":680,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsDateRangeModule.html":{}}}],["datepickerev",{"_index":1972,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["datepickerevent.valu",{"_index":1975,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["daterang",{"_index":1910,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["dateselect",{"_index":1888,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["datetim",{"_index":1405,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["david",{"_index":3709,"title":{},"body":{"index.html":{}}}],["day",{"_index":1409,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsDatepickerInputEvent.html":{},"miscellaneous/typealiases.html":{}}}],["de",{"_index":88,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["deal",{"_index":2160,"title":{},"body":{"interfaces/TsFileValidations.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"pipes/TsTimeAgoPipe.html":{},"license.html":{}}}],["dealt",{"_index":3566,"title":{},"body":{"contributing.html":{}}}],["debounc",{"_index":87,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["debounce(this.emitsubmit",{"_index":2870,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["debouncedelay",{"_index":121,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["debouncedelay(valu",{"_index":259,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["debouncedemit",{"_index":2837,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["debouncetim",{"_index":180,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["debouncetime(1",{"_index":922,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["debouncetime(this.debouncedelay",{"_index":330,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["decim",{"_index":366,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["decis",{"_index":3651,"title":{},"body":{"index.html":{}}}],["declar",{"_index":416,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"classes/TsSlideToggleChange.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["decor",{"_index":23,"title":{},"body":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"components/TsChart2Component.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSortHeaderComponent.html":{}}}],["default",{"_index":90,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["default_high_record_messag",{"_index":2576,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["default_max_prefered_record",{"_index":2574,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["default_per_pag",{"_index":2573,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["default_records_per_page_opt",{"_index":2575,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["defaultcolumncount",{"_index":858,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["defaultmaxrow",{"_index":859,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["defaultopen",{"_index":2454,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["defaultrowcount",{"_index":856,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["defin",{"_index":16,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"miscellaneous/typealiases.html":{}}}],["definit",{"_index":361,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{}}}],["delay",{"_index":119,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["delet",{"_index":850,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"contributing.html":{}}}],["delete_forev",{"_index":2192,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["delete_foreverthem",{"_index":2211,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["deleterow(index",{"_index":991,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["demo",{"_index":1336,"title":{},"body":{"components/TsChart2Component.html":{},"index.html":{}}}],["demonstr",{"_index":2322,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["dep",{"_index":3142,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["depend",{"_index":621,"title":{"dependencies.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deprec",{"_index":1879,"title":{},"body":{"interfaces/TsDateRange.html":{},"index.html":{}}}],["deregist",{"_index":3042,"title":{},"body":{"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["deregister(sort",{"_index":3020,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["desc",{"_index":2976,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/typealiases.html":{}}}],["descend",{"_index":3106,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["describ",{"_index":2185,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["describedbi",{"_index":2754,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["descript",{"_index":7,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{}}}],["deselect",{"_index":355,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["deselectoption(opt",{"_index":356,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["design",{"_index":3159,"title":{},"body":{"components/TsTableComponent.html":{},"index.html":{}}}],["desir",{"_index":1078,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["destin",{"_index":491,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLinkComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["destination.indexof('http",{"_index":618,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["destinationisvalid",{"_index":2650,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["destinationpag",{"_index":2647,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["destroy",{"_index":1296,"title":{},"body":{"components/TsChart2Component.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{}}}],["destroychart",{"_index":1283,"title":{},"body":{"components/TsChart2Component.html":{}}}],["detail",{"_index":3617,"title":{},"body":{"contributing.html":{}}}],["detect",{"_index":2431,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["detector",{"_index":2783,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["determin",{"_index":129,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["determineimagedimens",{"_index":2920,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["determineimagedimensions(callback",{"_index":2932,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["determineposit",{"_index":2326,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["determineposition(posit",{"_index":2337,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["determinepostalmask(valu",{"_index":465,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["develop",{"_index":3620,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["deviat",{"_index":3653,"title":{},"body":{"index.html":{}}}],["devon",{"_index":3713,"title":{},"body":{"index.html":{}}}],["diagnos",{"_index":3546,"title":{},"body":{"contributing.html":{}}}],["dialog",{"_index":3665,"title":{},"body":{"index.html":{}}}],["differ",{"_index":331,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsMenuComponent.html":{}}}],["dimens",{"_index":2100,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/typealiases.html":{}}}],["dimensions.t",{"_index":2279,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["dimensions.ts:10",{"_index":2282,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["dimensions.ts:7",{"_index":2281,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["dimensions.ts:9",{"_index":2283,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["dir",{"_index":967,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["direct",{"_index":257,"title":{"directives/TsAutofocusDirective.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"directives/TsHeaderRowDefDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"directives/TsRowDefDirective.html":{},"directives/TsSortDirective.html":{},"directives/TsVerticalSpacingDirective.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["direction(direct",{"_index":3003,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["directli",{"_index":146,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsDateRange.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{},"contributing.html":{}}}],["disabl",{"_index":365,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["disableclear",{"_index":2980,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["disableclear(v",{"_index":3008,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["disableinitialselect",{"_index":1767,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["disallow",{"_index":2049,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["disconnect",{"_index":3266,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["discuss",{"_index":3553,"title":{},"body":{"contributing.html":{}}}],["dismiss",{"_index":1681,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["dismissoverlay",{"_index":1671,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["display",{"_index":63,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{}}}],["displayedcolumn",{"_index":3184,"title":{},"body":{"components/TsTableComponent.html":{}}}],["displaywith",{"_index":141,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["displaywith(valu",{"_index":269,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["distanc",{"_index":1455,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["distinctuntilchang",{"_index":181,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["distribut",{"_index":3739,"title":{},"body":{"license.html":{}}}],["div",{"_index":507,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["divid",{"_index":3666,"title":{},"body":{"index.html":{}}}],["divyameher&#x1f41b",{"_index":3712,"title":{},"body":{"index.html":{}}}],["doc",{"_index":2817,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{},"index.html":{}}}],["doctoc",{"_index":3723,"title":{},"body":{"index.html":{}}}],["document",{"_index":1314,"title":{},"body":{"components/TsChart2Component.html":{},"components/TsCopyComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["documentservic",{"_index":911,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCopyComponent.html":{}}}],["doesn't",{"_index":1255,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["dom",{"_index":954,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["domportalhost",{"_index":2342,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["domsanit",{"_index":2233,"title":{},"body":{"components/TsIconComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["don't",{"_index":1352,"title":{},"body":{"components/TsChart2Component.html":{},"contributing.html":{}}}],["done",{"_index":3649,"title":{},"body":{"index.html":{}}}],["dot",{"_index":3350,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["down",{"_index":293,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["drag",{"_index":3669,"title":{},"body":{"index.html":{}}}],["drilldown",{"_index":1472,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["drillup",{"_index":1510,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["driven",{"_index":65,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["drop",{"_index":292,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["dropdown",{"_index":76,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["dual",{"_index":3664,"title":{},"body":{"index.html":{}}}],["due",{"_index":318,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"contributing.html":{}}}],["dummi",{"_index":1156,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["dupe",{"_index":89,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["duplic",{"_index":130,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"contributing.html":{}}}],["dure",{"_index":1871,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["dynam",{"_index":2010,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"dependencies.html":{}}}],["e",{"_index":2089,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["e.preventdefault",{"_index":2097,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["each",{"_index":510,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["edg",{"_index":963,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["effect",{"_index":382,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["effort",{"_index":3555,"title":{},"body":{"contributing.html":{}}}],["el",{"_index":778,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["el.focu",{"_index":779,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["element",{"_index":205,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["element'",{"_index":2751,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["element.posit",{"_index":3186,"title":{},"body":{"components/TsTableComponent.html":{}}}],["elementref",{"_index":166,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["elementref.nativeelement.classlist.add(`t",{"_index":1249,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["elemetn",{"_index":2210,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["email",{"_index":2370,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["email/password",{"_index":3671,"title":{},"body":{"index.html":{}}}],["emailmessag",{"_index":3372,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["emailvalid",{"_index":3444,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["emit",{"_index":162,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"classes/TsChartEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["emitsubmit",{"_index":2842,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["emitt",{"_index":310,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartEventOptions.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{}}}],["emoji",{"_index":3696,"title":{},"body":{"index.html":{}}}],["empti",{"_index":756,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["enabl",{"_index":422,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{}}}],["enableditem",{"_index":540,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["enablemousetrack",{"_index":1464,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["enablequickcopi",{"_index":1768,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["encapsul",{"_index":236,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["encourag",{"_index":2566,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["end",{"_index":614,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["endblur(d",{"_index":1997,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endcontrol",{"_index":1964,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endcontrol.valu",{"_index":1968,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enddat",{"_index":1912,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["enddate1",{"_index":1898,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enddate2",{"_index":1899,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enddatecontrol",{"_index":1934,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enddateselected(datepickerev",{"_index":1987,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endinitiald",{"_index":1902,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endmaxd",{"_index":1890,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endmind",{"_index":1891,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endplacehold",{"_index":1941,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endselect",{"_index":1887,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endvalu",{"_index":1967,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enforc",{"_index":3619,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["engin",{"_index":3641,"title":{},"body":{"index.html":{}}}],["enough",{"_index":594,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["ensur",{"_index":3595,"title":{},"body":{"contributing.html":{}}}],["enter",{"_index":86,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"index.html":{}}}],["entir",{"_index":2500,"title":{},"body":{"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["entri",{"_index":812,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"index.html":{}}}],["entry'},{'nam",{"_index":1117,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["entry.compon",{"_index":805,"title":{},"body":{"modules/TsCSVEntryModule.html":{}}}],["entry.component.html",{"_index":851,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["entry.component.scss",{"_index":852,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["entry.component.t",{"_index":807,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["entry.modul",{"_index":676,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["entry.module.t",{"_index":802,"title":{},"body":{"modules/TsCSVEntryModule.html":{}}}],["entry/csv",{"_index":675,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["entrycompon",{"_index":1755,"title":{},"body":{"modules/TsConfirmationModule.html":{},"modules/TsLoadingOverlayModule.html":{}}}],["equal",{"_index":3388,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["equaltocontrol",{"_index":3398,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["equaltocontrolvalid",{"_index":3446,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["error",{"_index":67,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{}}}],["error(`'${comparedd",{"_index":3315,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["error(`'${valu",{"_index":1873,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["error(`th",{"_index":1233,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["error(`tsautocompletecompon",{"_index":275,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["error(`tsautofocusdirect",{"_index":780,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["error(`tsradiogroupcompon",{"_index":2759,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["error.actu",{"_index":985,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["error.actual.length",{"_index":983,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["error.actual.slice(0",{"_index":984,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["error.rowid",{"_index":979,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["erroritem",{"_index":982,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["errorobj",{"_index":975,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["errorobj.control",{"_index":976,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["errorobj[nam",{"_index":977,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["errors[key].filter((el",{"_index":969,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["esc",{"_index":1723,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["escap",{"_index":1699,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["etc",{"_index":1293,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsTableComponent.html":{},"index.html":{}}}],["europ",{"_index":1415,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["even",{"_index":2896,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"contributing.html":{}}}],["event",{"_index":64,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"modules/TsChartModule.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"license.html":{}}}],["event.deltax",{"_index":968,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["event.keycod",{"_index":1726,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["event.option.valu",{"_index":339,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["eventemitt",{"_index":167,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["events.t",{"_index":1500,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["everyon",{"_index":3652,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":210,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsChartEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{}}}],["exampledatabas",{"_index":3217,"title":{},"body":{"components/TsTableComponent.html":{}}}],["examplehttpdao",{"_index":3218,"title":{},"body":{"components/TsTableComponent.html":{}}}],["examplehttpdao(this.http",{"_index":3222,"title":{},"body":{"components/TsTableComponent.html":{}}}],["exce",{"_index":933,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["except",{"_index":773,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["exist",{"_index":342,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartSeriesDirective.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["expans",{"_index":3667,"title":{},"body":{"index.html":{}}}],["expect",{"_index":501,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["experi",{"_index":3643,"title":{},"body":{"index.html":{}}}],["explain",{"_index":3572,"title":{},"body":{"contributing.html":{}}}],["explan",{"_index":2401,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["export",{"_index":33,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"overview.html":{}}}],["exporta",{"_index":231,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsLinkComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["expos",{"_index":8,"title":{},"body":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["express",{"_index":2881,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"license.html":{}}}],["extend",{"_index":200,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"pipes/TsDatePipe.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["extern",{"_index":494,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLinkComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["externalicon",{"_index":2297,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["f",{"_index":3606,"title":{},"body":{"contributing.html":{}}}],["fab",{"_index":2469,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["factori",{"_index":1315,"title":{},"body":{"components/TsChart2Component.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["fail",{"_index":1916,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["fall",{"_index":1830,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["fallback",{"_index":1942,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["fallbackenddatecontrol",{"_index":1943,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["fallbackstartdatecontrol",{"_index":1944,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["fals",{"_index":114,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"miscellaneous/typealiases.html":{}}}],["far",{"_index":3580,"title":{},"body":{"contributing.html":{}}}],["favor",{"_index":1953,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["featur",{"_index":3533,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["februari",{"_index":1858,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["feel",{"_index":1076,"title":{},"body":{"components/TsCardComponent.html":{}}}],["fetch",{"_index":3189,"title":{},"body":{"components/TsTableComponent.html":{}}}],["few",{"_index":2491,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ff",{"_index":3613,"title":{},"body":{"contributing.html":{}}}],["field",{"_index":2043,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["figur",{"_index":312,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"injectables/TsValidationMessageService.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["file.t",{"_index":2119,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["file.ts:107",{"_index":2943,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:116",{"_index":2946,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:125",{"_index":2949,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:134",{"_index":2951,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:144",{"_index":2933,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:194",{"_index":2936,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:33",{"_index":2929,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:34",{"_index":2928,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:35",{"_index":2924,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:36",{"_index":2930,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:37",{"_index":2931,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:42",{"_index":2926,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:47",{"_index":2927,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:52",{"_index":2923,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:56",{"_index":2925,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:89",{"_index":2938,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:98",{"_index":2940,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["filecont",{"_index":2947,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["fileload",{"_index":2138,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["fileread",{"_index":2136,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["filerefer",{"_index":2139,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["files",{"_index":2120,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["filetyp",{"_index":2121,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["fill",{"_index":1459,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsIconComponent.html":{},"miscellaneous/typealiases.html":{}}}],["fillcolor",{"_index":1460,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["filter",{"_index":182,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{}}}],["filter((ev",{"_index":1725,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["filter((v",{"_index":326,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["filtereddata",{"_index":3264,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["find",{"_index":357,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"contributing.html":{},"index.html":{}}}],["findpage(pag",{"_index":2664,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["finish",{"_index":1560,"title":{},"body":{"directives/TsChartSeriesDirective.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["fire",{"_index":1547,"title":{},"body":{"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["first",{"_index":609,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{},"index.html":{}}}],["first_pag",{"_index":2581,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["firstpageicon",{"_index":2580,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["firstpageindex",{"_index":2623,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["firstpagetooltip",{"_index":2599,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["fit",{"_index":2164,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"license.html":{}}}],["fix",{"_index":277,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"contributing.html":{}}}],["fixm",{"_index":276,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["flag",{"_index":386,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["flat",{"_index":1028,"title":{},"body":{"components/TsCardComponent.html":{}}}],["flexbox",{"_index":861,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["flexlayoutmodul",{"_index":803,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{}}}],["flow",{"_index":340,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{}}}],["flush",{"_index":3180,"title":{},"body":{"components/TsTableComponent.html":{}}}],["fn",{"_index":447,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/TsChartEventOptions.html":{},"components/TsCheckboxComponent.html":{},"pipes/TsDatePipe.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"dependencies.html":{}}}],["fns@2.0.0",{"_index":3686,"title":{},"body":{"index.html":{}}}],["focu",{"_index":765,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"index.html":{}}}],["focus",{"_index":754,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"index.html":{}}}],["follow",{"_index":383,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsChartPointDirective.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["foo",{"_index":2711,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["foo_valu",{"_index":2712,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["forc",{"_index":912,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"contributing.html":{}}}],["forgot",{"_index":2372,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["forgotpasswordlink",{"_index":2381,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["forgotpasswordtext",{"_index":2382,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["fork",{"_index":3604,"title":{},"body":{"contributing.html":{}}}],["form",{"_index":294,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["form'},{'nam",{"_index":1148,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["form.compon",{"_index":2440,"title":{},"body":{"modules/TsLoginFormModule.html":{}}}],["form.component.html",{"_index":2374,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["form.component.scss",{"_index":2373,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["form.component.t",{"_index":2369,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["form.component.ts:105",{"_index":2415,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:110",{"_index":2414,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:115",{"_index":2417,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:121",{"_index":2412,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:127",{"_index":2408,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:133",{"_index":2390,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:139",{"_index":2391,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:145",{"_index":2392,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:151",{"_index":2396,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:157",{"_index":2397,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:163",{"_index":2398,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:169",{"_index":2389,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:187",{"_index":2400,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:204",{"_index":2402,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:83",{"_index":2411,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.modul",{"_index":692,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["form.module.t",{"_index":2439,"title":{},"body":{"modules/TsLoginFormModule.html":{}}}],["form/login",{"_index":691,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["form_group",{"_index":2375,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["formarray",{"_index":838,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["format",{"_index":369,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"pipes/TsDatePipe.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["format(validatorvalue.maxd",{"_index":3407,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["format(validatorvalue.mind",{"_index":3410,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["formatd",{"_index":1856,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["formatdist",{"_index":3313,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["formatdistance(date1",{"_index":3318,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["formatmodelvaluefn",{"_index":2766,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatmodelvaluefn(valu",{"_index":2764,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatt",{"_index":198,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["formatter(opt",{"_index":2788,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatuilabelfn",{"_index":2731,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatuilabelfn(valu",{"_index":2757,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatuisublabelfn",{"_index":2723,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatuisublabelfn(valu",{"_index":2761,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formbuild",{"_index":839,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["formbuilder.group",{"_index":1914,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["formcontrol",{"_index":53,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["formgroup",{"_index":840,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["formgroup.get('endd",{"_index":1962,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["formgroup.get('startd",{"_index":1961,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["formsmodul",{"_index":741,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSelectModule.html":{},"modules/TsToggleModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["forum",{"_index":2212,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["forwardref",{"_index":391,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["found",{"_index":154,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{}}}],["foundpag",{"_index":2652,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["foundpage.nam",{"_index":2666,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["free",{"_index":3734,"title":{},"body":{"license.html":{}}}],["freeli",{"_index":579,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["full",{"_index":267,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"classes/Version.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["full.split('.').slice(2).join",{"_index":3523,"title":{},"body":{"classes/Version.html":{}}}],["full.split('.')[0",{"_index":3519,"title":{},"body":{"classes/Version.html":{}}}],["full.split('.')[1",{"_index":3521,"title":{},"body":{"classes/Version.html":{}}}],["fullnam",{"_index":486,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["function",{"_index":123,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["function(thi",{"_index":1529,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["furnish",{"_index":3743,"title":{},"body":{"license.html":{}}}],["gap",{"_index":862,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsConfirmationModalComponent.html":{}}}],["gener",{"_index":563,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsReactiveFormBaseComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{},"index.html":{}}}],["generatebreakwidth",{"_index":564,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["get",{"_index":3525,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["getavailablespac",{"_index":2541,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["getbackground",{"_index":2243,"title":{},"body":{"components/TsIconComponent.html":{}}}],["getbord",{"_index":1061,"title":{},"body":{"components/TsCardComponent.html":{}}}],["getborderclass",{"_index":1071,"title":{},"body":{"components/TsCardComponent.html":{}}}],["getcolumns(row",{"_index":937,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["getcomputedstyle(this.elementref.nativeelement).getpropertyvalue('posit",{"_index":2358,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["getcurrentqueri",{"_index":2888,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["getdata",{"_index":3283,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["getdirect",{"_index":3061,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["getdisableclear",{"_index":3064,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["getfilecont",{"_index":2948,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["getheadercellname(index",{"_index":957,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["getheight",{"_index":2939,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["gethostel",{"_index":2208,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["getid",{"_index":1064,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsCheckboxComponent.html":{}}}],["getischeck",{"_index":1651,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["getiscsv",{"_index":2942,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["getisimag",{"_index":2945,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["getisutilitymenu",{"_index":2482,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["getisvalid",{"_index":2950,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["getnextsortdirect",{"_index":3043,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["getnextsortdirection(sort",{"_index":3029,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getrepoissues(sort",{"_index":3249,"title":{},"body":{"components/TsTableComponent.html":{}}}],["getsortdirectioncycle(sortable.start",{"_index":3033,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortdirectioncycle(start",{"_index":3038,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortduplicatesortableiderror",{"_index":2986,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortduplicatesortableiderror(sortable.id",{"_index":3017,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortheadermissingiderror",{"_index":2987,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortheadernotcontainedwithinsorterror",{"_index":3072,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["getsortinvaliddirectionerror",{"_index":2985,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortinvaliddirectionerror(direct",{"_index":3004,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsvgicon",{"_index":2246,"title":{},"body":{"components/TsIconComponent.html":{}}}],["getter",{"_index":518,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsUser.html":{}}}],["gettextcont",{"_index":1794,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["getthem",{"_index":1067,"title":{},"body":{"components/TsCardComponent.html":{}}}],["getusersfullnam",{"_index":2543,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["getvalidationmessag",{"_index":3423,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["getvalidatorerrormessag",{"_index":3367,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["getvalidatorerrormessage(validatornam",{"_index":3368,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["getvalu",{"_index":2813,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["getvisibleitemslength",{"_index":2545,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["getvisu",{"_index":1311,"title":{},"body":{"components/TsChart2Component.html":{}}}],["getwidth",{"_index":2937,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["git",{"_index":3587,"title":{},"body":{"contributing.html":{}}}],["github",{"_index":3236,"title":{},"body":{"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{}}}],["githubapi",{"_index":3243,"title":{},"body":{"components/TsTableComponent.html":{}}}],["githubissu",{"_index":3244,"title":{},"body":{"components/TsTableComponent.html":{}}}],["given",{"_index":1406,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["global",{"_index":2743,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"index.html":{}}}],["go",{"_index":3191,"title":{},"body":{"components/TsTableComponent.html":{}}}],["goe",{"_index":3693,"title":{},"body":{"index.html":{}}}],["good",{"_index":2404,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["grant",{"_index":3733,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1570,"title":{},"body":{"directives/TsChartSeriesDirective.html":{},"index.html":{}}}],["greater",{"_index":3385,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["greaterthan",{"_index":3383,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["greaterthanorequ",{"_index":3387,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["greaterthanorequalvalid",{"_index":3450,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["greaterthanvalid",{"_index":3448,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["gridcel",{"_index":1251,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["group",{"_index":559,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["group'},{'nam",{"_index":1155,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["group.compon",{"_index":2801,"title":{},"body":{"modules/TsRadioGroupModule.html":{}}}],["group.component.html",{"_index":2739,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["group.component.scss",{"_index":2740,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["group.component.t",{"_index":2707,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["group.component.ts:31",{"_index":2802,"title":{},"body":{"interfaces/TsRadioOption.html":{}}}],["group.modul",{"_index":701,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["group.module.t",{"_index":2799,"title":{},"body":{"modules/TsRadioGroupModule.html":{}}}],["group/radio",{"_index":700,"title":{},"body":{"modules/TerminusUIModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["groupbi",{"_index":483,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["groupby(allitem",{"_index":584,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["guess",{"_index":315,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["guid",{"_index":437,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["guidelin",{"_index":3530,"title":{},"body":{"contributing.html":{}}}],["hack",{"_index":2403,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["hammer",{"_index":3659,"title":{},"body":{"index.html":{}}}],["handl",{"_index":2486,"title":{},"body":{"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["hankey",{"_index":3661,"title":{},"body":{"index.html":{}}}],["happen",{"_index":2974,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["harkness&#x1f4bb",{"_index":3710,"title":{},"body":{"index.html":{}}}],["hasbackdrop",{"_index":1716,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["hasinnertext",{"_index":1797,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["hasn't",{"_index":3560,"title":{},"body":{"contributing.html":{}}}],["hasprotect",{"_index":2083,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["hasrequiredcontrol",{"_index":2735,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["hasrequiredcontrol(this.formcontrol",{"_index":2782,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["hasselect",{"_index":1762,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["hasunderlin",{"_index":3347,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["header",{"_index":815,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["header.compon",{"_index":3152,"title":{},"body":{"modules/TsSortModule.html":{}}}],["header.component.html",{"_index":3080,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["header.component.scss",{"_index":3081,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["header.component.t",{"_index":3069,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:101",{"_index":3112,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:108",{"_index":3123,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:110",{"_index":3124,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:111",{"_index":3122,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:131",{"_index":3121,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:143",{"_index":3120,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:151",{"_index":3117,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:161",{"_index":3119,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:170",{"_index":3118,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:76",{"_index":3116,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:83",{"_index":3113,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:89",{"_index":3115,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:95",{"_index":3114,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:98",{"_index":3125,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header]'},{'nam",{"_index":1165,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["headercel",{"_index":876,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["headercount",{"_index":1001,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["heavili",{"_index":3655,"title":{},"body":{"index.html":{}}}],["height",{"_index":2105,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{}}}],["help",{"_index":2224,"title":{},"body":{"components/TsIconComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{}}}],["helper",{"_index":463,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"index.html":{}}}],["here",{"_index":1018,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsSortHeaderIntl.html":{},"contributing.html":{},"index.html":{}}}],["here'",{"_index":3163,"title":{},"body":{"components/TsTableComponent.html":{}}}],["herebi",{"_index":3732,"title":{},"body":{"license.html":{}}}],["hi",{"_index":2732,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["hidden",{"_index":527,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["hiddenitem",{"_index":528,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["hide",{"_index":1515,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"directives/TsChartSeriesDirective.html":{}}}],["hierarchi",{"_index":2504,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["high",{"_index":2559,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["highchart",{"_index":9,"title":{},"body":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"dependencies.html":{}}}],["highcharts.servic",{"_index":1543,"title":{},"body":{"modules/TsChartModule.html":{}}}],["highchartsservic",{"_index":1,"title":{"injectables/HighchartsService.html":{}},"body":{"injectables/HighchartsService.html":{},"modules/TsChartModule.html":{},"overview.html":{}}}],["higher",{"_index":2503,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["highli",{"_index":3149,"title":{},"body":{"modules/TsSortModule.html":{},"modules/TsTableModule.html":{}}}],["hint",{"_index":209,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["hint=\"begin",{"_index":212,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["hit",{"_index":102,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["hold",{"_index":2988,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"index.html":{}}}],["holder",{"_index":3753,"title":{},"body":{"license.html":{}}}],["hollow",{"_index":3795,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["home",{"_index":2223,"title":{},"body":{"components/TsIconComponent.html":{}}}],["homeif",{"_index":2249,"title":{},"body":{"components/TsIconComponent.html":{}}}],["hope",{"_index":3646,"title":{},"body":{"index.html":{}}}],["horizont",{"_index":1482,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["host",{"_index":233,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["hostbind",{"_index":1217,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["hostbinding('class",{"_index":1229,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["hostbinding('style.posit",{"_index":2351,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["hostel",{"_index":2207,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["hostlisten",{"_index":479,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["hostlistener('click",{"_index":1704,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["hostlistener('window:res",{"_index":557,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["hour",{"_index":1408,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["hover",{"_index":1045,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["href",{"_index":3250,"title":{},"body":{"components/TsTableComponent.html":{}}}],["href}?q=repo:getterminus/terminu",{"_index":3253,"title":{},"body":{"components/TsTableComponent.html":{}}}],["html",{"_index":816,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["htmlinputel",{"_index":429,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["http",{"_index":616,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["httpclient",{"_index":3203,"title":{},"body":{"components/TsTableComponent.html":{}}}],["https://api.github.com/search/issu",{"_index":3251,"title":{},"body":{"components/TsTableComponent.html":{}}}],["https://github.com/angular/material2/tree/master/src/lib/sort",{"_index":3151,"title":{},"body":{"modules/TsSortModule.html":{}}}],["https://github.com/angular/material2/tree/master/src/lib/t",{"_index":3305,"title":{},"body":{"modules/TsTableModule.html":{}}}],["https://github.com/getterminus/terminu",{"_index":3377,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["https://goo.gl/ieupag",{"_index":224,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["https://material.io/icon",{"_index":2254,"title":{},"body":{"components/TsIconComponent.html":{},"index.html":{}}}],["https://www.amcharts.com/docs/v4",{"_index":1344,"title":{},"body":{"components/TsChart2Component.html":{}}}],["human",{"_index":3678,"title":{},"body":{"index.html":{}}}],["i.",{"_index":3672,"title":{},"body":{"index.html":{}}}],["icon",{"_index":683,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"modules/TsFileUploadModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["icon'},{'nam",{"_index":1140,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["icon.compon",{"_index":2278,"title":{},"body":{"modules/TsIconModule.html":{}}}],["icon.component.html",{"_index":2226,"title":{},"body":{"components/TsIconComponent.html":{}}}],["icon.component.scss",{"_index":2225,"title":{},"body":{"components/TsIconComponent.html":{}}}],["icon/icon.modul",{"_index":686,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsCopyModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsRadioGroupModule.html":{}}}],["icons/csv",{"_index":2264,"title":{},"body":{"components/TsIconComponent.html":{}}}],["id",{"_index":92,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["id(valu",{"_index":879,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["idea",{"_index":3528,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["identifi",{"_index":2971,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["ifram",{"_index":771,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsSearchComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["ignor",{"_index":273,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["imag",{"_index":2116,"title":{},"body":{"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["image/jpeg",{"_index":3798,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["image/jpg",{"_index":3799,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["image/png",{"_index":3800,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["imagedimens",{"_index":2122,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["imagedimensionconstraint",{"_index":2131,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["img",{"_index":2151,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["img.naturalheight",{"_index":2157,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["img.onload",{"_index":2154,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["img.src",{"_index":2152,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["immedi",{"_index":1562,"title":{},"body":{"directives/TsChartSeriesDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["immediatelyoronchang",{"_index":3429,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["implement",{"_index":238,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["impli",{"_index":3748,"title":{},"body":{"license.html":{}}}],["implicit",{"_index":2594,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["import",{"_index":25,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{}}}],["includ",{"_index":769,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsIconComponent.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"classes/TsTableDataSource.html":{},"contributing.html":{},"license.html":{}}}],["inclus",{"_index":3537,"title":{},"body":{"contributing.html":{}}}],["increas",{"_index":3564,"title":{},"body":{"contributing.html":{}}}],["indetermin",{"_index":1603,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["indeterminatechang",{"_index":1608,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["indic",{"_index":61,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{}}}],["individu",{"_index":207,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["indiviu",{"_index":2102,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{}}}],["info",{"_index":2,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{}}}],["inform",{"_index":3508,"title":{},"body":{"classes/Version.html":{},"contributing.html":{}}}],["inherit",{"_index":1627,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["init",{"_index":1284,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["init(typ",{"_index":1297,"title":{},"body":{"components/TsChart2Component.html":{}}}],["initi",{"_index":134,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["initiald",{"_index":2025,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["initialdata",{"_index":3271,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["initialdate(valu",{"_index":2057,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["initialselect",{"_index":135,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["initialselections(select",{"_index":301,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["initialvalu",{"_index":2845,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inject",{"_index":0,"title":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"injectables/TsDropProtectionService.html":{},"injectables/TsSortHeaderIntl.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{}},"body":{"injectables/HighchartsService.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"overview.html":{}}}],["inject(highchart",{"_index":38,"title":{},"body":{"injectables/HighchartsService.html":{}}}],["inject(ts_amcharts_token",{"_index":730,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["injectiontoken",{"_index":26,"title":{},"body":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["injectiontoken('amchart",{"_index":729,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["injectiontoken('highchart",{"_index":36,"title":{},"body":{"injectables/HighchartsService.html":{}}}],["injector",{"_index":2331,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["inlin",{"_index":1258,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{}}}],["inner",{"_index":1638,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["innervalu",{"_index":1610,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["inprogress",{"_index":2383,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["input",{"_index":168,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["input'},{'nam",{"_index":1142,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["input('aria",{"_index":2747,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["input('t",{"_index":3089,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["input('tscolumndef",{"_index":1266,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["input('tssortact",{"_index":2999,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["input('tssortdirect",{"_index":3002,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["input('tssortdisableclear",{"_index":3007,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["input('tssortstart",{"_index":3001,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["input.compon",{"_index":2292,"title":{},"body":{"modules/TsInputModule.html":{}}}],["input/input.compon",{"_index":2419,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["input/input.modul",{"_index":687,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsSearchModule.html":{}}}],["input_debounce_tim",{"_index":2838,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inputblur",{"_index":2062,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["inputchang",{"_index":1607,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["inputcompon",{"_index":2376,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["inputel",{"_index":428,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["inputhaschang",{"_index":1346,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["inputhaschanged(chang",{"_index":1356,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["inputhint",{"_index":2846,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inputlabel",{"_index":2847,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inputpatternregex",{"_index":2839,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inputplacehold",{"_index":2051,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["insid",{"_index":1225,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{}}}],["instal",{"_index":3638,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":438,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{}}}],["instanceof",{"_index":1232,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["instead",{"_index":1391,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsDateRange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["interact",{"_index":499,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["intercept",{"_index":1685,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{}}}],["interfac",{"_index":41,"title":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsAmChartsToken.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"overview.html":{}}}],["intern",{"_index":1644,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsLinkComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"components/TsToggleComponent.html":{},"index.html":{}}}],["interv",{"_index":1400,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["intl",{"_index":3071,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{}}}],["intl.t",{"_index":3129,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["intl.ts:21",{"_index":3133,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["intl.ts:26",{"_index":3135,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["intl.ts:33",{"_index":3136,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["invalid",{"_index":2007,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"injectables/TsValidationMessageService.html":{}}}],["invert",{"_index":1484,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["ischeck",{"_index":1582,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["ischecked(v",{"_index":1597,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["ischecked(valu",{"_index":2966,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["iscsv",{"_index":2941,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["isdevmod",{"_index":169,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"pipes/TsDatePipe.html":{},"components/TsIconComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"pipes/TsTimeAgoPipe.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["isdis",{"_index":473,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["isextern",{"_index":2298,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["isexternallink",{"_index":2520,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["isexternallink(destin",{"_index":617,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["isfirstpage(pag",{"_index":2654,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["isfocus",{"_index":2848,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["isforadmin",{"_index":474,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["isfunct",{"_index":191,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["isfunction(v",{"_index":288,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["isfunction(valu",{"_index":270,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["isimag",{"_index":2944,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["isindetermin",{"_index":1604,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["islastpage(pag",{"_index":2655,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["isn't",{"_index":144,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsReactiveFormBaseComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["iso",{"_index":2066,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["isredirect",{"_index":2384,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["isrequir",{"_index":1605,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["issu",{"_index":1870,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"contributing.html":{}}}],["issubmit",{"_index":2849,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["istanbul",{"_index":272,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["isutilitymenu",{"_index":2481,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["isvalid",{"_index":1855,"title":{},"body":{"pipes/TsDatePipe.html":{},"classes/TsSelectedFile.html":{},"pipes/TsTimeAgoPipe.html":{},"injectables/TsValidatorsService.html":{}}}],["isvalid(comparedd",{"_index":3314,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["isvalid(valu",{"_index":1872,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["isvisu",{"_index":2729,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["isvisual(valu",{"_index":2769,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["iszerobas",{"_index":2565,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["iszerobased(v",{"_index":2596,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["it'",{"_index":316,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["item",{"_index":155,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["item.ag",{"_index":3177,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.com",{"_index":3216,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.created_at",{"_index":3197,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.isdis",{"_index":542,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["item.nam",{"_index":2548,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["item.nativeelement.offsetwidth",{"_index":570,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["item.numb",{"_index":3212,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.st",{"_index":3214,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.titl",{"_index":3213,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.usernam",{"_index":3165,"title":{},"body":{"components/TsTableComponent.html":{}}}],["items(valu",{"_index":539,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["items.length",{"_index":159,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["itemtomov",{"_index":599,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["itself",{"_index":1906,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsTableComponent.html":{},"index.html":{}}}],["javascript",{"_index":1435,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["jest",{"_index":3477,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["join",{"_index":1006,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"pipes/TsTitleCasePipe.html":{}}}],["joinbi",{"_index":1466,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["kal93&#x1f41b",{"_index":3711,"title":{},"body":{"index.html":{}}}],["keep",{"_index":3195,"title":{},"body":{"components/TsTableComponent.html":{},"contributing.html":{}}}],["key",{"_index":45,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["keyboard",{"_index":836,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["keyboard_arrow_down",{"_index":2549,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["keyboard_arrow_left",{"_index":2583,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["keyboard_arrow_right",{"_index":2585,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["keyboardev",{"_index":42,"title":{"interfaces/KeyboardEvent.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["keyup",{"_index":2843,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["kilobyt",{"_index":2127,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["kind",{"_index":3551,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["know",{"_index":344,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsTableDataSource.html":{}}}],["label",{"_index":281,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsIconButtonComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["label=\"select",{"_index":213,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["labelclick(opt",{"_index":2789,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["labelledbi",{"_index":2749,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["labelposit",{"_index":2967,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["languag",{"_index":3645,"title":{},"body":{"index.html":{}}}],["larg",{"_index":2727,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["larger",{"_index":2502,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["last",{"_index":430,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["last_pag",{"_index":2587,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lastpageicon",{"_index":2586,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lastpageindex",{"_index":2628,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lastpagetooltip",{"_index":2602,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lastvalu",{"_index":432,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["later",{"_index":1648,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["latest",{"_index":3612,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":554,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"components/TsIconComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"dependencies.html":{},"index.html":{}}}],["layout@6.0.0",{"_index":3684,"title":{},"body":{"index.html":{}}}],["layoutgap",{"_index":863,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["learn",{"_index":2570,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["leav",{"_index":1549,"title":{},"body":{"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsLinkComponent.html":{}}}],["left",{"_index":1095,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["legend",{"_index":622,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"components/TsNavigationComponent.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["legenditemclick",{"_index":1516,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"directives/TsChartSeriesDirective.html":{}}}],["length",{"_index":2416,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidationMessageService.html":{}}}],["less",{"_index":3392,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["lessthan",{"_index":3391,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["lessthanorequ",{"_index":3394,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["lessthanorequalvalid",{"_index":3454,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["lessthanvalid",{"_index":3452,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["let",{"_index":2430,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["letter",{"_index":2855,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidationMessageService.html":{}}}],["liabil",{"_index":3757,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":3754,"title":{},"body":{"license.html":{}}}],["librari",{"_index":1308,"title":{},"body":{"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["licens",{"_index":3726,"title":{"license.html":{}},"body":{"license.html":{}}}],["lift",{"_index":3148,"title":{},"body":{"modules/TsSortModule.html":{},"modules/TsTableModule.html":{}}}],["limit",{"_index":3239,"title":{},"body":{"components/TsTableComponent.html":{},"license.html":{}}}],["line",{"_index":713,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["linear",{"_index":1412,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["link",{"_index":124,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["link'",{"_index":2299,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["link'},{'nam",{"_index":1144,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["link.compon",{"_index":2316,"title":{},"body":{"modules/TsLinkModule.html":{}}}],["link.component.html",{"_index":2296,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["link.component.scss",{"_index":2295,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["link/link.modul",{"_index":688,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{}}}],["linkextern",{"_index":2305,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["linter",{"_index":3592,"title":{},"body":{"contributing.html":{}}}],["list",{"_index":208,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["listen",{"_index":1558,"title":{},"body":{"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"directives/TsConfirmationDirective.html":{},"injectables/TsDropProtectionService.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["liter",{"_index":1392,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsNavigationActionItem.html":{},"interfaces/TsNavigationPayload.html":{}}}],["live",{"_index":3576,"title":{},"body":{"contributing.html":{}}}],["llc",{"_index":3730,"title":{},"body":{"license.html":{}}}],["load",{"_index":300,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartEventOptions.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["loadingoverlayport",{"_index":2325,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["local",{"_index":78,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{}}}],["locat",{"_index":495,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["lock",{"_index":1017,"title":{},"body":{"components/TsCardComponent.html":{}}}],["lock_outlin",{"_index":1111,"title":{},"body":{"components/TsCardComponent.html":{}}}],["log",{"_index":2394,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["logarithm",{"_index":1413,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["login",{"_index":93,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["logincta",{"_index":2385,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["loginform",{"_index":2377,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["long",{"_index":1268,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["longer",{"_index":2722,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["loop",{"_index":132,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["lot",{"_index":2578,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lowercas",{"_index":3400,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["lowercasevalid",{"_index":3456,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["m/d/yyyi",{"_index":3408,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["made",{"_index":149,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["main",{"_index":1481,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"contributing.html":{}}}],["maintain",{"_index":3642,"title":{},"body":{"index.html":{}}}],["major",{"_index":3509,"title":{},"body":{"classes/Version.html":{},"contributing.html":{}}}],["make",{"_index":1075,"title":{},"body":{"components/TsCardComponent.html":{},"contributing.html":{},"index.html":{}}}],["malinconico&#x1f41b",{"_index":3708,"title":{},"body":{"index.html":{}}}],["manag",{"_index":239,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["mani",{"_index":865,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["manual",{"_index":824,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["map",{"_index":727,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["map((respons",{"_index":111,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["map((word",{"_index":3322,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["map(data",{"_index":3231,"title":{},"body":{"components/TsTableComponent.html":{}}}],["mapbubbl",{"_index":1427,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["mapdata",{"_index":1465,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["mapnavig",{"_index":1473,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["mark",{"_index":1399,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"miscellaneous/typealiases.html":{}}}],["mask",{"_index":359,"title":{"interfaces/Mask.html":{}},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["mask.direct",{"_index":2446,"title":{},"body":{"modules/TsMaskModule.html":{}}}],["mask/mask.modul",{"_index":693,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["maskcollect",{"_index":409,"title":{"interfaces/MaskCollection.html":{}},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["masked_input_value_accessor",{"_index":417,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"modules/TsMaskModule.html":{},"overview.html":{}}}],["maskfunct",{"_index":364,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["masknam",{"_index":433,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["maskopt",{"_index":453,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["maskshortcutopt",{"_index":411,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["master",{"_index":3591,"title":{},"body":{"contributing.html":{}}}],["matautocomplet",{"_index":176,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["matautocompletemodul",{"_index":743,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["matautocompleteselectedev",{"_index":177,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["matautocompletetrigg",{"_index":178,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["matbuttonmodul",{"_index":792,"title":{},"body":{"modules/TsButtonModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{}}}],["match",{"_index":40,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["matcheckbox",{"_index":1589,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["matcheckboxchang",{"_index":1579,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["matcheckboxcompon",{"_index":1595,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["matcheckboxmodul",{"_index":1660,"title":{},"body":{"modules/TsCheckboxModule.html":{}}}],["matchipsmodul",{"_index":744,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["matdatepickerinputev",{"_index":1926,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["matdatepickermodul",{"_index":2076,"title":{},"body":{"modules/TsDatepickerModule.html":{}}}],["materi",{"_index":1789,"title":{},"body":{"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"modules/TsSortModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"index.html":{}}}],["math.ceil(this.file.s",{"_index":2144,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["maticonmodul",{"_index":2277,"title":{},"body":{"modules/TsIconModule.html":{}}}],["maticonregistri",{"_index":2232,"title":{},"body":{"components/TsIconComponent.html":{}}}],["matinputmodul",{"_index":746,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsInputModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["matmenumodul",{"_index":2518,"title":{},"body":{"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{}}}],["matmenutrigg",{"_index":2474,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["matnativedatemodul",{"_index":2077,"title":{},"body":{"modules/TsDatepickerModule.html":{}}}],["matprogressbarmodul",{"_index":2113,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["matprogressspinnermodul",{"_index":748,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsButtonModule.html":{}}}],["matradiochang",{"_index":2708,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["matradiomodul",{"_index":2800,"title":{},"body":{"modules/TsRadioGroupModule.html":{}}}],["matripplemodul",{"_index":1208,"title":{},"body":{"modules/TsCardModule.html":{},"modules/TsCopyModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsRadioGroupModule.html":{}}}],["matselectmodul",{"_index":2917,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["matslidetogglechang",{"_index":2961,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["matslidetogglemodul",{"_index":3341,"title":{},"body":{"modules/TsToggleModule.html":{}}}],["mattooltipmodul",{"_index":3360,"title":{},"body":{"modules/TsTooltipModule.html":{}}}],["max",{"_index":813,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["max/min",{"_index":1882,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["maxdat",{"_index":2023,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["maxdate(valu",{"_index":2052,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["maxdatevalid",{"_index":3458,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["maxim",{"_index":3562,"title":{},"body":{"contributing.html":{}}}],["maximum",{"_index":822,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["maximumvalidationmessag",{"_index":869,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["maxitemlength",{"_index":980,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["maxlength",{"_index":3380,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["maxpreferredrecord",{"_index":2568,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["maxrow",{"_index":886,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["maxrows(valu",{"_index":883,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["maxsiz",{"_index":2133,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["medium",{"_index":1861,"title":{},"body":{"pipes/TsDatePipe.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["meet",{"_index":3474,"title":{},"body":{"injectables/TsValidatorsService.html":{},"index.html":{}}}],["menu",{"_index":512,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["menu'},{'nam",{"_index":1150,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["menu.compon",{"_index":2519,"title":{},"body":{"modules/TsMenuModule.html":{}}}],["menu.component.html",{"_index":2449,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["menu.component.scss",{"_index":2448,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["menu/menu.modul",{"_index":694,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsPaginatorModule.html":{}}}],["menuisdisabled(pagescount",{"_index":2661,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["menuitemstempl",{"_index":2455,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["menuloc",{"_index":2609,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["menupositioni",{"_index":2457,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["menupositionx",{"_index":2456,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["merchant",{"_index":3749,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1701,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"license.html":{}}}],["merge(_sort.sortchang",{"_index":3094,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["merge(this.overlayref.backdropclick",{"_index":1727,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["merge(this.sort.sortchang",{"_index":3224,"title":{},"body":{"components/TsTableComponent.html":{}}}],["messag",{"_index":158,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{}}}],["message.length",{"_index":2657,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["message.servic",{"_index":3425,"title":{},"body":{"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{}}}],["message.service.t",{"_index":3365,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["message.service.ts:40",{"_index":3370,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["messages.compon",{"_index":3440,"title":{},"body":{"modules/TsValidationMessagesModule.html":{}}}],["messages.component.html",{"_index":3416,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.scss",{"_index":3415,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.t",{"_index":3414,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:38",{"_index":3424,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:63",{"_index":3421,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:69",{"_index":3422,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:75",{"_index":3419,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.length",{"_index":988,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["messages.modul",{"_index":710,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSelectModule.html":{}}}],["messages.module.t",{"_index":3439,"title":{},"body":{"modules/TsValidationMessagesModule.html":{}}}],["messages.push(`and",{"_index":990,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["messages.push(messag",{"_index":986,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["messages/valid",{"_index":709,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSelectModule.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{}}}],["metadata",{"_index":757,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"pipes/TsSentenceCasePipe.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["method",{"_index":760,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{},"index.html":{}}}],["methods/variables/mixin",{"_index":3691,"title":{},"body":{"index.html":{}}}],["millisecond",{"_index":1407,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["mime",{"_index":2125,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/typealiases.html":{}}}],["mimetyp",{"_index":2135,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["min",{"_index":1259,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsTableComponent.html":{}}}],["mind",{"_index":3615,"title":{},"body":{"contributing.html":{}}}],["mindat",{"_index":2021,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["mindate(valu",{"_index":2055,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["mindatevalid",{"_index":3460,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["minifi",{"_index":3569,"title":{},"body":{"contributing.html":{}}}],["minim",{"_index":2560,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["minimum",{"_index":68,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["minimumcharact",{"_index":284,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["minimumcharacters(valu",{"_index":282,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["minlength",{"_index":2897,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidationMessageService.html":{}}}],["minor",{"_index":3510,"title":{},"body":{"classes/Version.html":{}}}],["minwidth",{"_index":1262,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsTableComponent.html":{}}}],["miscellan",{"_index":3766,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["mistak",{"_index":3540,"title":{},"body":{"contributing.html":{}}}],["mit",{"_index":3727,"title":{},"body":{"license.html":{}}}],["mixin",{"_index":2992,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["mixindis",{"_index":2984,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["mixindisabled(tssortbas",{"_index":2994,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["mixindisabled(tssortheaderbas",{"_index":3075,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["mock",{"_index":3470,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["modal",{"_index":1687,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{}}}],["modal'},{'nam",{"_index":1127,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["modal.compon",{"_index":1702,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"modules/TsConfirmationModule.html":{}}}],["modal.component.html",{"_index":1744,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modal.component.scss",{"_index":1743,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modal.component.t",{"_index":1742,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modal.component.ts:29",{"_index":1746,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modal.component.ts:34",{"_index":1749,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modalinst",{"_index":1668,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["mode",{"_index":2710,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["model",{"_index":389,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["modelformatt",{"_index":2720,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["modifi",{"_index":3130,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{},"license.html":{}}}],["modul",{"_index":619,"title":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"modules.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":1951,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["more",{"_index":608,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCopyComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["more_vert",{"_index":2478,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["motiv",{"_index":3571,"title":{},"body":{"contributing.html":{}}}],["mous",{"_index":503,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}}}],["mouseev",{"_index":197,"title":{"interfaces/MouseEvent.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["mouseout",{"_index":1517,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{}}}],["mouseov",{"_index":1518,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{}}}],["move",{"_index":588,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["much",{"_index":1468,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{}}}],["multi",{"_index":420,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["multipl",{"_index":55,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsIconComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["multiple(v",{"_index":287,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["multiple=\"(v",{"_index":214,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["mychangefunc(v",{"_index":2562,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["myclass",{"_index":2257,"title":{},"body":{"components/TsIconComponent.html":{}}}],["mycompon",{"_index":3471,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["mycontrol.valu",{"_index":1583,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["mydat",{"_index":2026,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["mydatasource.data",{"_index":3179,"title":{},"body":{"components/TsTableComponent.html":{}}}],["myfilt",{"_index":2015,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["myform",{"_index":1908,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsValidatorsService.html":{}}}],["myform.get('daterang",{"_index":1917,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["myform.get('daterange');en",{"_index":1919,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["myform.get('daterange');exampl",{"_index":2030,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["myfunc(blob",{"_index":819,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["myradiogroup",{"_index":2717,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["myselectfunc(v",{"_index":2561,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["mytableitem",{"_index":3174,"title":{},"body":{"components/TsTableComponent.html":{}}}],["myvalid",{"_index":829,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["myvalu",{"_index":1585,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsTableComponent.html":{}}}],["name",{"_index":20,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["name(valu",{"_index":2772,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["name=\"product",{"_index":216,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["nameexist",{"_index":531,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["nativ",{"_index":1836,"title":{},"body":{"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"classes/TsTableDataSource.html":{}}}],["natur",{"_index":3578,"title":{},"body":{"contributing.html":{}}}],["nav",{"_index":506,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["nav_width_buff",{"_index":522,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["navig",{"_index":476,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["navigation'},{'nam",{"_index":1151,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["navigation.compon",{"_index":2555,"title":{},"body":{"modules/TsNavigationModule.html":{}}}],["navigation.component.html",{"_index":513,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["navigation.component.scss",{"_index":514,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["navigation/navigation.modul",{"_index":695,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["navigationitembas",{"_index":469,"title":{"interfaces/NavigationItemBase.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["nb",{"_index":711,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["nbsp",{"_index":3126,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["necessari",{"_index":3598,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":145,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["nest",{"_index":1220,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{}}}],["never",{"_index":2059,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["new",{"_index":35,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"classes/Version.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["next",{"_index":1401,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["nextdirectionindex",{"_index":3034,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["nextpageicon",{"_index":2584,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["nextpageindex",{"_index":2625,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["nextpagetooltip",{"_index":2601,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["nextuniqueid",{"_index":847,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["ng_value_accessor",{"_index":395,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["ngafterviewinit",{"_index":321,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["ngmodel",{"_index":1581,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsTableComponent.html":{}}}],["ngmodel(v",{"_index":1606,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["ngmodul",{"_index":665,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["ngonchang",{"_index":1216,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"components/TsLoginFormComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["ngonchanges(chang",{"_index":1300,"title":{},"body":{"components/TsChart2Component.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["ngondestroy",{"_index":335,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["ngoninit",{"_index":560,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{}}}],["ngzone",{"_index":1288,"title":{},"body":{"components/TsChart2Component.html":{}}}],["node",{"_index":1807,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["non",{"_index":3078,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"contributing.html":{}}}],["none",{"_index":1053,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["noninfring",{"_index":3751,"title":{},"body":{"license.html":{}}}],["noop",{"_index":1645,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["noresult",{"_index":3397,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["normal",{"_index":1431,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["northamerica",{"_index":1416,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["note",{"_index":387,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["note(b",{"_index":1253,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["noth",{"_index":3500,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["notic",{"_index":1915,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"license.html":{}}}],["notifi",{"_index":156,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["notuniqu",{"_index":3396,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["now",{"_index":319,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{}}}],["nowrap",{"_index":1254,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["nowrap=\"tru",{"_index":3194,"title":{},"body":{"components/TsTableComponent.html":{}}}],["npm",{"_index":3716,"title":{},"body":{"index.html":{}}}],["null",{"_index":436,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsConfirmationDirective.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":260,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["number.pip",{"_index":2698,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["number.pipe.t",{"_index":2827,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["number.pipe.ts:12",{"_index":2830,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["number/round",{"_index":2697,"title":{},"body":{"modules/TsPipesModule.html":{},"pipes/TsRoundNumberPipe.html":{}}}],["number_only_regex",{"_index":401,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["number_with_decimal_regex",{"_index":404,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["numberofmissingcolumn",{"_index":941,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["numbers/currency/percentag",{"_index":440,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["numbersvalid",{"_index":3462,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["object",{"_index":268,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{}}}],["object.assign({inputel",{"_index":454,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["observ",{"_index":1683,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["obtain",{"_index":3737,"title":{},"body":{"license.html":{}}}],["occur",{"_index":2781,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsTableDataSource.html":{},"components/TsValidationMessagesComponent.html":{}}}],["offer",{"_index":3366,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["old",{"_index":3181,"title":{},"body":{"components/TsTableComponent.html":{}}}],["on",{"_index":1447,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["onblur",{"_index":1613,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["onc",{"_index":868,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{}}}],["onchang",{"_index":392,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["onchangecallback",{"_index":1611,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["onclick(ev",{"_index":1705,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ondestroy",{"_index":170,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["oninit",{"_index":480,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{}}}],["oninput($event.target.valu",{"_index":423,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["onres",{"_index":558,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["onscroll(ev",{"_index":965,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["onto",{"_index":2336,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["ontouch",{"_index":425,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["ontouchedcallback",{"_index":1612,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["op",{"_index":3282,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["opac",{"_index":1088,"title":{},"body":{"components/TsCardComponent.html":{}}}],["open",{"_index":2009,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{},"index.html":{}}}],["open/clos",{"_index":3558,"title":{},"body":{"contributing.html":{}}}],["open_in_new",{"_index":2253,"title":{},"body":{"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{}}}],["opento",{"_index":2027,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["oper",{"_index":3573,"title":{},"body":{"contributing.html":{}}}],["option",{"_index":22,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"miscellaneous/typealiases.html":{}}}],["option.dis",{"_index":2791,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["optionremov",{"_index":308,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["optionremoved)=\"myremoved($ev",{"_index":221,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["options(valu",{"_index":2775,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["options.chart.events[eventnam",{"_index":1528,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["options.interfac",{"_index":1495,"title":{},"body":{"classes/TsChartEvent.html":{},"modules/TsChartModule.html":{}}}],["options.plotoptions.series.events[eventnam",{"_index":1533,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["options.plotoptions.series.point.events[eventnam",{"_index":1536,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["optionselect",{"_index":307,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["optionselected)=\"myselected($ev",{"_index":220,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["optiontyp",{"_index":91,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["order",{"_index":1331,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"injectables/TsDropProtectionService.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["origin",{"_index":1692,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{}}}],["originalev",{"_index":1491,"title":{},"body":{"classes/TsChartEvent.html":{}}}],["origini",{"_index":1713,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["originx",{"_index":1712,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["other",{"_index":3647,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":3141,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{},"license.html":{}}}],["out",{"_index":313,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"modules/TsValidationMessagesModule.html":{},"contributing.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":2171,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["outlin",{"_index":3552,"title":{},"body":{"contributing.html":{}}}],["output",{"_index":171,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["output('tssortchang",{"_index":3011,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["over",{"_index":1438,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["overlap",{"_index":279,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{}}}],["overlay",{"_index":1673,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"index.html":{}}}],["overlay'},{'nam",{"_index":1146,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["overlay.compon",{"_index":2346,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{}}}],["overlay.component.scss",{"_index":2319,"title":{},"body":{"components/TsLoadingOverlayComponent.html":{}}}],["overlay.component.t",{"_index":2318,"title":{},"body":{"components/TsLoadingOverlayComponent.html":{}}}],["overlay.direct",{"_index":2367,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{}}}],["overlay.directive.t",{"_index":2320,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:101",{"_index":2339,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:114",{"_index":2338,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:35",{"_index":2344,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:40",{"_index":2343,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:46",{"_index":2334,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:59",{"_index":2332,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:88",{"_index":2341,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.modul",{"_index":690,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["overlay.module.t",{"_index":2366,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{}}}],["overlay/load",{"_index":689,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{}}}],["overlay__panel",{"_index":1719,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overlayconfig",{"_index":1695,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overlayi",{"_index":1715,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overlaymodul",{"_index":1756,"title":{},"body":{"modules/TsConfirmationModule.html":{}}}],["overlayref",{"_index":1669,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overlayx",{"_index":1714,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overrid",{"_index":31,"title":{},"body":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["overridden",{"_index":163,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["overriden",{"_index":1384,"title":{},"body":{"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["overview",{"_index":3567,"title":{"overview.html":{}},"body":{"contributing.html":{},"overview.html":{}}}],["overwrit",{"_index":1328,"title":{},"body":{"components/TsChart2Component.html":{}}}],["packag",{"_index":3621,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":961,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsLinkComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"index.html":{}}}],["page.valu",{"_index":2651,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagenumb",{"_index":2674,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pages.find((pag",{"_index":2663,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagesarray",{"_index":2588,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagescount",{"_index":2660,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pageselect",{"_index":2621,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagevalu",{"_index":2675,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagin",{"_index":2558,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"index.html":{}}}],["paginator'},{'nam",{"_index":1153,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["paginator.compon",{"_index":2686,"title":{},"body":{"modules/TsPaginatorModule.html":{}}}],["paginator.component.html",{"_index":2571,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginator.component.scss",{"_index":2572,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginator/paginator.modul",{"_index":696,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsTableModule.html":{}}}],["paginatorarray",{"_index":2671,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginatorarray.push",{"_index":2677,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginatorarray.sort((a",{"_index":2678,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginatormessagetempl",{"_index":2610,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["panelclass",{"_index":1718,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["param",{"_index":336,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["paramet",{"_index":18,"title":{},"body":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"classes/TsChartEvent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{}}}],["parent",{"_index":1222,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"components/TsIconButtonComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["parentintl",{"_index":3139,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["parseint(value.split",{"_index":3502,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["parseint(value.split(':')[0",{"_index":1100,"title":{},"body":{"components/TsCardComponent.html":{}}}],["parseint(value.split(':')[1",{"_index":1102,"title":{},"body":{"components/TsCardComponent.html":{}}}],["part",{"_index":2501,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["partial",{"_index":2676,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["particular",{"_index":3750,"title":{},"body":{"license.html":{}}}],["pass",{"_index":72,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["password",{"_index":381,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["password_minlength",{"_index":2378,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["passwordmessag",{"_index":3376,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["passwordvalid",{"_index":3464,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["past",{"_index":821,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsTableComponent.html":{}}}],["pastedcolumncount",{"_index":942,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["pastedrowid",{"_index":949,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["patch",{"_index":3511,"title":{},"body":{"classes/Version.html":{},"contributing.html":{}}}],["path",{"_index":2824,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["pattern",{"_index":3382,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["peet&#x1f3a8",{"_index":3714,"title":{},"body":{"index.html":{}}}],["peopl",{"_index":3695,"title":{},"body":{"index.html":{}}}],["per",{"_index":1448,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["percent",{"_index":1432,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["percentag",{"_index":376,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["percentage.tofixed(2",{"_index":1105,"title":{},"body":{"components/TsCardComponent.html":{}}}],["perform",{"_index":1467,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["perhap",{"_index":3585,"title":{},"body":{"contributing.html":{}}}],["permiss",{"_index":3731,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3742,"title":{},"body":{"license.html":{}}}],["perpag",{"_index":2669,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["person",{"_index":3736,"title":{},"body":{"license.html":{}}}],["phone",{"_index":370,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["pick",{"_index":2044,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"components/TsReactiveFormBaseComponent.html":{}}}],["pie",{"_index":1339,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["pipe",{"_index":99,"title":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"pipes/TsDatePipe.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"index.html":{},"overview.html":{}}}],["pipes/pipes.modul",{"_index":698,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["pipetransform",{"_index":1854,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["place",{"_index":505,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"miscellaneous/typealiases.html":{}}}],["placehold",{"_index":1647,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{},"classes/Version.html":{}}}],["placeholder/label",{"_index":280,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["pleas",{"_index":3538,"title":{},"body":{"contributing.html":{}}}],["plot",{"_index":1397,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["plotband",{"_index":1389,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["plotopt",{"_index":1477,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["plugin",{"_index":3722,"title":{},"body":{"index.html":{}}}],["point",{"_index":1410,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["point'},{'nam",{"_index":1181,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["point.direct",{"_index":1505,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"modules/TsChartModule.html":{},"directives/TsChartSeriesDirective.html":{}}}],["pointdirect",{"_index":1524,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["pointdirective[eventname].emit(new",{"_index":1537,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["pointev",{"_index":1519,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["pointevents.foreach((eventnam",{"_index":1535,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["pointformatt",{"_index":1446,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["pointstart",{"_index":1478,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["pop",{"_index":1690,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"index.html":{}}}],["portal",{"_index":2340,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["portion",{"_index":1880,"title":{},"body":{"interfaces/TsDateRange.html":{},"license.html":{}}}],["posit",{"_index":1433,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["positionstrategi",{"_index":1709,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["possibl",{"_index":1097,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["postal",{"_index":377,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["potenti",{"_index":278,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["pr",{"_index":3535,"title":{},"body":{"contributing.html":{}}}],["pray",{"_index":3548,"title":{},"body":{"contributing.html":{}}}],["preced",{"_index":2750,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["precis",{"_index":2829,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{},"index.html":{}}}],["predic",{"_index":2184,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["prefix",{"_index":1007,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"contributing.html":{}}}],["prepend",{"_index":1450,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["present",{"_index":1014,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsMenuComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsValidationMessagesComponent.html":{}}}],["preservewhitespac",{"_index":2174,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["prevent",{"_index":2018,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"contributing.html":{}}}],["prevent(",{"_index":2087,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["previou",{"_index":332,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["previouspageicon",{"_index":2582,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["previouspagetooltip",{"_index":2600,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["primari",{"_index":203,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsToggleComponent.html":{},"miscellaneous/typealiases.html":{}}}],["pristin",{"_index":515,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["pristineitem",{"_index":517,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["privat",{"_index":247,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["problem",{"_index":3532,"title":{},"body":{"contributing.html":{}}}],["process",{"_index":1878,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsTableDataSource.html":{}}}],["programmat",{"_index":1553,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["progress",{"_index":60,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"index.html":{}}}],["prohibit",{"_index":2011,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["project",{"_index":3557,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["prompt",{"_index":1831,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["properti",{"_index":12,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/Mask.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"classes/Version.html":{}}}],["propertynam",{"_index":3428,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["propos",{"_index":3549,"title":{},"body":{"contributing.html":{}}}],["protect",{"_index":854,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"injectables/TsDropProtectionService.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["protection.servic",{"_index":2115,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["protection.service.t",{"_index":2082,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["protection.service.ts:18",{"_index":2086,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["protection.service.ts:30",{"_index":2090,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["protection.service.ts:46",{"_index":2088,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["protection.service.ts:7",{"_index":2085,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["provid",{"_index":249,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"contributing.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["proxi",{"_index":2488,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["public",{"_index":13,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{}}}],["publish",{"_index":3738,"title":{},"body":{"license.html":{}}}],["pull",{"_index":596,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["purpos",{"_index":2215,"title":{},"body":{"components/TsIconButtonComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"license.html":{}}}],["push",{"_index":585,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["qa",{"_index":201,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["queri",{"_index":83,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{}}}],["query)=\"myquery($ev",{"_index":223,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["querylist",{"_index":481,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["queryminlength",{"_index":2840,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["querysubject",{"_index":240,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["question",{"_index":3527,"title":{},"body":{"contributing.html":{}}}],["quick",{"_index":1933,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["quickli",{"_index":3545,"title":{},"body":{"contributing.html":{}}}],["r.split('\\t",{"_index":992,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["r\\n",{"_index":1005,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["radar",{"_index":1340,"title":{},"body":{"components/TsChart2Component.html":{},"miscellaneous/typealiases.html":{}}}],["radio",{"_index":699,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["rail",{"_index":2564,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["rang",{"_index":1803,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["range'},{'nam",{"_index":1131,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["range.compon",{"_index":2004,"title":{},"body":{"modules/TsDateRangeModule.html":{}}}],["range.component.html",{"_index":1929,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["range.component.scss",{"_index":1930,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["range.component.t",{"_index":1877,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["range.modul",{"_index":679,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["range.module.t",{"_index":2003,"title":{},"body":{"modules/TsDateRangeModule.html":{}}}],["range.selectnodecont",{"_index":1805,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["range.selectnodecontents(el",{"_index":1809,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["range/d",{"_index":678,"title":{},"body":{"modules/TerminusUIModule.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{}}}],["rangeendchange(ev",{"_index":2039,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["rangestartchange(ev",{"_index":2032,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["rare",{"_index":1587,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["rate",{"_index":3238,"title":{},"body":{"components/TsTableComponent.html":{}}}],["ratio",{"_index":1034,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["re",{"_index":2405,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["reach",{"_index":3237,"title":{},"body":{"components/TsTableComponent.html":{}}}],["reactiv",{"_index":1580,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsReactiveFormBaseComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["reactiveformsmodul",{"_index":742,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsInputModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{}}}],["read",{"_index":2162,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"contributing.html":{}}}],["readabl",{"_index":3200,"title":{},"body":{"components/TsTableComponent.html":{},"index.html":{}}}],["readm",{"_index":43,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["readonli",{"_index":834,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/Version.html":{}}}],["reason",{"_index":3600,"title":{},"body":{"contributing.html":{}}}],["rebas",{"_index":3602,"title":{},"body":{"contributing.html":{}}}],["receiv",{"_index":1973,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["recent",{"_index":2998,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["recommend",{"_index":3150,"title":{},"body":{"modules/TsSortModule.html":{},"modules/TsTableModule.html":{}}}],["record",{"_index":845,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["recordcounttoohighmessag",{"_index":2616,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordid",{"_index":811,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["recordsform",{"_index":871,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["recordsperpag",{"_index":2591,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsperpagechang",{"_index":2622,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsperpagechoic",{"_index":2617,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsperpageupdated(select",{"_index":2658,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsremain",{"_index":2672,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsselectlabel",{"_index":2619,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recreat",{"_index":2031,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["redirect",{"_index":2395,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["redraw",{"_index":1511,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["refer",{"_index":79,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartSeriesDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["refin",{"_index":2579,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["regard",{"_index":2569,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["regardless",{"_index":3196,"title":{},"body":{"components/TsTableComponent.html":{}}}],["regex",{"_index":459,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"injectables/TsValidationMessageService.html":{}}}],["regexp",{"_index":363,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["regexp(regex",{"_index":462,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["regexp|str",{"_index":407,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["regist",{"_index":1633,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["register(sort",{"_index":3014,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["registeronchang",{"_index":1614,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["registeronchange(fn",{"_index":445,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["registerontouch",{"_index":1615,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["registerontouched(fn",{"_index":448,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["regular",{"_index":2880,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["reiniti",{"_index":1302,"title":{},"body":{"components/TsChart2Component.html":{}}}],["rel",{"_index":2362,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["relat",{"_index":3581,"title":{},"body":{"contributing.html":{}}}],["releas",{"_index":3599,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["reli",{"_index":1588,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"index.html":{}}}],["remain",{"_index":2668,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["rememb",{"_index":2371,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"index.html":{}}}],["rememberm",{"_index":2410,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["remot",{"_index":3609,"title":{},"body":{"contributing.html":{}}}],["remov",{"_index":152,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"injectables/TsDropProtectionService.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["removed(chip",{"_index":151,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["renam",{"_index":1264,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["render",{"_index":1015,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsMenuComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsValidationMessagesComponent.html":{}}}],["renderer.setelementstyle(elementref.nativeel",{"_index":1261,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["renderer2",{"_index":393,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["report",{"_index":3561,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["repositori",{"_index":3541,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["repres",{"_index":509,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{}}}],["reproduc",{"_index":3575,"title":{},"body":{"contributing.html":{}}}],["reproduct",{"_index":3542,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":3534,"title":{},"body":{"contributing.html":{}}}],["requestparam",{"_index":3254,"title":{},"body":{"components/TsTableComponent.html":{}}}],["requesturl",{"_index":3252,"title":{},"body":{"components/TsTableComponent.html":{}}}],["requir",{"_index":69,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{}}}],["requiredspac",{"_index":591,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["reset",{"_index":116,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resetform",{"_index":2380,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["resetselect",{"_index":1765,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["resetvalu",{"_index":2064,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["resiz",{"_index":556,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["resourc",{"_index":2635,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["respond",{"_index":1077,"title":{},"body":{"components/TsCardComponent.html":{}}}],["respons",{"_index":112,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{}}}],["response['item",{"_index":115,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["rest",{"_index":2256,"title":{},"body":{"components/TsIconComponent.html":{}}}],["restrict",{"_index":820,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"license.html":{}}}],["result",{"_index":39,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["result.row",{"_index":993,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["resultsarray",{"_index":972,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["resultslength",{"_index":3219,"title":{},"body":{"components/TsTableComponent.html":{}}}],["retriev",{"_index":2756,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{}}}],["retrievevalue(opt",{"_index":2787,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["return",{"_index":109,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["revers",{"_index":2977,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["revert",{"_index":1984,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["rgba(0",{"_index":2744,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["right",{"_index":1091,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTooltipComponent.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["rippl",{"_index":1790,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["ripplecolor",{"_index":1763,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["roger",{"_index":2484,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["role",{"_index":1246,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["round",{"_index":2696,"title":{},"body":{"modules/TsPipesModule.html":{},"index.html":{}}}],["roundnumb",{"_index":2831,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["roundnumber(valu",{"_index":2832,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["routerlink",{"_index":496,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["routermodul",{"_index":2314,"title":{},"body":{"modules/TsLinkModule.html":{},"modules/TsNavigationModule.html":{}}}],["row",{"_index":809,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{}}}],["row${rowsthatdontfit",{"_index":931,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["row'",{"_index":2179,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTableComponent.html":{}}}],["row'},{'nam",{"_index":1137,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["row.get('column",{"_index":938,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["row/column",{"_index":848,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rowcount",{"_index":896,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rowcount(valu",{"_index":893,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rows.length).map((r",{"_index":995,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rows.slice(0",{"_index":994,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rowsthatdontfit",{"_index":929,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rule",{"_index":2182,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"contributing.html":{}}}],["run",{"_index":3593,"title":{},"body":{"contributing.html":{}}}],["rxj",{"_index":185,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":183,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{}}}],["rxjs/operators/catcherror",{"_index":3211,"title":{},"body":{"components/TsTableComponent.html":{}}}],["rxjs/operators/map",{"_index":3207,"title":{},"body":{"components/TsTableComponent.html":{}}}],["rxjs/operators/startwith",{"_index":3206,"title":{},"body":{"components/TsTableComponent.html":{}}}],["rxjs/operators/switchmap",{"_index":3209,"title":{},"body":{"components/TsTableComponent.html":{}}}],["s",{"_index":932,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["safe",{"_index":1985,"title":{},"body":{"interfaces/TsDateRange.html":{},"contributing.html":{}}}],["same",{"_index":2255,"title":{},"body":{"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"components/TsTableComponent.html":{}}}],["sanit",{"_index":367,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["sanitizevalu",{"_index":390,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["sankey",{"_index":1342,"title":{},"body":{"components/TsChart2Component.html":{},"miscellaneous/typealiases.html":{}}}],["sat/sun",{"_index":2013,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["saturday",{"_index":2019,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["save",{"_index":296,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChart2Component.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["scatter",{"_index":1428,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["scratch",{"_index":1422,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["screenread",{"_index":3137,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["screenshot",{"_index":3547,"title":{},"body":{"contributing.html":{}}}],["scrict",{"_index":1275,"title":{},"body":{"components/TsChart2Component.html":{}}}],["scroll",{"_index":962,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["scss",{"_index":3639,"title":{},"body":{"index.html":{}}}],["search",{"_index":117,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsIconComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["search'},{'nam",{"_index":1160,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["search.compon",{"_index":2909,"title":{},"body":{"modules/TsSearchModule.html":{}}}],["search.component.html",{"_index":2835,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["search.component.scss",{"_index":2834,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["search/search.modul",{"_index":702,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["searchform",{"_index":2841,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["searchqueri",{"_index":242,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["second",{"_index":831,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["secondari",{"_index":475,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["see",{"_index":1060,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["seed",{"_index":57,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{}}}],["seeddaterang",{"_index":1959,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["seedwithformvalues(formgroup",{"_index":1960,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["seem",{"_index":1938,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsReactiveFormBaseComponent.html":{}}}],["select",{"_index":56,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["select'},{'nam",{"_index":1162,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["select.compon",{"_index":2919,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["select/select.modul",{"_index":703,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsPaginatorModule.html":{}}}],["selectablechip",{"_index":244,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selectal",{"_index":3276,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["selectedd",{"_index":1954,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["selectedopt",{"_index":246,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selection)=\"myselection($ev",{"_index":222,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selection.addrange(rang",{"_index":1811,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["selection.removeallrang",{"_index":1810,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["selectionscontrol",{"_index":297,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selectionscontrol=\"myform.get('mycontrol",{"_index":217,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selectoption(ev",{"_index":338,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selector",{"_index":225,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["selector'},{'nam",{"_index":1157,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["selecttext",{"_index":1766,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["selecttext(el",{"_index":1777,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["sell",{"_index":3741,"title":{},"body":{"license.html":{}}}],["semant",{"_index":3715,"title":{},"body":{"index.html":{}}}],["send",{"_index":3279,"title":{},"body":{"classes/TsTableDataSource.html":{},"contributing.html":{}}}],["sens",{"_index":3654,"title":{},"body":{"index.html":{}}}],["sent",{"_index":104,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["sentenc",{"_index":2699,"title":{},"body":{"modules/TsPipesModule.html":{},"index.html":{}}}],["separ",{"_index":582,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["seri",{"_index":1335,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["series'},{'nam",{"_index":1183,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["series.direct",{"_index":1504,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"modules/TsChartModule.html":{}}}],["seriesdirect",{"_index":1523,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["seriesdirective[eventname].emit(new",{"_index":1534,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["seriesev",{"_index":1512,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["seriesevents.foreach((eventnam",{"_index":1532,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["servic",{"_index":10,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsCopyComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{}}}],["set",{"_index":120,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{}}}],["setaspectratio(valu",{"_index":1059,"title":{},"body":{"components/TsCardComponent.html":{}}}],["setbackground(valu",{"_index":2245,"title":{},"body":{"components/TsIconComponent.html":{}}}],["setborder(valu",{"_index":1063,"title":{},"body":{"components/TsCardComponent.html":{}}}],["setdata(data",{"_index":3285,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["setdirection(direct",{"_index":3063,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["setdisableclear(v",{"_index":3066,"title":{},"body":{"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{}}}],["setid(valu",{"_index":1066,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsCheckboxComponent.html":{}}}],["setischecked(v",{"_index":1653,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["setischecked(valu",{"_index":3335,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["setitems(valu",{"_index":2547,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["setngmodel(v",{"_index":1654,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["setsvgicon(valu",{"_index":2248,"title":{},"body":{"components/TsIconComponent.html":{}}}],["setter",{"_index":913,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["settheme(valu",{"_index":1069,"title":{},"body":{"components/TsCardComponent.html":{}}}],["settimeout",{"_index":2433,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["settl",{"_index":921,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["settsautofocus(valu",{"_index":767,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["settsloadingoverlay(valu",{"_index":2345,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["settsverticalspacing(valu",{"_index":3497,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["setup",{"_index":538,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["setupchart(chart",{"_index":1332,"title":{},"body":{"components/TsChart2Component.html":{}}}],["setupinitialarray",{"_index":2521,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["setupinitialarrays(item",{"_index":577,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["setupmask(cr",{"_index":450,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["setvalue(v",{"_index":2815,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["setvisualization(valu",{"_index":1313,"title":{},"body":{"components/TsChart2Component.html":{}}}],["shadow",{"_index":1042,"title":{},"body":{"components/TsCardComponent.html":{},"index.html":{}}}],["shall",{"_index":3745,"title":{},"body":{"license.html":{}}}],["shell",{"_index":3611,"title":{},"body":{"contributing.html":{}}}],["short",{"_index":1853,"title":{},"body":{"pipes/TsDatePipe.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["shortcut",{"_index":410,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["shouldfocu",{"_index":759,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["shouldoverlaptrigg",{"_index":2450,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["shouldset",{"_index":2348,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["shouldshowrecordsmessage(messag",{"_index":2656,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["show",{"_index":59,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{}}}],["show/hid",{"_index":2333,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["showcolumn",{"_index":2495,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["showform",{"_index":2379,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["shown",{"_index":867,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsTooltipComponent.html":{}}}],["showprogress",{"_index":137,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["showprogress]=\"inprogress",{"_index":218,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["showrecordsperpageselector",{"_index":2620,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["side",{"_index":1093,"title":{},"body":{"components/TsCardComponent.html":{},"classes/TsTableDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["signatur",{"_index":126,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["signifi",{"_index":2306,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["similar",{"_index":2490,"title":{},"body":{"components/TsMenuComponent.html":{},"contributing.html":{}}}],["simpl",{"_index":2468,"title":{},"body":{"components/TsMenuComponent.html":{},"components/TsTableComponent.html":{}}}],["simplechang",{"_index":394,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsChart2Component.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["simpli",{"_index":1087,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["singl",{"_index":493,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}}}],["site",{"_index":2307,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["size",{"_index":2103,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["skipself",{"_index":1228,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["small",{"_index":2492,"title":{},"body":{"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["small(valu",{"_index":2778,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["smaller",{"_index":3404,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["smallest",{"_index":1454,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["softwar",{"_index":3729,"title":{},"body":{"license.html":{}}}],["solut",{"_index":3648,"title":{},"body":{"index.html":{}}}],["somehow",{"_index":311,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["someth",{"_index":317,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["sometim",{"_index":3192,"title":{},"body":{"components/TsTableComponent.html":{}}}],["sort",{"_index":1164,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["sort(sort",{"_index":3022,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sort.direct",{"_index":3070,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{}}}],["sort/sort.modul",{"_index":704,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsTableModule.html":{}}}],["sort=${sort}&order=${order}&page=${pag",{"_index":3255,"title":{},"body":{"components/TsTableComponent.html":{}}}],["sortabl",{"_index":2996,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortable.disableclear",{"_index":3030,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortable.id",{"_index":3015,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortable.start",{"_index":3025,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortbuttonlabel",{"_index":3131,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["sortchang",{"_index":2973,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["sortdescriptionlabel",{"_index":3132,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["sortdirectioncycl",{"_index":3032,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortdirectioncycle.indexof(this.direct",{"_index":3035,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortdirectioncycle.length",{"_index":3036,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortdirectioncycle[nextdirectionindex",{"_index":3037,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortord",{"_index":3039,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortorder.push",{"_index":3041,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortorder.revers",{"_index":3040,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{}}}],["source.t",{"_index":3259,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:19",{"_index":3272,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:24",{"_index":3274,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:30",{"_index":3273,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:38",{"_index":3275,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:43",{"_index":3286,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:46",{"_index":3284,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:48",{"_index":3269,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:65",{"_index":3277,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:80",{"_index":3280,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:86",{"_index":3281,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["space",{"_index":520,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsIconComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{}}}],["spacing.const",{"_index":3498,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["spacing.direct",{"_index":3157,"title":{},"body":{"modules/TsSpacingModule.html":{}}}],["spacing.directive.t",{"_index":3493,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["spacing.directive.ts:58",{"_index":3496,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["spacing.directive.ts:85",{"_index":3495,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["spacing/spacing.const",{"_index":843,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsConfirmationModalComponent.html":{}}}],["spacing/spacing.modul",{"_index":705,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{}}}],["span",{"_index":3344,"title":{},"body":{"components/TsTooltipComponent.html":{},"index.html":{}}}],["spawn",{"_index":1678,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["spec",{"_index":3616,"title":{},"body":{"contributing.html":{}}}],["specif",{"_index":489,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["specifi",{"_index":916,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["spend",{"_index":3563,"title":{},"body":{"contributing.html":{}}}],["spinner",{"_index":206,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsButtonModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"index.html":{}}}],["split",{"_index":574,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["splitarray",{"_index":583,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["stack",{"_index":1429,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["stackblitz",{"_index":3543,"title":{},"body":{"contributing.html":{}}}],["stand",{"_index":2498,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["standard",{"_index":2308,"title":{},"body":{"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsValidationMessageService.html":{}}}],["start",{"_index":106,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"index.html":{}}}],["startblur(d",{"_index":1995,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startcontrol",{"_index":1963,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startcontrol.valu",{"_index":1966,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startdat",{"_index":1911,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["startdate1",{"_index":1894,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startdate2",{"_index":1896,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startdatecontrol",{"_index":1945,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startdateselected(datepickerev",{"_index":1974,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["starter",{"_index":3544,"title":{},"body":{"contributing.html":{}}}],["startingview",{"_index":1950,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["startinitiald",{"_index":1901,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startmaxd",{"_index":1892,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startmind",{"_index":1893,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startplacehold",{"_index":1948,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startselect",{"_index":1886,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startvalu",{"_index":1965,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startwith",{"_index":3205,"title":{},"body":{"components/TsTableComponent.html":{}}}],["startwith(nul",{"_index":100,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["state",{"_index":1586,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{}}}],["static",{"_index":814,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["statu",{"_index":2952,"title":{},"body":{"classes/TsSelectedFile.html":{},"index.html":{}}}],["step",{"_index":1666,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"contributing.html":{},"index.html":{}}}],["stepper",{"_index":3673,"title":{},"body":{"index.html":{}}}],["still",{"_index":835,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"contributing.html":{}}}],["stop",{"_index":113,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["store",{"_index":241,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsImageDimensions.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{}}}],["stream",{"_index":85,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsConfirmationModalComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"classes/TsTableDataSource.html":{}}}],["stretch",{"_index":1396,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["stricter",{"_index":3173,"title":{},"body":{"components/TsTableComponent.html":{}}}],["string",{"_index":46,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stringifi",{"_index":2067,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["string|dat",{"_index":1867,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["structur",{"_index":808,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSelectedFile.html":{}}}],["style",{"_index":1047,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{}}}],["style.posit",{"_index":2327,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["stylesheet",{"_index":3688,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":229,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["sub",{"_index":2709,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["subject",{"_index":1745,"title":{},"body":{"components/TsConfirmationModalComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"license.html":{}}}],["sublicens",{"_index":3740,"title":{},"body":{"license.html":{}}}],["submiss",{"_index":2399,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"contributing.html":{}}}],["submit",{"_index":1907,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["subscrib",{"_index":82,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["subscribe((data",{"_index":3296,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["subscribe((queri",{"_index":333,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["subscribe((v",{"_index":923,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["subscribe(data",{"_index":3241,"title":{},"body":{"components/TsTableComponent.html":{}}}],["subscript",{"_index":3270,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["substanti",{"_index":3746,"title":{},"body":{"license.html":{}}}],["subtitl",{"_index":1480,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["success",{"_index":1780,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["successfulli",{"_index":2393,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"contributing.html":{}}}],["such",{"_index":2180,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsTableDataSource.html":{}}}],["suggest",{"_index":3582,"title":{},"body":{"contributing.html":{}}}],["suit",{"_index":3594,"title":{},"body":{"contributing.html":{}}}],["sunday",{"_index":2020,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["super",{"_index":1609,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["super(columndef",{"_index":1248,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["support",{"_index":349,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["supportsinteract",{"_index":1029,"title":{},"body":{"components/TsCardComponent.html":{}}}],["sure",{"_index":3550,"title":{},"body":{"contributing.html":{}}}],["svg",{"_index":3760,"title":{},"body":{"modules.html":{}}}],["svgicon",{"_index":2230,"title":{},"body":{"components/TsIconComponent.html":{}}}],["svgicon(valu",{"_index":2270,"title":{},"body":{"components/TsIconComponent.html":{}}}],["switchmap",{"_index":3208,"title":{},"body":{"components/TsTableComponent.html":{}}}],["switchmap((term",{"_index":101,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["system",{"_index":3574,"title":{},"body":{"contributing.html":{}}}],["t",{"_index":3268,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["tab",{"_index":2304,"title":{},"body":{"components/TsLinkComponent.html":{},"index.html":{}}}],["tabindex",{"_index":772,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsLinkComponent.html":{}}}],["tabl",{"_index":49,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{}}}],["table'",{"_index":3162,"title":{},"body":{"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["table'},{'nam",{"_index":1167,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["table.compon",{"_index":3307,"title":{},"body":{"modules/TsTableModule.html":{}}}],["table.component.scss",{"_index":3161,"title":{},"body":{"components/TsTableComponent.html":{}}}],["table/table.modul",{"_index":706,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["tablecompon",{"_index":3187,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tag",{"_index":3718,"title":{},"body":{"index.html":{}}}],["take",{"_index":323,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["talli",{"_index":568,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["target",{"_index":1813,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{}}}],["target.classnam",{"_index":1815,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.focu",{"_index":1827,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.remov",{"_index":1834,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.setselectionrange(0",{"_index":1828,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.height",{"_index":1824,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.left",{"_index":1819,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.posit",{"_index":1817,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.top",{"_index":1821,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.width",{"_index":1822,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.textcont",{"_index":1825,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.value.length",{"_index":1829,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["targetel",{"_index":1816,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["task",{"_index":2643,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["tasti",{"_index":2485,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["tbd",{"_index":3618,"title":{},"body":{"contributing.html":{}}}],["team",{"_index":2407,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"contributing.html":{},"index.html":{}}}],["tel",{"_index":379,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["tell",{"_index":2037,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["templat",{"_index":1011,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["templatecontext",{"_index":2593,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["templateref",{"_index":1051,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["templateurl",{"_index":227,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["term",{"_index":105,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["terminu",{"_index":5,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["terminus/ngx",{"_index":188,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsButtonModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"dependencies.html":{},"index.html":{}}}],["terminus/ui",{"_index":1316,"title":{},"body":{"components/TsChart2Component.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{}}}],["terminus/ui/helpers'contribut",{"_index":3692,"title":{},"body":{"index.html":{}}}],["terminus/ui/terminu",{"_index":3689,"title":{},"body":{"index.html":{}}}],["terminusuimodul",{"_index":620,"title":{"modules/TerminusUIModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules.html":{},"overview.html":{}}}],["ternari",{"_index":1363,"title":{},"body":{"components/TsChart2Component.html":{}}}],["test",{"_index":3475,"title":{},"body":{"injectables/TsValidatorsService.html":{},"contributing.html":{}}}],["text",{"_index":265,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["text/csv",{"_index":1009,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"miscellaneous/typealiases.html":{}}}],["textarea",{"_index":770,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCopyComponent.html":{}}}],["textcont",{"_index":1793,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["textmaskconfig",{"_index":435,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["textmaskinputel",{"_index":439,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["thank",{"_index":3607,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["that'",{"_index":3166,"title":{},"body":{"components/TsTableComponent.html":{},"contributing.html":{}}}],["that\\'",{"_index":2577,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["theme",{"_index":299,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/typealiases.html":{}}}],["theme(valu",{"_index":1108,"title":{},"body":{"components/TsCardComponent.html":{}}}],["theme.typ",{"_index":196,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["theme.types.t",{"_index":3791,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["theme=\"primari",{"_index":219,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["themselv",{"_index":2673,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["thing",{"_index":2733,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._background",{"_index":2269,"title":{},"body":{"components/TsIconComponent.html":{}}}],["this._bord",{"_index":1107,"title":{},"body":{"components/TsCardComponent.html":{}}}],["this._cdkcolumndef",{"_index":3099,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._cdkcolumndef.nam",{"_index":3100,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._columncount",{"_index":889,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._columnhead",{"_index":899,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._columnvalid",{"_index":906,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._currentpageindex",{"_index":2604,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this._data",{"_index":3290,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._data.next(data",{"_index":3288,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._data.valu",{"_index":3289,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._debouncedelay",{"_index":261,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this._direct",{"_index":3005,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this._disableclear",{"_index":3009,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this._formatmodelvaluefn",{"_index":2765,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._formatuilabelfn",{"_index":2758,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._formatuisublabelfn",{"_index":2762,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._id",{"_index":880,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._initiald",{"_index":2058,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this._ischeck",{"_index":1598,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["this._isdis",{"_index":3104,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._isvisu",{"_index":2770,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._iszerobas",{"_index":2597,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this._maxd",{"_index":2053,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this._maxrow",{"_index":884,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._mind",{"_index":2056,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this._minimumcharact",{"_index":283,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this._nam",{"_index":2773,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._opt",{"_index":2776,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._par",{"_index":1230,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["this._renderchangessubscript",{"_index":3293,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._renderchangessubscription.unsubscrib",{"_index":3294,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._renderdata",{"_index":3298,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._renderdata.next(data",{"_index":3297,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._rowcount",{"_index":894,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._smal",{"_index":2779,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._sort.act",{"_index":3107,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.deregister(thi",{"_index":3103,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.direct",{"_index":3108,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.dis",{"_index":3109,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.register(thi",{"_index":3101,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.sort(thi",{"_index":3105,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._statechanges.complet",{"_index":3013,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this._statechanges.next",{"_index":3012,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this._them",{"_index":1109,"title":{},"body":{"components/TsCardComponent.html":{}}}],["this._totalrecord",{"_index":2612,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this._uid",{"_index":881,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._updatechangesubscript",{"_index":3292,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._visu",{"_index":1349,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.act",{"_index":3023,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.addcolumnstorows(this.row",{"_index":943,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.addheaders(this.columncount",{"_index":901,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.addrows(neededrow",{"_index":946,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.addrows(this.rowcount",{"_index":918,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.allerror",{"_index":951,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.amchart",{"_index":1350,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amcharts.charts.chorddiagram",{"_index":1371,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amcharts.charts.piechart",{"_index":1366,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amcharts.charts.radarchart",{"_index":1368,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amcharts.charts.sankeydiagram",{"_index":1370,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amcharts.charts.treemap",{"_index":1369,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amcharts.charts.xychart",{"_index":1365,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amcharts.core.create(this.chartdiv.nativeel",{"_index":1364,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amcharts.maps.mapchart",{"_index":1367,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amchartsservice.amchart",{"_index":1351,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.appref",{"_index":2354,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.aspectratiopad",{"_index":1104,"title":{},"body":{"components/TsCardComponent.html":{}}}],["this.auto",{"_index":98,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.autosubmit",{"_index":2898,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.availablespac",{"_index":595,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.blobgenerated.emit(blob",{"_index":925,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.bodyportalhost",{"_index":2352,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.bodyportalhost.attach(this.loadingoverlayport",{"_index":2349,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.bodyportalhost.detach",{"_index":2350,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.bodyportalhost.dispos",{"_index":2361,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.bord",{"_index":1110,"title":{},"body":{"components/TsCardComponent.html":{}}}],["this.breakwidths.length",{"_index":566,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.breakwidths.push(totalspac",{"_index":572,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.breakwidths[this.visibleitemslength",{"_index":592,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.cancelled.emit(tru",{"_index":1728,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.change.emit(this.daterang",{"_index":1981,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.changed.emit(this.currentqueri",{"_index":2895,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.changedetectorref.detectchang",{"_index":562,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["this.changedetectorref.markforcheck",{"_index":1740,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.changepage(this.currentpageindex",{"_index":2642,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.chart",{"_index":1359,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.chart.dispos",{"_index":1360,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.chartinitialized.emit(chart",{"_index":1373,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.checkbox.check",{"_index":1601,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["this.checkpar",{"_index":1231,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["this.clearheadercel",{"_index":900,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.collecterror",{"_index":952,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.columncount",{"_index":919,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.columnhead",{"_index":902,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.comparatorfn",{"_index":289,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.componentfactoryresolv",{"_index":2353,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.cont",{"_index":1798,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.content.nativeel",{"_index":1799,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.content.nativeelement.innertext",{"_index":1800,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.context",{"_index":1497,"title":{},"body":{"classes/TsChartEvent.html":{}}}],["this.control",{"_index":3426,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.control.error",{"_index":3427,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.control.errors[propertynam",{"_index":3433,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.control.touch",{"_index":3432,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.createcurrentpagelabel(this.currentpageindex",{"_index":2640,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.createoverlay",{"_index":1706,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.createpagesarray(this.totalrecord",{"_index":2637,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.currentpagechanged(foundpag",{"_index":2653,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.currentpageindex",{"_index":2626,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.currentpagelabel",{"_index":2639,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.currentqueri",{"_index":2903,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.currentquery.length",{"_index":2900,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.datasource.data",{"_index":3242,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.dateformgroup",{"_index":1935,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.dateformgroup.get('endd",{"_index":1936,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.dateformgroup.get('startd",{"_index":1946,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.debouncedemit(thi",{"_index":2901,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.default_high_record_messag",{"_index":2595,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.default_max_prefered_record",{"_index":2608,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.default_per_pag",{"_index":2592,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.default_records_per_page_opt",{"_index":2618,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.defaultcolumncount",{"_index":890,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.defaultmaxrow",{"_index":885,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.defaultopen",{"_index":2511,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.defaultrowcount",{"_index":895,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.deleterow(pastedrowid",{"_index":945,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.destroychart",{"_index":1357,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.determineimagedimens",{"_index":2147,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.determineposition(posit",{"_index":2360,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.dimens",{"_index":2155,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.direct",{"_index":3024,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.dis",{"_index":3110,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this.disableclear",{"_index":3031,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.dismissoverlay",{"_index":1708,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.document.body.appendchild(target",{"_index":1826,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.document.createelement('textarea",{"_index":1814,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.document.createrang",{"_index":1808,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.document.execcommand('copi",{"_index":1833,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.documentservice.docu",{"_index":1782,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.elementref",{"_index":1711,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.elementref.nativeel",{"_index":452,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsAutofocusDirective.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["this.endd",{"_index":1932,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.enddatecontrol",{"_index":1989,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.enddatecontrol.setvalue(datepickerevent.valu",{"_index":1990,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endinitiald",{"_index":1957,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmind",{"_index":1982,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(d",{"_index":1996,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(datepickerevent.valu",{"_index":1976,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(startvalu",{"_index":1970,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(this.endmind",{"_index":1983,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(undefin",{"_index":1986,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endselected.emit(datepickerevent.valu",{"_index":1991,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.exampledatabas",{"_index":3221,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.exampledatabase.getrepoissu",{"_index":3227,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.fallbackenddatecontrol",{"_index":1937,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.fallbackstartdatecontrol",{"_index":1947,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.file.nam",{"_index":2146,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.file.typ",{"_index":2142,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.filereader.readasdataurl(this.fil",{"_index":2163,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.filereader.result",{"_index":2153,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.firstpageindex",{"_index":2627,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.formatmodelvaluefn",{"_index":2793,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.formbuilder.array",{"_index":873,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.formbuilder.array([tru",{"_index":2496,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.formbuilder.group",{"_index":872,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["this.formbuilder.group(this.form_group",{"_index":2413,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["this.formcontrol",{"_index":2784,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.formcontrol.valuechang",{"_index":2785,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.formtwo.get('endd",{"_index":2033,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.formtwo.get('startd",{"_index":2040,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.generateblob(v",{"_index":924,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.generatebreakwidth",{"_index":545,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.getnextsortdirection(sort",{"_index":3027,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.hasprotect",{"_index":2091,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.hasselect",{"_index":1812,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.headercel",{"_index":944,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.headercells.controls[index",{"_index":958,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.headercells.controls[index].valu",{"_index":959,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.hiddenitems.getvalu",{"_index":602,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.hiddenitems.next(splitarrays.tru",{"_index":587,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.hiddenitems.next(updatedhiddenarray",{"_index":605,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.host.clickevent.emit(this.host.originalclickev",{"_index":1738,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.host.interceptclick",{"_index":1707,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.host.showprogress",{"_index":1734,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.http.get(`${github_api_endpoint}/search/users?q=${term",{"_index":110,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.http.get(`${requesturl}${requestparam",{"_index":3257,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.i",{"_index":1445,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["this.id",{"_index":917,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this.init(this.visu",{"_index":1354,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.initi",{"_index":2630,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.initiald",{"_index":2063,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.initialvalu",{"_index":2893,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.injector",{"_index":2355,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.innervalu",{"_index":2820,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["this.inprogress",{"_index":107,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.input_debounce_tim",{"_index":2871,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.inputel",{"_index":451,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["this.isdis",{"_index":2790,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.isinprogress",{"_index":138,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.iszerobas",{"_index":2624,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.loadingoverlayport",{"_index":2356,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.loginform",{"_index":2428,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["this.major",{"_index":3518,"title":{},"body":{"classes/Version.html":{}}}],["this.maximumvalidationmessag",{"_index":989,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.maxrow",{"_index":928,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.mimetyp",{"_index":2141,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.minimumcharact",{"_index":329,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.minor",{"_index":3520,"title":{},"body":{"classes/Version.html":{}}}],["this.modalinst",{"_index":1731,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.modalinstance.confirm.subscribe((shouldproce",{"_index":1736,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.multipl",{"_index":350,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.mydatasourc",{"_index":3168,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.mydatasource.data",{"_index":3169,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.myform.get('daterange.startd",{"_index":1922,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.nam",{"_index":2145,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.onchang",{"_index":446,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["this.onchangecallback",{"_index":2823,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["this.onchangecallback(v",{"_index":2821,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["this.ontouch",{"_index":449,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["this.ontouchedcallback",{"_index":2822,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["this.optionselected.emit(event.option.valu",{"_index":353,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.originalev",{"_index":1496,"title":{},"body":{"classes/TsChartEvent.html":{}}}],["this.overlay.create(overlayconfig",{"_index":1721,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlay.position().connectedto",{"_index":1710,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlayref",{"_index":1720,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlayref._keydownevents.pip",{"_index":1724,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlayref.attach(userprofileportal).inst",{"_index":1732,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlayref.dispos",{"_index":1739,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.pagesarray",{"_index":2636,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.pagesarray.length",{"_index":2629,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.pageselect.emit(pag",{"_index":2646,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.paginator.currentpageindex",{"_index":3223,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.paginator.pageselect",{"_index":3225,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.paginator.recordsperpag",{"_index":3230,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.paginator.recordsperpagechang",{"_index":3226,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.patch",{"_index":3522,"title":{},"body":{"classes/Version.html":{}}}],["this.percentag",{"_index":1440,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["this.percentage|point|series|total|x|i",{"_index":1423,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["this.point",{"_index":1441,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["this.posit",{"_index":2359,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.prev",{"_index":2093,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.pristineitem",{"_index":543,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.query.next(queri",{"_index":334,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.querysubject.pip",{"_index":324,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.recordcounttoohighmessag",{"_index":2632,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.recordsform.get('head",{"_index":877,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsform.get('record",{"_index":878,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsform.setcontrol('head",{"_index":1000,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsform.setcontrol('record",{"_index":998,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsform.valuechanges.pip",{"_index":920,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsperpag",{"_index":2638,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.recordsperpagechange.emit(select",{"_index":2659,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.resetform",{"_index":2426,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["this.resetsearch",{"_index":351,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.resultslength",{"_index":3233,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.retrievevalue(opt",{"_index":2792,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.rows.insert(indextoinjectat",{"_index":934,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.rows.length",{"_index":927,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.rows.push(createdrow",{"_index":936,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.searchform.patchvalu",{"_index":2894,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.searchform.valid",{"_index":2899,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.searchform.value.queri",{"_index":2891,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.searchform.value.query.trim",{"_index":2892,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.seeddaterange(this.startinitiald",{"_index":1956,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.seedwithformvalues(this.dateformgroup",{"_index":1958,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.selecteddate.emit(this.daterang",{"_index":1980,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.selectedopt",{"_index":302,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectedoptions.indexof(opt",{"_index":358,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectedoptions.push(select",{"_index":348,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selection.emit(this.selectedopt",{"_index":354,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectionscontrol",{"_index":304,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectionscontrol.setvalu",{"_index":305,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectionscontrol.setvalue(this.selectedopt",{"_index":306,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.seri",{"_index":1442,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["this.setduplicateerror(this.selectionscontrol",{"_index":346,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.setupinitialarrays(this.pristineitem",{"_index":544,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.shouldfocu",{"_index":776,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["this.showform",{"_index":2427,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["this.siz",{"_index":2143,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.sort.act",{"_index":3228,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.sort.direct",{"_index":3229,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.sort.sortchange.subscrib",{"_index":3190,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.sortables.delete(sortable.id",{"_index":3021,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.sortables.has(sortable.id",{"_index":3016,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.sortables.set(sortable.id",{"_index":3018,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.sortchange.next({act",{"_index":3028,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.start",{"_index":3026,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.startd",{"_index":1931,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startdatecontrol",{"_index":1977,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startdatecontrol.setvalue(datepickerevent.valu",{"_index":1978,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startinitiald",{"_index":1969,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxd",{"_index":1992,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(d",{"_index":1998,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(datepickerevent.valu",{"_index":1988,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(endvalu",{"_index":1971,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(this.startmaxd",{"_index":1993,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(undefin",{"_index":1994,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startselected.emit(datepickerevent.valu",{"_index":1979,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.submitted.emit({queri",{"_index":2902,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.templatecontext.$implicit",{"_index":2631,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.textmaskconfig",{"_index":455,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["this.textmaskinputel",{"_index":456,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["this.toomanyrowsmessag",{"_index":930,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.tot",{"_index":1443,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["this.totalrecord",{"_index":2641,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.trigg",{"_index":254,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.trigger.openmenu",{"_index":2512,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.trigger_icon_default",{"_index":2509,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.trigger_icon_util",{"_index":2510,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.triggericon",{"_index":2508,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.triggertyp",{"_index":2506,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.typeconstraint",{"_index":2148,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.typeconstraint.indexof(this.file.typ",{"_index":2149,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.uiformatfn",{"_index":271,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.updateallrowid",{"_index":950,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.updatelist",{"_index":546,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.us",{"_index":97,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.user.fullnam",{"_index":533,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.user.fullname.length",{"_index":532,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.validateimagedimensions(this.imagedimensionconstraint",{"_index":2159,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.validateimmedi",{"_index":3430,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.validateonchang",{"_index":3431,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.validationmessageservice.getvalidatorerrormessage(propertynam",{"_index":3434,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.validations.filetyp",{"_index":2150,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.validations.imagedimens",{"_index":2158,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.validatorsservice.email",{"_index":2409,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["this.validatorsservice.greaterthan(10",{"_index":3472,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["this.validatorsservice.maxdate(event.valu",{"_index":2041,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.validatorsservice.mindate(event.valu",{"_index":2036,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.validatorsservice.url",{"_index":830,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.valu",{"_index":1600,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["this.verifyisdateobject(valu",{"_index":2054,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.visibleitems.getvalu",{"_index":598,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visibleitems.getvalue().length",{"_index":536,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visibleitems.next(splitarrays.fals",{"_index":586,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visibleitems.next(updatedvisiblearray",{"_index":615,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visibleitemslist.nativeelement.offsetwidth",{"_index":524,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visiblelinkelement.foreach((item",{"_index":567,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visu",{"_index":1375,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.window.getselect",{"_index":1802,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.window.prompt('copi",{"_index":1838,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.windowservice.nativewindow",{"_index":1791,"title":{},"body":{"components/TsCopyComponent.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["this.windowservice.nativewindow.addeventlistener('dragov",{"_index":2092,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.windowservice.nativewindow.addeventlistener('drop",{"_index":2094,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.windowservice.nativewindow.removeeventlistener('dragov",{"_index":2095,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.windowservice.nativewindow.removeeventlistener('drop",{"_index":2096,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.writevalue(v",{"_index":2786,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.x",{"_index":1444,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["this.zone.runoutsideangular",{"_index":1358,"title":{},"body":{"components/TsChart2Component.html":{}}}],["though",{"_index":1483,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["thought",{"_index":3656,"title":{},"body":{"index.html":{}}}],["three",{"_index":1884,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["through",{"_index":133,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsChartPointDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["throughout",{"_index":3614,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":274,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"directives/TsCardTitleDirective.html":{},"pipes/TsDatePipe.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["thrown",{"_index":3568,"title":{},"body":{"contributing.html":{}}}],["thursday",{"_index":1862,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["tick",{"_index":1393,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["tie",{"_index":1885,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["time",{"_index":817,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPipesModule.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"index.html":{}}}],["timeout",{"_index":2429,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["timestamp",{"_index":1866,"title":{},"body":{"pipes/TsDatePipe.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["titl",{"_index":956,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsMenuComponent.html":{},"modules/TsPipesModule.html":{},"components/TsTableComponent.html":{},"index.html":{}}}],["title.direct",{"_index":1211,"title":{},"body":{"modules/TsCardModule.html":{}}}],["title.directive.t",{"_index":1213,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["title.directive.ts:21",{"_index":1227,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["title.directive.ts:27",{"_index":1219,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["title.directive.ts:42",{"_index":1226,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["title.directive.ts:50",{"_index":1224,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["todo",{"_index":487,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{}}}],["toggl",{"_index":136,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"index.html":{}}}],["toggle'},{'nam",{"_index":1169,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["toggle.compon",{"_index":3342,"title":{},"body":{"modules/TsToggleModule.html":{}}}],["toggle.component.html",{"_index":2964,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["toggle.component.scss",{"_index":2965,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["toggle/toggle.modul",{"_index":707,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["token",{"_index":29,"title":{},"body":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{}}}],["tool",{"_index":193,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsButtonModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{},"dependencies.html":{},"index.html":{}}}],["tools/coercion",{"_index":189,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["tools/keycod",{"_index":1700,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["tooltip",{"_index":1421,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTooltipComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["tooltip'},{'nam",{"_index":1171,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tooltip.compon",{"_index":3362,"title":{},"body":{"modules/TsTooltipModule.html":{}}}],["tooltip.component.html",{"_index":3346,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["tooltip.component.scss",{"_index":3345,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["tooltip/tooltip.modul",{"_index":708,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCopyModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsPaginatorModule.html":{}}}],["tooltipposit",{"_index":3348,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["tooltipvalu",{"_index":3349,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["toomanyrowsmessag",{"_index":866,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["top",{"_index":1090,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsConfirmationDirective.html":{},"miscellaneous/typealiases.html":{}}}],["tort",{"_index":3759,"title":{},"body":{"license.html":{}}}],["total",{"_index":569,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["total_count",{"_index":3245,"title":{},"body":{"components/TsTableComponent.html":{}}}],["totalrecord",{"_index":2614,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["totalrecords(record",{"_index":2611,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["totalspac",{"_index":565,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["touch",{"_index":1631,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["trace",{"_index":3570,"title":{},"body":{"contributing.html":{}}}],["track",{"_index":1463,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCopyComponent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["trackbi",{"_index":131,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["transform",{"_index":1849,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["transform(valu",{"_index":1850,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["tree",{"_index":1012,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["treemap",{"_index":1341,"title":{},"body":{"components/TsChart2Component.html":{},"miscellaneous/typealiases.html":{}}}],["tri",{"_index":1832,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["triag",{"_index":3579,"title":{},"body":{"contributing.html":{}}}],["trigger",{"_index":256,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["trigger_icon_default",{"_index":2451,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["trigger_icon_util",{"_index":2452,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["triggerformreset",{"_index":2386,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["triggericon",{"_index":2453,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["triggertyp",{"_index":2458,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["true",{"_index":108,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["true;custom",{"_index":139,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["truncat",{"_index":987,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["truthi",{"_index":755,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ts",{"_index":226,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["ts_amcharts_token",{"_index":728,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{}}}],["ts_custom_icon",{"_index":2241,"title":{},"body":{"components/TsIconComponent.html":{},"miscellaneous/typealiases.html":{}}}],["ts_custom_icons.indexof(valu",{"_index":2272,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ts_sort_header_intl_provid",{"_index":3140,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{}}}],["ts_sort_header_intl_provider_factori",{"_index":3143,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["ts_sort_header_intl_provider_factory(parentintl",{"_index":3138,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["ts_space",{"_index":842,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsConfirmationModalComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{}}}],["ts_spacing.large[0",{"_index":1748,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["ts_spacing.small[0",{"_index":864,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["ts_spacing[typ",{"_index":3505,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["ts_spacing[type].length",{"_index":3506,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["tsamchartsservic",{"_index":718,"title":{"injectables/TsAmChartsService.html":{}},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"overview.html":{}}}],["tsamchartstoken",{"_index":722,"title":{"interfaces/TsAmChartsToken.html":{}},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{}}}],["tsaspectratiotyp",{"_index":1080,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsautocomplet",{"_index":232,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["tsautocompletecomparatorfn",{"_index":125,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"miscellaneous/typealiases.html":{}}}],["tsautocompletecompon",{"_index":96,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsautocompleteformatterfn",{"_index":142,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"miscellaneous/typealiases.html":{}}}],["tsautocompletemodul",{"_index":630,"title":{"modules/TsAutocompleteModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules.html":{},"overview.html":{}}}],["tsautocompleteselectedev",{"_index":199,"title":{"classes/TsAutocompleteSelectedEvent.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["tsautofocu",{"_index":758,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["tsautofocus(valu",{"_index":775,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["tsautofocus]'},{'nam",{"_index":1173,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsautofocusdirect",{"_index":751,"title":{"directives/TsAutofocusDirective.html":{}},"body":{"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsautofocusmodul",{"_index":631,"title":{"modules/TsAutofocusModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsInputModule.html":{},"modules.html":{},"overview.html":{}}}],["tsbutton",{"_index":1733,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["tsbuttonactiontyp",{"_index":2200,"title":{},"body":{"components/TsIconButtonComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"miscellaneous/typealiases.html":{}}}],["tsbuttoncompon",{"_index":790,"title":{},"body":{"modules/TsButtonModule.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsbuttonformattyp",{"_index":3774,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tsbuttonfunctiontyp",{"_index":2202,"title":{},"body":{"components/TsIconButtonComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"miscellaneous/typealiases.html":{}}}],["tsbuttonmodul",{"_index":632,"title":{"modules/TsButtonModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMenuModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["tscard",{"_index":1019,"title":{},"body":{"components/TsCardComponent.html":{}}}],["tscardborderopt",{"_index":1036,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tscardcompon",{"_index":1010,"title":{"components/TsCardComponent.html":{}},"body":{"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tscardmodul",{"_index":634,"title":{"modules/TsCardModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCardModule.html":{},"modules.html":{},"overview.html":{}}}],["tscardtitl",{"_index":1086,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{}}}],["tscardtitle]'},{'nam",{"_index":1175,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tscardtitledirect",{"_index":1174,"title":{"directives/TsCardTitleDirective.html":{}},"body":{"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tscelldef",{"_index":1238,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["tscelldef]'},{'nam",{"_index":1177,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tscelldefdirect",{"_index":1176,"title":{"directives/TsCellDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tscelldirect",{"_index":1178,"title":{"directives/TsCellDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tschart2",{"_index":1278,"title":{},"body":{"components/TsChart2Component.html":{}}}],["tschart2compon",{"_index":1119,"title":{"components/TsChart2Component.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tschart2modul",{"_index":1376,"title":{"modules/TsChart2Module.html":{}},"body":{"modules/TsChart2Module.html":{},"modules.html":{},"overview.html":{}}}],["tschart2visualizationopt",{"_index":1298,"title":{},"body":{"components/TsChart2Component.html":{},"miscellaneous/typealiases.html":{}}}],["tschartaxi",{"_index":1386,"title":{"interfaces/TsChartAxis.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["tschartaxisplotband",{"_index":1394,"title":{"interfaces/TsChartAxisPlotBand.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["tschartaxistyp",{"_index":1402,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["tschartcompon",{"_index":1121,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartEventOptions.html":{},"modules/TsChartModule.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tschartdata",{"_index":1470,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["tschartdataitem",{"_index":1461,"title":{"interfaces/TsChartDataItem.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["tschartev",{"_index":1487,"title":{"classes/TsChartEvent.html":{}},"body":{"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{}}}],["tschartevent(ev",{"_index":1531,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["tscharteventopt",{"_index":1498,"title":{"interfaces/TsChartEventOptions.html":{}},"body":{"interfaces/TsChartEventOptions.html":{}}}],["tschartlabelformatterfn",{"_index":1424,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["tschartmaptooltip",{"_index":1457,"title":{"interfaces/TsChartMapTooltip.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["tschartmaptyp",{"_index":1414,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["tschartmodul",{"_index":635,"title":{"modules/TsChartModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsChartModule.html":{},"modules.html":{},"overview.html":{}}}],["tschartobject",{"_index":1404,"title":{"interfaces/TsChartObject.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["tschartopt",{"_index":1471,"title":{"interfaces/TsChartOptions.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["tschartpointdirect",{"_index":1180,"title":{"directives/TsChartPointDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartEventOptions.html":{},"modules/TsChartModule.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tschartseriesdirect",{"_index":1182,"title":{"directives/TsChartSeriesDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartEventOptions.html":{},"modules/TsChartModule.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tschartstack",{"_index":1430,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["tscharttitl",{"_index":1437,"title":{"interfaces/TsChartTitle.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["tscharttooltip",{"_index":1439,"title":{"interfaces/TsChartTooltip.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["tschartvisualizationopt",{"_index":1425,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["tschartzon",{"_index":1458,"title":{"interfaces/TsChartZone.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["tscheckbox",{"_index":1594,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["tscheckboxchang",{"_index":1577,"title":{"classes/TsCheckboxChange.html":{}},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["tscheckboxcompon",{"_index":1123,"title":{"components/TsCheckboxComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tscheckboxmodul",{"_index":636,"title":{"modules/TsCheckboxModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsLoginFormModule.html":{},"modules.html":{},"overview.html":{}}}],["tscolumndef",{"_index":1263,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["tscolumndef]'},{'nam",{"_index":1185,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tscolumndefdirect",{"_index":1184,"title":{"directives/TsColumnDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsconfig.skiplibcheck",{"_index":1277,"title":{},"body":{"components/TsChart2Component.html":{}}}],["tsconfirm",{"_index":1667,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{}}}],["tsconfirmation]'},{'nam",{"_index":1187,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsconfirmationdirect",{"_index":1186,"title":{"directives/TsConfirmationDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsconfirmationmodalcompon",{"_index":1125,"title":{"components/TsConfirmationModalComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsconfirmationmodul",{"_index":637,"title":{"modules/TsConfirmationModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsConfirmationModule.html":{},"modules.html":{},"overview.html":{}}}],["tscopycompon",{"_index":1128,"title":{"components/TsCopyComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tscopymodul",{"_index":638,"title":{"modules/TsCopyModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCopyModule.html":{},"modules.html":{},"overview.html":{}}}],["tscsventri",{"_index":853,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["tscsventrycompon",{"_index":800,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tscsventrymodul",{"_index":633,"title":{"modules/TsCSVEntryModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules.html":{},"overview.html":{}}}],["tscsventryrecord",{"_index":806,"title":{"interfaces/TsCSVEntryRecord.html":{}},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["tscsvformcont",{"_index":844,"title":{"interfaces/TsCSVFormContents.html":{}},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["tsdate",{"_index":1848,"title":{},"body":{"pipes/TsDatePipe.html":{},"index.html":{}}}],["tsdatepickercompon",{"_index":1132,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsdatepickerinputev",{"_index":2005,"title":{"classes/TsDatepickerInputEvent.html":{}},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["tsdatepickermodul",{"_index":640,"title":{"modules/TsDatepickerModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules.html":{},"overview.html":{}}}],["tsdatepip",{"_index":1846,"title":{"pipes/TsDatePipe.html":{}},"body":{"pipes/TsDatePipe.html":{},"modules/TsPipesModule.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsdaterang",{"_index":1875,"title":{"interfaces/TsDateRange.html":{}},"body":{"interfaces/TsDateRange.html":{}}}],["tsdaterangecompon",{"_index":1130,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsdaterangemodul",{"_index":639,"title":{"modules/TsDateRangeModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsDateRangeModule.html":{},"modules.html":{},"overview.html":{}}}],["tsdatetyp",{"_index":1851,"title":{},"body":{"pipes/TsDatePipe.html":{},"miscellaneous/typealiases.html":{}}}],["tsdocumentservic",{"_index":837,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCopyComponent.html":{},"modules/TsFileUploadModule.html":{}}}],["tsdropprotectionservic",{"_index":2079,"title":{"injectables/TsDropProtectionService.html":{}},"body":{"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["tsfileacceptedmimetyp",{"_index":2124,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{}}}],["tsfileimagedimensionconstraint",{"_index":2106,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{}}}],["tsfileimagedimensioncontraint",{"_index":2098,"title":{"interfaces/TsFileImageDimensionContraint.html":{}},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"miscellaneous/typealiases.html":{}}}],["tsfileuploadcompon",{"_index":1134,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"modules/TsFileUploadModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsfileuploadmodul",{"_index":641,"title":{"modules/TsFileUploadModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsFileUploadModule.html":{},"modules.html":{},"overview.html":{}}}],["tsfilevalid",{"_index":2117,"title":{"interfaces/TsFileValidations.html":{}},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["tsheadercelldef",{"_index":1245,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["tsheadercelldef]'},{'nam",{"_index":1189,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsheadercelldefdirect",{"_index":1188,"title":{"directives/TsHeaderCellDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsheadercelldirect",{"_index":1190,"title":{"directives/TsHeaderCellDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsheaderrow",{"_index":2173,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsheaderrowcompon",{"_index":1136,"title":{"components/TsHeaderRowComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsheaderrowdef",{"_index":2181,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsheaderrowdef]'},{'nam",{"_index":1192,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsheaderrowdefdirect",{"_index":1191,"title":{"directives/TsHeaderRowDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsiconbuttoncompon",{"_index":1138,"title":{"components/TsIconButtonComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsiconbuttonmodul",{"_index":642,"title":{"modules/TsIconButtonModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["tsiconcompon",{"_index":1139,"title":{"components/TsIconComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsiconmodul",{"_index":643,"title":{"modules/TsIconModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsCopyModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsRadioGroupModule.html":{},"modules.html":{},"overview.html":{}}}],["tsimagedimens",{"_index":2123,"title":{"classes/TsImageDimensions.html":{}},"body":{"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{}}}],["tsimagedimensions(img.naturalwidth",{"_index":2156,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["tsinputautocompletetyp",{"_index":3781,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tsinputcompon",{"_index":1141,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsinputmodul",{"_index":644,"title":{"modules/TsInputModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsInputModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["tsinputtyp",{"_index":3783,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tslink",{"_index":2294,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["tslinkcompon",{"_index":1143,"title":{"components/TsLinkComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tslinkmodul",{"_index":645,"title":{"modules/TsLinkModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoginFormModule.html":{},"modules.html":{},"overview.html":{}}}],["tslint",{"_index":421,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["tslint:dis",{"_index":1265,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tslint:disable:no",{"_index":415,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["tslint:en",{"_index":1267,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tsloadingoverlay",{"_index":2321,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["tsloadingoverlay(valu",{"_index":2347,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["tsloadingoverlay]'},{'nam",{"_index":1194,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsloadingoverlaycompon",{"_index":1145,"title":{"components/TsLoadingOverlayComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsloadingoverlaydirect",{"_index":1193,"title":{"directives/TsLoadingOverlayDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsloadingoverlaymodul",{"_index":646,"title":{"modules/TsLoadingOverlayModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules.html":{},"overview.html":{}}}],["tsloginformcompon",{"_index":1147,"title":{"components/TsLoginFormComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsloginformmodul",{"_index":647,"title":{"modules/TsLoginFormModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{},"modules.html":{},"overview.html":{}}}],["tsloginformrespons",{"_index":2421,"title":{"interfaces/TsLoginFormResponse.html":{}},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["tsmask",{"_index":426,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["tsmask(valu",{"_index":441,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["tsmask]'},{'nam",{"_index":1195,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsmaskdirect",{"_index":419,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsmaskmodul",{"_index":648,"title":{"modules/TsMaskModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsMaskModule.html":{},"modules.html":{},"overview.html":{}}}],["tsmenucompon",{"_index":1149,"title":{"components/TsMenuComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsmenumodul",{"_index":649,"title":{"modules/TsMenuModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsMenuModule.html":{},"modules/TsPaginatorModule.html":{},"modules.html":{},"overview.html":{}}}],["tsmenupositiontypesi",{"_index":2464,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsmenupositiontypesx",{"_index":2462,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsmenutriggertyp",{"_index":2467,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationactionitem",{"_index":497,"title":{"interfaces/TsNavigationActionItem.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationcompon",{"_index":471,"title":{"components/TsNavigationComponent.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationitem",{"_index":500,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationlinkitem",{"_index":490,"title":{"interfaces/TsNavigationLinkItem.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationmodul",{"_index":650,"title":{"modules/TsNavigationModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsNavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["tsnavigationpayload",{"_index":502,"title":{"interfaces/TsNavigationPayload.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["tspaginatorcompon",{"_index":1152,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tspaginatormenuitem",{"_index":2556,"title":{"interfaces/TsPaginatorMenuItem.html":{}},"body":{"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["tspaginatormodul",{"_index":651,"title":{"modules/TsPaginatorModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tspipesmodul",{"_index":697,"title":{"modules/TsPipesModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsPipesModule.html":{},"modules.html":{},"overview.html":{}}}],["tsradiochang",{"_index":2705,"title":{"classes/TsRadioChange.html":{}},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["tsradiocompon",{"_index":2736,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["tsradioformatfn",{"_index":2737,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["tsradiogroup",{"_index":2741,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["tsradiogroupcompon",{"_index":1154,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsradiogroupmodul",{"_index":652,"title":{"modules/TsRadioGroupModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsRadioGroupModule.html":{},"modules.html":{},"overview.html":{}}}],["tsradioopt",{"_index":2730,"title":{"interfaces/TsRadioOption.html":{}},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["tsreactiveformbasecompon",{"_index":629,"title":{"components/TsReactiveFormBaseComponent.html":{}},"body":{"modules/TerminusUIModule.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsreactiveformbasecomponent:26",{"_index":1643,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:31",{"_index":1646,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:36",{"_index":1649,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:42",{"_index":1628,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:61",{"_index":1630,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:69",{"_index":1632,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:77",{"_index":1634,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:85",{"_index":1636,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsroundnumb",{"_index":2828,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{},"index.html":{}}}],["tsroundnumberpip",{"_index":2690,"title":{"pipes/TsRoundNumberPipe.html":{}},"body":{"modules/TsPipesModule.html":{},"pipes/TsRoundNumberPipe.html":{},"overview.html":{}}}],["tsrow",{"_index":2189,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsrowcompon",{"_index":1158,"title":{"components/TsRowComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsrowdef",{"_index":2186,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTableComponent.html":{}}}],["tsrowdef]'},{'nam",{"_index":1197,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsrowdefcolumn",{"_index":2187,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsrowdefdirect",{"_index":1196,"title":{"directives/TsRowDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsrowdefwhen",{"_index":2188,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tssearchcompon",{"_index":1159,"title":{"components/TsSearchComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tssearchmodul",{"_index":653,"title":{"modules/TsSearchModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["tssearchrespons",{"_index":2890,"title":{"interfaces/TsSearchResponse.html":{}},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["tsselectcompon",{"_index":1161,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"modules/TsSelectModule.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsselectedfil",{"_index":2134,"title":{"classes/TsSelectedFile.html":{}},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["tsselectformatfn",{"_index":3787,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tsselectmodul",{"_index":654,"title":{"modules/TsSelectModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsSelectModule.html":{},"modules.html":{},"overview.html":{}}}],["tssentencecas",{"_index":2955,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{},"index.html":{}}}],["tssentencecasepip",{"_index":2691,"title":{"pipes/TsSentenceCasePipe.html":{}},"body":{"modules/TsPipesModule.html":{},"pipes/TsSentenceCasePipe.html":{},"overview.html":{}}}],["tsslidetogglechang",{"_index":2959,"title":{"classes/TsSlideToggleChange.html":{}},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["tssort",{"_index":2972,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tssort]'},{'nam",{"_index":1199,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tssortabl",{"_index":2995,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortable'",{"_index":3000,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortableitem",{"_index":2989,"title":{"interfaces/TsSortableItem.html":{}},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortact",{"_index":3044,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["tssortanim",{"_index":3073,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortanimations.ind",{"_index":3085,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortanimations.indicatortoggl",{"_index":3088,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortanimations.leftpoint",{"_index":3086,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortanimations.rightpoint",{"_index":3087,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortbas",{"_index":2968,"title":{"classes/TsSortBase.html":{}},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortchang",{"_index":3045,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["tssortdirect",{"_index":1198,"title":{"directives/TsSortDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tssortdis",{"_index":2981,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortdisableclear",{"_index":2979,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssorthead",{"_index":3079,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortheaderbas",{"_index":3067,"title":{"classes/TsSortHeaderBase.html":{}},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortheadercompon",{"_index":1163,"title":{"components/TsSortHeaderComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tssortheaderintl",{"_index":2982,"title":{"injectables/TsSortHeaderIntl.html":{}},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortmodul",{"_index":655,"title":{"modules/TsSortModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tssortstart",{"_index":2978,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortstat",{"_index":2990,"title":{"interfaces/TsSortState.html":{}},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tsspacingmodul",{"_index":656,"title":{"modules/TsSpacingModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsSpacingModule.html":{},"modules.html":{},"overview.html":{}}}],["tsstylethemetyp",{"_index":194,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tstabl",{"_index":3160,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tstablecompon",{"_index":1166,"title":{"components/TsTableComponent.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tstabledatasourc",{"_index":3167,"title":{"classes/TsTableDataSource.html":{}},"body":{"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["tstabledatasource();simpli",{"_index":3178,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tstabledatasource(initial_data)4",{"_index":3175,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tstabledatasource(initial_data);an",{"_index":3172,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tstablemodul",{"_index":657,"title":{"modules/TsTableModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tstimeago",{"_index":3310,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{},"index.html":{}}}],["tstimeagopip",{"_index":2692,"title":{"pipes/TsTimeAgoPipe.html":{}},"body":{"modules/TsPipesModule.html":{},"pipes/TsTimeAgoPipe.html":{},"overview.html":{}}}],["tstitlecas",{"_index":3320,"title":{},"body":{"pipes/TsTitleCasePipe.html":{},"index.html":{}}}],["tstitlecasepip",{"_index":2693,"title":{"pipes/TsTitleCasePipe.html":{}},"body":{"modules/TsPipesModule.html":{},"pipes/TsTitleCasePipe.html":{},"overview.html":{}}}],["tstogglecompon",{"_index":1168,"title":{"components/TsToggleComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tstogglemodul",{"_index":658,"title":{"modules/TsToggleModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsToggleModule.html":{},"modules.html":{},"overview.html":{}}}],["tstooltipcompon",{"_index":1170,"title":{"components/TsTooltipComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tstooltipmodul",{"_index":659,"title":{"modules/TsTooltipModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCopyModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsTooltipModule.html":{},"modules.html":{},"overview.html":{}}}],["tstooltippositiontyp",{"_index":3353,"title":{},"body":{"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsuser",{"_index":484,"title":{"interfaces/TsUser.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["tsvalidationmessagescompon",{"_index":1172,"title":{"components/TsValidationMessagesComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["tsvalidationmessageservic",{"_index":3363,"title":{"injectables/TsValidationMessageService.html":{}},"body":{"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["tsvalidationmessagesmodul",{"_index":660,"title":{"modules/TsValidationMessagesModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSelectModule.html":{},"modules/TsValidationMessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["tsvalidatorsservic",{"_index":661,"title":{"injectables/TsValidatorsService.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsInputModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidatorsService.html":{},"overview.html":{}}}],["tsvalidatorsservicemock",{"_index":3476,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["tsverticalspac",{"_index":1201,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["tsverticalspacing(valu",{"_index":3499,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["tsverticalspacingdirect",{"_index":1200,"title":{"directives/TsVerticalSpacingDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsverticalspacingtyp",{"_index":3494,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["tswindowservic",{"_index":794,"title":{},"body":{"modules/TsButtonModule.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["two",{"_index":160,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{}}}],["type",{"_index":21,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":3767,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeconstraint",{"_index":2132,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["typeisinvalid",{"_index":3504,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["typeof",{"_index":327,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["types.t",{"_index":3779,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":1274,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"index.html":{}}}],["typographi",{"_index":3681,"title":{},"body":{"index.html":{}}}],["ui",{"_index":140,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"index.html":{}}}],["ui.css'scss",{"_index":3690,"title":{},"body":{"index.html":{}}}],["ui/.../autocomplete.component.t",{"_index":3772,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../button.component.t",{"_index":3773,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../card.component.t",{"_index":3771,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../chart2.component.t",{"_index":3775,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../date.pipe.t",{"_index":3777,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../icon.component.t",{"_index":3770,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../imag",{"_index":3780,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../input.component.t",{"_index":3782,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../mask.directive.t",{"_index":3769,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../menu.component.t",{"_index":3784,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../mim",{"_index":3778,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../navigation.component.t",{"_index":3785,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../options.interface.t",{"_index":3776,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../radio",{"_index":3786,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../select.component.t",{"_index":3788,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../sort.directive.t",{"_index":3789,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../styl",{"_index":3790,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../tooltip.component.t",{"_index":3792,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../vert",{"_index":3793,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/issues/403",{"_index":3378,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["ui/src/autocomplete/autocomplete.component.t",{"_index":44,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/autocomplete/autocomplete.component.ts:40",{"_index":47,"title":{},"body":{"interfaces/KeyboardEvent.html":{}}}],["ui/src/autocomplete/autocomplete.component.ts:44",{"_index":468,"title":{},"body":{"interfaces/MouseEvent.html":{}}}],["ui/src/autocomplete/autocomplete.module.t",{"_index":738,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["ui/src/autofocus/autofocus.directive.t",{"_index":752,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.directive.ts:29",{"_index":766,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.directive.ts:35",{"_index":763,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.directive.ts:37",{"_index":762,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.directive.ts:48",{"_index":764,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.module.t",{"_index":784,"title":{},"body":{"modules/TsAutofocusModule.html":{}}}],["ui/src/button/button.component.t",{"_index":3794,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/src/button/button.module.t",{"_index":791,"title":{},"body":{"modules/TsButtonModule.html":{}}}],["ui/src/card/card",{"_index":1212,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["ui/src/card/card.component.t",{"_index":1013,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/card/card.component.ts:104",{"_index":1037,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:111",{"_index":1062,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:114",{"_index":1054,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:120",{"_index":1040,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:126",{"_index":1041,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:132",{"_index":1043,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:138",{"_index":1044,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:141",{"_index":1065,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:144",{"_index":1055,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:152",{"_index":1048,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:158",{"_index":1049,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:165",{"_index":1068,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:168",{"_index":1056,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:174",{"_index":1052,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:179",{"_index":1072,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:181",{"_index":1031,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:79",{"_index":1057,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:84",{"_index":1058,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:92",{"_index":1035,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.module.t",{"_index":1207,"title":{},"body":{"modules/TsCardModule.html":{}}}],["ui/src/chart/chart.event.t",{"_index":1488,"title":{},"body":{"classes/TsChartEvent.html":{}}}],["ui/src/chart/chart.event.ts:11",{"_index":1494,"title":{},"body":{"classes/TsChartEvent.html":{}}}],["ui/src/chart/chart.event.ts:12",{"_index":1493,"title":{},"body":{"classes/TsChartEvent.html":{}}}],["ui/src/chart/chart.module.t",{"_index":1542,"title":{},"body":{"modules/TsChartModule.html":{}}}],["ui/src/chart/highcharts.service.t",{"_index":6,"title":{},"body":{"injectables/HighchartsService.html":{}}}],["ui/src/chart/highcharts.service.ts:18",{"_index":17,"title":{},"body":{"injectables/HighchartsService.html":{}}}],["ui/src/chart/highcharts.service.ts:21",{"_index":24,"title":{},"body":{"injectables/HighchartsService.html":{}}}],["ui/src/chart/options.interface.t",{"_index":1387,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/chart/point.directive.t",{"_index":1546,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["ui/src/chart/point.directive.ts:22",{"_index":1548,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["ui/src/chart/point.directive.ts:28",{"_index":1550,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["ui/src/chart/point.directive.ts:34",{"_index":1551,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["ui/src/chart/point.directive.ts:40",{"_index":1552,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["ui/src/chart/point.directive.ts:46",{"_index":1554,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["ui/src/chart/point.directive.ts:52",{"_index":1555,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["ui/src/chart/point.directive.ts:58",{"_index":1556,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["ui/src/chart/series.directive.t",{"_index":1559,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:24",{"_index":1575,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:31",{"_index":1563,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:37",{"_index":1565,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:43",{"_index":1566,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:50",{"_index":1567,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:56",{"_index":1569,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:62",{"_index":1571,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:68",{"_index":1572,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:74",{"_index":1573,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/utilities/compos",{"_index":1499,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["ui/src/chart2/amcharts.service.t",{"_index":719,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["ui/src/chart2/amcharts.service.ts:25",{"_index":723,"title":{},"body":{"injectables/TsAmChartsService.html":{}}}],["ui/src/chart2/amcharts.service.ts:28",{"_index":724,"title":{},"body":{"injectables/TsAmChartsService.html":{}}}],["ui/src/chart2/chart2.component.t",{"_index":1271,"title":{},"body":{"components/TsChart2Component.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/chart2/chart2.component.ts:102",{"_index":1290,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:116",{"_index":1304,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:131",{"_index":1301,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:143",{"_index":1303,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:151",{"_index":1295,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:164",{"_index":1299,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:67",{"_index":1309,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:72",{"_index":1307,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:78",{"_index":1310,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:86",{"_index":1294,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:93",{"_index":1312,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:96",{"_index":1306,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.module.t",{"_index":1381,"title":{},"body":{"modules/TsChart2Module.html":{}}}],["ui/src/checkbox/checkbox.component.t",{"_index":1578,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:101",{"_index":1639,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:107",{"_index":1620,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:113",{"_index":1652,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:116",{"_index":1640,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:122",{"_index":1621,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:128",{"_index":1622,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:134",{"_index":1623,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:140",{"_index":1624,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:148",{"_index":1625,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:154",{"_index":1626,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:160",{"_index":1629,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:166",{"_index":1618,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:83",{"_index":1641,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:89",{"_index":1642,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:95",{"_index":1619,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:98",{"_index":1650,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.module.t",{"_index":1659,"title":{},"body":{"modules/TsCheckboxModule.html":{}}}],["ui/src/confirmation/confirm",{"_index":1741,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["ui/src/confirmation/confirmation.directive.t",{"_index":1665,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:155",{"_index":1680,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:46",{"_index":1686,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:51",{"_index":1688,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:57",{"_index":1674,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:74",{"_index":1677,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:82",{"_index":1684,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:90",{"_index":1682,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:99",{"_index":1679,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.module.t",{"_index":1754,"title":{},"body":{"modules/TsConfirmationModule.html":{}}}],["ui/src/copy/copy.component.t",{"_index":1758,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:108",{"_index":1795,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:128",{"_index":1778,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:153",{"_index":1776,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:163",{"_index":1775,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:46",{"_index":1783,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:51",{"_index":1784,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:56",{"_index":1786,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:62",{"_index":1788,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:67",{"_index":1792,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:73",{"_index":1781,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:79",{"_index":1772,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:85",{"_index":1773,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:91",{"_index":1771,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.module.t",{"_index":1844,"title":{},"body":{"modules/TsCopyModule.html":{}}}],["ui/src/csv",{"_index":801,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["ui/src/dat",{"_index":1876,"title":{},"body":{"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{}}}],["ui/src/datepicker/datepicker.component.t",{"_index":2006,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["ui/src/datepicker/datepicker.module.t",{"_index":2075,"title":{},"body":{"modules/TsDatepickerModule.html":{}}}],["ui/src/fil",{"_index":2080,"title":{},"body":{"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/icon",{"_index":2190,"title":{},"body":{"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{}}}],["ui/src/icon/icon.component.t",{"_index":2222,"title":{},"body":{"components/TsIconComponent.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/icon/icon.component.ts:105",{"_index":2234,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:68",{"_index":2236,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:71",{"_index":2244,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:74",{"_index":2240,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:80",{"_index":2238,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:86",{"_index":2239,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:96",{"_index":2247,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:99",{"_index":2242,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.module.t",{"_index":2276,"title":{},"body":{"modules/TsIconModule.html":{}}}],["ui/src/input/input.component.t",{"_index":3801,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/src/input/input.module.t",{"_index":2291,"title":{},"body":{"modules/TsInputModule.html":{}}}],["ui/src/link/link.component.t",{"_index":2293,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.component.ts:47",{"_index":2303,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.component.ts:53",{"_index":2300,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.component.ts:59",{"_index":2301,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.component.ts:65",{"_index":2302,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.module.t",{"_index":2313,"title":{},"body":{"modules/TsLinkModule.html":{}}}],["ui/src/load",{"_index":2317,"title":{},"body":{"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{}}}],["ui/src/login",{"_index":2368,"title":{},"body":{"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["ui/src/mask/mask.directive.t",{"_index":360,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/mask/mask.directive.ts:38",{"_index":467,"title":{},"body":{"interfaces/MaskCollection.html":{}}}],["ui/src/mask/mask.module.t",{"_index":2445,"title":{},"body":{"modules/TsMaskModule.html":{}}}],["ui/src/menu/menu.component.t",{"_index":2447,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/menu/menu.component.ts:101",{"_index":2480,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:107",{"_index":2475,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:113",{"_index":2459,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:119",{"_index":2460,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:125",{"_index":2461,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:131",{"_index":2463,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:137",{"_index":2465,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:143",{"_index":2466,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:152",{"_index":2470,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:158",{"_index":2472,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:167",{"_index":2471,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:79",{"_index":2477,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:84",{"_index":2479,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:89",{"_index":2483,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:96",{"_index":2473,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.module.t",{"_index":2517,"title":{},"body":{"modules/TsMenuModule.html":{}}}],["ui/src/module.t",{"_index":663,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["ui/src/navigation/navigation.component.t",{"_index":470,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/navigation/navigation.component.ts:148",{"_index":2537,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:155",{"_index":2542,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:164",{"_index":2535,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:169",{"_index":2536,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:176",{"_index":2544,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:186",{"_index":2538,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:193",{"_index":2546,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:201",{"_index":2524,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:217",{"_index":2525,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:223",{"_index":2526,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:229",{"_index":2539,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:235",{"_index":2540,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:241",{"_index":2527,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:247",{"_index":2528,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:249",{"_index":2523,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:263",{"_index":2532,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:271",{"_index":2531,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:281",{"_index":2529,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:301",{"_index":2533,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:318",{"_index":2534,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:367",{"_index":2530,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.module.t",{"_index":2554,"title":{},"body":{"modules/TsNavigationModule.html":{}}}],["ui/src/paginator/paginator.component.t",{"_index":2557,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["ui/src/paginator/paginator.module.t",{"_index":2685,"title":{},"body":{"modules/TsPaginatorModule.html":{}}}],["ui/src/pipes/date/date.pipe.t",{"_index":1847,"title":{},"body":{"pipes/TsDatePipe.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/pipes/date/date.pipe.ts:31",{"_index":1852,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["ui/src/pipes/pipes.module.t",{"_index":2694,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["ui/src/pipes/round",{"_index":2826,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["ui/src/pipes/sent",{"_index":2953,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{}}}],["ui/src/pipes/tim",{"_index":3308,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["ui/src/pipes/titl",{"_index":3319,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["ui/src/radio",{"_index":2706,"title":{},"body":{"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/search/search.component.t",{"_index":2833,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["ui/src/search/search.component.ts:101",{"_index":2873,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:106",{"_index":2879,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:111",{"_index":2883,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:116",{"_index":2886,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:129",{"_index":2882,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:135",{"_index":2853,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:141",{"_index":2854,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:147",{"_index":2856,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:153",{"_index":2857,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:159",{"_index":2858,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:165",{"_index":2859,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:171",{"_index":2860,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:177",{"_index":2861,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:183",{"_index":2862,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:189",{"_index":2864,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:195",{"_index":2863,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:201",{"_index":2851,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:215",{"_index":2867,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:228",{"_index":2866,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:244",{"_index":2865,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:74",{"_index":2874,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:79",{"_index":2868,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:84",{"_index":2869,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:89",{"_index":2889,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:96",{"_index":2872,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.module.t",{"_index":2908,"title":{},"body":{"modules/TsSearchModule.html":{}}}],["ui/src/select/select.component.t",{"_index":3803,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/src/select/select.module.t",{"_index":2916,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["ui/src/sort/sort",{"_index":3068,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["ui/src/sort/sort.directive.t",{"_index":2969,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/sort/sort.directive.ts:106",{"_index":3049,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:112",{"_index":3047,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:118",{"_index":3062,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:121",{"_index":3057,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:129",{"_index":3048,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:132",{"_index":3065,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:135",{"_index":3058,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:141",{"_index":3050,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:147",{"_index":3053,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:155",{"_index":3054,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:164",{"_index":3055,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:181",{"_index":3051,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:189",{"_index":3056,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:204",{"_index":3052,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:87",{"_index":3060,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:92",{"_index":3059,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:98",{"_index":3046,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.module.t",{"_index":3147,"title":{},"body":{"modules/TsSortModule.html":{}}}],["ui/src/spacing/spacing.module.t",{"_index":3156,"title":{},"body":{"modules/TsSpacingModule.html":{}}}],["ui/src/spacing/vert",{"_index":3492,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/table/cell.t",{"_index":1234,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["ui/src/table/cell.ts:116",{"_index":1664,"title":{},"body":{"directives/TsColumnDefDirective.html":{}}}],["ui/src/table/cell.ts:123",{"_index":1663,"title":{},"body":{"directives/TsColumnDefDirective.html":{}}}],["ui/src/table/cell.ts:129",{"_index":1662,"title":{},"body":{"directives/TsColumnDefDirective.html":{}}}],["ui/src/table/cell.ts:54",{"_index":2169,"title":{},"body":{"directives/TsHeaderCellDirective.html":{}}}],["ui/src/table/cell.ts:72",{"_index":1269,"title":{},"body":{"directives/TsCellDirective.html":{}}}],["ui/src/table/cell.ts:76",{"_index":1270,"title":{},"body":{"directives/TsCellDirective.html":{}}}],["ui/src/table/row.t",{"_index":2170,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["ui/src/table/t",{"_index":3258,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["ui/src/table/table.component.t",{"_index":3158,"title":{},"body":{"components/TsTableComponent.html":{}}}],["ui/src/table/table.module.t",{"_index":3304,"title":{},"body":{"modules/TsTableModule.html":{}}}],["ui/src/toggle/toggle.component.t",{"_index":2960,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:104",{"_index":3329,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:110",{"_index":3330,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:116",{"_index":3331,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:122",{"_index":3332,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:73",{"_index":3325,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:79",{"_index":3326,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:83",{"_index":3334,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:86",{"_index":3333,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:92",{"_index":3327,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:98",{"_index":3328,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.module.t",{"_index":3340,"title":{},"body":{"modules/TsToggleModule.html":{}}}],["ui/src/tooltip/tooltip.component.t",{"_index":3343,"title":{},"body":{"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/tooltip/tooltip.component.ts:53",{"_index":3354,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["ui/src/tooltip/tooltip.component.ts:59",{"_index":3355,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["ui/src/tooltip/tooltip.component.ts:65",{"_index":3352,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["ui/src/tooltip/tooltip.module.t",{"_index":3359,"title":{},"body":{"modules/TsTooltipModule.html":{}}}],["ui/src/utilities/react",{"_index":2803,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["ui/src/utilities/types/styl",{"_index":3804,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/src/utilities/version/version.t",{"_index":3507,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/utilities/version/version.ts:5",{"_index":3515,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/utilities/version/version.ts:6",{"_index":3516,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/utilities/version/version.ts:7",{"_index":3513,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/utilities/version/version.ts:9",{"_index":3514,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/valid",{"_index":3364,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{}}}],["ui/src/validators/validators.service.t",{"_index":3441,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:24",{"_index":3443,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:25",{"_index":3445,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:26",{"_index":3447,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:27",{"_index":3449,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:28",{"_index":3451,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:29",{"_index":3453,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:30",{"_index":3455,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:31",{"_index":3459,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:32",{"_index":3461,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:33",{"_index":3465,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:34",{"_index":3469,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:35",{"_index":3457,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:36",{"_index":3467,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:37",{"_index":3463,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui:mast",{"_index":3605,"title":{},"body":{"contributing.html":{}}}],["uiformatfn",{"_index":248,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["uiformatt",{"_index":2718,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["uisubformatt",{"_index":2724,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["unambigu",{"_index":3577,"title":{},"body":{"contributing.html":{}}}],["undefin",{"_index":266,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsColumnDefDirective.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["underli",{"_index":337,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["underlin",{"_index":3351,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["underscor",{"_index":2252,"title":{},"body":{"components/TsIconComponent.html":{}}}],["unifi",{"_index":3644,"title":{},"body":{"index.html":{}}}],["union",{"_index":1939,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["uniqu",{"_index":846,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{}}}],["unit",{"_index":1434,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"contributing.html":{}}}],["unmaskregex",{"_index":362,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["unregist",{"_index":3019,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["unselect",{"_index":1520,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{}}}],["unsubscrib",{"_index":3102,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["unsupport",{"_index":2271,"title":{},"body":{"components/TsIconComponent.html":{}}}],["unsur",{"_index":2183,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["untest",{"_index":2825,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["until",{"_index":1801,"title":{},"body":{"components/TsCopyComponent.html":{},"components/TsTableComponent.html":{}}}],["untilcomponentdestroy",{"_index":192,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["untilcomponentdestroyed(thi",{"_index":325,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["up",{"_index":443,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["updat",{"_index":352,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["updateallrowid",{"_index":940,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["updatedhiddenarray",{"_index":601,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updatedhiddenarray.unshift(itemtomov",{"_index":604,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updatedvisiblearray",{"_index":612,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updatedvisiblearray.push(itemtomov",{"_index":613,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updateerror",{"_index":955,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["updatelist",{"_index":590,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["upload",{"_index":3668,"title":{},"body":{"index.html":{}}}],["upload'},{'nam",{"_index":1135,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["upload.compon",{"_index":2114,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["upload.modul",{"_index":682,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["upload.module.t",{"_index":2112,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["upload/drop",{"_index":2081,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["upload/fil",{"_index":681,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsFileUploadModule.html":{}}}],["upload/imag",{"_index":2099,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"classes/TsImageDimensions.html":{},"miscellaneous/typealiases.html":{}}}],["upload/mim",{"_index":3797,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["upload/select",{"_index":2118,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["upon",{"_index":498,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["uppercas",{"_index":3402,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{}}}],["uppercasevalid",{"_index":3466,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["upstream",{"_index":3608,"title":{},"body":{"contributing.html":{}}}],["url",{"_index":380,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["urlvalid",{"_index":3468,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["us",{"_index":128,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["usa",{"_index":1417,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["usabl",{"_index":3657,"title":{},"body":{"index.html":{}}}],["usag",{"_index":52,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["useexist",{"_index":418,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["usefactori",{"_index":1329,"title":{},"body":{"components/TsChart2Component.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["user",{"_index":75,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{}}}],["user'",{"_index":485,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["usercanclear",{"_index":2850,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["userexist",{"_index":530,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["usernam",{"_index":3164,"title":{},"body":{"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["userprofileport",{"_index":1729,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["usersfullnam",{"_index":529,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["usevalu",{"_index":1385,"title":{},"body":{"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{}}}],["usual",{"_index":1909,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["util",{"_index":1050,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["utilities/compos",{"_index":1544,"title":{},"body":{"modules/TsChartModule.html":{}}}],["utilities/react",{"_index":716,"title":{},"body":{"modules/TerminusUIModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["utilities/types/styl",{"_index":195,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["utilitymenutempl",{"_index":1030,"title":{},"body":{"components/TsCardComponent.html":{}}}],["v",{"_index":127,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSelectedFile.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{}}}],["v.bar",{"_index":2719,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["v.bing",{"_index":2725,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["v.columns.join('\\t')).join('\\r\\n",{"_index":1004,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["v.foo",{"_index":2721,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["v.foo;ev",{"_index":2726,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["v.id",{"_index":215,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["v.length",{"_index":328,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["v.login",{"_index":143,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["v.name",{"_index":211,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["v4",{"_index":1273,"title":{},"body":{"components/TsChart2Component.html":{}}}],["valid",{"_index":66,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["validateimagedimens",{"_index":2921,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["validateimagedimensions(constraint",{"_index":2165,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["validateimmedi",{"_index":3417,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["validateonchang",{"_index":2061,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["validationerror",{"_index":174,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["validationmessag",{"_index":874,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsValidationMessagesComponent.html":{}}}],["validationmessageservic",{"_index":3420,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["validationmessagesservic",{"_index":974,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["validatorfn",{"_index":841,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["validatornam",{"_index":3371,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validators.minlength(this.queryminlength",{"_index":2884,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["validators.pattern(this.inputpatternregex",{"_index":2885,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["validators.requir",{"_index":1918,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["validators/creditcard/creditcard",{"_index":3478,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/email/email",{"_index":3479,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/equaltocontrol/equaltocontrol",{"_index":3480,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/greaterthan/greaterthan",{"_index":3482,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/greaterthanorequal/greaterthanorequ",{"_index":3481,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/lessthan/lessthan",{"_index":3484,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/lessthanorequal/lessthanorequ",{"_index":3483,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/lowercase/lowercas",{"_index":3485,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/maxdate/maxd",{"_index":3487,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/mindate/mind",{"_index":3488,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/numbers/numb",{"_index":3486,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/password/password",{"_index":3489,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/uppercase/uppercas",{"_index":3491,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/url/url",{"_index":3490,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/validators.servic",{"_index":715,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsInputModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["validatorsservic",{"_index":2388,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["validatorvalu",{"_index":3369,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.actu",{"_index":3384,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.actual.width}x${validatorvalue.actual.height",{"_index":3412,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.comparevalu",{"_index":3399,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.greaterthan",{"_index":3386,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.greaterthanorequ",{"_index":3389,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.lessthan",{"_index":3393,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.lessthanorequ",{"_index":3395,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.lowercas",{"_index":3401,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.max}kb",{"_index":3405,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.numb",{"_index":3390,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.requiredlength",{"_index":3379,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.uppercas",{"_index":3403,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validformat",{"_index":1868,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["validformats.indexof(format",{"_index":1874,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["valu",{"_index":58,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["value(v",{"_index":2819,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["value.charat(0).touppercas",{"_index":2957,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{}}}],["value.filter((item",{"_index":541,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["value.length",{"_index":466,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["value.replace(new",{"_index":461,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["value.slice(1).tolowercas",{"_index":2958,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{}}}],["value.split",{"_index":3501,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["value.tolowercase().split",{"_index":3321,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["valuechangeaccessor",{"_index":444,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["valueisnon",{"_index":3503,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["valueprefix",{"_index":1451,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["valuesuffix",{"_index":1453,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["var",{"_index":1113,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["variabl",{"_index":2665,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["variat",{"_index":3802,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["veri",{"_index":2489,"title":{},"body":{"components/TsMenuComponent.html":{},"index.html":{}}}],["verifi",{"_index":412,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{}}}],["verifyisdateobject(d",{"_index":2068,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["version",{"_index":32,"title":{"classes/Version.html":{}},"body":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsValidatorsService.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{}}}],["version('0.0.0",{"_index":3524,"title":{},"body":{"classes/Version.html":{}}}],["vertic",{"_index":1485,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"modules/TsSpacingModule.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["via",{"_index":157,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartEventOptions.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"contributing.html":{}}}],["view",{"_index":561,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["viewchild",{"_index":172,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["viewchild('auto",{"_index":94,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["viewchild('autocomplet",{"_index":251,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["viewchild('autocompletetrigg",{"_index":252,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["viewchild('chartdiv",{"_index":1347,"title":{},"body":{"components/TsChart2Component.html":{}}}],["viewchild('cont",{"_index":1796,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["viewchild('input",{"_index":258,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["viewchild('visibleitemslist",{"_index":550,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["viewchild(matcheckbox",{"_index":1596,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["viewchild(matmenutrigg",{"_index":2507,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["viewchild(tscheckboxcompon",{"_index":2424,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["viewchild(tspaginatorcompon",{"_index":3220,"title":{},"body":{"components/TsTableComponent.html":{}}}],["viewchild(tssortdirect",{"_index":3188,"title":{},"body":{"components/TsTableComponent.html":{}}}],["viewchildren",{"_index":482,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["viewchildren('visiblelinkel",{"_index":552,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["viewchildren(tsinputcompon",{"_index":2423,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["viewencapsul",{"_index":173,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["viewencapsulation.non",{"_index":237,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["viewport",{"_index":3193,"title":{},"body":{"components/TsTableComponent.html":{}}}],["visibl",{"_index":511,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsUser.html":{}}}],["visible/hidden",{"_index":575,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visibleitem",{"_index":534,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visibleitemslength",{"_index":535,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visibleitemslist",{"_index":551,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visiblelinkel",{"_index":553,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visual",{"_index":1285,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["visualization(valu",{"_index":1348,"title":{},"body":{"components/TsChart2Component.html":{}}}],["void",{"_index":322,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["vscode",{"_index":3721,"title":{},"body":{"index.html":{}}}],["wait",{"_index":2875,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["want",{"_index":1557,"title":{},"body":{"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"contributing.html":{},"index.html":{}}}],["warn",{"_index":2267,"title":{},"body":{"components/TsIconComponent.html":{},"miscellaneous/typealiases.html":{}}}],["warranti",{"_index":3747,"title":{},"body":{"license.html":{}}}],["wasn't",{"_index":1353,"title":{},"body":{"components/TsChart2Component.html":{}}}],["watch",{"_index":3295,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["way",{"_index":973,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{},"index.html":{}}}],["web",{"_index":3610,"title":{},"body":{"contributing.html":{}}}],["weekend",{"_index":2012,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["welcom",{"_index":548,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["welcomemessag",{"_index":549,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["well",{"_index":1237,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"index.html":{}}}],["wendy&#x1f41b",{"_index":3705,"title":{},"body":{"index.html":{}}}],["wheel",{"_index":964,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["wheelev",{"_index":966,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["whenev",{"_index":3134,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["whether",{"_index":1474,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTooltipComponent.html":{},"license.html":{}}}],["white_check_mark",{"_index":3660,"title":{},"body":{"index.html":{}}}],["whose",{"_index":1779,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["width",{"_index":519,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsImageDimensions.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["window",{"_index":555,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["window:res",{"_index":2522,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["windowservic",{"_index":1770,"title":{},"body":{"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["wire",{"_index":1722,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["within",{"_index":1221,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTooltipComponent.html":{}}}],["without",{"_index":1883,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsReactiveFormBaseComponent.html":{},"license.html":{}}}],["wizard",{"_index":3674,"title":{},"body":{"index.html":{}}}],["won't",{"_index":2406,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["wonder",{"_index":3694,"title":{},"body":{"index.html":{}}}],["word",{"_index":2251,"title":{},"body":{"components/TsIconComponent.html":{}}}],["word.charat(0).touppercas",{"_index":3323,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["word.slice(1",{"_index":3324,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["work",{"_index":578,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["workflow",{"_index":3536,"title":{},"body":{"contributing.html":{}}}],["world",{"_index":1419,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["worldcontin",{"_index":1418,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["wrap",{"_index":1073,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLinkComponent.html":{},"components/TsTableComponent.html":{}}}],["wrapper",{"_index":1475,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{}}}],["write",{"_index":1637,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["writevalu",{"_index":1616,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["writevalue(valu",{"_index":1635,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["x",{"_index":1099,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["x1f3a8",{"_index":3700,"title":{},"body":{"index.html":{}}}],["x1f440",{"_index":3702,"title":{},"body":{"index.html":{}}}],["x1f4bb",{"_index":3706,"title":{},"body":{"index.html":{}}}],["x1f4d6",{"_index":3699,"title":{},"body":{"index.html":{}}}],["x1f527",{"_index":3703,"title":{},"body":{"index.html":{}}}],["x1f914",{"_index":3701,"title":{},"body":{"index.html":{}}}],["xaxi",{"_index":1390,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["xdateformat",{"_index":1456,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["xy",{"_index":1305,"title":{},"body":{"components/TsChart2Component.html":{},"miscellaneous/typealiases.html":{}}}],["y",{"_index":1101,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["yarn",{"_index":3683,"title":{},"body":{"index.html":{}}}],["yaxi",{"_index":1486,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["ye",{"_index":2934,"title":{},"body":{"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["year",{"_index":1952,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["yeoman",{"_index":714,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["yourself",{"_index":3584,"title":{},"body":{"contributing.html":{}}}],["z",{"_index":3682,"title":{},"body":{"index.html":{}}}],["z0",{"_index":2877,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["za",{"_index":2876,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["zero",{"_index":978,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["zerobas",{"_index":2633,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["zip",{"_index":3670,"title":{},"body":{"index.html":{}}}],["zone",{"_index":1291,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["zoom",{"_index":662,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/HighchartsService.html":{"url":"injectables/HighchartsService.html","title":"injectable - HighchartsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HighchartsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/highcharts.service.ts\n        \n\n            \n                Description\n            \n            \n                Expose Highcharts as a service\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                highcharts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(highcharts: any)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/chart/highcharts.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        highcharts\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            highcharts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        highcharts:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/highcharts.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InjectionToken,\n} from '@angular/core';\n\n\n/**\n * Create an injection token that the consumer can override with their version of Highcharts\n */\nexport const HIGHCHARTS = new InjectionToken('Highcharts');\n\n\n/**\n * Expose Highcharts as a service\n */\n@Injectable()\nexport class HighchartsService {\n\n  constructor(\n    @Inject(HIGHCHARTS) public highcharts: any,\n  ) {}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KeyboardEvent.html":{"url":"interfaces/KeyboardEvent.html","title":"interface - KeyboardEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  KeyboardEvent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/autocomplete/autocomplete.component.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/autocomplete/autocomplete.component.ts:40\n                            \n                        \n            \n        \n\n\n    \n\n    \n        Autocomplete\n\n\n\n\nTable of Contents\n\nBasic usage with a FormControl\nAllow multiple selections\nSeed selected values\nShow the progress indicator\nCustomize how the selected value is displayed\nEvent driven\nShow a 'no results' validation error\nMinimum required character count\n\n\nBasic usage with a FormControl\na) Pass an array of available options in. These are the options displayed to the user in the\n   dropdown.\nb) Create a local reference to the autocomplete component.\n\nc) Subscribe to the query events coming from the autocomplete. This is a stream of query strings\nentered by the user. This stream is debounced and de-duped by default.\ninterface OptionType {\n  id: string;\n  login: string;\n  [key: string]: any;\n}\n\n// Create a reference to the autocomplete and pass in a typing for the options\n@ViewChild('auto')\npublic auto: TsAutocompleteComponent;\n\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      // Only hit the API if a query was sent in\n      if (term) {\n        // Start the progress indicator\n        this.inProgress = true;\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              // Stop the progress indicator\n              this.inProgress = false;\n              return response['items'];\n            }),\n          )\n      } else {\n        // If no query was passed in, reset the search results and stop the progress indicator\n        this.inProgress = false;\n        return of([]);\n      }\n    }),\n  )\n;\nChange the debounce delay by setting debounceDelay.\n\nAllow multiple selections\nTo allow multiple selections, pass in a comparator function. This function should match the type {@link TsAutocompleteComparatorFn} which has the basic signature of (v: any) => string.\nThis comparator function will be used by the autocomplete to determine if a selection is a\nduplicate. It is also used as the trackBy function when looping through options.\nSeed selected values\nTo seed initial values, pass the array of selections to initialSelections:\nShow the progress indicator\nShow a progress indicator by toggling the showProgress value:\nthis.isInProgress = true;Customize how the selected value is displayed\nThe UI display of selected options can be changed by passing in a custom displayWith function.\nThis function should match {@link TsAutocompleteFormatterFn} which has the signature of (v) =>\nstring;\n\n v.login\"\n>Event driven\nIf a FormControl isn't needed, you can subscribe to events directly:\nadded(chip) {\n  console.log('Selection made!', chip);\n}\n\nremoved(chip) {\n  console.log('Selection removed!', chip);\n}\n\nchange(selections) {\n  console.log('Selection was changed!', selections);\n}Show a 'no results' validation error\nIf no results are found, set a validation error on the FormControl:\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      if (term) {\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              const items = response['items'];\n\n              // If no results are found, notify the user via a validation message\n              if (items.length Minimum required character count\nBy default, two characters must be entered before a query is emitted. This value can be overridden:\n\n    \n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  MatAutocomplete,\n  MatAutocompleteSelectedEvent,\n  MatAutocompleteTrigger,\n} from '@angular/material/autocomplete';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\nimport {\n  BehaviorSubject,\n} from 'rxjs';\nimport {\n  coerceArray,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  arrayContainsObject,\n  isFunction,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\nexport interface KeyboardEvent {\n  [key: string]: any;\n}\n\nexport interface MouseEvent {\n  [key: string]: any;\n}\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} formatter function\n */\nexport type TsAutocompleteFormatterFn = (value: any) => string;\n\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} comparator function\n */\nexport type TsAutocompleteComparatorFn = (value: any) => string;\n\n\nexport class TsAutocompleteSelectedEvent extends MatAutocompleteSelectedEvent {}\n\n\n/**\n * The autocomplete UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-autocomplete`: The primary container\n * - `qa-autocomplete-input`: The input element\n * - `qa-autocomplete-spinner`: The progress indicator\n * - `qa-autocomplete-chip`: An individual selection 'chip'\n * - `qa-autocomplete-options`: The container for the list of options\n * - `qa-autocomplete-option`: An individual option from the list\n * - `qa-autocomplete-hint`: The input hint\n * - `qa-autocomplete-validation-messages`: The container for validation messages\n *\n * @example\n *  v.name\"\n *              hint=\"Begin typing to search..\"\n *              label=\"Select options:\"\n *              multiple=\"(v) => v.id\"\n *              name=\"product selections\"\n *              options=\"[{}, {}, ...]\"\n *              selectionsControl=\"myForm.get('myControl')\"\n *              [showProgress]=\"inProgress\"\n *              theme=\"primary\"\n *              initialSelections=\"[{}]\"\n *              (optionSelected)=\"mySelected($event)\"\n *              (optionRemoved)=\"myRemoved($event)\"\n *              (selection)=\"mySelection($event)\"\n *              (query)=\"myQuery($event)\"\n * >\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  exportAs: 'tsAutocomplete',\n  host: {\n    class: 'ts-autocomplete',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsAutocompleteComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Management of the query string\n   */\n  public querySubject: BehaviorSubject = new BehaviorSubject('');\n\n  /**\n   * Store the search query\n   */\n  public searchQuery!: string;\n\n  /**\n   * Define if the chips/selections should be selectable\n   */\n  public selectableChips: boolean = false;\n\n  /**\n   * Store the selected options\n   */\n  public selectedOptions: OptionType[] = [];\n\n  /**\n   * Store the formatter function for the UI display\n   */\n  private uiFormatFn!: (value: OptionType) => string;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocomplete')\n  public autocomplete!: MatAutocomplete;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocompleteTrigger')\n  set autocompleteTrigger(value: MatAutocompleteTrigger) {\n    this.trigger = value;\n  }\n  get autocompleteTrigger(): MatAutocompleteTrigger {\n    return this.trigger;\n  }\n  private trigger!: MatAutocompleteTrigger;\n\n  /**\n   * Provide direct access to the input\n   */\n  @ViewChild('input')\n  public input!: ElementRef;\n\n  /**\n   * Define a debounce delay for the query\n   */\n  @Input()\n  public set debounceDelay(value: number) {\n    this._debounceDelay = coerceNumberProperty(value);\n  }\n  public get debounceDelay(): number {\n    return this._debounceDelay;\n  }\n  private _debounceDelay: number = 200;\n\n  /**\n   * A function to output the UI text from the selected item\n   *\n   * When undefined the full selection object will be used as the display value\n   */\n  @Input()\n  public set displayWith(value: TsAutocompleteFormatterFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this.uiFormatFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'displayWith' must be passed a function.`);\n      }\n    }\n  }\n  public get displayWith(): TsAutocompleteFormatterFn {\n    return this.uiFormatFn;\n  }\n\n  /**\n   * Define a hint for the input\n   */\n  // FIXME: Fix potential overlap of hint and error messages\n  @Input()\n  public hint: string | undefined;\n\n  /**\n   * Define the placeholder/label\n   */\n  @Input()\n  public label: string | undefined;\n\n  /**\n   * Define a minimum character count for queries\n   */\n  @Input()\n  public set minimumCharacters(value: number) {\n    this._minimumCharacters = coerceNumberProperty(value);\n  }\n  public get minimumCharacters(): number {\n    return this._minimumCharacters;\n  }\n  private _minimumCharacters: number = 2;\n\n  /**\n   * Define if multiple selections are allowed by passing in a comparator function\n   */\n  @Input()\n  public set multiple(v: TsAutocompleteComparatorFn) {\n    if (!v) {\n      return;\n    }\n\n    if (isFunction(v)) {\n      this.comparatorFn = v;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'multiple' must be passed a 'TsAutocompleteComparatorFn' function.`);\n      }\n    }\n  }\n  public get multiple(): TsAutocompleteComparatorFn {\n    return this.comparatorFn;\n  }\n  private comparatorFn!: TsAutocompleteComparatorFn;\n\n  /**\n   * Define the name attribute value\n   */\n  @Input()\n  public name: string | undefined;\n\n  /**\n   * The list of options to display in the drop down\n   */\n  @Input()\n  public options!: OptionType[];\n\n  /**\n   * Define the form control to save selections to\n   */\n  @Input()\n  public selectionsControl!: FormControl;\n\n  /**\n   * Define if the progress spinner should be active\n   */\n  @Input()\n  public showProgress: boolean = false;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define items that should be selected when the component loads\n   */\n  @Input()\n  public set initialSelections(selections: OptionType[]) {\n    // istanbul ignore else\n    if (selections) {\n      // Seed the array\n      this.selectedOptions = coerceArray(selections.slice());\n\n      // istanbul ignore else\n      if (this.selectionsControl && this.selectionsControl.setValue) {\n        // Seed the formControl\n        this.selectionsControl.setValue(this.selectedOptions);\n      }\n    }\n  }\n\n  /**\n   * Emit the selected chip\n   */\n  @Output()\n  public optionSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the removed chip\n   */\n  @Output()\n  public optionRemoved: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the current selection\n   */\n  @Output()\n  public selection: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the query string\n   */\n  @Output()\n  public query: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Subscribe to the querySubject and pass values to the query emitter\n   *\n   * FIXME: When an option is selected, the full selected value is piped through this stream\n   * somehow. Have not figured out why. Best guess is it's something due to the `matAutocomplete`\n   * directive. For now, we are filtering out anything that is not a string.\n   */\n  public ngAfterViewInit(): void {\n    // Take a stream of query changes\n    this.querySubject.pipe(\n      untilComponentDestroyed(this),\n      filter((v) => (typeof v === 'string') && v.length >= this.minimumCharacters),\n      // Debounce the query changes\n      debounceTime(this.debounceDelay),\n      // Only allow a query through if it is different from the previous query\n      distinctUntilChanged(),\n    ).subscribe((query: string) => {\n      this.query.next(query);\n    });\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Select an option\n   *\n   * @param event - The selection event from the underlying MatAutocomplete\n   */\n  public selectOption(event: TsAutocompleteSelectedEvent): void {\n    // The selected option\n    const selection: OptionType = event.option.value;\n\n    // Stop the flow if the selection already exists in the array\n    if (arrayContainsObject(selection, this.selectedOptions, this.comparatorFn)) {\n      // Set an error on the control to let the user know they chose a duplicate option\n      // istanbul ignore else\n      if (this.selectionsControl) {\n        this.setDuplicateError(this.selectionsControl, selection, this.uiFormatFn);\n      }\n\n      return;\n    }\n\n\n    // Add to the displayed selection chips\n    this.selectedOptions.push(selection);\n\n    // If supporting multiple selections, reset the input text value\n    if (this.multiple) {\n      this.resetSearch();\n    }\n\n    // Update the form control\n    // istanbul ignore else\n    if (this.selectionsControl && this.selectionsControl.setValue) {\n      this.selectionsControl.setValue(this.selectedOptions);\n    }\n\n    // Notify consumers about changes\n    this.optionSelected.emit(event.option.value);\n    this.selection.emit(this.selectedOptions);\n  }\n\n\n  /**\n   * Deselect an option\n   *\n   * @param option - The option to deselect\n   */\n  public deselectOption(option: OptionType): void {\n    // Find the key of the selection in the selectedOptions array\n    const index = this.selectedOptions.indexOf(option);\n\n    // If not found\n    if (index \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mask.html":{"url":"interfaces/Mask.html","title":"interface - Mask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mask\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/mask/mask.directive.ts\n        \n\n            \n                Description\n            \n            \n                An individual mask definition\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mask\n                                \n                                \n                                            Optional\n                                        unmaskRegex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mask\n                                    \n                                \n                                \n                                    \n                                        mask:     (RegExp | string)[] | MaskFunction | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (RegExp | string)[] | MaskFunction | \"undefined\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unmaskRegex\n                                    \n                                \n                                \n                                    \n                                        unmaskRegex:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Mask\n\n\n\n\nTable of Contents\n\nBasic usage\nSupported input types\nDisable decimal support\nDisable sanitation\n\n\nBasic usage\nAttach the directive to an input and pass in a mask type:\n\nAvailable mask types:\n\n\n\nName\nExample format\n\n\n\n\nphone\n(900) 000-0000\n\n\ncurrency\n$0,000[.00]\n\n\nnumber\n0,000[.00]\n\n\npercentage\n0,000[.00]%\n\n\npostal\n00000|00000-0000\n\n\n\nSupported input types\n\ntext\ntel\nurl\npassword\nsearch\n\nDisable decimal support\n\nThis only effects the following masks: currency|number|percentage. By default, these masks\nsupport decimals.\n\nSet the allowDecimal flag to false:\n\nNOTE: You must use brackets [] for the allowDecimal flag.\n\nDisable sanitation\nBy default, the mask is removed from the string before it is saved to the model. To save the\nformatted value, set the sanitizeValue flag to false:\n\n    \n\n    \n        import {\n  Directive,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  isDevMode,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor,\n} from '@angular/forms';\nimport { createTextMaskInputElement } from 'text-mask-core/dist/textMaskCore';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\n\n\nconst NUMBER_ONLY_REGEX: RegExp = /[^0-9]/g;\nconst NUMBER_WITH_DECIMAL_REGEX: RegExp = /[^0-9.]/g;\n\n/**\n * A function that returns an array of RegExp (used to determine postal code RegExp)\n */\nexport type MaskFunction = (value: string) => (RegExp|string)[];\n\n/**\n * An individual mask definition\n */\nexport interface Mask {\n  mask: (RegExp|string)[] | MaskFunction | false;\n  unmaskRegex?: RegExp;\n}\n\n/**\n * The collection of masks\n */\nexport interface MaskCollection {\n  [key: string]: Mask;\n}\n\n/**\n * Define the allowed mask shortcut option\n */\nexport type MaskShortcutOptions\n  = 'phone'\n  | 'currency'\n  | 'number'\n  | 'percentage'\n  | 'postal'\n  | 'default' // matches all characters\n;\n\n/**\n * Create an array used to verify the passed in shortcut is valid\n */\nconst allowedMaskShorcuts: MaskShortcutOptions[] = [\n  'phone',\n  'currency',\n  'number',\n  'percentage',\n  'postal',\n  'default',\n];\n\n/**\n * Value accessor implementation to provide to the directive\n */\n/* tslint:disable:no-use-before-declare */\nexport const MASKED_INPUT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsMaskDirective),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n@Directive({\n  host: {\n    '(input)': 'onInput($event.target.value)',\n    '(blur)': 'onTouched()',\n  },\n  selector: '[tsMask]',\n  exportAs: 'tsMask',\n  providers: [MASKED_INPUT_VALUE_ACCESSOR],\n})\nexport class TsMaskDirective implements ControlValueAccessor, OnChanges {\n  /**\n   * Store the current mask\n   */\n  private currentMask!: Mask;\n\n  /**\n   * Store a reference to the input element\n   */\n  private inputElement!: HTMLInputElement;\n\n  /**\n   * Store the last value for comparison\n   */\n  private lastValue!: string;\n\n  /**\n   * Store the selected mask name\n   */\n  private maskName!: MaskShortcutOptions;\n\n  /**\n   * Base settings for the mask\n   */\n  private textMaskConfig: any = {\n    mask: null,\n    guide: false,\n  };\n\n  /**\n   * Store the mask instance\n   */\n  private textMaskInputElement: any;\n\n  /**\n   * Define if decimals are allowed in numbers/currency/percentage\n   */\n  @Input()\n  public allowDecimal: boolean = true;\n\n  /**\n   * Define if the value should be sanitized before saving to the model\n   */\n  @Input()\n  public sanitizeValue: boolean = true;\n\n  /**\n   * Define a mask\n   */\n  @Input()\n  set tsMask(value: MaskShortcutOptions) {\n    if (!value) {\n      return;\n    }\n\n    // Verify value is allowed\n    if (isDevMode() && (allowedMaskShorcuts.indexOf(value)  any = (value: any) => {};\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public onTouched: (value: any) => any = (value: any) => {};\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public registerOnChange(fn: (value: any) => any): void {\n    this.onChange = fn;\n  }\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public registerOnTouched(fn: () => any): void {\n    this.onTouched = fn;\n  }\n\n\n  /**\n   * Create the mask\n   *\n   * @param create - If the mask should be created\n   */\n  private setupMask(create?: boolean): void {\n    // istanbul ignore else\n    if (!this.inputElement) {\n      this.inputElement = this.elementRef.nativeElement;\n    }\n\n    // istanbul ignore else\n    if (this.inputElement && create) {\n      const maskOptions = Object.assign({inputElement: this.inputElement}, this.textMaskConfig);\n      // Initialize the mask\n      this.textMaskInputElement = createTextMaskInputElement(maskOptions);\n    }\n  }\n\n\n  /**\n   * Remove the mask if needed\n   *\n   * @param value - The value to clean\n   * @param regex - The RegExp to use to clean the value\n   * @return The clean value\n   */\n  private cleanValue(value: string, regex?: RegExp): string {\n    return regex ? value.replace(new RegExp(regex), '') : value;\n  }\n\n\n  /**\n   * Helper to determine the correct postal code match\n   *\n   * @param value - The current postal code value\n   * @return The correct mask\n   */\n  private determinePostalMask(value: string): (RegExp|string)[] {\n    if (value.length \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MaskCollection.html":{"url":"interfaces/MaskCollection.html","title":"interface - MaskCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MaskCollection\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/mask/mask.directive.ts\n        \n\n            \n                Description\n            \n            \n                The collection of masks\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    Mask\n\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/mask/mask.directive.ts:38\n                            \n                        \n            \n        \n\n\n    \n\n    \n        Mask\n\n\n\n\nTable of Contents\n\nBasic usage\nSupported input types\nDisable decimal support\nDisable sanitation\n\n\nBasic usage\nAttach the directive to an input and pass in a mask type:\n\nAvailable mask types:\n\n\n\nName\nExample format\n\n\n\n\nphone\n(900) 000-0000\n\n\ncurrency\n$0,000[.00]\n\n\nnumber\n0,000[.00]\n\n\npercentage\n0,000[.00]%\n\n\npostal\n00000|00000-0000\n\n\n\nSupported input types\n\ntext\ntel\nurl\npassword\nsearch\n\nDisable decimal support\n\nThis only effects the following masks: currency|number|percentage. By default, these masks\nsupport decimals.\n\nSet the allowDecimal flag to false:\n\nNOTE: You must use brackets [] for the allowDecimal flag.\n\nDisable sanitation\nBy default, the mask is removed from the string before it is saved to the model. To save the\nformatted value, set the sanitizeValue flag to false:\n\n    \n\n    \n        import {\n  Directive,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  isDevMode,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor,\n} from '@angular/forms';\nimport { createTextMaskInputElement } from 'text-mask-core/dist/textMaskCore';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\n\n\nconst NUMBER_ONLY_REGEX: RegExp = /[^0-9]/g;\nconst NUMBER_WITH_DECIMAL_REGEX: RegExp = /[^0-9.]/g;\n\n/**\n * A function that returns an array of RegExp (used to determine postal code RegExp)\n */\nexport type MaskFunction = (value: string) => (RegExp|string)[];\n\n/**\n * An individual mask definition\n */\nexport interface Mask {\n  mask: (RegExp|string)[] | MaskFunction | false;\n  unmaskRegex?: RegExp;\n}\n\n/**\n * The collection of masks\n */\nexport interface MaskCollection {\n  [key: string]: Mask;\n}\n\n/**\n * Define the allowed mask shortcut option\n */\nexport type MaskShortcutOptions\n  = 'phone'\n  | 'currency'\n  | 'number'\n  | 'percentage'\n  | 'postal'\n  | 'default' // matches all characters\n;\n\n/**\n * Create an array used to verify the passed in shortcut is valid\n */\nconst allowedMaskShorcuts: MaskShortcutOptions[] = [\n  'phone',\n  'currency',\n  'number',\n  'percentage',\n  'postal',\n  'default',\n];\n\n/**\n * Value accessor implementation to provide to the directive\n */\n/* tslint:disable:no-use-before-declare */\nexport const MASKED_INPUT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsMaskDirective),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n@Directive({\n  host: {\n    '(input)': 'onInput($event.target.value)',\n    '(blur)': 'onTouched()',\n  },\n  selector: '[tsMask]',\n  exportAs: 'tsMask',\n  providers: [MASKED_INPUT_VALUE_ACCESSOR],\n})\nexport class TsMaskDirective implements ControlValueAccessor, OnChanges {\n  /**\n   * Store the current mask\n   */\n  private currentMask!: Mask;\n\n  /**\n   * Store a reference to the input element\n   */\n  private inputElement!: HTMLInputElement;\n\n  /**\n   * Store the last value for comparison\n   */\n  private lastValue!: string;\n\n  /**\n   * Store the selected mask name\n   */\n  private maskName!: MaskShortcutOptions;\n\n  /**\n   * Base settings for the mask\n   */\n  private textMaskConfig: any = {\n    mask: null,\n    guide: false,\n  };\n\n  /**\n   * Store the mask instance\n   */\n  private textMaskInputElement: any;\n\n  /**\n   * Define if decimals are allowed in numbers/currency/percentage\n   */\n  @Input()\n  public allowDecimal: boolean = true;\n\n  /**\n   * Define if the value should be sanitized before saving to the model\n   */\n  @Input()\n  public sanitizeValue: boolean = true;\n\n  /**\n   * Define a mask\n   */\n  @Input()\n  set tsMask(value: MaskShortcutOptions) {\n    if (!value) {\n      return;\n    }\n\n    // Verify value is allowed\n    if (isDevMode() && (allowedMaskShorcuts.indexOf(value)  any = (value: any) => {};\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public onTouched: (value: any) => any = (value: any) => {};\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public registerOnChange(fn: (value: any) => any): void {\n    this.onChange = fn;\n  }\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public registerOnTouched(fn: () => any): void {\n    this.onTouched = fn;\n  }\n\n\n  /**\n   * Create the mask\n   *\n   * @param create - If the mask should be created\n   */\n  private setupMask(create?: boolean): void {\n    // istanbul ignore else\n    if (!this.inputElement) {\n      this.inputElement = this.elementRef.nativeElement;\n    }\n\n    // istanbul ignore else\n    if (this.inputElement && create) {\n      const maskOptions = Object.assign({inputElement: this.inputElement}, this.textMaskConfig);\n      // Initialize the mask\n      this.textMaskInputElement = createTextMaskInputElement(maskOptions);\n    }\n  }\n\n\n  /**\n   * Remove the mask if needed\n   *\n   * @param value - The value to clean\n   * @param regex - The RegExp to use to clean the value\n   * @return The clean value\n   */\n  private cleanValue(value: string, regex?: RegExp): string {\n    return regex ? value.replace(new RegExp(regex), '') : value;\n  }\n\n\n  /**\n   * Helper to determine the correct postal code match\n   *\n   * @param value - The current postal code value\n   * @return The correct mask\n   */\n  private determinePostalMask(value: string): (RegExp|string)[] {\n    if (value.length \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseEvent.html":{"url":"interfaces/MouseEvent.html","title":"interface - MouseEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseEvent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/autocomplete/autocomplete.component.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/autocomplete/autocomplete.component.ts:44\n                            \n                        \n            \n        \n\n\n    \n\n    \n        Autocomplete\n\n\n\n\nTable of Contents\n\nBasic usage with a FormControl\nAllow multiple selections\nSeed selected values\nShow the progress indicator\nCustomize how the selected value is displayed\nEvent driven\nShow a 'no results' validation error\nMinimum required character count\n\n\nBasic usage with a FormControl\na) Pass an array of available options in. These are the options displayed to the user in the\n   dropdown.\nb) Create a local reference to the autocomplete component.\n\nc) Subscribe to the query events coming from the autocomplete. This is a stream of query strings\nentered by the user. This stream is debounced and de-duped by default.\ninterface OptionType {\n  id: string;\n  login: string;\n  [key: string]: any;\n}\n\n// Create a reference to the autocomplete and pass in a typing for the options\n@ViewChild('auto')\npublic auto: TsAutocompleteComponent;\n\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      // Only hit the API if a query was sent in\n      if (term) {\n        // Start the progress indicator\n        this.inProgress = true;\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              // Stop the progress indicator\n              this.inProgress = false;\n              return response['items'];\n            }),\n          )\n      } else {\n        // If no query was passed in, reset the search results and stop the progress indicator\n        this.inProgress = false;\n        return of([]);\n      }\n    }),\n  )\n;\nChange the debounce delay by setting debounceDelay.\n\nAllow multiple selections\nTo allow multiple selections, pass in a comparator function. This function should match the type {@link TsAutocompleteComparatorFn} which has the basic signature of (v: any) => string.\nThis comparator function will be used by the autocomplete to determine if a selection is a\nduplicate. It is also used as the trackBy function when looping through options.\nSeed selected values\nTo seed initial values, pass the array of selections to initialSelections:\nShow the progress indicator\nShow a progress indicator by toggling the showProgress value:\nthis.isInProgress = true;Customize how the selected value is displayed\nThe UI display of selected options can be changed by passing in a custom displayWith function.\nThis function should match {@link TsAutocompleteFormatterFn} which has the signature of (v) =>\nstring;\n\n v.login\"\n>Event driven\nIf a FormControl isn't needed, you can subscribe to events directly:\nadded(chip) {\n  console.log('Selection made!', chip);\n}\n\nremoved(chip) {\n  console.log('Selection removed!', chip);\n}\n\nchange(selections) {\n  console.log('Selection was changed!', selections);\n}Show a 'no results' validation error\nIf no results are found, set a validation error on the FormControl:\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      if (term) {\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              const items = response['items'];\n\n              // If no results are found, notify the user via a validation message\n              if (items.length Minimum required character count\nBy default, two characters must be entered before a query is emitted. This value can be overridden:\n\n    \n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  MatAutocomplete,\n  MatAutocompleteSelectedEvent,\n  MatAutocompleteTrigger,\n} from '@angular/material/autocomplete';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\nimport {\n  BehaviorSubject,\n} from 'rxjs';\nimport {\n  coerceArray,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  arrayContainsObject,\n  isFunction,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\nexport interface KeyboardEvent {\n  [key: string]: any;\n}\n\nexport interface MouseEvent {\n  [key: string]: any;\n}\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} formatter function\n */\nexport type TsAutocompleteFormatterFn = (value: any) => string;\n\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} comparator function\n */\nexport type TsAutocompleteComparatorFn = (value: any) => string;\n\n\nexport class TsAutocompleteSelectedEvent extends MatAutocompleteSelectedEvent {}\n\n\n/**\n * The autocomplete UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-autocomplete`: The primary container\n * - `qa-autocomplete-input`: The input element\n * - `qa-autocomplete-spinner`: The progress indicator\n * - `qa-autocomplete-chip`: An individual selection 'chip'\n * - `qa-autocomplete-options`: The container for the list of options\n * - `qa-autocomplete-option`: An individual option from the list\n * - `qa-autocomplete-hint`: The input hint\n * - `qa-autocomplete-validation-messages`: The container for validation messages\n *\n * @example\n *  v.name\"\n *              hint=\"Begin typing to search..\"\n *              label=\"Select options:\"\n *              multiple=\"(v) => v.id\"\n *              name=\"product selections\"\n *              options=\"[{}, {}, ...]\"\n *              selectionsControl=\"myForm.get('myControl')\"\n *              [showProgress]=\"inProgress\"\n *              theme=\"primary\"\n *              initialSelections=\"[{}]\"\n *              (optionSelected)=\"mySelected($event)\"\n *              (optionRemoved)=\"myRemoved($event)\"\n *              (selection)=\"mySelection($event)\"\n *              (query)=\"myQuery($event)\"\n * >\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  exportAs: 'tsAutocomplete',\n  host: {\n    class: 'ts-autocomplete',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsAutocompleteComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Management of the query string\n   */\n  public querySubject: BehaviorSubject = new BehaviorSubject('');\n\n  /**\n   * Store the search query\n   */\n  public searchQuery!: string;\n\n  /**\n   * Define if the chips/selections should be selectable\n   */\n  public selectableChips: boolean = false;\n\n  /**\n   * Store the selected options\n   */\n  public selectedOptions: OptionType[] = [];\n\n  /**\n   * Store the formatter function for the UI display\n   */\n  private uiFormatFn!: (value: OptionType) => string;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocomplete')\n  public autocomplete!: MatAutocomplete;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocompleteTrigger')\n  set autocompleteTrigger(value: MatAutocompleteTrigger) {\n    this.trigger = value;\n  }\n  get autocompleteTrigger(): MatAutocompleteTrigger {\n    return this.trigger;\n  }\n  private trigger!: MatAutocompleteTrigger;\n\n  /**\n   * Provide direct access to the input\n   */\n  @ViewChild('input')\n  public input!: ElementRef;\n\n  /**\n   * Define a debounce delay for the query\n   */\n  @Input()\n  public set debounceDelay(value: number) {\n    this._debounceDelay = coerceNumberProperty(value);\n  }\n  public get debounceDelay(): number {\n    return this._debounceDelay;\n  }\n  private _debounceDelay: number = 200;\n\n  /**\n   * A function to output the UI text from the selected item\n   *\n   * When undefined the full selection object will be used as the display value\n   */\n  @Input()\n  public set displayWith(value: TsAutocompleteFormatterFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this.uiFormatFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'displayWith' must be passed a function.`);\n      }\n    }\n  }\n  public get displayWith(): TsAutocompleteFormatterFn {\n    return this.uiFormatFn;\n  }\n\n  /**\n   * Define a hint for the input\n   */\n  // FIXME: Fix potential overlap of hint and error messages\n  @Input()\n  public hint: string | undefined;\n\n  /**\n   * Define the placeholder/label\n   */\n  @Input()\n  public label: string | undefined;\n\n  /**\n   * Define a minimum character count for queries\n   */\n  @Input()\n  public set minimumCharacters(value: number) {\n    this._minimumCharacters = coerceNumberProperty(value);\n  }\n  public get minimumCharacters(): number {\n    return this._minimumCharacters;\n  }\n  private _minimumCharacters: number = 2;\n\n  /**\n   * Define if multiple selections are allowed by passing in a comparator function\n   */\n  @Input()\n  public set multiple(v: TsAutocompleteComparatorFn) {\n    if (!v) {\n      return;\n    }\n\n    if (isFunction(v)) {\n      this.comparatorFn = v;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'multiple' must be passed a 'TsAutocompleteComparatorFn' function.`);\n      }\n    }\n  }\n  public get multiple(): TsAutocompleteComparatorFn {\n    return this.comparatorFn;\n  }\n  private comparatorFn!: TsAutocompleteComparatorFn;\n\n  /**\n   * Define the name attribute value\n   */\n  @Input()\n  public name: string | undefined;\n\n  /**\n   * The list of options to display in the drop down\n   */\n  @Input()\n  public options!: OptionType[];\n\n  /**\n   * Define the form control to save selections to\n   */\n  @Input()\n  public selectionsControl!: FormControl;\n\n  /**\n   * Define if the progress spinner should be active\n   */\n  @Input()\n  public showProgress: boolean = false;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define items that should be selected when the component loads\n   */\n  @Input()\n  public set initialSelections(selections: OptionType[]) {\n    // istanbul ignore else\n    if (selections) {\n      // Seed the array\n      this.selectedOptions = coerceArray(selections.slice());\n\n      // istanbul ignore else\n      if (this.selectionsControl && this.selectionsControl.setValue) {\n        // Seed the formControl\n        this.selectionsControl.setValue(this.selectedOptions);\n      }\n    }\n  }\n\n  /**\n   * Emit the selected chip\n   */\n  @Output()\n  public optionSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the removed chip\n   */\n  @Output()\n  public optionRemoved: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the current selection\n   */\n  @Output()\n  public selection: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the query string\n   */\n  @Output()\n  public query: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Subscribe to the querySubject and pass values to the query emitter\n   *\n   * FIXME: When an option is selected, the full selected value is piped through this stream\n   * somehow. Have not figured out why. Best guess is it's something due to the `matAutocomplete`\n   * directive. For now, we are filtering out anything that is not a string.\n   */\n  public ngAfterViewInit(): void {\n    // Take a stream of query changes\n    this.querySubject.pipe(\n      untilComponentDestroyed(this),\n      filter((v) => (typeof v === 'string') && v.length >= this.minimumCharacters),\n      // Debounce the query changes\n      debounceTime(this.debounceDelay),\n      // Only allow a query through if it is different from the previous query\n      distinctUntilChanged(),\n    ).subscribe((query: string) => {\n      this.query.next(query);\n    });\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Select an option\n   *\n   * @param event - The selection event from the underlying MatAutocomplete\n   */\n  public selectOption(event: TsAutocompleteSelectedEvent): void {\n    // The selected option\n    const selection: OptionType = event.option.value;\n\n    // Stop the flow if the selection already exists in the array\n    if (arrayContainsObject(selection, this.selectedOptions, this.comparatorFn)) {\n      // Set an error on the control to let the user know they chose a duplicate option\n      // istanbul ignore else\n      if (this.selectionsControl) {\n        this.setDuplicateError(this.selectionsControl, selection, this.uiFormatFn);\n      }\n\n      return;\n    }\n\n\n    // Add to the displayed selection chips\n    this.selectedOptions.push(selection);\n\n    // If supporting multiple selections, reset the input text value\n    if (this.multiple) {\n      this.resetSearch();\n    }\n\n    // Update the form control\n    // istanbul ignore else\n    if (this.selectionsControl && this.selectionsControl.setValue) {\n      this.selectionsControl.setValue(this.selectedOptions);\n    }\n\n    // Notify consumers about changes\n    this.optionSelected.emit(event.option.value);\n    this.selection.emit(this.selectedOptions);\n  }\n\n\n  /**\n   * Deselect an option\n   *\n   * @param option - The option to deselect\n   */\n  public deselectOption(option: OptionType): void {\n    // Find the key of the selection in the selectedOptions array\n    const index = this.selectedOptions.indexOf(option);\n\n    // If not found\n    if (index \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NavigationItemBase.html":{"url":"interfaces/NavigationItemBase.html","title":"interface - NavigationItemBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NavigationItemBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Base allowed keys for an item passed to the TsNavigationComponent\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alwaysHidden\n                                \n                                \n                                            Optional\n                                        isDisabled\n                                \n                                \n                                            Optional\n                                        isForAdmin\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysHidden\n                                    \n                                \n                                \n                                    \n                                        alwaysHidden:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Define if the item should only be allowed in the secondary navigation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDisabled\n                                    \n                                \n                                \n                                    \n                                        isDisabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define if the item is disabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isForAdmin\n                                    \n                                \n                                \n                                    \n                                        isForAdmin:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define if the item is for admin functionality only\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value to use as the item text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TerminusUIModule.html":{"url":"modules/TerminusUIModule.html","title":"module - TerminusUIModule","body":"\n                   \n\n\n\n\n  Modules\n  TerminusUIModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TerminusUIModule\n\n\n\ncluster_TerminusUIModule_declarations\n\n\n\ncluster_TerminusUIModule_imports\n\n\n\ncluster_TerminusUIModule_exports\n\n\n\ncluster_TerminusUIModule_providers\n\n\n\n\nTsReactiveFormBaseComponent\n\nTsReactiveFormBaseComponent\n\n\n\nTerminusUIModule\n\nTerminusUIModule\n\nTerminusUIModule -->\n\nTsReactiveFormBaseComponent->TerminusUIModule\n\n\n\n\n\nTsAutocompleteModule \n\nTsAutocompleteModule \n\nTsAutocompleteModule  -->\n\nTerminusUIModule->TsAutocompleteModule \n\n\n\n\n\nTsAutofocusModule \n\nTsAutofocusModule \n\nTsAutofocusModule  -->\n\nTerminusUIModule->TsAutofocusModule \n\n\n\n\n\nTsButtonModule \n\nTsButtonModule \n\nTsButtonModule  -->\n\nTerminusUIModule->TsButtonModule \n\n\n\n\n\nTsCSVEntryModule \n\nTsCSVEntryModule \n\nTsCSVEntryModule  -->\n\nTerminusUIModule->TsCSVEntryModule \n\n\n\n\n\nTsCardModule \n\nTsCardModule \n\nTsCardModule  -->\n\nTerminusUIModule->TsCardModule \n\n\n\n\n\nTsChartModule \n\nTsChartModule \n\nTsChartModule  -->\n\nTerminusUIModule->TsChartModule \n\n\n\n\n\nTsCheckboxModule \n\nTsCheckboxModule \n\nTsCheckboxModule  -->\n\nTerminusUIModule->TsCheckboxModule \n\n\n\n\n\nTsConfirmationModule \n\nTsConfirmationModule \n\nTsConfirmationModule  -->\n\nTerminusUIModule->TsConfirmationModule \n\n\n\n\n\nTsCopyModule \n\nTsCopyModule \n\nTsCopyModule  -->\n\nTerminusUIModule->TsCopyModule \n\n\n\n\n\nTsDateRangeModule \n\nTsDateRangeModule \n\nTsDateRangeModule  -->\n\nTerminusUIModule->TsDateRangeModule \n\n\n\n\n\nTsDatepickerModule \n\nTsDatepickerModule \n\nTsDatepickerModule  -->\n\nTerminusUIModule->TsDatepickerModule \n\n\n\n\n\nTsFileUploadModule \n\nTsFileUploadModule \n\nTsFileUploadModule  -->\n\nTerminusUIModule->TsFileUploadModule \n\n\n\n\n\nTsIconButtonModule \n\nTsIconButtonModule \n\nTsIconButtonModule  -->\n\nTerminusUIModule->TsIconButtonModule \n\n\n\n\n\nTsIconModule \n\nTsIconModule \n\nTsIconModule  -->\n\nTerminusUIModule->TsIconModule \n\n\n\n\n\nTsInputModule \n\nTsInputModule \n\nTsInputModule  -->\n\nTerminusUIModule->TsInputModule \n\n\n\n\n\nTsLinkModule \n\nTsLinkModule \n\nTsLinkModule  -->\n\nTerminusUIModule->TsLinkModule \n\n\n\n\n\nTsLoadingOverlayModule \n\nTsLoadingOverlayModule \n\nTsLoadingOverlayModule  -->\n\nTerminusUIModule->TsLoadingOverlayModule \n\n\n\n\n\nTsLoginFormModule \n\nTsLoginFormModule \n\nTsLoginFormModule  -->\n\nTerminusUIModule->TsLoginFormModule \n\n\n\n\n\nTsMaskModule \n\nTsMaskModule \n\nTsMaskModule  -->\n\nTerminusUIModule->TsMaskModule \n\n\n\n\n\nTsMenuModule \n\nTsMenuModule \n\nTsMenuModule  -->\n\nTerminusUIModule->TsMenuModule \n\n\n\n\n\nTsNavigationModule \n\nTsNavigationModule \n\nTsNavigationModule  -->\n\nTerminusUIModule->TsNavigationModule \n\n\n\n\n\nTsPaginatorModule \n\nTsPaginatorModule \n\nTsPaginatorModule  -->\n\nTerminusUIModule->TsPaginatorModule \n\n\n\n\n\nTsRadioGroupModule \n\nTsRadioGroupModule \n\nTsRadioGroupModule  -->\n\nTerminusUIModule->TsRadioGroupModule \n\n\n\n\n\nTsSearchModule \n\nTsSearchModule \n\nTsSearchModule  -->\n\nTerminusUIModule->TsSearchModule \n\n\n\n\n\nTsSelectModule \n\nTsSelectModule \n\nTsSelectModule  -->\n\nTerminusUIModule->TsSelectModule \n\n\n\n\n\nTsSortModule \n\nTsSortModule \n\nTsSortModule  -->\n\nTerminusUIModule->TsSortModule \n\n\n\n\n\nTsSpacingModule \n\nTsSpacingModule \n\nTsSpacingModule  -->\n\nTerminusUIModule->TsSpacingModule \n\n\n\n\n\nTsTableModule \n\nTsTableModule \n\nTsTableModule  -->\n\nTerminusUIModule->TsTableModule \n\n\n\n\n\nTsToggleModule \n\nTsToggleModule \n\nTsToggleModule  -->\n\nTerminusUIModule->TsToggleModule \n\n\n\n\n\nTsTooltipModule \n\nTsTooltipModule \n\nTsTooltipModule  -->\n\nTerminusUIModule->TsTooltipModule \n\n\n\n\n\nTsValidationMessagesModule \n\nTsValidationMessagesModule \n\nTsValidationMessagesModule  -->\n\nTerminusUIModule->TsValidationMessagesModule \n\n\n\n\n\nTsAutocompleteModule\n\nTsAutocompleteModule\n\nTerminusUIModule -->\n\nTsAutocompleteModule->TerminusUIModule\n\n\n\n\n\nTsAutofocusModule\n\nTsAutofocusModule\n\nTerminusUIModule -->\n\nTsAutofocusModule->TerminusUIModule\n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTerminusUIModule -->\n\nTsButtonModule->TerminusUIModule\n\n\n\n\n\nTsCSVEntryModule\n\nTsCSVEntryModule\n\nTerminusUIModule -->\n\nTsCSVEntryModule->TerminusUIModule\n\n\n\n\n\nTsCardModule\n\nTsCardModule\n\nTerminusUIModule -->\n\nTsCardModule->TerminusUIModule\n\n\n\n\n\nTsChartModule\n\nTsChartModule\n\nTerminusUIModule -->\n\nTsChartModule->TerminusUIModule\n\n\n\n\n\nTsCheckboxModule\n\nTsCheckboxModule\n\nTerminusUIModule -->\n\nTsCheckboxModule->TerminusUIModule\n\n\n\n\n\nTsConfirmationModule\n\nTsConfirmationModule\n\nTerminusUIModule -->\n\nTsConfirmationModule->TerminusUIModule\n\n\n\n\n\nTsCopyModule\n\nTsCopyModule\n\nTerminusUIModule -->\n\nTsCopyModule->TerminusUIModule\n\n\n\n\n\nTsDateRangeModule\n\nTsDateRangeModule\n\nTerminusUIModule -->\n\nTsDateRangeModule->TerminusUIModule\n\n\n\n\n\nTsDatepickerModule\n\nTsDatepickerModule\n\nTerminusUIModule -->\n\nTsDatepickerModule->TerminusUIModule\n\n\n\n\n\nTsFileUploadModule\n\nTsFileUploadModule\n\nTerminusUIModule -->\n\nTsFileUploadModule->TerminusUIModule\n\n\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTerminusUIModule -->\n\nTsIconButtonModule->TerminusUIModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTerminusUIModule -->\n\nTsIconModule->TerminusUIModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTerminusUIModule -->\n\nTsInputModule->TerminusUIModule\n\n\n\n\n\nTsLinkModule\n\nTsLinkModule\n\nTerminusUIModule -->\n\nTsLinkModule->TerminusUIModule\n\n\n\n\n\nTsLoadingOverlayModule\n\nTsLoadingOverlayModule\n\nTerminusUIModule -->\n\nTsLoadingOverlayModule->TerminusUIModule\n\n\n\n\n\nTsLoginFormModule\n\nTsLoginFormModule\n\nTerminusUIModule -->\n\nTsLoginFormModule->TerminusUIModule\n\n\n\n\n\nTsMaskModule\n\nTsMaskModule\n\nTerminusUIModule -->\n\nTsMaskModule->TerminusUIModule\n\n\n\n\n\nTsMenuModule\n\nTsMenuModule\n\nTerminusUIModule -->\n\nTsMenuModule->TerminusUIModule\n\n\n\n\n\nTsNavigationModule\n\nTsNavigationModule\n\nTerminusUIModule -->\n\nTsNavigationModule->TerminusUIModule\n\n\n\n\n\nTsPaginatorModule\n\nTsPaginatorModule\n\nTerminusUIModule -->\n\nTsPaginatorModule->TerminusUIModule\n\n\n\n\n\nTsRadioGroupModule\n\nTsRadioGroupModule\n\nTerminusUIModule -->\n\nTsRadioGroupModule->TerminusUIModule\n\n\n\n\n\nTsSearchModule\n\nTsSearchModule\n\nTerminusUIModule -->\n\nTsSearchModule->TerminusUIModule\n\n\n\n\n\nTsSelectModule\n\nTsSelectModule\n\nTerminusUIModule -->\n\nTsSelectModule->TerminusUIModule\n\n\n\n\n\nTsSortModule\n\nTsSortModule\n\nTerminusUIModule -->\n\nTsSortModule->TerminusUIModule\n\n\n\n\n\nTsSpacingModule\n\nTsSpacingModule\n\nTerminusUIModule -->\n\nTsSpacingModule->TerminusUIModule\n\n\n\n\n\nTsTableModule\n\nTsTableModule\n\nTerminusUIModule -->\n\nTsTableModule->TerminusUIModule\n\n\n\n\n\nTsToggleModule\n\nTsToggleModule\n\nTerminusUIModule -->\n\nTsToggleModule->TerminusUIModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTerminusUIModule -->\n\nTsTooltipModule->TerminusUIModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTerminusUIModule -->\n\nTsValidationMessagesModule->TerminusUIModule\n\n\n\n\n\nTsValidatorsService\n\nTsValidatorsService\n\nTerminusUIModule -->\n\nTsValidatorsService->TerminusUIModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsReactiveFormBaseComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsValidatorsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsAutocompleteModule\n                            \n                            \n                                    TsAutofocusModule\n                            \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsCSVEntryModule\n                            \n                            \n                                    TsCardModule\n                            \n                            \n                                    TsChartModule\n                            \n                            \n                                    TsCheckboxModule\n                            \n                            \n                                    TsConfirmationModule\n                            \n                            \n                                    TsCopyModule\n                            \n                            \n                                    TsDateRangeModule\n                            \n                            \n                                    TsDatepickerModule\n                            \n                            \n                                    TsFileUploadModule\n                            \n                            \n                                    TsIconButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsInputModule\n                            \n                            \n                                    TsLinkModule\n                            \n                            \n                                    TsLoadingOverlayModule\n                            \n                            \n                                    TsLoginFormModule\n                            \n                            \n                                    TsMaskModule\n                            \n                            \n                                    TsMenuModule\n                            \n                            \n                                    TsNavigationModule\n                            \n                            \n                                    TsPaginatorModule\n                            \n                            \n                                    TsRadioGroupModule\n                            \n                            \n                                    TsSearchModule\n                            \n                            \n                                    TsSelectModule\n                            \n                            \n                                    TsSortModule\n                            \n                            \n                                    TsSpacingModule\n                            \n                            \n                                    TsTableModule\n                            \n                            \n                                    TsToggleModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsAutocompleteModule\n                            \n                            \n                                    TsAutofocusModule\n                            \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsCSVEntryModule\n                            \n                            \n                                    TsCardModule\n                            \n                            \n                                    TsChartModule\n                            \n                            \n                                    TsCheckboxModule\n                            \n                            \n                                    TsConfirmationModule\n                            \n                            \n                                    TsCopyModule\n                            \n                            \n                                    TsDateRangeModule\n                            \n                            \n                                    TsDatepickerModule\n                            \n                            \n                                    TsFileUploadModule\n                            \n                            \n                                    TsIconButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsInputModule\n                            \n                            \n                                    TsLinkModule\n                            \n                            \n                                    TsLoadingOverlayModule\n                            \n                            \n                                    TsLoginFormModule\n                            \n                            \n                                    TsMaskModule\n                            \n                            \n                                    TsMenuModule\n                            \n                            \n                                    TsNavigationModule\n                            \n                            \n                                    TsPaginatorModule\n                            \n                            \n                                    TsRadioGroupModule\n                            \n                            \n                                    TsSearchModule\n                            \n                            \n                                    TsSelectModule\n                            \n                            \n                                    TsSortModule\n                            \n                            \n                                    TsSpacingModule\n                            \n                            \n                                    TsTableModule\n                            \n                            \n                                    TsToggleModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // Angular imports\nimport { NgModule } from '@angular/core';\n\n// Components\nimport { TsAutocompleteModule } from './autocomplete/autocomplete.module';\nimport { TsAutofocusModule } from './autofocus/autofocus.module';\nimport { TsButtonModule } from './button/button.module';\nimport { TsCardModule } from './card/card.module';\nimport { TsChartModule } from './chart/chart.module';\nimport { TsCheckboxModule } from './checkbox/checkbox.module';\nimport { TsConfirmationModule } from './confirmation/confirmation.module';\nimport { TsCopyModule } from './copy/copy.module';\nimport { TsCSVEntryModule } from './csv-entry/csv-entry.module';\nimport { TsDateRangeModule } from './date-range/date-range.module';\nimport { TsDatepickerModule } from './datepicker/datepicker.module';\nimport { TsFileUploadModule } from './file-upload/file-upload.module';\nimport { TsIconButtonModule } from './icon-button/icon-button.module';\nimport { TsIconModule } from './icon/icon.module';\nimport { TsInputModule } from './input/input.module';\nimport { TsLinkModule } from './link/link.module';\nimport { TsLoadingOverlayModule } from './loading-overlay/loading-overlay.module';\nimport { TsLoginFormModule } from './login-form/login-form.module';\nimport { TsMaskModule } from './mask/mask.module';\nimport { TsMenuModule } from './menu/menu.module';\nimport { TsNavigationModule } from './navigation/navigation.module';\nimport { TsPaginatorModule } from './paginator/paginator.module';\nimport { TsPipesModule } from './pipes/pipes.module';\nimport { TsRadioGroupModule } from './radio-group/radio-group.module';\nimport { TsSearchModule } from './search/search.module';\nimport { TsSelectModule } from './select/select.module';\nimport { TsSortModule } from './sort/sort.module';\nimport { TsSpacingModule } from './spacing/spacing.module';\nimport { TsTableModule } from './table/table.module';\nimport { TsToggleModule } from './toggle/toggle.module';\nimport { TsTooltipModule } from './tooltip/tooltip.module';\nimport { TsValidationMessagesModule } from './validation-messages/validation-messages.module';\n// INJECT: UI component to UI module\n// NB! The above line is required for our yeoman generator and should not be changed.\n\nimport { TsValidatorsService } from './validators/validators.service';\nimport { TsReactiveFormBaseComponent } from './utilities/reactive-form-base.component';\n\n@NgModule({\n  imports: [\n    TsAutocompleteModule,\n    TsAutofocusModule,\n    TsButtonModule,\n    TsCardModule,\n    TsChartModule,\n    TsCheckboxModule,\n    TsConfirmationModule,\n    TsCopyModule,\n    TsCSVEntryModule,\n    TsDateRangeModule,\n    TsDatepickerModule,\n    TsFileUploadModule,\n    TsIconButtonModule,\n    TsIconModule,\n    TsInputModule,\n    TsLinkModule,\n    TsLoadingOverlayModule,\n    TsLoginFormModule,\n    TsMaskModule,\n    TsMenuModule,\n    TsNavigationModule,\n    TsPaginatorModule,\n    TsPipesModule,\n    TsRadioGroupModule,\n    TsSearchModule,\n    TsSelectModule,\n    TsSortModule,\n    TsSpacingModule,\n    TsTableModule,\n    TsToggleModule,\n    TsTooltipModule,\n    TsValidationMessagesModule,\n    // INJECT: Add UI component module to imports\n    // NB! The above line is required for our yeoman generator and should not be changed.\n  ],\n  declarations: [\n    TsReactiveFormBaseComponent,\n  ],\n  providers: [\n    TsValidatorsService,\n  ],\n  exports: [\n    TsAutocompleteModule,\n    TsAutofocusModule,\n    TsButtonModule,\n    TsCardModule,\n    TsChartModule,\n    TsCheckboxModule,\n    TsConfirmationModule,\n    TsCopyModule,\n    TsCSVEntryModule,\n    TsDateRangeModule,\n    TsDatepickerModule,\n    TsFileUploadModule,\n    TsIconButtonModule,\n    TsIconModule,\n    TsInputModule,\n    TsLinkModule,\n    TsLoadingOverlayModule,\n    TsLoginFormModule,\n    TsMaskModule,\n    TsMenuModule,\n    TsNavigationModule,\n    TsPaginatorModule,\n    TsPipesModule,\n    TsRadioGroupModule,\n    TsSearchModule,\n    TsSelectModule,\n    TsSortModule,\n    TsSpacingModule,\n    TsTableModule,\n    TsToggleModule,\n    TsTooltipModule,\n    TsValidationMessagesModule,\n    // INJECT: Add UI component to module exports\n    // NB! The above line is required for our yeoman generator and should not be changed.\n  ],\n})\nexport class TerminusUIModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsAmChartsService.html":{"url":"injectables/TsAmChartsService.html","title":"injectable - TsAmChartsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsAmChartsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart2/amcharts.service.ts\n        \n\n            \n                Description\n            \n            \n                Expose amCharts via a service\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                amCharts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amCharts: TsAmChartsToken)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/chart2/amcharts.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amCharts\n                                                  \n                                                        \n                                                                    TsAmChartsToken\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            amCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        amCharts:     TsAmChartsToken\n\n                    \n                \n                    \n                        \n                            Type :     TsAmChartsToken\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart2/amcharts.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InjectionToken,\n} from '@angular/core';\n\n\nexport interface TsAmChartsToken {\n  core: any;\n  charts: any;\n  maps?: any;\n  themes?: any[];\n}\n\n/**\n * Create an injection token that the consumer can override with their version of Highcharts\n */\nexport const TS_AMCHARTS_TOKEN: InjectionToken = new InjectionToken('amCharts');\n\n\n/**\n * Expose amCharts via a service\n */\n@Injectable()\nexport class TsAmChartsService {\n\n  constructor(\n    @Inject(TS_AMCHARTS_TOKEN) public amCharts: TsAmChartsToken,\n  ) {\n    if (amCharts && amCharts.themes && amCharts.themes.length > 0) {\n      for (const theme of amCharts.themes) {\n        // istanbul ignore else\n        if (theme) {\n          amCharts.core.useTheme(theme);\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsAmChartsToken.html":{"url":"interfaces/TsAmChartsToken.html","title":"interface - TsAmChartsToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsAmChartsToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart2/amcharts.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        charts\n                                \n                                \n                                        core\n                                \n                                \n                                            Optional\n                                        maps\n                                \n                                \n                                            Optional\n                                        themes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        charts\n                                    \n                                \n                                \n                                    \n                                        charts:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        core\n                                    \n                                \n                                \n                                    \n                                        core:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maps\n                                    \n                                \n                                \n                                    \n                                        maps:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InjectionToken,\n} from '@angular/core';\n\n\nexport interface TsAmChartsToken {\n  core: any;\n  charts: any;\n  maps?: any;\n  themes?: any[];\n}\n\n/**\n * Create an injection token that the consumer can override with their version of Highcharts\n */\nexport const TS_AMCHARTS_TOKEN: InjectionToken = new InjectionToken('amCharts');\n\n\n/**\n * Expose amCharts via a service\n */\n@Injectable()\nexport class TsAmChartsService {\n\n  constructor(\n    @Inject(TS_AMCHARTS_TOKEN) public amCharts: TsAmChartsToken,\n  ) {\n    if (amCharts && amCharts.themes && amCharts.themes.length > 0) {\n      for (const theme of amCharts.themes) {\n        // istanbul ignore else\n        if (theme) {\n          amCharts.core.useTheme(theme);\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsAutocompleteModule.html":{"url":"modules/TsAutocompleteModule.html","title":"module - TsAutocompleteModule","body":"\n                   \n\n\n\n\n  Modules\n  TsAutocompleteModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsAutocompleteModule\n\n\n\ncluster_TsAutocompleteModule_declarations\n\n\n\ncluster_TsAutocompleteModule_imports\n\n\n\ncluster_TsAutocompleteModule_exports\n\n\n\n\nTsAutocompleteComponent\n\nTsAutocompleteComponent\n\n\n\nTsAutocompleteModule\n\nTsAutocompleteModule\n\nTsAutocompleteModule -->\n\nTsAutocompleteComponent->TsAutocompleteModule\n\n\n\n\n\nTsAutocompleteComponent \n\nTsAutocompleteComponent \n\nTsAutocompleteComponent  -->\n\nTsAutocompleteModule->TsAutocompleteComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsAutocompleteModule -->\n\nTsIconModule->TsAutocompleteModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsAutocompleteModule -->\n\nTsInputModule->TsAutocompleteModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsAutocompleteModule -->\n\nTsValidationMessagesModule->TsAutocompleteModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/autocomplete/autocomplete.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsAutocompleteComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsInputModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsAutocompleteComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsInputModule } from './../input/input.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsAutocompleteComponent } from './autocomplete.component';\n\nexport * from './autocomplete.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatChipsModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    TsIconModule,\n    TsValidationMessagesModule,\n    TsInputModule,\n  ],\n  declarations: [\n    TsAutocompleteComponent,\n  ],\n  exports: [\n    TsAutocompleteComponent,\n  ],\n})\nexport class TsAutocompleteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsAutocompleteSelectedEvent.html":{"url":"classes/TsAutocompleteSelectedEvent.html","title":"class - TsAutocompleteSelectedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsAutocompleteSelectedEvent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/autocomplete/autocomplete.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MatAutocompleteSelectedEvent\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        Autocomplete\n\n\n\n\nTable of Contents\n\nBasic usage with a FormControl\nAllow multiple selections\nSeed selected values\nShow the progress indicator\nCustomize how the selected value is displayed\nEvent driven\nShow a 'no results' validation error\nMinimum required character count\n\n\nBasic usage with a FormControl\na) Pass an array of available options in. These are the options displayed to the user in the\n   dropdown.\nb) Create a local reference to the autocomplete component.\n\nc) Subscribe to the query events coming from the autocomplete. This is a stream of query strings\nentered by the user. This stream is debounced and de-duped by default.\ninterface OptionType {\n  id: string;\n  login: string;\n  [key: string]: any;\n}\n\n// Create a reference to the autocomplete and pass in a typing for the options\n@ViewChild('auto')\npublic auto: TsAutocompleteComponent;\n\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      // Only hit the API if a query was sent in\n      if (term) {\n        // Start the progress indicator\n        this.inProgress = true;\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              // Stop the progress indicator\n              this.inProgress = false;\n              return response['items'];\n            }),\n          )\n      } else {\n        // If no query was passed in, reset the search results and stop the progress indicator\n        this.inProgress = false;\n        return of([]);\n      }\n    }),\n  )\n;\nChange the debounce delay by setting debounceDelay.\n\nAllow multiple selections\nTo allow multiple selections, pass in a comparator function. This function should match the type {@link TsAutocompleteComparatorFn} which has the basic signature of (v: any) => string.\nThis comparator function will be used by the autocomplete to determine if a selection is a\nduplicate. It is also used as the trackBy function when looping through options.\nSeed selected values\nTo seed initial values, pass the array of selections to initialSelections:\nShow the progress indicator\nShow a progress indicator by toggling the showProgress value:\nthis.isInProgress = true;Customize how the selected value is displayed\nThe UI display of selected options can be changed by passing in a custom displayWith function.\nThis function should match {@link TsAutocompleteFormatterFn} which has the signature of (v) =>\nstring;\n\n v.login\"\n>Event driven\nIf a FormControl isn't needed, you can subscribe to events directly:\nadded(chip) {\n  console.log('Selection made!', chip);\n}\n\nremoved(chip) {\n  console.log('Selection removed!', chip);\n}\n\nchange(selections) {\n  console.log('Selection was changed!', selections);\n}Show a 'no results' validation error\nIf no results are found, set a validation error on the FormControl:\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      if (term) {\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              const items = response['items'];\n\n              // If no results are found, notify the user via a validation message\n              if (items.length Minimum required character count\nBy default, two characters must be entered before a query is emitted. This value can be overridden:\n\n    \n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  MatAutocomplete,\n  MatAutocompleteSelectedEvent,\n  MatAutocompleteTrigger,\n} from '@angular/material/autocomplete';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\nimport {\n  BehaviorSubject,\n} from 'rxjs';\nimport {\n  coerceArray,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  arrayContainsObject,\n  isFunction,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\nexport interface KeyboardEvent {\n  [key: string]: any;\n}\n\nexport interface MouseEvent {\n  [key: string]: any;\n}\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} formatter function\n */\nexport type TsAutocompleteFormatterFn = (value: any) => string;\n\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} comparator function\n */\nexport type TsAutocompleteComparatorFn = (value: any) => string;\n\n\nexport class TsAutocompleteSelectedEvent extends MatAutocompleteSelectedEvent {}\n\n\n/**\n * The autocomplete UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-autocomplete`: The primary container\n * - `qa-autocomplete-input`: The input element\n * - `qa-autocomplete-spinner`: The progress indicator\n * - `qa-autocomplete-chip`: An individual selection 'chip'\n * - `qa-autocomplete-options`: The container for the list of options\n * - `qa-autocomplete-option`: An individual option from the list\n * - `qa-autocomplete-hint`: The input hint\n * - `qa-autocomplete-validation-messages`: The container for validation messages\n *\n * @example\n *  v.name\"\n *              hint=\"Begin typing to search..\"\n *              label=\"Select options:\"\n *              multiple=\"(v) => v.id\"\n *              name=\"product selections\"\n *              options=\"[{}, {}, ...]\"\n *              selectionsControl=\"myForm.get('myControl')\"\n *              [showProgress]=\"inProgress\"\n *              theme=\"primary\"\n *              initialSelections=\"[{}]\"\n *              (optionSelected)=\"mySelected($event)\"\n *              (optionRemoved)=\"myRemoved($event)\"\n *              (selection)=\"mySelection($event)\"\n *              (query)=\"myQuery($event)\"\n * >\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  exportAs: 'tsAutocomplete',\n  host: {\n    class: 'ts-autocomplete',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsAutocompleteComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Management of the query string\n   */\n  public querySubject: BehaviorSubject = new BehaviorSubject('');\n\n  /**\n   * Store the search query\n   */\n  public searchQuery!: string;\n\n  /**\n   * Define if the chips/selections should be selectable\n   */\n  public selectableChips: boolean = false;\n\n  /**\n   * Store the selected options\n   */\n  public selectedOptions: OptionType[] = [];\n\n  /**\n   * Store the formatter function for the UI display\n   */\n  private uiFormatFn!: (value: OptionType) => string;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocomplete')\n  public autocomplete!: MatAutocomplete;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocompleteTrigger')\n  set autocompleteTrigger(value: MatAutocompleteTrigger) {\n    this.trigger = value;\n  }\n  get autocompleteTrigger(): MatAutocompleteTrigger {\n    return this.trigger;\n  }\n  private trigger!: MatAutocompleteTrigger;\n\n  /**\n   * Provide direct access to the input\n   */\n  @ViewChild('input')\n  public input!: ElementRef;\n\n  /**\n   * Define a debounce delay for the query\n   */\n  @Input()\n  public set debounceDelay(value: number) {\n    this._debounceDelay = coerceNumberProperty(value);\n  }\n  public get debounceDelay(): number {\n    return this._debounceDelay;\n  }\n  private _debounceDelay: number = 200;\n\n  /**\n   * A function to output the UI text from the selected item\n   *\n   * When undefined the full selection object will be used as the display value\n   */\n  @Input()\n  public set displayWith(value: TsAutocompleteFormatterFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this.uiFormatFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'displayWith' must be passed a function.`);\n      }\n    }\n  }\n  public get displayWith(): TsAutocompleteFormatterFn {\n    return this.uiFormatFn;\n  }\n\n  /**\n   * Define a hint for the input\n   */\n  // FIXME: Fix potential overlap of hint and error messages\n  @Input()\n  public hint: string | undefined;\n\n  /**\n   * Define the placeholder/label\n   */\n  @Input()\n  public label: string | undefined;\n\n  /**\n   * Define a minimum character count for queries\n   */\n  @Input()\n  public set minimumCharacters(value: number) {\n    this._minimumCharacters = coerceNumberProperty(value);\n  }\n  public get minimumCharacters(): number {\n    return this._minimumCharacters;\n  }\n  private _minimumCharacters: number = 2;\n\n  /**\n   * Define if multiple selections are allowed by passing in a comparator function\n   */\n  @Input()\n  public set multiple(v: TsAutocompleteComparatorFn) {\n    if (!v) {\n      return;\n    }\n\n    if (isFunction(v)) {\n      this.comparatorFn = v;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'multiple' must be passed a 'TsAutocompleteComparatorFn' function.`);\n      }\n    }\n  }\n  public get multiple(): TsAutocompleteComparatorFn {\n    return this.comparatorFn;\n  }\n  private comparatorFn!: TsAutocompleteComparatorFn;\n\n  /**\n   * Define the name attribute value\n   */\n  @Input()\n  public name: string | undefined;\n\n  /**\n   * The list of options to display in the drop down\n   */\n  @Input()\n  public options!: OptionType[];\n\n  /**\n   * Define the form control to save selections to\n   */\n  @Input()\n  public selectionsControl!: FormControl;\n\n  /**\n   * Define if the progress spinner should be active\n   */\n  @Input()\n  public showProgress: boolean = false;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define items that should be selected when the component loads\n   */\n  @Input()\n  public set initialSelections(selections: OptionType[]) {\n    // istanbul ignore else\n    if (selections) {\n      // Seed the array\n      this.selectedOptions = coerceArray(selections.slice());\n\n      // istanbul ignore else\n      if (this.selectionsControl && this.selectionsControl.setValue) {\n        // Seed the formControl\n        this.selectionsControl.setValue(this.selectedOptions);\n      }\n    }\n  }\n\n  /**\n   * Emit the selected chip\n   */\n  @Output()\n  public optionSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the removed chip\n   */\n  @Output()\n  public optionRemoved: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the current selection\n   */\n  @Output()\n  public selection: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the query string\n   */\n  @Output()\n  public query: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Subscribe to the querySubject and pass values to the query emitter\n   *\n   * FIXME: When an option is selected, the full selected value is piped through this stream\n   * somehow. Have not figured out why. Best guess is it's something due to the `matAutocomplete`\n   * directive. For now, we are filtering out anything that is not a string.\n   */\n  public ngAfterViewInit(): void {\n    // Take a stream of query changes\n    this.querySubject.pipe(\n      untilComponentDestroyed(this),\n      filter((v) => (typeof v === 'string') && v.length >= this.minimumCharacters),\n      // Debounce the query changes\n      debounceTime(this.debounceDelay),\n      // Only allow a query through if it is different from the previous query\n      distinctUntilChanged(),\n    ).subscribe((query: string) => {\n      this.query.next(query);\n    });\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Select an option\n   *\n   * @param event - The selection event from the underlying MatAutocomplete\n   */\n  public selectOption(event: TsAutocompleteSelectedEvent): void {\n    // The selected option\n    const selection: OptionType = event.option.value;\n\n    // Stop the flow if the selection already exists in the array\n    if (arrayContainsObject(selection, this.selectedOptions, this.comparatorFn)) {\n      // Set an error on the control to let the user know they chose a duplicate option\n      // istanbul ignore else\n      if (this.selectionsControl) {\n        this.setDuplicateError(this.selectionsControl, selection, this.uiFormatFn);\n      }\n\n      return;\n    }\n\n\n    // Add to the displayed selection chips\n    this.selectedOptions.push(selection);\n\n    // If supporting multiple selections, reset the input text value\n    if (this.multiple) {\n      this.resetSearch();\n    }\n\n    // Update the form control\n    // istanbul ignore else\n    if (this.selectionsControl && this.selectionsControl.setValue) {\n      this.selectionsControl.setValue(this.selectedOptions);\n    }\n\n    // Notify consumers about changes\n    this.optionSelected.emit(event.option.value);\n    this.selection.emit(this.selectedOptions);\n  }\n\n\n  /**\n   * Deselect an option\n   *\n   * @param option - The option to deselect\n   */\n  public deselectOption(option: OptionType): void {\n    // Find the key of the selection in the selectedOptions array\n    const index = this.selectedOptions.indexOf(option);\n\n    // If not found\n    if (index \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsAutofocusDirective.html":{"url":"directives/TsAutofocusDirective.html","title":"directive - TsAutofocusDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsAutofocusDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/autofocus/autofocus.directive.ts\n        \n\n            \n                Description\n            \n            \n                Autofocus any focusable element on-load.\nPassing any truthy value OR an empty string will enable the autofocus.\n\n            \n\n            \n                Implements\n            \n            \n                        AfterViewInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \nClick Me\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsAutofocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                shouldFocus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsAutofocus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/autofocus/autofocus.directive.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tsAutofocus\n                    \n                    \n                        Define if the element should be focused after initialization\n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/autofocus/autofocus.directive.ts:35\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/autofocus/autofocus.directive.ts:48\n                            \n                        \n\n\n                \n                    \n                            Focus the input after the view has initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shouldFocus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shouldFocus:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/autofocus/autofocus.directive.ts:29\n                            \n                        \n\n                \n                    \n                        Store the shouldFocus value\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tsAutofocus\n                    \n                \n\n\n                \n                    \n                        settsAutofocus(value: any)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/autofocus/autofocus.directive.ts:35\n                                \n                            \n                    \n                        \n                                Define if the element should be focused after initialization\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n    \n        \n\nTable of Contents\n\nBasic usage\nBinding\n\n\nBasic usage\nThe tsAutofocus directive can be used on any element that has a .focus() method. This includes\ninputs, select menus, textarea, buttons, links, iframes and any element with a defined tabindex\nabove -1.\nAdd the directive to a focusable element:\nBinding\nPassing in any value except false, 'false', null, or undefined will enable the directive.\n\n\n\n\n\n\n\n\n    \n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  AfterViewInit,\n  isDevMode,\n  ChangeDetectorRef,\n} from '@angular/core';\n\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\n\n/**\n * Autofocus any focusable element on-load.\n *\n * Passing any truthy value OR an empty string will enable the autofocus.\n *\n * @example\n * \n * Click Me\n */\n@Directive({\n  selector: '[tsAutofocus]',\n})\nexport class TsAutofocusDirective implements AfterViewInit {\n  /**\n   * Store the shouldFocus value\n   */\n  private shouldFocus!: boolean;\n\n  /**\n   * Define if the element should be focused after initialization\n   */\n  @Input()\n  public set tsAutofocus(value: any) {\n    this.shouldFocus = coerceBooleanProperty(value);\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Focus the input after the view has initialized\n   */\n  public ngAfterViewInit(): void {\n    if (this.shouldFocus) {\n      const el = this.elementRef.nativeElement;\n\n      if (el.focus) {\n        el.focus();\n        this.changeDetectorRef.detectChanges();\n      } else {\n        // istanbul ignore else\n        if (isDevMode()) {\n          throw Error(`TsAutofocusDirective must be used on an element that has a .focus() method.`);\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsAutofocusModule.html":{"url":"modules/TsAutofocusModule.html","title":"module - TsAutofocusModule","body":"\n                   \n\n\n\n\n  Modules\n  TsAutofocusModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsAutofocusModule\n\n\n\ncluster_TsAutofocusModule_declarations\n\n\n\ncluster_TsAutofocusModule_exports\n\n\n\n\nTsAutofocusDirective\n\nTsAutofocusDirective\n\n\n\nTsAutofocusModule\n\nTsAutofocusModule\n\nTsAutofocusModule -->\n\nTsAutofocusDirective->TsAutofocusModule\n\n\n\n\n\nTsAutofocusDirective \n\nTsAutofocusDirective \n\nTsAutofocusDirective  -->\n\nTsAutofocusModule->TsAutofocusDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/autofocus/autofocus.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsAutofocusDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsAutofocusDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsAutofocusDirective } from './autofocus.directive';\n\nexport * from './autofocus.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TsAutofocusDirective,\n  ],\n  exports: [\n    TsAutofocusDirective,\n  ],\n})\nexport class TsAutofocusModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsButtonModule.html":{"url":"modules/TsButtonModule.html","title":"module - TsButtonModule","body":"\n                   \n\n\n\n\n  Modules\n  TsButtonModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsButtonModule\n\n\n\ncluster_TsButtonModule_declarations\n\n\n\ncluster_TsButtonModule_imports\n\n\n\ncluster_TsButtonModule_exports\n\n\n\n\nTsButtonComponent\n\nTsButtonComponent\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsButtonModule -->\n\nTsButtonComponent->TsButtonModule\n\n\n\n\n\nTsButtonComponent \n\nTsButtonComponent \n\nTsButtonComponent  -->\n\nTsButtonModule->TsButtonComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsButtonModule -->\n\nTsIconModule->TsButtonModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/button/button.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsButtonComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsButtonComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { TsWindowService } from '@terminus/ngx-tools';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsButtonComponent } from './button.component';\n\nexport * from './button.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    TsIconModule,\n  ],\n  providers: [\n    TsWindowService,\n  ],\n  exports: [\n    TsButtonComponent,\n  ],\n  declarations: [\n    TsButtonComponent,\n  ],\n})\nexport class TsButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsCSVEntryModule.html":{"url":"modules/TsCSVEntryModule.html","title":"module - TsCSVEntryModule","body":"\n                   \n\n\n\n\n  Modules\n  TsCSVEntryModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsCSVEntryModule\n\n\n\ncluster_TsCSVEntryModule_declarations\n\n\n\ncluster_TsCSVEntryModule_imports\n\n\n\ncluster_TsCSVEntryModule_exports\n\n\n\n\nTsCSVEntryComponent\n\nTsCSVEntryComponent\n\n\n\nTsCSVEntryModule\n\nTsCSVEntryModule\n\nTsCSVEntryModule -->\n\nTsCSVEntryComponent->TsCSVEntryModule\n\n\n\n\n\nTsCSVEntryComponent \n\nTsCSVEntryComponent \n\nTsCSVEntryComponent  -->\n\nTsCSVEntryModule->TsCSVEntryComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsCSVEntryModule -->\n\nTsButtonModule->TsCSVEntryModule\n\n\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTsCSVEntryModule -->\n\nTsIconButtonModule->TsCSVEntryModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsCSVEntryModule -->\n\nTsIconModule->TsCSVEntryModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsCSVEntryModule -->\n\nTsTooltipModule->TsCSVEntryModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/csv-entry/csv-entry.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCSVEntryComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsIconButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCSVEntryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { TsButtonModule } from './../button/button.module';\nimport { TsCSVEntryComponent } from './csv-entry.component';\nimport { TsIconButtonModule } from './../icon-button/icon-button.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsTooltipModule } from './../tooltip/tooltip.module';\n\nexport * from './csv-entry.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    TsButtonModule,\n    TsIconButtonModule,\n    TsIconModule,\n    TsTooltipModule,\n  ],\n  declarations: [\n    TsCSVEntryComponent,\n  ],\n  exports: [\n    TsCSVEntryComponent,\n  ],\n})\nexport class TsCSVEntryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsCSVEntryRecord.html":{"url":"interfaces/TsCSVEntryRecord.html","title":"interface - TsCSVEntryRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsCSVEntryRecord\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/csv-entry/csv-entry.component.ts\n        \n\n            \n                Description\n            \n            \n                The structure for an individual row\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        columns\n                                \n                                \n                                        recordId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                    \n                                \n                                \n                                    \n                                        columns:     (string | null)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (string | null)[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recordId\n                                    \n                                \n                                \n                                    \n                                        recordId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        csv-entry\n\n\n\n\nTable of Contents\n\nBasic usage\nColumn Count\nRow count\nMax rows\n\n\nColumn validation\nStatic Column Headers\n\n\nBasic usage\nThe most basic implementation only needs the HTML and a single method. Each time the CSV table is updated, a new File Blob is generated and\nemitted.\n\nmyFunc(blob: Blob) {\n  ...\n}Column Count\nControl the default column count via an Input:\n\n  \n\nNOTE: Column count does not restrict what is pasted into the table.\n\nRow count\nControl the default number of rows via an Input:\n\n  \n\nNOTE: Row count does not restrict what is pasted into the table.\n\nMax rows\nControl the maximum number of rows a table will allow\n\nIf the user attempts to paste or manually add more rows than are allowed, a validation message will appear below the table.\nColumn validation\n\nNOTE: Currently, custom validation messaging is only supported for the URL validator. More will be added as needs arise.\n\nPass in an array of validators matching the column count.\nmyValidators = [null, this.validatorsService.url(), null, null];\nThis example would add the URL validation to the second column only.\nStatic Column Headers\nIf there are certain headers that must be available, these can be set via an input:\n\nSetting static column headers will set the header cells to readonly. This will still allow keyboard navigation but will not allow the user\nto change the contents of the set header cells.\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  untilComponentDestroyed,\n  TsDocumentService,\n} from '@terminus/ngx-tools';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n} from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TS_SPACING } from './../spacing/spacing.constant';\n\n\n\n/**\n * The structure for an individual row\n */\nexport interface TsCSVEntryRecord {\n  recordId: number;\n  columns: (string | null)[];\n}\n\n/**\n * The structure for the form\n */\nexport interface TsCSVFormContents {\n  headers: string[];\n  records: TsCSVEntryRecord[];\n}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * This is the csv-entry UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-csv-entry`: The primary container\n * - `qa-csv-entry-info`: Container for row/column count\n * - `qa-csv-entry-row`: A row\n * - `qa-csv-entry-cell`: A body cell\n * - `qa-csv-entry-header-cell`: A header cell\n * - `qa-csv-entry-header-row`: Container for a header row\n * - `qa-csv-entry-delete`: A delete button\n * - `qa-csv-entry`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-csv-entry',\n  templateUrl: './csv-entry.component.html',\n  styleUrls: ['./csv-entry.component.scss'],\n  host: {\n    class: 'ts-csv-entry',\n  },\n  exportAs: 'tsCSVEntry',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsCSVEntryComponent implements OnInit, OnDestroy {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-csv-entry-${nextUniqueId++}`;\n\n  /**\n   * Define the default number of rows\n   */\n  public defaultRowCount = 4;\n\n  /**\n   * Define the default number of columns\n   */\n  public defaultColumnCount = 2;\n\n  /**\n   * Define the default for the maximum allowed rows\n   */\n  public defaultMaxRows = 2000;\n\n  /**\n   * Expose the flexbox layout gap\n   */\n  public layoutGap: string = TS_SPACING.small[0];\n\n  /**\n   * Expose a validation message if too many rows are added\n   */\n  public tooManyRowsMessage: string | null = null;\n\n  /**\n   * Define the number of validation messages that can be shown at once\n   */\n  public maximumValidationMessages = 6;\n\n  /**\n   * Store records (rows)\n   */\n  public records: TsCSVEntryRecord[] = [];\n\n  /**\n   * Initialize the records form with an empty array\n   */\n  public recordsForm: FormGroup = this.formBuilder.group({\n    headers: this.formBuilder.array([]),\n    records: this.formBuilder.array([]),\n  });\n\n  /*\n   *public validationMessages: string[] | undefined;\n   */\n  public allErrors: {[key: string]: any}[] | null = null;\n\n  /**\n   * Get header cells as a form array\n   */\n  public get headerCells(): FormArray {\n    return this.recordsForm.get('headers') as FormArray;\n  }\n\n  /**\n   * Get rows as a form array\n   */\n  public get rows(): FormArray {\n    return this.recordsForm.get('records') as FormArray;\n  }\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  public set id(value: string) {\n    this._id = value || this._uid;\n  }\n  public get id(): string {\n    return this._id;\n  }\n  protected _id!: string;\n\n  /**\n   * Set the maximum number of allowed rows\n   */\n  @Input()\n  public set maxRows(value: number) {\n    this._maxRows = coerceNumberProperty(value, this.defaultMaxRows);\n  }\n  public get maxRows(): number {\n    return this._maxRows;\n  }\n  private _maxRows: number = this.defaultMaxRows;\n\n  /**\n   * Set the number of columns\n   */\n  @Input()\n  public set columnCount(value: number) {\n    this._columnCount = coerceNumberProperty(value, this.defaultColumnCount);\n  }\n  public get columnCount(): number {\n    return this._columnCount;\n  }\n  private _columnCount: number = this.defaultColumnCount;\n\n  /**\n   * Define the number of rows\n   */\n  @Input()\n  public set rowCount(value: number) {\n    this._rowCount = coerceNumberProperty(value, this.defaultRowCount);\n  }\n  public get rowCount(): number {\n    return this._rowCount;\n  }\n  private _rowCount: number = this.defaultRowCount;\n\n  /**\n   * Allow static headers to be set\n   */\n  @Input()\n  public set columnHeaders(value: string[] | undefined) {\n    this._columnHeaders = value;\n    this.clearHeaderCells();\n    this.addHeaders(this.columnCount, this.columnHeaders);\n  }\n  public get columnHeaders(): string[] | undefined {\n    return this._columnHeaders;\n  }\n  private _columnHeaders: string[] | undefined;\n\n  /**\n   * Define any column validators\n   */\n  @Input()\n  public set columnValidators(value: ValidatorFn | null[]) {\n    if (!value) {\n      return;\n    }\n\n    this._columnValidators = value;\n  }\n  public get columnValidators(): ValidatorFn | null[] {\n    return this._columnValidators;\n  }\n  private _columnValidators: ValidatorFn | null[] = [];\n\n  /**\n   * Emit the built file blob\n   */\n  @Output()\n  public blobGenerated: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private changeDetectorRef: ChangeDetectorRef,\n    private documentService: TsDocumentService,\n  ) {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Initialize empty rows\n   */\n  public ngOnInit(): void {\n    this.addRows(this.rowCount, this.columnCount);\n    this.addHeaders(this.columnCount, this.columnHeaders);\n\n    this.recordsForm.valueChanges.pipe(\n      // Let the form values 'settle' before we emit anything\n      debounceTime(1),\n      untilComponentDestroyed(this),\n    ).subscribe((v) => {\n      const blob = this.generateBlob(v);\n      this.blobGenerated.emit(blob);\n    });\n  }\n\n\n  /**\n   * Needed for `untilComponentDestroyed`\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Add rows to the form\n   *\n   * @param rowCount - The number of rows to add\n   * @param columnCount - The number of columns each row should have\n   * @param content - The column content\n   */\n  public addRows(rowCount = 1, columnCount: number = this.columnCount, content?: string[][], index?: number): void {\n    if ((this.rows.length + rowCount) > this.maxRows) {\n      const rowsThatDontFit = (rowCount === 1 ? 2 : rowCount) - ((this.rows.length + rowCount) - this.maxRows);\n      this.tooManyRowsMessage =\n        `Adding ${rowsThatDontFit} row${rowsThatDontFit > 1 ? 's' : ''} would exceed the maximum rows allowed (${this.maxRows}).`;\n      return;\n    }\n\n    if (this.tooManyRowsMessage) {\n      this.tooManyRowsMessage = null;\n    }\n\n    for (let i = 0; i = 0)) {\n        this.rows.insert(indexToInjectAt, createdRow);\n      } else {\n        this.rows.push(createdRow);\n      }\n    }\n  }\n\n\n  /**\n   * Get the columns of a row\n   *\n   * @param row - The row\n   * @return The array of columns\n   */\n  public getColumns(row: FormGroup): FormArray {\n    return row.get('columns') as FormArray;\n  }\n\n\n  /**\n   * Update the form control for recordId on each row according to index.\n   */\n  public updateAllRowIds(): void {\n    for (let i = 0; i  this.columnCount) {\n        const numberOfMissingColumns = pastedColumnCount - this.columnCount;\n        this.addColumnsToRows(this.rows, this.headerCells, numberOfMissingColumns);\n        this.columnCount = pastedColumnCount;\n      }\n      this.deleteRow(pastedRowId);\n      this.addRows(neededRows, content.rows.length, content.rows, pastedRowId);\n    }\n\n    this.updateAllRowIds();\n    this.allErrors = this.collectErrors();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Expose ability to trigger error updates from the DOM\n   */\n  public updateErrors(): void {\n    this.allErrors = this.collectErrors();\n  }\n\n\n  /**\n   * Helper to get the name (content) of a header cell for the title attribute\n   *\n   * @param index - The column index\n   * @return The header cell content\n   */\n  public getHeaderCellName(index: number): string {\n    if (!this.headerCells || !this.headerCells.controls[index]) {\n      return '';\n    }\n    return this.headerCells.controls[index].value;\n  }\n\n\n  /**\n   * Stop accidental page navigation when scrolling to the edges of the CSV form\n   *\n   * @param event - The scroll wheel event\n   */\n  public onScroll(event: WheelEvent): void {\n    if (!event) {\n      return;\n    }\n    const dir: string = (event.deltaX  {\n          return {\n            control: key,\n            // De-duplicate the errors array\n            [key]: errors[key].filter((el, i, arr) => arr.indexOf(el) === i),\n          };\n        });\n\n        return resultsArray;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Get all validation messages\n   *\n   * NOTE: Currently this only supports a custom error message for URL validation. Other messages can be added when the need arises.\n   * FIXME: Find a way to use the existing ValidationMessagesService\n   *\n   * @return The array of validation messages\n   */\n  public get validationMessages(): string[] | undefined {\n    if (!this.allErrors) {\n      return;\n    }\n    const messages: string[] = [];\n\n    for (const errorObj of this.allErrors) {\n      const name: string = errorObj.control;\n\n      for (const error of errorObj[name]) {\n        let message = '';\n        // The ID is zero-based\n        message += `Row ${error.rowId + 1}: `;\n        // istanbul ignore else\n        if (name === 'url') {\n          const maxItemLength = 20;\n          const errorItem = (error.actual.length > maxItemLength) ? error.actual.slice(0, maxItemLength) + '...' : error.actual;\n          message += `\"${errorItem}\" is not a valid URL.`;\n        }\n        // istanbul ignore else\n        if (name === 'required') {\n          message += `Content is required.`;\n        }\n        messages.push(message);\n      }\n    }\n\n    // If more messages than allowed exist, truncate the list with a message\n    if (messages.length > this.maximumValidationMessages) {\n      const count = messages.length - this.maximumValidationMessages;\n      messages.length = this.maximumValidationMessages;\n      messages.push(`and ${count} more errors...`);\n    }\n\n    return messages.length > 0 ? messages : undefined;\n  }\n\n\n  /**\n   * Delete a row\n   *\n   * @param index - The index of the row to delete\n   */\n  public deleteRow(index: number): void {\n    if (index === undefined || index === null || index  r.split('\\t'));\n    } else {\n      result.rows = rows.slice(0, rows.length).map((r) => r.split('\\t'));\n    }\n\n    return result;\n  }\n\n\n  /**\n   * Clear all rows\n   */\n  private clearAllRows(): void {\n    this.recordsForm.setControl('records', this.formBuilder.array([]));\n  }\n\n\n  /**\n   * Clear header cells\n   */\n  private clearHeaderCells(): void {\n    this.recordsForm.setControl('headers', this.formBuilder.array([]));\n  }\n\n\n  /**\n   * Add header content to the form\n   *\n   * @param headerCount - The number of header cells\n   * @param content - The cell's content\n   */\n  private addHeaders(headerCount: number, content?: string[]): void {\n    for (let i = 0; i  v.columns.join('\\t')).join('\\r\\n') + '\\r\\n';\n    const joined: string = prefix + headers + rows;\n    return new Blob([joined], {type: 'text/csv'});\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsCSVFormContents.html":{"url":"interfaces/TsCSVFormContents.html","title":"interface - TsCSVFormContents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsCSVFormContents\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/csv-entry/csv-entry.component.ts\n        \n\n            \n                Description\n            \n            \n                The structure for the form\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        headers\n                                \n                                \n                                        records\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        records\n                                    \n                                \n                                \n                                    \n                                        records:     TsCSVEntryRecord[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsCSVEntryRecord[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        csv-entry\n\n\n\n\nTable of Contents\n\nBasic usage\nColumn Count\nRow count\nMax rows\n\n\nColumn validation\nStatic Column Headers\n\n\nBasic usage\nThe most basic implementation only needs the HTML and a single method. Each time the CSV table is updated, a new File Blob is generated and\nemitted.\n\nmyFunc(blob: Blob) {\n  ...\n}Column Count\nControl the default column count via an Input:\n\n  \n\nNOTE: Column count does not restrict what is pasted into the table.\n\nRow count\nControl the default number of rows via an Input:\n\n  \n\nNOTE: Row count does not restrict what is pasted into the table.\n\nMax rows\nControl the maximum number of rows a table will allow\n\nIf the user attempts to paste or manually add more rows than are allowed, a validation message will appear below the table.\nColumn validation\n\nNOTE: Currently, custom validation messaging is only supported for the URL validator. More will be added as needs arise.\n\nPass in an array of validators matching the column count.\nmyValidators = [null, this.validatorsService.url(), null, null];\nThis example would add the URL validation to the second column only.\nStatic Column Headers\nIf there are certain headers that must be available, these can be set via an input:\n\nSetting static column headers will set the header cells to readonly. This will still allow keyboard navigation but will not allow the user\nto change the contents of the set header cells.\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  untilComponentDestroyed,\n  TsDocumentService,\n} from '@terminus/ngx-tools';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n} from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TS_SPACING } from './../spacing/spacing.constant';\n\n\n\n/**\n * The structure for an individual row\n */\nexport interface TsCSVEntryRecord {\n  recordId: number;\n  columns: (string | null)[];\n}\n\n/**\n * The structure for the form\n */\nexport interface TsCSVFormContents {\n  headers: string[];\n  records: TsCSVEntryRecord[];\n}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * This is the csv-entry UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-csv-entry`: The primary container\n * - `qa-csv-entry-info`: Container for row/column count\n * - `qa-csv-entry-row`: A row\n * - `qa-csv-entry-cell`: A body cell\n * - `qa-csv-entry-header-cell`: A header cell\n * - `qa-csv-entry-header-row`: Container for a header row\n * - `qa-csv-entry-delete`: A delete button\n * - `qa-csv-entry`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-csv-entry',\n  templateUrl: './csv-entry.component.html',\n  styleUrls: ['./csv-entry.component.scss'],\n  host: {\n    class: 'ts-csv-entry',\n  },\n  exportAs: 'tsCSVEntry',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsCSVEntryComponent implements OnInit, OnDestroy {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-csv-entry-${nextUniqueId++}`;\n\n  /**\n   * Define the default number of rows\n   */\n  public defaultRowCount = 4;\n\n  /**\n   * Define the default number of columns\n   */\n  public defaultColumnCount = 2;\n\n  /**\n   * Define the default for the maximum allowed rows\n   */\n  public defaultMaxRows = 2000;\n\n  /**\n   * Expose the flexbox layout gap\n   */\n  public layoutGap: string = TS_SPACING.small[0];\n\n  /**\n   * Expose a validation message if too many rows are added\n   */\n  public tooManyRowsMessage: string | null = null;\n\n  /**\n   * Define the number of validation messages that can be shown at once\n   */\n  public maximumValidationMessages = 6;\n\n  /**\n   * Store records (rows)\n   */\n  public records: TsCSVEntryRecord[] = [];\n\n  /**\n   * Initialize the records form with an empty array\n   */\n  public recordsForm: FormGroup = this.formBuilder.group({\n    headers: this.formBuilder.array([]),\n    records: this.formBuilder.array([]),\n  });\n\n  /*\n   *public validationMessages: string[] | undefined;\n   */\n  public allErrors: {[key: string]: any}[] | null = null;\n\n  /**\n   * Get header cells as a form array\n   */\n  public get headerCells(): FormArray {\n    return this.recordsForm.get('headers') as FormArray;\n  }\n\n  /**\n   * Get rows as a form array\n   */\n  public get rows(): FormArray {\n    return this.recordsForm.get('records') as FormArray;\n  }\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  public set id(value: string) {\n    this._id = value || this._uid;\n  }\n  public get id(): string {\n    return this._id;\n  }\n  protected _id!: string;\n\n  /**\n   * Set the maximum number of allowed rows\n   */\n  @Input()\n  public set maxRows(value: number) {\n    this._maxRows = coerceNumberProperty(value, this.defaultMaxRows);\n  }\n  public get maxRows(): number {\n    return this._maxRows;\n  }\n  private _maxRows: number = this.defaultMaxRows;\n\n  /**\n   * Set the number of columns\n   */\n  @Input()\n  public set columnCount(value: number) {\n    this._columnCount = coerceNumberProperty(value, this.defaultColumnCount);\n  }\n  public get columnCount(): number {\n    return this._columnCount;\n  }\n  private _columnCount: number = this.defaultColumnCount;\n\n  /**\n   * Define the number of rows\n   */\n  @Input()\n  public set rowCount(value: number) {\n    this._rowCount = coerceNumberProperty(value, this.defaultRowCount);\n  }\n  public get rowCount(): number {\n    return this._rowCount;\n  }\n  private _rowCount: number = this.defaultRowCount;\n\n  /**\n   * Allow static headers to be set\n   */\n  @Input()\n  public set columnHeaders(value: string[] | undefined) {\n    this._columnHeaders = value;\n    this.clearHeaderCells();\n    this.addHeaders(this.columnCount, this.columnHeaders);\n  }\n  public get columnHeaders(): string[] | undefined {\n    return this._columnHeaders;\n  }\n  private _columnHeaders: string[] | undefined;\n\n  /**\n   * Define any column validators\n   */\n  @Input()\n  public set columnValidators(value: ValidatorFn | null[]) {\n    if (!value) {\n      return;\n    }\n\n    this._columnValidators = value;\n  }\n  public get columnValidators(): ValidatorFn | null[] {\n    return this._columnValidators;\n  }\n  private _columnValidators: ValidatorFn | null[] = [];\n\n  /**\n   * Emit the built file blob\n   */\n  @Output()\n  public blobGenerated: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private changeDetectorRef: ChangeDetectorRef,\n    private documentService: TsDocumentService,\n  ) {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Initialize empty rows\n   */\n  public ngOnInit(): void {\n    this.addRows(this.rowCount, this.columnCount);\n    this.addHeaders(this.columnCount, this.columnHeaders);\n\n    this.recordsForm.valueChanges.pipe(\n      // Let the form values 'settle' before we emit anything\n      debounceTime(1),\n      untilComponentDestroyed(this),\n    ).subscribe((v) => {\n      const blob = this.generateBlob(v);\n      this.blobGenerated.emit(blob);\n    });\n  }\n\n\n  /**\n   * Needed for `untilComponentDestroyed`\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Add rows to the form\n   *\n   * @param rowCount - The number of rows to add\n   * @param columnCount - The number of columns each row should have\n   * @param content - The column content\n   */\n  public addRows(rowCount = 1, columnCount: number = this.columnCount, content?: string[][], index?: number): void {\n    if ((this.rows.length + rowCount) > this.maxRows) {\n      const rowsThatDontFit = (rowCount === 1 ? 2 : rowCount) - ((this.rows.length + rowCount) - this.maxRows);\n      this.tooManyRowsMessage =\n        `Adding ${rowsThatDontFit} row${rowsThatDontFit > 1 ? 's' : ''} would exceed the maximum rows allowed (${this.maxRows}).`;\n      return;\n    }\n\n    if (this.tooManyRowsMessage) {\n      this.tooManyRowsMessage = null;\n    }\n\n    for (let i = 0; i = 0)) {\n        this.rows.insert(indexToInjectAt, createdRow);\n      } else {\n        this.rows.push(createdRow);\n      }\n    }\n  }\n\n\n  /**\n   * Get the columns of a row\n   *\n   * @param row - The row\n   * @return The array of columns\n   */\n  public getColumns(row: FormGroup): FormArray {\n    return row.get('columns') as FormArray;\n  }\n\n\n  /**\n   * Update the form control for recordId on each row according to index.\n   */\n  public updateAllRowIds(): void {\n    for (let i = 0; i  this.columnCount) {\n        const numberOfMissingColumns = pastedColumnCount - this.columnCount;\n        this.addColumnsToRows(this.rows, this.headerCells, numberOfMissingColumns);\n        this.columnCount = pastedColumnCount;\n      }\n      this.deleteRow(pastedRowId);\n      this.addRows(neededRows, content.rows.length, content.rows, pastedRowId);\n    }\n\n    this.updateAllRowIds();\n    this.allErrors = this.collectErrors();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Expose ability to trigger error updates from the DOM\n   */\n  public updateErrors(): void {\n    this.allErrors = this.collectErrors();\n  }\n\n\n  /**\n   * Helper to get the name (content) of a header cell for the title attribute\n   *\n   * @param index - The column index\n   * @return The header cell content\n   */\n  public getHeaderCellName(index: number): string {\n    if (!this.headerCells || !this.headerCells.controls[index]) {\n      return '';\n    }\n    return this.headerCells.controls[index].value;\n  }\n\n\n  /**\n   * Stop accidental page navigation when scrolling to the edges of the CSV form\n   *\n   * @param event - The scroll wheel event\n   */\n  public onScroll(event: WheelEvent): void {\n    if (!event) {\n      return;\n    }\n    const dir: string = (event.deltaX  {\n          return {\n            control: key,\n            // De-duplicate the errors array\n            [key]: errors[key].filter((el, i, arr) => arr.indexOf(el) === i),\n          };\n        });\n\n        return resultsArray;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Get all validation messages\n   *\n   * NOTE: Currently this only supports a custom error message for URL validation. Other messages can be added when the need arises.\n   * FIXME: Find a way to use the existing ValidationMessagesService\n   *\n   * @return The array of validation messages\n   */\n  public get validationMessages(): string[] | undefined {\n    if (!this.allErrors) {\n      return;\n    }\n    const messages: string[] = [];\n\n    for (const errorObj of this.allErrors) {\n      const name: string = errorObj.control;\n\n      for (const error of errorObj[name]) {\n        let message = '';\n        // The ID is zero-based\n        message += `Row ${error.rowId + 1}: `;\n        // istanbul ignore else\n        if (name === 'url') {\n          const maxItemLength = 20;\n          const errorItem = (error.actual.length > maxItemLength) ? error.actual.slice(0, maxItemLength) + '...' : error.actual;\n          message += `\"${errorItem}\" is not a valid URL.`;\n        }\n        // istanbul ignore else\n        if (name === 'required') {\n          message += `Content is required.`;\n        }\n        messages.push(message);\n      }\n    }\n\n    // If more messages than allowed exist, truncate the list with a message\n    if (messages.length > this.maximumValidationMessages) {\n      const count = messages.length - this.maximumValidationMessages;\n      messages.length = this.maximumValidationMessages;\n      messages.push(`and ${count} more errors...`);\n    }\n\n    return messages.length > 0 ? messages : undefined;\n  }\n\n\n  /**\n   * Delete a row\n   *\n   * @param index - The index of the row to delete\n   */\n  public deleteRow(index: number): void {\n    if (index === undefined || index === null || index  r.split('\\t'));\n    } else {\n      result.rows = rows.slice(0, rows.length).map((r) => r.split('\\t'));\n    }\n\n    return result;\n  }\n\n\n  /**\n   * Clear all rows\n   */\n  private clearAllRows(): void {\n    this.recordsForm.setControl('records', this.formBuilder.array([]));\n  }\n\n\n  /**\n   * Clear header cells\n   */\n  private clearHeaderCells(): void {\n    this.recordsForm.setControl('headers', this.formBuilder.array([]));\n  }\n\n\n  /**\n   * Add header content to the form\n   *\n   * @param headerCount - The number of header cells\n   * @param content - The cell's content\n   */\n  private addHeaders(headerCount: number, content?: string[]): void {\n    for (let i = 0; i  v.columns.join('\\t')).join('\\r\\n') + '\\r\\n';\n    const joined: string = prefix + headers + rows;\n    return new Blob([joined], {type: 'text/csv'});\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsCardComponent.html":{"url":"components/TsCardComponent.html","title":"component - TsCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsCardComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/card/card.component.ts\n\n\n    \n        Description\n    \n    \n        A presentational component to render a card\nQA CSS CLASSES\n\nqa-card: Placed on the primary element\nqa-card-lock: Placed on the lock icon for disabled cards\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    Here is my card!\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsCard\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-card\n            \n\n            \n                styleUrls\n                card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _border\n                            \n                            \n                                    Protected\n                                _id\n                            \n                            \n                                    Private\n                                _theme\n                            \n                            \n                                    Protected\n                                _uid\n                            \n                            \n                                    Public\n                                aspectRatioPadding\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aspectRatio\n                            \n                            \n                                border\n                            \n                            \n                                centeredContent\n                            \n                            \n                                disabled\n                            \n                            \n                                flat\n                            \n                            \n                                id\n                            \n                            \n                                supportsInteraction\n                            \n                            \n                                theme\n                            \n                            \n                                utilityMenuTemplate\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/card/card.component.ts:181\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aspectRatio\n                    \n                    \n                        Define if the card should conform to a fixed aspect ratio\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:92\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        border\n                    \n                    \n                        Define if a border should be present on the card. TsCardBorderOptions\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:104\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centeredContent\n                    \n                    \n                        Define if the card should center child content\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:120\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                    \n                        Define if the card is disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:126\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        flat\n                    \n                    \n                        Define if the card should not have a drop shadow\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:132\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                    \n                        Define an ID for the component\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:138\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        supportsInteraction\n                    \n                    \n                        Define if the card should support interaction (via hover)\nNOTE: This only alters style; not functionality\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:152\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the card theme\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:158\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        utilityMenuTemplate\n                    \n                    \n                        Allow a custom utility menu to be added\n\n                            \n                            Type:    TemplateRef | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:174\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _border\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _border:     TsCardBorderOptions\n\n                    \n                \n                    \n                        \n                            Type :     TsCardBorderOptions\n\n                        \n                    \n                    \n                        \n                            Default value : 'none'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : this._uid\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:144\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _theme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _theme:     TsStyleThemeTypes\n\n                    \n                \n                    \n                        \n                            Type :     TsStyleThemeTypes\n\n                        \n                    \n                    \n                        \n                            Default value : 'primary'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:168\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _uid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _uid:     \n\n                    \n                \n                    \n                        \n                            Default value : `ts-card-${nextUniqueId++}`\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:79\n                            \n                        \n\n                \n                    \n                        Define the default component ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            aspectRatioPadding\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        aspectRatioPadding:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:84\n                            \n                        \n\n                \n                    \n                        Expose the aspect ratio as a percentage\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        aspectRatio\n                    \n                \n\n\n                \n                    \n                        setaspectRatio(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:92\n                                \n                            \n                    \n                        \n                                Define if the card should conform to a fixed aspect ratio\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                            \n                                                                    \nThe aspect ratio. See {\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        border\n                    \n                \n\n                \n                    \n                        getborder()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:111\n                                \n                            \n\n                \n                    \n                        setborder(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:104\n                                \n                            \n                    \n                        \n                                Define if a border should be present on the card. TsCardBorderOptions\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:141\n                                \n                            \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:138\n                                \n                            \n                    \n                        \n                                Define an ID for the component\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n\n                \n                    \n                        gettheme()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:165\n                                \n                            \n\n                \n                    \n                        settheme(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:158\n                                \n                            \n                    \n                        \n                                Define the card theme\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        borderClass\n                    \n                \n\n                \n                    \n                        getborderClass()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:179\n                                \n                            \n                    \n                        \n                                Getter to return a border class if the border is set\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n    \n        \n\nTable of Contents\n\nBasic usage\nInteractivity\nCentered content\nAspect ratio\nUtility menu\nCard with a Title\nDisabled Card\n\n\nBasic usage\nWrap the card component around your content:\n\n  Here is my content!\nInteractivity\nTo make the card feel interactive, pass true to the supportsInteraction input.\n\n  Now my card responds to hover and click!\nCentered content\nTo center the content, pass true to the centeredContent input.\n\n  Now my content is centered!\nAspect ratio\nPass your desired aspect ratio in the format 3:4 to the aspectRatio input.\n\n  Here is a card with a fixed aspect ratio!\n\nType: TsAspectRatioTypes.\nAllowed ratios: 16:9, 4:3, 3:2, 5:4, 1:1,\n\nUtility menu\nTo include a utility menu, pass a template which includes the menu trigger and the menu contents.\n\n\n  Here is a card with a utility menu!\n\n\n\n  \n  \n  \n\n\n  \n  \n    \n      My link\n    \n  \nCard with a Title\nAttach the tsCardTitle directive to your title element. This directive simply adds a class to the\nelement which provides the needed styles.\n\n  My Title\nDisabled Card\nThis will push the opacity of the card contents back and add a lock icon in the top right corner.\n\n  My card\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  TemplateRef,\n  ElementRef,\n} from '@angular/core';\nimport { TsStyleThemeTypes } from '../utilities/types/style-theme.types';\n\n\n/**\n * Define the allowed aspect ratios. Used in {@link TsCardComponent}\n */\nexport type TsAspectRatioTypes\n  = '16:9'\n  | '4:3'\n  | '3:2'\n  | '5:4'\n  | '1:1'\n;\n\n\n/**\n * Define allowed border sides. Used in {@link TsCardComponent}. Border color determined by the theme.\n */\nexport type TsCardBorderOptions\n  = 'none'\n  | 'left'\n  | 'right'\n  | 'top'\n  | 'bottom'\n;\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * A presentational component to render a card\n *\n * #### QA CSS CLASSES\n * - `qa-card`: Placed on the primary element\n * - `qa-card-lock`: Placed on the lock icon for disabled cards\n *\n * @example\n * Here is my card!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n  host: {\n    class: 'ts-card',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCard',\n})\nexport class TsCardComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-card-${nextUniqueId++}`;\n\n  /**\n   * Expose the aspect ratio as a percentage\n   */\n  public aspectRatioPadding!: string;\n\n  /**\n   * Define if the card should conform to a fixed aspect ratio\n   *\n   * @param value - The aspect ratio. See {@link TsAspectRatioTypes} for possible values.\n   */\n  @Input()\n  public set aspectRatio(value: TsAspectRatioTypes) {\n    const x: number = parseInt(value.split(':')[0], 10);\n    const y: number = parseInt(value.split(':')[1], 10);\n    const percentage: number = ((y / x) * 100);\n\n    this.aspectRatioPadding = `${percentage.toFixed(2)}%`;\n  }\n\n  /**\n   * Define if a border should be present on the card. {@link TsCardBorderOptions}\n   */\n  @Input()\n  public set border(value: TsCardBorderOptions) {\n    if (!value) {\n      return;\n    }\n\n    this._border = value;\n  }\n  public get border(): TsCardBorderOptions {\n    return this._border;\n  }\n  private _border: TsCardBorderOptions = 'none';\n\n  /**\n   * Define if the card should center child content\n   */\n  @Input()\n  public centeredContent: boolean = false;\n\n  /**\n   * Define if the card is disabled\n   */\n  @Input()\n  public disabled: boolean = false;\n\n  /**\n   * Define if the card should not have a drop shadow\n   */\n  @Input()\n  public flat: boolean = false;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the card should support interaction (via hover)\n   *\n   * NOTE: This only alters style; not functionality\n   */\n  @Input()\n  public supportsInteraction: boolean = false;\n\n  /**\n   * Define the card theme\n   */\n  @Input()\n  public set theme(value: TsStyleThemeTypes) {\n    if (!value) {\n      return;\n    }\n\n    this._theme = value;\n  }\n  public get theme(): TsStyleThemeTypes {\n    return this._theme;\n  }\n  private _theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Allow a custom utility menu to be added\n   */\n  @Input()\n  public utilityMenuTemplate: TemplateRef | undefined;\n\n  /**\n   * Getter to return a border class if the border is set\n   */\n  public get borderClass(): string {\n    return (!this.border || this.border === 'none') ? '' : `c-card--border-${this.border}` ;\n  }\n\n\n  constructor() {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n  lock_outline\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            lock_outline'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsCardModule.html":{"url":"modules/TsCardModule.html","title":"module - TsCardModule","body":"\n                   \n\n\n\n\n  Modules\n  TsCardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsCardModule\n\n\n\ncluster_TsCardModule_declarations\n\n\n\ncluster_TsCardModule_imports\n\n\n\ncluster_TsCardModule_exports\n\n\n\n\nTsCardComponent\n\nTsCardComponent\n\n\n\nTsCardModule\n\nTsCardModule\n\nTsCardModule -->\n\nTsCardComponent->TsCardModule\n\n\n\n\n\nTsCardTitleDirective\n\nTsCardTitleDirective\n\nTsCardModule -->\n\nTsCardTitleDirective->TsCardModule\n\n\n\n\n\nTsCardComponent \n\nTsCardComponent \n\nTsCardComponent  -->\n\nTsCardModule->TsCardComponent \n\n\n\n\n\nTsCardTitleDirective \n\nTsCardTitleDirective \n\nTsCardTitleDirective  -->\n\nTsCardModule->TsCardTitleDirective \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsCardModule -->\n\nTsIconModule->TsCardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/card/card.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCardComponent\n                            \n                            \n                                TsCardTitleDirective\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCardComponent\n                            \n                            \n                                    TsCardTitleDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsCardComponent } from './card.component';\nimport { TsCardTitleDirective } from './card-title.directive';\n\nexport * from './card.component';\nexport * from './card-title.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRippleModule,\n    TsIconModule,\n  ],\n  declarations: [\n    TsCardComponent,\n    TsCardTitleDirective,\n  ],\n  exports: [\n    TsCardComponent,\n    TsCardTitleDirective,\n  ],\n})\nexport class TsCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsCardTitleDirective.html":{"url":"directives/TsCardTitleDirective.html","title":"directive - TsCardTitleDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsCardTitleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/card/card-title.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsCardTitle]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkParent\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: TsCardComponent)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/card/card-title.directive.ts:27\n                            \n                        \n\n                \n                    \n                            Verify the directive is nested within a TsCardComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    TsCardComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     \n\n                    \n                \n                    \n                        \n                            Default value : 'c-card__title'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card-title.directive.ts:27\n                            \n                        \n\n                \n                    \n                        Set the card title class\n\n                    \n                \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkParent\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckParent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/card/card-title.directive.ts:50\n                            \n                        \n\n\n                \n                    \n                            Verify the directive is nested inside of a TsCardComponent\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/card/card-title.directive.ts:42\n                            \n                        \n\n\n                \n                    \n                            Verify correct nesting on all changes\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _parent:     TsCardComponent\n\n                    \n                \n                    \n                        \n                            Type :     TsCardComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card-title.directive.ts:21\n                            \n                        \n\n                \n                    \n                        Store a reference to the parent component\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  HostBinding,\n  Optional,\n  Host,\n  SkipSelf,\n  OnChanges,\n  isDevMode,\n} from '@angular/core';\n\nimport { TsCardComponent } from './card.component';\n\n\n@Directive({\n  selector: '[tsCardTitle]',\n})\nexport class TsCardTitleDirective implements OnChanges {\n  /**\n   * Store a reference to the parent component\n   */\n  private _parent: TsCardComponent;\n\n  /**\n   * Set the card title class\n   */\n  @HostBinding('class')\n  tsCardTitle = 'c-card__title';\n\n  /**\n   * Verify the directive is nested within a {@link TsCardComponent}\n   */\n  constructor(\n    @Optional() @Host() @SkipSelf() parent: TsCardComponent,\n  ) {\n    this._parent = parent;\n  }\n\n\n  /**\n   * Verify correct nesting on all changes\n   */\n  ngOnChanges() {\n    this.checkParent();\n  }\n\n\n  /**\n   * Verify the directive is nested inside of a {@link TsCardComponent}\n   */\n  checkParent() {\n    // istanbul ignore else\n    if (!(this._parent instanceof TsCardComponent) && isDevMode()) {\n      throw Error(`The 'tsCardTitle' directive must be inside a  component.`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsCellDefDirective.html":{"url":"directives/TsCellDefDirective.html","title":"directive - TsCellDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsCellDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Cell definition for the TsTableComponent.\nCaptures the template of a column's data row cell as well as cell-specific properties.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsCellDef]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsCellDirective.html":{"url":"directives/TsCellDirective.html","title":"directive - TsCellDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsCellDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Cell template container that adds the right classes and role.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ts-cell\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(columnDef: CdkColumnDef, elementRef: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/table/cell.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        columnDef\n                                                  \n                                                        \n                                                                    CdkColumnDef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            renderer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderer:     Renderer\n\n                    \n                \n                    \n                        \n                            Type :     Renderer\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/cell.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsChart2Component.html":{"url":"components/TsChart2Component.html","title":"component - TsChart2Component","body":"\n                   \n\n\n\n\n\n  Components\n  TsChart2Component\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/chart2/chart2.component.ts\n\n\n    \n        Description\n    \n    \n        This is the chart2 UI Component\nFIXME: Once amCharts v4 is TypeScript scrict complient, we should set the tsconfig.skipLibCheck to true.\nQA CSS CLASSES\n\nqa-chart2: Placed on the primary container\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                OnDestroy\n    \n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsChart2\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-chart2\n            \n\n            \n                styleUrls\n                chart2.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chart2.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _visualization\n                            \n                            \n                                    Private\n                                amCharts\n                            \n                            \n                                    Public\n                                chart\n                            \n                            \n                                    Private\n                                chartDiv\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroyChart\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visualization\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                chartInitialized\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, amChartsService: TsAmChartsService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/chart2/chart2.component.ts:102\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        amChartsService\n                                                  \n                                                        \n                                                                    TsAmChartsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visualization\n                    \n                    \n                        Define the chart visualization format (bar, line, etc)\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:86\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        chartInitialized\n                    \n                    \n                        Emit an event containing the chart each time it is initialized\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:102\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroyChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        destroyChart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            Destroy the chart\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init(type: TsChart2VisualizationOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:164\n                            \n                        \n\n\n                \n                    \n                            Initialize a chart\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    TsChart2VisualizationOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Reinitialize the chart if the visualization type has changed\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Destroy the chart when the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Initialize the chart if amCharts exists\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _visualization\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _visualization:     TsChart2VisualizationOptions\n\n                    \n                \n                    \n                        \n                            Type :     TsChart2VisualizationOptions\n\n                        \n                    \n                    \n                        \n                            Default value : 'xy'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            amCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        amCharts:     TsAmChartsToken\n\n                    \n                \n                    \n                        \n                            Type :     TsAmChartsToken\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:72\n                            \n                        \n\n                \n                    \n                        Save a reference to the underlying amCharts library\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:67\n                            \n                        \n\n                \n                    \n                        Store the initialized chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            chartDiv\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartDiv:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:78\n                            \n                        \n\n                \n                    \n                        Get access to the chart container\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        visualization\n                    \n                \n\n                \n                    \n                        getvisualization()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:93\n                                \n                            \n\n                \n                    \n                        setvisualization(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:86\n                                \n                            \n                    \n                        \n                                Define the chart visualization format (bar, line, etc)\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                            \n                                                                    \nThe visualization type. {\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        TsChart2\n\n\n\n\nTable of Contents\n\nBasic usage\nInject the needed libraries\nSet up the chart\n\n\nSupported chart types\nFull documentation\n\n\nBasic usage\nInject the needed libraries\nCreate a factory function to inject the needed libraries:\nimport { TS_AMCHARTS_TOKEN, TsAmChartsToken } from '@terminus/ui';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport am4themes_material from '@amcharts/amcharts4/themes/animated';\n\n// `core` and `charts` are always required.\n// `maps` is required if using any map visualizations.\nexport function amChartsFactory(): TsAmChartsToken {\n  return {\n    core: am4core,\n    charts: am4charts,\n    maps: am4maps,\n    themes: [am4themes_animated, am4themes_material],\n  };\n}\n\n@NgModule({\n  ...\n  providers: [\n    // Use the factory function to overwrite the `TS_AMCHARTS_TOKEN` injectable:\n    {\n      provide: TS_AMCHARTS_TOKEN,\n      useFactory: amChartsFactory,\n    },\n  ],\n  ...\nNOTE: Themes will be applied in the order they are provided.\n\nSet up the chart\nAdd the component and set up access to the generated chart:\n\nsetUpChart(chart: am4charts.Chart) {\n  // Add axis' and series' etc...\n}\nSee the demo app for concrete examples of the supported chart types.\n\nSupported chart types\nInitial support:\n\nxy\npie\nmap\nradar\ntreemap\nsankey\nchord\n\nSee TsChart2VisualizationOptions for all supported types.\nFull documentation\nSee https://www.amcharts.com/docs/v4/ for full documentation.\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n  isDevMode,\n} from '@angular/core';\n\nimport { TsAmChartsService, TsAmChartsToken } from './amcharts.service';\nimport { inputHasChanged } from '@terminus/ngx-tools';\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChart2VisualizationOptions\n  = 'pie'\n  | 'xy'\n  | 'map'\n  | 'radar'\n  | 'treemap'\n  | 'sankey'\n  | 'chord'\n;\n\n\n/**\n * This is the chart2 UI Component\n *\n * FIXME: Once amCharts v4 is TypeScript scrict complient, we should set the `tsconfig.skipLibCheck` to true.\n *\n * #### QA CSS CLASSES\n * - `qa-chart2`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-chart2',\n  templateUrl: './chart2.component.html',\n  styleUrls: ['./chart2.component.scss'],\n  host: {\n    class: 'ts-chart2',\n  },\n  exportAs: 'tsChart2',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsChart2Component implements OnInit, OnChanges, OnDestroy {\n  /**\n   * Store the initialized chart\n   */\n  public chart: any;\n\n  /**\n   * Save a reference to the underlying amCharts library\n   */\n  private amCharts: TsAmChartsToken;\n\n  /**\n   * Get access to the chart container\n   */\n  @ViewChild('chartDiv')\n  private chartDiv!: ElementRef;\n\n  /**\n   * Define the chart visualization format (bar, line, etc)\n   *\n   * @param value - The visualization type. {@link TsChart2VisualizationOptions}\n   */\n  @Input()\n  public set visualization(value: TsChart2VisualizationOptions) {\n    if (!value) {\n      return;\n    }\n\n    this._visualization = value;\n  }\n  public get visualization(): TsChart2VisualizationOptions {\n    return this._visualization;\n  }\n  private _visualization: TsChart2VisualizationOptions = 'xy';\n\n  /**\n   * Emit an event containing the chart each time it is initialized\n   */\n  @Output()\n  public chartInitialized: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private zone: NgZone,\n    private amChartsService: TsAmChartsService,\n  ) {\n    this.amCharts = this.amChartsService.amCharts;\n  }\n\n\n  /**\n   * Initialize the chart if amCharts exists\n   */\n  public ngOnInit(): void {\n    // Don't initialize a chart if the Highcharts library wasn't passed in.\n    if (this.amCharts) {\n      this.init(this.visualization);\n    } else if (isDevMode()) {\n      console.error(\n        'TsChart2Component: The amCharts library was not provided via injection token!',\n      );\n    }\n  }\n\n\n  /**\n   * Reinitialize the chart if the visualization type has changed\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    // istanbul ignore else\n    if (inputHasChanged(changes, 'visualization')) {\n      this.destroyChart();\n      this.init(this.visualization);\n    }\n  }\n\n\n  /**\n   * Destroy the chart when the component is destroyed\n   */\n  public ngOnDestroy(): void {\n    this.destroyChart();\n  }\n\n\n  /**\n   * Destroy the chart\n   */\n  private destroyChart(): void {\n    this.zone.runOutsideAngular(() => {\n      // istanbul ignore else\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n\n\n  /**\n   * Initialize a chart\n   */\n  private init(type: TsChart2VisualizationOptions): void {\n    this.zone.runOutsideAngular(() => {\n      // Create the appropriate chart using a chained ternary\n      const chart: any =\n        type === 'xy'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.XYChart)\n        : type === 'pie'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.PieChart)\n        : type === 'map'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.maps.MapChart)\n        : type === 'radar'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.RadarChart)\n        : type === 'treemap'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.TreeMap)\n        : type === 'sankey'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.SankeyDiagram)\n        : type === 'chord'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.ChordDiagram)\n        : undefined\n      ;\n\n      if (chart) {\n        chart.responsive.enabled = true;\n        this.chart = chart;\n        this.chartInitialized.emit(chart);\n      } else {\n        console.error(`TsChart2Component: ${this.visualization} is not a supported chart type. See TsChart2VisualizationOptions.`);\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsChart2Component'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsChart2Module.html":{"url":"modules/TsChart2Module.html","title":"module - TsChart2Module","body":"\n                   \n\n\n\n\n  Modules\n  TsChart2Module\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsChart2Module\n\n\n\ncluster_TsChart2Module_declarations\n\n\n\ncluster_TsChart2Module_exports\n\n\n\ncluster_TsChart2Module_providers\n\n\n\n\nTsChart2Component\n\nTsChart2Component\n\n\n\nTsChart2Module\n\nTsChart2Module\n\nTsChart2Module -->\n\nTsChart2Component->TsChart2Module\n\n\n\n\n\nTsChart2Component \n\nTsChart2Component \n\nTsChart2Component  -->\n\nTsChart2Module->TsChart2Component \n\n\n\n\n\nTsAmChartsService\n\nTsAmChartsService\n\nTsChart2Module -->\n\nTsAmChartsService->TsChart2Module\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/chart2/chart2.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsChart2Component\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsAmChartsService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsChart2Component\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/*\n *import * as am4core from '@amcharts/amcharts4/core';\n *import am4themes_animated from '@amcharts/amcharts4/themes/animated';\n */\n\nimport { TsChart2Component } from './chart2.component';\nimport { TsAmChartsService, TS_AMCHARTS_TOKEN } from './amcharts.service';\n\nexport * from './chart2.component';\nexport * from './amcharts.service';\n\n\n// Set amCharts theme\n/*\n *am4core.useTheme(am4themes_animated);\n */\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    TsAmChartsService,\n    {\n      // This injection token will be overriden by the user.\n      // It will provide the amCharts core library and chart library\n      provide: TS_AMCHARTS_TOKEN,\n      useValue: null,\n    },\n  ],\n  declarations: [\n    TsChart2Component,\n  ],\n  exports: [\n    TsChart2Component,\n  ],\n})\nexport class TsChart2Module {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartAxis.html":{"url":"interfaces/TsChartAxis.html","title":"interface - TsChartAxis","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartAxis\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        categories\n                                \n                                \n                                            Optional\n                                        labels\n                                \n                                \n                                            Optional\n                                        plotBands\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If categories are present for the xAxis, names are used instead of numbers for that axis.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The axis labels show the number or category for each tick.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plotBands\n                                    \n                                \n                                \n                                    \n                                        plotBands:     TsChartAxisPlotBand[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartAxisPlotBand[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An array of colored bands stretching across the plot area marking an interval on the axis.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The axis title, showing next to the axis line.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     TsChartAxisType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartAxisType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of axis. TsChartAxisType\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartAxisPlotBand.html":{"url":"interfaces/TsChartAxisPlotBand.html","title":"interface - TsChartAxisPlotBand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartAxisPlotBand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n            \n                Description\n            \n            \n                A band stretching across the plot area marking an interval on the axis.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        color\n                                \n                                \n                                        from\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     null | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The color of the plot band.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:     null | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The start position of the plot band in axis units.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Text label for the plot band\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:     null | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The end position of the plot band in axis units.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartDataItem.html":{"url":"interfaces/TsChartDataItem.html","title":"interface - TsChartDataItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartDataItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n            \n                Description\n            \n            \n                Individual data item for a chart.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        dataLabels\n                                \n                                \n                                            Optional\n                                        enableMouseTracking\n                                \n                                \n                                            Optional\n                                        joinBy\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        zones\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An array of data points for the series.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataLabels\n                                    \n                                \n                                \n                                    \n                                        dataLabels:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Individual data label for each point.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableMouseTracking\n                                    \n                                \n                                \n                                    \n                                        enableMouseTracking:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Enable or disable the mouse tracking for a specific series.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        joinBy\n                                    \n                                \n                                \n                                    \n                                        joinBy:     null | string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | string | string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    What property to join the mapData to the value data.\nThe joinBy option can also be an array of two values, where the first points to a key in the\nmapData, and the second points to another key in the data.\nWhen joinBy is null, the map items are joined by their position in the array, which performs\nmuch better in maps with many data points.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the point as shown in the legend, tooltip, dataLabel etc.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     TsChartVisualizationOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartVisualizationOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The visualization to use\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zones\n                                    \n                                \n                                \n                                    \n                                        zones:     TsChartZone[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartZone[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An array defining zones within a series.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsChartEvent.html":{"url":"classes/TsChartEvent.html","title":"class - TsChartEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsChartEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/chart.event.ts\n        \n\n            \n                Description\n            \n            \n                A class wrapper for the event emitted by a chart|series|point\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                            \n                                originalEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(event: Event, context: TsChartObject)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/chart/chart.event.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    Event\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    TsChartObject\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     TsChartObject\n\n                    \n                \n                    \n                        \n                            Type :     TsChartObject\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.event.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            originalEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        originalEvent:     Event\n\n                    \n                \n                    \n                        \n                            Type :     Event\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.event.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TsChartObject } from './options.interface';\n\n\n/**\n * A class wrapper for the event emitted by a chart|series|point\n *\n * @param event - The event object\n * @param context - The 'this' context of {@link TsChartObject}\n */\nexport class TsChartEvent {\n  originalEvent: Event;\n  context: TsChartObject;\n\n  constructor(\n    event: Event,\n    context: TsChartObject,\n  ) {\n    this.originalEvent = event;\n    this.context = context;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartEventOptions.html":{"url":"interfaces/TsChartEventOptions.html","title":"interface - TsChartEventOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartEventOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/utilities/compose-events.ts\n        \n\n            \n                Description\n            \n            \n                The structure for the event-only options object created by {@link attachEvents}\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        chart\n                                \n                                \n                                        plotOptions\n                                \n                                \n                                            Optional\n                                        xAxis\n                                \n                                \n                                            Optional\n                                        yAxis\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chart\n                                    \n                                \n                                \n                                    \n                                        chart:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plotOptions\n                                    \n                                \n                                \n                                    \n                                        plotOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxis\n                                    \n                                \n                                \n                                    \n                                        xAxis:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxis\n                                    \n                                \n                                \n                                    \n                                        yAxis:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TsChartEvent } from './../chart.event';\nimport { TsChartComponent } from './../chart.component';\nimport { TsChartSeriesDirective } from './../series.directive';\nimport { TsChartPointDirective } from './../point.directive';\n\n\nconst chartEvents: string[] = [\n  // NOTE: 'click', works by default via Angular (click)\n  'addSeries',\n  'afterPrint',\n  'beforePrint',\n  'drilldown',\n  'drillup',\n  'load',\n  'redraw',\n  'render',\n  'selection',\n];\n\nconst seriesEvents: string[] = [\n  'afterAnimate',\n  'checkboxClick',\n  'click',\n  'hide',\n  'legendItemClick',\n  'mouseOut',\n  'mouseOver',\n  'show',\n];\n\nconst pointEvents: string[] = [\n  'click',\n  'mouseOut',\n  'mouseOver',\n  'remove',\n  'select',\n  'unselect',\n  'update',\n];\n\n\n/**\n * The structure for the event-only options object created by {@link attachEvents}\n */\nexport interface TsChartEventOptions {\n  chart: {\n    events: {\n      [key: string]: Function;\n    };\n  };\n  plotOptions: {\n    series: {\n      events: {\n        [key: string]: Function;\n      };\n      point: {\n        events: {\n          [key: string]: Function;\n        };\n      };\n    };\n  };\n  xAxis?: {\n    events: {\n      [key: string]: Function;\n    };\n  };\n  yAxis?: {\n    events: {\n      [key: string]: Function;\n    };\n  };\n}\n\n\n/**\n * Return an options object with all chart/series/point events attached.\n *\n * @param chartComponent - The {@link TsChartComponent}\n * @param seriesDirective - The {@link TsChartSeriesDirective}\n * @param pointDirective - The {@link TsChartPointDirective}\n * @return The options object\n */\nexport function composeEvents(\n  chartComponent: TsChartComponent,\n  seriesDirective?: TsChartSeriesDirective,\n  pointDirective?: TsChartPointDirective,\n): TsChartEventOptions {\n  const options: TsChartEventOptions = {\n    chart: {\n      events: {},\n    },\n    plotOptions: {\n      series: {\n        events: {},\n        point: {\n          events: {},\n        },\n      },\n    },\n  };\n\n  // Connect Chart events to Emitters\n  chartEvents.forEach((eventName: string) => {\n    options.chart.events[eventName] = options.chart.events[eventName] || function(this: any, event: any) {\n      chartComponent[eventName].emit(new TsChartEvent(event, this));\n    };\n  });\n\n  // Connect Series events to Emitters\n  if (seriesDirective) {\n    seriesEvents.forEach((eventName: string) => {\n      const fn: Function = options.plotOptions.series.events[eventName] || function(this: any, event: any) {\n        seriesDirective[eventName].emit(new TsChartEvent(event, this));\n      };\n      options.plotOptions.series.events[eventName] = fn;\n    });\n  }\n\n  // Connect Point events to Emitters\n  if (pointDirective) {\n    pointEvents.forEach((eventName: string) => {\n      const fn: Function = options.plotOptions.series.point.events[eventName] || function(this: any, event: any) {\n        pointDirective[eventName].emit(new TsChartEvent(event, this));\n      };\n\n      options.plotOptions.series.point.events[eventName] = fn;\n    });\n  }\n\n  return options;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartMapTooltip.html":{"url":"interfaces/TsChartMapTooltip.html","title":"interface - TsChartMapTooltip","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartMapTooltip\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The tooltip that appears when the user hovers over a series or point.\nThe only difference between this and TsChartMapTooltip is the name of the formatter\nfunction.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        formatter\n                                \n                                \n                                            Optional\n                                        split\n                                \n                                \n                                            Optional\n                                        valuePrefix\n                                \n                                \n                                            Optional\n                                        valueSuffix\n                                \n                                \n                                            Optional\n                                        xDateFormat\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        formatter\n                                    \n                                \n                                \n                                    \n                                        formatter:     TsChartLabelFormatterFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartLabelFormatterFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A callback function for formatting the HTML output for a single point in the tooltip.\nAvailable data:\n\nthis.percentage\nthis.point\nthis.points\nthis.series\nthis.total\nthis.x\nthis.y\n\nTsChartLabelFormatterFn\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        split\n                                    \n                                \n                                \n                                    \n                                        split:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Split the tooltip into one label per series, with the header close to the axis.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valuePrefix\n                                    \n                                \n                                \n                                    \n                                        valuePrefix:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A string to prepend to each series' y value.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueSuffix\n                                    \n                                \n                                \n                                    \n                                        valueSuffix:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A string to append to each series' y value.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xDateFormat\n                                    \n                                \n                                \n                                    \n                                        xDateFormat:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The format for the date in the tooltip header if the X axis is a datetime axis. The default is\na best guess based on the smallest distance between points in the chart.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsChartModule.html":{"url":"modules/TsChartModule.html","title":"module - TsChartModule","body":"\n                   \n\n\n\n\n  Modules\n  TsChartModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsChartModule\n\n\n\ncluster_TsChartModule_declarations\n\n\n\ncluster_TsChartModule_exports\n\n\n\ncluster_TsChartModule_providers\n\n\n\n\nTsChartComponent\n\nTsChartComponent\n\n\n\nTsChartModule\n\nTsChartModule\n\nTsChartModule -->\n\nTsChartComponent->TsChartModule\n\n\n\n\n\nTsChartPointDirective\n\nTsChartPointDirective\n\nTsChartModule -->\n\nTsChartPointDirective->TsChartModule\n\n\n\n\n\nTsChartSeriesDirective\n\nTsChartSeriesDirective\n\nTsChartModule -->\n\nTsChartSeriesDirective->TsChartModule\n\n\n\n\n\nTsChartComponent \n\nTsChartComponent \n\nTsChartComponent  -->\n\nTsChartModule->TsChartComponent \n\n\n\n\n\nTsChartPointDirective \n\nTsChartPointDirective \n\nTsChartPointDirective  -->\n\nTsChartModule->TsChartPointDirective \n\n\n\n\n\nTsChartSeriesDirective \n\nTsChartSeriesDirective \n\nTsChartSeriesDirective  -->\n\nTsChartModule->TsChartSeriesDirective \n\n\n\n\n\nHighchartsService\n\nHighchartsService\n\nTsChartModule -->\n\nHighchartsService->TsChartModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/chart/chart.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsChartComponent\n                            \n                            \n                                TsChartPointDirective\n                            \n                            \n                                TsChartSeriesDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     HighchartsService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsChartComponent\n                            \n                            \n                                    TsChartPointDirective\n                            \n                            \n                                    TsChartSeriesDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  HighchartsService,\n  HIGHCHARTS,\n} from './highcharts.service';\nimport { TsChartComponent } from './chart.component';\nimport { TsChartSeriesDirective } from './series.directive';\nimport { TsChartPointDirective } from './point.directive';\n\nexport * from './chart.component';\nexport * from './options.interface';\nexport * from './highcharts.service';\nexport * from './chart.event';\nexport * from './series.directive';\nexport * from './point.directive';\nexport * from './utilities/compose-events';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    HighchartsService,\n    {\n      // This injection token will be overriden by the user.\n      // It will provide the user-assembled Highcharts library.\n      provide: HIGHCHARTS,\n      useValue: null,\n    },\n  ],\n  declarations: [\n    TsChartComponent,\n    TsChartSeriesDirective,\n    TsChartPointDirective,\n  ],\n  exports: [\n    TsChartComponent,\n    TsChartSeriesDirective,\n    TsChartPointDirective,\n  ],\n})\nexport class TsChartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartObject.html":{"url":"interfaces/TsChartObject.html","title":"interface - TsChartObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ChartObject\n            \n\n\n\n\n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartOptions.html":{"url":"interfaces/TsChartOptions.html","title":"interface - TsChartOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface for options that the consumer can set\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        drilldown\n                                \n                                \n                                            Optional\n                                        legend\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        mapNavigation\n                                \n                                \n                                            Optional\n                                        plotOptions\n                                \n                                \n                                            Optional\n                                        subtitle\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        tooltip\n                                \n                                \n                                            Optional\n                                        xAxis\n                                \n                                \n                                            Optional\n                                        yAxis\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drilldown\n                                    \n                                \n                                \n                                    \n                                        drilldown:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legend\n                                    \n                                \n                                \n                                    \n                                        legend:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapNavigation\n                                    \n                                \n                                \n                                    \n                                        mapNavigation:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plotOptions\n                                    \n                                \n                                \n                                    \n                                        plotOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Wrapper object for config objects for each series type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtitle\n                                    \n                                \n                                \n                                    \n                                        subtitle:     TsChartTitle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartTitle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The chart's subtitle. TsChartTitle\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     TsChartTitle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartTitle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The chart's main title. TsChartTitle\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                    \n                                \n                                \n                                    \n                                        tooltip:     TsChartTooltip | TsChartMapTooltip\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartTooltip | TsChartMapTooltip\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Options for the tooltip that appears when the user hovers over a series or point.\nTsChartTooltip TsChartMapTooltip\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxis\n                                    \n                                \n                                \n                                    \n                                        xAxis:     TsChartAxis\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartAxis\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The X axis or category axis. Normally this is the horizontal axis, though if the chart is\ninverted this is the vertical axis.\nTsChartAxis\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxis\n                                    \n                                \n                                \n                                    \n                                        yAxis:     TsChartAxis\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartAxis\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\nthis is the horizontal axis.\nTsChartAxis\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsChartPointDirective.html":{"url":"directives/TsChartPointDirective.html","title":"directive - TsChartPointDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsChartPointDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/point.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ts-point\n                    \n\n                \n            \n        \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                    \n                        Fires when a point is clicked.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/point.directive.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                    \n                        Fires when the mouse leaves the area close to the point.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/point.directive.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                    \n                        Fires when the mouse enters the area close to the point.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/point.directive.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        remove\n                    \n                    \n                        Fires when the point is removed using the .remove() method.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/point.directive.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        select\n                    \n                    \n                        Fires when the point is selected either programmatically or following a click on the point.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/point.directive.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        unselect\n                    \n                    \n                        Fires when the point is unselected either programmatically or following a click on the point.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/point.directive.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        update\n                    \n                    \n                        Fires when the point is updated programmatically through the .update() method.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/point.directive.ts:58\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  Output,\n  EventEmitter,\n} from '@angular/core';\n\nimport { TsChartEvent } from './chart.event';\n\n\n// NOTE: We are attaching only functionality (no DOM) but we still want the consumer to be able to\n// add a component selector to the DOM rather than adding another dummy DOM element to attach event\n// listeners to.\n// tslint:disable: directive-selector\n@Directive({\n  selector: 'ts-point',\n})\nexport class TsChartPointDirective {\n  /**\n   * Fires when a point is clicked.\n   */\n  @Output()\n  public click: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the mouse leaves the area close to the point.\n   */\n  @Output()\n  public mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the mouse enters the area close to the point.\n   */\n  @Output()\n  public mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the point is removed using the .remove() method.\n   */\n  @Output()\n  public remove: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the point is selected either programmatically or following a click on the point.\n   */\n  @Output()\n  public select: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the point is unselected either programmatically or following a click on the point.\n   */\n  @Output()\n  public unselect: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the point is updated programmatically through the .update() method.\n   */\n  @Output()\n  public update: EventEmitter = new EventEmitter();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsChartSeriesDirective.html":{"url":"directives/TsChartSeriesDirective.html","title":"directive - TsChartSeriesDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsChartSeriesDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/series.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ts-series\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                point\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                afterAnimate\n                            \n                            \n                                checkboxClick\n                            \n                            \n                                click\n                            \n                            \n                                hide\n                            \n                            \n                                legendItemClick\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        afterAnimate\n                    \n                    \n                        Fires after the series has finished its initial animation, or in case animation is disabled,\nimmediately as the series is displayed.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        checkboxClick\n                    \n                    \n                        Fires when the checkbox next to the series' name in the legend is clicked.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        click\n                    \n                    \n                        Fires when the series is clicked.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hide\n                    \n                    \n                        Fires when the series is hidden after chart generation time, either by clicking the legend item\nor by calling .hide().\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        legendItemClick\n                    \n                    \n                        Fires when the legend item belonging to the series is clicked.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                    \n                        Fires when the mouse leaves the graph.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                    \n                        Fires when the mouse enters the graph.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        show\n                    \n                    \n                        Fires when the series is shown after chart generation time, either by clicking the legend item or by calling .show().\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:74\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            point\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        point:     TsChartPointDirective\n\n                    \n                \n                    \n                        \n                            Type :     TsChartPointDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:24\n                            \n                        \n\n                \n                    \n                        Create a reference to the child TsChartPointDirective if one exists.\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ContentChild,\n  EventEmitter,\n  Output,\n} from '@angular/core';\n\nimport { TsChartEvent } from './chart.event';\nimport { TsChartPointDirective } from './point.directive';\n\n\n// NOTE: We are attaching only functionality (no DOM) but we still want the consumer to be able to\n// add a component selector to the DOM rather than adding another dummy DOM element to attach event\n// listeners to.\n// tslint:disable: directive-selector\n@Directive({\n  selector: 'ts-series',\n})\nexport class TsChartSeriesDirective {\n  /**\n   * Create a reference to the child {@link TsChartPointDirective} if one exists.\n   */\n  @ContentChild(TsChartPointDirective)\n  point!: TsChartPointDirective;\n\n  /**\n   * Fires after the series has finished its initial animation, or in case animation is disabled,\n   * immediately as the series is displayed.\n   */\n  @Output()\n  public afterAnimate: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the checkbox next to the series' name in the legend is clicked.\n   */\n  @Output()\n  public checkboxClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the series is clicked.\n   */\n  @Output()\n  public click: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the series is hidden after chart generation time, either by clicking the legend item\n   * or by calling .hide().\n   */\n  @Output()\n  public hide: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the legend item belonging to the series is clicked.\n   */\n  @Output()\n  public legendItemClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the mouse leaves the graph.\n   */\n  @Output()\n  public mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the mouse enters the graph.\n   */\n  @Output()\n  public mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the series is shown after chart generation time, either by clicking the legend item or by calling .show().\n   */\n  @Output()\n  public show: EventEmitter = new EventEmitter();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartTitle.html":{"url":"interfaces/TsChartTitle.html","title":"interface - TsChartTitle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartTitle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The axis title, showing next to the axis line.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The actual text of the axis title.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartTooltip.html":{"url":"interfaces/TsChartTooltip.html","title":"interface - TsChartTooltip","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartTooltip\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The tooltip that appears when the user hovers over a series or point.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        pointFormatter\n                                \n                                \n                                            Optional\n                                        split\n                                \n                                \n                                            Optional\n                                        valuePrefix\n                                \n                                \n                                            Optional\n                                        valueSuffix\n                                \n                                \n                                            Optional\n                                        xDateFormat\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pointFormatter\n                                    \n                                \n                                \n                                    \n                                        pointFormatter:     TsChartLabelFormatterFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartLabelFormatterFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A callback function for formatting the HTML output for a single point in the tooltip.\nAvailable data:\n\nthis.percentage\nthis.point\nthis.points\nthis.series\nthis.total\nthis.x\nthis.y\n\nTsChartLabelFormatterFn\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        split\n                                    \n                                \n                                \n                                    \n                                        split:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Split the tooltip into one label per series, with the header close to the axis.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valuePrefix\n                                    \n                                \n                                \n                                    \n                                        valuePrefix:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A string to prepend to each series' y value.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueSuffix\n                                    \n                                \n                                \n                                    \n                                        valueSuffix:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A string to append to each series' y value.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xDateFormat\n                                    \n                                \n                                \n                                    \n                                        xDateFormat:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The format for the date in the tooltip header if the X axis is a datetime axis. The default is\na best guess based on the smallest distance between points in the chart.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartZone.html":{"url":"interfaces/TsChartZone.html","title":"interface - TsChartZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n            \n                Description\n            \n            \n                A zone within a series.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        fillColor\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines the color of the series.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                    \n                                \n                                \n                                    \n                                        fillColor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines the fill color for the series (in area type series).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The value up to where the zone extends, if undefined the zones stretches to the last value in\nthe series.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsCheckboxChange.html":{"url":"classes/TsCheckboxChange.html","title":"class - TsCheckboxChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsCheckboxChange\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/checkbox/checkbox.component.ts\n        \n\n            \n                Description\n            \n            \n                Expose the MatCheckboxChange event as TsCheckboxChange. Used by TsCheckboxComponent\n\n            \n\n            \n                Extends\n            \n            \n                    MatCheckboxChange\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n\nTable of Contents\n\nBasic usage\nReactive Forms\nngModel\nisChecked\n\n\nBasic usage\nWrap your label text inside the component:\n\n  My checkbox label\nReactive Forms\nTo use the checkbox with a reactive form, pass the formControl to the checkbox:\n\n  I will be checked if `myControl.value` is true.\nngModel\nTo use the checkbox with Angular's ngModel, just attach the directive to the checkbox:\n\n  I will be checked if `myValue` is true.\nisChecked\nTo seed the initial checked state use the isChecked property:\n\n  I will be checked by default!\n\nNOTE: This should rarely be used (if ever). We should be relying on a Reactive Form or ngModel.\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n} from '@angular/core';\nimport {\n  MatCheckbox,\n  MatCheckboxChange,\n} from '@angular/material/checkbox';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Expose the MatCheckboxChange event as TsCheckboxChange. Used by {@link TsCheckboxComponent}\n */\nexport class TsCheckboxChange extends MatCheckboxChange {}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsCheckboxComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the checkbox UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-checkbox`: The checkbox input element\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  host: {\n    class: 'ts-checkbox',\n  },\n  providers: [CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCheckbox',\n})\nexport class TsCheckboxComponent extends TsReactiveFormBaseComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-checkbox-${nextUniqueId++}`;\n\n  /**\n   * Provide access to the MatCheckboxComponent\n   */\n  @ViewChild(MatCheckbox)\n  checkbox!: MatCheckbox;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Toggle the underlying checkbox if the isChecked property changes\n   */\n  @Input()\n  public set isChecked(v: boolean) {\n    this._isChecked = coerceBooleanProperty(v);\n    this.value = this._isChecked;\n    this.checkbox.checked = this._isChecked;\n    this.changeDetectorRef.detectChanges();\n  }\n  public get isChecked(): boolean {\n    return this._isChecked;\n  }\n  private _isChecked: boolean = false;\n\n  /**\n   * Define if the checkbox is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the checkbox should be indeterminate\n   */\n  @Input()\n  public isIndeterminate: boolean = false;\n\n  /**\n   * Define if the checkbox is required\n   */\n  @Input()\n  public isRequired: boolean = false;\n\n  /**\n   * Toggle the underlying checkbox if the ngModel changes\n   */\n  @Input()\n  public set ngModel(v: boolean) {\n    this._isChecked = v;\n  }\n\n  /**\n   * Define the tabindex\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit an event on input change\n   */\n  @Output()\n  public inputChange: EventEmitter = new EventEmitter;\n\n  /**\n   * Emit a change when moving from the indeterminate state\n   */\n  @Output()\n  public indeterminateChange: EventEmitter = new EventEmitter;\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsCheckboxComponent.html":{"url":"components/TsCheckboxComponent.html","title":"component - TsCheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsCheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        This is the checkbox UI Component\nQA CSS CLASSES\n\nqa-checkbox: The checkbox input element\n\n\n    \n\n    \n        Extends\n    \n    \n            TsReactiveFormBaseComponent\n    \n\n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsCheckbox\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n            \n                providers\n                \n                            CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                ts-checkbox\n            \n\n            \n                styleUrls\n                checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _id\n                            \n                            \n                                    Private\n                                _isChecked\n                            \n                            \n                                    Protected\n                                _uid\n                            \n                            \n                                checkbox\n                            \n                            \n                                    Protected\n                                innerValue\n                            \n                            \n                                    Protected\n                                onChangeCallback\n                            \n                            \n                                    Protected\n                                onTouchedCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onBlur\n                            \n                            \n                                    Protected\n                                registerOnChange\n                            \n                            \n                                    Protected\n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                isChecked\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isIndeterminate\n                            \n                            \n                                isRequired\n                            \n                            \n                                ngModel\n                            \n                            \n                                tabIndex\n                            \n                            \n                                theme\n                            \n                            \n                                formControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                indeterminateChange\n                            \n                            \n                                inputChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/checkbox/checkbox.component.ts:166\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                    \n                        Define an ID for the component\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:95\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isChecked\n                    \n                    \n                        Toggle the underlying checkbox if the isChecked property changes\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:107\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the checkbox is disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:122\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isIndeterminate\n                    \n                    \n                        Define if the checkbox should be indeterminate\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:128\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                    \n                        Define if the checkbox is required\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:134\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ngModel\n                    \n                    \n                        Toggle the underlying checkbox if the ngModel changes\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:140\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                    \n                        Define the tabindex\n\n                            \n                            Type:    number\n\n                            \n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:148\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:154\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        Define the form control to get access to validators\n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        indeterminateChange\n                    \n                    \n                        Emit a change when moving from the indeterminate state\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:166\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputChange\n                    \n                    \n                        Emit an event on input change\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:160\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onBlur\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onBlur()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:61\n                            \n                        \n\n\n                \n                    \n                            Set touched on blur\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:69\n                            \n                        \n\n\n                \n                    \n                            Register onChange callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:77\n                            \n                        \n\n\n                \n                    \n                            Register onTouched callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:85\n                            \n                        \n\n\n                \n                    \n                            Write value to inner value (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : this._uid\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _isChecked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _isChecked:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _uid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _uid:     \n\n                    \n                \n                    \n                        \n                            Default value : `ts-checkbox-${nextUniqueId++}`\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:83\n                            \n                        \n\n                \n                    \n                        Define the default component ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkbox:     MatCheckbox\n\n                    \n                \n                    \n                        \n                            Type :     MatCheckbox\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:89\n                            \n                        \n\n                \n                    \n                        Provide access to the MatCheckboxComponent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            innerValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        innerValue:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:26\n                            \n                        \n\n                \n                    \n                        Define the internal data model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onChangeCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onChangeCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:31\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onTouchedCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onTouchedCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:36\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:98\n                                \n                            \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:95\n                                \n                            \n                    \n                        \n                                Define an ID for the component\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isChecked\n                    \n                \n\n                \n                    \n                        getisChecked()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:113\n                                \n                            \n\n                \n                    \n                        setisChecked(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:107\n                                \n                            \n                    \n                        \n                                Toggle the underlying checkbox if the isChecked property changes\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        ngModel\n                    \n                \n\n\n                \n                    \n                        setngModel(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:140\n                                \n                            \n                    \n                        \n                                Toggle the underlying checkbox if the ngModel changes\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        \n\nTable of Contents\n\nBasic usage\nReactive Forms\nngModel\nisChecked\n\n\nBasic usage\nWrap your label text inside the component:\n\n  My checkbox label\nReactive Forms\nTo use the checkbox with a reactive form, pass the formControl to the checkbox:\n\n  I will be checked if `myControl.value` is true.\nngModel\nTo use the checkbox with Angular's ngModel, just attach the directive to the checkbox:\n\n  I will be checked if `myValue` is true.\nisChecked\nTo seed the initial checked state use the isChecked property:\n\n  I will be checked by default!\n\nNOTE: This should rarely be used (if ever). We should be relying on a Reactive Form or ngModel.\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n} from '@angular/core';\nimport {\n  MatCheckbox,\n  MatCheckboxChange,\n} from '@angular/material/checkbox';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Expose the MatCheckboxChange event as TsCheckboxChange. Used by {@link TsCheckboxComponent}\n */\nexport class TsCheckboxChange extends MatCheckboxChange {}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsCheckboxComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the checkbox UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-checkbox`: The checkbox input element\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  host: {\n    class: 'ts-checkbox',\n  },\n  providers: [CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCheckbox',\n})\nexport class TsCheckboxComponent extends TsReactiveFormBaseComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-checkbox-${nextUniqueId++}`;\n\n  /**\n   * Provide access to the MatCheckboxComponent\n   */\n  @ViewChild(MatCheckbox)\n  checkbox!: MatCheckbox;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Toggle the underlying checkbox if the isChecked property changes\n   */\n  @Input()\n  public set isChecked(v: boolean) {\n    this._isChecked = coerceBooleanProperty(v);\n    this.value = this._isChecked;\n    this.checkbox.checked = this._isChecked;\n    this.changeDetectorRef.detectChanges();\n  }\n  public get isChecked(): boolean {\n    return this._isChecked;\n  }\n  private _isChecked: boolean = false;\n\n  /**\n   * Define if the checkbox is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the checkbox should be indeterminate\n   */\n  @Input()\n  public isIndeterminate: boolean = false;\n\n  /**\n   * Define if the checkbox is required\n   */\n  @Input()\n  public isRequired: boolean = false;\n\n  /**\n   * Toggle the underlying checkbox if the ngModel changes\n   */\n  @Input()\n  public set ngModel(v: boolean) {\n    this._isChecked = v;\n  }\n\n  /**\n   * Define the tabindex\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit an event on input change\n   */\n  @Output()\n  public inputChange: EventEmitter = new EventEmitter;\n\n  /**\n   * Emit a change when moving from the indeterminate state\n   */\n  @Output()\n  public indeterminateChange: EventEmitter = new EventEmitter;\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsCheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsCheckboxModule.html":{"url":"modules/TsCheckboxModule.html","title":"module - TsCheckboxModule","body":"\n                   \n\n\n\n\n  Modules\n  TsCheckboxModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsCheckboxModule\n\n\n\ncluster_TsCheckboxModule_declarations\n\n\n\ncluster_TsCheckboxModule_TsCheckboxComponent_providers\n\n\n\ncluster_TsCheckboxModule_exports\n\n\n\n\nTsCheckboxComponent\n\nTsCheckboxComponent\n\n\n\nTsCheckboxModule\n\nTsCheckboxModule\n\nTsCheckboxModule -->\n\nTsCheckboxComponent->TsCheckboxModule\n\n\n\n\n\nTsCheckboxComponent \n\nTsCheckboxComponent \n\nTsCheckboxComponent  -->\n\nTsCheckboxModule->TsCheckboxComponent \n\n\n\n\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n\nTsCheckboxComponent -->\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR->TsCheckboxComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/checkbox/checkbox.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCheckboxComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCheckboxComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { TsCheckboxComponent } from './checkbox.component';\n\nexport * from './checkbox.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatCheckboxModule,\n  ],\n  exports: [\n    TsCheckboxComponent,\n  ],\n  declarations: [\n    TsCheckboxComponent,\n  ],\n})\nexport class TsCheckboxModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsColumnDefDirective.html":{"url":"directives/TsColumnDefDirective.html","title":"directive - TsColumnDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsColumnDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Column definition for the TsTableComponent.\nDefines a set of cells available for a table column.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsColumnDef]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                minWidth\n                            \n                            \n                                noWrap\n                            \n                            \n                                tsColumnDef\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        minWidth\n                    \n                    \n                        Define a minimum width for the column\n\n                            \n                            Type:    string | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/table/cell.ts:129\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        noWrap\n                    \n                    \n                        Define if a column's contents should wrap when long\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/table/cell.ts:123\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tsColumnDef\n                    \n                    \n                        Define a unique name for this column\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/table/cell.ts:116\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsConfirmationDirective.html":{"url":"directives/TsConfirmationDirective.html","title":"directive - TsConfirmationDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsConfirmationDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/confirmation/confirmation.directive.ts\n        \n\n            \n                Description\n            \n            \n                A directive to inject a confirmation step into any button\n\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n                        OnInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \nClick me!\n\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsConfirmation]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modalInstance\n                            \n                            \n                                    Private\n                                overlayRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createOverlay\n                            \n                            \n                                    Private\n                                dismissOverlay\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelled\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, overlay: Overlay, host: TsButtonComponent, changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/confirmation/confirmation.directive.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    TsButtonComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelled\n                    \n                    \n                        An event emitted when the confirmation is cancelled\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:57\n                            \n                        \n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick(event: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:74\n                            \n                        \n\n\n                \n                    \n                            Spawn the confirmation overlay on click\n\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:99\n                            \n                        \n\n\n                \n                    \n                            Create and attach the confirmation overlay\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dismissOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dismissOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:155\n                            \n                        \n\n\n                \n                    \n                            Dismiss the overlay\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:90\n                            \n                        \n\n\n                \n                    \n                            Dismiss the overlay and clean up observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:82\n                            \n                        \n\n\n                \n                    \n                            Set a flag in the TsButtonComponent to intercept the click\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modalInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalInstance:     TsConfirmationModalComponent\n\n                    \n                \n                    \n                        \n                            Type :     TsConfirmationModalComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:46\n                            \n                        \n\n                \n                    \n                        Store a reference to the created confirmation modal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            overlayRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        overlayRef:     OverlayRef | null\n\n                    \n                \n                    \n                        \n                            Type :     OverlayRef | null\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:51\n                            \n                        \n\n                \n                    \n                        Store a reference to the modal overlay\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        Confirmation\n\nThis directive can be attached to any  to enable a confirmation step before triggering\nthe button's action.\nBasic flow:\n\nThe user clicks the button\nA pop-up appears asking user to cancel or confirm\nIf the user clicks 'confirm', the original ts-button click event is emitted\nIf the user clicks 'cancel' the pop-up is closed\n\n\n\nTable of Contents\n\nBasic usage\nCancelled event\n\n\nBasic usage\nAdd the directive to any ts-button:\n\n  Click me!\nCancelled event\nThis directive exposes a new event that can be used to determine when a user has chosen 'cancel'\nfrom the confirmation pop-up.\n\n  Click me!\n\n    \n\n    \n        import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  ConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n} from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ESCAPE } from '@terminus/ngx-tools/keycodes';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { untilComponentDestroyed } from '@terminus/ngx-tools';\nimport { filter, merge } from 'rxjs/operators';\n\nimport { TsConfirmationModalComponent } from './confirmation-modal.component';\nimport { TsButtonComponent } from './../button/button.component';\n\n\n/**\n * A directive to inject a confirmation step into any button\n *\n * @example\n *         \n *           Click me!\n *         \n */\n@Directive({\n  selector: '[tsConfirmation]',\n  host: {\n    class: 'ts-confirmation',\n  },\n  exportAs: 'tsConfirmation',\n})\nexport class TsConfirmationDirective implements OnDestroy, OnInit {\n  /**\n   * Store a reference to the created confirmation modal\n   */\n  private modalInstance!: TsConfirmationModalComponent;\n\n  /**\n   * Store a reference to the modal overlay\n   */\n  private overlayRef!: OverlayRef | null;\n\n  /**\n   * An event emitted when the confirmation is cancelled\n   */\n  @Output()\n  public cancelled: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private elementRef: ElementRef,\n    private overlay: Overlay,\n    private host: TsButtonComponent,\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Spawn the confirmation overlay on click\n   *\n   * @param event - The MouseEvent\n   */\n  @HostListener('click', ['$event'])\n  public onClick(event: Event): void {\n    this.createOverlay();\n  }\n\n\n  /**\n   * Set a flag in the {@link TsButtonComponent} to intercept the click\n   */\n  public ngOnInit(): void {\n    this.host.interceptClick = true;\n  }\n\n\n  /**\n   * Dismiss the overlay and clean up observables\n   */\n  public ngOnDestroy(): void {\n    this.dismissOverlay();\n    this.host.interceptClick = false;\n  }\n\n\n  /**\n   * Create and attach the confirmation overlay\n   */\n  private createOverlay(): void {\n    const positionStrategy: ConnectedPositionStrategy = this.overlay.position().connectedTo(\n      this.elementRef,\n      {\n        originX: 'center',\n        originY: 'bottom',\n      },\n      {\n        overlayX: 'center',\n        overlayY: 'top',\n      },\n    );\n\n    const overlayConfig: OverlayConfig = new OverlayConfig({\n      positionStrategy,\n      hasBackdrop: true,\n      backdropClass: 'ts-confirmation-overlay',\n      panelClass: ['qa-confirmation', 'ts-confirmation-overlay__panel'],\n    });\n\n    // Create the overlay\n    this.overlayRef = this.overlay.create(overlayConfig);\n\n    // Wire up listeners for overlay clicks and ESC key\n    this.overlayRef._keydownEvents.pipe(\n      filter((event) => event.keyCode === ESCAPE),\n      merge(this.overlayRef.backdropClick()),\n      untilComponentDestroyed(this),\n    ).subscribe(() => {\n      this.dismissOverlay();\n      this.cancelled.emit(true);\n    });\n\n    // Create and attach the modal\n    const userProfilePortal = new ComponentPortal(TsConfirmationModalComponent);\n    this.modalInstance = this.overlayRef.attach(userProfilePortal).instance;\n\n    // Start the progress indicator of the TsButton\n    this.host.showProgress = true;\n\n    // Subscribe to the continue event\n    this.modalInstance.confirm.subscribe((shouldProceed: boolean) => {\n      if (coerceBooleanProperty(shouldProceed)) {\n        this.host.clickEvent.emit(this.host.originalClickEvent);\n        this.dismissOverlay();\n      } else {\n        this.dismissOverlay();\n        this.cancelled.emit(true);\n      }\n    });\n  }\n\n\n  /**\n   * Dismiss the overlay\n   */\n  private dismissOverlay(): void {\n    // istanbul ignore else\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n    }\n    // Stop the progress indicator of the TsButton\n    this.host.showProgress = false;\n    this.changeDetectorRef.markForCheck();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsConfirmationModalComponent.html":{"url":"components/TsConfirmationModalComponent.html","title":"component - TsConfirmationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsConfirmationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/confirmation/confirmation-modal.component.ts\n\n\n    \n        Description\n    \n    \n        The confirmation modal used by TsConfirmationDirective\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsConfirmation\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-confirmation-modal\n            \n\n            \n                styleUrls\n                confirmation-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirmation-modal.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirm\n                            \n                            \n                                    Public\n                                gap\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirm:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation-modal.component.ts:29\n                            \n                        \n\n                \n                    \n                        Stream confirmation choices\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gap:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : TS_SPACING.large[0]\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation-modal.component.ts:34\n                            \n                        \n\n                \n                    \n                        Define the space between the buttons\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { TS_SPACING } from './../spacing/spacing.constant';\n\n\n/**\n * The confirmation modal used by {@link TsConfirmationDirective}\n */\n@Component({\n  selector: 'ts-confirmation-modal',\n  styleUrls: ['./confirmation-modal.component.scss'],\n  templateUrl: './confirmation-modal.component.html',\n  host: {\n    class: 'ts-confirmation',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsConfirmation',\n})\nexport class TsConfirmationModalComponent {\n  /**\n   * Stream confirmation choices\n   */\n  public confirm: Subject = new Subject();\n\n  /**\n   * Define the space between the buttons\n   */\n  public gap: string = TS_SPACING.large[0];\n}\n\n    \n\n    \n        \n  \n    Cancel\n  \n\n  \n    Confirm\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Cancel        Confirm  '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsConfirmationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsConfirmationModule.html":{"url":"modules/TsConfirmationModule.html","title":"module - TsConfirmationModule","body":"\n                   \n\n\n\n\n  Modules\n  TsConfirmationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsConfirmationModule\n\n\n\ncluster_TsConfirmationModule_declarations\n\n\n\ncluster_TsConfirmationModule_imports\n\n\n\ncluster_TsConfirmationModule_exports\n\n\n\n\nTsConfirmationDirective\n\nTsConfirmationDirective\n\n\n\nTsConfirmationModule\n\nTsConfirmationModule\n\nTsConfirmationModule -->\n\nTsConfirmationDirective->TsConfirmationModule\n\n\n\n\n\nTsConfirmationModalComponent\n\nTsConfirmationModalComponent\n\nTsConfirmationModule -->\n\nTsConfirmationModalComponent->TsConfirmationModule\n\n\n\n\n\nTsConfirmationDirective \n\nTsConfirmationDirective \n\nTsConfirmationDirective  -->\n\nTsConfirmationModule->TsConfirmationDirective \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsConfirmationModule -->\n\nTsButtonModule->TsConfirmationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/confirmation/confirmation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsConfirmationDirective\n                            \n                            \n                                TsConfirmationModalComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TsConfirmationModalComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsConfirmationDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TsButtonModule } from './../button/button.module';\nimport { TsConfirmationDirective } from './confirmation.directive';\nimport { TsConfirmationModalComponent } from './confirmation-modal.component';\n\nexport * from './confirmation.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    TsButtonModule,\n    FlexLayoutModule,\n  ],\n  declarations: [\n    TsConfirmationDirective,\n    TsConfirmationModalComponent,\n  ],\n  exports: [\n    TsConfirmationDirective,\n  ],\n  entryComponents: [\n    TsConfirmationModalComponent,\n  ],\n})\nexport class TsConfirmationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsCopyComponent.html":{"url":"components/TsCopyComponent.html","title":"component - TsCopyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsCopyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/copy/copy.component.ts\n\n\n    \n        Description\n    \n    \n        This is the TsCopyComponent UI Component\nQA CSS CLASSES\nqa-copy: Placed on the div element which contains this component\nqa-copy-content: Placed on a div element which contains the content which will be copied\nqa-copy-icon: Placed on the icon which copies the content to the clipboard when clicked\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    My text to copy!\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-copy\n            \n\n            \n                styleUrls\n                copy.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./copy.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Private\n                                document\n                            \n                            \n                                    Public\n                                hasSelected\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                rippleColor\n                            \n                            \n                                    Private\n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                copyToClipboard\n                            \n                            \n                                    Public\n                                resetSelection\n                            \n                            \n                                    Public\n                                selectText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableInitialSelection\n                            \n                            \n                                enableQuickCopy\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(documentService: TsDocumentService, windowService: TsWindowService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/copy/copy.component.ts:91\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        documentService\n                                                  \n                                                        \n                                                                    TsDocumentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        windowService\n                                                  \n                                                        \n                                                                    TsWindowService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableInitialSelection\n                    \n                    \n                        Define if the initial click should select the contents\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:79\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableQuickCopy\n                    \n                    \n                        Define if the copy to clipboard functionality is enabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:85\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the component theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:91\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            copyToClipboard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        copyToClipboard(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:163\n                            \n                        \n\n\n                \n                    \n                            Copy text to the user's clipboard\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe text to copy\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resetSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetSelection()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:153\n                            \n                        \n\n\n                \n                    \n                            Reset the text selection\nNOTE: The containing div must have a tabindex set or no blur event will be fired\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectText(element: ElementRef, hasSelected: boolean, disabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            Select the text content of the passed in element\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    ElementRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe element whose text should be selected\n\n\n                                                        \n                                                \n                                                \n                                                        hasSelected\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe flag defining if the selection has already been made\n\n\n                                                        \n                                                \n                                                \n                                                        disabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe flag defining if the selection functionality should be disabled\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    The value representing if the copy was successful\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        content:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:73\n                            \n                        \n\n                \n                    \n                        Define access to the wrapper around the content to be copied\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            document\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        document:     Document\n\n                    \n                \n                    \n                        \n                            Type :     Document\n\n                        \n                    \n                    \n                        \n                            Default value : this.documentService.document\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:46\n                            \n                        \n\n                \n                    \n                        Store a reference to the document object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasSelected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:51\n                            \n                        \n\n                \n                    \n                        Internal flag to track if the contents have been selected\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'content_copy'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:56\n                            \n                        \n\n                \n                    \n                        Define the copy icon\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rippleColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rippleColor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '#1a237e'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:62\n                            \n                        \n\n                \n                    \n                        Define the color of the material ripple\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            window\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        window:     Window\n\n                    \n                \n                    \n                        \n                            Type :     Window\n\n                        \n                    \n                    \n                        \n                            Default value : this.windowService.nativeWindow\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:67\n                            \n                        \n\n                \n                    \n                        Store a reference to the window object\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        textContent\n                    \n                \n\n                \n                    \n                        gettextContent()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/copy/copy.component.ts:108\n                                \n                            \n                    \n                        \n                                Return the inner text content\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  TsWindowService,\n  TsDocumentService,\n} from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * This is the TsCopyComponent UI Component\n *\n * #### QA CSS CLASSES\n * `qa-copy`: Placed on the div element which contains this component\n * `qa-copy-content`: Placed on a div element which contains the content which will be copied\n * `qa-copy-icon`: Placed on the icon which copies the content to the clipboard when clicked\n *\n * @example\n * My text to copy!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-copy',\n  templateUrl: './copy.component.html',\n  styleUrls: ['./copy.component.scss'],\n  host: {\n    class: 'ts-copy',\n  },\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsCopyComponent {\n  /**\n   * Store a reference to the document object\n   */\n  private document: Document = this.documentService.document;\n\n  /**\n   * Internal flag to track if the contents have been selected\n   */\n  public hasSelected: boolean = false;\n\n  /**\n   * Define the copy icon\n   */\n  public icon: string = 'content_copy';\n\n  /**\n   * Define the color of the material ripple\n   */\n  // FIXME: This color should be coming from a config\n  public rippleColor: string = '#1a237e';\n\n  /**\n   * Store a reference to the window object\n   */\n  private window: Window = this.windowService.nativeWindow;\n\n  /**\n   * Define access to the wrapper around the content to be copied\n   */\n  @ViewChild('content')\n  public content!: ElementRef;\n\n  /**\n   * Define if the initial click should select the contents\n   */\n  @Input()\n  public disableInitialSelection: boolean = false;\n\n  /**\n   * Define if the copy to clipboard functionality is enabled\n   */\n  @Input()\n  public enableQuickCopy: boolean = false;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private documentService: TsDocumentService,\n    private windowService: TsWindowService,\n  ) {}\n\n\n  /**\n   * Return the inner text content\n   *\n   * @return The text content of the inner \n   */\n  public get textContent(): string {\n    const hasInnerText =\n      this.content && this.content.nativeElement && this.content.nativeElement.innerText;\n\n    if (hasInnerText) {\n      return this.content.nativeElement.innerText;\n    } else {\n      return '';\n    }\n  }\n\n\n  /**\n   * Select the text content of the passed in element\n   *\n   * @param element - The element whose text should be selected\n   * @param hasSelected - The flag defining if the selection has already been made\n   * @param disabled - The flag defining if the selection functionality should be disabled\n   * @return The value representing if the copy was successful\n   */\n  public selectText(element: ElementRef, hasSelected: boolean, disabled: boolean): boolean {\n    // If this functionality is disabled OR the text has already been selected,\n    // do not intercept any more clicks until the focus is reset\n    if (disabled || hasSelected) {\n      return false;\n    }\n\n    const selection = this.window.getSelection();\n    // NOTE: Adding the type of 'Range' to this causes an error with `range.selectNodeContents`\n    // `Argument of type ElementRef is not assignable to type 'Node'`\n    const range = this.document.createRange();\n\n    range.selectNodeContents(element as any);\n    selection.removeAllRanges();\n    selection.addRange(range);\n\n    this.hasSelected = true;\n    return true;\n  }\n\n\n  /**\n   * Reset the text selection\n   * NOTE: The containing div must have a `tabindex` set or no blur event will be fired\n   */\n  public resetSelection(): void {\n    this.hasSelected = false;\n  }\n\n\n  /**\n   * Copy text to the user's clipboard\n   *\n   * @param text - The text to copy\n   */\n  public copyToClipboard(text: string): void {\n    // Create a hidden textarea to seed with text content\n    const target = this.document.createElement('textarea');\n    target.className = 'targetElement';\n    target.style.position = 'absolute';\n    target.style.left = '101%';\n    target.style.top = '0';\n    target.style.width = '1px';\n    target.style.height = '1px';\n    target.textContent = text;\n\n    // Add the textarea, focus and select the text\n    this.document.body.appendChild(target);\n    target.focus();\n    target.setSelectionRange(0, target.value.length);\n\n    // Copy the selection or fall back to prompt\n    try {\n      this.document.execCommand('copy');\n      target.remove();\n    } catch (error) {\n      // Fall back to the native alert\n      this.window.prompt('Copy to clipboard: Ctrl+C, Enter', text);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n        {{ icon }}\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ icon }}            '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsCopyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsCopyModule.html":{"url":"modules/TsCopyModule.html","title":"module - TsCopyModule","body":"\n                   \n\n\n\n\n  Modules\n  TsCopyModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsCopyModule\n\n\n\ncluster_TsCopyModule_declarations\n\n\n\ncluster_TsCopyModule_imports\n\n\n\ncluster_TsCopyModule_exports\n\n\n\n\nTsCopyComponent\n\nTsCopyComponent\n\n\n\nTsCopyModule\n\nTsCopyModule\n\nTsCopyModule -->\n\nTsCopyComponent->TsCopyModule\n\n\n\n\n\nTsCopyComponent \n\nTsCopyComponent \n\nTsCopyComponent  -->\n\nTsCopyModule->TsCopyComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsCopyModule -->\n\nTsIconModule->TsCopyModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsCopyModule -->\n\nTsTooltipModule->TsCopyModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/copy/copy.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCopyComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCopyComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { TsTooltipModule } from './../tooltip/tooltip.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsCopyComponent } from './copy.component';\n\nexport * from './copy.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    TsIconModule,\n    MatRippleModule,\n    TsTooltipModule,\n  ],\n  exports: [\n    TsCopyComponent,\n  ],\n  declarations: [\n    TsCopyComponent,\n  ],\n})\nexport class TsCopyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsDatePipe.html":{"url":"pipes/TsDatePipe.html","title":"pipe - TsDatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsDatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/date/date.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsDate\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string | Date, format: TsDateTypes)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/date/date.pipe.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string | Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        format\n                                                        \n                                                                    TsDateTypes\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'short'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n  isDevMode,\n} from '@angular/core';\nimport {\n  isValid,\n  format as formatDate,\n} from 'date-fns';\n\n\n/**\n * Define the allowed date formats for the {@link TsDatePipe}.\n */\nexport type TsDateTypes =\n  // 02/08/2018\n  'short'\n  // February 8th, 2018\n  | 'medium'\n  // Thursday, February 8th, 2018, 12:00:00am\n  | 'extended'\n  // 2018-02-08T05:00:00.000Z\n  | 'timestamp'\n;\n\n\n@Pipe({\n  name: 'tsDate',\n})\nexport class TsDatePipe implements PipeTransform {\n  transform(value: string|Date, format: TsDateTypes = 'short'): string | undefined {\n    const validFormats: TsDateTypes[] = [\n      'short',\n      'medium',\n      'extended',\n      'timestamp',\n    ];\n\n    // Check for null values to avoid issues during data-binding\n    if (!value) {\n      return;\n    }\n\n    // Check for date validity\n    if (!isValid(value) && isDevMode()) {\n      throw Error(`'${value}' is not a valid date.`);\n    }\n\n    // Check for format validity\n    if ((validFormats.indexOf(format) \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsDateRange.html":{"url":"interfaces/TsDateRange.html","title":"interface - TsDateRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsDateRange\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/date-range/date-range.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the structure of the date range object used by TsDateRangeComponent\nTODO: In the process of deprecating the null portion of this interface. It should be using\nundefined instead.\nDeprecation target: 10.0.0\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        end\n                                \n                                \n                                        start\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                    \n                                \n                                \n                                    \n                                        end:     Date | undefined | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | undefined | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The end date of the range\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:     Date | undefined | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | undefined | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The start date of the range\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        Date Range\n\n\n\nTable of Contents\n\nEvent driven\nSet max/min range\nSet the initial date without using Reactive Forms\nUse with Reactive Forms\nEnable or Disable controls\n\n\nEvent driven\nThere are three selection events that you can tie into:\n\nstartSelected is fired when a start date is selected\nendSelected is fired when an end date is selected\ndateSelected is fired when either date is selected\n\nSet max/min range\nTo define bounds for date selection, pass in a valid Date to each of these @Inputs:\n\nendMaxDate\nendMinDate\nstartMaxDate\nstartMinDate\n\nstartDate1 = new Date(2017, 1, 1);\nstartDate2 = new Date(2017, 8, 1);\nendDate1 = new Date(2017, 1, 2);\nendDate2 = new Date(2017, 8, 2;Set the initial date without using Reactive Forms\nPass in a Date to startInitialDate and endInitialDate:\ndate1 = new Date(2017, 1, 1);\ndate2 = new Date(2017, 3, 1);\nWhen using a Reactive Form, we can seed the initial values in the form itself\n\nUse with Reactive Forms\nPass in the form control:\n\n  \n\n  Submit\nmyForm: FormGroup = this.formBuilder.group({\n  // Showing a nested example since usually a date range would be nested in a group\n  dateRange: this.formBuilder.group({\n    startDate: [ // This MUST be the name of the range start control\n      new Date(2017, 4, 6),\n    ],\n    endDate: [ // This MUST be the name of the range end control\n      new Date(2017, 4, 8),\n    ],\n  }),\n});NOTE: The keys inside the formGroup passed to the dateFormGroup input must be named\nstartDate and endDate. (see example directly above)\nNOTE: If using a form with nested form groups, each group must be created with\nformBuilder.group for the form get control to work:\n// Notice the nested `dateRange` object without using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: {\n    startDate: [\n      new Date(2017, 4, 6),\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n    ],\n  },\n});\n\n// THIS WILL FAIL!\nconst range = myForm.get('dateRange');\n\n//////////////////////////////////////////////////\n\n// Notice the nested `dateRange` object IS using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: this.formBuilder.group({\n    startDate: [\n      new Date(2017, 4, 6),\n      [\n        Validators.required,\n      ],\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n      [\n        Validators.required,\n      ],\n    ],\n  }),\n});\n\n// Now there is a group for us to 'get'\nconst range = myForm.get('dateRange');Enable or Disable controls\nControls can be enabled or disabled via the associated form control:\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: this.formBuilder.group({\n    startDate: [\n      {\n        value: new Date(2017, 4, 6),\n        disabled: true,\n      },\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n    ],\n  }),\n});\n\n// Enable it at any time:\nconst ctrl = this.myForm.get('dateRange.startDate')\nif (ctr) {\n  ctrl.enable();\n}\n    \n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n} from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Define the structure of the date range object used by {@link TsDateRangeComponent}\n *\n * TODO: In the process of deprecating the `null` portion of this interface. It should be using\n * `undefined` instead.\n *\n * Deprecation target: 10.0.0\n */\nexport interface TsDateRange {\n  /**\n   * The start date of the range\n   */\n  start: Date | undefined | null;\n\n  /**\n   * The end date of the range\n   */\n  end: Date | undefined | null;\n}\n\n\n/**\n * This is the date-range UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-date-range`: The primary component container\n * - `qa-date-range-start-datepicker`: The start date {@link TsDatepickerComponent}\n * - `qa-date-range-end-datepicker`: The end date {@link TsDatepickerComponent}\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-date-range',\n  templateUrl: './date-range.component.html',\n  styleUrls: ['./date-range.component.scss'],\n  host: {\n    class: 'ts-date-range',\n  },\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsDateRangeComponent implements OnInit {\n  /**\n   * Getter to return the date range as an object\n   *\n   * @return The current date range\n   */\n  private get dateRange(): TsDateRange {\n    return {\n      start: this.startDate || undefined,\n      end: this.endDate || undefined,\n    };\n  }\n\n  /**\n   * Store the selected end date\n   *\n   * Deprecated: `null` deprecation target 10.0.0\n   */\n  public endDate: Date | null | undefined;\n\n  /**\n   * Provide quick access to the endDate form control\n   */\n  public get endDateControl(): AbstractControl {\n    const ctrl: AbstractControl | null = this.dateFormGroup ? this.dateFormGroup.get('endDate') : null;\n\n    return ctrl ? ctrl : this.fallbackEndDateControl;\n  }\n\n  /**\n   * Expose the minimum date for the endDate\n   *\n   * NOTE: `any` is used since we cannot seem to use union types in a BehaviorSubject\n   */\n  public endMinDate$: BehaviorSubject = new BehaviorSubject(undefined);\n\n  /**\n   * Define the end date placeholder\n   */\n  public endPlaceholder: string = 'End date';\n\n  /**\n   * Define a fallback control in case one is not passed in\n   */\n  private fallbackEndDateControl: FormControl = new FormControl();\n\n  /**\n   * Define a fallback control in case one is not passed in\n   */\n  private fallbackStartDateControl: FormControl = new FormControl();\n\n  /**\n   * Define the separator between the two date inputs\n   */\n  public separator: string = '-';\n\n  /**\n   * Store the selected start date\n   *\n   * Deprecated: `null` deprecation target 10.0.0\n   */\n  public startDate: Date | undefined | null;\n\n  /**\n   * Provide quick access to the startDate form control\n   */\n  public get startDateControl(): AbstractControl {\n    const ctrl: AbstractControl | null = this.dateFormGroup ? this.dateFormGroup.get('startDate') : null;\n\n    return ctrl ? ctrl : this.fallbackStartDateControl;\n  }\n\n  /**\n   * Expose the maximum date for the startDate\n   *\n   * NOTE: `any` is used since we cannot seem to use union types in a BehaviorSubject\n   */\n  public startMaxDate$: BehaviorSubject = new BehaviorSubject(undefined);\n\n  /**\n   * Define the start date placeholder\n   */\n  public startPlaceholder: string = 'Start date';\n\n  /**\n   * Define the max date for the end date\n   */\n  @Input()\n  public endMaxDate: Date | undefined;\n\n  /**\n   * Define the min date for the end date\n   */\n  @Input()\n  public endMinDate: Date | undefined;\n\n  /**\n   * Define the initial date for the end date\n   */\n  @Input()\n  public endInitialDate: Date | undefined;\n\n  /**\n   * Define the starting view for both datepickers\n   */\n  @Input()\n  public startingView: 'month' | 'year' = 'month';\n\n  /**\n   * Define the max date for the starting date\n   */\n  @Input()\n  public startMaxDate: Date | undefined;\n\n  /**\n   * Define the min date for the starting date\n   */\n  @Input()\n  public startMinDate: Date | undefined;\n\n  /**\n   * Define the initial date for the starting date\n   */\n  @Input()\n  public startInitialDate: Date | undefined;\n\n  /**\n   * Define the form group to attach the date range to\n   */\n  @Input()\n  public dateFormGroup: FormGroup | AbstractControl | undefined;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Output the start date when selected\n   */\n  @Output()\n  public startSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Output the end date when selected\n   */\n  @Output()\n  public endSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Output the selected date range as {@link TsDateRange}\n   *\n   * Deprecated in favor of `change`. Target 10.0.0\n   */\n  @Output()\n  public selectedDate: EventEmitter = new EventEmitter();\n\n  /**\n   * Event emitted anytime the range is changed\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Seed initial date range values\n   */\n  public ngOnInit(): void {\n    // Seed values from @Inputs\n    this.seedDateRange(this.startInitialDate, this.endInitialDate);\n\n    // Seed values from a passed in form group\n    if (this.dateFormGroup) {\n      this.seedWithFormValues(this.dateFormGroup);\n    }\n  }\n\n\n  /**\n   * Seed the date range with initial values\n   *\n   * @param start - The initial start date\n   * @param end - The initial end date\n   */\n  private seedDateRange(\n    start: Date | null | undefined,\n    end: Date | null | undefined,\n  ): void {\n    this.startDate = start;\n    this.endDate = end;\n  }\n\n\n  /**\n   * Seed date values from a passed in form\n   *\n   * @param formGroup - The date form group\n   */\n  private seedWithFormValues(formGroup: FormGroup | AbstractControl): void {\n    if (!formGroup || !formGroup.get('startDate') || !formGroup.get('endDate')) {\n      return;\n    }\n    const startControl: AbstractControl | null = formGroup.get('startDate');\n    const endControl: AbstractControl | null = formGroup.get('endDate');\n    const startValue: Date | undefined = startControl ? startControl.value : undefined;\n    const endValue: Date | undefined = endControl ? endControl.value : undefined;\n\n    // istanbul ignore else\n    if (startValue) {\n      this.startInitialDate = startValue;\n      this.startDate = startValue;\n      this.endMinDate$.next(startValue);\n    }\n\n    // istanbul ignore else\n    if (endValue) {\n      this.endInitialDate = endValue;\n      this.endDate = endValue;\n      this.startMaxDate$.next(endValue);\n    }\n  }\n\n\n  /**\n   * Emit the selected start date and date range\n   *\n   * @param datepickerEvent - The event received from the range start event\n   * {@link TsDatepickerComponent}\n   */\n  public startDateSelected(datepickerEvent: MatDatepickerInputEvent): void {\n    if (datepickerEvent && datepickerEvent.value) {\n      this.endMinDate$.next(datepickerEvent.value);\n      this.startDate = datepickerEvent.value;\n\n      // Update the form value if a formGroup was passed in\n      // istanbul ignore else\n      if (this.dateFormGroup && this.startDateControl) {\n        this.startDateControl.setValue(datepickerEvent.value);\n      }\n\n      this.startSelected.emit(datepickerEvent.value);\n      this.selectedDate.emit(this.dateRange);\n      this.change.emit(this.dateRange);\n    } else {\n      // If no startDate was selected, reset to the original endMinDate\n      if (this.endMinDate) {\n        this.endMinDate$.next(this.endMinDate);\n      } else {\n        // If neither were set, revert to a safe date\n        this.endMinDate$.next(undefined);\n      }\n    }\n  }\n\n\n  /**\n   * Emit the selected end date and date range\n   *\n   * @param datepickerEvent - The event received from the range end event\n   * {@link TsDatepickerComponent}\n   */\n  public endDateSelected(datepickerEvent: MatDatepickerInputEvent): void {\n    if (datepickerEvent && datepickerEvent.value) {\n      this.startMaxDate$.next(datepickerEvent.value);\n      this.endDate = datepickerEvent.value;\n\n      // Update the form value if a formGroup was passed in\n      // istanbul ignore else\n      if (this.dateFormGroup && this.endDateControl) {\n        this.endDateControl.setValue(datepickerEvent.value);\n      }\n\n      this.endSelected.emit(datepickerEvent.value);\n      this.selectedDate.emit(this.dateRange);\n      this.change.emit(this.dateRange);\n    } else {\n      if (this.startMaxDate) {\n        // If no endDate was selected, reset to the original startMaxDate\n        this.startMaxDate$.next(this.startMaxDate);\n      } else {\n        // If neither were set, revert to a safe date\n        this.startMaxDate$.next(undefined);\n      }\n    }\n  }\n\n\n  /**\n   * Update dates when the start date input receives a blur event\n   *\n   * @param date - The date entered\n   */\n  public startBlur(date: Date | undefined): void {\n    this.startDate = date;\n    this.endMinDate$.next(date);\n  }\n\n\n  /**\n   * Update dates when the end date input receives a blur event\n   *\n   * @param date - The date entered\n   */\n  public endBlur(date: Date | undefined): void {\n    this.endDate = date;\n    this.startMaxDate$.next(date);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsDateRangeModule.html":{"url":"modules/TsDateRangeModule.html","title":"module - TsDateRangeModule","body":"\n                   \n\n\n\n\n  Modules\n  TsDateRangeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsDateRangeModule\n\n\n\ncluster_TsDateRangeModule_declarations\n\n\n\ncluster_TsDateRangeModule_imports\n\n\n\ncluster_TsDateRangeModule_exports\n\n\n\n\nTsDateRangeComponent\n\nTsDateRangeComponent\n\n\n\nTsDateRangeModule\n\nTsDateRangeModule\n\nTsDateRangeModule -->\n\nTsDateRangeComponent->TsDateRangeModule\n\n\n\n\n\nTsDateRangeComponent \n\nTsDateRangeComponent \n\nTsDateRangeComponent  -->\n\nTsDateRangeModule->TsDateRangeComponent \n\n\n\n\n\nTsDatepickerModule\n\nTsDatepickerModule\n\nTsDateRangeModule -->\n\nTsDatepickerModule->TsDateRangeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/date-range/date-range.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsDateRangeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsDatepickerModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsDateRangeComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TsDatepickerModule } from './../datepicker/datepicker.module';\nimport { TsDateRangeComponent } from './date-range.component';\n\nexport * from './date-range.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TsDatepickerModule,\n    FlexLayoutModule,\n  ],\n  exports: [\n    TsDateRangeComponent,\n  ],\n  declarations: [\n    TsDateRangeComponent,\n  ],\n})\nexport class TsDateRangeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsDatepickerInputEvent.html":{"url":"classes/TsDatepickerInputEvent.html","title":"class - TsDatepickerInputEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsDatepickerInputEvent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/datepicker/datepicker.component.ts\n        \n\n            \n                Description\n            \n            \n                Expose the MatDatepickerInputEvent event as TsDatepickerInputEvent. Used by TsDatepickerComponent\n\n            \n\n            \n                Extends\n            \n            \n                    MatDatepickerInputEvent\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n\nTable of Contents\n\nEvent driven\nFilter out invalid dates\nSet max/min range\nSet the initial date without using Reactive Forms\nDefine a date that the calendar should open to\nUse with Reactive Forms\nExample with dynamic validation\n\n\nEvent driven\nEach time a selection is made, the selected event is fired.\nFilter out invalid dates\nIf, for instance, you need to prohibit weekend days (sat/sun) from being selected you can pass in a\ncustom method to filter dates:\nmyFilter = (d: Date): boolean => {\n  const day = d.getDay();\n  // Prevent Saturday and Sunday from being selected.\n  return day !== 0 && day !== 6;\n}Set max/min range\nTo define bounds for date selection, pass in a valid Date to minDate and/or maxDate:\ndate1 = new Date(2017, 2, 1);\ndate2 = new Date(2017, 8, 1);Set the initial date without using Reactive Forms\nPass in a Date to initialDate:\nmyDate = new Date(2017, 1, 1);\nWhen using a Reactive Form, we can seed the initial value in the form itself\n\nDefine a date that the calendar should open to\nPass in a Date to openTo:\nmyDate = new Date(2017, 5, 12);Use with Reactive Forms\nPass in the form control:\n\n  \n\n  Submit\nmyForm = this.formBuilder.group({\n  date: [\n    null, // If you need a default value, change this `null` to your value\n    [\n      Validators.required,\n    ],\n  ],\n});NOTE: If using a form with nested form groups, each group must be created with\nformBuilder.group for the form get control to work:\n// Notice the nested `dateRange` object without using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: {\n    startDate: [\n      new Date(2017, 4, 6),\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n    ],\n  },\n});\n\n// THIS WILL FAIL!\nconst range = myForm.get('dateRange');\n\n//////////////////////////////////////////////////\n\n// Notice the nested `dateRange` object IS using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: this.formBuilder.group({\n    startDate: [\n      new Date(2017, 4, 6),\n      [\n        Validators.required,\n      ],\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n      [\n        Validators.required,\n      ],\n    ],\n  }),\n});\n\n// Now there is a group for us to 'get'\nconst range = myForm.get('dateRange');Example with dynamic validation\nWe can recreate a version of the {@link TsDateRangeComponent} using dynamic validation:\n\n  \n\n  \n\n  Submit\nmyForm = this.formBuilder.group({\n  startDate: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n  endDate: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n});\n\n// When the startDate changes, we want to set that date as the minDate for the endDate\nrangeStartChange(event: MatDatepickerInputEvent) {\n  if (event) {\n    // Get the from control\n    const control = this.formTwo.get('endDate');\n\n    // Set all validators.\n    // NOTE: setting validators will clear ALL existing validators, so we must add the required\n    // validator here again\n    control.setValidators([\n      Validators.required,\n      this.validatorsService.minDate(event.value),\n    ]);\n    // Tell the control to update according to the new validators\n    control.updateValueAndValidity();\n  }\n}\n\n// When the endDate changes, we want to set that date as the maxDate for the startDate\nrangeEndChange(event: MatDatepickerInputEvent) {\n  if (event) {\n    // Get the from control\n    const control = this.formTwo.get('startDate');\n\n    // Set all validators.\n    // NOTE: setting validators will clear ALL existing validators, so we must add the required\n    // validator here again\n    control.setValidators([\n      Validators.required,\n      this.validatorsService.maxDate(event.value),\n    ]);\n    // Tell the control to update according to the new validators\n    control.updateValueAndValidity();\n  }\n}\n    \n\n    \n        import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Expose the MatDatepickerInputEvent event as TsDatepickerInputEvent. Used by {@link TsDatepickerComponent}\n */\nexport class TsDatepickerInputEvent extends MatDatepickerInputEvent {}\n\n\n/**\n * Custom control value accessor for our component.\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsDatepickerComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the datepicker UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-datepicker`: The form-field wrapper which contains the input and button\n * - `qa-datepicker-input`: The input element which contains the chosen date\n * - `qa-datepicker-hint`: The hint element, if hint content is provided\n * - `qa-datepicker-toggle`: The button which displays the calendar when clicked\n * - `qa-datepicker-calendar`: The calendar control used for picking a date\n * - `qa-datepicker-validation-messages`: The validation messages container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  providers: [CUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR],\n  host: {\n    class: 'ts-datepicker',\n  },\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsDatepickerComponent extends TsReactiveFormBaseComponent implements OnInit {\n  /**\n   * Expose the max date to the template\n   */\n  public _maxDate: Date | undefined;\n\n  /**\n   * Expose the min date to the template\n   */\n  public _minDate: Date | undefined;\n\n  /**\n   * Store the value of the input\n   */\n  public value: any;\n\n  /**\n   * Define a date filter to disallow certain dates\n   */\n  @Input()\n  public dateFilter: any;\n\n  /**\n   * Define a hint for the datepicker\n   */\n  // FIXME: Fix potential overlap of hint and error messages\n  @Input()\n  public hint: string | undefined;\n\n  /**\n   * Define the placeholder\n   */\n  @Input()\n  public inputPlaceholder: string = 'Select a date';\n\n  /**\n   * Define if the input should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define the maximum date requirement and confirm it is a Date object\n   */\n  @Input()\n  public set maxDate(value: string | Date | undefined) {\n    this._maxDate = (value) ? this.verifyIsDateObject(value) : undefined;\n  }\n\n  /**\n   * Define the minimum date requirement and confirm it is a Date object\n   */\n  @Input()\n  public set minDate(value: string | Date | undefined) {\n    this._minDate = (value) ? this.verifyIsDateObject(value) : undefined;\n  }\n\n  /**\n   * Define a starting date for the datepicker\n   */\n  @Input()\n  public set initialDate(value: string | Date | undefined) {\n    if (!value) {\n      return;\n    }\n\n    this._initialDate = this.verifyIsDateObject(value);\n  }\n  // NOTE: This should never return a string but getter types are required to match setter types\n  public get initialDate(): string | Date | undefined {\n    return this._initialDate;\n  }\n  public _initialDate!: Date;\n\n  /**\n   * Define a date that the datepicker calendar should open to\n   */\n  @Input()\n  public openTo: Date | undefined;\n\n  /**\n   * Define the starting view of the datepicker\n   */\n  @Input()\n  public startingView: 'month' | 'year' = 'month';\n\n  /**\n   * Define the tabindex for the input\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define if validation messages should be shown immediately or on blur\n   *\n   * NOTE: Since the user may never focus the actual input, we should validate immediately\n   */\n  @Input()\n  public validateOnChange: boolean = true;\n\n  /**\n   * Define an event emitter to alert consumers that a date was selected\n   */\n  @Output()\n  public selected: EventEmitter> = new EventEmitter();\n\n  /**\n   * Define an event when the input receives a blur event\n   */\n  @Output()\n  public inputBlur: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Set the initial date if it exists\n   */\n  public ngOnInit() {\n    // istanbul ignore else\n    if (this.initialDate) {\n      this.value = this.initialDate;\n    }\n  }\n\n\n  /**\n   * Helper method to reset the input value\n   */\n  public resetValue(): void {\n    this.value = null;\n  }\n\n\n  /**\n   * Convert an valid date string to a Date if needed\n   *\n   * NOTE: When using 1 time bindings we are required to pass in ISO stringified dates. Adding this\n   * method to our setters adds support for either version\n   *\n   * @param date - The date\n   * @return The Date object\n   */\n  private verifyIsDateObject(date: string | Date): Date {\n    // If value is a valid date string, convert to a date\n    if (!(date instanceof Date)) {\n      return new Date(date);\n    } else {\n      return date;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsDatepickerModule.html":{"url":"modules/TsDatepickerModule.html","title":"module - TsDatepickerModule","body":"\n                   \n\n\n\n\n  Modules\n  TsDatepickerModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsDatepickerModule\n\n\n\ncluster_TsDatepickerModule_declarations\n\n\n\ncluster_TsDatepickerModule_TsDatepickerComponent_providers\n\n\n\ncluster_TsDatepickerModule_imports\n\n\n\ncluster_TsDatepickerModule_exports\n\n\n\n\nTsDatepickerComponent\n\nTsDatepickerComponent\n\n\n\nTsDatepickerModule\n\nTsDatepickerModule\n\nTsDatepickerModule -->\n\nTsDatepickerComponent->TsDatepickerModule\n\n\n\n\n\nTsDatepickerComponent \n\nTsDatepickerComponent \n\nTsDatepickerComponent  -->\n\nTsDatepickerModule->TsDatepickerComponent \n\n\n\n\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR\n\nTsDatepickerComponent -->\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR->TsDatepickerComponent\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsDatepickerModule -->\n\nTsValidationMessagesModule->TsDatepickerModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/datepicker/datepicker.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsDatepickerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsDatepickerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatNativeDateModule } from '@angular/material/core';\n\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsDatepickerComponent } from './datepicker.component';\n\nexport * from './datepicker.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatInputModule,\n    TsValidationMessagesModule,\n  ],\n  exports: [\n    TsDatepickerComponent,\n  ],\n  declarations: [\n    TsDatepickerComponent,\n  ],\n})\nexport class TsDatepickerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsDropProtectionService.html":{"url":"injectables/TsDropProtectionService.html","title":"injectable - TsDropProtectionService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsDropProtectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/drop-protection.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hasProtection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                prevent\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(windowService: TsWindowService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/file-upload/drop-protection.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        windowService\n                                                  \n                                                        \n                                                                    TsWindowService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/drop-protection.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Add drop protection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prevent\n                            \n                            \n                        \n                    \n                \n                \n                    \nprevent(e: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/drop-protection.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Prevent default\nNOTE: In order to remove an event listener we need a reference to a method that does not change.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/drop-protection.service.ts:30\n                            \n                        \n\n\n                \n                    \n                            Remove drop protection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hasProtection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasProtection:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/drop-protection.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TsWindowService } from '@terminus/ngx-tools';\n\n\n@Injectable()\nexport class TsDropProtectionService {\n  private hasProtection = false;\n\n\n  constructor(\n    private windowService: TsWindowService,\n  ) { }\n\n\n  /**\n   * Add drop protection\n   */\n  add(): void {\n    if (!this.hasProtection) {\n      this.windowService.nativeWindow.addEventListener('dragover', this.prevent, false);\n      this.windowService.nativeWindow.addEventListener('drop', this.prevent, false);\n      this.hasProtection = true;\n    }\n  }\n\n\n  /**\n   * Remove drop protection\n   */\n  remove(): void {\n    if (this.hasProtection) {\n      this.windowService.nativeWindow.removeEventListener('dragover', this.prevent, false);\n      this.windowService.nativeWindow.removeEventListener('drop', this.prevent, false);\n      this.hasProtection = false;\n    }\n  }\n\n\n  /**\n   * Prevent default\n   *\n   * NOTE: In order to remove an event listener we need a reference to a method that does not change.\n   *\n   * @param event - The event\n   */\n  prevent(e: Event): void {\n    e.preventDefault();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsFileImageDimensionContraint.html":{"url":"interfaces/TsFileImageDimensionContraint.html","title":"interface - TsFileImageDimensionContraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsFileImageDimensionContraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/image-dimension-constraints.ts\n        \n\n            \n                Description\n            \n            \n                An indiviual size constraint\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        height\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TsFileImageDimensionContraint {\n  height: {\n    min: number;\n    max: number;\n  };\n  width: {\n    min: number;\n    max: number;\n  };\n}\n\n/**\n * An array of file size constraints\n */\nexport type TsFileImageDimensionConstraints = TsFileImageDimensionContraint[];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsFileUploadModule.html":{"url":"modules/TsFileUploadModule.html","title":"module - TsFileUploadModule","body":"\n                   \n\n\n\n\n  Modules\n  TsFileUploadModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsFileUploadModule\n\n\n\ncluster_TsFileUploadModule_declarations\n\n\n\ncluster_TsFileUploadModule_imports\n\n\n\ncluster_TsFileUploadModule_exports\n\n\n\ncluster_TsFileUploadModule_providers\n\n\n\n\nTsFileUploadComponent\n\nTsFileUploadComponent\n\n\n\nTsFileUploadModule\n\nTsFileUploadModule\n\nTsFileUploadModule -->\n\nTsFileUploadComponent->TsFileUploadModule\n\n\n\n\n\nTsFileUploadComponent \n\nTsFileUploadComponent \n\nTsFileUploadComponent  -->\n\nTsFileUploadModule->TsFileUploadComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsFileUploadModule -->\n\nTsButtonModule->TsFileUploadModule\n\n\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTsFileUploadModule -->\n\nTsIconButtonModule->TsFileUploadModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsFileUploadModule -->\n\nTsIconModule->TsFileUploadModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsFileUploadModule -->\n\nTsTooltipModule->TsFileUploadModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsFileUploadModule -->\n\nTsValidationMessagesModule->TsFileUploadModule\n\n\n\n\n\nTsDropProtectionService\n\nTsDropProtectionService\n\nTsFileUploadModule -->\n\nTsDropProtectionService->TsFileUploadModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/file-upload/file-upload.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsFileUploadComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsDropProtectionService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsIconButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsFileUploadComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { TsDocumentService } from '@terminus/ngx-tools';\n\nimport { TsButtonModule } from './../button/button.module';\nimport { TsFileUploadComponent } from './file-upload.component';\nimport { TsIconButtonModule } from './../icon-button/icon-button.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsTooltipModule } from './../tooltip/tooltip.module';\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsDropProtectionService } from './drop-protection.service';\n\nexport * from './file-upload.component';\nexport * from './image-dimension-constraints';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    FormsModule,\n    MatProgressBarModule,\n    TsButtonModule,\n    TsIconButtonModule,\n    TsIconModule,\n    TsTooltipModule,\n    TsValidationMessagesModule,\n  ],\n  declarations: [\n    TsFileUploadComponent,\n  ],\n  providers: [\n    TsDropProtectionService,\n    TsDocumentService,\n  ],\n  exports: [\n    TsFileUploadComponent,\n  ],\n})\nexport class TsFileUploadModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsFileValidations.html":{"url":"interfaces/TsFileValidations.html","title":"interface - TsFileValidations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsFileValidations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/selected-file.ts\n        \n\n            \n                Description\n            \n            \n                The structure of the object to track file validations internally\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fileSize\n                                \n                                \n                                        fileType\n                                \n                                \n                                        imageDimensions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileSize\n                                    \n                                \n                                \n                                    \n                                        fileSize:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileType\n                                    \n                                \n                                \n                                    \n                                        fileType:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageDimensions\n                                    \n                                \n                                \n                                    \n                                        imageDimensions:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BehaviorSubject } from 'rxjs';\n\nimport { TsFileImageDimensionConstraints } from './image-dimension-constraints';\nimport { TsImageDimensions } from './image-dimensions';\nimport { TsFileAcceptedMimeTypes } from './mime-types';\n\n\n/**\n * The structure of the object to track file validations internally\n */\nexport interface TsFileValidations {\n  fileType: boolean;\n  fileSize: boolean;\n  imageDimensions: boolean;\n}\n\n\n/**\n * The number of bytes per kilobyte (for calculations)\n */\nconst BYTES_PER_KB = 1024;\n\n\n/**\n * Manage a single selected file\n *\n * @param file - The selected file\n * @param imageDimensionConstraints - An array of image dimension constraints {@link TsFileImageDimensionConstraints}\n * @param typeConstraint - An array of allowed MIME types {@link TsFileAcceptedMimeTypes}\n * @param maxSize - The maximum size in kilobytes\n */\nexport class TsSelectedFile {\n  public name: string | undefined;\n  public mimeType: string;\n  public dimensions: TsImageDimensions | undefined;\n  public size: number;\n  public validations: TsFileValidations = {\n    fileType: false,\n    fileSize: false,\n    imageDimensions: false,\n  };\n  private fileReader: FileReader = new FileReader();\n\n  /**\n   * Only needed to appease TypeScript when defining `fileLoaded$`\n   */\n  private fileReference?: TsSelectedFile;\n\n  /**\n   * BehaviorSubject to alert consumers when all calculations are complete\n   */\n  public fileLoaded$: BehaviorSubject = new BehaviorSubject(this.fileReference);\n\n\n  constructor(\n    public file: File,\n    private imageDimensionConstraints: TsFileImageDimensionConstraints | undefined,\n    private typeConstraint: TsFileAcceptedMimeTypes[] | undefined,\n    private maxSize: number,\n  ) {\n    this.mimeType = this.file.type;\n    this.size = Math.ceil(this.file.size / BYTES_PER_KB);\n    this.name = this.file.name;\n\n    // Begin the validation chain by validating image dimensions\n    this.determineImageDimensions(() => {\n      // Validate mime-type\n      // istanbul ignore else\n      if (this.typeConstraint && this.typeConstraint.indexOf(this.file.type as TsFileAcceptedMimeTypes) >= 0) {\n        this.validations.fileType = true;\n      }\n\n      // Validate file size\n      // istanbul ignore else\n      if (this.size  {\n        // istanbul ignore else\n        if (img) {\n          img.src = this.fileReader.result;\n        }\n      };\n      img.onload = (v: Event) => {\n        // istanbul ignore else\n        if (img) {\n          this.dimensions = new TsImageDimensions(img.naturalWidth, img.naturalHeight);\n        }\n\n        // Validate dimensions\n        this.validations.imageDimensions = this.validateImageDimensions(this.imageDimensionConstraints);\n\n        // Call the callback if one exists\n        // istanbul ignore else\n        if (callback) {\n          callback();\n        }\n      };\n    } else {\n      // We are not dealing with an image:\n      // istanbul ignore else\n      if (callback) {\n        callback();\n      }\n\n      // Since this is not an image, set dimension validation to `true` to 'bypass'\n      this.validations.imageDimensions = true;\n    }\n\n    // Read the file (this triggers the FileReader load event)\n    this.fileReader.readAsDataURL(this.file);\n  }\n\n\n  /**\n   * Validate the image dimensions\n   *\n   * @param constraints - The constraints this the image dimensions must fit\n   * @return The validation result\n   */\n  private validateImageDimensions(constraints: TsFileImageDimensionConstraints | undefined): boolean {\n    if (!constraints || constraints.length = constraint.height.min && height = constraint.width.min && width \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsHeaderCellDefDirective.html":{"url":"directives/TsHeaderCellDefDirective.html","title":"directive - TsHeaderCellDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsHeaderCellDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Header cell definition for the TsTableComponent.\nCaptures the template of a column's header cell and as well as cell-specific properties.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsHeaderCellDef]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsHeaderCellDirective.html":{"url":"directives/TsHeaderCellDirective.html","title":"directive - TsHeaderCellDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsHeaderCellDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Header cell template container that adds the right classes and role.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ts-header-cell\n                    \n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(columnDef: CdkColumnDef, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/table/cell.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        columnDef\n                                                  \n                                                        \n                                                                    CdkColumnDef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsHeaderRowComponent.html":{"url":"components/TsHeaderRowComponent.html","title":"component - TsHeaderRowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsHeaderRowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/table/row.ts\n\n\n    \n        Description\n    \n    \n        Header template container that contains the cell outlet. Adds the right class and role.\n\n    \n\n    \n        Extends\n    \n    \n            CdkHeaderRow\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsHeaderRow\n            \n\n            \n                host\n                {}\n            \n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                ts-header-row\n            \n\n\n\n            \n                template\n                CDK_ROW_TEMPLATE\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Header row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[tsHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: TsHeaderRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why this type of input was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsHeaderRowDef'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n\n/**\n * Data row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[tsRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: TsRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why it was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsRowDefColumns', 'when: tsRowDefWhen'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsRowDefDirective extends CdkRowDef {}\n\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-header-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsHeaderRow',\n  preserveWhitespaces: false,\n})\nexport class TsHeaderRowComponent extends CdkHeaderRow {}\n\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRow',\n  preserveWhitespaces: false,\n})\nexport class TsRowComponent extends CdkRow {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'CDK_ROW_TEMPLATE'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsHeaderRowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsHeaderRowDefDirective.html":{"url":"directives/TsHeaderRowDefDirective.html","title":"directive - TsHeaderRowDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsHeaderRowDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/row.ts\n        \n\n            \n                Description\n            \n            \n                Header row definition for the TsTableComponent.\nCaptures the header row's template and other header properties such as the columns to display.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsHeaderRowDef]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Header row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[tsHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: TsHeaderRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why this type of input was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsHeaderRowDef'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n\n/**\n * Data row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[tsRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: TsRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why it was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsRowDefColumns', 'when: tsRowDefWhen'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsRowDefDirective extends CdkRowDef {}\n\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-header-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsHeaderRow',\n  preserveWhitespaces: false,\n})\nexport class TsHeaderRowComponent extends CdkHeaderRow {}\n\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRow',\n  preserveWhitespaces: false,\n})\nexport class TsRowComponent extends CdkRow {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsIconButtonComponent.html":{"url":"components/TsIconButtonComponent.html","title":"component - TsIconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsIconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/icon-button/icon-button.component.ts\n\n\n    \n        Description\n    \n    \n        This is the icon-button UI Component\nQA CSS CLASSES\n\nqa-icon-button: Placed on the primary container\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    delete_forever\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-icon-button\n            \n\n            \n                styleUrls\n                icon-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./icon-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionName\n                            \n                            \n                                buttonType\n                            \n                            \n                                isDisabled\n                            \n                            \n                                tabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/icon-button/icon-button.component.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionName\n                    \n                    \n                        Define the action for the aria-label. TsButtonActionTypes\n\n                            \n                            Type:    TsButtonActionTypes\n\n                            \n                        \n                            Default value: 'Button'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                    \n                        Define the button type. TsButtonFunctionTypes\n\n                            \n                            Type:    TsButtonFunctionTypes\n\n                            \n                        \n                            Default value: 'button'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the button is disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                    \n                        Define the tabindex for the button\n\n                            \n                            Type:    number\n\n                            \n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:67\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                    \n                        Pass the click event through to the parent\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:73\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hostElement\n                    \n                \n\n                \n                    \n                        gethostElement()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:79\n                                \n                            \n                    \n                        \n                                Getter to return the native elemetn\n\n\n                                \n                                    Returns :     ElementRef\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n    \n        \n\nTable of Contents\n\nBasic usage\nTheme (color)\nAccessibility\n\n\nBasic usage\nPass a valid Material icon name as the content of the button:\ndelete_foreverTheme (color)\nUse the theme parameter to change the color.\n\nforum\n\n\nforum\n\n\nforum\nBy default the icon will use color(pure, dark)\n\nAccessibility\nFor accessibility purposes we should set the actionName and buttonType.\n\nactionName can be one of the TsButtonActionTypes and will be used for the aria-label.\nbuttonType can be one of the TsButtonFunctionTypes and will be used for the type attribute.\n\nbookmark\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  EventEmitter,\n  ElementRef,\n} from '@angular/core';\n\nimport {\n  TsButtonActionTypes,\n  TsButtonFunctionTypes,\n} from './../button/button.module';\n\n\n/**\n * This is the icon-button UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-icon-button`: Placed on the primary container\n *\n * @example\n * delete_forever\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-icon-button',\n  templateUrl: './icon-button.component.html',\n  styleUrls: ['./icon-button.component.scss'],\n  host: {\n    class: 'ts-icon-button',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsIconButtonComponent {\n  /**\n   * Define the action for the aria-label. {@link TsButtonActionTypes}\n   */\n  @Input()\n  public actionName: TsButtonActionTypes = 'Button';\n\n  /**\n   * Define the button type. {@link TsButtonFunctionTypes}\n   */\n  @Input()\n  public buttonType: TsButtonFunctionTypes = 'button';\n\n  /**\n   * Define if the button is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define the tabindex for the button\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n  /**\n   * Pass the click event through to the parent\n   */\n  @Output()\n  public clickEvent: EventEmitter = new EventEmitter;\n\n\n  /**\n   * Getter to return the native elemetn\n   */\n  public get hostElement(): ElementRef {\n    return this.elementRef.nativeElement;\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n  ) {}\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsIconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsIconButtonModule.html":{"url":"modules/TsIconButtonModule.html","title":"module - TsIconButtonModule","body":"\n                   \n\n\n\n\n  Modules\n  TsIconButtonModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsIconButtonModule\n\n\n\ncluster_TsIconButtonModule_declarations\n\n\n\ncluster_TsIconButtonModule_imports\n\n\n\ncluster_TsIconButtonModule_exports\n\n\n\n\nTsIconButtonComponent\n\nTsIconButtonComponent\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTsIconButtonModule -->\n\nTsIconButtonComponent->TsIconButtonModule\n\n\n\n\n\nTsIconButtonComponent \n\nTsIconButtonComponent \n\nTsIconButtonComponent  -->\n\nTsIconButtonModule->TsIconButtonComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsIconButtonModule -->\n\nTsIconModule->TsIconButtonModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/icon-button/icon-button.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsIconButtonComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsIconButtonComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsIconButtonComponent } from './icon-button.component';\n\nexport * from './icon-button.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatRippleModule,\n    TsIconModule,\n  ],\n  declarations: [\n    TsIconButtonComponent,\n  ],\n  exports: [\n    TsIconButtonComponent,\n  ],\n})\nexport class TsIconButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsIconComponent.html":{"url":"components/TsIconComponent.html","title":"component - TsIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsIconComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/icon/icon.component.ts\n\n\n    \n        Description\n    \n    \n        This is the icon UI Component\nQA CSS CLASSES\n\nqa-icon: Placed on the primary container\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    home\nhelp\n\n\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-icon\n            \n\n            \n                styleUrls\n                icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _background\n                            \n                            \n                                    Private\n                                _svgIcon\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                            \n                                inline\n                            \n                            \n                                svgIcon\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/icon/icon.component.ts:105\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                    \n                        Define if the icon should have a colored background.\nNOTE: This will affect layout and style.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inline\n                    \n                    \n                        Define if the icon should be aligned inline with text\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:80\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgIcon\n                    \n                    \n                        Name of the custom icon\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the icon theme\n\n                            \n                            Type:    TsStyleThemeTypes | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:105\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _background\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _background:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _svgIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _svgIcon:     TS_CUSTOM_ICON | undefined\n\n                    \n                \n                    \n                        \n                            Type :     TS_CUSTOM_ICON | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:99\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n\n                \n                    \n                        getbackground()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon/icon.component.ts:71\n                                \n                            \n\n                \n                    \n                        setbackground(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon/icon.component.ts:68\n                                \n                            \n                    \n                        \n                                Define if the icon should have a colored background.\nNOTE: This will affect layout and style.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        svgIcon\n                    \n                \n\n                \n                    \n                        getsvgIcon()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon/icon.component.ts:96\n                                \n                            \n\n                \n                    \n                        setsvgIcon(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon/icon.component.ts:86\n                                \n                            \n                    \n                        \n                                Name of the custom icon\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Icons\n\n\n\n\nTable of Contents\n\nBasic usage\nTheming\nStyle with CSS\nUsage inline with text\nCustom Icons\nAvailable\n\n\n\n\nBasic usage\nInclude any valid Material icon name inside the component:\nhomeIf the icon name consists of multiple words, use underscores between the words:\nopen_in_new\nSee all valid icon possibilities: https://material.io/icons\n\nTheming\nIcons support the same themes as the rest of the components:\nSearch for TsStyleThemeTypes to see all allowed types.\nStyle with CSS\nTo style with CSS, simply target the fill inside the ts-icon class:\n.myClass {\n  .ts-icon {\n    fill: color(accent);\n  }\n}Usage inline with text\nTo size and space the icons correctly for use within a block of text:\nCustom Icons\nCustom icons are accessed via a ts-icon @Input:\n\nhome\n\n\nAvailable\n\n\n\nName\nDescription\n\n\n\n\ncsv\nA file with the text 'CSV'\n\n\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n  isDevMode,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { CSV_ICON } from './custom-icons/csv';\n\n\n/**\n * Currently supported custom icons\n */\nexport type TS_CUSTOM_ICON\n  = 'csv'\n;\n\n\n/**\n * An array of supported custom icons.\n */\nexport const TS_CUSTOM_ICONS: TS_CUSTOM_ICON[] = [\n  'csv',\n];\n\n\n/**\n * This is the icon UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-icon`: Placed on the primary container\n *\n * @example\n * home\n * help\n *\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n  host: {\n    class: 'ts-icon',\n    '[class.ts-icon--inline]': 'inline',\n    '[class.ts-icon--primary]': 'theme === \"primary\"',\n    '[class.ts-icon--accent]': 'theme === \"accent\"',\n    '[class.ts-icon--warn]': 'theme === \"warn\"',\n    '[class.ts-icon--background]': 'background',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsIconComponent {\n  /**\n   * Define if the icon should have a colored background.\n   *\n   * NOTE: This will affect layout and style.\n   */\n  @Input()\n  public set background(value: boolean) {\n    this._background = coerceBooleanProperty(value);\n  }\n  public get background(): boolean {\n    return this._background;\n  }\n  private _background: boolean = false;\n\n  /**\n   * Define if the icon should be aligned inline with text\n   */\n  @Input()\n  public inline: boolean = false;\n\n  /**\n   * Name of the custom icon\n   */\n  @Input()\n  public set svgIcon(value: TS_CUSTOM_ICON | undefined) {\n    // If an unsupported value is passed in\n    if (value && TS_CUSTOM_ICONS.indexOf(value) \n    \n\n    \n        \n  \n\n\n\n\n  \n\n\n\n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsIconModule.html":{"url":"modules/TsIconModule.html","title":"module - TsIconModule","body":"\n                   \n\n\n\n\n  Modules\n  TsIconModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsIconModule\n\n\n\ncluster_TsIconModule_declarations\n\n\n\ncluster_TsIconModule_exports\n\n\n\n\nTsIconComponent\n\nTsIconComponent\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsIconModule -->\n\nTsIconComponent->TsIconModule\n\n\n\n\n\nTsIconComponent \n\nTsIconComponent \n\nTsIconComponent  -->\n\nTsIconModule->TsIconComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/icon/icon.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsIconComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsIconComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TsIconComponent } from './icon.component';\n\nexport * from './icon.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TsIconComponent,\n  ],\n  exports: [\n    TsIconComponent,\n  ],\n})\nexport class TsIconModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsImageDimensions.html":{"url":"classes/TsImageDimensions.html","title":"class - TsImageDimensions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsImageDimensions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/image-dimensions.ts\n        \n\n            \n                Description\n            \n            \n                A class to store dimensions for an image\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                height\n                            \n                            \n                                    Public\n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(width: number, height: number)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/file-upload/image-dimensions.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        width\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        height\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/image-dimensions.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/image-dimensions.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TsImageDimensions {\n  constructor(\n    public width: number,\n    public height: number,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsInputModule.html":{"url":"modules/TsInputModule.html","title":"module - TsInputModule","body":"\n                   \n\n\n\n\n  Modules\n  TsInputModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsInputModule\n\n\n\ncluster_TsInputModule_declarations\n\n\n\ncluster_TsInputModule_TsInputComponent_providers\n\n\n\ncluster_TsInputModule_imports\n\n\n\ncluster_TsInputModule_exports\n\n\n\ncluster_TsInputModule_providers\n\n\n\n\nTsInputComponent\n\nTsInputComponent\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsInputModule -->\n\nTsInputComponent->TsInputModule\n\n\n\n\n\nTsInputComponent \n\nTsInputComponent \n\nTsInputComponent  -->\n\nTsInputModule->TsInputComponent \n\n\n\n\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n\nTsInputComponent -->\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR->TsInputComponent\n\n\n\n\n\nTsAutofocusModule\n\nTsAutofocusModule\n\nTsInputModule -->\n\nTsAutofocusModule->TsInputModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsInputModule -->\n\nTsIconModule->TsInputModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsInputModule -->\n\nTsValidationMessagesModule->TsInputModule\n\n\n\n\n\nTsValidatorsService\n\nTsValidatorsService\n\nTsInputModule -->\n\nTsValidatorsService->TsInputModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/input/input.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsInputComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsValidatorsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsAutofocusModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsInputComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material/input';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\n\nimport { TsAutofocusModule } from './../autofocus/autofocus.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsValidatorsService } from './../validators/validators.service';\nimport { TsInputComponent } from './input.component';\n\nexport * from './input.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    TsValidationMessagesModule,\n    TsIconModule,\n    TsAutofocusModule,\n  ],\n  providers: [\n    TsValidatorsService,\n  ],\n  exports: [\n    TsInputComponent,\n  ],\n  declarations: [\n    TsInputComponent,\n  ],\n})\nexport class TsInputModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsLinkComponent.html":{"url":"components/TsLinkComponent.html","title":"component - TsLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsLinkComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/link/link.component.ts\n\n\n    \n        Description\n    \n    \n        This is the link UI Component\nQA CSS CLASSES\n\nqa-link: Placed on the link element\nqa-link-internal: Placed on the link element if the link is internal\nqa-link-external: Placed on the link element if the link is external\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    My link\n\nMy link\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsLink\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-link\n            \n\n            \n                styleUrls\n                link.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./link.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                externalIcon\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                destination\n                            \n                            \n                                isExternal\n                            \n                            \n                                tabIndex\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        destination\n                    \n                    \n                        Define the link's destination\n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/link/link.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isExternal\n                    \n                    \n                        Define if the link is to an external page\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/link/link.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                    \n                        Define the tabindex\n\n                            \n                            Type:    number\n\n                            \n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/link/link.component.ts:65\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            externalIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        externalIcon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : `open_in_new`\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/link/link.component.ts:47\n                            \n                        \n\n                \n                    \n                        Define the icon for external links\n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Link\n\n\n\n\nTable of Contents\n\nBasic usage\nExternal links\nTab index\n\n\nBasic usage\nWrap your link text and define a destination:\nMy linkExternal links\nTo signify a link will leave the current app or site, set external to true:\nMy link\nNOTE: When external is set to true, the link should be a standard link in string form.\n\nTab index\nA custom tabindex can also be set:\nMy link\n    \n\n    \n        import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\n\n\n/**\n * This is the link UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-link`: Placed on the link element\n * - `qa-link-internal`: Placed on the link element if the link is internal\n * - `qa-link-external`: Placed on the link element if the link is external\n *\n * @example\n * My link\n *\n * My link\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-link',\n  templateUrl: './link.component.html',\n  styleUrls: ['./link.component.scss'],\n  host: {\n    class: 'ts-link',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsLink',\n})\nexport class TsLinkComponent {\n  /**\n   * Define the icon for external links\n   */\n  public externalIcon: string = `open_in_new`;\n\n  /**\n   * Define the link's destination\n   */\n  @Input()\n  public destination: any;\n\n  /**\n   * Define if the link is to an external page\n   */\n  @Input()\n  public isExternal: boolean = false;\n\n  /**\n   * Define the tabindex\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n\n  \n    open_in_new\n  \n\n\n\n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          open_in_new    '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsLinkModule.html":{"url":"modules/TsLinkModule.html","title":"module - TsLinkModule","body":"\n                   \n\n\n\n\n  Modules\n  TsLinkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsLinkModule\n\n\n\ncluster_TsLinkModule_declarations\n\n\n\ncluster_TsLinkModule_imports\n\n\n\ncluster_TsLinkModule_exports\n\n\n\n\nTsLinkComponent\n\nTsLinkComponent\n\n\n\nTsLinkModule\n\nTsLinkModule\n\nTsLinkModule -->\n\nTsLinkComponent->TsLinkModule\n\n\n\n\n\nTsLinkComponent \n\nTsLinkComponent \n\nTsLinkComponent  -->\n\nTsLinkModule->TsLinkComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsLinkModule -->\n\nTsIconModule->TsLinkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/link/link.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsLinkComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsLinkComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsLinkComponent } from './link.component';\n\nexport * from './link.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    TsIconModule,\n  ],\n  exports: [\n    TsLinkComponent,\n  ],\n  declarations: [\n    TsLinkComponent,\n  ],\n})\nexport class TsLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsLoadingOverlayComponent.html":{"url":"components/TsLoadingOverlayComponent.html","title":"component - TsLoadingOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsLoadingOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/loading-overlay/loading-overlay.component.ts\n\n\n    \n        Description\n    \n    \n        The loading overlay component. Implemented by TsLoadingOverlayDirective\nQA CSS CLASSES\n\nqa-loading-overlay: Placed on the div overlay containing the loading spinner\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    See {\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-loading-overlay\n            \n\n            \n                styleUrls\n                loading-overlay.component.scss\n            \n\n\n            \n                template\n                \n  \n    \n  \n\n\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\n\n\n/**\n * The loading overlay component. Implemented by {@link TsLoadingOverlayDirective}\n *\n * #### QA CSS CLASSES\n * - `qa-loading-overlay`: Placed on the div overlay containing the loading spinner\n *\n * @example\n * See {@link TsLoadingOverlayDirective}\n */\n@Component({\n  selector: 'ts-loading-overlay',\n  styleUrls: ['./loading-overlay.component.scss'],\n  host: {\n    class: 'ts-loading-overlay',\n  },\n  template: `\n    \n      \n        \n      \n    \n  `,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsLoadingOverlayComponent {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsLoadingOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsLoadingOverlayDirective.html":{"url":"directives/TsLoadingOverlayDirective.html","title":"directive - TsLoadingOverlayDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsLoadingOverlayDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/loading-overlay/loading-overlay.directive.ts\n        \n\n            \n                Description\n            \n            \n                The tsLoadingOverlay UI Directive.\nProvides a spinner overlay to demonstrate loading for async data.\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n            \n                Example\n            \n            \n                        \n                            \n\nhttps://goo.gl/ieUPaG\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsLoadingOverlay]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bodyPortalHost\n                            \n                            \n                                    Private\n                                loadingOverlayPortal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                determinePosition\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsLoadingOverlay\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.position\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, windowService: TsWindowService, componentFactoryResolver: ComponentFactoryResolver, appRef: ApplicationRef, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:59\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        windowService\n                                                  \n                                                        \n                                                                    TsWindowService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        appRef\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tsLoadingOverlay\n                    \n                    \n                        Define a setter to show/hide the loading overlay\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:46\n                            \n                        \n            \n        \n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            style.position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        style.position:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:59\n                            \n                        \n\n                \n                    \n                        Alias the position back onto the component as a style attribute\n\n                    \n                \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            determinePosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        determinePosition(position: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:114\n                            \n                        \n\n\n                \n                    \n                            Return the correct position\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        position\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The current position value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The correct position value\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:101\n                            \n                        \n\n\n                \n                    \n                            Destroy the portal host if it exists\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:88\n                            \n                        \n\n\n                \n                    \n                            Determine and set the needed position\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bodyPortalHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bodyPortalHost:     DomPortalHost\n\n                    \n                \n                    \n                        \n                            Type :     DomPortalHost\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:40\n                            \n                        \n\n                \n                    \n                        Reference to our portal host\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingOverlayPortal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingOverlayPortal:     ComponentPortal\n\n                    \n                \n                    \n                        \n                            Type :     ComponentPortal\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:35\n                            \n                        \n\n                \n                    \n                        A reference to the portal\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tsLoadingOverlay\n                    \n                \n\n\n                \n                    \n                        settsLoadingOverlay(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:46\n                                \n                            \n                    \n                        \n                                Define a setter to show/hide the loading overlay\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnDestroy,\n  HostBinding,\n  ComponentFactoryResolver,\n  ApplicationRef,\n  Injector,\n} from '@angular/core';\nimport { ComponentPortal, DomPortalHost } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { TsWindowService } from '@terminus/ngx-tools';\n\nimport { TsLoadingOverlayComponent } from './loading-overlay.component';\n\n\n/**\n * The tsLoadingOverlay UI Directive.\n * Provides a spinner overlay to demonstrate loading for async data.\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Directive({\n  selector: '[tsLoadingOverlay]',\n})\nexport class TsLoadingOverlayDirective implements OnInit, OnDestroy {\n  /**\n   * A reference to the portal\n   */\n  private loadingOverlayPortal: ComponentPortal;\n\n  /**\n   * Reference to our portal host\n   */\n  private bodyPortalHost: DomPortalHost;\n\n  /**\n   * Define a setter to show/hide the loading overlay\n   */\n  @Input()\n  public set tsLoadingOverlay(value: boolean) {\n    const shouldSet = coerceBooleanProperty(value);\n    if (shouldSet) {\n      this.bodyPortalHost.attach(this.loadingOverlayPortal);\n    } else {\n      this.bodyPortalHost.detach();\n    }\n  }\n\n  /**\n   * Alias the position back onto the component as a style attribute\n   */\n  @HostBinding('style.position')\n  public position!: string;\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private elementRef: ElementRef,\n    private windowService: TsWindowService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector,\n  ) {\n    // Create the body portal host\n    this.bodyPortalHost = new DomPortalHost(\n      this.elementRef.nativeElement,\n      this.componentFactoryResolver,\n      this.appRef,\n      this.injector,\n    );\n\n    // Create the component portal\n    this.loadingOverlayPortal = new ComponentPortal(TsLoadingOverlayComponent);\n  }\n\n\n  /**\n   * Determine and set the needed position\n   */\n  public ngOnInit(): void {\n    // Determine the CSS position of the element\n    const position = this.windowService.nativeWindow\n      .getComputedStyle(this.elementRef.nativeElement).getPropertyValue('position');\n\n    // Set the position\n    this.position = this.determinePosition(position);\n  }\n\n\n  /**\n   * Destroy the portal host if it exists\n   */\n  public ngOnDestroy(): void {\n    if (this.bodyPortalHost) {\n      this.bodyPortalHost.dispose();\n    }\n  }\n\n\n  /**\n   * Return the correct position\n   *\n   * @param position The current position value\n   * @return The correct position value\n   */\n  private determinePosition(position: string): string {\n    return (position === 'relative' || position === 'absolute') ? position : 'relative';\n  }\n\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsLoadingOverlayModule.html":{"url":"modules/TsLoadingOverlayModule.html","title":"module - TsLoadingOverlayModule","body":"\n                   \n\n\n\n\n  Modules\n  TsLoadingOverlayModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsLoadingOverlayModule\n\n\n\ncluster_TsLoadingOverlayModule_declarations\n\n\n\ncluster_TsLoadingOverlayModule_exports\n\n\n\n\nTsLoadingOverlayComponent\n\nTsLoadingOverlayComponent\n\n\n\nTsLoadingOverlayModule\n\nTsLoadingOverlayModule\n\nTsLoadingOverlayModule -->\n\nTsLoadingOverlayComponent->TsLoadingOverlayModule\n\n\n\n\n\nTsLoadingOverlayDirective\n\nTsLoadingOverlayDirective\n\nTsLoadingOverlayModule -->\n\nTsLoadingOverlayDirective->TsLoadingOverlayModule\n\n\n\n\n\nTsLoadingOverlayDirective \n\nTsLoadingOverlayDirective \n\nTsLoadingOverlayDirective  -->\n\nTsLoadingOverlayModule->TsLoadingOverlayDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/loading-overlay/loading-overlay.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsLoadingOverlayComponent\n                            \n                            \n                                TsLoadingOverlayDirective\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TsLoadingOverlayComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsLoadingOverlayDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsLoadingOverlayComponent } from './loading-overlay.component';\nimport { TsLoadingOverlayDirective } from './loading-overlay.directive';\n\nexport * from './loading-overlay.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TsLoadingOverlayDirective,\n    TsLoadingOverlayComponent,\n  ],\n  entryComponents: [\n    TsLoadingOverlayComponent,\n  ],\n  exports: [\n    TsLoadingOverlayDirective,\n  ],\n})\nexport class TsLoadingOverlayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsLoginFormComponent.html":{"url":"components/TsLoginFormComponent.html","title":"component - TsLoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsLoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        This is the login-form UI Component\nQA CSS CLASSES\n\nqa-login-form: Placed on the form element which contains this component\nqa-login-form-email: Placed on the TsInputComponent used for the \"email\" field\nqa-login-form-password: Placed on the TsInputComponent used for the \"password\" field\nqa-login-form-remember-me: Placed on the TsCheckboxComponent used for the \"remember\nme\" checkbox\nqa-login-form-forgot-password: Placed on the TsLinkComponent used for the \"forgot\npassword\" link\nqa-login-form-submit: Placed on the TsButtonComponent used for the submit button\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-login-form\n            \n\n            \n                styleUrls\n                login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkbox\n                            \n                            \n                                    Private\n                                FORM_GROUP\n                            \n                            \n                                inputComponents\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                PASSWORD_MINLENGTH\n                            \n                            \n                                    Public\n                                showForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Private\n                                resetForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                forgotPasswordLink\n                            \n                            \n                                forgotPasswordText\n                            \n                            \n                                inProgress\n                            \n                            \n                                isRedirecting\n                            \n                            \n                                loginCTA\n                            \n                            \n                                triggerFormReset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, validatorsService: TsValidatorsService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/login-form/login-form.component.ts:169\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        validatorsService\n                                                  \n                                                        \n                                                                    TsValidatorsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        forgotPasswordLink\n                    \n                    \n                        Define the link to the 'forgot password' view\n\n                            \n                            Type:    string[]\n\n                            \n                        \n                            Default value: ['/forgot']\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:133\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        forgotPasswordText\n                    \n                    \n                        Define the text for the 'forgot password' link\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Forgot your password?'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:139\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inProgress\n                    \n                    \n                        Define if the form button is showing progress\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:145\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRedirecting\n                    \n                    \n                        Define if the user has successfully logged in and is being redirected\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:151\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loginCTA\n                    \n                    \n                        Define the login call to action\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Log In'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:157\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        triggerFormReset\n                    \n                    \n                        Allow a consumer to reset the form via an input\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:163\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        submit\n                    \n                    \n                        Emit an event on form submission\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:169\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:187\n                            \n                        \n\n\n                \n                    \n                            Trigger a form reset if triggerFormReset is changed to TRUE\n(explanation at resetForm method)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe inputs that have changed\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resetForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:204\n                            \n                        \n\n\n                \n                    \n                            Reset the form\nThis is a hack. Currently there doesn't seem to be a good way to reset the form value and\nvalidations without simply re-initializing the form each time.\nHACK: The showForm value is a 'hack' to reset the input validation styles by removing the\nform from the dom and re-adding it. This method won't break if the Material team changes any\nvalidation classes but it may be more performant to simply remove the classes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkbox:     TsCheckboxComponent\n\n                    \n                \n                    \n                        \n                            Type :     TsCheckboxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:127\n                            \n                        \n\n                \n                    \n                        Provide access to the checkbox inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            FORM_GROUP\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FORM_GROUP:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    email: [\n      null,\n      [\n        Validators.required,\n        this.validatorsService.email(),\n      ],\n    ],\n    password: [\n      null,\n      [\n        Validators.required,\n      ],\n    ],\n    rememberMe: [\n      false,\n    ],\n  }\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:83\n                            \n                        \n\n                \n                    \n                        Define the form group for re-use\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputComponents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputComponents:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:121\n                            \n                        \n\n                \n                    \n                        Provide access to the text inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup | null\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup | null\n\n                        \n                    \n                    \n                        \n                            Default value : this.formBuilder.group(this.FORM_GROUP)\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:110\n                            \n                        \n\n                \n                    \n                        Initialize the login form\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            PASSWORD_MINLENGTH\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PASSWORD_MINLENGTH:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 8\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:105\n                            \n                        \n\n                \n                    \n                        Define the minimum length for a password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showForm:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:115\n                            \n                        \n\n                \n                    \n                        Define a flag to add/remove the form from the DOM\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\n\nimport { TsInputComponent } from './../input/input.component';\nimport { TsCheckboxComponent } from './../checkbox/checkbox.component';\nimport { TsValidatorsService } from './../validators/validators.service';\n\n\n/**\n * Define the structure of the login form response\n */\nexport interface TsLoginFormResponse {\n  /**\n   * User's email\n   */\n  email: string;\n\n  /**\n   * User's password\n   */\n  password: string;\n\n  /**\n   * Flag determining if a cookie should be set\n   */\n  rememberMe: boolean;\n}\n\n\n/**\n * This is the login-form UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-login-form`: Placed on the form element which contains this component\n * - `qa-login-form-email`: Placed on the {@link TsInputComponent} used for the \"email\" field\n * - `qa-login-form-password`: Placed on the {@link TsInputComponent} used for the \"password\" field\n * - `qa-login-form-remember-me`: Placed on the {@link TsCheckboxComponent} used for the \"remember\n * me\" checkbox\n * - `qa-login-form-forgot-password`: Placed on the {@link TsLinkComponent} used for the \"forgot\n * password\" link\n * - `qa-login-form-submit`: Placed on the {@link TsButtonComponent} used for the submit button\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n  host: {\n    class: 'ts-login-form',\n  },\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsLoginFormComponent implements OnChanges {\n  /**\n   * Define the form group for re-use\n   */\n  private FORM_GROUP = {\n    email: [\n      null,\n      [\n        Validators.required,\n        this.validatorsService.email(),\n      ],\n    ],\n    password: [\n      null,\n      [\n        Validators.required,\n      ],\n    ],\n    rememberMe: [\n      false,\n    ],\n  };\n\n  /**\n   * Define the minimum length for a password\n   */\n  public PASSWORD_MINLENGTH: number = 8;\n\n  /**\n   * Initialize the login form\n   */\n  public loginForm: FormGroup | null = this.formBuilder.group(this.FORM_GROUP);\n\n  /**\n   * Define a flag to add/remove the form from the DOM\n   */\n  public showForm: boolean = true;\n\n  /**\n   * Provide access to the text inputs\n   */\n  @ViewChildren(TsInputComponent)\n  inputComponents!: QueryList;\n\n  /**\n   * Provide access to the checkbox inputs\n   */\n  @ViewChild(TsCheckboxComponent)\n  checkbox!: TsCheckboxComponent;\n\n  /**\n   * Define the link to the 'forgot password' view\n   */\n  @Input()\n  public forgotPasswordLink: string[] = ['/forgot'];\n\n  /**\n   * Define the text for the 'forgot password' link\n   */\n  @Input()\n  public forgotPasswordText: string = 'Forgot your password?';\n\n  /**\n   * Define if the form button is showing progress\n   */\n  @Input()\n  public inProgress: boolean = false;\n\n  /**\n   * Define if the user has successfully logged in and is being redirected\n   */\n  @Input()\n  public isRedirecting: boolean = false;\n\n  /**\n   * Define the login call to action\n   */\n  @Input()\n  public loginCTA: string = 'Log In';\n\n  /**\n   * Allow a consumer to reset the form via an input\n   */\n  @Input()\n  public triggerFormReset: boolean = false;\n\n  /**\n   * Emit an event on form submission\n   */\n  @Output()\n  public submit: EventEmitter = new EventEmitter;\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private validatorsService: TsValidatorsService,\n  ) {}\n\n\n  /**\n   * Trigger a form reset if `triggerFormReset` is changed to TRUE\n   * (explanation at `resetForm` method)\n   *\n   * @param changes - The inputs that have changed\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('triggerFormReset')) {\n      this.resetForm();\n    }\n  }\n\n\n  /**\n   * Reset the form\n   *\n   * This is a hack. Currently there doesn't seem to be a good way to reset the form value and\n   * validations without simply re-initializing the form each time.\n   *\n   * HACK: The `showForm` value is a 'hack' to reset the input validation styles by removing the\n   * form from the dom and re-adding it. This method won't break if the Material team changes any\n   * validation classes but it may be more performant to simply remove the classes.\n   */\n  private resetForm(): void {\n    // Destroy the form\n    this.showForm = false;\n\n    // Clear out the form\n    this.loginForm = null;\n\n    // Re-initialize the form\n    this.loginForm = this.formBuilder.group(this.FORM_GROUP);\n\n    // This timeout lets one change detection cycle pass so that the form is actually removed from\n    // the DOM\n    setTimeout(() => {\n      // Add the form back to the DOM\n      this.showForm = true;\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n  \n\n  \n    Remember me\n  \n\n  {{ forgotPasswordText }}\n\n  \n    \n      {{ loginCTA }}\n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Remember me    {{ forgotPasswordText }}            {{ loginCTA }}      '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsLoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsLoginFormModule.html":{"url":"modules/TsLoginFormModule.html","title":"module - TsLoginFormModule","body":"\n                   \n\n\n\n\n  Modules\n  TsLoginFormModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsLoginFormModule\n\n\n\ncluster_TsLoginFormModule_declarations\n\n\n\ncluster_TsLoginFormModule_imports\n\n\n\ncluster_TsLoginFormModule_exports\n\n\n\ncluster_TsLoginFormModule_providers\n\n\n\n\nTsLoginFormComponent\n\nTsLoginFormComponent\n\n\n\nTsLoginFormModule\n\nTsLoginFormModule\n\nTsLoginFormModule -->\n\nTsLoginFormComponent->TsLoginFormModule\n\n\n\n\n\nTsLoginFormComponent \n\nTsLoginFormComponent \n\nTsLoginFormComponent  -->\n\nTsLoginFormModule->TsLoginFormComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsLoginFormModule -->\n\nTsButtonModule->TsLoginFormModule\n\n\n\n\n\nTsCheckboxModule\n\nTsCheckboxModule\n\nTsLoginFormModule -->\n\nTsCheckboxModule->TsLoginFormModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsLoginFormModule -->\n\nTsInputModule->TsLoginFormModule\n\n\n\n\n\nTsLinkModule\n\nTsLinkModule\n\nTsLoginFormModule -->\n\nTsLinkModule->TsLoginFormModule\n\n\n\n\n\nTsSpacingModule\n\nTsSpacingModule\n\nTsLoginFormModule -->\n\nTsSpacingModule->TsLoginFormModule\n\n\n\n\n\nTsValidatorsService\n\nTsValidatorsService\n\nTsLoginFormModule -->\n\nTsValidatorsService->TsLoginFormModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/login-form/login-form.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsLoginFormComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsValidatorsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsCheckboxModule\n                            \n                            \n                                    TsInputModule\n                            \n                            \n                                    TsLinkModule\n                            \n                            \n                                    TsSpacingModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsLoginFormComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TsValidatorsService } from './../validators/validators.service';\nimport { TsInputModule } from './../input/input.module';\nimport { TsCheckboxModule } from './../checkbox/checkbox.module';\nimport { TsButtonModule } from './../button/button.module';\nimport { TsSpacingModule } from './../spacing/spacing.module';\nimport { TsLinkModule } from './../link/link.module';\nimport { TsLoginFormComponent } from './login-form.component';\n\nexport * from './login-form.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    TsInputModule,\n    TsCheckboxModule,\n    TsSpacingModule,\n    TsButtonModule,\n    TsLinkModule,\n  ],\n  providers: [\n    TsValidatorsService,\n  ],\n  exports: [\n    TsLoginFormComponent,\n  ],\n  declarations: [\n    TsLoginFormComponent,\n  ],\n})\nexport class TsLoginFormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsLoginFormResponse.html":{"url":"interfaces/TsLoginFormResponse.html","title":"interface - TsLoginFormResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsLoginFormResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/login-form/login-form.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the structure of the login form response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                                \n                                        rememberMe\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rememberMe\n                                    \n                                \n                                \n                                    \n                                        rememberMe:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag determining if a cookie should be set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\n\nimport { TsInputComponent } from './../input/input.component';\nimport { TsCheckboxComponent } from './../checkbox/checkbox.component';\nimport { TsValidatorsService } from './../validators/validators.service';\n\n\n/**\n * Define the structure of the login form response\n */\nexport interface TsLoginFormResponse {\n  /**\n   * User's email\n   */\n  email: string;\n\n  /**\n   * User's password\n   */\n  password: string;\n\n  /**\n   * Flag determining if a cookie should be set\n   */\n  rememberMe: boolean;\n}\n\n\n/**\n * This is the login-form UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-login-form`: Placed on the form element which contains this component\n * - `qa-login-form-email`: Placed on the {@link TsInputComponent} used for the \"email\" field\n * - `qa-login-form-password`: Placed on the {@link TsInputComponent} used for the \"password\" field\n * - `qa-login-form-remember-me`: Placed on the {@link TsCheckboxComponent} used for the \"remember\n * me\" checkbox\n * - `qa-login-form-forgot-password`: Placed on the {@link TsLinkComponent} used for the \"forgot\n * password\" link\n * - `qa-login-form-submit`: Placed on the {@link TsButtonComponent} used for the submit button\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n  host: {\n    class: 'ts-login-form',\n  },\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsLoginFormComponent implements OnChanges {\n  /**\n   * Define the form group for re-use\n   */\n  private FORM_GROUP = {\n    email: [\n      null,\n      [\n        Validators.required,\n        this.validatorsService.email(),\n      ],\n    ],\n    password: [\n      null,\n      [\n        Validators.required,\n      ],\n    ],\n    rememberMe: [\n      false,\n    ],\n  };\n\n  /**\n   * Define the minimum length for a password\n   */\n  public PASSWORD_MINLENGTH: number = 8;\n\n  /**\n   * Initialize the login form\n   */\n  public loginForm: FormGroup | null = this.formBuilder.group(this.FORM_GROUP);\n\n  /**\n   * Define a flag to add/remove the form from the DOM\n   */\n  public showForm: boolean = true;\n\n  /**\n   * Provide access to the text inputs\n   */\n  @ViewChildren(TsInputComponent)\n  inputComponents!: QueryList;\n\n  /**\n   * Provide access to the checkbox inputs\n   */\n  @ViewChild(TsCheckboxComponent)\n  checkbox!: TsCheckboxComponent;\n\n  /**\n   * Define the link to the 'forgot password' view\n   */\n  @Input()\n  public forgotPasswordLink: string[] = ['/forgot'];\n\n  /**\n   * Define the text for the 'forgot password' link\n   */\n  @Input()\n  public forgotPasswordText: string = 'Forgot your password?';\n\n  /**\n   * Define if the form button is showing progress\n   */\n  @Input()\n  public inProgress: boolean = false;\n\n  /**\n   * Define if the user has successfully logged in and is being redirected\n   */\n  @Input()\n  public isRedirecting: boolean = false;\n\n  /**\n   * Define the login call to action\n   */\n  @Input()\n  public loginCTA: string = 'Log In';\n\n  /**\n   * Allow a consumer to reset the form via an input\n   */\n  @Input()\n  public triggerFormReset: boolean = false;\n\n  /**\n   * Emit an event on form submission\n   */\n  @Output()\n  public submit: EventEmitter = new EventEmitter;\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private validatorsService: TsValidatorsService,\n  ) {}\n\n\n  /**\n   * Trigger a form reset if `triggerFormReset` is changed to TRUE\n   * (explanation at `resetForm` method)\n   *\n   * @param changes - The inputs that have changed\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('triggerFormReset')) {\n      this.resetForm();\n    }\n  }\n\n\n  /**\n   * Reset the form\n   *\n   * This is a hack. Currently there doesn't seem to be a good way to reset the form value and\n   * validations without simply re-initializing the form each time.\n   *\n   * HACK: The `showForm` value is a 'hack' to reset the input validation styles by removing the\n   * form from the dom and re-adding it. This method won't break if the Material team changes any\n   * validation classes but it may be more performant to simply remove the classes.\n   */\n  private resetForm(): void {\n    // Destroy the form\n    this.showForm = false;\n\n    // Clear out the form\n    this.loginForm = null;\n\n    // Re-initialize the form\n    this.loginForm = this.formBuilder.group(this.FORM_GROUP);\n\n    // This timeout lets one change detection cycle pass so that the form is actually removed from\n    // the DOM\n    setTimeout(() => {\n      // Add the form back to the DOM\n      this.showForm = true;\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsMaskModule.html":{"url":"modules/TsMaskModule.html","title":"module - TsMaskModule","body":"\n                   \n\n\n\n\n  Modules\n  TsMaskModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsMaskModule\n\n\n\ncluster_TsMaskModule_declarations\n\n\n\ncluster_TsMaskModule_TsMaskDirective_providers\n\n\n\ncluster_TsMaskModule_exports\n\n\n\n\nTsMaskDirective\n\nTsMaskDirective\n\n\n\nTsMaskModule\n\nTsMaskModule\n\nTsMaskModule -->\n\nTsMaskDirective->TsMaskModule\n\n\n\n\n\nTsMaskDirective \n\nTsMaskDirective \n\nTsMaskDirective  -->\n\nTsMaskModule->TsMaskDirective \n\n\n\n\n\nMASKED_INPUT_VALUE_ACCESSOR\n\nMASKED_INPUT_VALUE_ACCESSOR\n\nTsMaskDirective -->\n\nMASKED_INPUT_VALUE_ACCESSOR->TsMaskDirective\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/mask/mask.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsMaskDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsMaskDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsMaskDirective } from './mask.directive';\n\nexport * from './mask.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TsMaskDirective,\n  ],\n  exports: [\n    TsMaskDirective,\n  ],\n})\nexport class TsMaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsMenuComponent.html":{"url":"components/TsMenuComponent.html","title":"component - TsMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsMenuComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/menu/menu.component.ts\n\n\n    \n        Description\n    \n    \n        A presentational component to render a dropdown menu.\nQA CSS CLASSES\n-qa-menu: Placed on the wrapper around the menu items\n-qa-menu-trigger: Placed on the menu trigger\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    Select Item\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-menu\n            \n\n            \n                styleUrls\n                menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                shouldOverlapTrigger\n                            \n                            \n                                    Public\n                                trigger\n                            \n                            \n                                    Private\n                                TRIGGER_ICON_DEFAULT\n                            \n                            \n                                    Private\n                                TRIGGER_ICON_UTILITY\n                            \n                            \n                                    Public\n                                triggerIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                defaultOpened\n                            \n                            \n                                isDisabled\n                            \n                            \n                                menuItemsTemplate\n                            \n                            \n                                menuPositionX\n                            \n                            \n                                menuPositionY\n                            \n                            \n                                theme\n                            \n                            \n                                triggerType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        defaultOpened\n                    \n                    \n                        Define if the menu should be opened by default\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:113\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the menu should be disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:119\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuItemsTemplate\n                    \n                    \n                        Allow a custom template for menu items\n\n                            \n                            Type:    TemplateRef\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:125\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuPositionX\n                    \n                    \n                        Define the X menu position\n\n                            \n                            Type:    TsMenuPositionTypesX\n\n                            \n                        \n                            Default value: 'after'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:131\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuPositionY\n                    \n                    \n                        Define the Y menu position\n\n                            \n                            Type:    TsMenuPositionTypesY\n\n                            \n                        \n                            Default value: 'below'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:137\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the menu theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:143\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        triggerType\n                    \n                    \n                        Define the type of trigger TsMenuTriggerTypes\n\n'utility' will expose a simple fab trigger: ⋮\n'default' will expose a standard TsButtonComponent\n\n\n                            \n                            Type:    TsMenuTriggerTypes\n\n                            \n                        \n                            Default value: 'default'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:152\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:167\n                            \n                        \n\n\n                \n                    \n                            After the view has initialized, open the menu if it is defaulted to 'open'\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:158\n                            \n                        \n\n\n                \n                    \n                            Set the triggerIcon based on the triggerType\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldOverlapTrigger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shouldOverlapTrigger:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:96\n                            \n                        \n\n                \n                    \n                        Define if the menu should overlap the trigger\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trigger:     MatMenuTrigger\n\n                    \n                \n                    \n                        \n                            Type :     MatMenuTrigger\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:107\n                            \n                        \n\n                \n                    \n                        Provide access to the trigger\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            TRIGGER_ICON_DEFAULT\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TRIGGER_ICON_DEFAULT:     \n\n                    \n                \n                    \n                        \n                            Default value : 'arrow_drop_down'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:79\n                            \n                        \n\n                \n                    \n                        Define the default icon for the trigger button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            TRIGGER_ICON_UTILITY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TRIGGER_ICON_UTILITY:     \n\n                    \n                \n                    \n                        \n                            Default value : 'more_vert'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:84\n                            \n                        \n\n                \n                    \n                        Define the utility icon for the trigger button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            triggerIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        triggerIcon:     \"arrow_drop_down\" | \"more_vert\"\n\n                    \n                \n                    \n                        \n                            Type :     \"arrow_drop_down\" | \"more_vert\"\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:101\n                            \n                        \n\n                \n                    \n                        The icon to be used in the trigger button\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isUtilityMenu\n                    \n                \n\n                \n                    \n                        getisUtilityMenu()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/menu/menu.component.ts:89\n                                \n                            \n                    \n                        \n                                Return if the current menu is a utility menu\n\n\n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n    \n        \n\nTable of Contents\n\nBasic Usage\nCheckbox Menu\n\n\nBasic Usage\n\n\n  Select Item\n\n\n\n\n  \n    Roger, Roger.\n  \n\n  \n    A tasty link\n  \nThis allows all selection functionality to be handled by the consuming application rather than being\nproxied through event emitters.\n\nNOTE:  and  will be styled the same within a menu.\n\nCheckbox Menu\n\nThis is very similar to the basic usage example, with a few small, key differences.\n\nCreate the form and array of possible options:\n// The list of column names to show in the UI\ncolumns = [\n  'Title',\n  'Account',\n  'Budget',\n  'Enabled',\n];\n// We are creating a form array with 4 controls all defaulted to 'true'\nmyForm = this.formBuilder.group({\n  showColumns: this.formBuilder.array([true, true, true, true]),\n});Create the menu trigger and the dropdown contents:\n\n\n  Select Item\n\n\n\n\n  \n    \n    \n      \n      \n        \n        {{ columns[i] }}\n      \n    \n  \n\nNOTE: In this example, the form is stand-alone so the entire form is nested inside the menu\ntemplate. If this were part of a larger form, the form element would be higher in the DOM\nhierarchy.\n\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  ViewChild,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ElementRef,\n  TemplateRef,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Define the allowed X positions for a menu\n */\nexport type TsMenuPositionTypesX =\n  'before'\n  | 'after'\n;\n\n\n/**\n * Define the allowed Y positions for a menu\n */\nexport type TsMenuPositionTypesY =\n  'above'\n  | 'below'\n;\n\n\n/**\n * Define the allowed trigger types for a menu\n */\nexport type TsMenuTriggerTypes\n  = 'default'\n  | 'utility'\n;\n\n\n/**\n * A presentational component to render a dropdown menu.\n *\n * #### QA CSS CLASSES\n * -`qa-menu`: Placed on the wrapper around the menu items\n * -`qa-menu-trigger`: Placed on the menu trigger\n *\n * @example\n * Select Item\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n  host: {\n    class: 'ts-menu',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsMenuComponent implements AfterViewInit, OnInit {\n  /**\n   * Define the default icon for the trigger button\n   */\n  private TRIGGER_ICON_DEFAULT: 'arrow_drop_down' = 'arrow_drop_down';\n\n  /**\n   * Define the utility icon for the trigger button\n   */\n  private TRIGGER_ICON_UTILITY: 'more_vert' = 'more_vert';\n\n  /**\n   * Return if the current menu is a utility menu\n   */\n  public get isUtilityMenu(): boolean {\n    return this.triggerType === 'utility';\n  }\n\n  /**\n   * Define if the menu should overlap the trigger\n   */\n  public shouldOverlapTrigger: boolean = false;\n\n  /**\n   * The icon to be used in the trigger button\n   */\n  public triggerIcon!: 'arrow_drop_down' | 'more_vert';\n\n  /**\n   * Provide access to the trigger\n   */\n  @ViewChild(MatMenuTrigger)\n  public trigger!: MatMenuTrigger;\n\n  /**\n   * Define if the menu should be opened by default\n   */\n  @Input()\n  public defaultOpened: boolean = false;\n\n  /**\n   * Define if the menu should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Allow a custom template for menu items\n   */\n  @Input()\n  public menuItemsTemplate!: TemplateRef;\n\n  /**\n   * Define the X menu position\n   */\n  @Input()\n  public menuPositionX: TsMenuPositionTypesX = 'after';\n\n  /**\n   * Define the Y menu position\n   */\n  @Input()\n  public menuPositionY: TsMenuPositionTypesY = 'below';\n\n  /**\n   * Define the menu theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define the type of trigger {@link TsMenuTriggerTypes}\n   *\n   * - 'utility' will expose a simple fab trigger: `⋮`\n   * - 'default' will expose a standard {@link TsButtonComponent}\n   */\n  @Input()\n  public triggerType: TsMenuTriggerTypes = 'default';\n\n\n  /**\n   * Set the triggerIcon based on the triggerType\n   */\n  ngOnInit(): void {\n    this.triggerIcon = (this.triggerType === 'default') ?\n      this.TRIGGER_ICON_DEFAULT : this.TRIGGER_ICON_UTILITY;\n  }\n\n\n  /**\n   * After the view has initialized, open the menu if it is defaulted to 'open'\n   */\n  public ngAfterViewInit(): void {\n    if (this.defaultOpened) {\n      this.trigger.openMenu();\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n\n    \n      {{ triggerIcon }}\n    \n  \n\n  \n    \n      {{ triggerIcon }}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ triggerIcon }}                  {{ triggerIcon }}      '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsMenuModule.html":{"url":"modules/TsMenuModule.html","title":"module - TsMenuModule","body":"\n                   \n\n\n\n\n  Modules\n  TsMenuModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsMenuModule\n\n\n\ncluster_TsMenuModule_declarations\n\n\n\ncluster_TsMenuModule_imports\n\n\n\ncluster_TsMenuModule_exports\n\n\n\n\nTsMenuComponent\n\nTsMenuComponent\n\n\n\nTsMenuModule\n\nTsMenuModule\n\nTsMenuModule -->\n\nTsMenuComponent->TsMenuModule\n\n\n\n\n\nTsMenuComponent \n\nTsMenuComponent \n\nTsMenuComponent  -->\n\nTsMenuModule->TsMenuComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsMenuModule -->\n\nTsButtonModule->TsMenuModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsMenuModule -->\n\nTsIconModule->TsMenuModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/menu/menu.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsMenuComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsMenuComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsButtonModule } from './../button/button.module';\nimport { TsMenuComponent } from './menu.component';\n\nexport * from './menu.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatMenuModule,\n    TsIconModule,\n    MatButtonModule,\n    TsButtonModule,\n  ],\n  exports: [\n    TsMenuComponent,\n  ],\n  declarations: [\n    TsMenuComponent,\n  ],\n})\nexport class TsMenuModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsNavigationActionItem.html":{"url":"interfaces/TsNavigationActionItem.html","title":"interface - TsNavigationActionItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsNavigationActionItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Action specific keys for an item passed to the TsNavigationComponent\n\n            \n\n            \n                Extends\n            \n            \n                    NavigationItemBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The action to emit upon interaction\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsNavigationComponent.html":{"url":"components/TsNavigationComponent.html","title":"component - TsNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/navigation/navigation.component.ts\n\n\n    \n        Description\n    \n    \n        This is the navigation UI Component\nQA CSS CLASSES\n\nqa-navigation: Placed on the nav element which contains this component\nqa-navigation-items: Placed on the div element which contains the navigation items\nqa-navigation-item: Placed on the button elements which represent each visible navigation\nitem\nqa-navigation-secondary-trigger: Placed on the button element which displays the drop down\ncontaining secondary links when clicked\nqa-navigation-secondary-items: Placed on the menu element which contains the secondary\nnavigation items\nqa-navigation-secondary-item: Placed on the button elements which represent each secondary\nnavigation item\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-navigation\n            \n\n            \n                styleUrls\n                navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                breakWidths\n                            \n                            \n                                    Public\n                                hiddenItems\n                            \n                            \n                                    Private\n                                pristineItems\n                            \n                            \n                                    Public\n                                visibleItems\n                            \n                            \n                                    Public\n                                visibleItemsList\n                            \n                            \n                                    Public\n                                visibleLinkElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateBreakWidths\n                            \n                            \n                                    Public\n                                isExternalLink\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                setUpInitialArrays\n                            \n                            \n                                    Private\n                                updateLists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                user\n                            \n                            \n                                welcomeMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/navigation/navigation.component.ts:249\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        Accept the array of navigation items and trigger setup\n\n                            \n                            Type:    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:201\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                    \n                        Accept the user data\n\n                            \n                            Type:    TsUser\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:217\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        welcomeMessage\n                    \n                    \n                        Define the welcome message\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Welcome'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:223\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                    \n                        Emit the click event with the TsNavigationPayload\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:241\n                            \n                        \n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:resize\n                            \n                            \n                        \n                    \n                \n                \n                    \nwindow:resize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:247\n                            \n                        \n\n\n                \n                    \n                            Trigger a layout update when the window resizes\n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            generateBreakWidths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateBreakWidths()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:281\n                            \n                        \n\n\n                \n                    \n                            Generate the array of breakWidths\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isExternalLink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isExternalLink(destination: string | string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:367\n                            \n                        \n\n\n                \n                    \n                            If the destination is a string and begins with http\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        destination\n                                                        \n                                                                    string | string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe destination to check\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Boolean determining if the link is external\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:271\n                            \n                        \n\n\n                \n                    \n                            Trigger initial layout update after the view initializes\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:263\n                            \n                        \n\n\n                \n                    \n                            Set up initial link groups\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setUpInitialArrays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setUpInitialArrays(items: TsNavigationItem[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:301\n                            \n                        \n\n\n                \n                    \n                            Clone the nav items and split into the initially visible/hidden lists\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    TsNavigationItem[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe complete list of navigation items\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateLists\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateLists()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:318\n                            \n                        \n\n\n                \n                    \n                            Move items between the two lists as required by the available space\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            breakWidths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        breakWidths:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:164\n                            \n                        \n\n                \n                    \n                        Define an array of widths at which to break the navigation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hiddenItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hiddenItems:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([] as TsNavigationItem[])\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:169\n                            \n                        \n\n                \n                    \n                        Define the list of hidden items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pristineItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pristineItems:     TsNavigationItem[]\n\n                    \n                \n                    \n                        \n                            Type :     TsNavigationItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:148\n                            \n                        \n\n                \n                    \n                        Store a pristine copy of the navigation items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visibleItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibleItems:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([] as TsNavigationItem[])\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:186\n                            \n                        \n\n                \n                    \n                        The collection of visible navigation items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visibleItemsList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibleItemsList:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:229\n                            \n                        \n\n                \n                    \n                        Element reference for visible list items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visibleLinkElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibleLinkElement:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:235\n                            \n                        \n\n                \n                    \n                        Query list of all elements from the visible items list\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        availableSpace\n                    \n                \n\n                \n                    \n                        getavailableSpace()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:155\n                                \n                            \n                    \n                        \n                                Getter to return the available navigation width\n\n\n                                \n                                \n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        usersFullName\n                    \n                \n\n                \n                    \n                        getusersFullName()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:176\n                                \n                            \n                    \n                        \n                                Getter to return the user's full name if it exists\n\n\n                                \n                                \n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        visibleItemsLength\n                    \n                \n\n                \n                    \n                        getvisibleItemsLength()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:193\n                                \n                            \n                    \n                        \n                                Getter to return the count of visible items\n\n\n                                \n                                \n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n\n\n                \n                    \n                        setitems(value: [])\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:201\n                                \n                            \n                    \n                        \n                                Accept the array of navigation items and trigger setup\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n      \n        \n          {{ item.name }}\n        \n      \n\n      \n        \n          {{ item.name }}\n        \n      \n\n      \n        \n          {{ item.name }}\n        \n      \n    \n\n  \n\n\n  \n    \n      {{ welcomeMessage }}\n      ,\n    \n    \n    {{ usersFullName }}\n\n    \n      keyboard_arrow_down\n    \n  \n\n\n\n\n  \n\n    \n      \n        {{ item.name }}\n      \n\n      \n        {{ item.name }}\n      \n    \n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ item.name }}                                      {{ item.name }}                                      {{ item.name }}                                {{ welcomeMessage }}      ,            {{ usersFullName }}          keyboard_arrow_down                          {{ item.name }}                    {{ item.name }}            '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsNavigationLinkItem.html":{"url":"interfaces/TsNavigationLinkItem.html","title":"interface - TsNavigationLinkItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsNavigationLinkItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Link specific keys for an item passed to the TsNavigationComponent\n\n            \n\n            \n                Extends\n            \n            \n                    NavigationItemBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destination\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The destination for items with a 'navigate' action. Single strings are used for external\nlocations while an array of strings are used for routerLinks\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsNavigationModule.html":{"url":"modules/TsNavigationModule.html","title":"module - TsNavigationModule","body":"\n                   \n\n\n\n\n  Modules\n  TsNavigationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsNavigationModule\n\n\n\ncluster_TsNavigationModule_declarations\n\n\n\ncluster_TsNavigationModule_imports\n\n\n\ncluster_TsNavigationModule_exports\n\n\n\n\nTsNavigationComponent\n\nTsNavigationComponent\n\n\n\nTsNavigationModule\n\nTsNavigationModule\n\nTsNavigationModule -->\n\nTsNavigationComponent->TsNavigationModule\n\n\n\n\n\nTsNavigationComponent \n\nTsNavigationComponent \n\nTsNavigationComponent  -->\n\nTsNavigationModule->TsNavigationComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsNavigationModule -->\n\nTsIconModule->TsNavigationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsNavigationComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsNavigationComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsNavigationComponent } from './navigation.component';\n\nexport * from './navigation.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatMenuModule,\n    RouterModule,\n    TsIconModule,\n  ],\n  declarations: [\n    TsNavigationComponent,\n  ],\n  exports: [\n    TsNavigationComponent,\n  ],\n})\nexport class TsNavigationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsNavigationPayload.html":{"url":"interfaces/TsNavigationPayload.html","title":"interface - TsNavigationPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsNavigationPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the expected response from the TsNavigationComponent emitter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The selected item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:     MouseEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MouseEvent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The mouse click event\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsPaginatorMenuItem.html":{"url":"interfaces/TsPaginatorMenuItem.html","title":"interface - TsPaginatorMenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsPaginatorMenuItem\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/paginator/paginator.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the allowed keys and types for an item passed to the TsMenuComponent within a\nTsPaginatorComponent\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The menu item name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A value for the item\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        Paginator\n\n\n\n\nTable of Contents\n\nBasic usage\nEvents\nCurrent page\nZero or One based pagination\nRecord count too high\nMax records\nRecord count message\n\n\nRecords per page\n\n\nBasic usage\nFor the most minimal implementation, just pass in the total record count:\nEvents\nThe paginator will emit the current page each time the page is changed or the records-per-page count\nis changed:\nmySelectFunc(v: TsPaginatorMenuItem) {\n  // v:\n  // {\n  //   name: \"1 - 10\",\n  //   value: 1,\n  // }\n}\n\nmyChangeFunc(v: number) {\n  // v: 50\n}Current page\nSet the current page:\nZero or One based pagination\nBy default the paginator starts the pages array with a value of '0'. If your API starts it's\npagination at 1 (such as Rails) you can set isZeroBased to false:\n\n\n\n\nRecord count too high\nThe paginator will display a message if too many records are found. This is to encourage better\nfiltering rather than more time paging through results.\nMax records\nBy default, anything over 100 is considered too many. To change this value, pass in a number to\nmaxPreferredRecords:\nRecord count message\nA custom message may be defined:\nA custom message template can also be defined. This allows dynamic links to documentation, help or a\nbetter set of filters.\n\n\n\n\n  {{ message }}\nRecords per page\nDefine the choices for how many records can be displayed on a single 'page':\nThis menu can be disabled completely if desired:\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  AfterViewInit,\n  TemplateRef,\n  ElementRef,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {\n  coerceNumberProperty,\n  coerceBooleanProperty,\n} from '@terminus/ngx-tools/coercion';\nimport { inputHasChanged } from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsMenuComponent} within a\n * {@link TsPaginatorComponent}\n */\nexport interface TsPaginatorMenuItem {\n  /**\n   * The menu item name\n   */\n  name: string;\n\n  /**\n   * A value for the item\n   */\n  value?: number;\n}\n\n\n/**\n * A paginator component\n *\n * #### QA CSS CLASSES\n * - `qa-paginator`: Placed on the primary container\n * - `qa-paginator-per-page-select`: Placed on the results per page select menu\n * - `qa-paginator-first-page-button`: Placed on the 'first page' button\n * - `qa-paginator-previous-page-button`: Placed on the 'previous page' button\n * - `qa-paginator-current-page-menu`: Placed on the 'current page' menu dropdown\n * - `qa-paginator-next-page-button`: Placed on the 'next page' button\n * - `qa-paginator-last-page-button`: Placed on the the 'last page' button\n * - `qa-paginator-message`: Placed on the messaging regarding the record count being too high\n *\n * @example\n * \n *\n * \n *   {{ message }}\n *   Learn more\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-paginator',\n  templateUrl: './paginator.component.html',\n  styleUrls: ['./paginator.component.scss'],\n  host: {\n    class: 'ts-paginator',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsPaginatorComponent implements OnChanges, AfterViewInit {\n  /**\n   * Define the default count of records per page\n   */\n  private DEFAULT_PER_PAGE: number = 10;\n\n  /**\n   * Default max records before message is shown\n   */\n  private DEFAULT_MAX_PREFERED_RECORDS: number = 100;\n\n  /**\n   * Define the default options for the records per page select menu\n   */\n  private DEFAULT_RECORDS_PER_PAGE_OPTIONS: number[] = [10, 20, 50];\n\n  /**\n   * Define the default message to show when too many records are returned\n   */\n  private DEFAULT_HIGH_RECORD_MESSAGE: string = 'That\\'s a lot of results! ' +\n    'Try refining your filters for better results.';\n\n  /**\n   * Define the icon for the 'first page' button\n   */\n  public firstPageIcon: string = 'first_page';\n\n  /**\n   * Define the icon for the 'previous page' button\n   */\n  public previousPageIcon: string = 'keyboard_arrow_left';\n\n  /**\n   * Define the icon for the 'next page' button\n   */\n  public nextPageIcon: string = 'keyboard_arrow_right';\n\n  /**\n   * Define the icon for the 'last page' button\n   */\n  public lastPageIcon: string = 'last_page';\n\n  /**\n   * Store the array of objects that represent pages of collections\n   */\n  public pagesArray!: TsPaginatorMenuItem[];\n\n  /**\n   * Store the label for the current page\n   */\n  public currentPageLabel!: string;\n\n  /**\n   * Define the amount of records show per page\n   */\n  public recordsPerPage: number = this.DEFAULT_PER_PAGE;\n\n  /**\n   * Define the template context for the record count message\n   */\n  public templateContext = {\n    $implicit: this.DEFAULT_HIGH_RECORD_MESSAGE,\n  };\n\n  /**\n   * Define if the paging is 0-based or 1-based\n   */\n  @Input()\n  public set isZeroBased(v: boolean) {\n    this._isZeroBased = coerceBooleanProperty(v);\n  }\n  public get isZeroBased(): boolean {\n    return this._isZeroBased;\n  }\n  private _isZeroBased: boolean = true;\n\n  /**\n   * Define the tooltip message for the first page tooltip\n   */\n  @Input()\n  public firstPageTooltip: string = 'View the first results';\n\n  /**\n   * Define the tooltip message for the previous page tooltip\n   */\n  @Input()\n  public previousPageTooltip: string = 'View the previous results';\n\n  /**\n   * Define the tooltip message for the next page tooltip\n   */\n  @Input()\n  public nextPageTooltip: string = 'View the next results';\n\n  /**\n   * Define the tooltip message for the last page tooltip\n   */\n  @Input()\n  public lastPageTooltip: string = 'View the last results';\n\n  /**\n   * Define the current page\n   */\n  @Input()\n  public set currentPageIndex(page: number) {\n    this._currentPageIndex = coerceNumberProperty(page);\n  }\n  public get currentPageIndex(): number {\n    return this._currentPageIndex;\n  }\n  private _currentPageIndex: number = 0;\n\n  /**\n   * Define how many pages exist to show a prompt about better filtering\n   */\n  @Input()\n  public maxPreferredRecords: number = this.DEFAULT_MAX_PREFERED_RECORDS;\n\n  /**\n   * Define the menu location (open up or open down)\n   */\n  @Input()\n  public menuLocation: 'above' | 'below' = 'above';\n\n  /**\n   * Allow a custom template to be used for the paginator message\n   */\n  @Input()\n  public paginatorMessageTemplate!: TemplateRef;\n\n  /**\n   * Define the color theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'accent';\n\n  /**\n   * Define the total number of records\n   */\n  @Input()\n  public set totalRecords(records: number) {\n    this._totalRecords = coerceNumberProperty(records);\n  }\n  public get totalRecords(): number {\n    return this._totalRecords;\n  }\n  private _totalRecords: number = 0;\n\n  /**\n   * Define the message to show when too many pages exist\n   */\n  @Input()\n  public recordCountTooHighMessage: string = this.DEFAULT_HIGH_RECORD_MESSAGE;\n\n  /**\n   * Define how many records are shown per page\n   */\n  @Input()\n  public recordsPerPageChoices: number[] = this.DEFAULT_RECORDS_PER_PAGE_OPTIONS;\n\n  /**\n   * Define the label for the records per page select\n   */\n  @Input()\n  public recordsSelectLabel: string = 'Per page';\n\n  /**\n   * Define if the records per page select menu should be visible\n   */\n  @Input()\n  public showRecordsPerPageSelector: boolean = true;\n\n  /**\n   * Emit a page selected event\n   */\n  @Output()\n  public pageSelect: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit a change event when the records per page changes\n   */\n  @Output()\n  public recordsPerPageChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Getter to return the index of the first page\n   */\n  public get firstPageIndex(): number {\n    return this.isZeroBased ? 0 : 1;\n  }\n\n  /**\n   * Getter to return the index of the next page\n   */\n  public get nextPageIndex(): number {\n    return this.currentPageIndex - this.firstPageIndex;\n  }\n\n  /**\n   * Getter to return the index of the last page\n   */\n  public get lastPageIndex(): number {\n    return this.isZeroBased ? (this.pagesArray.length - 1) : this.pagesArray.length ;\n  }\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Initialize on init\n   */\n  public ngAfterViewInit(): void {\n    this.initialize();\n  }\n\n\n  /**\n   * Initialize on any changes\n   *\n   * @param changes - The object containing all changes since last cycle\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    // If the record count changed, assign the new value to the template context\n    // istanbul ignore else\n    if (inputHasChanged(changes, 'recordCountTooHighMessage')) {\n      this.templateContext.$implicit = this.recordCountTooHighMessage;\n    }\n\n    // If the zeroBased input changes, update the current page index\n    if (inputHasChanged(changes, 'isZeroBased')) {\n      this.currentPageIndex = changes.isZeroBased.currentValue ? 0 : 1;\n    }\n\n    this.initialize();\n  }\n\n\n  /**\n   * Set up initial resources\n   */\n   private initialize(): void {\n     this.pagesArray =\n       this.createPagesArray(this.totalRecords, this.recordsPerPage, this.isZeroBased);\n     this.currentPageLabel =\n       this.createCurrentPageLabel(this.currentPageIndex, this.pagesArray, this.totalRecords);\n\n     // Change to the current page\n     // istanbul ignore else\n     if (this.totalRecords > 0) {\n       this.changePage(this.currentPageIndex, -1, this.pagesArray);\n     }\n   }\n\n\n  /**\n   * Perform tasks when the current page is changed\n   *\n   * @param page - The selected page\n   */\n  public currentPageChanged(page: TsPaginatorMenuItem): void {\n    // Set the current page\n    this.currentPageIndex = coerceNumberProperty(page.value);\n\n    // Create a new label for the menu\n    this.currentPageLabel =\n      this.createCurrentPageLabel(this.currentPageIndex, this.pagesArray, this.totalRecords);\n\n    // Emit an event\n    this.pageSelect.emit(page);\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Manually trigger a page change event from a number\n   *\n   * @param destinationPage - The selected page number\n   * @param currentPage - The current page number\n   * @param pages - The collection of pages\n   */\n  public changePage(\n    destinationPage: number,\n    currentPage: number,\n    pages: TsPaginatorMenuItem[],\n  ): void {\n    const destinationIsValid: boolean = destinationPage >= this.firstPageIndex && destinationPage  {\n        return page.value === destinationPage;\n      });\n\n      // istanbul ignore else\n      if (foundPage) {\n        this.currentPageChanged(foundPage);\n      }\n    }\n  }\n\n\n  /**\n   * Check if a page is the first page\n   *\n   * @param page - The number of the current page\n   * @return A boolean representing if this is the first page\n   */\n  public isFirstPage(page: number): boolean {\n    return coerceNumberProperty(page) === this.firstPageIndex;\n  }\n\n\n  /**\n   * Check if a page is the last page\n   *\n   * @param page - The number of the current page\n   * @return A boolean representing if this is the last page\n   */\n  public isLastPage(page: number): boolean {\n    if (this.pagesArray) {\n      return page === (this.pagesArray.length - (this.isZeroBased ? 1 : 0));\n    } else {\n      return false;\n    }\n  }\n\n\n  /**\n   * Determine if the string exists\n   *\n   * @param message - The help message when too many results are returned\n   * @param max - The max number of records before the message should be shown\n   * @param totalRecords - The number of records\n   * @return A boolean representing if the message should be shown\n   */\n  public shouldShowRecordsMessage(message: string, max: number, totalRecords: number): boolean {\n    if (totalRecords > max) {\n      return (message && message.length > 0) ? true : false;\n    } else {\n      return false;\n    }\n  }\n\n\n  /**\n   * Re-initialize the paginator when records per page changes\n   *\n   * @param selection - The selected records-per-page count\n   */\n  public recordsPerPageUpdated(selection: number): void {\n    this.recordsPerPage = selection;\n    this.currentPageIndex = this.firstPageIndex;\n    this.recordsPerPageChange.emit(selection);\n\n    this.initialize();\n  }\n\n\n  /**\n   * Determine if the page select menu should be disabled\n   *\n   * @param pagesCount - The number of pages\n   * @return A boolean representing if the menu should be disabled\n   */\n  public menuIsDisabled(pagesCount: number): boolean {\n    return coerceNumberProperty(pagesCount)  {\n      return pages.find((page: TsPaginatorMenuItem): boolean => {\n        return page.value === index;\n      });\n    };\n\n    let foundPage: TsPaginatorMenuItem | undefined = findPage(pages, currentPage);\n\n    // If no found page, try the previous page\n    if (!foundPage) {\n      foundPage = findPage(pages, currentPage - 1);\n\n      // istanbul ignore else\n      if (foundPage) {\n        // If we found the previous page,\n        // save the current page change back to the primary variable\n        this.currentPageIndex -= 1;\n      }\n    }\n\n    // This may be the case if there are no records\n    if (!foundPage || !foundPage.name) {\n      foundPage = {\n        name: '0',\n      };\n    }\n\n    // '1 - 10 of 243'\n    return `${foundPage.name} of ${totalRecords}`;\n  }\n\n\n  /**\n   * Create an array containing objects that represent each available page of records\n   *\n   * @param total - The total records remaining\n   * @param perPage - How many records are shown per page\n   * @param zeroBased - If the pages are based on a `0` index rather than `1`\n   * @return The array representing all possible pages of records\n   */\n  private createPagesArray(total: number, perPage: number, zeroBased: boolean): TsPaginatorMenuItem[] {\n    const paginatorArray: TsPaginatorMenuItem[] = [];\n    let recordsRemaining = total;\n    let page = zeroBased ? 0 : 1;\n\n    // If there are no records just return an empty array\n    if (!recordsRemaining || recordsRemaining = perPage) {\n      // We are creating the text for the range here so we are dealing with records based on 1\n      // (while the pages themselves may be based on 0 or 1)\n      const pageNumber = (page = perPage) {\n        page = pageValue + 1;\n      }\n\n    }\n\n    // If any records remain, add the partial group as the last page in the array\n    if (recordsRemaining > 0) {\n      let name;\n      let value;\n      const pageNumber = (page  0) {\n        name = `${pageNumber * perPage + 1} - ${pageNumber * perPage + recordsRemaining}`;\n        value = (pageValue - (zeroBased ? 1 : 0));\n      } else {\n        name = `${pageNumber} - ${recordsRemaining}`;\n        value = (pageValue - (zeroBased ? 1 : 0));\n      }\n\n      paginatorArray.push({\n        name: name,\n        value: value,\n      });\n    }\n\n    return paginatorArray.sort((a: TsPaginatorMenuItem, b: TsPaginatorMenuItem): number => {\n      const first: number = coerceNumberProperty(a.value);\n      const second: number = coerceNumberProperty(b.value);\n\n      return (first \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsPaginatorModule.html":{"url":"modules/TsPaginatorModule.html","title":"module - TsPaginatorModule","body":"\n                   \n\n\n\n\n  Modules\n  TsPaginatorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsPaginatorModule\n\n\n\ncluster_TsPaginatorModule_declarations\n\n\n\ncluster_TsPaginatorModule_imports\n\n\n\ncluster_TsPaginatorModule_exports\n\n\n\n\nTsPaginatorComponent\n\nTsPaginatorComponent\n\n\n\nTsPaginatorModule\n\nTsPaginatorModule\n\nTsPaginatorModule -->\n\nTsPaginatorComponent->TsPaginatorModule\n\n\n\n\n\nTsPaginatorComponent \n\nTsPaginatorComponent \n\nTsPaginatorComponent  -->\n\nTsPaginatorModule->TsPaginatorComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsPaginatorModule -->\n\nTsButtonModule->TsPaginatorModule\n\n\n\n\n\nTsMenuModule\n\nTsMenuModule\n\nTsPaginatorModule -->\n\nTsMenuModule->TsPaginatorModule\n\n\n\n\n\nTsSelectModule\n\nTsSelectModule\n\nTsPaginatorModule -->\n\nTsSelectModule->TsPaginatorModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsPaginatorModule -->\n\nTsTooltipModule->TsPaginatorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/paginator/paginator.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsPaginatorComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsMenuModule\n                            \n                            \n                                    TsSelectModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsPaginatorComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TsButtonModule } from './../button/button.module';\nimport { TsSelectModule } from './../select/select.module';\nimport { TsMenuModule } from './../menu/menu.module';\nimport { TsTooltipModule } from './../tooltip/tooltip.module';\nimport { TsPaginatorComponent } from './paginator.component';\n\nexport * from './paginator.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    TsButtonModule,\n    TsSelectModule,\n    TsMenuModule,\n    TsTooltipModule,\n  ],\n  exports: [\n    TsPaginatorComponent,\n  ],\n  declarations: [\n    TsPaginatorComponent,\n  ],\n})\nexport class TsPaginatorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsPipesModule.html":{"url":"modules/TsPipesModule.html","title":"module - TsPipesModule","body":"\n                   \n\n\n\n\n  Modules\n  TsPipesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsPipesModule\n\n\n\ncluster_TsPipesModule_declarations\n\n\n\ncluster_TsPipesModule_exports\n\n\n\n\nTsDatePipe\n\nTsDatePipe\n\n\n\nTsPipesModule\n\nTsPipesModule\n\nTsPipesModule -->\n\nTsDatePipe->TsPipesModule\n\n\n\n\n\nTsRoundNumberPipe\n\nTsRoundNumberPipe\n\nTsPipesModule -->\n\nTsRoundNumberPipe->TsPipesModule\n\n\n\n\n\nTsSentenceCasePipe\n\nTsSentenceCasePipe\n\nTsPipesModule -->\n\nTsSentenceCasePipe->TsPipesModule\n\n\n\n\n\nTsTimeAgoPipe\n\nTsTimeAgoPipe\n\nTsPipesModule -->\n\nTsTimeAgoPipe->TsPipesModule\n\n\n\n\n\nTsTitleCasePipe\n\nTsTitleCasePipe\n\nTsPipesModule -->\n\nTsTitleCasePipe->TsPipesModule\n\n\n\n\n\nTsDatePipe \n\nTsDatePipe \n\nTsDatePipe  -->\n\nTsPipesModule->TsDatePipe \n\n\n\n\n\nTsRoundNumberPipe \n\nTsRoundNumberPipe \n\nTsRoundNumberPipe  -->\n\nTsPipesModule->TsRoundNumberPipe \n\n\n\n\n\nTsSentenceCasePipe \n\nTsSentenceCasePipe \n\nTsSentenceCasePipe  -->\n\nTsPipesModule->TsSentenceCasePipe \n\n\n\n\n\nTsTimeAgoPipe \n\nTsTimeAgoPipe \n\nTsTimeAgoPipe  -->\n\nTsPipesModule->TsTimeAgoPipe \n\n\n\n\n\nTsTitleCasePipe \n\nTsTitleCasePipe \n\nTsTitleCasePipe  -->\n\nTsPipesModule->TsTitleCasePipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/pipes.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsDatePipe\n                            \n                            \n                                TsRoundNumberPipe\n                            \n                            \n                                TsSentenceCasePipe\n                            \n                            \n                                TsTimeAgoPipe\n                            \n                            \n                                TsTitleCasePipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsDatePipe\n                            \n                            \n                                    TsRoundNumberPipe\n                            \n                            \n                                    TsSentenceCasePipe\n                            \n                            \n                                    TsTimeAgoPipe\n                            \n                            \n                                    TsTitleCasePipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsDatePipe } from './date/date.pipe';\nimport { TsRoundNumberPipe } from './round-number/round-number.pipe';\nimport { TsSentenceCasePipe } from './sentence-case/sentence-case.pipe';\nimport { TsTimeAgoPipe } from './time-ago/time-ago.pipe';\nimport { TsTitleCasePipe } from './title-case/title-case.pipe';\n\nexport * from './date/date.pipe';\nexport * from './round-number/round-number.pipe';\nexport * from './sentence-case/sentence-case.pipe';\nexport * from './time-ago/time-ago.pipe';\nexport * from './title-case/title-case.pipe';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    TsDatePipe,\n    TsRoundNumberPipe,\n    TsSentenceCasePipe,\n    TsTimeAgoPipe,\n    TsTitleCasePipe,\n  ],\n  providers: [\n    TsDatePipe,\n    TsRoundNumberPipe,\n    TsSentenceCasePipe,\n    TsTimeAgoPipe,\n    TsTitleCasePipe,\n  ],\n  declarations: [\n    TsDatePipe,\n    TsRoundNumberPipe,\n    TsSentenceCasePipe,\n    TsTimeAgoPipe,\n    TsTitleCasePipe,\n  ],\n})\nexport class TsPipesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsRadioChange.html":{"url":"classes/TsRadioChange.html","title":"class - TsRadioChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsRadioChange\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/radio-group/radio-group.component.ts\n        \n\n            \n                Description\n            \n            \n                Expose the MatRadioChange event as TsRadioChange. Used by TsRadioGroupComponent\n\n            \n\n            \n                Extends\n            \n            \n                    MatRadioChange\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        Radio Group\n\n\n\n\nTable of Contents\n\nBasic usage\nSub-labels\nEvent driven\nRequired\nDisabled\nDisabled option\n\n\nVisual mode\nCustom content\n\n\n\n\nBasic usage\nPass in:\n\nan array of items\na form control\na formatter function to determine the UI display value\na formatter function to determine the model value\n\n\n  \n\n  Submit\n// Define items to be passed to the radio group\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n    bing: 'Some helper text for my item',\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    bing: 'Some helper text for my item',\n    disabled: true,\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n    bing: 'Some helper text for my item',\n  },\n]);\n\n// Create a form\nmyForm = this.formBuilder.group({\n  myRadioGroup: [null],\n});\n\n// Use the 'bar' value as the UI display\nuiFormatter = (v) => v.bar;\n// use the 'foo' value to save to the model\nmodelFormatter = (v) => v.foo;\nNOTE: Since we can set the default value in the form control, we no longer need to add the\nchecked property to any or our items.\n\nSub-labels\nPassing a formatter function to formatUISubLabelFn will enable sub-label support:\n// Use the 'bing' value as a sub-label\nuiSubFormatter = (v) => v.bing;\n// Use the 'bar' value as the UI display\nuiFormatter = (v) => v.bar;\n// use the 'foo' value to save to the model\nmodelFormatter = (v) => v.foo;Event driven\nListen for change events:\nRequired\nTo define the radio group as 'required', set the required validator on the form group:\nmyForm = this.formBuilder.group({\n  myRadioGroup: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n});Disabled\nTo disable the entire radio group, set isDisabled to true:\nDisabled option\nTo disabled only a single option, define the disabled key on the item object:\n// Define items to be passed to the radio group\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    disabled: true, // This radio option will be disabled\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n  },\n]);Visual mode\nVisual mode displays radio options as large clickable areas containing content.\nEnable by setting the isVisual flag:\nCustom content\nTsRadioOption now accepts an optional template key with a string template:\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n    template: `My link!`\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    // if no template is defined, it will fall back to `formatUILabelFn` for the display value\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n    template: `Hi! Here is a thing!`\n  },\n]);\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatRadioChange } from '@angular/material/radio';\nimport {\n  isFunction,\n  hasRequiredControl,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Define the allowed keys for an item passed to the {@link TsRadioComponent}\n */\nexport interface TsRadioOption {\n  [key: string]: any;\n\n  /**\n   * Define if the item is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Define the template for the content (used if type is visual)\n   */\n  template?: string;\n}\n\n\n/**\n * Expose the MatRadioChange event as TsRadioChange. Used by {@link TsRadioGroupComponent}\n */\nexport class TsRadioChange extends MatRadioChange {}\n\n\n/**\n * Expose the formatter function type used by {@link TsRadioGroupComponent}\n */\nexport type TsRadioFormatFn = (v: any) => string;\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsRadioGroupComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the radio UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-radio-group`: The primary container\n * - `qa-radio-control`: An individual radio control\n * - `qa-radio-validation-messages`: The validation messages container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-radio-group',\n  templateUrl: './radio-group.component.html',\n  styleUrls: ['./radio-group.component.scss'],\n  host: {\n    class: 'ts-radio-group',\n  },\n  providers: [CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRadioGroup',\n})\nexport class TsRadioGroupComponent extends TsReactiveFormBaseComponent implements OnInit, OnDestroy {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-radio-group-${nextUniqueId++}`;\n\n  /**\n   * Define the ripple color.\n   * TODO: abstract out to a service or utility function or set as a global default for ripples\n   */\n  public rippleColor: string = 'rgba(0, 83, 138, .1)';\n\n  // NOTE: Since we are matching standard HTML attributes, we will rename for internal use.\n  // tslint:disable: no-input-rename\n  /**\n   * Used to set the 'aria-label' attribute on the underlying input element.\n   */\n  @Input('aria-label')\n  public ariaLabel: string | undefined;\n\n  /**\n   * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n   */\n  @Input('aria-labelledby')\n  public ariaLabelledby: string | undefined;\n\n  /**\n   * The 'aria-describedby' attribute is read after the element's label and field type.\n   */\n  @Input('aria-describedby')\n  public ariaDescribedby: string | undefined;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatUILabelFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatUILabelFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatUILabelFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatUILabelFn(): TsRadioFormatFn {\n    return this._formatUILabelFn;\n  }\n  private _formatUILabelFn!: TsRadioFormatFn;\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatUISubLabelFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatUISubLabelFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatUISubLabelFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatUISubLabelFn(): TsRadioFormatFn {\n    return this._formatUISubLabelFn;\n  }\n  private _formatUISubLabelFn!: TsRadioFormatFn;\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatModelValueFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatModelValueFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatModelValueFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatModelValueFn(): TsRadioFormatFn {\n    return this._formatModelValueFn;\n  }\n  private _formatModelValueFn!: TsRadioFormatFn;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the radio group is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the radio group is visual (boxes) or standard (text)\n   */\n  @Input()\n  public set isVisual(value: boolean) {\n    this._isVisual = coerceBooleanProperty(value);\n  }\n  public get isVisual(): boolean {\n    return this._isVisual;\n  }\n  private _isVisual: boolean = false;\n\n  /**\n   * Define a label for the radio group\n   */\n  @Input()\n  public label!: string;\n\n  /**\n   * The HTML name attribute applied to radio buttons in this group.\n   */\n  @Input()\n  public set name(value: string) {\n    this._name = value ? value : this._uid;\n  }\n  public get name(): string {\n    return this._name;\n  }\n  private _name: string = this._uid;\n\n  /**\n   * Accept an array of radio options in the {@link TsRadioOption} format\n   */\n  @Input()\n  public set options(value: TsRadioOption[]) {\n    if (!value) {\n      return;\n    }\n\n    this._options = value;\n  }\n  public get options(): TsRadioOption[] {\n    return this._options;\n  }\n  private _options!: TsRadioOption[];\n\n  /**\n   * Define if the visual style should be large or small\n   */\n  @Input()\n  public set small(value: boolean) {\n    this._small = coerceBooleanProperty(value);\n  }\n  public get small(): boolean {\n    return this._small;\n  }\n  private _small: boolean = false;\n\n  /**\n   * Define the theme. {@link TsStyleThemeTypes}\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit event when a selection occurs. {@link TsRadioChange}\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n\n  /**\n   * Getter to determine if the group is required\n   */\n  get isRequired(): boolean {\n    return hasRequiredControl(this.formControl);\n  }\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    public domSanitizer: DomSanitizer,\n  ) {\n    super();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Update the change detector if the control value changes\n   */\n  public ngOnInit(): void {\n    // istanbul ignore else\n    if (this.formControl) {\n      this.formControl.valueChanges\n        .pipe(\n          untilComponentDestroyed(this),\n        )\n        .subscribe((v: any) => {\n          this.writeValue(v);\n          this.changeDetectorRef.markForCheck();\n        });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Retrieve a value determined by the passed in formatter\n   *\n   * @param option - The radio option\n   * @param formatter - The formatter function used to retrieve the value\n   * @return The retrieved value\n   */\n  public retrieveValue(option: TsRadioOption, formatter?: TsRadioFormatFn): TsRadioOption | string {\n    return (formatter && formatter(option)) ? formatter(option) : option;\n  }\n\n\n  /**\n   * Handle clicks on labels\n   *\n   * @param option - The selected option\n   */\n  public labelClick(option: TsRadioOption): void {\n    if (this.isDisabled || (option && option.disabled)) {\n      return;\n    }\n    const value = this.retrieveValue(option, this.formatModelValueFn);\n    this.value = value;\n    this.changeDetectorRef.markForCheck();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsRadioGroupModule.html":{"url":"modules/TsRadioGroupModule.html","title":"module - TsRadioGroupModule","body":"\n                   \n\n\n\n\n  Modules\n  TsRadioGroupModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsRadioGroupModule\n\n\n\ncluster_TsRadioGroupModule_declarations\n\n\n\ncluster_TsRadioGroupModule_TsRadioGroupComponent_providers\n\n\n\ncluster_TsRadioGroupModule_imports\n\n\n\ncluster_TsRadioGroupModule_exports\n\n\n\n\nTsRadioGroupComponent\n\nTsRadioGroupComponent\n\n\n\nTsRadioGroupModule\n\nTsRadioGroupModule\n\nTsRadioGroupModule -->\n\nTsRadioGroupComponent->TsRadioGroupModule\n\n\n\n\n\nTsRadioGroupComponent \n\nTsRadioGroupComponent \n\nTsRadioGroupComponent  -->\n\nTsRadioGroupModule->TsRadioGroupComponent \n\n\n\n\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n\nTsRadioGroupComponent -->\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR->TsRadioGroupComponent\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsRadioGroupModule -->\n\nTsIconModule->TsRadioGroupModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsRadioGroupModule -->\n\nTsValidationMessagesModule->TsRadioGroupModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/radio-group/radio-group.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsRadioGroupComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsRadioGroupComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsRadioGroupComponent } from './radio-group.component';\n\nexport * from './radio-group.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatRadioModule,\n    FlexLayoutModule,\n    TsValidationMessagesModule,\n    MatRippleModule,\n    TsIconModule,\n  ],\n  exports: [\n    TsRadioGroupComponent,\n  ],\n  declarations: [\n    TsRadioGroupComponent,\n  ],\n})\nexport class TsRadioGroupModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsRadioOption.html":{"url":"interfaces/TsRadioOption.html","title":"interface - TsRadioOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsRadioOption\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/radio-group/radio-group.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the allowed keys for an item passed to the {@link TsRadioComponent}\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        template\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/radio-group/radio-group.component.ts:31\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define if the item is disabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                    \n                                \n                                \n                                    \n                                        template:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define the template for the content (used if type is visual)\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        Radio Group\n\n\n\n\nTable of Contents\n\nBasic usage\nSub-labels\nEvent driven\nRequired\nDisabled\nDisabled option\n\n\nVisual mode\nCustom content\n\n\n\n\nBasic usage\nPass in:\n\nan array of items\na form control\na formatter function to determine the UI display value\na formatter function to determine the model value\n\n\n  \n\n  Submit\n// Define items to be passed to the radio group\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n    bing: 'Some helper text for my item',\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    bing: 'Some helper text for my item',\n    disabled: true,\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n    bing: 'Some helper text for my item',\n  },\n]);\n\n// Create a form\nmyForm = this.formBuilder.group({\n  myRadioGroup: [null],\n});\n\n// Use the 'bar' value as the UI display\nuiFormatter = (v) => v.bar;\n// use the 'foo' value to save to the model\nmodelFormatter = (v) => v.foo;\nNOTE: Since we can set the default value in the form control, we no longer need to add the\nchecked property to any or our items.\n\nSub-labels\nPassing a formatter function to formatUISubLabelFn will enable sub-label support:\n// Use the 'bing' value as a sub-label\nuiSubFormatter = (v) => v.bing;\n// Use the 'bar' value as the UI display\nuiFormatter = (v) => v.bar;\n// use the 'foo' value to save to the model\nmodelFormatter = (v) => v.foo;Event driven\nListen for change events:\nRequired\nTo define the radio group as 'required', set the required validator on the form group:\nmyForm = this.formBuilder.group({\n  myRadioGroup: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n});Disabled\nTo disable the entire radio group, set isDisabled to true:\nDisabled option\nTo disabled only a single option, define the disabled key on the item object:\n// Define items to be passed to the radio group\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    disabled: true, // This radio option will be disabled\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n  },\n]);Visual mode\nVisual mode displays radio options as large clickable areas containing content.\nEnable by setting the isVisual flag:\nCustom content\nTsRadioOption now accepts an optional template key with a string template:\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n    template: `My link!`\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    // if no template is defined, it will fall back to `formatUILabelFn` for the display value\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n    template: `Hi! Here is a thing!`\n  },\n]);\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatRadioChange } from '@angular/material/radio';\nimport {\n  isFunction,\n  hasRequiredControl,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Define the allowed keys for an item passed to the {@link TsRadioComponent}\n */\nexport interface TsRadioOption {\n  [key: string]: any;\n\n  /**\n   * Define if the item is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Define the template for the content (used if type is visual)\n   */\n  template?: string;\n}\n\n\n/**\n * Expose the MatRadioChange event as TsRadioChange. Used by {@link TsRadioGroupComponent}\n */\nexport class TsRadioChange extends MatRadioChange {}\n\n\n/**\n * Expose the formatter function type used by {@link TsRadioGroupComponent}\n */\nexport type TsRadioFormatFn = (v: any) => string;\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsRadioGroupComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the radio UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-radio-group`: The primary container\n * - `qa-radio-control`: An individual radio control\n * - `qa-radio-validation-messages`: The validation messages container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-radio-group',\n  templateUrl: './radio-group.component.html',\n  styleUrls: ['./radio-group.component.scss'],\n  host: {\n    class: 'ts-radio-group',\n  },\n  providers: [CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRadioGroup',\n})\nexport class TsRadioGroupComponent extends TsReactiveFormBaseComponent implements OnInit, OnDestroy {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-radio-group-${nextUniqueId++}`;\n\n  /**\n   * Define the ripple color.\n   * TODO: abstract out to a service or utility function or set as a global default for ripples\n   */\n  public rippleColor: string = 'rgba(0, 83, 138, .1)';\n\n  // NOTE: Since we are matching standard HTML attributes, we will rename for internal use.\n  // tslint:disable: no-input-rename\n  /**\n   * Used to set the 'aria-label' attribute on the underlying input element.\n   */\n  @Input('aria-label')\n  public ariaLabel: string | undefined;\n\n  /**\n   * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n   */\n  @Input('aria-labelledby')\n  public ariaLabelledby: string | undefined;\n\n  /**\n   * The 'aria-describedby' attribute is read after the element's label and field type.\n   */\n  @Input('aria-describedby')\n  public ariaDescribedby: string | undefined;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatUILabelFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatUILabelFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatUILabelFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatUILabelFn(): TsRadioFormatFn {\n    return this._formatUILabelFn;\n  }\n  private _formatUILabelFn!: TsRadioFormatFn;\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatUISubLabelFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatUISubLabelFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatUISubLabelFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatUISubLabelFn(): TsRadioFormatFn {\n    return this._formatUISubLabelFn;\n  }\n  private _formatUISubLabelFn!: TsRadioFormatFn;\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatModelValueFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatModelValueFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatModelValueFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatModelValueFn(): TsRadioFormatFn {\n    return this._formatModelValueFn;\n  }\n  private _formatModelValueFn!: TsRadioFormatFn;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the radio group is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the radio group is visual (boxes) or standard (text)\n   */\n  @Input()\n  public set isVisual(value: boolean) {\n    this._isVisual = coerceBooleanProperty(value);\n  }\n  public get isVisual(): boolean {\n    return this._isVisual;\n  }\n  private _isVisual: boolean = false;\n\n  /**\n   * Define a label for the radio group\n   */\n  @Input()\n  public label!: string;\n\n  /**\n   * The HTML name attribute applied to radio buttons in this group.\n   */\n  @Input()\n  public set name(value: string) {\n    this._name = value ? value : this._uid;\n  }\n  public get name(): string {\n    return this._name;\n  }\n  private _name: string = this._uid;\n\n  /**\n   * Accept an array of radio options in the {@link TsRadioOption} format\n   */\n  @Input()\n  public set options(value: TsRadioOption[]) {\n    if (!value) {\n      return;\n    }\n\n    this._options = value;\n  }\n  public get options(): TsRadioOption[] {\n    return this._options;\n  }\n  private _options!: TsRadioOption[];\n\n  /**\n   * Define if the visual style should be large or small\n   */\n  @Input()\n  public set small(value: boolean) {\n    this._small = coerceBooleanProperty(value);\n  }\n  public get small(): boolean {\n    return this._small;\n  }\n  private _small: boolean = false;\n\n  /**\n   * Define the theme. {@link TsStyleThemeTypes}\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit event when a selection occurs. {@link TsRadioChange}\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n\n  /**\n   * Getter to determine if the group is required\n   */\n  get isRequired(): boolean {\n    return hasRequiredControl(this.formControl);\n  }\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    public domSanitizer: DomSanitizer,\n  ) {\n    super();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Update the change detector if the control value changes\n   */\n  public ngOnInit(): void {\n    // istanbul ignore else\n    if (this.formControl) {\n      this.formControl.valueChanges\n        .pipe(\n          untilComponentDestroyed(this),\n        )\n        .subscribe((v: any) => {\n          this.writeValue(v);\n          this.changeDetectorRef.markForCheck();\n        });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Retrieve a value determined by the passed in formatter\n   *\n   * @param option - The radio option\n   * @param formatter - The formatter function used to retrieve the value\n   * @return The retrieved value\n   */\n  public retrieveValue(option: TsRadioOption, formatter?: TsRadioFormatFn): TsRadioOption | string {\n    return (formatter && formatter(option)) ? formatter(option) : option;\n  }\n\n\n  /**\n   * Handle clicks on labels\n   *\n   * @param option - The selected option\n   */\n  public labelClick(option: TsRadioOption): void {\n    if (this.isDisabled || (option && option.disabled)) {\n      return;\n    }\n    const value = this.retrieveValue(option, this.formatModelValueFn);\n    this.value = value;\n    this.changeDetectorRef.markForCheck();\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsReactiveFormBaseComponent.html":{"url":"components/TsReactiveFormBaseComponent.html","title":"component - TsReactiveFormBaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsReactiveFormBaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/utilities/reactive-form-base.component.ts\n\n\n    \n        Description\n    \n    \n        This is the base class for all custom reactive form elements.\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    export class TsInputComponent extends TsReactiveFormBaseComponent {}\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ts-dummy-selector\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                innerValue\n                            \n                            \n                                    Protected\n                                onChangeCallback\n                            \n                            \n                                    Protected\n                                onTouchedCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onBlur\n                            \n                            \n                                    Protected\n                                registerOnChange\n                            \n                            \n                                    Protected\n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        Define the form control to get access to validators\n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:42\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onBlur\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onBlur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Set touched on blur\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Register onChange callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Register onTouched callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Write value to inner value (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            innerValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        innerValue:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:26\n                            \n                        \n\n                \n                    \n                        Define the internal data model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onChangeCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onChangeCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:31\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onTouchedCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onTouchedCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:36\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:53\n                                \n                            \n\n                \n                    \n                        setvalue(v: any)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:47\n                                \n                            \n                    \n                        \n                                Set the accessor and call the onchange callback\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { noop } from '@terminus/ngx-tools';\n\n\n/**\n * This is the base class for all custom reactive form elements.\n *\n * @example\n * export class TsInputComponent extends TsReactiveFormBaseComponent {}\n */\n@Component({\n  /*\n   * NOTE: Without this dummy selector, this class isn't picked up by the docs generator\n   */\n  selector: `ts-dummy-selector`,\n  template: ``,\n})\nexport class TsReactiveFormBaseComponent {\n  /**\n   * Define the internal data model\n   */\n  protected innerValue: any = '';\n\n  /**\n   * Define placeholder for callback (provided later by the control value accessor)\n   */\n  protected onChangeCallback: (_: any) => void = noop;\n\n  /**\n   * Define placeholder for callback (provided later by the control value accessor)\n   */\n  protected onTouchedCallback: () => void = noop;\n\n  /**\n   * Define the form control to get access to validators\n   */\n  @Input()\n  public formControl: FormControl = new FormControl();\n\n  /**\n   * Set the accessor and call the onchange callback\n   */\n  public set value(v: any) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n  public get value(): any {\n    return this.innerValue;\n  }\n\n\n  /**\n   * Set touched on blur\n   */\n  public onBlur() {\n    this.onTouchedCallback();\n  }\n\n\n  /**\n   * Register onChange callback (from ControlValueAccessor interface)\n   */\n  protected registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n\n  /**\n   * Register onTouched callback (from ControlValueAccessor interface)\n   */\n  protected registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n\n  /**\n   * Write value to inner value (from ControlValueAccessor interface)\n   */\n  protected writeValue(value: any) {\n    // NOTE: Currently, this 'else' path seems untestable\n    // istanbul ignore else\n    if (value !== this.innerValue) {\n      this.innerValue = value;\n    }\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsReactiveFormBaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsRoundNumberPipe.html":{"url":"pipes/TsRoundNumberPipe.html","title":"pipe - TsRoundNumberPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsRoundNumberPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/round-number/round-number.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsRoundNumber\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: number, precision: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/round-number/round-number.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        precision\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\nimport { roundNumber } from '@terminus/ngx-tools';\n\n\n@Pipe({\n  name: 'tsRoundNumber',\n})\nexport class TsRoundNumberPipe implements PipeTransform {\n  transform(value: number, precision = 0): number | undefined {\n    // Check for null values to avoid issues during data-binding\n    if (!value) {\n      return;\n    }\n\n    return roundNumber(value, precision);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsRowComponent.html":{"url":"components/TsRowComponent.html","title":"component - TsRowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsRowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/table/row.ts\n\n\n    \n        Description\n    \n    \n        Data row template container that contains the cell outlet. Adds the right class and role.\n\n    \n\n    \n        Extends\n    \n    \n            CdkRow\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsRow\n            \n\n            \n                host\n                {}\n            \n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                ts-row\n            \n\n\n\n            \n                template\n                CDK_ROW_TEMPLATE\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Header row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[tsHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: TsHeaderRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why this type of input was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsHeaderRowDef'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n\n/**\n * Data row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[tsRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: TsRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why it was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsRowDefColumns', 'when: tsRowDefWhen'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsRowDefDirective extends CdkRowDef {}\n\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-header-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsHeaderRow',\n  preserveWhitespaces: false,\n})\nexport class TsHeaderRowComponent extends CdkHeaderRow {}\n\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRow',\n  preserveWhitespaces: false,\n})\nexport class TsRowComponent extends CdkRow {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'CDK_ROW_TEMPLATE'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsRowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsRowDefDirective.html":{"url":"directives/TsRowDefDirective.html","title":"directive - TsRowDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsRowDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/row.ts\n        \n\n            \n                Description\n            \n            \n                Data row definition for the TsTableComponent.\nCaptures the header row's template and other row properties such as the columns to display and\na when predicate that describes when this row should be used.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsRowDef]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Header row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[tsHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: TsHeaderRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why this type of input was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsHeaderRowDef'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n\n/**\n * Data row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[tsRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: TsRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why it was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsRowDefColumns', 'when: tsRowDefWhen'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsRowDefDirective extends CdkRowDef {}\n\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-header-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsHeaderRow',\n  preserveWhitespaces: false,\n})\nexport class TsHeaderRowComponent extends CdkHeaderRow {}\n\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRow',\n  preserveWhitespaces: false,\n})\nexport class TsRowComponent extends CdkRow {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsSearchComponent.html":{"url":"components/TsSearchComponent.html","title":"component - TsSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/search/search.component.ts\n\n\n    \n        Description\n    \n    \n        A presentational component to render a search form\nQA CSS CLASSES\n\nqa-search: Placed on the form element which contains this component\nqa-search-input: Placed on the TsInputComponent used for the search text input\nqa-search-button: Placed on the TsButtonComponent used for the submit button\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-search\n            \n\n            \n                styleUrls\n                search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buttonAction\n                            \n                            \n                                    Public\n                                buttonType\n                            \n                            \n                                    Public\n                                debouncedEmit\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Private\n                                INPUT_DEBOUNCE_TIME\n                            \n                            \n                                    Public\n                                inputPatternRegex\n                            \n                            \n                                    Public\n                                query\n                            \n                            \n                                    Public\n                                queryMinLength\n                            \n                            \n                                    Public\n                                searchForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitSubmit\n                            \n                            \n                                    Public\n                                keyup\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoSubmit\n                            \n                            \n                                initialValue\n                            \n                            \n                                inputHint\n                            \n                            \n                                inputLabel\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isFocused\n                            \n                            \n                                isSubmitting\n                            \n                            \n                                theme\n                            \n                            \n                                userCanClear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                cleared\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/search/search.component.ts:201\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoSubmit\n                    \n                    \n                        Define if the input should automatically submit values as typed\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:135\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialValue\n                    \n                    \n                        Define an initial value for the search input\n\n                            \n                            Type:    string | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:141\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputHint\n                    \n                    \n                        Define the hint text below the input\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Enter at least two letters.'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:147\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputLabel\n                    \n                    \n                        Define the primary label for the input\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Search'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:153\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the search should be disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:159\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isFocused\n                    \n                    \n                        Define if the search input should be focused initially\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:165\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSubmitting\n                    \n                    \n                        Define if the search is currently submitting a query\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:171\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:177\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userCanClear\n                    \n                    \n                        Define if the user can clear the search input\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:183\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        The event to emit when the internal input value is changed\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:195\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cleared\n                    \n                    \n                        The event to emit when the internal input value is cleared\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:201\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitted\n                    \n                    \n                        The event to emit when the form is submitted\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:189\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        emitSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:244\n                            \n                        \n\n\n                \n                    \n                            Emit the submitted event\nNOTE: This wrapper is needed so that we can pass the query value to the emitter\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keyup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        keyup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:228\n                            \n                        \n\n\n                \n                    \n                            Fire events as needed after keyup events\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:215\n                            \n                        \n\n\n                \n                    \n                            Seed the value if needed on initialization\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buttonAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonAction:     TsButtonActionTypes\n\n                    \n                \n                    \n                        \n                            Type :     TsButtonActionTypes\n\n                        \n                    \n                    \n                        \n                            Default value : 'Submit'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:79\n                            \n                        \n\n                \n                    \n                        Define the button action label\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buttonType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonType:     TsButtonFunctionTypes\n\n                    \n                \n                    \n                        \n                            Type :     TsButtonFunctionTypes\n\n                        \n                    \n                    \n                        \n                            Default value : 'search'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:84\n                            \n                        \n\n                \n                    \n                        Define the button type\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            debouncedEmit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debouncedEmit:     \n\n                    \n                \n                    \n                        \n                            Default value : debounce(this.emitSubmit, this.INPUT_DEBOUNCE_TIME)\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:96\n                            \n                        \n\n                \n                    \n                        Define a debounced method to emit the submission event\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'search'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:101\n                            \n                        \n\n                \n                    \n                        Define the icon name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            INPUT_DEBOUNCE_TIME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        INPUT_DEBOUNCE_TIME:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:74\n                            \n                        \n\n                \n                    \n                        Define the time to wait for user interaction to stop before auto-submitting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputPatternRegex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputPatternRegex:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[a-zA-Z0-9_ ]*'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:106\n                            \n                        \n\n                \n                    \n                        Define the regular expression to validate the query\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:129\n                            \n                        \n\n                \n                    \n                        Store the search query\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryMinLength\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queryMinLength:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:111\n                            \n                        \n\n                \n                    \n                        Define the minimum length of a valid query\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : this.formBuilder.group({\n    query: [\n      null,\n      [\n        Validators.minLength(this.queryMinLength),\n        Validators.pattern(this.inputPatternRegex),\n      ],\n    ],\n  })\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:116\n                            \n                        \n\n                \n                    \n                        Initialize the form\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentQuery\n                    \n                \n\n                \n                    \n                        getcurrentQuery()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/search/search.component.ts:89\n                                \n                            \n                    \n                        \n                                Define a helper to return the current query string\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { debounce } from '@terminus/ngx-tools';\n\nimport {\n  TsButtonActionTypes,\n  TsButtonFunctionTypes,\n} from './../button/button.module';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsSearchResponse {\n  /**\n   * The search query\n   */\n  query: string;\n}\n\n\n/**\n * A presentational component to render a search form\n *\n * #### QA CSS CLASSES\n * - `qa-search`: Placed on the form element which contains this component\n * - `qa-search-input`: Placed on the {@link TsInputComponent} used for the search text input\n * - `qa-search-button`: Placed on the {@link TsButtonComponent} used for the submit button\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  host: {\n    class: 'ts-search',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsSearchComponent implements OnInit {\n  /**\n   * Define the time to wait for user interaction to stop before auto-submitting\n   */\n  private INPUT_DEBOUNCE_TIME: number = 200;\n\n  /**\n   * Define the button action label\n   */\n  public buttonAction: TsButtonActionTypes = 'Submit';\n\n  /**\n   * Define the button type\n   */\n  public buttonType: TsButtonFunctionTypes = 'search';\n\n  /**\n   * Define a helper to return the current query string\n   */\n  public get currentQuery(): string {\n    return this.searchForm.value.query ? this.searchForm.value.query.trim() : '';\n  }\n\n  /**\n   * Define a debounced method to emit the submission event\n   */\n  public debouncedEmit = debounce(this.emitSubmit, this.INPUT_DEBOUNCE_TIME);\n\n  /**\n   * Define the icon name\n   */\n  public icon: string = 'search';\n\n  /**\n   * Define the regular expression to validate the query\n   */\n  public inputPatternRegex: string = '[a-zA-Z0-9_ ]*';\n\n  /**\n   * Define the minimum length of a valid query\n   */\n  public queryMinLength: number = 2;\n\n  /**\n   * Initialize the form\n   */\n  public searchForm: FormGroup = this.formBuilder.group({\n    query: [\n      null,\n      [\n        Validators.minLength(this.queryMinLength),\n        Validators.pattern(this.inputPatternRegex),\n      ],\n    ],\n  });\n\n  /**\n   * Store the search query\n   */\n  public query: string = '';\n\n  /**\n   * Define if the input should automatically submit values as typed\n   */\n  @Input()\n  public autoSubmit: boolean = false;\n\n  /**\n   * Define an initial value for the search input\n   */\n  @Input()\n  public initialValue: string | undefined;\n\n  /**\n   * Define the hint text below the input\n   */\n  @Input()\n  public inputHint: string = 'Enter at least two letters.';\n\n  /**\n   * Define the primary label for the input\n   */\n  @Input()\n  public inputLabel: string = 'Search';\n\n  /**\n   * Define if the search should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the search input should be focused initially\n   */\n  @Input()\n  public isFocused: boolean = false;\n\n  /**\n   * Define if the search is currently submitting a query\n   */\n  @Input()\n  public isSubmitting: boolean = false;\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define if the user can clear the search input\n   */\n  @Input()\n  public userCanClear: boolean = true;\n\n  /**\n   * The event to emit when the form is submitted\n   */\n  @Output()\n  public submitted: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the internal input value is changed\n   */\n  @Output()\n  public changed: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the internal input value is cleared\n   */\n  @Output()\n  public cleared: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n  ) {}\n\n\n  /**\n   * Seed the value if needed on initialization\n   */\n  public ngOnInit(): void {\n    // istanbul ignore else\n    if (this.initialValue) {\n      this.searchForm.patchValue({\n        query: this.initialValue,\n      });\n    }\n  }\n\n\n  /**\n   * Fire events as needed after keyup events\n   */\n  public keyup(): void {\n    this.changed.emit(this.currentQuery);\n\n    // NOTE: We need to check for a valid query length here even though we are using a minLength\n    // validator. When the length is 0 the minLength validator returns valid.\n    if (this.autoSubmit && this.searchForm.valid && this.currentQuery.length > 0) {\n      this.debouncedEmit(this);\n    }\n  }\n\n\n  /**\n   * Emit the submitted event\n   *\n   * NOTE: This wrapper is needed so that we can pass the query value to the emitter\n   */\n  private emitSubmit(): void {\n    this.submitted.emit({query: this.currentQuery});\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n  Search\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Search'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsSearchModule.html":{"url":"modules/TsSearchModule.html","title":"module - TsSearchModule","body":"\n                   \n\n\n\n\n  Modules\n  TsSearchModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsSearchModule\n\n\n\ncluster_TsSearchModule_declarations\n\n\n\ncluster_TsSearchModule_imports\n\n\n\ncluster_TsSearchModule_exports\n\n\n\n\nTsSearchComponent\n\nTsSearchComponent\n\n\n\nTsSearchModule\n\nTsSearchModule\n\nTsSearchModule -->\n\nTsSearchComponent->TsSearchModule\n\n\n\n\n\nTsSearchComponent \n\nTsSearchComponent \n\nTsSearchComponent  -->\n\nTsSearchModule->TsSearchComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsSearchModule -->\n\nTsButtonModule->TsSearchModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsSearchModule -->\n\nTsInputModule->TsSearchModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/search/search.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsSearchComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsInputModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsSearchComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TsInputModule } from './../input/input.module';\nimport { TsButtonModule } from './../button/button.module';\nimport { TsSearchComponent } from './search.component';\n\nexport * from './search.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    TsInputModule,\n    TsButtonModule,\n  ],\n  exports: [\n    TsSearchComponent,\n  ],\n  declarations: [\n    TsSearchComponent,\n  ],\n})\nexport class TsSearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsSearchResponse.html":{"url":"interfaces/TsSearchResponse.html","title":"interface - TsSearchResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsSearchResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/search/search.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the user object interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        query\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The search query\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { debounce } from '@terminus/ngx-tools';\n\nimport {\n  TsButtonActionTypes,\n  TsButtonFunctionTypes,\n} from './../button/button.module';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsSearchResponse {\n  /**\n   * The search query\n   */\n  query: string;\n}\n\n\n/**\n * A presentational component to render a search form\n *\n * #### QA CSS CLASSES\n * - `qa-search`: Placed on the form element which contains this component\n * - `qa-search-input`: Placed on the {@link TsInputComponent} used for the search text input\n * - `qa-search-button`: Placed on the {@link TsButtonComponent} used for the submit button\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  host: {\n    class: 'ts-search',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsSearchComponent implements OnInit {\n  /**\n   * Define the time to wait for user interaction to stop before auto-submitting\n   */\n  private INPUT_DEBOUNCE_TIME: number = 200;\n\n  /**\n   * Define the button action label\n   */\n  public buttonAction: TsButtonActionTypes = 'Submit';\n\n  /**\n   * Define the button type\n   */\n  public buttonType: TsButtonFunctionTypes = 'search';\n\n  /**\n   * Define a helper to return the current query string\n   */\n  public get currentQuery(): string {\n    return this.searchForm.value.query ? this.searchForm.value.query.trim() : '';\n  }\n\n  /**\n   * Define a debounced method to emit the submission event\n   */\n  public debouncedEmit = debounce(this.emitSubmit, this.INPUT_DEBOUNCE_TIME);\n\n  /**\n   * Define the icon name\n   */\n  public icon: string = 'search';\n\n  /**\n   * Define the regular expression to validate the query\n   */\n  public inputPatternRegex: string = '[a-zA-Z0-9_ ]*';\n\n  /**\n   * Define the minimum length of a valid query\n   */\n  public queryMinLength: number = 2;\n\n  /**\n   * Initialize the form\n   */\n  public searchForm: FormGroup = this.formBuilder.group({\n    query: [\n      null,\n      [\n        Validators.minLength(this.queryMinLength),\n        Validators.pattern(this.inputPatternRegex),\n      ],\n    ],\n  });\n\n  /**\n   * Store the search query\n   */\n  public query: string = '';\n\n  /**\n   * Define if the input should automatically submit values as typed\n   */\n  @Input()\n  public autoSubmit: boolean = false;\n\n  /**\n   * Define an initial value for the search input\n   */\n  @Input()\n  public initialValue: string | undefined;\n\n  /**\n   * Define the hint text below the input\n   */\n  @Input()\n  public inputHint: string = 'Enter at least two letters.';\n\n  /**\n   * Define the primary label for the input\n   */\n  @Input()\n  public inputLabel: string = 'Search';\n\n  /**\n   * Define if the search should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the search input should be focused initially\n   */\n  @Input()\n  public isFocused: boolean = false;\n\n  /**\n   * Define if the search is currently submitting a query\n   */\n  @Input()\n  public isSubmitting: boolean = false;\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define if the user can clear the search input\n   */\n  @Input()\n  public userCanClear: boolean = true;\n\n  /**\n   * The event to emit when the form is submitted\n   */\n  @Output()\n  public submitted: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the internal input value is changed\n   */\n  @Output()\n  public changed: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the internal input value is cleared\n   */\n  @Output()\n  public cleared: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n  ) {}\n\n\n  /**\n   * Seed the value if needed on initialization\n   */\n  public ngOnInit(): void {\n    // istanbul ignore else\n    if (this.initialValue) {\n      this.searchForm.patchValue({\n        query: this.initialValue,\n      });\n    }\n  }\n\n\n  /**\n   * Fire events as needed after keyup events\n   */\n  public keyup(): void {\n    this.changed.emit(this.currentQuery);\n\n    // NOTE: We need to check for a valid query length here even though we are using a minLength\n    // validator. When the length is 0 the minLength validator returns valid.\n    if (this.autoSubmit && this.searchForm.valid && this.currentQuery.length > 0) {\n      this.debouncedEmit(this);\n    }\n  }\n\n\n  /**\n   * Emit the submitted event\n   *\n   * NOTE: This wrapper is needed so that we can pass the query value to the emitter\n   */\n  private emitSubmit(): void {\n    this.submitted.emit({query: this.currentQuery});\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsSelectModule.html":{"url":"modules/TsSelectModule.html","title":"module - TsSelectModule","body":"\n                   \n\n\n\n\n  Modules\n  TsSelectModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsSelectModule\n\n\n\ncluster_TsSelectModule_declarations\n\n\n\ncluster_TsSelectModule_TsSelectComponent_providers\n\n\n\ncluster_TsSelectModule_imports\n\n\n\ncluster_TsSelectModule_exports\n\n\n\n\nTsSelectComponent\n\nTsSelectComponent\n\n\n\nTsSelectModule\n\nTsSelectModule\n\nTsSelectModule -->\n\nTsSelectComponent->TsSelectModule\n\n\n\n\n\nTsSelectComponent \n\nTsSelectComponent \n\nTsSelectComponent  -->\n\nTsSelectModule->TsSelectComponent \n\n\n\n\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n\nTsSelectComponent -->\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR->TsSelectComponent\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsSelectModule -->\n\nTsValidationMessagesModule->TsSelectModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/select/select.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsSelectComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsSelectComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsSelectComponent } from './select.component';\n\nexport * from './select.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSelectModule,\n    TsValidationMessagesModule,\n  ],\n  exports: [\n    TsSelectComponent,\n  ],\n  declarations: [\n    TsSelectComponent,\n  ],\n})\nexport class TsSelectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsSelectedFile.html":{"url":"classes/TsSelectedFile.html","title":"class - TsSelectedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsSelectedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/selected-file.ts\n        \n\n            \n                Description\n            \n            \n                Manage a single selected file\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dimensions\n                            \n                            \n                                    Public\n                                file\n                            \n                            \n                                    Public\n                                fileLoaded$\n                            \n                            \n                                    Private\n                                fileReader\n                            \n                            \n                                    Private\n                                    Optional\n                                fileReference\n                            \n                            \n                                    Public\n                                mimeType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                size\n                            \n                            \n                                    Public\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                determineImageDimensions\n                            \n                            \n                                    Private\n                                validateImageDimensions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(file: File, imageDimensionConstraints: TsFileImageDimensionConstraints | undefined, typeConstraint: TsFileAcceptedMimeTypes[] | undefined, maxSize: number)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/file-upload/selected-file.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                  \n                                                        \n                                                                    File\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageDimensionConstraints\n                                                  \n                                                        \n                                                                    TsFileImageDimensionConstraints | undefined\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConstraint\n                                                  \n                                                        \n                                                                    TsFileAcceptedMimeTypes[] | undefined\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxSize\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dimensions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dimensions:     TsImageDimensions | undefined\n\n                    \n                \n                    \n                        \n                            Type :     TsImageDimensions | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            file\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        file:     File\n\n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileLoaded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileLoaded$:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this.fileReference)\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:52\n                            \n                        \n\n                \n                    \n                        BehaviorSubject to alert consumers when all calculations are complete\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fileReader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileReader:     FileReader\n\n                    \n                \n                    \n                        \n                            Type :     FileReader\n\n                        \n                    \n                    \n                        \n                            Default value : new FileReader()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            fileReference\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileReference:     TsSelectedFile\n\n                    \n                \n                    \n                        \n                            Type :     TsSelectedFile\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:47\n                            \n                        \n\n                \n                    \n                        Only needed to appease TypeScript when defining fileLoaded$\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mimeType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mimeType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            size\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        size:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            validations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validations:     TsFileValidations\n\n                    \n                \n                    \n                        \n                            Type :     TsFileValidations\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    fileType: false,\n    fileSize: false,\n    imageDimensions: false,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:37\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            determineImageDimensions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        determineImageDimensions(callback?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:144\n                            \n                        \n\n\n                \n                    \n                            Determine the dimensions of an image\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                \nA function to call after the dimensions have been calculated (asynchronously)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateImageDimensions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        validateImageDimensions(constraints: TsFileImageDimensionConstraints | undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:194\n                            \n                        \n\n\n                \n                    \n                            Validate the image dimensions\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        constraints\n                                                        \n                                                                    TsFileImageDimensionConstraints | undefined\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe constraints this the image dimensions must fit\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    The validation result\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:89\n                                \n                            \n                    \n                        \n                                Get the image width\n\n\n                                \n                                \n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:98\n                                \n                            \n                    \n                        \n                                Get the image height\n\n\n                                \n                                \n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isCSV\n                    \n                \n\n                \n                    \n                        getisCSV()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:107\n                                \n                            \n                    \n                        \n                                Get a boolean representing if the file is a CSV\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isImage\n                    \n                \n\n                \n                    \n                        getisImage()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:116\n                                \n                            \n                    \n                        \n                                Get a boolean representing if the file is an image\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fileContents\n                    \n                \n\n                \n                    \n                        getfileContents()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:125\n                                \n                            \n                    \n                        \n                                Get the file contents\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:134\n                                \n                            \n                    \n                        \n                                Get the validation status\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject } from 'rxjs';\n\nimport { TsFileImageDimensionConstraints } from './image-dimension-constraints';\nimport { TsImageDimensions } from './image-dimensions';\nimport { TsFileAcceptedMimeTypes } from './mime-types';\n\n\n/**\n * The structure of the object to track file validations internally\n */\nexport interface TsFileValidations {\n  fileType: boolean;\n  fileSize: boolean;\n  imageDimensions: boolean;\n}\n\n\n/**\n * The number of bytes per kilobyte (for calculations)\n */\nconst BYTES_PER_KB = 1024;\n\n\n/**\n * Manage a single selected file\n *\n * @param file - The selected file\n * @param imageDimensionConstraints - An array of image dimension constraints {@link TsFileImageDimensionConstraints}\n * @param typeConstraint - An array of allowed MIME types {@link TsFileAcceptedMimeTypes}\n * @param maxSize - The maximum size in kilobytes\n */\nexport class TsSelectedFile {\n  public name: string | undefined;\n  public mimeType: string;\n  public dimensions: TsImageDimensions | undefined;\n  public size: number;\n  public validations: TsFileValidations = {\n    fileType: false,\n    fileSize: false,\n    imageDimensions: false,\n  };\n  private fileReader: FileReader = new FileReader();\n\n  /**\n   * Only needed to appease TypeScript when defining `fileLoaded$`\n   */\n  private fileReference?: TsSelectedFile;\n\n  /**\n   * BehaviorSubject to alert consumers when all calculations are complete\n   */\n  public fileLoaded$: BehaviorSubject = new BehaviorSubject(this.fileReference);\n\n\n  constructor(\n    public file: File,\n    private imageDimensionConstraints: TsFileImageDimensionConstraints | undefined,\n    private typeConstraint: TsFileAcceptedMimeTypes[] | undefined,\n    private maxSize: number,\n  ) {\n    this.mimeType = this.file.type;\n    this.size = Math.ceil(this.file.size / BYTES_PER_KB);\n    this.name = this.file.name;\n\n    // Begin the validation chain by validating image dimensions\n    this.determineImageDimensions(() => {\n      // Validate mime-type\n      // istanbul ignore else\n      if (this.typeConstraint && this.typeConstraint.indexOf(this.file.type as TsFileAcceptedMimeTypes) >= 0) {\n        this.validations.fileType = true;\n      }\n\n      // Validate file size\n      // istanbul ignore else\n      if (this.size  {\n        // istanbul ignore else\n        if (img) {\n          img.src = this.fileReader.result;\n        }\n      };\n      img.onload = (v: Event) => {\n        // istanbul ignore else\n        if (img) {\n          this.dimensions = new TsImageDimensions(img.naturalWidth, img.naturalHeight);\n        }\n\n        // Validate dimensions\n        this.validations.imageDimensions = this.validateImageDimensions(this.imageDimensionConstraints);\n\n        // Call the callback if one exists\n        // istanbul ignore else\n        if (callback) {\n          callback();\n        }\n      };\n    } else {\n      // We are not dealing with an image:\n      // istanbul ignore else\n      if (callback) {\n        callback();\n      }\n\n      // Since this is not an image, set dimension validation to `true` to 'bypass'\n      this.validations.imageDimensions = true;\n    }\n\n    // Read the file (this triggers the FileReader load event)\n    this.fileReader.readAsDataURL(this.file);\n  }\n\n\n  /**\n   * Validate the image dimensions\n   *\n   * @param constraints - The constraints this the image dimensions must fit\n   * @return The validation result\n   */\n  private validateImageDimensions(constraints: TsFileImageDimensionConstraints | undefined): boolean {\n    if (!constraints || constraints.length = constraint.height.min && height = constraint.width.min && width \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsSentenceCasePipe.html":{"url":"pipes/TsSentenceCasePipe.html","title":"pipe - TsSentenceCasePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsSentenceCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/sentence-case/sentence-case.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsSentenceCase\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/sentence-case/sentence-case.pipe.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\n\n\n@Pipe({\n  name: 'tsSentenceCase',\n})\nexport class TsSentenceCasePipe implements PipeTransform {\n  transform(value: string): string | undefined {\n    // Check for null values to avoid issues during data-binding\n    if (!value) {\n      return;\n    }\n\n    return value.charAt(0).toUpperCase() + value.slice(1).toLowerCase();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsSlideToggleChange.html":{"url":"classes/TsSlideToggleChange.html","title":"class - TsSlideToggleChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsSlideToggleChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/toggle/toggle.component.ts\n        \n\n            \n                Description\n            \n            \n                Expose the MatSlideToggleChange event as TsSlideToggleChange. Used by TsToggleComponent\n\n            \n\n            \n                Extends\n            \n            \n                    MatSlideToggleChange\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Expose the MatSlideToggleChange event as TsSlideToggleChange. Used by {@link TsToggleComponent}\n */\nexport class TsSlideToggleChange extends MatSlideToggleChange {}\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via our base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsToggleComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * The is a toggle component\n *\n * #### QA CSS CLASSES\n * - `qa-toggle`: The toggle element\n *\n * @example\n * My Toggle!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss'],\n  host: {\n    class: 'ts-toggle',\n  },\n  providers: [CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsToggleComponent extends TsReactiveFormBaseComponent {\n  /**\n   * Define the aria label\n   */\n  @Input()\n  public ariaLabel: string | undefined;\n\n  /**\n   * Allow the checked state to be set\n   */\n  @Input()\n  public set isChecked(value: boolean) {\n    this._isChecked = coerceBooleanProperty(value);\n    this.value = this._isChecked;\n  }\n  public get isChecked(): boolean {\n    return this._isChecked;\n  }\n  private _isChecked: boolean = false;\n\n  /**\n   * Define if the toggle should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the toggle is required\n   */\n  @Input()\n  public isRequired: boolean = true;\n\n  /**\n   * Define the position of the label\n   */\n  @Input()\n  public labelPosition: 'before' | 'after' = 'after';\n\n  /**\n   * Define the input name for the toggle\n   */\n  @Input()\n  public name: string = 'toggle';\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit an event each time the toggle value changes\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsSortBase.html":{"url":"classes/TsSortBase.html","title":"class - TsSortBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsSortBase\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.directive.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n\nTable of Contents\n\nAdding sort to table headers\nChanging the sort order\nDisabling sorting\nUsing sort with the ts-table\nAccessibility\n\n\nAdding sort to table headers\nTo add sorting behavior and styling to a set of table headers, add ts-sort-header to each header\nand provide an id that will identify it. These headers should be contained within a parent element\nwith the tsSort directive, which will emit a sortChange event when the user triggers sorting\non the header.\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\ntsSort will emit an sortChange event that contains the ID of the header triggered and the\ndirection to sort (asc or desc).\nChanging the sort order\nBy default, a sort header starts its sorting at asc and then desc. Triggering the sort header\nafter desc will remove sorting.\nTo reverse the sort order for all headers, set the tsSortStart to desc on the tsSort\ndirective. To reverse the order only for a specific header, set the start input only on the header\ninstead.\nTo prevent the user from clearing the sort sort state from an already sorted column, set\ntsSortDisableClear to true on the tsSort to affect all headers, or set disableClear to true on\na specific header.\nDisabling sorting\nIf you want to prevent the user from changing the sorting order of any column, you can use the\ntsSortDisabled binding on the ts-sort, or the disabled on an single ts-sort-header.\nUsing sort with the ts-table\nWhen used on an ts-table header, it is not required to set an ts-sort-header id on because by\ndefault it will use the id of the column.\nAccessibility\nThe aria-label for the sort button can be set in TsSortHeaderIntl.\n\n    \n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n} from './sort-errors';\n\n\n/**\n * Define the allowed sort directions for {@link TsSort}\n */\nexport type TsSortDirection\n  = 'asc'\n  | 'desc'\n  | ''\n;\n\n\n/**\n * Interface for a directive that holds sorting state consumed by `TsSortHeaderComponent`\n */\nexport interface TsSortableItem {\n  /**\n   * The id of the column being sorted\n   */\n  id: string;\n\n  /**\n   * Starting sort direction\n   */\n  start: 'asc' | 'desc';\n\n  /**\n   * Whether to disable clearing the sorting state\n   */\n  disableClear: boolean;\n}\n\n\n/**\n * The current sort state\n */\nexport interface TsSortState {\n  /**\n   * The id of the column being sorted\n   */\n  active: string;\n\n  /**\n   * The sort direction\n   */\n  direction: TsSortDirection;\n}\n\n\n// Boilerplate for applying mixins to TsSort.\nexport class TsSortBase {}\nexport const _TsSortMixinBase = mixinDisabled(TsSortBase);\n\n\n/**\n * Container for TsSortables to manage the sort state and provide default sort parameters\n */\n@Directive({\n  selector: '[tsSort]',\n  exportAs: 'tsSort',\n  inputs: ['disabled: tsSortDisabled'],\n})\nexport class TsSortDirective extends _TsSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /**\n   * Collection of all registered sortables that this directive manages\n   */\n  private sortables = new Map();\n\n  /**\n   * Used to notify any child components listening to state changes\n   */\n  public _stateChanges = new Subject();\n\n  /**\n   * The id of the most recently sorted TsSortable\n   */\n  @Input('tsSortActive')\n  public active!: string;\n\n  /**\n   * The direction to set when an TsSortable is initially sorted.\n   *\n   * May be overriden by the TsSortable's sort start.\n   */\n  @Input('tsSortStart')\n  public start: 'asc' | 'desc' = 'asc';\n\n  /**\n   * The sort direction of the currently active TsSortable\n   */\n  @Input('tsSortDirection')\n  public set direction(direction: TsSortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  public get direction(): TsSortDirection {\n    return this._direction;\n  }\n  private _direction: TsSortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   *\n   * May be overriden by the TsSortable's disable clear input.\n   */\n  @Input('tsSortDisableClear')\n  public set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  public get disableClear() {\n    return this._disableClear;\n  }\n  private _disableClear: boolean = false;\n\n  /**\n   * Event emitted when the user changes either the active sort or sort direction\n   */\n  @Output('tsSortChange')\n  readonly sortChange = new EventEmitter();\n\n\n  /**\n   * Trigger next on all changes\n   */\n  public ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n\n  /**\n   * Complete the observable on destroy\n   */\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n\n  /**\n   * Register function to be used by the contained TsSortables. Adds the TsSortable to the\n   * collection of TsSortables.\n   */\n  register(sortable: TsSortableItem): void {\n    if (!sortable.id && isDevMode()) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id) && isDevMode()) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n\n  /**\n   * Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\n   * collection of contained TsSortables.\n   */\n  deregister(sortable: TsSortableItem): void {\n    this.sortables.delete(sortable.id);\n  }\n\n\n  /**\n   * Sets the active sort id and determines the new sort direction\n   */\n  sort(sortable: TsSortableItem): void {\n    if (this.active !== sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n\n  /**\n   * Returns the next sort direction of the active sortable, checking for potential overrides\n   */\n  getNextSortDirection(sortable: TsSortableItem): TsSortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    const sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n}\n\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): TsSortDirection[] {\n  const sortOrder: TsSortDirection[] = ['asc', 'desc'];\n\n  if (start === 'desc') {\n    sortOrder.reverse();\n  }\n\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n\n  return sortOrder;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsSortDirective.html":{"url":"directives/TsSortDirective.html","title":"directive - TsSortDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsSortDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.directive.ts\n        \n\n            \n                Description\n            \n            \n                Container for TsSortables to manage the sort state and provide default sort parameters\n\n            \n\n            \n                Implements\n            \n            \n                        CanDisable\n                        OnChanges\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsSort]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _direction\n                            \n                            \n                                    Private\n                                _disableClear\n                            \n                            \n                                    Public\n                                _stateChanges\n                            \n                            \n                                    Private\n                                sortables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregister\n                            \n                            \n                                getNextSortDirection\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                register\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsSortActive\n                            \n                            \n                                tsSortDirection\n                            \n                            \n                                tsSortDisableClear\n                            \n                            \n                                tsSortStart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsSortChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tsSortActive\n                    \n                    \n                        The id of the most recently sorted TsSortable\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:98\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tsSortDirection\n                    \n                    \n                        The sort direction of the currently active TsSortable\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:112\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tsSortDisableClear\n                    \n                    \n                        Whether to disable the user from clearing the sort by finishing the sort direction cycle.\nMay be overriden by the TsSortable's disable clear input.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:129\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tsSortStart\n                    \n                    \n                        The direction to set when an TsSortable is initially sorted.\nMay be overriden by the TsSortable's sort start.\n\n                            \n                            Type:    \"asc\" | \"desc\"\n\n                            \n                        \n                            Default value: 'asc'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:106\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        tsSortChange\n                    \n                    \n                        Event emitted when the user changes either the active sort or sort direction\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:141\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deregister\n                            \n                            \n                        \n                    \n                \n                \n                    \nderegister(sortable: TsSortableItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:181\n                            \n                        \n\n\n                \n                    \n                            Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\ncollection of contained TsSortables.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sortable\n                                                        \n                                                                    TsSortableItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNextSortDirection\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNextSortDirection(sortable: TsSortableItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:204\n                            \n                        \n\n\n                \n                    \n                            Returns the next sort direction of the active sortable, checking for potential overrides\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sortable\n                                                        \n                                                                    TsSortableItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TsSortDirection\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:147\n                            \n                        \n\n\n                \n                    \n                            Trigger next on all changes\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:155\n                            \n                        \n\n\n                \n                    \n                            Complete the observable on destroy\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \nregister(sortable: TsSortableItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:164\n                            \n                        \n\n\n                \n                    \n                            Register function to be used by the contained TsSortables. Adds the TsSortable to the\ncollection of TsSortables.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sortable\n                                                        \n                                                                    TsSortableItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \nsort(sortable: TsSortableItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:189\n                            \n                        \n\n\n                \n                    \n                            Sets the active sort id and determines the new sort direction\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sortable\n                                                        \n                                                                    TsSortableItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _direction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _direction:     TsSortDirection\n\n                    \n                \n                    \n                        \n                            Type :     TsSortDirection\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disableClear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disableClear:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:135\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _stateChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _stateChanges:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:92\n                            \n                        \n\n                \n                    \n                        Used to notify any child components listening to state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sortables\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortables:     \n\n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:87\n                            \n                        \n\n                \n                    \n                        Collection of all registered sortables that this directive manages\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        direction\n                    \n                \n\n                \n                    \n                        getdirection()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:118\n                                \n                            \n\n                \n                    \n                        setdirection(direction: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:112\n                                \n                            \n                    \n                        \n                                The sort direction of the currently active TsSortable\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            direction\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disableClear\n                    \n                \n\n                \n                    \n                        getdisableClear()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:132\n                                \n                            \n\n                \n                    \n                        setdisableClear(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:129\n                                \n                            \n                    \n                        \n                                Whether to disable the user from clearing the sort by finishing the sort direction cycle.\nMay be overriden by the TsSortable's disable clear input.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n    \n        \n\nTable of Contents\n\nAdding sort to table headers\nChanging the sort order\nDisabling sorting\nUsing sort with the ts-table\nAccessibility\n\n\nAdding sort to table headers\nTo add sorting behavior and styling to a set of table headers, add ts-sort-header to each header\nand provide an id that will identify it. These headers should be contained within a parent element\nwith the tsSort directive, which will emit a sortChange event when the user triggers sorting\non the header.\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\ntsSort will emit an sortChange event that contains the ID of the header triggered and the\ndirection to sort (asc or desc).\nChanging the sort order\nBy default, a sort header starts its sorting at asc and then desc. Triggering the sort header\nafter desc will remove sorting.\nTo reverse the sort order for all headers, set the tsSortStart to desc on the tsSort\ndirective. To reverse the order only for a specific header, set the start input only on the header\ninstead.\nTo prevent the user from clearing the sort sort state from an already sorted column, set\ntsSortDisableClear to true on the tsSort to affect all headers, or set disableClear to true on\na specific header.\nDisabling sorting\nIf you want to prevent the user from changing the sorting order of any column, you can use the\ntsSortDisabled binding on the ts-sort, or the disabled on an single ts-sort-header.\nUsing sort with the ts-table\nWhen used on an ts-table header, it is not required to set an ts-sort-header id on because by\ndefault it will use the id of the column.\nAccessibility\nThe aria-label for the sort button can be set in TsSortHeaderIntl.\n\n    \n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n} from './sort-errors';\n\n\n/**\n * Define the allowed sort directions for {@link TsSort}\n */\nexport type TsSortDirection\n  = 'asc'\n  | 'desc'\n  | ''\n;\n\n\n/**\n * Interface for a directive that holds sorting state consumed by `TsSortHeaderComponent`\n */\nexport interface TsSortableItem {\n  /**\n   * The id of the column being sorted\n   */\n  id: string;\n\n  /**\n   * Starting sort direction\n   */\n  start: 'asc' | 'desc';\n\n  /**\n   * Whether to disable clearing the sorting state\n   */\n  disableClear: boolean;\n}\n\n\n/**\n * The current sort state\n */\nexport interface TsSortState {\n  /**\n   * The id of the column being sorted\n   */\n  active: string;\n\n  /**\n   * The sort direction\n   */\n  direction: TsSortDirection;\n}\n\n\n// Boilerplate for applying mixins to TsSort.\nexport class TsSortBase {}\nexport const _TsSortMixinBase = mixinDisabled(TsSortBase);\n\n\n/**\n * Container for TsSortables to manage the sort state and provide default sort parameters\n */\n@Directive({\n  selector: '[tsSort]',\n  exportAs: 'tsSort',\n  inputs: ['disabled: tsSortDisabled'],\n})\nexport class TsSortDirective extends _TsSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /**\n   * Collection of all registered sortables that this directive manages\n   */\n  private sortables = new Map();\n\n  /**\n   * Used to notify any child components listening to state changes\n   */\n  public _stateChanges = new Subject();\n\n  /**\n   * The id of the most recently sorted TsSortable\n   */\n  @Input('tsSortActive')\n  public active!: string;\n\n  /**\n   * The direction to set when an TsSortable is initially sorted.\n   *\n   * May be overriden by the TsSortable's sort start.\n   */\n  @Input('tsSortStart')\n  public start: 'asc' | 'desc' = 'asc';\n\n  /**\n   * The sort direction of the currently active TsSortable\n   */\n  @Input('tsSortDirection')\n  public set direction(direction: TsSortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  public get direction(): TsSortDirection {\n    return this._direction;\n  }\n  private _direction: TsSortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   *\n   * May be overriden by the TsSortable's disable clear input.\n   */\n  @Input('tsSortDisableClear')\n  public set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  public get disableClear() {\n    return this._disableClear;\n  }\n  private _disableClear: boolean = false;\n\n  /**\n   * Event emitted when the user changes either the active sort or sort direction\n   */\n  @Output('tsSortChange')\n  readonly sortChange = new EventEmitter();\n\n\n  /**\n   * Trigger next on all changes\n   */\n  public ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n\n  /**\n   * Complete the observable on destroy\n   */\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n\n  /**\n   * Register function to be used by the contained TsSortables. Adds the TsSortable to the\n   * collection of TsSortables.\n   */\n  register(sortable: TsSortableItem): void {\n    if (!sortable.id && isDevMode()) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id) && isDevMode()) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n\n  /**\n   * Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\n   * collection of contained TsSortables.\n   */\n  deregister(sortable: TsSortableItem): void {\n    this.sortables.delete(sortable.id);\n  }\n\n\n  /**\n   * Sets the active sort id and determines the new sort direction\n   */\n  sort(sortable: TsSortableItem): void {\n    if (this.active !== sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n\n  /**\n   * Returns the next sort direction of the active sortable, checking for potential overrides\n   */\n  getNextSortDirection(sortable: TsSortableItem): TsSortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    const sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n}\n\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): TsSortDirection[] {\n  const sortOrder: TsSortDirection[] = ['asc', 'desc'];\n\n  if (start === 'desc') {\n    sortOrder.reverse();\n  }\n\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n\n  return sortOrder;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsSortHeaderBase.html":{"url":"classes/TsSortHeaderBase.html","title":"class - TsSortHeaderBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsSortHeaderBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort-header.component.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { untilComponentDestroyed } from '@terminus/ngx-tools';\nimport { CdkColumnDef } from '@angular/cdk/table';\nimport {\n  merge,\n} from 'rxjs';\n\nimport { TsSortDirective } from './sort.directive';\nimport { TsSortableItem } from './sort.directive';\nimport { TsSortHeaderIntl } from './sort-header-intl';\nimport { getSortHeaderNotContainedWithinSortError } from './sort-errors';\nimport { tsSortAnimations } from './sort-animations';\n\n\n// Boilerplate for applying mixins to the sort header.\nexport class TsSortHeaderBase {}\nexport const _TsSortHeaderMixinBase = mixinDisabled(TsSortHeaderBase);\n\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent TsSortDirective.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\n@Component({\n  // NOTE(B$): This component needs to be added to another component so we need a non-element\n  // selector\n  // tslint:disable: component-selector\n  selector: '[ts-sort-header]',\n  // tslint:enable: component-selector\n  exportAs: 'tsSortHeader',\n  templateUrl: './sort-header.component.html',\n  styleUrls: ['./sort-header.component.scss'],\n  host: {\n    class: 'ts-sortable',\n    '[class.ts-sort-header-sorted]': '_isSorted()',\n    '[class.ts-sort-header-disabled]': '_isDisabled()',\n    '(click)': '_handleClick()',\n  },\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  animations: [\n    tsSortAnimations.indicator,\n    tsSortAnimations.leftPointer,\n    tsSortAnimations.rightPointer,\n    tsSortAnimations.indicatorToggle,\n  ],\n})\nexport class TsSortHeaderComponent extends _TsSortHeaderMixinBase implements TsSortableItem, CanDisable, OnInit, OnDestroy  {\n  /**\n   * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n   * the column's name.\n   */\n  // NOTE(B$): Renaming input so that we can pull a value from the primary directive\n  // tslint:disable: no-input-rename\n  @Input('ts-sort-header')\n  id!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Sets the position of the arrow that displays when sorted\n   */\n  @Input()\n  arrowPosition: 'before' | 'after' = 'after';\n\n  /**\n   * Overrides the sort start value of the containing TsSort for this TsSortable\n   */\n  @Input()\n  start!: 'asc' | 'desc';\n\n  /**\n   * Overrides the disable clear value of the containing TsSort for this TsSortable\n   */\n  @Input()\n  get disableClear(): boolean {\n    return this._disableClear;\n  }\n  set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  private _disableClear!: boolean;\n\n\n  /**\n   * Check for _sort and set up auto-change-detection\n   */\n  constructor(\n    public _intl: TsSortHeaderIntl,\n    changeDetectorRef: ChangeDetectorRef,\n    @Optional() public _sort: TsSortDirective,\n    @Optional() public _cdkColumnDef: CdkColumnDef,\n  ) {\n    super();\n\n    if (!_sort && isDevMode()) {\n      throw getSortHeaderNotContainedWithinSortError();\n    }\n\n    // Mark directive for change detection after any of these changes\n    merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n      .pipe(\n        untilComponentDestroyed(this),\n      )\n      .subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n\n  /**\n   * Default to cdk column name\n   */\n  public ngOnInit(): void {\n    if (!this.id && this._cdkColumnDef) {\n      this.id = this._cdkColumnDef.name;\n    }\n\n    this._sort.register(this);\n  }\n\n\n  /**\n   * Deregister sort and unsubscribe from observables\n   */\n  public ngOnDestroy(): void {\n    this._sort.deregister(this);\n  }\n\n\n  /**\n   * Handles click events on the header\n   */\n  public _handleClick() {\n    if (!this._isDisabled()) {\n      this._sort.sort(this);\n    }\n  }\n\n\n  /**\n   * Whether this TsSortHeader is currently sorted in either ascending or descending order\n   */\n  public _isSorted() {\n    return this._sort.active == this.id &&\n        (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n  }\n\n\n  /**\n   * Whether this TsSortHeader is disabled\n   */\n  public _isDisabled() {\n    return this._sort.disabled || this.disabled;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsSortHeaderComponent.html":{"url":"components/TsSortHeaderComponent.html","title":"component - TsSortHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsSortHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/sort/sort-header.component.ts\n\n\n    \n        Description\n    \n    \n        Applies sorting behavior (click to change sort) and styles to an element, including an\narrow to display the current sort direction.\nMust be provided with an id and contained within a parent TsSortDirective.\nIf used on header cells in a CdkTable, it will automatically default its id from its containing\ncolumn definition.\n\n    \n\n    \n        Extends\n    \n    \n            _TsSortHeaderMixinBase\n    \n\n    \n        Implements\n    \n    \n                TsSortableItem\n                CanDisable\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsSortHeader\n            \n\n            \n                host\n                {}\n            \n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                [ts-sort-header]\n            \n\n            \n                styleUrls\n                sort-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sort-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _cdkColumnDef\n                            \n                            \n                                    Private\n                                _disableClear\n                            \n                            \n                                    Public\n                                _intl\n                            \n                            \n                                    Public\n                                _sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _handleClick\n                            \n                            \n                                    Public\n                                _isDisabled\n                            \n                            \n                                    Public\n                                _isSorted\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                arrowPosition\n                            \n                            \n                                disableClear\n                            \n                            \n                                start\n                            \n                            \n                                ts-sort-header\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_intl: TsSortHeaderIntl, changeDetectorRef: ChangeDetectorRef, _sort: TsSortDirective, _cdkColumnDef: CdkColumnDef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/sort/sort-header.component.ts:101\n                            \n                        \n\n                \n                    \n                            Check for _sort and set up auto-change-detection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _intl\n                                                  \n                                                        \n                                                                    TsSortHeaderIntl\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _sort\n                                                  \n                                                        \n                                                                    TsSortDirective\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _cdkColumnDef\n                                                  \n                                                        \n                                                                    CdkColumnDef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        arrowPosition\n                    \n                    \n                        Sets the position of the arrow that displays when sorted\n\n                            \n                            Type:    \"before\" | \"after\"\n\n                            \n                        \n                            Default value: 'after'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableClear\n                    \n                    \n                        Overrides the disable clear value of the containing TsSort for this TsSortable\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:95\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        start\n                    \n                    \n                        Overrides the sort start value of the containing TsSort for this TsSortable\n\n                            \n                            Type:    \"asc\" | \"desc\"\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:89\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ts-sort-header\n                    \n                    \n                        ID of this sort header. If used within the context of a CdkColumnDef, this will default to\nthe column's name.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:76\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _handleClick\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _handleClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            Handles click events on the header\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _isDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:170\n                            \n                        \n\n\n                \n                    \n                            Whether this TsSortHeader is disabled\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _isSorted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _isSorted()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:161\n                            \n                        \n\n\n                \n                    \n                            Whether this TsSortHeader is currently sorted in either ascending or descending order\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Deregister sort and unsubscribe from observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Default to cdk column name\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _cdkColumnDef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _cdkColumnDef:     CdkColumnDef\n\n                    \n                \n                    \n                        \n                            Type :     CdkColumnDef\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disableClear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disableClear:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _intl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _intl:     TsSortHeaderIntl\n\n                    \n                \n                    \n                        \n                            Type :     TsSortHeaderIntl\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _sort:     TsSortDirective\n\n                    \n                \n                    \n                        \n                            Type :     TsSortDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:110\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disableClear\n                    \n                \n\n\n                \n                    \n                        setdisableClear(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:98\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { untilComponentDestroyed } from '@terminus/ngx-tools';\nimport { CdkColumnDef } from '@angular/cdk/table';\nimport {\n  merge,\n} from 'rxjs';\n\nimport { TsSortDirective } from './sort.directive';\nimport { TsSortableItem } from './sort.directive';\nimport { TsSortHeaderIntl } from './sort-header-intl';\nimport { getSortHeaderNotContainedWithinSortError } from './sort-errors';\nimport { tsSortAnimations } from './sort-animations';\n\n\n// Boilerplate for applying mixins to the sort header.\nexport class TsSortHeaderBase {}\nexport const _TsSortHeaderMixinBase = mixinDisabled(TsSortHeaderBase);\n\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent TsSortDirective.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\n@Component({\n  // NOTE(B$): This component needs to be added to another component so we need a non-element\n  // selector\n  // tslint:disable: component-selector\n  selector: '[ts-sort-header]',\n  // tslint:enable: component-selector\n  exportAs: 'tsSortHeader',\n  templateUrl: './sort-header.component.html',\n  styleUrls: ['./sort-header.component.scss'],\n  host: {\n    class: 'ts-sortable',\n    '[class.ts-sort-header-sorted]': '_isSorted()',\n    '[class.ts-sort-header-disabled]': '_isDisabled()',\n    '(click)': '_handleClick()',\n  },\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  animations: [\n    tsSortAnimations.indicator,\n    tsSortAnimations.leftPointer,\n    tsSortAnimations.rightPointer,\n    tsSortAnimations.indicatorToggle,\n  ],\n})\nexport class TsSortHeaderComponent extends _TsSortHeaderMixinBase implements TsSortableItem, CanDisable, OnInit, OnDestroy  {\n  /**\n   * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n   * the column's name.\n   */\n  // NOTE(B$): Renaming input so that we can pull a value from the primary directive\n  // tslint:disable: no-input-rename\n  @Input('ts-sort-header')\n  id!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Sets the position of the arrow that displays when sorted\n   */\n  @Input()\n  arrowPosition: 'before' | 'after' = 'after';\n\n  /**\n   * Overrides the sort start value of the containing TsSort for this TsSortable\n   */\n  @Input()\n  start!: 'asc' | 'desc';\n\n  /**\n   * Overrides the disable clear value of the containing TsSort for this TsSortable\n   */\n  @Input()\n  get disableClear(): boolean {\n    return this._disableClear;\n  }\n  set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  private _disableClear!: boolean;\n\n\n  /**\n   * Check for _sort and set up auto-change-detection\n   */\n  constructor(\n    public _intl: TsSortHeaderIntl,\n    changeDetectorRef: ChangeDetectorRef,\n    @Optional() public _sort: TsSortDirective,\n    @Optional() public _cdkColumnDef: CdkColumnDef,\n  ) {\n    super();\n\n    if (!_sort && isDevMode()) {\n      throw getSortHeaderNotContainedWithinSortError();\n    }\n\n    // Mark directive for change detection after any of these changes\n    merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n      .pipe(\n        untilComponentDestroyed(this),\n      )\n      .subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n\n  /**\n   * Default to cdk column name\n   */\n  public ngOnInit(): void {\n    if (!this.id && this._cdkColumnDef) {\n      this.id = this._cdkColumnDef.name;\n    }\n\n    this._sort.register(this);\n  }\n\n\n  /**\n   * Deregister sort and unsubscribe from observables\n   */\n  public ngOnDestroy(): void {\n    this._sort.deregister(this);\n  }\n\n\n  /**\n   * Handles click events on the header\n   */\n  public _handleClick() {\n    if (!this._isDisabled()) {\n      this._sort.sort(this);\n    }\n  }\n\n\n  /**\n   * Whether this TsSortHeader is currently sorted in either ascending or descending order\n   */\n  public _isSorted() {\n    return this._sort.active == this.id &&\n        (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n  }\n\n\n  /**\n   * Whether this TsSortHeader is disabled\n   */\n  public _isDisabled() {\n    return this._sort.disabled || this.disabled;\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n\n      \n        \n        \n        \n      \n    \n  \n\n\n\n  &nbsp;{{ _intl.sortDescriptionLabel(id, _sort.direction) }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                             {{ _intl.sortDescriptionLabel(id, _sort.direction) }}'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsSortHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsSortHeaderIntl.html":{"url":"injectables/TsSortHeaderIntl.html","title":"injectable - TsSortHeaderIntl","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsSortHeaderIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort-header-intl.ts\n        \n\n            \n                Description\n            \n            \n                To modify the labels and text displayed, create a new instance of TsSortHeaderIntl and\ninclude it in a custom provider.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changes\n                            \n                            \n                                sortButtonLabel\n                            \n                            \n                                sortDescriptionLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changes:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header-intl.ts:21\n                            \n                        \n\n                \n                    \n                        Stream that emits whenever the labels here are changed. Use this to notify\ncomponents if the labels have changed after initialization.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortButtonLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortButtonLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : (id: string) => {\n    return `Change sorting for ${id}`;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header-intl.ts:26\n                            \n                        \n\n                \n                    \n                        ARIA label for the sorting button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortDescriptionLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortDescriptionLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : (id: string, direction: TsSortDirection) => {\n    return `Sorted by ${id} ${direction === 'asc' ? 'ascending' : 'descending'}`;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header-intl.ts:33\n                            \n                        \n\n                \n                    \n                        A label to describe the current sort (visible only to screenreaders)\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { TsSortDirection } from './sort.directive';\n\n\n/**\n * To modify the labels and text displayed, create a new instance of TsSortHeaderIntl and\n * include it in a custom provider.\n */\n@Injectable()\nexport class TsSortHeaderIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  changes: Subject = new Subject();\n\n  /**\n   * ARIA label for the sorting button\n   */\n  sortButtonLabel = (id: string) => {\n    return `Change sorting for ${id}`;\n  }\n\n  /**\n   * A label to describe the current sort (visible only to screenreaders)\n   */\n  sortDescriptionLabel = (id: string, direction: TsSortDirection) => {\n    return `Sorted by ${id} ${direction === 'asc' ? 'ascending' : 'descending'}`;\n  }\n}\n\n\n/**\n * Factory to return an instance of TsSortHeaderIntl\n */\nexport function TS_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl: TsSortHeaderIntl) {\n  return parentIntl || new TsSortHeaderIntl();\n}\n\n\n/**\n * TsSortHeaderIntl provider declaration\n */\nexport const TS_SORT_HEADER_INTL_PROVIDER = {\n  // If there is already an TsSortHeaderIntl available, use that. Otherwise, provide a new one.\n  provide: TsSortHeaderIntl,\n  deps: [[new Optional(), new SkipSelf(), TsSortHeaderIntl]],\n  useFactory: TS_SORT_HEADER_INTL_PROVIDER_FACTORY,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsSortModule.html":{"url":"modules/TsSortModule.html","title":"module - TsSortModule","body":"\n                   \n\n\n\n\n  Modules\n  TsSortModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsSortModule\n\n\n\ncluster_TsSortModule_declarations\n\n\n\ncluster_TsSortModule_exports\n\n\n\n\nTsSortDirective\n\nTsSortDirective\n\n\n\nTsSortModule\n\nTsSortModule\n\nTsSortModule -->\n\nTsSortDirective->TsSortModule\n\n\n\n\n\nTsSortHeaderComponent\n\nTsSortHeaderComponent\n\nTsSortModule -->\n\nTsSortHeaderComponent->TsSortModule\n\n\n\n\n\nTsSortDirective \n\nTsSortDirective \n\nTsSortDirective  -->\n\nTsSortModule->TsSortDirective \n\n\n\n\n\nTsSortHeaderComponent \n\nTsSortHeaderComponent \n\nTsSortHeaderComponent  -->\n\nTsSortModule->TsSortHeaderComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Much of this was lifted directly from Angular Material. I highly recommend checking out their\nsource code: https://github.com/angular/material2/tree/master/src/lib/sort\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsSortDirective\n                            \n                            \n                                TsSortHeaderComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsSortDirective\n                            \n                            \n                                    TsSortHeaderComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsSortHeaderComponent } from './sort-header.component';\nimport { TS_SORT_HEADER_INTL_PROVIDER } from './sort-header-intl';\nimport { TsSortDirective } from './sort.directive';\n\nexport * from './sort-animations';\nexport * from './sort-header-intl';\nexport * from './sort-header.component';\nexport * from './sort.directive';\n\n\n/**\n * Much of this was lifted directly from Angular Material. I highly recommend checking out their\n * source code: https://github.com/angular/material2/tree/master/src/lib/sort\n */\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    TS_SORT_HEADER_INTL_PROVIDER,\n  ],\n  declarations: [\n    TsSortDirective,\n    TsSortHeaderComponent,\n  ],\n  exports: [\n    TsSortDirective,\n    TsSortHeaderComponent,\n  ],\n})\nexport class TsSortModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsSortState.html":{"url":"interfaces/TsSortState.html","title":"interface - TsSortState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsSortState\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.directive.ts\n        \n\n            \n                Description\n            \n            \n                The current sort state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        direction\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the column being sorted\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:     TsSortDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsSortDirection\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sort direction\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        \n\nTable of Contents\n\nAdding sort to table headers\nChanging the sort order\nDisabling sorting\nUsing sort with the ts-table\nAccessibility\n\n\nAdding sort to table headers\nTo add sorting behavior and styling to a set of table headers, add ts-sort-header to each header\nand provide an id that will identify it. These headers should be contained within a parent element\nwith the tsSort directive, which will emit a sortChange event when the user triggers sorting\non the header.\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\ntsSort will emit an sortChange event that contains the ID of the header triggered and the\ndirection to sort (asc or desc).\nChanging the sort order\nBy default, a sort header starts its sorting at asc and then desc. Triggering the sort header\nafter desc will remove sorting.\nTo reverse the sort order for all headers, set the tsSortStart to desc on the tsSort\ndirective. To reverse the order only for a specific header, set the start input only on the header\ninstead.\nTo prevent the user from clearing the sort sort state from an already sorted column, set\ntsSortDisableClear to true on the tsSort to affect all headers, or set disableClear to true on\na specific header.\nDisabling sorting\nIf you want to prevent the user from changing the sorting order of any column, you can use the\ntsSortDisabled binding on the ts-sort, or the disabled on an single ts-sort-header.\nUsing sort with the ts-table\nWhen used on an ts-table header, it is not required to set an ts-sort-header id on because by\ndefault it will use the id of the column.\nAccessibility\nThe aria-label for the sort button can be set in TsSortHeaderIntl.\n\n    \n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n} from './sort-errors';\n\n\n/**\n * Define the allowed sort directions for {@link TsSort}\n */\nexport type TsSortDirection\n  = 'asc'\n  | 'desc'\n  | ''\n;\n\n\n/**\n * Interface for a directive that holds sorting state consumed by `TsSortHeaderComponent`\n */\nexport interface TsSortableItem {\n  /**\n   * The id of the column being sorted\n   */\n  id: string;\n\n  /**\n   * Starting sort direction\n   */\n  start: 'asc' | 'desc';\n\n  /**\n   * Whether to disable clearing the sorting state\n   */\n  disableClear: boolean;\n}\n\n\n/**\n * The current sort state\n */\nexport interface TsSortState {\n  /**\n   * The id of the column being sorted\n   */\n  active: string;\n\n  /**\n   * The sort direction\n   */\n  direction: TsSortDirection;\n}\n\n\n// Boilerplate for applying mixins to TsSort.\nexport class TsSortBase {}\nexport const _TsSortMixinBase = mixinDisabled(TsSortBase);\n\n\n/**\n * Container for TsSortables to manage the sort state and provide default sort parameters\n */\n@Directive({\n  selector: '[tsSort]',\n  exportAs: 'tsSort',\n  inputs: ['disabled: tsSortDisabled'],\n})\nexport class TsSortDirective extends _TsSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /**\n   * Collection of all registered sortables that this directive manages\n   */\n  private sortables = new Map();\n\n  /**\n   * Used to notify any child components listening to state changes\n   */\n  public _stateChanges = new Subject();\n\n  /**\n   * The id of the most recently sorted TsSortable\n   */\n  @Input('tsSortActive')\n  public active!: string;\n\n  /**\n   * The direction to set when an TsSortable is initially sorted.\n   *\n   * May be overriden by the TsSortable's sort start.\n   */\n  @Input('tsSortStart')\n  public start: 'asc' | 'desc' = 'asc';\n\n  /**\n   * The sort direction of the currently active TsSortable\n   */\n  @Input('tsSortDirection')\n  public set direction(direction: TsSortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  public get direction(): TsSortDirection {\n    return this._direction;\n  }\n  private _direction: TsSortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   *\n   * May be overriden by the TsSortable's disable clear input.\n   */\n  @Input('tsSortDisableClear')\n  public set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  public get disableClear() {\n    return this._disableClear;\n  }\n  private _disableClear: boolean = false;\n\n  /**\n   * Event emitted when the user changes either the active sort or sort direction\n   */\n  @Output('tsSortChange')\n  readonly sortChange = new EventEmitter();\n\n\n  /**\n   * Trigger next on all changes\n   */\n  public ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n\n  /**\n   * Complete the observable on destroy\n   */\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n\n  /**\n   * Register function to be used by the contained TsSortables. Adds the TsSortable to the\n   * collection of TsSortables.\n   */\n  register(sortable: TsSortableItem): void {\n    if (!sortable.id && isDevMode()) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id) && isDevMode()) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n\n  /**\n   * Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\n   * collection of contained TsSortables.\n   */\n  deregister(sortable: TsSortableItem): void {\n    this.sortables.delete(sortable.id);\n  }\n\n\n  /**\n   * Sets the active sort id and determines the new sort direction\n   */\n  sort(sortable: TsSortableItem): void {\n    if (this.active !== sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n\n  /**\n   * Returns the next sort direction of the active sortable, checking for potential overrides\n   */\n  getNextSortDirection(sortable: TsSortableItem): TsSortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    const sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n}\n\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): TsSortDirection[] {\n  const sortOrder: TsSortDirection[] = ['asc', 'desc'];\n\n  if (start === 'desc') {\n    sortOrder.reverse();\n  }\n\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n\n  return sortOrder;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsSortableItem.html":{"url":"interfaces/TsSortableItem.html","title":"interface - TsSortableItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsSortableItem\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.directive.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a directive that holds sorting state consumed by TsSortHeaderComponent\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        disableClear\n                                \n                                \n                                        id\n                                \n                                \n                                        start\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableClear\n                                    \n                                \n                                \n                                    \n                                        disableClear:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to disable clearing the sorting state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the column being sorted\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:     \"asc\" | \"desc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"asc\" | \"desc\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Starting sort direction\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        \n\nTable of Contents\n\nAdding sort to table headers\nChanging the sort order\nDisabling sorting\nUsing sort with the ts-table\nAccessibility\n\n\nAdding sort to table headers\nTo add sorting behavior and styling to a set of table headers, add ts-sort-header to each header\nand provide an id that will identify it. These headers should be contained within a parent element\nwith the tsSort directive, which will emit a sortChange event when the user triggers sorting\non the header.\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\ntsSort will emit an sortChange event that contains the ID of the header triggered and the\ndirection to sort (asc or desc).\nChanging the sort order\nBy default, a sort header starts its sorting at asc and then desc. Triggering the sort header\nafter desc will remove sorting.\nTo reverse the sort order for all headers, set the tsSortStart to desc on the tsSort\ndirective. To reverse the order only for a specific header, set the start input only on the header\ninstead.\nTo prevent the user from clearing the sort sort state from an already sorted column, set\ntsSortDisableClear to true on the tsSort to affect all headers, or set disableClear to true on\na specific header.\nDisabling sorting\nIf you want to prevent the user from changing the sorting order of any column, you can use the\ntsSortDisabled binding on the ts-sort, or the disabled on an single ts-sort-header.\nUsing sort with the ts-table\nWhen used on an ts-table header, it is not required to set an ts-sort-header id on because by\ndefault it will use the id of the column.\nAccessibility\nThe aria-label for the sort button can be set in TsSortHeaderIntl.\n\n    \n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n} from './sort-errors';\n\n\n/**\n * Define the allowed sort directions for {@link TsSort}\n */\nexport type TsSortDirection\n  = 'asc'\n  | 'desc'\n  | ''\n;\n\n\n/**\n * Interface for a directive that holds sorting state consumed by `TsSortHeaderComponent`\n */\nexport interface TsSortableItem {\n  /**\n   * The id of the column being sorted\n   */\n  id: string;\n\n  /**\n   * Starting sort direction\n   */\n  start: 'asc' | 'desc';\n\n  /**\n   * Whether to disable clearing the sorting state\n   */\n  disableClear: boolean;\n}\n\n\n/**\n * The current sort state\n */\nexport interface TsSortState {\n  /**\n   * The id of the column being sorted\n   */\n  active: string;\n\n  /**\n   * The sort direction\n   */\n  direction: TsSortDirection;\n}\n\n\n// Boilerplate for applying mixins to TsSort.\nexport class TsSortBase {}\nexport const _TsSortMixinBase = mixinDisabled(TsSortBase);\n\n\n/**\n * Container for TsSortables to manage the sort state and provide default sort parameters\n */\n@Directive({\n  selector: '[tsSort]',\n  exportAs: 'tsSort',\n  inputs: ['disabled: tsSortDisabled'],\n})\nexport class TsSortDirective extends _TsSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /**\n   * Collection of all registered sortables that this directive manages\n   */\n  private sortables = new Map();\n\n  /**\n   * Used to notify any child components listening to state changes\n   */\n  public _stateChanges = new Subject();\n\n  /**\n   * The id of the most recently sorted TsSortable\n   */\n  @Input('tsSortActive')\n  public active!: string;\n\n  /**\n   * The direction to set when an TsSortable is initially sorted.\n   *\n   * May be overriden by the TsSortable's sort start.\n   */\n  @Input('tsSortStart')\n  public start: 'asc' | 'desc' = 'asc';\n\n  /**\n   * The sort direction of the currently active TsSortable\n   */\n  @Input('tsSortDirection')\n  public set direction(direction: TsSortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  public get direction(): TsSortDirection {\n    return this._direction;\n  }\n  private _direction: TsSortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   *\n   * May be overriden by the TsSortable's disable clear input.\n   */\n  @Input('tsSortDisableClear')\n  public set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  public get disableClear() {\n    return this._disableClear;\n  }\n  private _disableClear: boolean = false;\n\n  /**\n   * Event emitted when the user changes either the active sort or sort direction\n   */\n  @Output('tsSortChange')\n  readonly sortChange = new EventEmitter();\n\n\n  /**\n   * Trigger next on all changes\n   */\n  public ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n\n  /**\n   * Complete the observable on destroy\n   */\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n\n  /**\n   * Register function to be used by the contained TsSortables. Adds the TsSortable to the\n   * collection of TsSortables.\n   */\n  register(sortable: TsSortableItem): void {\n    if (!sortable.id && isDevMode()) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id) && isDevMode()) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n\n  /**\n   * Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\n   * collection of contained TsSortables.\n   */\n  deregister(sortable: TsSortableItem): void {\n    this.sortables.delete(sortable.id);\n  }\n\n\n  /**\n   * Sets the active sort id and determines the new sort direction\n   */\n  sort(sortable: TsSortableItem): void {\n    if (this.active !== sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n\n  /**\n   * Returns the next sort direction of the active sortable, checking for potential overrides\n   */\n  getNextSortDirection(sortable: TsSortableItem): TsSortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    const sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n}\n\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): TsSortDirection[] {\n  const sortOrder: TsSortDirection[] = ['asc', 'desc'];\n\n  if (start === 'desc') {\n    sortOrder.reverse();\n  }\n\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n\n  return sortOrder;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsSpacingModule.html":{"url":"modules/TsSpacingModule.html","title":"module - TsSpacingModule","body":"\n                   \n\n\n\n\n  Modules\n  TsSpacingModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsSpacingModule\n\n\n\ncluster_TsSpacingModule_declarations\n\n\n\ncluster_TsSpacingModule_exports\n\n\n\n\nTsVerticalSpacingDirective\n\nTsVerticalSpacingDirective\n\n\n\nTsSpacingModule\n\nTsSpacingModule\n\nTsSpacingModule -->\n\nTsVerticalSpacingDirective->TsSpacingModule\n\n\n\n\n\nTsVerticalSpacingDirective \n\nTsVerticalSpacingDirective \n\nTsVerticalSpacingDirective  -->\n\nTsSpacingModule->TsVerticalSpacingDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/spacing/spacing.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsVerticalSpacingDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsVerticalSpacingDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsVerticalSpacingDirective } from './vertical-spacing.directive';\n\nexport * from './vertical-spacing.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TsVerticalSpacingDirective,\n  ],\n  exports: [\n    TsVerticalSpacingDirective,\n  ],\n})\nexport class TsSpacingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsTableComponent.html":{"url":"components/TsTableComponent.html","title":"component - TsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsTableComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/table/table.component.ts\n\n\n    \n        Description\n    \n    \n        Wrapper for the CdkTable with Material design styles.\n\n    \n\n    \n        Extends\n    \n    \n            CdkTable\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsTable\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-table\n            \n\n            \n                styleUrls\n                table.component.scss\n            \n\n\n            \n                template\n                \n  \n    \n    \n    \n  \n\n\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n\nTable of Contents\n\nBasic usage\n1. Define the table's columns\n2. Define the table's rows\n3. Provide data\n4. Full HTML example\n\n\nDynamically update table data\nDynamic columns\nSorting by column\nRow selection\nNo-wrap for a column\nMin-width for a column\nFull example with pagination, sorting and dynamic columns\n\n\nBasic usage\n1. Define the table's columns\nDefine the table's columns. Each column definition should be given a unique name and contain the\ncontent for its header and row cells.\nHere's a simple column definition with the name userName. The header cell contains the text Username\nand the row cell will render the name property of each row's data.\n\n  \n    Username\n  \n\n  \n    {{ item.username }}\n  \n2. Define the table's rows\nAfter defining your columns, provide the header and data row templates that will be rendered out by\nthe table. Each row needs to be given a list of the columns that it should contain. The order of the\nnames will define the order of the cells rendered.\nIt is not required to provide a list of all the defined column names, but only the ones that you\nwant to have rendered.\n\n\n\n\n\n3. Provide data\nThe column and row definitions now capture how data will render - all that's left is to provide the\ndata itself.\nCreate an instance of TsTableDataSource and set the items to be displayed to the data property.\nthis.myDataSource = new TsTableDataSource();\nthis.myDataSource.data = dataToRender;\n  ...\nThe DataSource can be seeded with initial data:\nthis.myDataSource = new TsTableDataSource(INITIAL_DATA);An interface for your table item can be passed to TsTableDataSource for stricter typing:\nexport interface MyTableItem {\n  name: string;\n  id: number;\n}\n\nthis.myDataSource: TsTableDataSource = new TsTableDataSource(INITIAL_DATA)4. Full HTML example\n\n\n\n  \n  \n    \n      Username\n    \n\n    \n      {{ item.username }}\n    \n  \n\n  \n  \n    \n      Age\n    \n\n    \n      {{ item.age }}\n    \n  \n\n  \n  \n  \n\n  \n  \n  \n\nDynamically update table data\nYour data source was created during the bootstraping of your component:\nthis.myDataSource = new TsTableDataSource();Simply assign the new data to myDataSource.data. The table will flush the old data and display the\nnew data:\nthis.myDataSource.data = dataToRender;Dynamic columns\nEnable dynamic columns using a TsSelectComponent:\n// Define a data source\nthis.myDataSource = new TsTableDataSource();\n\n// Define all available columns (`TsSelectComponent` requires an array of objects)\nallColumns = [\n  {\n    name: 'Username',\n    myValue: 'username',\n  },\n  {\n    name: 'Age',\n    myValue: 'age',\n  },\n];Both the TsSelectComponent and the tsRowDef columns input should reference the same ngModel\n(displayedColumns in this example).\n\n\n\n  \n\n  \n  \n  \n\n  \n  \n  \n\nSorting by column\nTo add sorting behavior to the table, add the tsSort directive to the  and add\nts-sort-header to each column header cell that should trigger sorting. Provide the\nTsSortDirective directive to the TsTableDataSource and it will automatically listen for sorting\nchanges and change the order of data rendered by the table.\nBy default, the TsTableDataSource sorts with the assumption that the sorted column's name matches\nthe data property name that the column displays. For example, the following column definition is\nnamed position, which matches the name of the property displayed in the row cell.\n\n\n\n  \n  \n    \n    \n      Position\n    \n\n    \n      \n      {{ element.position }}\n    \n  \n\nIn your class, get a reference to the TsSortDirective using @ViewChild:\nimport { AfterViewInit } from '@angular/core';\nimport { TsSortDirective } from '@terminus/ui';\n\nexport class TableComponent implements AfterViewInit {\n  // Get a reference to the TsSortDirective instance\n  @ViewChild(TsSortDirective) sort: TsSortDirective;\n\n  public ngAfterViewInit(): void {\n    // Subscribe to the sortChange event to reset pagination, fetch new data, etc\n    this.sort.sortChange.subscribe(() => {\n      // Table was sorted - go get new data!\n    });\n  }\n}Row selection\nPossible but not implemented until a valid use-case arises.\nNo-wrap for a column\nSometimes a column's content should not wrap even at small viewport sizes. Adding the directive\nnoWrap=\"true\" to the column will keep then contents from wrapping regardless of the viewport\nwidth.\n\n\n  \n    Created\n  \n  \n    {{ item.created_at | date:shortDate }}\n  \nMin-width for a column\nDefining a minimum width for specific columns can help the layout not compress certain columns past\na readable point. Add the directive minWidth and pass it any valid CSS min-width value (100px,\n10%, 12rem, etc..).\n\n\n  \n    Created\n  \n  \n    {{ item.created_at | date:shortDate }}\n  \n\nFull example with pagination, sorting and dynamic columns\nimport {\n  Component,\n  ViewChild,\n  AfterViewInit,\n} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { merge, Observable, of } from 'rxjs';\nimport { startWith } from 'rxjs/operators/startWith';\nimport { map } from 'rxjs/operators/map';\nimport { switchMap } from 'rxjs/operators/switchMap';\nimport { catchError } from 'rxjs/operators/catchError';\n\nimport {\n  TsTableDataSource,\n  TsSortDirective,\n  TsPaginatorComponent,\n  TsPaginatorMenuItem,\n} from '@terminus/ui';\n\n\n@Component({\n  selector: 'my-component',\n  template: `\n    \n    \n      \n    \n\n\n    \n\n      \n        \n          Created\n        \n        \n          {{ item.created_at | date:shortDate }}\n        \n      \n\n      \n        \n          Number\n        \n        \n          {{ item.number }}\n        \n      \n\n      \n        \n          Title\n        \n        \n          {{ item.title }}\n        \n      \n\n      \n        \n          State\n        \n        \n          {{ item.state }}\n        \n      \n\n      \n        \n          Comments\n        \n        \n          {{ item.comments }}\n        \n      \n\n      \n      \n\n      \n      \n\n    \n\n\n    \n    \n      \n    \n  `,\n})\nexport class TableComponent implements AfterViewInit {\n  allColumns: any[] = [\n    {\n      name: 'Created',\n      value: 'created',\n    },\n    {\n      name: 'Title',\n      value: 'title',\n    },\n    {\n      name: 'Comments',\n      value: 'comments',\n    },\n    {\n      name: 'State',\n      value: 'state',\n    },\n    {\n      name: 'Number',\n      value: 'number',\n    },\n  ];\n  displayedColumns: string[] = [\n    'created',\n    'number',\n    'title',\n    'state',\n    'comments',\n  ];\n  exampleDatabase: ExampleHttpDao | null;\n  dataSource: TsTableDataSource = new TsTableDataSource();\n  resultsLength: number = 0;\n\n  @ViewChild(TsSortDirective)\n  sort: TsSortDirective;\n\n  @ViewChild(TsPaginatorComponent)\n  paginator: TsPaginatorComponent;\n\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.exampleDatabase = new ExampleHttpDao(this.http);\n\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => {\n      this.paginator.currentPageIndex = 0;\n    });\n\n    // Fetch new data anytime the sort is changed, the page is changed, or the records shown per\n    // page is changed\n    merge(this.sort.sortChange, this.paginator.pageSelect, this.paginator.recordsPerPageChange)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          return this.exampleDatabase.getRepoIssues(\n            this.sort.active,\n            this.sort.direction,\n            this.paginator.currentPageIndex,\n            this.paginator.recordsPerPage,\n          );\n        }),\n        map(data => {\n          console.log('Demo: fetched data: ', data)\n          this.resultsLength = data.total_count;\n\n          return data.items;\n        }),\n        catchError(() => {\n          // Catch if the GitHub API has reached its rate limit. Return empty data.\n          console.warn('GitHub API rate limit has been reached!')\n          return of([]);\n        })\n      ).subscribe(data => {\n        this.dataSource.data = data;\n      });\n  }\n}\n\n\nexport interface GithubApi {\n  items: GithubIssue[];\n  total_count: number;\n}\n\nexport interface GithubIssue {\n  created_at: string;\n  number: string;\n  state: string;\n  title: string;\n}\n\n/**\n * An example database that this example uses to retrieve data for the table.\n */\nexport class ExampleHttpDao {\n  constructor(private http: HttpClient) {}\n\n  getRepoIssues(sort: string, order: string, page: number, perPage: number): Observable {\n    const href = 'https://api.github.com/search/issues';\n    const requestUrl = `${href}?q=repo:GetTerminus/terminus-ui`;\n    const requestParams = `&sort=${sort}&order=${order}&page=${page + 1}&per_page=${perPage}`;\n\n    return this.http.get(`${requestUrl}${requestParams}`);\n  }\n}\n    \n\n    \n        import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CdkTable,\n} from '@angular/cdk/table';\n\n\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\n@Component({\n  selector: 'ts-table',\n  template: `\n    \n      \n        \n        \n        \n      \n    \n  `,\n  styleUrls: ['./table.component.scss'],\n  host: {\n    class: 'ts-table',\n  },\n  exportAs: 'tsTable',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TsTableComponent extends CdkTable { }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsTableDataSource.html":{"url":"classes/TsTableDataSource.html","title":"class - TsTableDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsTableDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/table-data-source.ts\n        \n\n            \n                Description\n            \n            \n                Data source that accepts a client-side data array and includes native support of filtering,\nsorting (using TsSortDirective), and paginator (using TsPaginatorComponent).\n\n            \n\n\n            \n                Implements\n            \n            \n                        DataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _data\n                            \n                            \n                                _renderChangesSubscription\n                            \n                            \n                                    Private\n                                _renderData\n                            \n                            \n                                filteredData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _updateChangeSubscription\n                            \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialData: T[])\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/table/table-data-source.ts:48\n                            \n                        \n\n                \n                    \n                            Set up data and change subscriptions\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialData\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _data:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:19\n                            \n                        \n\n                \n                    \n                        Stream that emits when a new data array is set on the data source.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _renderChangesSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _renderChangesSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:30\n                            \n                        \n\n                \n                    \n                        Subscription to the changes that should trigger an update to the table's rendered rows, such\nas filtering, sorting, pagination, or base data changes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _renderData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _renderData:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:24\n                            \n                        \n\n                \n                    \n                        Stream emitting render data to the table (depends on ordered data changes).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filteredData:     T[]\n\n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:38\n                            \n                        \n\n                \n                    \n                        The filtered set of data that has been matched by the filter string, or all the data if there\nis no filter. Useful for knowing the set of data the table represents.\nFor example, a 'selectAll()' function would likely want to select the set of filtered data\nshown to the user rather than all the data.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _updateChangeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n_updateChangeSubscription()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:65\n                            \n                        \n\n\n                \n                    \n                            Subscribe to changes that should trigger an update to the table's rendered rows. When the\nchanges occur, process the current state of the filter, sort, and pagination along with the\nprovided base data and send it to the table for rendering.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connect\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:80\n                            \n                        \n\n\n                \n                    \n                            Used by the TsTableComponent. Called when it connects to the data source.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:86\n                            \n                        \n\n\n                \n                    \n                            Used by the TsTableComponent. Called when it is destroyed. No-op.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/table/table-data-source.ts:46\n                                \n                            \n\n                \n                    \n                        setdata(data: [])\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/table/table-data-source.ts:43\n                                \n                            \n                    \n                        \n                                Array of data that should be rendered by the table, where each object represents one row.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { DataSource } from '@angular/cdk/table';\nimport {\n  BehaviorSubject,\n  Subscription,\n} from 'rxjs';\n\n\n\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using {@link TsSortDirective}), and paginator (using {@link TsPaginatorComponent}).\n */\nexport class TsTableDataSource implements DataSource {\n  /**\n   * Stream that emits when a new data array is set on the data source.\n   */\n  private _data: BehaviorSubject;\n\n  /**\n   * Stream emitting render data to the table (depends on ordered data changes).\n   */\n  private _renderData = new BehaviorSubject([]);\n\n  /**\n   * Subscription to the changes that should trigger an update to the table's rendered rows, such\n   * as filtering, sorting, pagination, or base data changes.\n   */\n  _renderChangesSubscription!: Subscription;\n\n  /**\n   * The filtered set of data that has been matched by the filter string, or all the data if there\n   * is no filter. Useful for knowing the set of data the table represents.\n   * For example, a 'selectAll()' function would likely want to select the set of filtered data\n   * shown to the user rather than all the data.\n   */\n  filteredData!: T[];\n\n  /**\n   * Array of data that should be rendered by the table, where each object represents one row.\n   */\n  set data(data: T[]) {\n    this._data.next(data);\n  }\n  get data() {\n    return this._data.value;\n  }\n\n\n  /**\n   * Set up data and change subscriptions\n   */\n  constructor(initialData: T[] = []) {\n    this._data = new BehaviorSubject(initialData);\n    this._updateChangeSubscription();\n  }\n\n\n  /**\n   * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n   * changes occur, process the current state of the filter, sort, and pagination along with the\n   * provided base data and send it to the table for rendering.\n   */\n  _updateChangeSubscription(): void {\n    if (this._renderChangesSubscription) {\n      this._renderChangesSubscription.unsubscribe();\n    }\n\n    // Watch for base data or filter changes to provide a filtered set of data.\n    this._renderChangesSubscription = this._data\n    // Watched for paged data changes and send the result to the table to render.\n    .subscribe((data) => this._renderData.next(data));\n  }\n\n\n  /**\n   * Used by the {@link TsTableComponent}. Called when it connects to the data source.\n   */\n  connect() { return this._renderData; }\n\n\n  /**\n   * Used by the {@link TsTableComponent}. Called when it is destroyed. No-op.\n   */\n  disconnect() {}\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsTableModule.html":{"url":"modules/TsTableModule.html","title":"module - TsTableModule","body":"\n                   \n\n\n\n\n  Modules\n  TsTableModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsTableModule\n\n\n\ncluster_TsTableModule_declarations\n\n\n\ncluster_TsTableModule_TsCellDefDirective_providers\n\n\n\ncluster_TsTableModule_imports\n\n\n\ncluster_TsTableModule_exports\n\n\n\n\nTsCellDefDirective\n\nTsCellDefDirective\n\n\n\nTsTableModule\n\nTsTableModule\n\nTsTableModule -->\n\nTsCellDefDirective->TsTableModule\n\n\n\n\n\nTsCellDirective\n\nTsCellDirective\n\nTsTableModule -->\n\nTsCellDirective->TsTableModule\n\n\n\n\n\nTsColumnDefDirective\n\nTsColumnDefDirective\n\nTsTableModule -->\n\nTsColumnDefDirective->TsTableModule\n\n\n\n\n\nTsHeaderCellDefDirective\n\nTsHeaderCellDefDirective\n\nTsTableModule -->\n\nTsHeaderCellDefDirective->TsTableModule\n\n\n\n\n\nTsHeaderCellDirective\n\nTsHeaderCellDirective\n\nTsTableModule -->\n\nTsHeaderCellDirective->TsTableModule\n\n\n\n\n\nTsHeaderRowComponent\n\nTsHeaderRowComponent\n\nTsTableModule -->\n\nTsHeaderRowComponent->TsTableModule\n\n\n\n\n\nTsHeaderRowDefDirective\n\nTsHeaderRowDefDirective\n\nTsTableModule -->\n\nTsHeaderRowDefDirective->TsTableModule\n\n\n\n\n\nTsRowComponent\n\nTsRowComponent\n\nTsTableModule -->\n\nTsRowComponent->TsTableModule\n\n\n\n\n\nTsRowDefDirective\n\nTsRowDefDirective\n\nTsTableModule -->\n\nTsRowDefDirective->TsTableModule\n\n\n\n\n\nTsTableComponent\n\nTsTableComponent\n\nTsTableModule -->\n\nTsTableComponent->TsTableModule\n\n\n\n\n\nTsCellDefDirective \n\nTsCellDefDirective \n\nTsCellDefDirective  -->\n\nTsTableModule->TsCellDefDirective \n\n\n\n\n\nTsCellDirective \n\nTsCellDirective \n\nTsCellDirective  -->\n\nTsTableModule->TsCellDirective \n\n\n\n\n\nTsColumnDefDirective \n\nTsColumnDefDirective \n\nTsColumnDefDirective  -->\n\nTsTableModule->TsColumnDefDirective \n\n\n\n\n\nTsHeaderCellDefDirective \n\nTsHeaderCellDefDirective \n\nTsHeaderCellDefDirective  -->\n\nTsTableModule->TsHeaderCellDefDirective \n\n\n\n\n\nTsHeaderCellDirective \n\nTsHeaderCellDirective \n\nTsHeaderCellDirective  -->\n\nTsTableModule->TsHeaderCellDirective \n\n\n\n\n\nTsHeaderRowComponent \n\nTsHeaderRowComponent \n\nTsHeaderRowComponent  -->\n\nTsTableModule->TsHeaderRowComponent \n\n\n\n\n\nTsHeaderRowDefDirective \n\nTsHeaderRowDefDirective \n\nTsHeaderRowDefDirective  -->\n\nTsTableModule->TsHeaderRowDefDirective \n\n\n\n\n\nTsRowComponent \n\nTsRowComponent \n\nTsRowComponent  -->\n\nTsTableModule->TsRowComponent \n\n\n\n\n\nTsRowDefDirective \n\nTsRowDefDirective \n\nTsRowDefDirective  -->\n\nTsTableModule->TsRowDefDirective \n\n\n\n\n\nTsTableComponent \n\nTsTableComponent \n\nTsTableComponent  -->\n\nTsTableModule->TsTableComponent \n\n\n\n\n\n{ : , :  }\n\n{ : , :  }\n\nTsCellDefDirective -->\n\n{ : , :  }->TsCellDefDirective\n\n\n\nTsColumnDefDirective -->\n\n{ : , :  }->TsColumnDefDirective\n\n\n\nTsHeaderCellDefDirective -->\n\n{ : , :  }->TsHeaderCellDefDirective\n\n\n\nTsHeaderRowDefDirective -->\n\n{ : , :  }->TsHeaderRowDefDirective\n\n\n\nTsRowDefDirective -->\n\n{ : , :  }->TsRowDefDirective\n\n\n\n\n\nTsPaginatorModule\n\nTsPaginatorModule\n\nTsTableModule -->\n\nTsPaginatorModule->TsTableModule\n\n\n\n\n\nTsSortModule\n\nTsSortModule\n\nTsTableModule -->\n\nTsSortModule->TsTableModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/table/table.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Much of this was lifted directly from Angular Material. I highly recommend checking out their\nsource code: https://github.com/angular/material2/tree/master/src/lib/table\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCellDefDirective\n                            \n                            \n                                TsCellDirective\n                            \n                            \n                                TsColumnDefDirective\n                            \n                            \n                                TsHeaderCellDefDirective\n                            \n                            \n                                TsHeaderCellDirective\n                            \n                            \n                                TsHeaderRowComponent\n                            \n                            \n                                TsHeaderRowDefDirective\n                            \n                            \n                                TsRowComponent\n                            \n                            \n                                TsRowDefDirective\n                            \n                            \n                                TsTableComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsPaginatorModule\n                            \n                            \n                                    TsSortModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCellDefDirective\n                            \n                            \n                                    TsCellDirective\n                            \n                            \n                                    TsColumnDefDirective\n                            \n                            \n                                    TsHeaderCellDefDirective\n                            \n                            \n                                    TsHeaderCellDirective\n                            \n                            \n                                    TsHeaderRowComponent\n                            \n                            \n                                    TsHeaderRowDefDirective\n                            \n                            \n                                    TsRowComponent\n                            \n                            \n                                    TsRowDefDirective\n                            \n                            \n                                    TsTableComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { TsSortModule } from './../sort/sort.module';\nimport { TsPaginatorModule } from './../paginator/paginator.module';\nimport {\n  TsCellDirective,\n  TsCellDefDirective,\n  TsColumnDefDirective,\n  TsHeaderCellDirective,\n  TsHeaderCellDefDirective,\n} from './cell';\nimport {\n  TsHeaderRowComponent,\n  TsHeaderRowDefDirective,\n  TsRowComponent,\n  TsRowDefDirective,\n} from './row';\nimport { TsTableComponent } from './table.component';\n\nexport * from './table-data-source';\nexport * from './cell';\nexport * from './row';\nexport * from './table.component';\nexport * from './../sort/sort.module';\n\n\n/**\n * Much of this was lifted directly from Angular Material. I highly recommend checking out their\n * source code: https://github.com/angular/material2/tree/master/src/lib/table\n */\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CdkTableModule,\n    TsSortModule,\n    TsPaginatorModule,\n  ],\n  declarations: [\n    TsCellDefDirective,\n    TsCellDirective,\n    TsColumnDefDirective,\n    TsHeaderCellDefDirective,\n    TsHeaderCellDirective,\n    TsHeaderRowComponent,\n    TsHeaderRowDefDirective,\n    TsRowComponent,\n    TsRowDefDirective,\n    TsTableComponent,\n  ],\n  exports: [\n    TsCellDefDirective,\n    TsCellDirective,\n    TsColumnDefDirective,\n    TsHeaderCellDefDirective,\n    TsHeaderCellDirective,\n    TsHeaderRowComponent,\n    TsHeaderRowDefDirective,\n    TsRowComponent,\n    TsRowDefDirective,\n    TsTableComponent,\n  ],\n})\nexport class TsTableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsTimeAgoPipe.html":{"url":"pipes/TsTimeAgoPipe.html","title":"pipe - TsTimeAgoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsTimeAgoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/time-ago/time-ago.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsTimeAgo\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string | Date, comparedDate: string | Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/time-ago/time-ago.pipe.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string | Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        comparedDate\n                                                        \n                                                                    string | Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n  isDevMode,\n} from '@angular/core';\nimport {\n  isValid,\n  formatDistance,\n} from 'date-fns';\n\n\n@Pipe({\n  name: 'tsTimeAgo',\n})\nexport class TsTimeAgoPipe implements PipeTransform {\n  transform(value: string | Date, comparedDate: string | Date): string | undefined {\n    // Check for null values to avoid issues during data-binding\n    if (value == null || value === '') {\n      return;\n    }\n\n    // Check for date validity\n    if (!isValid(value) && isDevMode()) {\n      throw Error(`'${value}' is not a valid date.`);\n    }\n    if (!isValid(comparedDate) && isDevMode()) {\n      throw Error(`'${comparedDate}' is not a valid date.`);\n    }\n\n    // If dealing with a date objects, convert to strings\n    const date1: string = (typeof value === 'string') ? value : new Date(value).toISOString();\n    const date2: string =\n      (typeof comparedDate === 'string') ? comparedDate : new Date(comparedDate).toISOString();\n\n    return formatDistance(date1, date2);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsTitleCasePipe.html":{"url":"pipes/TsTitleCasePipe.html","title":"pipe - TsTitleCasePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsTitleCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/title-case/title-case.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsTitleCase\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/title-case/title-case.pipe.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\n\n\n@Pipe({\n  name: 'tsTitleCase',\n})\nexport class TsTitleCasePipe implements PipeTransform {\n  transform(value: string): string | undefined {\n    // Check for null values to avoid issues during data-binding\n    if (value == null || value === '') {\n      return;\n    }\n\n    return value.toLowerCase().split(' ').map((word) => {\n      return (word.charAt(0).toUpperCase() + word.slice(1));\n    }).join(' ');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsToggleComponent.html":{"url":"components/TsToggleComponent.html","title":"component - TsToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/toggle/toggle.component.ts\n\n\n    \n        Description\n    \n    \n        The is a toggle component\nQA CSS CLASSES\n\nqa-toggle: The toggle element\n\n\n    \n\n    \n        Extends\n    \n    \n            TsReactiveFormBaseComponent\n    \n\n\n    \n        Example\n    \n    \n                \n                    My Toggle!\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                ts-toggle\n            \n\n            \n                styleUrls\n                toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isChecked\n                            \n                            \n                                    Protected\n                                innerValue\n                            \n                            \n                                    Protected\n                                onChangeCallback\n                            \n                            \n                                    Protected\n                                onTouchedCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onBlur\n                            \n                            \n                                    Protected\n                                registerOnChange\n                            \n                            \n                                    Protected\n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                isChecked\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isRequired\n                            \n                            \n                                labelPosition\n                            \n                            \n                                name\n                            \n                            \n                                theme\n                            \n                            \n                                formControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                    \n                        Define the aria label\n\n                            \n                            Type:    string | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:73\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isChecked\n                    \n                    \n                        Allow the checked state to be set\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:79\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the toggle should be disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:92\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                    \n                        Define if the toggle is required\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:98\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                    \n                        Define the position of the label\n\n                            \n                            Type:    \"before\" | \"after\"\n\n                            \n                        \n                            Default value: 'after'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:104\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        Define the input name for the toggle\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'toggle'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:110\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:116\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        Define the form control to get access to validators\n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        Emit an event each time the toggle value changes\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:122\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onBlur\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onBlur()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:61\n                            \n                        \n\n\n                \n                    \n                            Set touched on blur\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:69\n                            \n                        \n\n\n                \n                    \n                            Register onChange callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:77\n                            \n                        \n\n\n                \n                    \n                            Register onTouched callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:85\n                            \n                        \n\n\n                \n                    \n                            Write value to inner value (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _isChecked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _isChecked:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            innerValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        innerValue:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:26\n                            \n                        \n\n                \n                    \n                        Define the internal data model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onChangeCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onChangeCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:31\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onTouchedCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onTouchedCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:36\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isChecked\n                    \n                \n\n                \n                    \n                        getisChecked()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:83\n                                \n                            \n\n                \n                    \n                        setisChecked(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:79\n                                \n                            \n                    \n                        \n                                Allow the checked state to be set\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Expose the MatSlideToggleChange event as TsSlideToggleChange. Used by {@link TsToggleComponent}\n */\nexport class TsSlideToggleChange extends MatSlideToggleChange {}\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via our base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsToggleComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * The is a toggle component\n *\n * #### QA CSS CLASSES\n * - `qa-toggle`: The toggle element\n *\n * @example\n * My Toggle!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss'],\n  host: {\n    class: 'ts-toggle',\n  },\n  providers: [CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsToggleComponent extends TsReactiveFormBaseComponent {\n  /**\n   * Define the aria label\n   */\n  @Input()\n  public ariaLabel: string | undefined;\n\n  /**\n   * Allow the checked state to be set\n   */\n  @Input()\n  public set isChecked(value: boolean) {\n    this._isChecked = coerceBooleanProperty(value);\n    this.value = this._isChecked;\n  }\n  public get isChecked(): boolean {\n    return this._isChecked;\n  }\n  private _isChecked: boolean = false;\n\n  /**\n   * Define if the toggle should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the toggle is required\n   */\n  @Input()\n  public isRequired: boolean = true;\n\n  /**\n   * Define the position of the label\n   */\n  @Input()\n  public labelPosition: 'before' | 'after' = 'after';\n\n  /**\n   * Define the input name for the toggle\n   */\n  @Input()\n  public name: string = 'toggle';\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit an event each time the toggle value changes\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsToggleModule.html":{"url":"modules/TsToggleModule.html","title":"module - TsToggleModule","body":"\n                   \n\n\n\n\n  Modules\n  TsToggleModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsToggleModule\n\n\n\ncluster_TsToggleModule_declarations\n\n\n\ncluster_TsToggleModule_TsToggleComponent_providers\n\n\n\ncluster_TsToggleModule_exports\n\n\n\n\nTsToggleComponent\n\nTsToggleComponent\n\n\n\nTsToggleModule\n\nTsToggleModule\n\nTsToggleModule -->\n\nTsToggleComponent->TsToggleModule\n\n\n\n\n\nTsToggleComponent \n\nTsToggleComponent \n\nTsToggleComponent  -->\n\nTsToggleModule->TsToggleComponent \n\n\n\n\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n\nTsToggleComponent -->\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR->TsToggleComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/toggle/toggle.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsToggleComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsToggleComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { TsToggleComponent } from './toggle.component';\n\nexport * from './toggle.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSlideToggleModule,\n  ],\n  exports: [\n    TsToggleComponent,\n  ],\n  declarations: [\n    TsToggleComponent,\n  ],\n})\nexport class TsToggleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsTooltipComponent.html":{"url":"components/TsTooltipComponent.html","title":"component - TsTooltipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsTooltipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/tooltip/tooltip.component.ts\n\n\n    \n        Description\n    \n    \n        This is the tooltip UI Component\nQA CSS CLASSES\n\nqa-tooltip : Placed on the span element used for this component\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    My Tooltip!\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-tooltip\n            \n\n            \n                styleUrls\n                tooltip.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tooltip.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasUnderline\n                            \n                            \n                                tooltipPosition\n                            \n                            \n                                tooltipValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hasUnderline\n                    \n                    \n                        Define whether there is a dotted underline shown on the text\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/tooltip/tooltip.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipPosition\n                    \n                    \n                        Define the position of the tooltip\n\n                            \n                            Type:    TsTooltipPositionTypes\n\n                            \n                        \n                            Default value: 'below'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/tooltip/tooltip.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipValue\n                    \n                    \n                        Define the content to display within the tooltip\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/tooltip/tooltip.component.ts:59\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\n\n\n/**\n * Define the accepted string values for the {@link TsTooltipComponent} position\n */\nexport type TsTooltipPositionTypes =\n  'left' |\n  'right' |\n  'above' |\n  'below' |\n  'before' |\n  'after'\n;\n\n\n/**\n * This is the tooltip UI Component\n *\n * #### QA CSS CLASSES\n *\n * - qa-tooltip : Placed on the span element used for this component\n *\n * @example\n * My Tooltip!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-tooltip',\n  templateUrl: './tooltip.component.html',\n  styleUrls: ['./tooltip.component.scss'],\n  host: {\n    class: 'ts-tooltip',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsTooltipComponent {\n  /**\n   * Define the position of the tooltip\n   */\n  @Input()\n  public tooltipPosition: TsTooltipPositionTypes = 'below';\n\n  /**\n   * Define the content to display within the tooltip\n   */\n  @Input()\n  public tooltipValue!: string;\n\n  /**\n   * Define whether there is a dotted underline shown on the text\n   */\n  @Input()\n  public hasUnderline: boolean = false;\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsTooltipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsTooltipModule.html":{"url":"modules/TsTooltipModule.html","title":"module - TsTooltipModule","body":"\n                   \n\n\n\n\n  Modules\n  TsTooltipModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsTooltipModule\n\n\n\ncluster_TsTooltipModule_declarations\n\n\n\ncluster_TsTooltipModule_exports\n\n\n\n\nTsTooltipComponent\n\nTsTooltipComponent\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsTooltipModule -->\n\nTsTooltipComponent->TsTooltipModule\n\n\n\n\n\nTsTooltipComponent \n\nTsTooltipComponent \n\nTsTooltipComponent  -->\n\nTsTooltipModule->TsTooltipComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/tooltip/tooltip.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsTooltipComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsTooltipComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { TsTooltipComponent } from './tooltip.component';\n\nexport * from './tooltip.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTooltipModule,\n  ],\n  exports: [\n    TsTooltipComponent,\n  ],\n  declarations: [\n    TsTooltipComponent,\n  ],\n})\nexport class TsTooltipModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsUser.html":{"url":"interfaces/TsUser.html","title":"interface - TsUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the user object interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fullName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                    \n                                \n                                \n                                    \n                                        fullName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's full name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsValidationMessageService.html":{"url":"injectables/TsValidationMessageService.html","title":"injectable - TsValidationMessageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsValidationMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/validation-messages/validation-message.service.ts\n        \n\n            \n                Description\n            \n            \n                Define a service that offers custom validators\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getValidatorErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getValidatorErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValidatorErrorMessage(validatorName: string, validatorValue?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-message.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Return the correct error message for a validator\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        validatorName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe name of the validator\n\n\n                                                        \n                                                \n                                                \n                                                        validatorValue\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe value of the validator\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The error message\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { format } from 'date-fns';\n\n\n/**\n * Define the error message for an invalid email\n */\nconst emailMessage = `Invalid email address.`;\n\n/**\n * Define the error message for an invalid credit card\n */\nconst creditCardMessage = `Invalid credit card number.`;\n\n/**\n * Define the error message for an invalid password\n */\nconst passwordMessage = `Password must be between 6 and 100 characters, and contain a number.`;\n\n\n/*\n * TODO: The consuming app will need a way to pass in the error messages config object so that\n * localization is supported. See https://github.com/GetTerminus/terminus-ui/issues/403\n */\n\n\n/**\n * Define a service that offers custom validators\n */\n@Injectable()\nexport class TsValidationMessageService {\n\n  /**\n   * Return the correct error message for a validator\n   *\n   * @param validatorName - The name of the validator\n   * @param validatorValue - The value of the validator\n   * @return The error message\n   */\n  public getValidatorErrorMessage(validatorName: string, validatorValue?: any): string {\n    const config: {[key: string]: string} = {\n      // Standard responses:\n      required: `Required`,\n      minlength: `Minimum length ${validatorValue.requiredLength}`,\n      maxlength: `Maximum length ${validatorValue.requiredLength}`,\n      // Custom responses:\n      creditCard: creditCardMessage,\n      email: emailMessage,\n      password: passwordMessage,\n      // TODO: Figure out how to abstract pattern messages out so they can be customized per\n      // pattern. (showing a regex pattern to an end user isn't helpful) and we need the ability to\n      // support multiple patterns\n      pattern: `Must contain only letters, numbers or spaces`,\n      maxDate: '',\n      minDate: '',\n      greaterThan: `${validatorValue.actual} is not greater than ${validatorValue.greaterThan}`,\n      greaterThanOrEqual: `${validatorValue.actual} is not greater than or equal to ${validatorValue.greaterThanOrEqual}`,\n      numbers: `Must contain at least ${validatorValue.numbers} numbers`,\n      lessThan: `${validatorValue.actual} must be less than ${validatorValue.lessThan}`,\n      lessThanOrEqual: `${validatorValue.actual} must be less than or equal to ${validatorValue.lessThanOrEqual}`,\n      notUnique: `${validatorValue.actual} has already been selected.`,\n      noResults: `No results found.`,\n      url: `'${validatorValue.actual}' must be a valid URL.`,\n      equalToControl: `'${validatorValue.actual}' must be equal to '${validatorValue.compareValue}'`,\n      lowercase: `Must contain at least ${validatorValue.lowercase} lowercase letters`,\n      uppercase: `Must contain at least ${validatorValue.uppercase} uppercase letters`,\n      fileSize: `Must be smaller than ${validatorValue.max}kb`,\n      fileType: `${validatorValue.actual} is not an accepted MIME type.`,\n      imageDimensions: ``,\n    };\n\n    if (validatorName === 'maxDate') {\n      const message = `Date must be before`;\n      config.maxDate = `${message} ${format(validatorValue.maxDate, 'M/D/YYYY')}`;\n    }\n\n    if (validatorName === 'minDate') {\n      const message = `Date must be after`;\n      config.minDate = `${message} ${format(validatorValue.minDate, 'M/D/YYYY')}`;\n    }\n\n    if (validatorName === 'imageDimensions') {\n      config.imageDimensions = `${validatorValue.actual.width}x${validatorValue.actual.height} is not an allowed image dimension.`;\n    }\n\n    return config[validatorName];\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsValidationMessagesComponent.html":{"url":"components/TsValidationMessagesComponent.html","title":"component - TsValidationMessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsValidationMessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/validation-messages/validation-messages.component.ts\n\n\n    \n        Description\n    \n    \n        A presentational component to render validation messages\nQA CSS CLASSES\n\nqa-validation-message: Placed on the error element used for this component\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-validation-messages\n            \n\n            \n                styleUrls\n                validation-messages.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./validation-messages.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                validateImmediately\n                            \n                            \n                                validateOnChange\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(validationMessageService: TsValidationMessageService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:75\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationMessageService\n                                                  \n                                                        \n                                                                    TsValidationMessageService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                        Define the associated form control\n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validateImmediately\n                    \n                    \n                        Define if the validation should be immediate\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:75\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validateOnChange\n                    \n                    \n                        Define if validation should occur on blur or immediately\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:69\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        validationMessage\n                    \n                \n\n                \n                    \n                        getvalidationMessage()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:38\n                                \n                            \n                    \n                        \n                                Define the error message\n\n\n                                \n                                \n                                \n                                    Returns :     string | null | undefined\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { TsValidationMessageService } from './validation-message.service';\n\n\n/**\n * A presentational component to render validation messages\n *\n * #### QA CSS CLASSES\n * - `qa-validation-message`: Placed on the error element used for this component\n *\n * @example\n * \n */\n@Component({\n  selector: 'ts-validation-messages',\n  templateUrl: './validation-messages.component.html',\n  styleUrls: ['./validation-messages.component.scss'],\n  host: {\n    class: 'ts-validation-messages',\n  },\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsValidationMessagesComponent {\n  /**\n   * Define the error message\n   *\n   * @return The error message or null if no error\n   */\n  public get validationMessage(): string | null | undefined {\n    if (this.control && this.control.errors) {\n      for (const propertyName in this.control.errors) {\n\n        // istanbul ignore else\n        if (propertyName) {\n          // Only show after 'touched' if we are NOT validating on every change\n          const immediatelyOrOnChange = this.validateImmediately || this.validateOnChange;\n          if (immediatelyOrOnChange || (!this.validateOnChange && this.control.touched)) {\n            const errors = this.control.errors[propertyName];\n\n            return this.validationMessageService.getValidatorErrorMessage(propertyName, errors);\n          }\n        }\n\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Define the associated form control\n   */\n  @Input()\n  public control!: FormControl;\n\n  /**\n   * Define if validation should occur on blur or immediately\n   */\n  @Input()\n  public validateOnChange: boolean = false;\n\n  /**\n   * Define if the validation should be immediate\n   */\n  @Input()\n  public validateImmediately: boolean = false;\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private validationMessageService: TsValidationMessageService,\n  ) {}\n\n}\n\n    \n\n    \n        \n  {{ validationMessage }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ validationMessage }}'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsValidationMessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsValidationMessagesModule.html":{"url":"modules/TsValidationMessagesModule.html","title":"module - TsValidationMessagesModule","body":"\n                   \n\n\n\n\n  Modules\n  TsValidationMessagesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsValidationMessagesModule\n\n\n\ncluster_TsValidationMessagesModule_declarations\n\n\n\ncluster_TsValidationMessagesModule_exports\n\n\n\ncluster_TsValidationMessagesModule_providers\n\n\n\n\nTsValidationMessagesComponent\n\nTsValidationMessagesComponent\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule -->\n\nTsValidationMessagesComponent->TsValidationMessagesModule\n\n\n\n\n\nTsValidationMessagesComponent \n\nTsValidationMessagesComponent \n\nTsValidationMessagesComponent  -->\n\nTsValidationMessagesModule->TsValidationMessagesComponent \n\n\n\n\n\nTsValidationMessageService\n\nTsValidationMessageService\n\nTsValidationMessagesModule -->\n\nTsValidationMessageService->TsValidationMessagesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/validation-messages/validation-messages.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsValidationMessagesComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsValidationMessageService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsValidationMessagesComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { TsValidationMessageService } from './validation-message.service';\nimport { TsValidationMessagesComponent } from './validation-messages.component';\n\nexport * from './validation-message.service';\nexport * from './validation-messages.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatInputModule,\n  ],\n  providers: [\n    TsValidationMessageService,\n  ],\n  exports: [\n    TsValidationMessagesComponent,\n  ],\n  declarations: [\n    TsValidationMessagesComponent,\n  ],\n})\nexport class TsValidationMessagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsValidatorsService.html":{"url":"injectables/TsValidatorsService.html","title":"injectable - TsValidatorsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsValidatorsService\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/validators/validators.service.ts\n        \n\n            \n                Description\n            \n            \n                Define a service that exposes custom form validators for use with reactive forms.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creditCard\n                            \n                            \n                                email\n                            \n                            \n                                equalToControl\n                            \n                            \n                                greaterThan\n                            \n                            \n                                greaterThanOrEqual\n                            \n                            \n                                lessThan\n                            \n                            \n                                lessThanOrEqual\n                            \n                            \n                                lowercase\n                            \n                            \n                                maxDate\n                            \n                            \n                                minDate\n                            \n                            \n                                numbers\n                            \n                            \n                                password\n                            \n                            \n                                uppercase\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creditCard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creditCard:     \n\n                    \n                \n                    \n                        \n                            Default value : creditCardValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     \n\n                    \n                \n                    \n                        \n                            Default value : emailValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            equalToControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        equalToControl:     \n\n                    \n                \n                    \n                        \n                            Default value : equalToControlValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            greaterThan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        greaterThan:     \n\n                    \n                \n                    \n                        \n                            Default value : greaterThanValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            greaterThanOrEqual\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        greaterThanOrEqual:     \n\n                    \n                \n                    \n                        \n                            Default value : greaterThanOrEqualValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lessThan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lessThan:     \n\n                    \n                \n                    \n                        \n                            Default value : lessThanValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lessThanOrEqual\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lessThanOrEqual:     \n\n                    \n                \n                    \n                        \n                            Default value : lessThanOrEqualValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lowercase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lowercase:     \n\n                    \n                \n                    \n                        \n                            Default value : lowercaseValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxDate:     \n\n                    \n                \n                    \n                        \n                            Default value : maxDateValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minDate:     \n\n                    \n                \n                    \n                        \n                            Default value : minDateValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numbers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numbers:     \n\n                    \n                \n                    \n                        \n                            Default value : numbersValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     \n\n                    \n                \n                    \n                        \n                            Default value : passwordValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uppercase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uppercase:     \n\n                    \n                \n                    \n                        \n                            Default value : uppercaseValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     \n\n                    \n                \n                    \n                        \n                            Default value : urlValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:34\n                            \n                        \n\n\n            \n        \n\n\n    \n\n    \n        Validators\n\n\n\n\nTable of Contents\n\nBasic usage\nAvailable validators\nMocking\n\n\nBasic usage\nimport {\n  FormBuilder,\n  FormGroup,\n} from '@angular/forms';\nimport { TsValidatorsService } from '@terminus/ui';\n\n\n@Component({\n  ...\n})\nexport class MyComponent {\n  // Create a form\n  myForm: FormGroup = this.formBuilder.group({\n    email: [\n      null,\n      [\n        // Basic validator\n        this.validatorsService.email(),\n      ],\n    ],\n    greaterThan: [\n      null,\n      [\n        // Validator with a required argument\n        this.validatorsService.greaterThan(10),\n      ],\n    ],\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private validatorsService: TsValidatorsService,\n  ) {}\n\n}Available validators\n\n\n\nValidator\nPurpose\n\n\n\n\ncreditCard\nA credit card number must be valid\n\n\nemail\nAn email address must be valid\n\n\nequalToControl\nA control's value must be equal to another control's value\n\n\ngreaterThan\nA number must be greater than another value\n\n\ngreaterThanOrEqual\nA number must be greater than or equal to another value\n\n\nlessThan\nA number must be less than another value\n\n\nlessThanOrEqual\nA number must be less than or equal to another value\n\n\nlowercase\nA value must contain a minimum amount of lowercase characters\n\n\nmaxDate\nA date must be before a maximum date\n\n\nminDate\nA date must be after a minimum date\n\n\nnumbers\nA minimum amount of numbers must be found\n\n\npassword\nA password must meet certain requirements\n\n\nuppercase\nA value must contain a minimum amount of uppercase characters\n\n\nurl\nA URL must be valid\n\n\n\nMocking\nA mocked version of the service is available for testing as TsValidatorsServiceMock.\nThe mocks consist of Jest mock functions. Based on the class value isValid the validator mock will\nreturn an error message or null.\n\n    \n\n    \n        import { Injectable } from '@angular/core';\n\nimport { creditCardValidator } from './validators/creditCard/creditCard';\nimport { emailValidator } from './validators/email/email';\nimport { equalToControlValidator } from './validators/equalToControl/equalToControl';\nimport { greaterThanOrEqualValidator } from './validators/greaterThanOrEqual/greaterThanOrEqual';\nimport { greaterThanValidator } from './validators/greaterThan/greaterThan';\nimport { lessThanOrEqualValidator } from './validators/lessThanOrEqual/lessThanOrEqual';\nimport { lessThanValidator } from './validators/lessThan/lessThan';\nimport { lowercaseValidator } from './validators/lowercase/lowercase';\nimport { numbersValidator } from './validators/numbers/numbers';\nimport { maxDateValidator } from './validators/maxDate/maxDate';\nimport { minDateValidator } from './validators/minDate/minDate';\nimport { passwordValidator } from './validators/password/password';\nimport { urlValidator } from './validators/url/url';\nimport { uppercaseValidator } from './validators/uppercase/uppercase';\n\n\n/**\n * Define a service that exposes custom form validators for use with reactive forms.\n */\n@Injectable()\nexport class TsValidatorsService {\n  creditCard = creditCardValidator;\n  email = emailValidator;\n  equalToControl = equalToControlValidator;\n  greaterThan = greaterThanValidator;\n  greaterThanOrEqual = greaterThanOrEqualValidator;\n  lessThan = lessThanValidator;\n  lessThanOrEqual = lessThanOrEqualValidator;\n  maxDate = maxDateValidator;\n  minDate = minDateValidator;\n  password = passwordValidator;\n  url = urlValidator;\n  lowercase = lowercaseValidator;\n  uppercase = uppercaseValidator;\n  numbers = numbersValidator;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsVerticalSpacingDirective.html":{"url":"directives/TsVerticalSpacingDirective.html","title":"directive - TsVerticalSpacingDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsVerticalSpacingDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/spacing/vertical-spacing.directive.ts\n        \n\n            \n                Description\n            \n            \n                This is the vertical spacing UI directive. Accepts TsVerticalSpacingTypes\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            \nMy content!\n\n\n\nMy content!\n\n\n\nMy content!\n\n\nhttps://goo.gl/ieUPaG\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsVerticalSpacing]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsVerticalSpacing\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/spacing/vertical-spacing.directive.ts:85\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tsVerticalSpacing\n                    \n                    \n                        Set a spacing class based on the passed in value\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/spacing/vertical-spacing.directive.ts:58\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tsVerticalSpacing\n                    \n                \n\n\n                \n                    \n                        settsVerticalSpacing(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/spacing/vertical-spacing.directive.ts:58\n                                \n                            \n                    \n                        \n                                Set a spacing class based on the passed in value\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                            \n                                                                    \nThe spacing value passed in.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  isDevMode,\n} from '@angular/core';\n\nimport { TS_SPACING } from './spacing.constant';\n\n\n/**\n * Define the accepted string values for {@link TsVerticalSpacingDirective}\n */\nexport type TsVerticalSpacingTypes =\n  'small--2' |\n  'small--1' |\n  'small--0' |\n  'none' |\n  'default--0' |\n  'large--0' |\n  'large--1' |\n  'large--2' |\n  'large--3' |\n  'large--4' |\n  'large--5' |\n  'large--6'\n;\n\n\n/**\n * This is the vertical spacing UI directive. Accepts {@link TsVerticalSpacingTypes}\n *\n * @example\n * \n *   My content!\n * \n *\n * \n *   My content!\n * \n *\n * \n *   My content!\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Directive({\n  selector: '[tsVerticalSpacing]',\n})\nexport class TsVerticalSpacingDirective {\n  /**\n   * Set a spacing class based on the passed in value\n   *\n   * @param value - The spacing value passed in.\n   */\n  @Input()\n  public set tsVerticalSpacing(value: TsVerticalSpacingTypes) {\n    // Set a default value if nothing was passed in\n    if (!value) {\n      value = 'default--0';\n    }\n\n    // Split the string to get the type and size\n    const type: string = value.split('--')[0];\n    const size: number = parseInt(value.split('--')[1], 10);\n    const valueIsNone: boolean = value === 'none';\n\n    // Verify type and size are valid options\n    const typeIsInvalid: boolean = !!(!TS_SPACING[type] || TS_SPACING[type].length \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Version.html":{"url":"classes/Version.html","title":"class - Version","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Version\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/utilities/version/version.ts\n        \n\n            \n                Description\n            \n            \n                Create version information from a version string\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                full\n                            \n                            \n                                    Public\n                                    Readonly\n                                major\n                            \n                            \n                                    Public\n                                    Readonly\n                                minor\n                            \n                            \n                                    Public\n                                    Readonly\n                                patch\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(full: string)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/utilities/version/version.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        full\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            full\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        full:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/version/version.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            major\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        major:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/version/version.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            minor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/version/version.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            patch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        patch:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/version/version.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Version {\n  public readonly major: string;\n  public readonly minor: string;\n  public readonly patch: string;\n\n  constructor(public full: string) {\n    this.major = full.split('.')[0];\n    this.minor = full.split('.')[1];\n    this.patch = full.split('.').slice(2).join('.');\n  }\n}\n\nexport const VERSION = new Version('0.0.0-PLACEHOLDER');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\n\n Contributing to Terminus/UI\n\nWe are always open questions, ideas and code contributions. As a contributor, here are the\nguidelines we would like you to follow.\n\n\nTable of Contents\n\nCode of Conduct\nQuestion or Problem?\nWant a Feature?\nSubmitting an Issue\nSubmitting a Pull Request (PR)\nAfter your pull request is merged\nCoding Rules & Workflow\n\n\n\n\n\n\nCode of Conduct\nHelp us keep Terminus open and inclusive. Please read and follow our Code of Conduct.\nQuestion or Problem?\nIf you find a bug in the source code or a mistake in the documentation, you can help us by\nsubmitting an issue to our GitHub repository. Including an issue\nreproduction (via our StackBlitz starter) is the absolute best way to help the team quickly\ndiagnose the problem. Screenshots are also helpful.\nYou can help the team even more and submit a Pull Request with a fix! :pray:\nWant a Feature?\nYou can request a new feature by submitting an issue to our GitHub\nrepository. If you would like to implement a new feature, please submit an issue with a\nproposal for your work first, to be sure that we can use it.  Please consider what kind of change it\nis:\n\nFor a Major Feature, first open an issue and outline your proposal so that it can be\ndiscussed. This will also allow us to better coordinate our efforts, prevent duplication of work,\nand help you to craft the change so that it is successfully accepted into the project.\nSmall Features can be crafted and directly submitted as a Pull Request.\n\nSubmitting an Issue\nBefore you submit an issue, search existing open/closed issues, as your question may have\nalready been answered.\nIf your issue appears to be a bug, and hasn't been reported, open a new issue.\nHelp us to maximize the effort we can spend fixing issues and adding new\nfeatures by not reporting duplicate issues.  Providing the following information will increase the\nchances of your issue being dealt with quickly:\n\nOverview of the Issue - if an error is being thrown a non-minified stack trace helps\nMotivation for or Use Case - explain what are you trying to do and why the current behavior\n  is a bug for you\nBrowsers and Operating System - is this a problem with all browsers?\nReproduce the Error - provide a live example using our StackBlitz starter or a\n  unambiguous set of steps\nScreenshots - Due to the visual nature of this library, screenshots can help the team triage\n  issues far more quickly than a text description.\nRelated Issues - has a similar issue been reported before?\nSuggest a Fix - if you can't fix the bug yourself, perhaps you can point to what might be\n  causing the problem (line of code or commit)\n\nYou can file new issues by providing the above information here.\nSubmitting a Pull Request (PR)\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\nSearch GitHub for an open or closed PR that relates to your submission. You don't want to\nduplicate effort.\nMake your changes in a new git branch:\ngit checkout -b 312-my-fix-branch master\nNote: You should prefix your branch name with the associated issue number.\n\n\nCreate your patch, including appropriate test cases.\nFollow our coding rules (by verifying all linters pass).\nRun the full test suite and ensure that all tests pass.\nCommit your changes using a descriptive commit message that follows our\ncommit message conventions. Adherence to these conventions is necessary because release notes are\nautomatically generated from these messages. (for this reason it is often advisable to rebase your\nfeature branch to ensure clear, concise commits)\nPush your branch to GitHub:\ngit push my-fork 312-my-fix-branch\n\n\nIn GitHub, send a pull request to terminus-ui:master.\nIf we suggest changes then:\nMake the required updates.\nRe-run all test suites to ensure tests are still passing.\nRe-run all linters.\nRebase your branch and force push to your GitHub repository (this will update your Pull Request):\ngit rebase master -i\ngit push -f\n\n\n\n\n\nThat's it! Thank you for your contribution! :pray:\nAfter your pull request is merged\nAfter your pull request is merged, you can safely delete your branch and pull the changes from the\nmain (upstream) repository:\n\nDelete the remote branch on GitHub either through the GitHub web UI or your local shell:\ngit push my-fork --delete 312-my-fix-branch\n\n\nCheck out the master branch:\ngit checkout master -f\n\n\nDelete the local branch:\ngit branch -D 312-my-fix-branch\n\n\nUpdate your master with the latest upstream version:\ngit pull --ff upstream master\n\n\n\nCoding Rules & Workflow\nTo ensure consistency throughout the source code, keep these rules in mind as you are working:\n\nAll features or bug fixes must be tested by one or more specs (unit-tests).\nAll public API methods must be documented. (Details TBD).\nMost coding styles are enforced via linters\nReference our development documentation for more details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.7\n        \n            @angular/common : ^6.0.7\n        \n            @angular/core : ^6.0.7\n        \n            @angular/flex-layout : 6.0.0-beta.16\n        \n            @angular/forms : ^6.0.7\n        \n            @angular/http : ^6.0.7\n        \n            @angular/platform-browser : ^6.0.7\n        \n            @angular/platform-browser-dynamic : ^6.0.7\n        \n            @angular/router : ^6.0.7\n        \n            @terminus/ngx-tools : ^2.23.0\n        \n            @terminus/ui : ^8.13.1\n        \n            date-fns : 2.0.0-alpha.7\n        \n            highcharts : ^6.1.1\n        \n            rxjs-compat : ^6.2.1\n        \n            text-mask-addons : ^3.7.2\n        \n            text-mask-core : ^5.0.1\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTerminus UI Library\nThe library of UI components used for Terminus applications.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable of Contents\n\nLibrary Purpose\nDocumentation\nAvailable Features\nComponents\nPipes\nServices\nAvailable Validators\n\n\nConstants\nStyle Helpers\n\n\nInstallation\nGlobal Styles\nSCSS Helpers\nContributing\nContributors\nProject Resources\n\n\nLibrary Purpose\nThis library was created to assist Terminus engineers in maintaining a consistent experience across\napplications while following a unified design language.\nThe library is open source with the hopes that others may find solutions and ideas here, as we have\ndone while browsing so many other repositories. While we want to make decisions that are best for\neveryone, in the end, the needs of the Terminus engineering team must come first.\nIf a deviation makes sense for the feature itself, but not for Terminus, we support (and will assist\nin) abstracting the functionality out for generalization.\nThis library is heavily based on Material Design currently. This provides us a way to rely on very\nwell thought out usability and accessibility decisions for areas we have not yet addressed\ninternally. While we hold Material in high regard, we do not believe that all of their decisions are\nbest for the Terminus UI specifically.\nDocumentation\nThe available features table contains links for functional and usage documentation\nfor each feature.\nAvailable Features\n\n\n:hammer: started\n:white_check_mark: available\n:hankey: deprecated\n\n\nComponents\n\n\n\nFeature\nNotes\nStatus\nDemo\nDocs\nUsage\n\n\n\n\nalert\n\n\n\n\n\n\n\nautocomplete\nInput with autocomplete\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nautofocus\nFocus a focusable element on load\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nbadge\n\n\n\n\n\n\n\nbutton\n\n:white_check_mark:\nDemo\nDocs\n\n\n\nbreadcrumbs\n\n\n\n\n\n\n\ncard\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nchart\nCharts, graphs etc\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nchip\n\n\n\n\n\n\n\ncheckbox\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nconfirmation\nAdd a confirmation step to any ts-button\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ncopy\n\n:white_check_mark:\nDemo\nDocs\n\n\n\ncsv entry\nManually enter CSV values\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ndatepicker\nInput with calendar pop-up\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ndate-range\nDual inputs with calendar pop-ups\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ndialog\n\n\n\n\n\n\n\ndivider\n\n\n\n\n\n\n\nexpansion\n\n\n\n\n\n\n\nfile-upload\nFile upload with drag and drop\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ninput mask\nCustom masks for inputs (phone, zip, etc)\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nicon\nSupported icons: https://material.io/icons\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nicon-button\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ninput\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nlink\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nloading overlay\nOverlay with loading spinner\n:white_check_mark:\nDemo\nDocs\n\n\n\nlogin form\nEmail/password with 'remember me' checkbox\n:white_check_mark:\nDemo\nDocs\n\n\n\nmenu\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nnavigation\nGlobal navigation menu\n:white_check_mark:\nDemo\nDocs\n\n\n\npaginator\nPaging controls for collections\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\npipes\nA collection of pipes for Angular\n:white_check_mark:\nDemo\nDocs\n\n\n\nprogress\n\n\n\n\n\n\n\nprogression\ni.e. Stepper, wizard\n\n\n\n\n\n\nradio-group\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nsearch\ninput with search capabilities\n:white_check_mark:\nDemo\nDocs\n\n\n\nselect\n\n:white_check_mark:\nDemo\nDocs\n\n\n\nspacing\nHelpers for consistent spacing\n:white_check_mark:\nDemo\nDocs\n\n\n\nsort\nUsed by table for column sorting\n:white_check_mark:\n(see table demo)\nDocs\nUsage\n\n\ntable\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ntabs\n\n\n\n\n\n\n\ntoggle\n\n:white_check_mark:\nDemo\nDocs\n\n\n\ntooltip\n\n:white_check_mark:\nDemo\nDocs\n\n\n\nPipes\n:books: Pipes Documentation\n\n:circus_tent: Pipes Demo\n\n\n\nPipe\nNotes\nStatus\n\n\n\n\ntsDate\nshort, medium, extended, timestamp\n:white_check_mark:\n\n\ntsRoundNumber\nRound a number to a specific precision\n:white_check_mark:\n\n\ntsSentenceCase\nConvert string casing to sentence-case\n:white_check_mark:\n\n\ntsTimeAgo\nHuman-readable time span\n:white_check_mark:\n\n\ntsTitleCase\nTitle Case A String\n:white_check_mark:\n\n\n\nServices\n\n\n\nFeature\nNotes\nStatus\nDemo\nDocs\nUsage\n\n\n\n\nValidators\nExpose custom validation methods for reactive forms\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\n\nAvailable Validators\n\n\n\nName\nPurpose\n\n\n\n\ncreditCard\nA credit card number must be valid\n\n\nemail\nAn email address must be valid\n\n\nequalToControl\nA control's value must be equal to another control's value\n\n\ngreaterThan\nA number must be greater than another value\n\n\ngreaterThanOrEqual\nA number must be greater than or equal to another value\n\n\nlessThan\nA number must be less than another value\n\n\nlessThanOrEqual\nA number must be less than or equal to another value\n\n\nlowercase\nA value must contain a minimum amount of lowercase characters\n\n\nminDate\nA date must be after a minimum date\n\n\nmaxDate\nA date must be before a maximum date\n\n\npassword\nA password must meet certain requirements\n\n\nurl\nA URL must be valid\n\n\n\nConstants\n\n\n\nFeature\nNotes\nStatus\nDemo\nDocs\nUsage\n\n\n\n\nTS_SPACING\nExpose our spacing sizes in TypeScript\n:white_check_mark:\nDemo\n\n\n\n\nStyle Helpers\n\n\n\nFeature\nNotes\nStatus\nDocs\n\n\n\n\nanimation\n\n:hammer:\n\n\n\nassets\n\n:hammer:\n\n\n\nbreakpoints\n\n:white_check_mark:\nDocs\n\n\ncolors\n\n:white_check_mark:\nDocs\n\n\ncursors\n\n:white_check_mark:\nDocs\n\n\nlayout\n\n:white_check_mark:\nDocs\n\n\nshadows\n\n:white_check_mark:\nDocs\n\n\nspacing\n\n:white_check_mark:\nDocs\n\n\ntypography\n\n:white_check_mark:\nDocs\n\n\nz-index\n\n:white_check_mark:\nDocs\n\n\n\nInstallation\nInstall the library and required dependencies:\n$ yarn add @terminus/ui @terminus/ngx-tools @angular/flex-layout@6.0.0-beta.15 date-fns@2.0.0-alpha.7Global Styles\nTo use the global styles, import the CSS file into your stylesheets:\n@import '@terminus/ui/terminus-ui.css'SCSS Helpers\nTo use the provided SCSS helper methods/variables/mixins, import the helpers file from @terminus/ui:\n@import '~@terminus/ui/helpers'Contributing\nView the contribution documentation and the development documentation.\nContributors\nThanks goes to these wonderful people (emoji key):\n\n\n\n\n\nBenjamin Charity&#x1F4BB; &#x1F4D6; ⚠️ &#x1F3A8; &#x1F914; &#x1F440; &#x1F527;\ncoreyterminator&#x1F4BB;\nWendy&#x1F41B; &#x1F4BB;\nBrian Malinconico&#x1F41B; &#x1F914;\nDavid Harkness&#x1F4BB;\nkal93&#x1F41B;\ndivyameher&#x1F41B;\n\n\n\n\nDevon Peet&#x1F3A8; &#x1F914;\n\n\n\n\nThis project follows the all-contributors specification. Contributions of any kind welcome!\nProject Resources\n\nSemantic Release - Automatically release versioned release to NPM and generate\n  a changelog in the Github tag.\nCommitizen - Interactive cli for enforcing commit message format.\nCommitizen VSCode Plugin - VSCode plugin for commitizen.\nDoctoc - Generate documentation table of contents.\nCodeCov - Code coverage reporting.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright (c) 2018 Terminus Software, LLC.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TerminusUIModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsAutocompleteModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsAutofocusModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsButtonModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsCSVEntryModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsCardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsChart2Module\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsChartModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsCheckboxModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsConfirmationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsCopyModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsDateRangeModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsDatepickerModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsFileUploadModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsIconButtonModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsIconModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsInputModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsLinkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsLoadingOverlayModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsLoginFormModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsMaskModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsMenuModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsNavigationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsPaginatorModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsPipesModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsRadioGroupModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsSearchModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsSelectModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsSortModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsSpacingModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsTableModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsToggleModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsTooltipModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsValidationMessagesModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TerminusUIModule\n\n\n\ncluster_TerminusUIModule_declarations\n\n\n\ncluster_TerminusUIModule_imports\n\n\n\ncluster_TerminusUIModule_exports\n\n\n\ncluster_TerminusUIModule_providers\n\n\n\ncluster_TsAutocompleteModule\n\n\n\ncluster_TsAutocompleteModule_declarations\n\n\n\ncluster_TsAutocompleteModule_exports\n\n\n\ncluster_TsAutofocusModule\n\n\n\ncluster_TsAutofocusModule_declarations\n\n\n\ncluster_TsAutofocusModule_exports\n\n\n\ncluster_TsButtonModule\n\n\n\ncluster_TsButtonModule_declarations\n\n\n\ncluster_TsButtonModule_exports\n\n\n\ncluster_TsCSVEntryModule\n\n\n\ncluster_TsCSVEntryModule_declarations\n\n\n\ncluster_TsCSVEntryModule_exports\n\n\n\ncluster_TsCardModule\n\n\n\ncluster_TsCardModule_declarations\n\n\n\ncluster_TsCardModule_exports\n\n\n\ncluster_TsChart2Module\n\n\n\ncluster_TsChart2Module_declarations\n\n\n\ncluster_TsChart2Module_exports\n\n\n\ncluster_TsChart2Module_providers\n\n\n\ncluster_TsChartModule\n\n\n\ncluster_TsChartModule_declarations\n\n\n\ncluster_TsChartModule_exports\n\n\n\ncluster_TsChartModule_providers\n\n\n\ncluster_TsCheckboxModule\n\n\n\ncluster_TsCheckboxModule_declarations\n\n\n\ncluster_TsCheckboxModule_TsCheckboxComponent_providers\n\n\n\ncluster_TsCheckboxModule_exports\n\n\n\ncluster_TsConfirmationModule\n\n\n\ncluster_TsConfirmationModule_declarations\n\n\n\ncluster_TsConfirmationModule_exports\n\n\n\ncluster_TsCopyModule\n\n\n\ncluster_TsCopyModule_declarations\n\n\n\ncluster_TsCopyModule_exports\n\n\n\ncluster_TsDateRangeModule\n\n\n\ncluster_TsDateRangeModule_declarations\n\n\n\ncluster_TsDateRangeModule_exports\n\n\n\ncluster_TsDatepickerModule\n\n\n\ncluster_TsDatepickerModule_declarations\n\n\n\ncluster_TsDatepickerModule_TsDatepickerComponent_providers\n\n\n\ncluster_TsDatepickerModule_exports\n\n\n\ncluster_TsFileUploadModule\n\n\n\ncluster_TsFileUploadModule_declarations\n\n\n\ncluster_TsFileUploadModule_exports\n\n\n\ncluster_TsFileUploadModule_providers\n\n\n\ncluster_TsIconButtonModule\n\n\n\ncluster_TsIconButtonModule_declarations\n\n\n\ncluster_TsIconButtonModule_exports\n\n\n\ncluster_TsIconModule\n\n\n\ncluster_TsIconModule_declarations\n\n\n\ncluster_TsIconModule_exports\n\n\n\ncluster_TsInputModule\n\n\n\ncluster_TsInputModule_declarations\n\n\n\ncluster_TsInputModule_TsInputComponent_providers\n\n\n\ncluster_TsInputModule_exports\n\n\n\ncluster_TsLinkModule\n\n\n\ncluster_TsLinkModule_declarations\n\n\n\ncluster_TsLinkModule_exports\n\n\n\ncluster_TsLoadingOverlayModule\n\n\n\ncluster_TsLoadingOverlayModule_declarations\n\n\n\ncluster_TsLoadingOverlayModule_exports\n\n\n\ncluster_TsLoginFormModule\n\n\n\ncluster_TsLoginFormModule_declarations\n\n\n\ncluster_TsLoginFormModule_exports\n\n\n\ncluster_TsMaskModule\n\n\n\ncluster_TsMaskModule_declarations\n\n\n\ncluster_TsMaskModule_TsMaskDirective_providers\n\n\n\ncluster_TsMaskModule_exports\n\n\n\ncluster_TsMenuModule\n\n\n\ncluster_TsMenuModule_declarations\n\n\n\ncluster_TsMenuModule_exports\n\n\n\ncluster_TsNavigationModule\n\n\n\ncluster_TsNavigationModule_declarations\n\n\n\ncluster_TsNavigationModule_exports\n\n\n\ncluster_TsPaginatorModule\n\n\n\ncluster_TsPaginatorModule_declarations\n\n\n\ncluster_TsPaginatorModule_exports\n\n\n\ncluster_TsPipesModule\n\n\n\ncluster_TsPipesModule_declarations\n\n\n\ncluster_TsPipesModule_exports\n\n\n\ncluster_TsRadioGroupModule\n\n\n\ncluster_TsRadioGroupModule_declarations\n\n\n\ncluster_TsRadioGroupModule_TsRadioGroupComponent_providers\n\n\n\ncluster_TsRadioGroupModule_exports\n\n\n\ncluster_TsSearchModule\n\n\n\ncluster_TsSearchModule_declarations\n\n\n\ncluster_TsSearchModule_exports\n\n\n\ncluster_TsSelectModule\n\n\n\ncluster_TsSelectModule_declarations\n\n\n\ncluster_TsSelectModule_TsSelectComponent_providers\n\n\n\ncluster_TsSelectModule_exports\n\n\n\ncluster_TsSortModule\n\n\n\ncluster_TsSortModule_declarations\n\n\n\ncluster_TsSortModule_exports\n\n\n\ncluster_TsSpacingModule\n\n\n\ncluster_TsSpacingModule_declarations\n\n\n\ncluster_TsSpacingModule_exports\n\n\n\ncluster_TsTableModule\n\n\n\ncluster_TsTableModule_declarations\n\n\n\ncluster_TsTableModule_TsCellDefDirective_providers\n\n\n\ncluster_TsTableModule_exports\n\n\n\ncluster_TsToggleModule\n\n\n\ncluster_TsToggleModule_declarations\n\n\n\ncluster_TsToggleModule_TsToggleComponent_providers\n\n\n\ncluster_TsToggleModule_exports\n\n\n\ncluster_TsTooltipModule\n\n\n\ncluster_TsTooltipModule_declarations\n\n\n\ncluster_TsTooltipModule_exports\n\n\n\ncluster_TsValidationMessagesModule\n\n\n\ncluster_TsValidationMessagesModule_declarations\n\n\n\ncluster_TsValidationMessagesModule_exports\n\n\n\ncluster_TsValidationMessagesModule_providers\n\n\n\n\nTsReactiveFormBaseComponent\n\nTsReactiveFormBaseComponent\n\n\n\nTerminusUIModule\n\nTerminusUIModule\n\nTerminusUIModule -->\n\nTsReactiveFormBaseComponent->TerminusUIModule\n\n\n\n\n\nTsAutocompleteModule \n\nTsAutocompleteModule \n\nTsAutocompleteModule  -->\n\nTerminusUIModule->TsAutocompleteModule \n\n\n\n\n\nTsAutofocusModule \n\nTsAutofocusModule \n\nTsAutofocusModule  -->\n\nTerminusUIModule->TsAutofocusModule \n\n\n\n\n\nTsButtonModule \n\nTsButtonModule \n\nTsButtonModule  -->\n\nTerminusUIModule->TsButtonModule \n\n\n\n\n\nTsCSVEntryModule \n\nTsCSVEntryModule \n\nTsCSVEntryModule  -->\n\nTerminusUIModule->TsCSVEntryModule \n\n\n\n\n\nTsCardModule \n\nTsCardModule \n\nTsCardModule  -->\n\nTerminusUIModule->TsCardModule \n\n\n\n\n\nTsChartModule \n\nTsChartModule \n\nTsChartModule  -->\n\nTerminusUIModule->TsChartModule \n\n\n\n\n\nTsCheckboxModule \n\nTsCheckboxModule \n\nTsCheckboxModule  -->\n\nTerminusUIModule->TsCheckboxModule \n\n\n\n\n\nTsConfirmationModule \n\nTsConfirmationModule \n\nTsConfirmationModule  -->\n\nTerminusUIModule->TsConfirmationModule \n\n\n\n\n\nTsCopyModule \n\nTsCopyModule \n\nTsCopyModule  -->\n\nTerminusUIModule->TsCopyModule \n\n\n\n\n\nTsDateRangeModule \n\nTsDateRangeModule \n\nTsDateRangeModule  -->\n\nTerminusUIModule->TsDateRangeModule \n\n\n\n\n\nTsDatepickerModule \n\nTsDatepickerModule \n\nTsDatepickerModule  -->\n\nTerminusUIModule->TsDatepickerModule \n\n\n\n\n\nTsFileUploadModule \n\nTsFileUploadModule \n\nTsFileUploadModule  -->\n\nTerminusUIModule->TsFileUploadModule \n\n\n\n\n\nTsIconButtonModule \n\nTsIconButtonModule \n\nTsIconButtonModule  -->\n\nTerminusUIModule->TsIconButtonModule \n\n\n\n\n\nTsIconModule \n\nTsIconModule \n\nTsIconModule  -->\n\nTerminusUIModule->TsIconModule \n\n\n\n\n\nTsInputModule \n\nTsInputModule \n\nTsInputModule  -->\n\nTerminusUIModule->TsInputModule \n\n\n\n\n\nTsLinkModule \n\nTsLinkModule \n\nTsLinkModule  -->\n\nTerminusUIModule->TsLinkModule \n\n\n\n\n\nTsLoadingOverlayModule \n\nTsLoadingOverlayModule \n\nTsLoadingOverlayModule  -->\n\nTerminusUIModule->TsLoadingOverlayModule \n\n\n\n\n\nTsLoginFormModule \n\nTsLoginFormModule \n\nTsLoginFormModule  -->\n\nTerminusUIModule->TsLoginFormModule \n\n\n\n\n\nTsMaskModule \n\nTsMaskModule \n\nTsMaskModule  -->\n\nTerminusUIModule->TsMaskModule \n\n\n\n\n\nTsMenuModule \n\nTsMenuModule \n\nTsMenuModule  -->\n\nTerminusUIModule->TsMenuModule \n\n\n\n\n\nTsNavigationModule \n\nTsNavigationModule \n\nTsNavigationModule  -->\n\nTerminusUIModule->TsNavigationModule \n\n\n\n\n\nTsPaginatorModule \n\nTsPaginatorModule \n\nTsPaginatorModule  -->\n\nTerminusUIModule->TsPaginatorModule \n\n\n\n\n\nTsRadioGroupModule \n\nTsRadioGroupModule \n\nTsRadioGroupModule  -->\n\nTerminusUIModule->TsRadioGroupModule \n\n\n\n\n\nTsSearchModule \n\nTsSearchModule \n\nTsSearchModule  -->\n\nTerminusUIModule->TsSearchModule \n\n\n\n\n\nTsSelectModule \n\nTsSelectModule \n\nTsSelectModule  -->\n\nTerminusUIModule->TsSelectModule \n\n\n\n\n\nTsSortModule \n\nTsSortModule \n\nTsSortModule  -->\n\nTerminusUIModule->TsSortModule \n\n\n\n\n\nTsSpacingModule \n\nTsSpacingModule \n\nTsSpacingModule  -->\n\nTerminusUIModule->TsSpacingModule \n\n\n\n\n\nTsTableModule \n\nTsTableModule \n\nTsTableModule  -->\n\nTerminusUIModule->TsTableModule \n\n\n\n\n\nTsToggleModule \n\nTsToggleModule \n\nTsToggleModule  -->\n\nTerminusUIModule->TsToggleModule \n\n\n\n\n\nTsTooltipModule \n\nTsTooltipModule \n\nTsTooltipModule  -->\n\nTerminusUIModule->TsTooltipModule \n\n\n\n\n\nTsValidationMessagesModule \n\nTsValidationMessagesModule \n\nTsValidationMessagesModule  -->\n\nTerminusUIModule->TsValidationMessagesModule \n\n\n\n\n\nTsAutocompleteModule\n\nTsAutocompleteModule\n\nTerminusUIModule -->\n\nTsAutocompleteModule->TerminusUIModule\n\n\n\n\n\nTsAutocompleteComponent \n\nTsAutocompleteComponent \n\nTsAutocompleteComponent  -->\n\nTsAutocompleteModule->TsAutocompleteComponent \n\n\n\n\n\nTsAutofocusModule\n\nTsAutofocusModule\n\nTerminusUIModule -->\n\nTsAutofocusModule->TerminusUIModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsInputModule -->\n\nTsAutofocusModule->TsInputModule\n\n\n\n\n\nTsAutofocusDirective \n\nTsAutofocusDirective \n\nTsAutofocusDirective  -->\n\nTsAutofocusModule->TsAutofocusDirective \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTerminusUIModule -->\n\nTsButtonModule->TerminusUIModule\n\n\n\n\n\nTsCSVEntryModule\n\nTsCSVEntryModule\n\nTsCSVEntryModule -->\n\nTsButtonModule->TsCSVEntryModule\n\n\n\n\n\nTsConfirmationModule\n\nTsConfirmationModule\n\nTsConfirmationModule -->\n\nTsButtonModule->TsConfirmationModule\n\n\n\n\n\nTsFileUploadModule\n\nTsFileUploadModule\n\nTsFileUploadModule -->\n\nTsButtonModule->TsFileUploadModule\n\n\n\n\n\nTsLoginFormModule\n\nTsLoginFormModule\n\nTsLoginFormModule -->\n\nTsButtonModule->TsLoginFormModule\n\n\n\n\n\nTsMenuModule\n\nTsMenuModule\n\nTsMenuModule -->\n\nTsButtonModule->TsMenuModule\n\n\n\n\n\nTsPaginatorModule\n\nTsPaginatorModule\n\nTsPaginatorModule -->\n\nTsButtonModule->TsPaginatorModule\n\n\n\n\n\nTsSearchModule\n\nTsSearchModule\n\nTsSearchModule -->\n\nTsButtonModule->TsSearchModule\n\n\n\n\n\nTsButtonComponent \n\nTsButtonComponent \n\nTsButtonComponent  -->\n\nTsButtonModule->TsButtonComponent \n\n\n\nTerminusUIModule -->\n\nTsCSVEntryModule->TerminusUIModule\n\n\n\n\n\nTsCSVEntryComponent \n\nTsCSVEntryComponent \n\nTsCSVEntryComponent  -->\n\nTsCSVEntryModule->TsCSVEntryComponent \n\n\n\n\n\nTsCardModule\n\nTsCardModule\n\nTerminusUIModule -->\n\nTsCardModule->TerminusUIModule\n\n\n\n\n\nTsCardComponent \n\nTsCardComponent \n\nTsCardComponent  -->\n\nTsCardModule->TsCardComponent \n\n\n\n\n\nTsCardTitleDirective \n\nTsCardTitleDirective \n\nTsCardTitleDirective  -->\n\nTsCardModule->TsCardTitleDirective \n\n\n\n\n\nTsChartModule\n\nTsChartModule\n\nTerminusUIModule -->\n\nTsChartModule->TerminusUIModule\n\n\n\n\n\nTsChartComponent \n\nTsChartComponent \n\nTsChartComponent  -->\n\nTsChartModule->TsChartComponent \n\n\n\n\n\nTsChartPointDirective \n\nTsChartPointDirective \n\nTsChartPointDirective  -->\n\nTsChartModule->TsChartPointDirective \n\n\n\n\n\nTsChartSeriesDirective \n\nTsChartSeriesDirective \n\nTsChartSeriesDirective  -->\n\nTsChartModule->TsChartSeriesDirective \n\n\n\n\n\nTsCheckboxModule\n\nTsCheckboxModule\n\nTerminusUIModule -->\n\nTsCheckboxModule->TerminusUIModule\n\n\n\nTsLoginFormModule -->\n\nTsCheckboxModule->TsLoginFormModule\n\n\n\n\n\nTsCheckboxComponent \n\nTsCheckboxComponent \n\nTsCheckboxComponent  -->\n\nTsCheckboxModule->TsCheckboxComponent \n\n\n\nTerminusUIModule -->\n\nTsConfirmationModule->TerminusUIModule\n\n\n\n\n\nTsConfirmationDirective \n\nTsConfirmationDirective \n\nTsConfirmationDirective  -->\n\nTsConfirmationModule->TsConfirmationDirective \n\n\n\n\n\nTsCopyModule\n\nTsCopyModule\n\nTerminusUIModule -->\n\nTsCopyModule->TerminusUIModule\n\n\n\n\n\nTsCopyComponent \n\nTsCopyComponent \n\nTsCopyComponent  -->\n\nTsCopyModule->TsCopyComponent \n\n\n\n\n\nTsDateRangeModule\n\nTsDateRangeModule\n\nTerminusUIModule -->\n\nTsDateRangeModule->TerminusUIModule\n\n\n\n\n\nTsDateRangeComponent \n\nTsDateRangeComponent \n\nTsDateRangeComponent  -->\n\nTsDateRangeModule->TsDateRangeComponent \n\n\n\n\n\nTsDatepickerModule\n\nTsDatepickerModule\n\nTerminusUIModule -->\n\nTsDatepickerModule->TerminusUIModule\n\n\n\nTsDateRangeModule -->\n\nTsDatepickerModule->TsDateRangeModule\n\n\n\n\n\nTsDatepickerComponent \n\nTsDatepickerComponent \n\nTsDatepickerComponent  -->\n\nTsDatepickerModule->TsDatepickerComponent \n\n\n\nTerminusUIModule -->\n\nTsFileUploadModule->TerminusUIModule\n\n\n\n\n\nTsFileUploadComponent \n\nTsFileUploadComponent \n\nTsFileUploadComponent  -->\n\nTsFileUploadModule->TsFileUploadComponent \n\n\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTerminusUIModule -->\n\nTsIconButtonModule->TerminusUIModule\n\n\n\nTsCSVEntryModule -->\n\nTsIconButtonModule->TsCSVEntryModule\n\n\n\nTsFileUploadModule -->\n\nTsIconButtonModule->TsFileUploadModule\n\n\n\n\n\nTsIconButtonComponent \n\nTsIconButtonComponent \n\nTsIconButtonComponent  -->\n\nTsIconButtonModule->TsIconButtonComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTerminusUIModule -->\n\nTsIconModule->TerminusUIModule\n\n\n\nTsAutocompleteModule -->\n\nTsIconModule->TsAutocompleteModule\n\n\n\nTsButtonModule -->\n\nTsIconModule->TsButtonModule\n\n\n\nTsCSVEntryModule -->\n\nTsIconModule->TsCSVEntryModule\n\n\n\nTsCardModule -->\n\nTsIconModule->TsCardModule\n\n\n\nTsCopyModule -->\n\nTsIconModule->TsCopyModule\n\n\n\nTsFileUploadModule -->\n\nTsIconModule->TsFileUploadModule\n\n\n\nTsIconButtonModule -->\n\nTsIconModule->TsIconButtonModule\n\n\n\nTsInputModule -->\n\nTsIconModule->TsInputModule\n\n\n\n\n\nTsLinkModule\n\nTsLinkModule\n\nTsLinkModule -->\n\nTsIconModule->TsLinkModule\n\n\n\nTsMenuModule -->\n\nTsIconModule->TsMenuModule\n\n\n\n\n\nTsNavigationModule\n\nTsNavigationModule\n\nTsNavigationModule -->\n\nTsIconModule->TsNavigationModule\n\n\n\n\n\nTsRadioGroupModule\n\nTsRadioGroupModule\n\nTsRadioGroupModule -->\n\nTsIconModule->TsRadioGroupModule\n\n\n\n\n\nTsIconComponent \n\nTsIconComponent \n\nTsIconComponent  -->\n\nTsIconModule->TsIconComponent \n\n\n\nTerminusUIModule -->\n\nTsInputModule->TerminusUIModule\n\n\n\nTsAutocompleteModule -->\n\nTsInputModule->TsAutocompleteModule\n\n\n\nTsLoginFormModule -->\n\nTsInputModule->TsLoginFormModule\n\n\n\nTsSearchModule -->\n\nTsInputModule->TsSearchModule\n\n\n\n\n\nTsInputComponent \n\nTsInputComponent \n\nTsInputComponent  -->\n\nTsInputModule->TsInputComponent \n\n\n\nTerminusUIModule -->\n\nTsLinkModule->TerminusUIModule\n\n\n\nTsLoginFormModule -->\n\nTsLinkModule->TsLoginFormModule\n\n\n\n\n\nTsLinkComponent \n\nTsLinkComponent \n\nTsLinkComponent  -->\n\nTsLinkModule->TsLinkComponent \n\n\n\n\n\nTsLoadingOverlayModule\n\nTsLoadingOverlayModule\n\nTerminusUIModule -->\n\nTsLoadingOverlayModule->TerminusUIModule\n\n\n\n\n\nTsLoadingOverlayDirective \n\nTsLoadingOverlayDirective \n\nTsLoadingOverlayDirective  -->\n\nTsLoadingOverlayModule->TsLoadingOverlayDirective \n\n\n\nTerminusUIModule -->\n\nTsLoginFormModule->TerminusUIModule\n\n\n\n\n\nTsLoginFormComponent \n\nTsLoginFormComponent \n\nTsLoginFormComponent  -->\n\nTsLoginFormModule->TsLoginFormComponent \n\n\n\n\n\nTsMaskModule\n\nTsMaskModule\n\nTerminusUIModule -->\n\nTsMaskModule->TerminusUIModule\n\n\n\n\n\nTsMaskDirective \n\nTsMaskDirective \n\nTsMaskDirective  -->\n\nTsMaskModule->TsMaskDirective \n\n\n\nTerminusUIModule -->\n\nTsMenuModule->TerminusUIModule\n\n\n\nTsPaginatorModule -->\n\nTsMenuModule->TsPaginatorModule\n\n\n\n\n\nTsMenuComponent \n\nTsMenuComponent \n\nTsMenuComponent  -->\n\nTsMenuModule->TsMenuComponent \n\n\n\nTerminusUIModule -->\n\nTsNavigationModule->TerminusUIModule\n\n\n\n\n\nTsNavigationComponent \n\nTsNavigationComponent \n\nTsNavigationComponent  -->\n\nTsNavigationModule->TsNavigationComponent \n\n\n\nTerminusUIModule -->\n\nTsPaginatorModule->TerminusUIModule\n\n\n\n\n\nTsTableModule\n\nTsTableModule\n\nTsTableModule -->\n\nTsPaginatorModule->TsTableModule\n\n\n\n\n\nTsPaginatorComponent \n\nTsPaginatorComponent \n\nTsPaginatorComponent  -->\n\nTsPaginatorModule->TsPaginatorComponent \n\n\n\nTerminusUIModule -->\n\nTsRadioGroupModule->TerminusUIModule\n\n\n\n\n\nTsRadioGroupComponent \n\nTsRadioGroupComponent \n\nTsRadioGroupComponent  -->\n\nTsRadioGroupModule->TsRadioGroupComponent \n\n\n\nTerminusUIModule -->\n\nTsSearchModule->TerminusUIModule\n\n\n\n\n\nTsSearchComponent \n\nTsSearchComponent \n\nTsSearchComponent  -->\n\nTsSearchModule->TsSearchComponent \n\n\n\n\n\nTsSelectModule\n\nTsSelectModule\n\nTerminusUIModule -->\n\nTsSelectModule->TerminusUIModule\n\n\n\nTsPaginatorModule -->\n\nTsSelectModule->TsPaginatorModule\n\n\n\n\n\nTsSelectComponent \n\nTsSelectComponent \n\nTsSelectComponent  -->\n\nTsSelectModule->TsSelectComponent \n\n\n\n\n\nTsSortModule\n\nTsSortModule\n\nTerminusUIModule -->\n\nTsSortModule->TerminusUIModule\n\n\n\nTsTableModule -->\n\nTsSortModule->TsTableModule\n\n\n\n\n\nTsSortDirective \n\nTsSortDirective \n\nTsSortDirective  -->\n\nTsSortModule->TsSortDirective \n\n\n\n\n\nTsSortHeaderComponent \n\nTsSortHeaderComponent \n\nTsSortHeaderComponent  -->\n\nTsSortModule->TsSortHeaderComponent \n\n\n\n\n\nTsSpacingModule\n\nTsSpacingModule\n\nTerminusUIModule -->\n\nTsSpacingModule->TerminusUIModule\n\n\n\nTsLoginFormModule -->\n\nTsSpacingModule->TsLoginFormModule\n\n\n\n\n\nTsVerticalSpacingDirective \n\nTsVerticalSpacingDirective \n\nTsVerticalSpacingDirective  -->\n\nTsSpacingModule->TsVerticalSpacingDirective \n\n\n\nTerminusUIModule -->\n\nTsTableModule->TerminusUIModule\n\n\n\n\n\nTsCellDefDirective \n\nTsCellDefDirective \n\nTsCellDefDirective  -->\n\nTsTableModule->TsCellDefDirective \n\n\n\n\n\nTsCellDirective \n\nTsCellDirective \n\nTsCellDirective  -->\n\nTsTableModule->TsCellDirective \n\n\n\n\n\nTsColumnDefDirective \n\nTsColumnDefDirective \n\nTsColumnDefDirective  -->\n\nTsTableModule->TsColumnDefDirective \n\n\n\n\n\nTsHeaderCellDefDirective \n\nTsHeaderCellDefDirective \n\nTsHeaderCellDefDirective  -->\n\nTsTableModule->TsHeaderCellDefDirective \n\n\n\n\n\nTsHeaderCellDirective \n\nTsHeaderCellDirective \n\nTsHeaderCellDirective  -->\n\nTsTableModule->TsHeaderCellDirective \n\n\n\n\n\nTsHeaderRowComponent \n\nTsHeaderRowComponent \n\nTsHeaderRowComponent  -->\n\nTsTableModule->TsHeaderRowComponent \n\n\n\n\n\nTsHeaderRowDefDirective \n\nTsHeaderRowDefDirective \n\nTsHeaderRowDefDirective  -->\n\nTsTableModule->TsHeaderRowDefDirective \n\n\n\n\n\nTsRowComponent \n\nTsRowComponent \n\nTsRowComponent  -->\n\nTsTableModule->TsRowComponent \n\n\n\n\n\nTsRowDefDirective \n\nTsRowDefDirective \n\nTsRowDefDirective  -->\n\nTsTableModule->TsRowDefDirective \n\n\n\n\n\nTsTableComponent \n\nTsTableComponent \n\nTsTableComponent  -->\n\nTsTableModule->TsTableComponent \n\n\n\n\n\nTsToggleModule\n\nTsToggleModule\n\nTerminusUIModule -->\n\nTsToggleModule->TerminusUIModule\n\n\n\n\n\nTsToggleComponent \n\nTsToggleComponent \n\nTsToggleComponent  -->\n\nTsToggleModule->TsToggleComponent \n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTerminusUIModule -->\n\nTsTooltipModule->TerminusUIModule\n\n\n\nTsCSVEntryModule -->\n\nTsTooltipModule->TsCSVEntryModule\n\n\n\nTsCopyModule -->\n\nTsTooltipModule->TsCopyModule\n\n\n\nTsFileUploadModule -->\n\nTsTooltipModule->TsFileUploadModule\n\n\n\nTsPaginatorModule -->\n\nTsTooltipModule->TsPaginatorModule\n\n\n\n\n\nTsTooltipComponent \n\nTsTooltipComponent \n\nTsTooltipComponent  -->\n\nTsTooltipModule->TsTooltipComponent \n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTerminusUIModule -->\n\nTsValidationMessagesModule->TerminusUIModule\n\n\n\nTsAutocompleteModule -->\n\nTsValidationMessagesModule->TsAutocompleteModule\n\n\n\nTsDatepickerModule -->\n\nTsValidationMessagesModule->TsDatepickerModule\n\n\n\nTsFileUploadModule -->\n\nTsValidationMessagesModule->TsFileUploadModule\n\n\n\nTsInputModule -->\n\nTsValidationMessagesModule->TsInputModule\n\n\n\nTsRadioGroupModule -->\n\nTsValidationMessagesModule->TsRadioGroupModule\n\n\n\nTsSelectModule -->\n\nTsValidationMessagesModule->TsSelectModule\n\n\n\n\n\nTsValidationMessagesComponent \n\nTsValidationMessagesComponent \n\nTsValidationMessagesComponent  -->\n\nTsValidationMessagesModule->TsValidationMessagesComponent \n\n\n\n\n\nTsValidatorsService\n\nTsValidatorsService\n\nTerminusUIModule -->\n\nTsValidatorsService->TerminusUIModule\n\n\n\nTsInputModule -->\n\nTsValidatorsService->TsInputModule\n\n\n\nTsLoginFormModule -->\n\nTsValidatorsService->TsLoginFormModule\n\n\n\n\n\nTsAutocompleteComponent\n\nTsAutocompleteComponent\n\nTsAutocompleteModule -->\n\nTsAutocompleteComponent->TsAutocompleteModule\n\n\n\n\n\nTsAutofocusDirective\n\nTsAutofocusDirective\n\nTsAutofocusModule -->\n\nTsAutofocusDirective->TsAutofocusModule\n\n\n\n\n\nTsButtonComponent\n\nTsButtonComponent\n\nTsButtonModule -->\n\nTsButtonComponent->TsButtonModule\n\n\n\n\n\nTsCSVEntryComponent\n\nTsCSVEntryComponent\n\nTsCSVEntryModule -->\n\nTsCSVEntryComponent->TsCSVEntryModule\n\n\n\n\n\nTsCardComponent\n\nTsCardComponent\n\nTsCardModule -->\n\nTsCardComponent->TsCardModule\n\n\n\n\n\nTsCardTitleDirective\n\nTsCardTitleDirective\n\nTsCardModule -->\n\nTsCardTitleDirective->TsCardModule\n\n\n\n\n\nTsChart2Component\n\nTsChart2Component\n\n\n\nTsChart2Module\n\nTsChart2Module\n\nTsChart2Module -->\n\nTsChart2Component->TsChart2Module\n\n\n\n\n\nTsChart2Component \n\nTsChart2Component \n\nTsChart2Component  -->\n\nTsChart2Module->TsChart2Component \n\n\n\n\n\nTsAmChartsService\n\nTsAmChartsService\n\nTsChart2Module -->\n\nTsAmChartsService->TsChart2Module\n\n\n\n\n\nTsChartComponent\n\nTsChartComponent\n\nTsChartModule -->\n\nTsChartComponent->TsChartModule\n\n\n\n\n\nTsChartPointDirective\n\nTsChartPointDirective\n\nTsChartModule -->\n\nTsChartPointDirective->TsChartModule\n\n\n\n\n\nTsChartSeriesDirective\n\nTsChartSeriesDirective\n\nTsChartModule -->\n\nTsChartSeriesDirective->TsChartModule\n\n\n\n\n\nHighchartsService\n\nHighchartsService\n\nTsChartModule -->\n\nHighchartsService->TsChartModule\n\n\n\n\n\nTsCheckboxComponent\n\nTsCheckboxComponent\n\nTsCheckboxModule -->\n\nTsCheckboxComponent->TsCheckboxModule\n\n\n\n\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n\nTsCheckboxComponent -->\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR->TsCheckboxComponent\n\n\n\n\n\nTsConfirmationDirective\n\nTsConfirmationDirective\n\nTsConfirmationModule -->\n\nTsConfirmationDirective->TsConfirmationModule\n\n\n\n\n\nTsConfirmationModalComponent\n\nTsConfirmationModalComponent\n\nTsConfirmationModule -->\n\nTsConfirmationModalComponent->TsConfirmationModule\n\n\n\n\n\nTsCopyComponent\n\nTsCopyComponent\n\nTsCopyModule -->\n\nTsCopyComponent->TsCopyModule\n\n\n\n\n\nTsDateRangeComponent\n\nTsDateRangeComponent\n\nTsDateRangeModule -->\n\nTsDateRangeComponent->TsDateRangeModule\n\n\n\n\n\nTsDatepickerComponent\n\nTsDatepickerComponent\n\nTsDatepickerModule -->\n\nTsDatepickerComponent->TsDatepickerModule\n\n\n\n\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR\n\nTsDatepickerComponent -->\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR->TsDatepickerComponent\n\n\n\n\n\nTsFileUploadComponent\n\nTsFileUploadComponent\n\nTsFileUploadModule -->\n\nTsFileUploadComponent->TsFileUploadModule\n\n\n\n\n\nTsDropProtectionService\n\nTsDropProtectionService\n\nTsFileUploadModule -->\n\nTsDropProtectionService->TsFileUploadModule\n\n\n\n\n\nTsIconButtonComponent\n\nTsIconButtonComponent\n\nTsIconButtonModule -->\n\nTsIconButtonComponent->TsIconButtonModule\n\n\n\n\n\nTsIconComponent\n\nTsIconComponent\n\nTsIconModule -->\n\nTsIconComponent->TsIconModule\n\n\n\n\n\nTsInputComponent\n\nTsInputComponent\n\nTsInputModule -->\n\nTsInputComponent->TsInputModule\n\n\n\n\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n\nTsInputComponent -->\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR->TsInputComponent\n\n\n\n\n\nTsLinkComponent\n\nTsLinkComponent\n\nTsLinkModule -->\n\nTsLinkComponent->TsLinkModule\n\n\n\n\n\nTsLoadingOverlayComponent\n\nTsLoadingOverlayComponent\n\nTsLoadingOverlayModule -->\n\nTsLoadingOverlayComponent->TsLoadingOverlayModule\n\n\n\n\n\nTsLoadingOverlayDirective\n\nTsLoadingOverlayDirective\n\nTsLoadingOverlayModule -->\n\nTsLoadingOverlayDirective->TsLoadingOverlayModule\n\n\n\n\n\nTsLoginFormComponent\n\nTsLoginFormComponent\n\nTsLoginFormModule -->\n\nTsLoginFormComponent->TsLoginFormModule\n\n\n\n\n\nTsMaskDirective\n\nTsMaskDirective\n\nTsMaskModule -->\n\nTsMaskDirective->TsMaskModule\n\n\n\n\n\nMASKED_INPUT_VALUE_ACCESSOR\n\nMASKED_INPUT_VALUE_ACCESSOR\n\nTsMaskDirective -->\n\nMASKED_INPUT_VALUE_ACCESSOR->TsMaskDirective\n\n\n\n\n\nTsMenuComponent\n\nTsMenuComponent\n\nTsMenuModule -->\n\nTsMenuComponent->TsMenuModule\n\n\n\n\n\nTsNavigationComponent\n\nTsNavigationComponent\n\nTsNavigationModule -->\n\nTsNavigationComponent->TsNavigationModule\n\n\n\n\n\nTsPaginatorComponent\n\nTsPaginatorComponent\n\nTsPaginatorModule -->\n\nTsPaginatorComponent->TsPaginatorModule\n\n\n\n\n\nTsDatePipe\n\nTsDatePipe\n\n\n\nTsPipesModule\n\nTsPipesModule\n\nTsPipesModule -->\n\nTsDatePipe->TsPipesModule\n\n\n\n\n\nTsRoundNumberPipe\n\nTsRoundNumberPipe\n\nTsPipesModule -->\n\nTsRoundNumberPipe->TsPipesModule\n\n\n\n\n\nTsSentenceCasePipe\n\nTsSentenceCasePipe\n\nTsPipesModule -->\n\nTsSentenceCasePipe->TsPipesModule\n\n\n\n\n\nTsTimeAgoPipe\n\nTsTimeAgoPipe\n\nTsPipesModule -->\n\nTsTimeAgoPipe->TsPipesModule\n\n\n\n\n\nTsTitleCasePipe\n\nTsTitleCasePipe\n\nTsPipesModule -->\n\nTsTitleCasePipe->TsPipesModule\n\n\n\n\n\nTsDatePipe \n\nTsDatePipe \n\nTsDatePipe  -->\n\nTsPipesModule->TsDatePipe \n\n\n\n\n\nTsRoundNumberPipe \n\nTsRoundNumberPipe \n\nTsRoundNumberPipe  -->\n\nTsPipesModule->TsRoundNumberPipe \n\n\n\n\n\nTsSentenceCasePipe \n\nTsSentenceCasePipe \n\nTsSentenceCasePipe  -->\n\nTsPipesModule->TsSentenceCasePipe \n\n\n\n\n\nTsTimeAgoPipe \n\nTsTimeAgoPipe \n\nTsTimeAgoPipe  -->\n\nTsPipesModule->TsTimeAgoPipe \n\n\n\n\n\nTsTitleCasePipe \n\nTsTitleCasePipe \n\nTsTitleCasePipe  -->\n\nTsPipesModule->TsTitleCasePipe \n\n\n\n\n\nTsRadioGroupComponent\n\nTsRadioGroupComponent\n\nTsRadioGroupModule -->\n\nTsRadioGroupComponent->TsRadioGroupModule\n\n\n\n\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n\nTsRadioGroupComponent -->\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR->TsRadioGroupComponent\n\n\n\n\n\nTsSearchComponent\n\nTsSearchComponent\n\nTsSearchModule -->\n\nTsSearchComponent->TsSearchModule\n\n\n\n\n\nTsSelectComponent\n\nTsSelectComponent\n\nTsSelectModule -->\n\nTsSelectComponent->TsSelectModule\n\n\n\n\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n\nTsSelectComponent -->\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR->TsSelectComponent\n\n\n\n\n\nTsSortDirective\n\nTsSortDirective\n\nTsSortModule -->\n\nTsSortDirective->TsSortModule\n\n\n\n\n\nTsSortHeaderComponent\n\nTsSortHeaderComponent\n\nTsSortModule -->\n\nTsSortHeaderComponent->TsSortModule\n\n\n\n\n\nTsVerticalSpacingDirective\n\nTsVerticalSpacingDirective\n\nTsSpacingModule -->\n\nTsVerticalSpacingDirective->TsSpacingModule\n\n\n\n\n\nTsCellDefDirective\n\nTsCellDefDirective\n\nTsTableModule -->\n\nTsCellDefDirective->TsTableModule\n\n\n\n\n\nTsCellDirective\n\nTsCellDirective\n\nTsTableModule -->\n\nTsCellDirective->TsTableModule\n\n\n\n\n\nTsColumnDefDirective\n\nTsColumnDefDirective\n\nTsTableModule -->\n\nTsColumnDefDirective->TsTableModule\n\n\n\n\n\nTsHeaderCellDefDirective\n\nTsHeaderCellDefDirective\n\nTsTableModule -->\n\nTsHeaderCellDefDirective->TsTableModule\n\n\n\n\n\nTsHeaderCellDirective\n\nTsHeaderCellDirective\n\nTsTableModule -->\n\nTsHeaderCellDirective->TsTableModule\n\n\n\n\n\nTsHeaderRowComponent\n\nTsHeaderRowComponent\n\nTsTableModule -->\n\nTsHeaderRowComponent->TsTableModule\n\n\n\n\n\nTsHeaderRowDefDirective\n\nTsHeaderRowDefDirective\n\nTsTableModule -->\n\nTsHeaderRowDefDirective->TsTableModule\n\n\n\n\n\nTsRowComponent\n\nTsRowComponent\n\nTsTableModule -->\n\nTsRowComponent->TsTableModule\n\n\n\n\n\nTsRowDefDirective\n\nTsRowDefDirective\n\nTsTableModule -->\n\nTsRowDefDirective->TsTableModule\n\n\n\n\n\nTsTableComponent\n\nTsTableComponent\n\nTsTableModule -->\n\nTsTableComponent->TsTableModule\n\n\n\n\n\n{ : , :  }\n\n{ : , :  }\n\nTsCellDefDirective -->\n\n{ : , :  }->TsCellDefDirective\n\n\n\nTsColumnDefDirective -->\n\n{ : , :  }->TsColumnDefDirective\n\n\n\nTsHeaderCellDefDirective -->\n\n{ : , :  }->TsHeaderCellDefDirective\n\n\n\nTsHeaderRowDefDirective -->\n\n{ : , :  }->TsHeaderRowDefDirective\n\n\n\nTsRowDefDirective -->\n\n{ : , :  }->TsRowDefDirective\n\n\n\n\n\nTsToggleComponent\n\nTsToggleComponent\n\nTsToggleModule -->\n\nTsToggleComponent->TsToggleModule\n\n\n\n\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n\nTsToggleComponent -->\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR->TsToggleComponent\n\n\n\n\n\nTsTooltipComponent\n\nTsTooltipComponent\n\nTsTooltipModule -->\n\nTsTooltipComponent->TsTooltipModule\n\n\n\n\n\nTsValidationMessagesComponent\n\nTsValidationMessagesComponent\n\nTsValidationMessagesModule -->\n\nTsValidationMessagesComponent->TsValidationMessagesModule\n\n\n\n\n\nTsValidationMessageService\n\nTsValidationMessageService\n\nTsValidationMessagesModule -->\n\nTsValidationMessageService->TsValidationMessagesModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            34 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        32 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        16 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        12 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        31 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MaskFunction   (terminus-ui/.../mask.directive.ts)\n                        \n                        \n                            MaskShortcutOptions   (terminus-ui/.../mask.directive.ts)\n                        \n                        \n                            TS_CUSTOM_ICON   (terminus-ui/.../icon.component.ts)\n                        \n                        \n                            TsAspectRatioTypes   (terminus-ui/.../card.component.ts)\n                        \n                        \n                            TsAutocompleteComparatorFn   (terminus-ui/.../autocomplete.component.ts)\n                        \n                        \n                            TsAutocompleteFormatterFn   (terminus-ui/.../autocomplete.component.ts)\n                        \n                        \n                            TsButtonActionTypes   (terminus-ui/.../button.component.ts)\n                        \n                        \n                            TsButtonFormatTypes   (terminus-ui/.../button.component.ts)\n                        \n                        \n                            TsButtonFunctionTypes   (terminus-ui/.../button.component.ts)\n                        \n                        \n                            TsCardBorderOptions   (terminus-ui/.../card.component.ts)\n                        \n                        \n                            TsChart2VisualizationOptions   (terminus-ui/.../chart2.component.ts)\n                        \n                        \n                            TsChartAxisType   (terminus-ui/.../options.interface.ts)\n                        \n                        \n                            TsChartData   (terminus-ui/.../options.interface.ts)\n                        \n                        \n                            TsChartLabelFormatterFn   (terminus-ui/.../options.interface.ts)\n                        \n                        \n                            TsChartMapTypes   (terminus-ui/.../options.interface.ts)\n                        \n                        \n                            TsChartStacking   (terminus-ui/.../options.interface.ts)\n                        \n                        \n                            TsChartVisualizationOptions   (terminus-ui/.../options.interface.ts)\n                        \n                        \n                            TsDateTypes   (terminus-ui/.../date.pipe.ts)\n                        \n                        \n                            TsFileAcceptedMimeTypes   (terminus-ui/.../mime-types.ts)\n                        \n                        \n                            TsFileImageDimensionConstraints   (terminus-ui/.../image-dimension-constraints.ts)\n                        \n                        \n                            TsInputAutocompleteTypes   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            TsInputTypes   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            TsMenuPositionTypesX   (terminus-ui/.../menu.component.ts)\n                        \n                        \n                            TsMenuPositionTypesY   (terminus-ui/.../menu.component.ts)\n                        \n                        \n                            TsMenuTriggerTypes   (terminus-ui/.../menu.component.ts)\n                        \n                        \n                            TsNavigationItem   (terminus-ui/.../navigation.component.ts)\n                        \n                        \n                            TsRadioFormatFn   (terminus-ui/.../radio-group.component.ts)\n                        \n                        \n                            TsSelectFormatFn   (terminus-ui/.../select.component.ts)\n                        \n                        \n                            TsSortDirection   (terminus-ui/.../sort.directive.ts)\n                        \n                        \n                            TsStyleThemeTypes   (terminus-ui/.../style-theme.types.ts)\n                        \n                        \n                            TsTooltipPositionTypes   (terminus-ui/.../tooltip.component.ts)\n                        \n                        \n                            TsVerticalSpacingTypes   (terminus-ui/.../vertical-spacing.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    terminus-ui/src/mask/mask.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        MaskFunction\n                    \n                \n                    \n                        \n                            A function that returns an array of RegExp (used to determine postal code RegExp)\n\n                        \n                    \n                \n                    \n                        MaskFunction:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        MaskShortcutOptions\n                    \n                \n                    \n                        \n                            Define the allowed mask shortcut option\n\n                        \n                    \n                \n                    \n                        MaskShortcutOptions:     \"phone\" | \"currency\" | \"number\" | \"percentage\" | \"postal\" | \"default\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/icon/icon.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TS_CUSTOM_ICON\n                    \n                \n                    \n                        \n                            Currently supported custom icons\n\n                        \n                    \n                \n                    \n                        TS_CUSTOM_ICON:     \n\n                    \n                \n            \n        \n\n    terminus-ui/src/card/card.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsAspectRatioTypes\n                    \n                \n                    \n                        \n                            Define the allowed aspect ratios. Used in TsCardComponent\n\n                        \n                    \n                \n                    \n                        TsAspectRatioTypes:     \"16:9\" | \"4:3\" | \"3:2\" | \"5:4\" | \"1:1\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsCardBorderOptions\n                    \n                \n                    \n                        \n                            Define allowed border sides. Used in TsCardComponent. Border color determined by the theme.\n\n                        \n                    \n                \n                    \n                        TsCardBorderOptions:     \"none\" | \"left\" | \"right\" | \"top\" | \"bottom\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/autocomplete/autocomplete.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsAutocompleteComparatorFn\n                    \n                \n                    \n                        \n                            Define a type for allowed TsAutocompleteComponent comparator function\n\n                        \n                    \n                \n                    \n                        TsAutocompleteComparatorFn:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsAutocompleteFormatterFn\n                    \n                \n                    \n                        \n                            Define a type for allowed TsAutocompleteComponent formatter function\n\n                        \n                    \n                \n                    \n                        TsAutocompleteFormatterFn:     function\n\n                    \n                \n            \n        \n\n    terminus-ui/src/button/button.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsButtonActionTypes\n                    \n                \n                    \n                        \n                            Define the allowed TsButtonComponent action types\n\n                        \n                    \n                \n                    \n                        TsButtonActionTypes:     \"Button\" | \"Submit\" | \"Menu\" | \"Reset\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsButtonFormatTypes\n                    \n                \n                    \n                        \n                            Define the allowed TsButtonComponent format types\n\n                        \n                    \n                \n                    \n                        TsButtonFormatTypes:     \"filled\" | \"hollow\" | \"collapsable\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsButtonFunctionTypes\n                    \n                \n                    \n                        \n                            Define the allowed TsButtonComponent action types\n\n                        \n                    \n                \n                    \n                        TsButtonFunctionTypes:     \"button\" | \"search\" | \"submit\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/chart2/chart2.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsChart2VisualizationOptions\n                    \n                \n                    \n                        \n                            Define the supported chart visualizations\n\n                        \n                    \n                \n                    \n                        TsChart2VisualizationOptions:     \"pie\" | \"xy\" | \"map\" | \"radar\" | \"treemap\" | \"sankey\" | \"chord\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/chart/options.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        TsChartAxisType\n                    \n                \n                    \n                        \n                            The type of axis.\nIn a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\nappropriate values like full hours or days. In a category axis, the point names of the chart's\nseries are used for categories, if not a categories array is defined.\n\n                        \n                    \n                \n                    \n                        TsChartAxisType:     \"category\" | \"datetime\" | \"linear\" | \"logarithmic\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsChartData\n                    \n                \n                    \n                        \n                            An array of data series'.\n\n                        \n                    \n                \n                    \n                        TsChartData:     TsChartDataItem[]\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsChartLabelFormatterFn\n                    \n                \n                    \n                        \n                            Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\nfor a specific point on series.\nAvailable data: this.percentage|point|series|total|x|y\n\n                        \n                    \n                \n                    \n                        TsChartLabelFormatterFn:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsChartMapTypes\n                    \n                \n                    \n                        \n                            The allowed map types\n\n                        \n                    \n                \n                    \n                        TsChartMapTypes:     \"europe\" | \"northAmerica\" | \"usa\" | \"worldContinents\" | \"world\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsChartStacking\n                    \n                \n                    \n                        \n                            Define how chart data should stack\n\n                        \n                    \n                \n                    \n                        TsChartStacking:     null | \"normal\" | \"percent\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsChartVisualizationOptions\n                    \n                \n                    \n                        \n                            Define the supported chart visualizations\n\n                        \n                    \n                \n                    \n                        TsChartVisualizationOptions:     \"area\" | \"bar\" | \"bullet\" | \"column\" | \"line\" | \"map\" | \"mapbubble\" | \"pie\" | \"scatter\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/pipes/date/date.pipe.ts\n    \n        \n            \n                \n                    \n                        \n                        TsDateTypes\n                    \n                \n                    \n                        \n                            Define the allowed date formats for the TsDatePipe.\n\n                        \n                    \n                \n                    \n                        TsDateTypes:     \"short\" | \"medium\" | \"extended\" | \"timestamp\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/file-upload/mime-types.ts\n    \n        \n            \n                \n                    \n                        \n                        TsFileAcceptedMimeTypes\n                    \n                \n                    \n                        \n                            Define the allowed mime types for TsFileUploadComponent\n\n                        \n                    \n                \n                    \n                        TsFileAcceptedMimeTypes:     \"text/csv\" | \"image/jpeg\" | \"image/jpg\" | \"image/png\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/file-upload/image-dimension-constraints.ts\n    \n        \n            \n                \n                    \n                        \n                        TsFileImageDimensionConstraints\n                    \n                \n                    \n                        \n                            An array of file size constraints\n\n                        \n                    \n                \n                    \n                        TsFileImageDimensionConstraints:     TsFileImageDimensionContraint[]\n\n                    \n                \n            \n        \n\n    terminus-ui/src/input/input.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsInputAutocompleteTypes\n                    \n                \n                    \n                        \n                            Define the allowed autocomplete variations for TsInputComponent\nNOTE: This is not all valid types; only the ones this library supports.\n\n                        \n                    \n                \n                    \n                        TsInputAutocompleteTypes:     \"off\" | \"on\" | \"name\" | \"email\" | \"username\" | \"new-password\" | \"current-password\" | \"tel\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsInputTypes\n                    \n                \n                    \n                        \n                            Define the allowed TsInputComponent input types\n\n                        \n                    \n                \n                    \n                        TsInputTypes:     \"text\" | \"password\" | \"email\" | \"hidden\" | \"number\" | \"search\" | \"tel\" | \"url\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/menu/menu.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsMenuPositionTypesX\n                    \n                \n                    \n                        \n                            Define the allowed X positions for a menu\n\n                        \n                    \n                \n                    \n                        TsMenuPositionTypesX:     \"before\" | \"after\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsMenuPositionTypesY\n                    \n                \n                    \n                        \n                            Define the allowed Y positions for a menu\n\n                        \n                    \n                \n                    \n                        TsMenuPositionTypesY:     \"above\" | \"below\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsMenuTriggerTypes\n                    \n                \n                    \n                        \n                            Define the allowed trigger types for a menu\n\n                        \n                    \n                \n                    \n                        TsMenuTriggerTypes:     \"default\" | \"utility\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/navigation/navigation.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsNavigationItem\n                    \n                \n                    \n                        \n                            Define the allowed keys and types for an item passed to the TsNavigationComponent\n\n                        \n                    \n                \n                    \n                        TsNavigationItem:     TsNavigationLinkItem | TsNavigationActionItem\n\n                    \n                \n            \n        \n\n    terminus-ui/src/radio-group/radio-group.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsRadioFormatFn\n                    \n                \n                    \n                        \n                            Expose the formatter function type used by TsRadioGroupComponent\n\n                        \n                    \n                \n                    \n                        TsRadioFormatFn:     function\n\n                    \n                \n            \n        \n\n    terminus-ui/src/select/select.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsSelectFormatFn\n                    \n                \n                    \n                        \n                            Expose the formatter function type\n\n                        \n                    \n                \n                    \n                        TsSelectFormatFn:     function\n\n                    \n                \n            \n        \n\n    terminus-ui/src/sort/sort.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        TsSortDirection\n                    \n                \n                    \n                        \n                            Define the allowed sort directions for {@link TsSort}\n\n                        \n                    \n                \n                    \n                        TsSortDirection:     \"asc\" | \"desc\" | \"\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/utilities/types/style-theme.types.ts\n    \n        \n            \n                \n                    \n                        \n                        TsStyleThemeTypes\n                    \n                \n                    \n                        \n                            Define the allowed theme types\n\n                        \n                    \n                \n                    \n                        TsStyleThemeTypes:     \"primary\" | \"accent\" | \"warn\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/tooltip/tooltip.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsTooltipPositionTypes\n                    \n                \n                    \n                        \n                            Define the accepted string values for the TsTooltipComponent position\n\n                        \n                    \n                \n                    \n                        TsTooltipPositionTypes:     \"left\" | \"right\" | \"above\" | \"below\" | \"before\" | \"after\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/spacing/vertical-spacing.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        TsVerticalSpacingTypes\n                    \n                \n                    \n                        \n                            Define the accepted string values for TsVerticalSpacingDirective\n\n                        \n                    \n                \n                    \n                        TsVerticalSpacingTypes:     \"small--2\" | \"small--1\" | \"small--0\" | \"none\" | \"default--0\" | \"large--0\" | \"large--1\" | \"large--2\" | \"large--3\" | \"large--4\" | \"large--5\" | \"large--6\"\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
