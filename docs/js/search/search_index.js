var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/KeyboardEvent.html",[0,0.76,1,3.13]],["body/interfaces/KeyboardEvent.html",[0,1.01,1,2.994,2,0.05,3,0.858,4,0.039,5,0.018,6,0.028,7,1.918,8,0.833,9,2.462,10,1.344,11,0.968,12,2.722,13,5.928,14,0.683,15,0.667,16,1.908,17,1.512,18,4.216,19,1.901,20,4.995,21,3.21,22,3.439,23,1.318,24,3.571,25,4.651,26,4.995,27,1.371,28,2.819,29,1.627,30,2.694,31,0.007,32,1.243,33,2.747,34,2.241,35,1.371,36,3.427,37,2.707,38,1.89,39,2.279,40,0.922,41,1.73,42,2.05,43,1.918,44,1.918,45,1.339,46,1.918,47,1.771,48,0.661,49,1.815,50,3.165,51,4.294,52,1.918,53,3.937,54,2.574,55,4.161,56,1.918,57,2.198,58,0.871,59,5.922,60,0.009,61,1.074,62,0.9,63,0.795,64,2.198,65,1.33,66,1.726,67,1.952,68,2.466,69,3.431,70,2.528,71,3.431,72,3.431,73,4.22,74,2.707,75,2.198,76,3.431,77,1.202,78,4.22,79,0.714,80,1.305,81,3.431,82,3.431,83,2.201,84,3.165,85,1.107,86,3.431,87,0.953,88,2.806,89,1.839,90,3.431,91,1.38,92,3.431,93,4.43,94,2.49,95,0.006,96,1.057,97,5.092,98,3.431,99,3.205,100,0.936,101,0.922,102,2.833,103,2.198,104,1.58,105,2.307,106,0.819,107,3.431,108,1.518,109,3.431,110,2.198,111,2.198,112,1.696,113,4.22,114,4.43,115,2.198,116,1.918,117,1.22,118,1.726,119,2.198,120,4.22,121,1.918,122,5.319,123,2.198,124,2.201,125,2.198,126,2.707,127,1.002,128,2.452,129,2.574,130,1.046,131,1.48,132,2.198,133,1.41,134,0.922,135,1.972,136,2.198,137,0.165,138,2.127,139,0.73,140,2.119,141,1.475,142,2.215,143,1.383,144,2.119,145,1.933,146,1.994,147,1.135,148,0.624,149,0.078,150,2.198,151,0.747,152,4.768,153,3.431,154,4.768,155,2.042,156,1.918,157,3.431,158,2.127,159,1.815,160,2.616,161,1.019,162,2.198,163,1.815,164,1.042,165,0.994,166,2.198,167,1.918,168,2.369,169,0.879,170,1.723,171,1.167,172,1.167,173,0.111,174,1.41,175,2.833,176,0.057,177,2.994,178,0.714,179,2.022,180,0.698,181,1.405,182,1.121,183,1.096,184,2.574,185,2.466,186,2.616,187,4.27,188,0.571,189,2.198,190,2.198,191,2.198,192,2.198,193,2.198,194,2.198,195,2.198,196,2.198,197,2.198,198,2.198,199,2.198,200,2.198,201,2.198,202,0.747,203,0.424,204,0.744,205,0.714,206,2.198,207,0.683,208,2.198,209,0.499,210,0.73,211,0.73,212,0.624,213,0.624,214,0.61,215,2.198,216,0.624,217,1.58,218,3.431,219,1.392,220,1.908,221,2.198,222,2.198,223,2.198,224,0.852,225,3.431,226,1.39,227,2.198,228,0.539,229,1.77,230,2.198,231,2.198,232,2.198,233,3.431,234,2.198,235,1.405,236,0.616,237,2.198,238,2.198,239,1.74,240,3.431,241,2.994,242,2.198,243,1.918,244,1.371,245,1.776,246,2.127,247,0.922,248,2.198,249,1.918,250,4.22,251,2.132,252,2.132,253,1.993,254,3.431,255,1.649,256,1.649,257,1.649,258,1.918,259,2.198,260,1.167,261,2.198,262,3.431,263,2.198,264,2.198,265,1.362,266,2.198,267,2.198,268,4.22,269,2.198,270,0.572,271,1.58,272,1.362,273,1.518,274,1.475,275,2.241,276,1.58,277,2.198,278,3.431,279,2.198,280,3.431,281,5.171,282,2.198,283,1.726,284,1.591,285,0.838,286,2.198,287,4.22,288,2.198,289,3.431,290,3.431,291,2.198,292,2.198,293,0.819,294,0.546,295,1.277,296,0.922,297,2.198,298,2.042,299,0.761,300,1.918,301,2.198,302,2.042,303,2.198,304,2.042,305,1.58,306,1.815,307,1.362,308,1.238,309,1.918,310,2.198,311,2.369,312,2.198,313,2.042,314,2.198,315,2.198,316,2.198,317,2.042,318,2.042,319,2.198,320,2.198,321,1.726,322,1.518,323,1.58,324,2.198,325,2.198,326,1.277,327,1.238,328,1.278,329,1.318,330,2.198,331,2.198,332,2.042,333,1.41,334,1.019,335,2.198,336,2.042,337,2.198,338,2.198,339,0.698,340,2.198,341,0.838,342,2.198,343,2.198,344,1.074,345,1.167,346,2.198,347,2.198,348,3.431,349,2.198,350,1.726,351,2.198]],["title/interfaces/Mask.html",[0,0.76,352,2.817]],["body/interfaces/Mask.html",[0,1.142,2,0.076,3,1.299,4,0.059,5,0.027,6,0.027,8,0.657,9,1.585,10,1.311,11,0.857,14,1.034,15,1.011,16,2.11,17,2.058,19,1.791,21,1.467,23,1.369,31,0.005,32,0.755,36,2.393,38,1.418,39,2.058,40,1.396,41,1.339,45,2.403,47,1.719,58,1.485,60,0.009,63,0.929,65,1.132,79,1.751,80,1.216,85,1.357,88,2.214,91,1.453,94,1.269,95,0.007,100,1.415,101,1.959,106,1.24,117,1.184,124,2.995,127,1.461,134,2.452,137,0.163,141,1.431,143,1.342,144,2.345,149,0.119,151,1.131,173,0.13,176,0.04,183,0.865,185,3.356,188,0.865,203,0.642,209,0.755,214,0.925,216,1.326,220,2.782,224,1.339,226,1.65,228,0.689,236,1.049,239,1.712,244,2.155,245,1.739,251,1.739,252,1.739,270,0.778,276,3.876,293,1.739,296,1.396,308,1.401,328,2.177,341,2.347,352,5.881,353,2.905,354,0.541,355,2.8,356,0.989,357,6.398,358,6.468,359,5.845,360,2.032,361,6.398,362,5.903,363,2.614,364,3.105,365,4.706,366,3.644,367,3.644,368,5.111,369,5.01,370,5.903,371,4.706,372,5.929,373,3.644,374,3.329,375,2.497,376,2.393,377,3.644,378,2.749,379,3.644,380,5.903,381,4.045,382,3.644,383,3.667,384,5.111,385,2.995,386,2.8,387,3.644,388,2.749,389,3.224,390,4.074,391,3.644,392,3.644,393,3.644,394,3.644,395,3.093,396,1.516,397,3.329,398,3.093,399,3.329,400,4.235,401,5.903,402,1.996,403,3.093,404,4.338,405,5.431,406,3.855,407,3.093,408,1.396,409,2.393,410,1.268,411,3.855,412,1.719,413,1.959,414,2.299,415,2.393,416,1.82,417,3.644,418,2.393,419,4.074,420,5.111,421,3.644,422,3.644,423,3.644,424,2.393,425,3.644,426,3.644,427,3.644,428,1.431,429,3.644,430,1.157,431,3.644,432,1.934,433,3.644,434,3.644,435,3.644,436,3.644,437,3.038,438,5.903,439,2.905,440,3.644,441,3.356,442,2.905,443,3.644,444,3.644,445,6.398,446,2.905,447,3.644,448,3.644,449,3.644,450,3.644,451,3.644,452,5.392,453,5.392,454,3.644,455,3.644,456,3.644,457,2.299,458,4.074,459,3.644,460,3.644]],["title/interfaces/MaskCollection.html",[0,0.76,403,3.333]],["body/interfaces/MaskCollection.html",[0,1.154,2,0.077,3,1.324,4,0.061,5,0.028,6,0.039,8,0.67,9,2.251,10,1.296,11,0.908,14,1.053,15,1.03,16,2.138,17,2.085,19,1.809,21,1.495,23,1.372,31,0.005,32,0.769,36,2.438,38,1.436,39,2.085,40,1.423,41,0.842,45,2.419,47,1.751,58,1.497,60,0.009,63,0.891,65,1.139,79,1.769,80,1.224,85,1.368,88,2.255,91,1.461,94,1.293,95,0.007,100,1.423,101,1.984,106,1.263,117,1.206,124,3.034,127,1.471,134,2.472,137,0.164,141,1.458,143,1.348,144,2.375,149,0.121,151,1.152,173,0.131,176,0.04,183,0.881,185,2.438,188,0.881,203,0.654,209,0.769,214,0.942,216,1.343,220,2.801,224,1.353,226,1.657,228,0.696,236,1.057,239,1.729,244,2.177,251,1.762,252,1.762,270,0.788,276,3.915,293,1.762,296,1.423,308,1.415,328,2.195,341,2.363,352,5.863,353,2.959,354,0.551,355,2.034,357,3.712,358,6.12,359,4.729,360,2.048,361,6.45,362,5.962,363,2.663,364,3.145,365,4.753,366,3.712,367,3.712,368,5.177,369,5.06,370,5.962,371,4.753,372,5.964,373,3.712,374,3.391,375,2.544,376,2.438,377,3.712,378,2.8,379,3.712,380,5.962,381,4.085,382,3.712,383,3.714,384,5.177,385,3.034,386,2.836,387,3.712,388,2.8,389,3.266,390,4.127,391,3.712,392,3.712,393,3.712,394,3.712,395,3.151,396,1.536,397,3.391,398,3.151,399,3.391,400,4.277,401,5.962,402,2.836,403,4.395,404,4.395,405,5.475,406,3.905,407,3.151,408,1.423,409,2.438,410,1.285,411,3.905,412,1.751,413,1.984,414,2.342,415,2.438,416,1.854,417,3.712,418,2.438,419,4.127,420,5.177,421,3.712,422,3.712,423,3.712,424,2.438,425,3.712,426,3.712,427,3.712,428,1.458,429,3.712,430,1.179,431,3.712,432,1.97,433,3.712,434,3.712,435,3.712,436,3.712,437,3.068,438,5.962,439,2.959,440,3.712,441,3.4,442,2.959,443,3.712,444,3.712,445,6.45,446,2.959,447,3.712,448,3.712,449,3.712,450,3.712,451,3.712,452,5.446,453,5.446,454,3.712,455,3.712,456,3.712,457,2.342,458,4.127,459,3.712,460,3.712,461,4.2]],["title/interfaces/MouseEvent.html",[0,0.76,174,2.301]],["body/interfaces/MouseEvent.html",[0,1.01,1,1.918,2,0.05,3,0.858,4,0.039,5,0.018,6,0.028,7,1.918,8,0.833,9,2.462,10,1.344,11,0.968,13,5.928,14,0.683,15,0.667,16,1.908,17,1.512,18,4.216,19,1.901,20,4.995,21,3.21,22,3.439,23,1.318,24,3.571,25,4.651,26,4.995,27,1.371,28,2.819,29,1.627,30,2.694,31,0.007,32,1.243,33,2.747,34,2.241,35,1.371,36,3.427,37,2.707,38,1.89,39,2.279,40,0.922,41,1.73,42,2.05,43,1.918,44,1.918,45,1.339,46,1.918,47,1.771,48,0.661,49,1.815,50,3.165,51,4.294,52,1.918,53,3.937,54,2.574,55,4.161,56,1.918,57,2.198,58,0.871,59,5.922,60,0.009,61,1.074,62,0.9,63,0.795,64,2.198,65,1.33,66,1.726,67,1.952,68,2.466,69,3.431,70,2.528,71,3.431,72,3.431,73,4.22,74,2.707,75,2.198,76,3.431,77,1.202,78,4.22,79,0.714,80,1.305,81,3.431,82,3.431,83,2.201,84,3.165,85,1.107,86,3.431,87,0.953,88,2.806,89,1.839,90,3.431,91,1.38,92,3.431,93,4.43,94,2.49,95,0.006,96,1.057,97,5.092,98,3.431,99,3.205,100,0.936,101,0.922,102,2.833,103,2.198,104,1.58,105,2.307,106,0.819,107,3.431,108,1.518,109,3.431,110,2.198,111,2.198,112,1.696,113,4.22,114,4.43,115,2.198,116,1.918,117,1.22,118,1.726,119,2.198,120,4.22,121,1.918,122,5.319,123,2.198,124,2.201,125,2.198,126,2.707,127,1.002,128,2.452,129,2.574,130,1.046,131,1.48,132,2.198,133,1.41,134,0.922,135,1.972,136,2.198,137,0.165,138,2.127,139,0.73,140,2.119,141,1.475,142,2.215,143,1.383,144,2.119,145,1.933,146,1.994,147,1.135,148,0.624,149,0.078,150,2.198,151,0.747,152,4.768,153,3.431,154,4.768,155,2.042,156,1.918,157,3.431,158,2.127,159,1.815,160,2.616,161,1.019,162,2.198,163,1.815,164,1.042,165,0.994,166,2.198,167,1.918,168,2.369,169,0.879,170,1.723,171,1.167,172,1.167,173,0.111,174,2.201,175,2.833,176,0.057,177,2.994,178,0.714,179,2.022,180,0.698,181,1.405,182,1.121,183,1.096,184,2.574,185,2.466,186,2.616,187,4.27,188,0.571,189,2.198,190,2.198,191,2.198,192,2.198,193,2.198,194,2.198,195,2.198,196,2.198,197,2.198,198,2.198,199,2.198,200,2.198,201,2.198,202,0.747,203,0.424,204,0.744,205,0.714,206,2.198,207,0.683,208,2.198,209,0.499,210,0.73,211,0.73,212,0.624,213,0.624,214,0.61,215,2.198,216,0.624,217,1.58,218,3.431,219,1.392,220,1.908,221,2.198,222,2.198,223,2.198,224,0.852,225,3.431,226,1.39,227,2.198,228,0.539,229,1.77,230,2.198,231,2.198,232,2.198,233,3.431,234,2.198,235,1.405,236,0.616,237,2.198,238,2.198,239,1.74,240,3.431,241,2.994,242,2.198,243,1.918,244,1.371,245,1.776,246,2.127,247,0.922,248,2.198,249,1.918,250,4.22,251,2.132,252,2.132,253,1.993,254,3.431,255,1.649,256,1.649,257,1.649,258,1.918,259,2.198,260,1.167,261,2.198,262,3.431,263,2.198,264,2.198,265,1.362,266,2.198,267,2.198,268,4.22,269,2.198,270,0.572,271,1.58,272,1.362,273,1.518,274,1.475,275,2.241,276,1.58,277,2.198,278,3.431,279,2.198,280,3.431,281,5.171,282,2.198,283,1.726,284,1.591,285,0.838,286,2.198,287,4.22,288,2.198,289,3.431,290,3.431,291,2.198,292,2.198,293,0.819,294,0.546,295,1.277,296,0.922,297,2.198,298,2.042,299,0.761,300,1.918,301,2.198,302,2.042,303,2.198,304,2.042,305,1.58,306,1.815,307,1.362,308,1.238,309,1.918,310,2.198,311,2.369,312,2.198,313,2.042,314,2.198,315,2.198,316,2.198,317,2.042,318,2.042,319,2.198,320,2.198,321,1.726,322,1.518,323,1.58,324,2.198,325,2.198,326,1.277,327,1.238,328,1.278,329,1.318,330,2.198,331,2.198,332,2.042,333,1.41,334,1.019,335,2.198,336,2.042,337,2.198,338,2.198,339,0.698,340,2.198,341,0.838,342,2.198,343,2.198,344,1.074,345,1.167,346,2.198,347,2.198,348,3.431,349,2.198,350,1.726,351,2.198,462,2.722]],["title/interfaces/NavigationItemBase.html",[0,0.76,463,2.691]],["body/interfaces/NavigationItemBase.html",[0,1.291,2,0.06,4,0.047,5,0.022,6,0.022,8,0.519,9,2.667,10,1.332,11,0.983,19,1.861,21,1.158,23,0.888,28,1.251,29,1.399,31,0.005,35,1.05,37,1.686,38,1.701,39,2.957,40,1.977,41,1.299,42,2.026,45,1.026,47,1.357,48,0.631,51,1.629,60,0.009,63,0.87,65,1.247,68,1.889,74,2.523,79,0.853,80,1.325,83,1.686,85,0.61,89,1.221,91,0.872,94,1.499,95,0.005,96,1.488,100,1.16,101,1.102,104,1.889,105,1.437,106,1.949,112,0.935,126,2.523,127,1.611,128,4.335,131,0.816,133,1.686,135,1.499,137,0.131,138,2.438,139,0.873,140,2.367,141,2.026,142,1.715,143,1.033,146,1.431,147,1.357,148,0.746,149,0.094,158,1.629,160,3.473,161,1.219,164,0.798,169,1.05,173,0.124,174,1.686,176,0.056,178,1.277,179,2.025,180,0.834,182,1.39,183,1.628,186,3.778,188,0.683,202,0.893,203,0.507,204,0.852,205,0.853,207,0.816,209,0.596,210,0.873,211,0.873,212,0.746,213,0.746,214,0.73,216,0.746,219,1.197,220,1.188,224,1.645,226,1.48,235,2.294,239,1.661,244,1.572,246,2.921,247,1.65,251,1.465,252,1.465,270,1.016,272,1.629,273,1.815,294,0.653,295,1.527,299,1.045,307,1.629,308,1.527,326,2.738,328,1.465,334,1.219,339,1.661,344,2.304,354,0.427,356,0.833,360,1.638,396,1.699,402,1.576,424,1.889,428,1.691,430,1.367,437,2.216,463,3.925,464,1.971,465,2.324,466,4.625,467,2.701,468,4.32,469,5.175,470,5.172,471,3.247,472,2.064,473,1.975,474,2.95,475,1.971,476,2.17,477,2.95,478,3.388,479,2.17,480,2.716,481,3.247,482,2.15,483,2.827,484,4.4,485,3.123,486,1.437,487,3.089,488,2.064,489,2.17,490,2.827,491,2.17,492,1.815,493,5.125,494,2.17,495,2.95,496,1.815,497,2.367,498,2.591,499,3.247,500,1.971,501,1.93,502,2.523,503,1.336,504,4.807,505,1.686,506,2.17,507,2.17,508,2.17,509,2.17,510,1.889,511,2.17,512,2.921,513,2.031,514,3.772,515,2.17,516,3.247,517,1.748,518,2.17,519,1.971,520,3.247,521,3.925,522,2.17,523,2.17,524,3.891,525,3.247,526,2.17,527,2.17,528,2.17,529,2.17,530,2.17,531,2.359,532,2.17,533,2.17,534,3.247,535,2.17,536,2.17,537,2.17,538,3.247,539,3.247,540,4.32,541,1.076,542,3.089,543,2.17,544,2.17,545,2.17,546,2.17,547,2.17,548,2.304,549,2.064,550,2.17,551,2.17,552,2.17,553,0.979,554,1.285,555,1.576,556,1.32,557,1.527,558,1.629,559,2.17,560,3.247,561,2.17,562,2.17,563,2.17,564,3.089,565,2.17,566,2.064,567,2.17,568,3.247,569,2.064,570,2.17,571,1.629,572,2.17,573,1.889,574,2.17,575,2.17,576,2.17,577,3.089,578,2.17,579,2.17,580,2.95,581,2.17,582,2.17,583,1.748,584,1.748,585,2.17,586,3.247,587,3.247,588,1.251,589,3.247,590,3.247,591,2.827,592,2.17,593,3.247,594,4.32,595,2.17,596,2.17,597,3.247,598,3.535,599,2.17,600,2.17,601,1.815,602,1.465,603,1.629,604,1.815,605,2.17,606,2.17,607,2.17,608,2.17,609,1.815,610,2.17,611,2.064,612,2.17,613,2.17]],["title/modules/TerminusUIModule.html",[614,0.54,615,3.333]],["body/modules/TerminusUIModule.html",[2,0.065,4,0.051,5,0.034,6,0.023,31,0.005,32,0.649,35,1.98,48,0.658,60,0.009,62,1.171,87,0.794,89,1.538,95,0.005,112,1.939,137,0.209,149,0.102,173,0.118,176,0.034,228,0.633,274,1.23,285,1.09,299,0.634,339,1.33,410,1.345,553,1.845,558,3.071,614,0.873,615,7.141,616,0.908,617,0.62,618,0.972,619,3.131,620,3.131,621,3.131,622,3.131,623,3.131,624,2.367,625,5.959,626,5.637,627,4.38,628,5.959,629,5.959,630,5.959,631,5.637,632,5.959,633,5.959,634,5.959,635,5.637,636,5.959,637,5.362,638,3.733,639,5.122,640,5.637,641,5.959,642,5.959,643,5.959,644,5.637,645,5.959,646,5.637,647,5.959,648,5.959,649,5.959,650,5.637,651,5.637,652,5.637,653,5.959,654,5.959,655,4.908,656,4.54,657,4.358,658,1.456,659,3.542,660,2.658,661,1.456,662,3.542,663,3.131,664,1.902,665,3.542,666,3.542,667,3.131,668,3.542,669,3.542,670,1.171,671,2.361,672,3.542,673,1.065,674,2.658,675,3.542,676,3.131,677,2.658,678,3.542,679,1.116,680,2.361,681,2.86,682,1.773,683,2.658,684,3.131,685,2.496,686,3.542,687,2.496,688,3.542,689,3.542,690,3.131,691,3.542,692,3.131,693,4.323,694,3.542,695,1.23,696,2.246,697,3.542,698,3.542,699,3.542,700,3.131,701,3.131,702,3.131,703,3.542,704,3.542,705,2.496,706,1.835,707,2.246,708,6.135,709,3.561,710,4.953,711,6.135,712,2.496,713,2.145,714,2.145]],["title/injectables/TsAmChartsService.html",[553,1.336,715,2.817]],["body/injectables/TsAmChartsService.html",[0,1.089,2,0.117,4,0.092,5,0.042,6,0.055,8,1.016,11,0.909,31,0.007,41,1.277,45,2.008,60,0.009,63,0.861,65,1.225,95,0.007,127,1.473,130,2.953,137,0.143,149,0.183,173,0.135,176,0.061,219,1.306,251,2.31,252,2.31,270,0.857,284,3.089,294,1.541,345,2.732,354,0.836,356,1.314,396,1.67,553,2.678,554,3.032,715,4.872,716,4.779,717,3.295,718,6.403,719,6.37,720,5.937,721,6.37,722,1.748,723,3.3,724,6.37,725,6.203,726,4.489,727,4.247,728,3.697,729,4.489,730,3.697,731,3.552,732,4.779,733,4.247,734,5.143,735,5.63,736,6.791,737,5.63,738,5.63]],["title/interfaces/TsAmChartsToken.html",[0,0.76,720,2.962]],["body/interfaces/TsAmChartsToken.html",[0,1.322,2,0.119,4,0.093,5,0.043,6,0.043,8,1.026,31,0.007,41,1.724,45,2.028,60,0.009,63,0.964,65,0.955,95,0.007,127,1.482,130,2.474,137,0.145,149,0.185,173,0.136,176,0.062,219,1.32,251,2.325,252,2.325,284,3.343,294,1.291,345,2.76,356,1.322,396,1.688,553,2.585,554,2.54,715,4.081,716,4.829,717,2.76,718,5.838,720,5.524,725,6.241,726,6.056,727,5.73,728,4.988,729,4.535,730,3.735,731,3.589,732,4.829,733,4.29,734,5.196,735,5.689,736,6.833,737,5.689,738,5.689]],["title/modules/TsAutocompleteModule.html",[614,0.54,625,3.13]],["body/modules/TsAutocompleteModule.html",[2,0.114,4,0.089,5,0.041,6,0.041,31,0.007,32,1.129,60,0.009,67,3.054,87,1.381,95,0.007,137,0.209,149,0.177,151,1.69,155,4.622,173,0.143,176,0.059,184,3.731,228,0.635,299,1.103,410,1.783,614,0.915,616,1.579,617,1.078,618,1.69,625,6.532,638,3.901,639,5.352,656,4.744,658,2.113,661,2.113,682,3.083,683,4.622,706,3.191,707,3.906,739,5.445,740,5.445,741,6.16,742,5.445,743,6.16,744,2.212,745,1.769,746,4.198,747,5.019,748,7.528,749,7.528,750,6.16,751,5.648,752,4.622,753,6.654,754,4.974,755,7.528]],["title/classes/TsAutocompleteSelectedEvent.html",[176,0.043,177,3.13]],["body/classes/TsAutocompleteSelectedEvent.html",[0,0.895,1,1.922,2,0.05,3,0.86,4,0.039,5,0.018,6,0.018,7,1.922,8,0.679,9,2.272,10,1.337,11,0.957,13,5.93,14,0.684,15,0.669,16,1.91,17,1.515,18,4.219,19,1.903,20,4.999,21,3.21,22,3.442,23,1.319,24,3.575,25,4.654,26,4.999,27,1.374,28,2.821,29,1.628,30,2.699,31,0.007,32,1.244,33,2.749,34,2.244,35,1.374,36,3.431,37,2.71,38,1.891,39,2.281,40,0.924,41,1.731,42,2.052,43,1.922,44,1.922,45,1.341,46,1.922,47,1.774,48,0.661,49,1.818,50,3.169,51,4.296,52,1.922,53,3.941,54,2.577,55,4.165,56,1.922,57,2.202,58,0.873,59,5.926,60,0.009,61,1.077,62,0.902,63,0.796,64,2.202,65,1.331,66,1.73,67,1.954,68,2.47,69,3.436,70,2.53,71,3.436,72,3.436,73,4.225,74,2.71,75,2.202,76,3.436,77,1.204,78,4.225,79,0.715,80,1.305,81,3.436,82,3.436,83,2.204,84,3.169,85,1.108,86,3.436,87,0.954,88,2.81,89,1.84,90,3.436,91,1.381,92,3.436,93,4.435,94,2.491,95,0.006,96,1.059,97,5.096,98,3.436,99,3.208,100,0.937,101,0.924,102,2.837,103,2.202,104,1.583,105,2.31,106,0.82,107,3.436,108,1.521,109,3.436,110,2.202,111,2.202,112,1.698,113,4.225,114,4.435,115,2.202,116,1.922,117,1.222,118,1.73,119,2.202,120,4.225,121,1.922,122,5.323,123,2.202,124,2.204,125,2.202,126,2.71,127,1.003,128,2.455,129,2.577,130,1.048,131,1.482,132,2.202,133,1.413,134,0.924,135,1.973,136,2.202,137,0.165,138,2.13,139,0.732,140,2.122,141,1.477,142,2.216,143,1.383,144,2.122,145,1.936,146,1.996,147,1.137,148,0.625,149,0.078,150,2.202,151,0.748,152,4.773,153,4.225,154,4.773,155,2.046,156,1.922,157,3.436,158,2.13,159,1.818,160,2.619,161,1.021,162,2.202,163,1.818,164,1.043,165,0.996,166,2.202,167,1.922,168,2.373,169,0.88,170,1.726,171,1.17,172,1.17,173,0.112,174,1.413,175,2.837,176,0.062,177,3.687,178,1.116,179,2.023,180,0.699,181,1.407,182,1.122,183,1.097,184,2.577,185,2.47,186,2.619,187,4.273,188,0.572,189,2.202,190,2.202,191,2.202,192,2.202,193,2.202,194,2.202,195,2.202,196,2.202,197,2.202,198,2.202,199,2.202,200,2.202,201,2.202,202,0.748,203,0.425,204,0.745,205,0.715,206,2.202,207,0.684,208,2.202,209,0.5,210,0.732,211,0.732,212,0.625,213,0.625,214,0.612,215,2.202,216,0.625,217,1.583,218,3.436,219,1.393,220,1.91,221,2.202,222,2.202,223,2.202,224,0.853,225,3.436,226,1.391,227,2.202,228,0.54,229,1.772,230,2.202,231,2.202,232,2.202,233,3.436,234,2.202,235,1.407,236,0.617,237,2.202,238,2.202,239,1.742,240,3.436,241,2.999,242,2.202,243,1.922,244,1.374,245,1.778,246,2.13,247,0.924,248,2.202,249,1.922,250,4.225,251,2.134,252,2.134,253,1.996,254,3.436,255,1.652,256,1.652,257,1.652,258,1.922,259,2.202,260,1.17,261,2.202,262,3.436,263,2.202,264,2.202,265,1.365,266,2.202,267,2.202,268,4.225,269,2.202,270,0.573,271,1.583,272,1.365,273,1.521,274,1.477,275,2.244,276,1.583,277,2.202,278,3.436,279,2.202,280,3.436,281,5.176,282,2.202,283,1.73,284,1.594,285,0.84,286,2.202,287,4.225,288,2.202,289,3.436,290,3.436,291,2.202,292,2.202,293,0.82,294,0.547,295,1.279,296,0.924,297,2.202,298,2.046,299,0.762,300,1.922,301,2.202,302,2.046,303,2.202,304,2.046,305,1.583,306,1.818,307,1.365,308,1.24,309,1.922,310,2.202,311,2.373,312,2.202,313,2.046,314,2.202,315,2.202,316,2.202,317,2.046,318,2.046,319,2.202,320,2.202,321,1.73,322,1.521,323,1.583,324,2.202,325,2.202,326,1.279,327,1.241,328,1.28,329,1.321,330,2.202,331,2.202,332,2.046,333,1.413,334,1.021,335,2.202,336,2.046,337,2.202,338,2.202,339,0.699,340,2.202,341,0.84,342,2.202,343,2.202,344,1.077,345,1.17,346,2.202,347,2.202,348,3.436,349,2.202,350,1.73,351,2.202]],["title/directives/TsAutofocusDirective.html",[236,0.644,756,1.542]],["body/directives/TsAutofocusDirective.html",[2,0.1,3,1.716,4,0.079,5,0.036,6,0.057,8,0.868,10,1.085,11,1.054,14,1.365,15,1.334,16,2.543,17,2.479,21,1.937,23,1.303,31,0.007,38,1.884,41,1.397,60,0.009,63,0.908,65,1.203,80,1.111,85,1.306,91,0.975,95,0.007,96,0.975,100,1.248,106,2.518,127,1.043,137,0.157,138,3.846,140,3.532,141,2.974,143,1.389,144,2.825,149,0.157,164,1.334,165,1.987,173,0.089,176,0.052,183,1.868,188,1.461,203,1.085,216,1.597,220,2.543,224,1.541,226,1.642,236,1.241,245,1.637,251,1.637,252,1.637,253,2.553,270,0.938,285,2.145,294,1.397,307,4.055,308,1.612,326,2.553,339,1.396,354,0.714,356,1.192,408,1.844,416,3.392,430,1.528,446,3.835,497,2.825,501,1.799,505,2.819,557,3.268,588,2.092,709,3.159,722,1.911,756,2.419,757,4.811,758,7.161,759,6.427,760,6.967,761,4.909,762,1.396,763,8.566,764,8.566,765,2.494,766,3.835,767,5.443,768,6.967,769,5.443,770,6.078,771,5.443,772,5.443,773,3.741,774,3.159,775,4.811,776,2.476,777,3.451,778,5.443,779,2.148,780,5.443,781,6.967,782,3.159,783,5.443,784,6.967,785,5.443]],["title/modules/TsAutofocusModule.html",[614,0.54,626,2.962]],["body/modules/TsAutofocusModule.html",[2,0.124,4,0.097,5,0.044,6,0.044,31,0.007,60,0.009,87,1.507,95,0.007,137,0.196,149,0.193,173,0.146,176,0.065,228,0.693,299,1.204,410,1.851,614,0.964,616,1.723,617,1.176,618,1.844,626,6.07,658,2.226,661,2.226,744,2.331,745,1.93,756,3.24,786,5.941,787,5.941,788,5.941,789,6.721,790,7.933]],["title/modules/TsButtonModule.html",[614,0.54,627,2.301]],["body/modules/TsButtonModule.html",[2,0.118,4,0.093,5,0.043,6,0.043,31,0.007,60,0.009,87,1.442,95,0.007,137,0.206,149,0.185,164,1.576,169,2.075,173,0.144,176,0.062,184,3.893,228,0.797,299,1.151,410,1.816,614,0.938,616,1.648,617,1.125,618,1.764,627,4.746,638,3.94,658,2.168,661,2.168,682,3.217,744,2.27,745,1.846,753,6.828,754,5.19,791,5.682,792,5.682,793,6.429,794,5.682,795,3.07,796,6.429,797,5.796,798,4.823,799,5.796,800,6.828]],["title/modules/TsCSVEntryModule.html",[614,0.54,628,3.13]],["body/modules/TsCSVEntryModule.html",[2,0.114,4,0.089,5,0.041,6,0.041,31,0.007,60,0.009,87,1.386,95,0.007,137,0.207,149,0.178,151,1.696,173,0.143,176,0.059,228,0.638,299,1.107,410,1.785,548,2.439,614,0.916,616,1.585,617,1.082,618,1.696,627,4.58,628,6.571,637,5.607,638,3.904,655,5.132,658,2.117,661,2.117,664,3.319,670,2.494,671,4.12,679,1.948,680,4.12,681,4.99,682,3.093,705,4.355,744,2.217,745,1.775,747,5.029,801,5.463,802,5.463,803,6.181,804,5.463,805,3.208,806,4.355,807,6.181,808,4.378,809,3.319,810,7.543]],["title/interfaces/TsCSVEntryRecord.html",[0,0.76,811,3.333]],["body/interfaces/TsCSVEntryRecord.html",[0,0.879,2,0.077,3,0.836,4,0.038,5,0.034,6,0.018,8,1.22,9,1.976,10,1.345,11,0.86,14,1.683,15,1.944,16,1.876,17,1.482,18,1.424,19,2.005,23,0.962,27,1.344,29,1.232,31,0.005,32,1.491,33,2.713,35,1.344,37,4.04,38,0.65,39,2.499,40,0.899,42,1.446,48,0.616,56,1.869,58,1.377,60,0.009,61,2.65,63,0.576,65,1.336,80,1.395,84,1.607,89,0.665,91,1.44,95,0.005,100,0.475,102,1.768,106,1.252,112,0.762,117,1.672,127,1.52,130,1.976,131,2.082,134,0.899,135,1.582,137,0.151,139,0.711,140,2.084,142,1.51,143,1.22,145,1.894,146,1.224,148,0.608,149,0.076,151,0.728,156,1.869,159,1.768,163,1.768,164,1.021,165,0.968,168,2.322,169,0.856,173,0.084,176,0.049,179,2.005,180,0.68,181,1.377,182,1.249,185,2.417,186,1.328,188,0.873,202,0.728,203,0.413,204,0.9,205,0.696,207,0.665,209,0.486,210,0.711,211,0.711,212,0.608,213,0.608,214,0.595,216,0.955,219,1.054,220,0.968,226,1.529,235,0.877,239,2.267,241,3.622,245,2.111,251,1.252,252,1.252,255,1.607,265,2.084,270,0.784,271,1.54,274,2.596,275,2.713,293,1.252,294,0.532,296,1.972,306,1.768,308,1.605,311,1.479,326,1.244,327,1.207,328,2.249,334,1.559,339,1.622,341,1.282,344,2.029,350,1.682,354,0.348,356,0.712,375,3.832,396,1.761,428,0.921,430,2.35,432,1.244,457,1.479,470,2.417,473,1.689,486,1.171,498,0.944,501,0.877,503,1.597,548,1.047,556,1.076,558,1.328,588,2.238,603,2.914,670,2.768,671,1.768,717,2.204,761,2.934,765,0.817,779,1.047,805,0.921,806,1.869,811,4.368,812,1.99,813,3.259,814,4.365,815,3.519,816,5.592,817,6.491,818,2.776,819,5.146,820,2.191,821,0.921,822,1.285,823,5.146,824,2.345,825,3.362,826,4.15,827,3.247,828,2.345,829,1.99,830,1.99,831,1.607,832,2.361,833,3.124,834,2.345,835,2.345,836,2.142,837,1.768,838,3.658,839,1.682,840,2.142,841,1.768,842,3.124,843,6.206,844,3.259,845,2.983,846,5.146,847,1.682,848,2.142,849,1.99,850,4.746,851,1.207,852,2.236,853,2.345,854,2.142,855,4.701,856,2.345,857,2.345,858,2.345,859,2.157,860,1.54,861,2.345,862,1.54,863,2.345,864,2.345,865,2.345,866,2.345,867,2.142,868,2.345,869,2.345,870,1.99,871,2.345,872,1.682,873,2.142,874,2.345,875,1.54,876,2.345,877,1.479,878,5.146,879,3.362,880,2.345,881,2.345,882,2.345,883,2.345,884,1.54,885,2.417,886,1.54,887,1.54,888,2.345,889,3.681,890,3.681,891,2.345,892,2.345,893,2.345,894,3.681,895,3.681,896,4.543,897,2.345,898,2.345,899,3.681,900,3.681,901,5.934,902,2.345,903,2.345,904,3.681,905,2.345,906,3.681,907,3.681,908,1.682,909,2.345,910,2.345,911,3.681,912,2.345,913,2.345,914,2.345,915,2.345,916,2.142,917,1.479,918,1.424,919,1.244,920,1.285,921,1.54,922,2.236,923,2.345,924,5.592,925,2.345,926,2.345,927,2.345,928,1.99,929,2.345,930,2.345,931,2.345,932,3.681,933,4.543,934,3.681,935,4.543,936,2.345,937,2.345,938,2.345,939,2.345,940,2.345,941,2.345,942,2.345,943,2.345,944,2.142,945,2.345,946,3.681,947,3.681,948,2.345,949,3.681,950,2.345,951,2.345,952,2.345,953,2.345,954,2.345,955,2.345,956,5.146,957,3.681,958,2.142,959,0.921,960,2.345,961,1.607,962,2.345,963,2.345,964,2.345,965,2.345,966,1.682,967,2.934,968,2.345,969,2.345,970,2.345,971,2.345,972,2.345,973,2.345,974,2.345,975,2.345,976,2.345,977,2.345,978,1.682,979,2.345,980,2.345,981,2.345,982,2.345,983,2.142,984,2.345,985,4.543,986,2.142,987,3.681,988,2.345,989,2.345,990,2.345,991,2.345,992,2.345,993,5.146,994,4.543,995,2.345,996,2.345,997,3.681,998,2.345,999,2.345,1000,2.345,1001,2.016,1002,2.345,1003,2.345,1004,2.345,1005,2.345,1006,2.345,1007,2.345,1008,2.345,1009,2.345,1010,2.345,1011,2.142,1012,2.142,1013,2.345,1014,1.99]],["title/interfaces/TsCSVFormContents.html",[0,0.76,849,3.333]],["body/interfaces/TsCSVFormContents.html",[0,0.88,2,0.077,3,0.838,4,0.038,5,0.034,6,0.018,8,1.221,9,1.979,10,1.346,11,0.861,14,1.685,15,1.945,16,1.879,17,1.485,18,1.428,19,2.007,23,0.963,27,1.346,29,1.234,31,0.005,32,1.492,33,2.716,35,1.346,37,4.042,38,0.652,39,2.501,40,0.901,42,1.448,48,0.617,56,1.874,58,1.378,60,0.009,61,2.652,63,0.577,65,1.336,80,1.396,84,1.611,89,0.667,91,1.44,95,0.005,100,0.476,102,1.773,106,1.255,112,0.764,117,1.674,127,1.521,130,1.979,131,2.082,134,0.901,135,1.585,137,0.151,139,0.713,140,2.088,142,1.513,143,1.221,145,1.898,146,1.226,148,0.61,149,0.076,151,0.73,156,1.874,159,1.773,163,1.773,164,1.023,165,0.971,168,2.326,169,0.858,173,0.085,176,0.049,179,2.007,180,0.682,181,1.379,182,1.25,185,1.543,186,1.331,188,0.875,202,0.73,203,0.414,204,0.901,205,0.697,207,0.667,209,0.487,210,0.713,211,0.713,212,0.61,213,0.61,214,0.596,216,0.957,219,1.056,220,0.971,226,1.53,235,0.879,239,2.252,241,3.627,245,2.113,251,1.255,252,1.255,255,1.611,265,2.088,270,0.785,271,1.543,274,2.658,275,2.716,293,1.255,294,0.533,296,1.975,306,1.773,308,1.606,311,1.483,326,1.247,327,1.21,328,2.25,334,1.562,339,1.624,341,1.284,344,2.032,350,1.686,354,0.349,356,0.713,375,3.836,396,1.762,428,0.923,430,2.31,432,1.247,457,1.483,470,2.421,473,1.692,486,1.174,498,0.946,501,0.879,503,1.599,548,1.049,556,1.078,558,1.331,588,2.241,603,2.918,670,2.769,671,1.773,717,2.208,761,2.94,765,0.819,779,1.049,805,0.923,806,1.874,811,4.752,812,1.995,813,3.264,814,4.357,815,3.466,816,3.687,817,6.494,818,2.781,819,5.153,820,2.226,821,0.923,822,1.288,823,5.153,824,2.35,825,3.368,826,4.156,827,3.251,828,2.35,829,1.995,830,1.995,831,1.611,832,2.364,833,3.13,834,2.35,835,2.35,836,2.147,837,1.773,838,3.661,839,1.686,840,2.147,841,1.773,842,3.13,843,6.211,844,3.264,845,2.988,846,5.153,847,1.686,848,2.147,849,3.13,850,5.459,851,1.21,852,2.24,853,2.35,854,2.147,855,4.707,856,2.35,857,2.35,858,2.35,859,2.161,860,1.543,861,2.35,862,1.543,863,2.35,864,2.35,865,2.35,866,2.35,867,2.147,868,2.35,869,2.35,870,1.995,871,2.35,872,1.686,873,2.147,874,2.35,875,1.543,876,2.35,877,1.483,878,5.153,879,3.368,880,2.35,881,2.35,882,2.35,883,2.35,884,1.543,885,2.421,886,1.543,887,1.543,888,2.35,889,3.687,890,3.687,891,2.35,892,2.35,893,2.35,894,3.687,895,3.687,896,4.55,897,2.35,898,2.35,899,3.687,900,3.687,901,5.94,902,2.35,903,2.35,904,3.687,905,2.35,906,3.687,907,3.687,908,1.686,909,2.35,910,2.35,911,3.687,912,2.35,913,2.35,914,2.35,915,2.35,916,2.147,917,1.483,918,1.428,919,1.247,920,1.288,921,1.543,922,2.24,923,2.35,924,5.598,925,2.35,926,2.35,927,2.35,928,1.995,929,2.35,930,2.35,931,2.35,932,3.687,933,4.55,934,3.687,935,4.55,936,2.35,937,2.35,938,2.35,939,2.35,940,2.35,941,2.35,942,2.35,943,2.35,944,2.147,945,2.35,946,3.687,947,3.687,948,2.35,949,3.687,950,2.35,951,2.35,952,2.35,953,2.35,954,2.35,955,2.35,956,5.153,957,3.687,958,2.147,959,0.923,960,2.35,961,1.611,962,2.35,963,2.35,964,2.35,965,2.35,966,1.686,967,2.94,968,2.35,969,2.35,970,2.35,971,2.35,972,2.35,973,2.35,974,2.35,975,2.35,976,2.35,977,2.35,978,1.686,979,2.35,980,2.35,981,2.35,982,2.35,983,2.147,984,2.35,985,4.55,986,2.147,987,3.687,988,2.35,989,2.35,990,2.35,991,2.35,992,2.35,993,5.153,994,4.55,995,2.35,996,2.35,997,3.687,998,2.35,999,2.35,1000,2.35,1001,2.02,1002,2.35,1003,2.35,1004,2.35,1005,2.35,1006,2.35,1007,2.35,1008,2.35,1009,2.35,1010,2.35,1011,2.147,1012,2.147,1013,2.35,1014,1.995]],["title/components/TsCardComponent.html",[48,0.433,1015,1.505]],["body/components/TsCardComponent.html",[2,0.055,3,0.938,4,0.043,5,0.03,6,0.059,8,0.474,10,1.284,11,1.093,14,0.746,15,1.969,16,1.661,17,1.62,19,1.789,23,1.316,27,1.469,31,0.004,32,0.545,38,1.518,41,1.241,48,0.803,49,1.983,58,1.62,60,0.009,61,3.17,62,0.984,63,0.935,65,1.237,67,0.984,79,1.193,80,1.315,85,1.415,91,1.26,94,1.401,95,0.004,96,1.195,100,0.815,101,1.008,117,0.854,127,1.059,130,1.749,131,0.746,137,0.102,139,0.798,141,1.033,143,1.342,148,0.682,149,0.086,170,2.853,171,1.276,172,1.276,173,0.091,176,0.07,179,1.887,180,1.167,181,2.047,183,1.475,188,1.159,202,1.249,203,1.439,204,1.601,205,1.193,207,1.141,209,0.834,210,1.221,211,1.221,212,1.043,213,1.043,214,1.02,224,1.514,226,1.379,228,0.307,235,0.984,236,0.897,239,1.417,245,1.369,256,3.749,270,0.985,272,2.278,284,2.827,285,0.916,294,1.108,296,1.541,305,2.641,308,1.298,328,0.895,339,1.167,341,1.701,354,0.597,356,0.778,360,2.172,363,1.886,364,1.597,371,3.894,396,0.78,408,1.008,413,1.008,432,1.395,465,0.916,492,3.72,497,1.206,498,2.203,503,0.816,505,3.911,512,2.278,517,2.444,580,1.802,617,0.521,624,0.938,670,0.984,673,0.895,679,1.951,695,1.033,717,1.952,722,1.698,756,1.033,762,0.763,774,2.641,776,1.353,795,0.984,805,1.033,820,1.167,821,1.58,832,1.845,851,1.353,852,2.967,859,3.644,860,3.593,884,1.727,885,2.641,886,3.208,887,3.593,917,1.659,918,1.597,919,1.395,920,1.441,921,1.727,922,2.444,959,1.033,961,3.749,1015,2.383,1016,1.369,1017,1.174,1018,2.232,1019,4.701,1020,2.357,1021,5.837,1022,6.671,1023,3.129,1024,4.551,1025,4.551,1026,4.551,1027,6.191,1028,6.191,1029,6.191,1030,6.191,1031,7.368,1032,6.191,1033,5.527,1034,6.191,1035,5.527,1036,2.975,1037,5.527,1038,7.201,1039,7.29,1040,4.551,1041,6.841,1042,4.551,1043,6.218,1044,3.207,1045,2.975,1046,2.975,1047,4.022,1048,2.975,1049,4.551,1050,5.527,1051,4.551,1052,2.124,1053,2.975,1054,4.551,1055,4.957,1056,4.462,1057,2.975,1058,4.644,1059,2.975,1060,2.975,1061,2.975,1062,2.975,1063,2.975,1064,2.975,1065,2.641,1066,2.975,1067,2.975,1068,2.975,1069,2.63,1070,2.975,1071,2.63,1072,2.975,1073,2.975,1074,2.975,1075,4.551,1076,2.975,1077,2.975,1078,1.659,1079,2.402,1080,2.096,1081,2.975,1082,2.975,1083,2.63,1084,2.975,1085,5.472,1086,4.022,1087,4.022,1088,4.022,1089,4.022,1090,4.022,1091,2.63,1092,2.232,1093,2.63,1094,1.727,1095,3.207,1096,2.07,1097,2.975,1098,2.402,1099,1.727,1100,1.886,1101,2.096,1102,1.802,1103,2.975,1104,3.207,1105,2.975,1106,3.207,1107,2.975,1108,2.096,1109,2.975,1110,2.975,1111,2.975,1112,4.551,1113,2.975,1114,4.551,1115,5.527,1116,4.551,1117,1.143,1118,2.443,1119,1.174,1120,1.174,1121,1.796,1122,1.174,1123,1.174,1124,1.059,1125,1.174,1126,0.984,1127,1.174,1128,1.033,1129,1.059,1130,1.174,1131,1.059,1132,1.174,1133,1.033,1134,1.174,1135,1.008,1136,1.174,1137,1.033,1138,1.174,1139,1.008,1140,1.796,1141,1.059,1142,1.059,1143,1.174,1144,0.984,1145,1.174,1146,1.033,1147,1.174,1148,1.033,1149,1.174,1150,1.033,1151,1.174,1152,1.033,1153,1.174,1154,1.174,1155,1.033,1156,1.174,1157,0.984,1158,1.174,1159,1.174,1160,1.174,1161,1.008,1162,1.033,1163,1.174,1164,1.033,1165,1.174,1166,1.059,1167,1.174,1168,0.938,1169,0.895,1170,1.174,1171,0.874,1172,1.174,1173,1.008,1174,1.174,1175,1.033,1176,1.174,1177,1.059,1178,1.174,1179,1.033,1180,1.174,1181,0.938,1182,1.174,1183,0.938,1184,1.796,1185,0.938,1186,1.174,1187,1.033,1188,1.174,1189,0.938,1190,1.174,1191,0.938,1192,1.008,1193,1.174,1194,1.033,1195,1.174,1196,1.174,1197,1.008,1198,1.174,1199,0.874,1200,1.174,1201,1.008,1202,1.143,1203,1.174]],["title/modules/TsCardModule.html",[614,0.54,629,3.13]],["body/modules/TsCardModule.html",[2,0.117,4,0.092,5,0.042,6,0.042,31,0.007,60,0.009,87,1.427,95,0.007,137,0.204,149,0.183,173,0.146,176,0.061,228,0.656,299,1.139,410,1.808,614,0.933,616,1.631,617,1.114,618,1.746,629,6.535,638,3.931,658,2.155,661,2.155,682,3.184,744,2.256,745,1.827,1015,3.141,1021,4.868,1179,3.219,1204,5.624,1205,5.624,1206,6.363,1207,5.624,1208,6.363,1209,5.76,1210,3.416,1211,6.786,1212,7.678]],["title/directives/TsCardTitleDirective.html",[236,0.644,1179,1.542]],["body/directives/TsCardTitleDirective.html",[2,0.107,4,0.083,5,0.038,6,0.058,8,0.923,11,1.009,23,0.88,31,0.007,41,1.585,47,3.019,48,0.77,49,4.827,58,1.186,60,0.009,63,0.812,80,1.155,89,1.815,91,1.297,95,0.007,96,1.297,137,0.163,144,2.936,149,0.166,173,0.095,176,0.084,203,1.128,209,1.327,216,1.66,220,2.643,226,1.55,236,1.293,251,1.74,252,1.74,253,2.714,270,0.779,294,1.452,308,1.519,356,1.238,386,3.828,406,5.801,458,5.102,722,1.587,762,1.483,765,2.229,961,4.386,1015,3.104,1021,4.592,1091,7.322,1179,2.514,1211,5.114,1213,7.691,1214,5.114,1215,8.284,1216,8.284,1217,5.253,1218,6.987,1219,5.786,1220,7.242,1221,6.528,1222,3.888,1223,5.166,1224,7.242,1225,5.786,1226,5.269,1227,5.786,1228,5.786,1229,5.847,1230,5.786,1231,7.242,1232,5.786,1233,5.114,1234,5.786]],["title/directives/TsCellDefDirective.html",[236,0.644,1181,1.4]],["body/directives/TsCellDefDirective.html",[2,0.094,4,0.074,5,0.034,6,0.034,10,1.044,11,0.937,14,1.285,15,1.256,27,1.654,31,0.006,34,2.198,38,1.256,40,1.736,60,0.009,65,1.108,85,0.96,91,1.418,95,0.007,96,1.337,117,1.472,127,0.982,137,0.151,141,2.981,143,1.31,149,0.147,173,0.135,176,0.087,178,2.21,182,1.437,203,1.313,204,1.386,209,1.228,224,1.028,228,0.886,236,1.244,245,1.541,270,0.902,294,1.028,334,1.919,339,1.718,354,0.672,355,3.834,356,1.354,412,3.112,482,3.296,503,1.406,513,2.793,541,2.215,762,1.314,814,3.245,815,3.604,820,2.107,832,2.078,838,4.3,851,2.331,908,3.25,1016,2.471,1020,3.867,1023,2.404,1052,1.97,1078,4.163,1096,3.048,1171,2.327,1181,2.353,1183,1.615,1185,2.353,1189,2.112,1191,1.615,1235,3.416,1236,4.163,1237,4.796,1238,4.977,1239,4.722,1240,4.722,1241,5.261,1242,5.445,1243,4.722,1244,5.261,1245,2.482,1246,3.611,1247,4.596,1248,3.611,1249,4.722,1250,5.261,1251,4.722,1252,3.611,1253,4.722,1254,3.598,1255,4.722,1256,3.25,1257,3.611,1258,3.611,1259,3.416,1260,2.974,1261,4.722,1262,3.611,1263,4.467,1264,3.611,1265,4.333,1266,2.565,1267,3.611,1268,2.565,1269,3.611]],["title/directives/TsCellDirective.html",[236,0.644,1183,1.4]],["body/directives/TsCellDirective.html",[2,0.092,4,0.072,5,0.033,6,0.049,8,0.799,10,1.028,11,0.991,14,1.256,15,1.228,27,1.617,31,0.006,34,2.149,38,1.228,40,1.697,41,1.005,60,0.009,63,0.74,65,1.211,85,0.939,91,1.406,95,0.007,96,1.322,117,1.439,127,0.961,137,0.149,141,3.097,143,1.301,149,0.144,173,0.134,176,0.087,178,2.196,182,1.584,203,1.304,204,1.428,209,1.21,224,1.005,228,0.864,236,1.238,245,1.507,270,0.994,294,1.324,334,1.876,339,1.893,354,0.657,355,3.576,356,1.395,412,3.078,482,2.915,503,1.375,513,2.752,541,1.656,722,1.375,762,1.285,814,2.426,815,3.59,820,2.091,832,2.032,838,4.274,851,2.279,908,3.177,1016,2.453,1020,4.651,1023,2.35,1052,1.926,1078,4.118,1096,3.359,1171,2.17,1181,2.081,1183,2.081,1185,2.327,1189,2.081,1191,1.579,1235,3.34,1236,3.681,1237,4.472,1238,4.401,1239,3.53,1240,4.652,1241,5.203,1242,5.561,1243,4.652,1244,5.203,1245,2.426,1246,3.53,1247,4.734,1248,4.652,1249,4.652,1250,5.203,1251,4.652,1252,3.53,1253,5.203,1254,3.545,1255,4.652,1256,3.177,1257,3.53,1258,3.53,1259,3.34,1260,2.908,1261,4.652,1262,3.53,1263,4.401,1264,3.53,1265,4.286,1266,2.508,1267,3.53,1268,2.508,1269,3.53,1270,5.01,1271,5.01]],["title/components/TsChartComponent.html",[48,0.433,1124,1.581]],["body/components/TsChartComponent.html",[2,0.056,3,0.956,4,0.044,5,0.031,6,0.056,8,0.484,11,1.021,14,0.761,15,0.744,16,1.686,17,1.644,23,1.023,29,1.341,31,0.004,32,0.556,35,1.491,38,1.133,41,1.254,42,1.053,45,1.456,47,1.926,48,0.773,58,0.622,60,0.009,62,1.003,63,1.001,65,1.254,67,1.003,79,1.467,80,1.241,89,1.403,91,1.27,94,1.722,95,0.004,96,0.543,100,1.12,106,2.427,112,1.327,117,1.607,127,0.582,130,1.166,131,0.761,135,1.422,137,0.175,139,0.814,141,2.171,142,1.838,143,0.997,144,1.874,145,2.545,146,1.838,147,1.926,148,0.696,149,0.087,164,0.744,169,0.979,173,0.092,176,0.06,179,1.677,180,1.185,181,1.527,182,1.521,183,0.969,188,1.312,202,1.268,203,1.441,204,1.599,205,1.212,207,1.158,209,0.846,210,1.239,211,1.239,212,1.059,213,1.059,214,1.036,216,1.059,219,0.622,220,1.686,226,1.681,228,0.645,229,1.895,236,0.669,245,0.913,246,1.519,251,1.881,252,1.881,255,2.798,270,0.992,276,2.681,284,1.73,285,0.934,294,0.927,296,1.565,308,1.693,327,2.845,328,0.913,329,2.237,334,1.73,339,1.185,341,2.269,345,1.301,354,0.606,356,0.79,364,3.004,386,2.709,388,4.169,408,1.028,413,1.028,437,2.545,465,0.934,473,2.269,498,1.644,503,1.268,553,2.024,556,2.536,558,1.519,609,1.692,617,0.531,624,0.956,661,0.852,670,1.003,673,0.913,679,0.956,695,1.053,710,4.517,715,3.966,718,5.897,720,4.727,722,1.716,723,1.572,726,3.256,727,6.152,728,4.115,729,2.138,732,2.277,733,3.73,756,1.053,762,0.778,765,1.422,776,1.38,795,1.003,805,1.053,820,1.185,821,1.604,822,2.237,873,3.73,959,1.053,1015,1.028,1016,0.913,1017,1.198,1065,3.63,1117,1.166,1118,2.468,1119,1.198,1120,1.198,1121,1.823,1122,1.198,1123,1.198,1124,2.395,1125,1.198,1126,1.003,1127,1.198,1128,1.053,1129,1.08,1130,1.198,1131,1.08,1132,1.198,1133,1.053,1134,1.198,1135,1.028,1136,1.198,1137,1.053,1138,1.198,1139,1.028,1140,1.823,1141,1.08,1142,1.08,1143,1.198,1144,1.003,1145,1.198,1146,1.053,1147,1.198,1148,1.053,1149,1.198,1150,1.053,1151,1.198,1152,1.053,1153,1.198,1154,1.198,1155,1.053,1156,1.198,1157,1.003,1158,1.198,1159,1.198,1160,1.198,1161,1.028,1162,1.053,1163,1.198,1164,1.053,1165,1.198,1166,1.08,1167,1.198,1168,0.956,1169,0.913,1170,1.198,1171,0.892,1172,1.198,1173,1.028,1174,1.198,1175,1.053,1176,1.198,1177,1.08,1178,1.198,1179,1.053,1180,1.198,1181,0.956,1182,1.198,1183,0.956,1184,1.823,1185,0.956,1186,1.198,1187,1.053,1188,1.198,1189,0.956,1190,1.198,1191,0.956,1192,1.028,1193,1.198,1194,1.053,1195,1.198,1196,1.198,1197,1.028,1198,1.198,1199,0.892,1200,1.198,1201,1.028,1202,1.166,1203,1.198,1217,2.93,1272,2.45,1273,4.62,1274,3.466,1275,4.62,1276,4.62,1277,4.62,1278,5.595,1279,4.62,1280,4.62,1281,6.254,1282,6.254,1283,6.254,1284,4.084,1285,5.897,1286,5.595,1287,3.035,1288,6.254,1289,5.595,1290,4.62,1291,4.62,1292,4.197,1293,5.05,1294,4.62,1295,3.035,1296,4.115,1297,4.62,1298,7.234,1299,3.035,1300,3.466,1301,3.035,1302,3.256,1303,3.035,1304,3.035,1305,5.949,1306,3.035,1307,3.035,1308,4.936,1309,3.035,1310,3.035,1311,3.035,1312,3.035,1313,3.035,1314,3.548,1315,1.469,1316,2.277,1317,2.45,1318,4.084,1319,2.023,1320,4.62,1321,3.035,1322,4.62,1323,3.035,1324,4.62,1325,3.035,1326,4.62,1327,4.62,1328,4.62,1329,2.682,1330,4.62,1331,3.035,1332,2.45,1333,1.761,1334,1.692,1335,3.035,1336,3.035,1337,2.682,1338,3.035,1339,2.682,1340,2.45,1341,3.035,1342,4.945,1343,4.945,1344,4.945,1345,4.945,1346,4.945,1347,3.035,1348,2.682,1349,2.682,1350,3.035,1351,3.035,1352,4.62,1353,4.62,1354,3.035,1355,2.682,1356,3.035,1357,4.62,1358,3.035,1359,2.682,1360,4.62,1361,4.62,1362,4.62,1363,3.035,1364,2.682,1365,2.45,1366,3.035,1367,7.372,1368,3.035,1369,3.035,1370,3.035,1371,3.035,1372,3.035,1373,3.035,1374,3.035,1375,3.035,1376,3.035,1377,3.035,1378,3.035]],["title/modules/TsChartModule.html",[614,0.54,630,3.13]],["body/modules/TsChartModule.html",[2,0.118,4,0.092,5,0.042,6,0.042,31,0.007,42,2.221,60,0.009,87,1.435,95,0.007,137,0.198,149,0.184,173,0.146,176,0.061,228,0.905,299,1.146,410,1.813,430,1.796,553,1.924,614,0.936,616,1.641,617,1.12,618,1.756,630,6.451,658,2.162,661,2.162,715,5.653,718,4.509,720,4.266,726,4.509,727,4.266,729,4.509,733,5.136,744,2.264,745,1.838,1124,3.303,1308,4.885,1349,6.809,1379,5.656,1380,5.656,1381,5.656,1382,5.656,1383,6.399,1384,7.704,1385,4.509,1386,6.399]],["title/classes/TsCheckboxChange.html",[176,0.043,1387,3.333]],["body/classes/TsCheckboxChange.html",[2,0.085,3,1.456,4,0.067,5,0.031,6,0.031,10,1.104,11,0.99,14,1.158,15,1.132,16,2.282,17,2.225,18,2.48,19,1.239,22,2.48,23,0.951,27,2.018,29,1.7,31,0.006,32,0.846,35,1.491,38,1.132,48,0.829,58,1.282,60,0.009,61,3.133,65,1.295,79,1.859,80,0.997,85,1.424,89,1.905,91,1.269,95,0.006,96,0.827,99,2.311,100,1.524,106,1.389,108,3.487,112,1.326,127,0.885,130,1.775,134,2.118,135,1.925,137,0.184,139,1.239,140,2.875,142,2.333,143,1.403,146,2.083,147,1.925,148,1.059,149,0.133,151,1.267,164,1.132,165,1.686,170,2.535,171,1.981,172,1.981,173,0.116,176,0.079,178,1.859,179,1.677,180,1.184,181,1.527,183,0.969,188,0.969,202,1.267,203,0.719,204,1.241,205,1.211,207,1.158,209,0.846,210,1.239,211,1.239,212,1.059,213,1.059,214,1.036,219,1.282,224,1.678,226,1.226,228,0.731,229,2.118,236,0.669,239,1.184,244,1.491,260,2.681,274,2.841,275,1.981,284,2.341,294,0.926,296,1.564,326,2.166,329,3.433,354,0.606,356,1.069,360,1.296,363,2.929,385,3.239,389,3.487,396,1.64,408,1.564,409,2.68,410,1.371,412,1.925,414,2.575,415,2.68,416,2.039,428,1.603,432,2.166,467,1.925,503,1.267,583,2.48,602,2.285,624,1.971,713,2.797,714,2.797,717,2.681,777,3.965,779,1.823,851,2.101,852,3.357,859,3.239,860,2.68,884,2.68,885,3.629,886,3.629,887,2.68,917,2.575,918,2.48,919,2.166,920,2.236,921,2.68,922,3.357,1078,2.575,1126,2.511,1226,3.079,1387,5.699,1388,3.465,1389,7.016,1390,4.817,1391,6.409,1392,5.955,1393,6.06,1394,4.082,1395,4.082,1396,3.729,1397,3.239,1398,4.082,1399,3.729,1400,5.527,1401,3.729,1402,4.168,1403,4.082,1404,4.082,1405,4.082,1406,4.082,1407,4.082,1408,4.082,1409,5.955,1410,2.68,1411,2.929,1412,4.082,1413,3.465,1414,5.527,1415,4.082,1416,3.079,1417,4.082,1418,4.082,1419,4.082,1420,3.079]],["title/components/TsCheckboxComponent.html",[48,0.433,1126,1.469]],["body/components/TsCheckboxComponent.html",[0,0.938,2,0.054,3,0.926,4,0.042,5,0.03,6,0.058,8,0.468,10,1.171,11,1.092,14,0.736,15,0.72,16,1.645,17,1.604,18,3.562,19,0.788,22,1.577,23,1.32,27,1.455,29,1.59,31,0.004,32,1.005,35,1.455,38,0.72,41,1.462,48,0.817,58,1.721,60,0.009,61,3.16,62,0.971,63,0.99,65,1.206,67,0.971,79,1.438,80,1.23,85,1.409,89,1.973,91,1.101,94,1.893,95,0.004,96,0.526,99,2.744,100,1.305,106,0.883,108,3.903,112,1.294,127,0.563,130,1.129,131,0.736,134,1.527,135,1.893,137,0.158,139,0.788,140,2.839,142,2.142,143,1.338,146,1.949,147,1.879,148,0.674,149,0.085,151,0.806,164,0.72,165,1.072,170,2.224,171,1.26,172,1.26,173,0.09,176,0.067,178,1.438,179,1.649,180,1.156,181,1.49,183,1.29,188,1.15,202,1.236,203,1.438,204,1.599,205,1.182,207,1.13,209,0.826,210,1.209,211,1.209,212,1.033,213,1.033,214,1.011,219,1.125,224,1.721,226,1.206,228,0.752,229,2.083,236,0.795,239,1.156,244,0.948,260,1.933,270,1.059,274,2.53,275,2.637,284,2.484,285,0.904,294,0.904,296,0.995,308,1.528,326,1.378,329,3.529,341,0.904,354,0.385,356,1.197,360,1.265,363,1.863,383,1.863,385,2.335,386,1.422,389,2.513,390,3.864,396,1.438,408,2.083,409,1.705,410,0.988,412,1.225,413,0.995,414,1.638,415,1.705,416,1.297,418,1.705,419,2.07,428,1.02,432,1.378,439,2.07,441,2.616,442,2.07,465,0.904,467,2.286,503,0.806,541,0.971,583,2.42,602,1.849,617,0.514,624,2.56,670,0.971,673,0.883,679,0.926,695,1.02,713,1.779,714,1.779,717,1.26,722,1.999,723,1.522,756,1.02,762,0.753,765,1.387,776,1.336,777,4.206,779,1.159,795,0.971,805,1.02,820,1.156,821,1.565,851,1.336,852,2.944,859,4.446,860,3.569,884,1.705,885,2.616,886,3.182,887,3.569,917,1.638,918,1.577,919,1.378,920,1.422,921,1.705,922,2.42,959,1.02,1015,0.995,1016,0.883,1017,1.159,1069,2.597,1071,2.597,1078,1.638,1117,1.129,1118,2.427,1119,1.159,1120,1.159,1121,1.779,1122,1.159,1123,1.159,1124,1.045,1125,1.159,1126,2.314,1127,1.159,1128,1.02,1129,1.045,1130,1.159,1131,1.045,1132,1.159,1133,1.02,1134,1.159,1135,0.995,1136,1.159,1137,1.02,1138,1.159,1139,0.995,1140,1.779,1141,1.045,1142,1.045,1143,1.159,1144,0.971,1145,1.159,1146,1.02,1147,1.159,1148,1.02,1149,1.159,1150,1.02,1151,1.159,1152,1.02,1153,1.159,1154,1.159,1155,1.02,1156,1.159,1157,0.971,1158,1.159,1159,1.159,1160,1.159,1161,0.995,1162,1.02,1163,1.159,1164,1.02,1165,1.159,1166,1.045,1167,1.159,1168,0.926,1169,0.883,1170,1.159,1171,0.863,1172,1.159,1173,0.995,1174,1.159,1175,1.02,1176,1.159,1177,1.045,1178,1.159,1179,1.02,1180,1.159,1181,0.926,1182,1.159,1183,0.926,1184,1.779,1185,0.926,1186,1.159,1187,1.02,1188,1.159,1189,0.926,1190,1.159,1191,0.926,1192,0.995,1193,1.159,1194,1.02,1195,1.159,1196,1.159,1197,0.995,1198,1.159,1199,0.863,1200,1.159,1201,0.995,1202,1.129,1203,1.159,1226,1.958,1387,3.381,1388,2.204,1389,4.847,1390,3.9,1391,6.355,1392,5.905,1393,6.019,1394,2.597,1395,2.597,1396,2.372,1397,2.84,1398,2.597,1399,2.372,1400,5.436,1401,2.372,1402,3.656,1403,3.984,1404,3.984,1405,3.984,1406,3.984,1407,2.597,1408,2.597,1409,4.977,1410,1.705,1411,1.863,1412,2.597,1413,4.614,1414,5.436,1415,4.847,1416,3.656,1417,2.597,1418,4.847,1419,4.847,1420,1.958,1421,4.427,1422,4.427,1423,4.427,1424,4.427,1425,3.639,1426,3.639,1427,3.639,1428,2.597,1429,4.507,1430,4.507,1431,4.507,1432,2.938,1433,2.938,1434,2.938,1435,4.507,1436,2.938,1437,2.938,1438,6.647,1439,2.597,1440,2.938,1441,2.597,1442,2.204,1443,2.597,1444,2.858,1445,4.333,1446,2.597,1447,2.372,1448,2.597,1449,2.372,1450,2.204,1451,2.938,1452,2.938,1453,2.938,1454,2.938,1455,2.597,1456,1.522,1457,3.639,1458,2.597,1459,2.858,1460,3.639,1461,2.597,1462,2.938,1463,2.597,1464,2.938,1465,2.938,1466,2.938]],["title/modules/TsCheckboxModule.html",[614,0.54,631,2.962]],["body/modules/TsCheckboxModule.html",[2,0.121,4,0.095,5,0.043,6,0.043,31,0.007,60,0.009,87,1.474,95,0.007,137,0.202,149,0.189,151,1.803,173,0.145,176,0.063,228,0.678,299,1.177,410,1.833,614,0.951,616,1.685,617,1.15,618,1.803,631,6.043,658,2.197,661,2.197,744,2.3,745,1.887,746,4.365,1126,3.095,1401,5.306,1402,5.573,1467,5.809,1468,5.809,1469,5.809,1470,5.809,1471,6.572,1472,7.828,1473,7.828]],["title/directives/TsColumnDefDirective.html",[236,0.644,1185,1.4]],["body/directives/TsColumnDefDirective.html",[2,0.091,4,0.071,5,0.033,6,0.052,8,0.79,10,1.217,11,1.054,14,1.643,15,1.606,23,0.753,27,1.599,31,0.006,34,2.81,38,1.214,40,2.219,58,1.016,60,0.009,63,0.823,65,1.09,85,1.228,91,1.455,95,0.007,96,1.315,117,1.422,127,0.949,137,0.147,141,2.956,143,1.358,149,0.142,173,0.133,176,0.086,178,2.189,182,1.405,203,1.3,204,1.367,209,1.2,224,1.314,228,0.879,236,1.234,245,1.97,270,0.988,294,0.993,334,1.855,339,1.68,354,0.65,355,3.784,356,1.256,412,3.061,482,2.893,503,1.359,513,3.061,541,1.637,762,1.27,814,2.398,815,3.674,820,2.084,832,2.008,838,4.249,851,2.98,908,3.141,1016,2.35,1020,3.803,1023,2.323,1052,1.904,1078,4.357,1096,2.98,1171,2.296,1181,2.065,1183,1.561,1185,2.463,1189,2.065,1191,1.561,1235,3.302,1236,3.654,1237,4.732,1238,4.368,1239,3.49,1240,4.617,1241,5.174,1242,5.4,1243,4.617,1244,5.174,1245,2.398,1246,3.49,1247,4.535,1248,3.49,1249,4.617,1250,5.174,1251,4.617,1252,3.49,1253,4.617,1254,3.518,1255,5.506,1256,3.141,1257,3.49,1258,3.49,1259,3.302,1260,2.874,1261,4.617,1262,3.49,1263,5.209,1264,5.506,1265,4.261,1266,2.479,1267,3.49,1268,2.479,1269,4.617,1474,4.953,1475,4.953,1476,4.953]],["title/directives/TsConfirmationDirective.html",[236,0.644,1187,1.542]],["body/directives/TsConfirmationDirective.html",[2,0.077,3,1.311,4,0.06,5,0.028,6,0.057,8,0.663,9,1.599,11,0.998,14,1.043,15,1.02,16,2.449,17,2.071,25,3.689,26,4.1,29,2.105,31,0.005,41,0.834,42,2.655,45,2.498,47,3.029,50,3.524,60,0.009,63,0.815,65,1.232,77,1.836,79,1.759,80,1.159,84,2.519,85,1.09,91,1.042,95,0.005,96,0.745,100,0.745,101,1.409,127,1.286,134,1.409,135,2.066,137,0.19,140,3.299,141,2.751,142,2.135,145,3.052,146,2.135,149,0.12,158,2.082,159,2.773,164,1.645,165,1.518,168,2.319,169,1.343,173,0.068,174,2.155,176,0.056,179,1.116,188,1.22,203,0.906,204,1.338,209,1.331,214,0.933,216,1.334,219,1.49,220,2.652,224,0.834,226,1.752,235,1.375,236,1.203,251,1.251,252,1.251,270,0.56,294,1.167,308,1.769,311,2.319,327,3.305,328,1.251,332,3.121,339,1.066,354,0.546,356,0.995,363,4.608,381,3.524,416,1.836,430,1.883,437,3.605,452,4.698,472,4.255,473,2.721,485,1.784,497,3.605,501,2.528,553,1.75,556,2.947,717,1.784,722,1.141,762,1.066,765,1.791,766,2.931,779,1.642,795,2.62,830,3.121,1043,5.143,1095,2.931,1101,2.931,1128,2.523,1129,3.23,1187,2.02,1477,3.677,1478,5.418,1479,5.931,1480,7.267,1481,8.301,1482,7.267,1483,7.267,1484,7.551,1485,6.808,1486,5.818,1487,3.358,1488,4.16,1489,4.16,1490,5.818,1491,4.16,1492,4.16,1493,7.267,1494,4.16,1495,3.244,1496,4.16,1497,5.143,1498,4.16,1499,6.76,1500,4.16,1501,4.16,1502,5.931,1503,4.16,1504,3.677,1505,3.677,1506,3.677,1507,5.818,1508,7.267,1509,3.677,1510,3.677,1511,3.677,1512,5.818,1513,4.16,1514,2.638,1515,3.677,1516,3.677,1517,4.16,1518,4.16,1519,4.16,1520,5.818,1521,7.267,1522,5.818,1523,4.16,1524,4.16,1525,4.16,1526,4.16,1527,4.16,1528,4.16,1529,4.16,1530,4.16,1531,4.16,1532,4.16,1533,5.818,1534,4.16,1535,4.16,1536,2.414,1537,4.16,1538,4.16,1539,4.16,1540,4.16,1541,4.16,1542,5.818,1543,4.16,1544,4.16,1545,4.16,1546,4.16,1547,5.818,1548,5.818,1549,3.358,1550,4.16,1551,4.16,1552,4.16,1553,4.16,1554,3.358]],["title/components/TsConfirmationModalComponent.html",[48,0.433,1128,1.542]],["body/components/TsConfirmationModalComponent.html",[2,0.091,4,0.072,5,0.043,6,0.049,8,0.79,10,1.144,11,0.925,23,0.997,31,0.006,32,0.908,48,0.791,53,4.37,58,1.345,60,0.009,62,1.639,63,0.735,65,1.24,67,1.639,95,0.006,96,0.888,100,1.174,131,1.243,137,0.165,139,1.33,148,1.137,149,0.143,161,1.856,173,0.081,176,0.063,183,1.375,203,1.478,204,1.651,205,1.719,207,1.644,209,1.201,210,1.758,211,1.758,212,1.503,213,1.503,214,1.47,219,1.345,236,0.95,270,0.988,285,1.526,354,0.651,356,1.121,413,1.679,465,1.526,501,2.167,514,3.396,584,3.52,617,0.868,624,1.562,670,1.639,673,1.491,679,1.562,695,1.721,756,1.721,762,1.271,795,1.639,805,1.721,820,1.681,821,2.276,847,3.143,848,4.002,867,6.311,959,1.721,1015,1.679,1016,1.491,1017,1.956,1118,3.085,1119,1.956,1120,1.956,1121,2.587,1122,1.956,1123,1.956,1124,1.764,1125,1.956,1126,1.639,1127,1.956,1128,2.713,1129,3.271,1130,1.956,1131,1.764,1132,1.956,1133,1.721,1134,1.956,1135,1.679,1136,1.956,1137,1.721,1138,1.956,1139,1.679,1140,2.587,1141,1.764,1142,1.764,1143,1.956,1144,1.639,1145,1.956,1146,1.721,1147,1.956,1148,1.721,1149,1.956,1150,1.721,1151,1.956,1152,1.721,1153,1.956,1154,1.956,1155,1.721,1156,1.956,1157,1.639,1158,1.956,1159,1.956,1160,1.956,1161,1.679,1162,1.721,1163,1.956,1164,1.721,1165,1.956,1166,1.764,1167,1.956,1168,1.562,1169,1.491,1170,1.956,1171,1.457,1172,1.956,1173,1.679,1174,1.956,1175,1.721,1176,1.956,1177,1.764,1178,1.956,1179,1.721,1180,1.956,1181,1.562,1182,1.956,1183,1.562,1184,2.587,1185,1.562,1186,1.956,1187,2.55,1188,1.956,1189,1.562,1190,1.956,1191,1.562,1192,1.679,1193,1.956,1194,1.721,1195,1.956,1196,1.956,1197,1.679,1198,1.956,1199,1.457,1200,1.956,1201,1.679,1202,1.905,1203,1.956,1479,5.795,1484,5.795,1499,6.909,1555,6.493,1556,4.382,1557,6.556,1558,6.556,1559,5.296,1560,4.957,1561,5.795,1562,6.556,1563,4.957]],["title/modules/TsConfirmationModule.html",[614,0.54,632,3.13]],["body/modules/TsConfirmationModule.html",[2,0.117,4,0.092,5,0.042,6,0.042,31,0.007,60,0.009,87,1.425,95,0.007,137,0.206,149,0.183,173,0.144,176,0.061,228,0.656,299,1.138,410,1.807,548,2.508,614,0.932,616,1.63,617,1.112,618,1.744,627,4.611,632,6.509,658,2.153,661,2.153,664,3.413,744,2.254,745,1.825,808,4.453,809,3.413,1128,3.153,1129,2.262,1187,3.219,1509,5.618,1515,5.618,1564,5.618,1565,5.618,1566,6.356,1567,5.618,1568,6.356,1569,6.781,1570,7.672,1571,7.672]],["title/components/TsCopyComponent.html",[48,0.433,1131,1.581]],["body/components/TsCopyComponent.html",[2,0.057,4,0.045,5,0.031,6,0.056,8,0.494,10,1.263,11,1.069,15,2.163,21,3.08,22,1.663,23,1.214,29,1.125,31,0.004,32,0.567,33,2.012,38,1.15,41,1.136,45,0.976,47,2.634,48,0.79,52,2.182,54,1.875,58,1.568,60,0.009,62,1.024,63,0.95,65,1.324,67,1.024,79,1.23,80,1.311,85,1.433,87,1.27,91,0.84,94,2.09,95,0.004,106,1.411,112,1.347,121,3.306,127,1.211,131,0.776,137,0.127,141,2.654,143,1.139,147,1.956,148,0.71,149,0.089,164,0.759,169,0.999,170,2.297,171,1.328,172,1.328,173,0.051,176,0.061,179,2.051,180,1.203,181,1.551,182,1.532,183,1.724,188,1.188,202,1.287,203,1.443,204,1.602,205,1.23,207,1.176,209,0.86,212,1.076,213,1.076,214,1.052,220,2.306,224,1.7,226,1.499,229,1.589,236,0.68,244,2.848,247,2.14,255,1.875,270,0.962,284,2.543,285,0.953,294,0.941,296,1.919,308,1.325,328,1.9,333,2.934,339,0.794,341,0.953,354,0.743,356,0.802,360,2.146,381,4.328,396,0.812,408,1.049,413,1.049,416,2.071,418,2.723,465,0.953,478,2.723,497,2.754,498,2.543,500,4.328,502,2.43,510,5.22,521,1.875,549,4.964,553,1.411,554,1.852,603,1.55,617,0.542,624,0.976,670,1.024,673,0.931,679,2.621,695,1.075,722,1.554,723,1.604,756,1.075,762,0.794,765,1.444,770,3.52,775,4.147,776,1.408,777,2.975,795,1.024,799,4.741,805,1.075,820,1.203,821,1.629,832,1.256,842,4.741,916,3.788,959,1.075,1015,1.049,1016,0.931,1017,1.222,1079,3.788,1094,2.723,1099,3.287,1117,1.19,1118,2.494,1119,1.222,1120,1.222,1121,1.852,1122,1.222,1123,1.222,1124,1.102,1125,1.222,1126,1.024,1127,1.222,1128,1.075,1129,1.102,1130,1.222,1131,2.543,1132,1.222,1133,1.075,1134,1.222,1135,1.049,1136,1.222,1137,1.075,1138,1.222,1139,1.049,1140,1.852,1141,1.102,1142,1.102,1143,1.222,1144,1.024,1145,1.222,1146,1.075,1147,1.222,1148,1.075,1149,1.222,1150,1.075,1151,1.222,1152,1.075,1153,1.222,1154,1.222,1155,1.075,1156,1.222,1157,1.024,1158,1.222,1159,1.222,1160,1.222,1161,1.049,1162,1.075,1163,1.222,1164,1.075,1165,1.222,1166,1.102,1167,1.222,1168,0.976,1169,0.931,1170,1.222,1171,0.91,1172,1.222,1173,1.049,1174,1.222,1175,1.075,1176,1.222,1177,1.102,1178,1.222,1179,1.075,1180,1.222,1181,0.976,1182,1.222,1183,0.976,1184,1.852,1185,0.976,1186,1.222,1187,1.075,1188,1.222,1189,0.976,1190,1.222,1191,0.976,1192,1.049,1193,1.222,1194,1.075,1195,1.222,1196,1.222,1197,1.049,1198,1.222,1199,0.91,1200,1.222,1201,1.049,1202,1.19,1203,1.222,1314,4.964,1450,4.25,1456,2.43,1487,2.5,1497,2.737,1572,2.737,1573,7.423,1574,4.692,1575,4.692,1576,4.692,1577,7.828,1578,5.102,1579,4.692,1580,6.32,1581,4.692,1582,5.664,1583,5.664,1584,3.097,1585,4.573,1586,4.692,1587,3.097,1588,3.097,1589,4.692,1590,3.097,1591,3.097,1592,3.306,1593,4.692,1594,3.097,1595,4.692,1596,4.692,1597,3.097,1598,3.128,1599,4.692,1600,3.097,1601,3.097,1602,3.788,1603,4.692,1604,3.097,1605,4.692,1606,3.097,1607,2.348,1608,3.788,1609,4.147,1610,3.097,1611,4.692,1612,3.097,1613,3.097,1614,2.737,1615,3.097,1616,4.692,1617,3.097,1618,3.097,1619,4.692,1620,2.737,1621,3.097,1622,3.306,1623,2.737,1624,3.097,1625,2.5,1626,3.097,1627,3.097,1628,3.097,1629,3.097,1630,3.097,1631,4.692,1632,2.5,1633,3.097,1634,3.097,1635,3.097,1636,3.097,1637,2.5,1638,3.097,1639,3.097,1640,3.097,1641,3.097,1642,4.692,1643,3.097,1644,3.097,1645,3.097,1646,3.097,1647,3.097,1648,3.097,1649,3.788,1650,2.737,1651,2.5,1652,3.097,1653,3.097,1654,2.737,1655,2.5,1656,2.182,1657,3.097,1658,3.097]],["title/modules/TsCopyModule.html",[614,0.54,633,3.13]],["body/modules/TsCopyModule.html",[2,0.118,4,0.092,5,0.042,6,0.042,31,0.007,60,0.009,87,1.437,95,0.007,137,0.206,149,0.184,173,0.144,176,0.062,228,0.661,299,1.147,410,1.813,548,2.528,614,0.936,616,1.643,617,1.121,618,1.758,633,6.516,638,3.937,655,5.176,658,2.164,661,2.164,682,3.206,705,4.514,744,2.265,745,1.84,808,4.474,809,3.44,1131,3.303,1209,5.784,1210,3.44,1659,5.663,1660,5.663,1661,6.407,1662,5.663,1663,6.407,1664,7.709]],["title/pipes/TsDatePipe.html",[70,1.753,1665,2.962]],["body/pipes/TsDatePipe.html",[2,0.113,4,0.089,5,0.041,6,0.05,10,1.318,11,0.89,19,1.649,23,1.287,31,0.007,32,1.488,41,1.233,58,1.261,60,0.009,63,0.843,70,3.206,80,1.199,95,0.007,96,1.101,127,1.178,137,0.169,144,3.049,149,0.177,173,0.123,176,0.059,178,1.971,216,1.409,245,2.261,253,2.883,270,1.093,364,4.742,430,1.725,441,3.567,541,2.032,602,2.443,673,2.656,722,1.686,762,1.576,765,1.892,773,3.3,1665,5.414,1666,4.963,1667,6.645,1668,4.331,1669,5.297,1670,7.672,1671,6.147,1672,6.832,1673,5.297,1674,4.612,1675,6.147,1676,6.147,1677,7.518,1678,7.518,1679,7.179,1680,6.07,1681,6.147,1682,6.147,1683,6.147,1684,6.147,1685,6.07,1686,6.147,1687,6.147,1688,4.331,1689,4.098,1690,3.723,1691,5.433,1692,5.433,1693,6.147]],["title/interfaces/TsDateRange.html",[0,0.76,1694,3.587]],["body/interfaces/TsDateRange.html",[0,0.993,2,0.049,3,0.832,4,0.038,5,0.017,6,0.017,8,0.421,9,1.015,10,0.798,11,0.99,14,0.662,15,0.647,18,3.389,21,2.893,22,3.598,23,1.135,24,1.472,29,1.832,30,2.631,31,0.004,32,0.484,34,1.132,38,1.873,45,0.832,48,0.615,54,2.513,60,0.009,63,0.651,65,1.308,77,3.875,79,0.692,80,1.068,87,0.93,89,1.285,91,1.13,95,0.004,96,1.2,100,1.485,106,2.245,112,0.758,118,1.674,127,1.431,130,1.015,133,1.368,135,1.578,137,0.142,142,2.194,143,1.323,146,2.133,148,0.605,149,0.076,151,0.724,160,3.159,161,0.989,170,1.682,171,1.132,172,1.132,173,0.068,176,0.049,179,1.558,180,0.677,181,1.372,182,0.566,188,1.075,202,0.724,203,0.411,204,0.726,205,0.692,207,0.662,209,0.484,212,0.605,213,0.605,214,0.592,216,0.605,219,1.77,220,1.514,226,1.238,228,0.428,229,1.405,245,2.649,247,2.138,251,1.747,252,1.747,265,1.321,270,0.69,274,2.946,275,3.396,284,1.553,293,0.794,296,1.967,305,1.532,308,1.47,328,2.108,344,2.292,354,0.346,356,0.71,360,1.63,363,1.674,416,2.262,418,2.408,430,2.397,473,1.682,480,2.313,503,1.138,512,1.321,555,3.615,556,1.071,557,1.238,573,1.532,577,2.631,584,1.418,588,2.694,609,4.876,673,2.831,674,1.981,709,1.532,717,1.779,813,2.631,818,2.766,822,1.279,827,1.472,845,4.595,862,4.213,875,3.37,877,3.908,920,2.009,1065,1.532,1133,1.779,1135,1.967,1221,4.736,1226,1.76,1260,2.408,1315,2.009,1390,4.003,1459,2.631,1504,3.667,1592,3.611,1622,6.279,1632,5.096,1694,5.096,1695,2.132,1696,2.334,1697,3.667,1698,6.599,1699,3.667,1700,2.923,1701,6.312,1702,3.667,1703,3.416,1704,2.64,1705,2.64,1706,4.149,1707,4.149,1708,2.64,1709,2.334,1710,4.149,1711,5.808,1712,5.808,1713,4.149,1714,2.64,1715,7.185,1716,2.64,1717,5.027,1718,2.64,1719,2.64,1720,2.64,1721,4.149,1722,4.149,1723,2.132,1724,2.132,1725,1.86,1726,1.981,1727,1.472,1728,3.872,1729,2.64,1730,6.195,1731,6.599,1732,6.599,1733,4.149,1734,2.334,1735,3.35,1736,2.334,1737,2.334,1738,2.766,1739,2.64,1740,1.981,1741,7.009,1742,2.64,1743,2.64,1744,2.64,1745,7.466,1746,4.529,1747,2.132,1748,4.137,1749,2.64,1750,2.64,1751,6.312,1752,6.312,1753,4.149,1754,2.64,1755,6.312,1756,2.64,1757,2.64,1758,3.113,1759,4.149,1760,4.149,1761,2.64,1762,4.149,1763,2.64,1764,2.64,1765,2.64,1766,2.64,1767,2.64,1768,2.64,1769,1.76,1770,2.334,1771,3.667,1772,2.334,1773,2.64,1774,2.64,1775,2.334,1776,2.64,1777,4.149,1778,2.64,1779,2.64,1780,2.64,1781,4.149,1782,4.149,1783,4.149,1784,4.149,1785,5.808,1786,2.64,1787,5.808,1788,2.64,1789,2.64,1790,2.64,1791,2.64,1792,5.808,1793,5.133,1794,2.64,1795,5.808,1796,2.64,1797,2.64,1798,2.64,1799,2.64,1800,4.149,1801,4.149,1802,2.64,1803,2.64,1804,4.149,1805,3.667,1806,2.64,1807,2.64,1808,2.64,1809,2.64,1810,2.64,1811,2.64,1812,2.64,1813,2.64,1814,2.64,1815,2.64,1816,2.64,1817,2.64,1818,2.64]],["title/modules/TsDateRangeModule.html",[614,0.54,634,3.13]],["body/modules/TsDateRangeModule.html",[2,0.12,4,0.094,5,0.043,6,0.043,31,0.007,60,0.009,87,1.462,95,0.007,137,0.204,149,0.188,173,0.145,176,0.063,228,0.672,299,1.167,410,1.827,548,2.573,614,0.946,616,1.671,617,1.141,618,1.788,634,6.47,635,5.969,658,2.186,661,2.186,673,2.343,674,4.89,676,5.761,744,2.289,745,1.872,808,4.521,809,3.5,1133,3.229,1695,5.263,1819,5.761,1820,5.761,1821,6.518,1822,5.761,1823,6.518,1824,7.79]],["title/classes/TsDatepickerInputEvent.html",[176,0.043,1825,3.587]],["body/classes/TsDatepickerInputEvent.html",[2,0.059,3,1.005,4,0.046,5,0.021,6,0.021,10,1.252,11,1.023,14,0.799,15,1.176,19,0.855,21,2.745,22,1.712,23,1.242,27,1.861,28,1.225,29,1.928,30,3.041,31,0.004,32,1.616,33,1.367,34,1.367,35,2.332,38,1.771,42,1.107,45,1.005,48,0.704,58,0.654,60,0.009,63,0.538,65,1.31,77,2.117,79,1.258,80,1.195,85,0.597,87,0.715,89,1.445,91,1.498,95,0.005,96,0.859,100,1.513,106,1.929,108,1.778,112,0.915,117,1.656,121,2.246,127,1.385,130,1.225,131,1.608,134,1.624,137,0.155,142,2.021,143,1.412,146,1.694,148,0.731,149,0.092,151,0.875,158,3.21,170,1.945,171,1.367,172,1.367,173,0.095,176,0.069,178,1.512,179,2.011,180,0.817,181,1.054,182,1.236,183,1.006,187,4.817,188,1.006,202,0.875,203,0.496,204,0.839,205,0.836,207,0.799,209,0.584,212,0.731,213,0.731,214,0.715,216,0.731,219,1.716,220,1.164,224,1.156,226,0.625,228,0.595,229,1.08,239,0.817,245,2.418,247,2.329,251,0.959,252,0.959,255,1.931,256,1.931,257,1.931,258,2.246,265,1.596,274,2.904,275,3.448,284,1.796,295,1.495,296,2.447,299,0.859,305,1.85,308,0.669,323,3.346,328,0.959,329,1.544,334,2.159,339,1.478,341,0.981,344,1.893,345,1.367,354,0.418,360,0.895,385,2.484,389,2.674,396,1.258,408,1.08,409,1.85,410,1.052,412,1.329,414,1.778,415,1.85,416,1.407,418,2.783,428,1.107,430,1.93,432,1.495,457,1.778,467,1.329,473,1.945,497,1.293,501,1.586,503,1.316,512,1.596,555,3.33,556,1.293,557,1.495,573,1.85,588,2.465,624,1.512,673,2.798,713,1.931,714,1.931,717,2.75,731,2.674,765,1.775,770,2.392,773,1.712,777,3.041,818,2.125,822,2.322,827,1.778,832,1.293,837,2.125,845,2.783,862,3.722,872,2.022,875,3.346,877,3.835,918,2.575,944,3.872,1001,2.322,1016,1.442,1023,2.25,1129,1.707,1133,1.107,1135,2.172,1221,4.325,1233,2.818,1260,1.85,1316,2.392,1390,4.361,1411,3.041,1459,2.022,1506,2.818,1592,2.246,1598,2.125,1622,4.519,1656,2.246,1702,4.239,1703,3.843,1709,2.818,1715,6.818,1717,4.325,1723,2.574,1724,2.574,1726,2.392,1727,2.674,1728,4.275,1730,5.669,1731,6.079,1732,6.079,1734,2.818,1735,3.872,1736,2.818,1737,2.818,1738,4.998,1746,6.626,1747,2.574,1748,6.755,1770,2.818,1771,4.239,1772,2.818,1793,2.818,1825,5.178,1826,2.574,1827,3.872,1828,6.387,1829,4.062,1830,3.188,1831,3.188,1832,6.413,1833,3.188,1834,2.674,1835,3.188,1836,2.818,1837,3.188,1838,2.022,1839,3.188,1840,3.188,1841,3.598,1842,2.392,1843,3.598,1844,3.188,1845,4.796,1846,4.796,1847,4.796,1848,2.246,1849,3.188,1850,3.188,1851,3.188,1852,2.783,1853,3.188,1854,3.188,1855,4.796,1856,4.796,1857,3.188,1858,4.796,1859,4.796,1860,3.188,1861,3.188,1862,3.188,1863,3.379,1864,2.246,1865,2.818,1866,3.188,1867,3.188,1868,3.188,1869,3.188,1870,3.188,1871,3.188,1872,3.188,1873,3.188,1874,3.188,1875,3.188,1876,5.765,1877,3.188,1878,3.188,1879,3.188,1880,4.796,1881,4.796,1882,3.188,1883,4.239,1884,2.818,1885,3.188,1886,4.796,1887,3.188,1888,3.872,1889,3.188,1890,3.188,1891,3.188,1892,3.188]],["title/modules/TsDatepickerModule.html",[614,0.54,635,2.962]],["body/modules/TsDatepickerModule.html",[2,0.117,4,0.092,5,0.042,6,0.042,31,0.007,32,1.164,60,0.009,87,1.425,95,0.007,137,0.207,149,0.183,151,1.744,173,0.144,176,0.061,228,0.656,299,1.138,410,1.807,614,0.932,616,1.63,617,1.112,618,1.744,635,6.097,656,4.779,658,2.153,661,2.153,706,3.292,707,4.03,744,2.254,745,1.825,746,4.278,751,5.756,752,4.768,1135,3.16,1210,3.413,1747,5.131,1863,5.807,1893,5.618,1894,5.618,1895,5.618,1896,6.356,1897,5.618,1898,6.356,1899,7.672,1900,7.672,1901,7.672]],["title/injectables/TsDropProtectionService.html",[553,1.336,1902,3.13]],["body/injectables/TsDropProtectionService.html",[2,0.108,4,0.084,5,0.039,6,0.058,8,0.932,11,1.012,23,0.889,29,2.121,31,0.007,41,1.462,47,3.038,58,1.629,60,0.009,63,0.817,79,1.533,80,1.266,85,1.658,89,1.827,95,0.007,117,2.093,124,4.633,137,0.164,149,0.168,164,1.433,169,1.887,173,0.096,176,0.056,226,1.63,270,0.981,272,4.161,294,1.462,296,2.469,308,1.83,328,1.758,339,2.237,356,1.246,553,2.388,722,2,765,2.56,799,6.238,859,4.307,1334,4.064,1536,4.23,1585,5.885,1838,5.272,1902,5.136,1903,5.063,1904,7.711,1905,5.167,1906,8.315,1907,5.846,1908,7.289,1909,5.846,1910,7.289,1911,5.846,1912,5.846,1913,5.846,1914,8.315,1915,5.846,1916,8.315,1917,5.846,1918,5.846,1919,5.846,1920,5.846]],["title/interfaces/TsFileImageDimensionContraint.html",[0,0.76,1921,3.333]],["body/interfaces/TsFileImageDimensionContraint.html",[0,1.365,2,0.125,4,0.098,5,0.053,6,0.045,8,1.083,31,0.007,39,2.418,60,0.009,63,1.023,95,0.007,173,0.131,239,2.243,354,0.892,356,1.365,513,3.647,818,5.322,1260,4.633,1903,3.943,1921,6.361,1922,5.098,1923,4.115,1924,5.486,1925,6.795,1926,4.633,1927,5.625,1928,5.548,1929,6.564,1930,5.098]],["title/modules/TsFileUploadModule.html",[614,0.54,636,3.13]],["body/modules/TsFileUploadModule.html",[2,0.108,4,0.084,5,0.053,6,0.039,31,0.007,32,1.07,60,0.009,87,1.309,95,0.007,137,0.209,149,0.168,151,1.602,164,1.432,169,1.885,173,0.143,176,0.056,228,0.819,272,2.923,299,1.046,410,1.741,548,2.305,614,0.885,616,1.497,617,1.022,618,1.602,627,4.518,636,6.59,637,5.53,638,3.85,655,5.062,656,4.683,658,2.044,661,2.044,664,3.135,677,4.381,679,1.841,680,3.893,681,4.715,682,2.923,705,4.115,706,3.025,707,3.703,744,2.14,745,1.677,746,4.061,754,4.715,808,4.227,809,3.135,842,5.465,1137,3.185,1292,4.381,1902,6.145,1903,3.389,1923,3.537,1927,4.115,1931,5.162,1932,5.162,1933,5.84,1934,5.162,1935,5.162,1936,5.84,1937,7.284,1938,7.284,1939,5.84,1940,4.115]],["title/interfaces/TsFileValidations.html",[0,0.76,1941,3.333]],["body/interfaces/TsFileValidations.html",[0,1.118,2,0.091,4,0.071,5,0.058,6,0.033,8,0.787,10,1.018,11,0.584,19,1.324,21,2.326,29,1.567,31,0.007,32,1.63,39,2.326,60,0.009,63,0.935,65,1.263,79,1.922,80,0.787,85,1.374,91,0.884,95,0.006,96,1.171,99,2.47,117,1.417,127,0.946,137,0.176,160,3.668,161,1.848,173,0.107,176,0.047,217,2.864,219,1.503,224,1.77,226,1.636,235,1.632,239,1.879,245,2.441,247,2.214,251,2.508,252,2.508,270,0.664,285,1.519,294,0.99,328,2.441,334,1.848,345,2.117,354,0.648,356,1.118,396,1.294,486,2.179,513,2.057,571,2.47,598,2.989,813,4.145,827,2.752,919,2.315,1274,3.703,1315,2.39,1365,3.985,1445,5.72,1456,3.386,1602,5.278,1656,3.478,1903,2.864,1923,5.295,1926,4.254,1927,5.72,1928,3.13,1930,5.854,1940,6.087,1941,5.499,1942,3.703,1943,3.703,1944,6.554,1945,6.554,1946,6.554,1947,4.606,1948,5.854,1949,5.165,1950,3.985,1951,3.29,1952,5.278,1953,5.278,1954,4.904,1955,3.985,1956,5.778,1957,5.778,1958,5.778,1959,4.904,1960,4.362,1961,6.897,1962,4.362,1963,5.778,1964,4.362,1965,4.362,1966,4.362,1967,4.362,1968,5.778,1969,4.362,1970,4.362,1971,4.362,1972,4.362,1973,4.362,1974,4.362,1975,4.362,1976,5.778,1977,4.362,1978,4.362,1979,4.362,1980,4.362,1981,4.362,1982,4.362,1983,5.778,1984,4.362,1985,3.478,1986,4.362,1987,3.478,1988,4.362,1989,3.478,1990,4.362,1991,4.362,1992,4.362,1993,4.362]],["title/directives/TsHeaderCellDefDirective.html",[236,0.644,1189,1.4]],["body/directives/TsHeaderCellDefDirective.html",[2,0.094,4,0.074,5,0.034,6,0.034,10,1.044,11,0.937,14,1.285,15,1.256,27,1.654,31,0.006,34,2.198,38,1.256,40,1.736,60,0.009,65,1.108,85,0.96,91,1.418,95,0.007,96,1.337,117,1.472,127,0.982,137,0.151,141,2.981,143,1.31,149,0.147,173,0.135,176,0.087,178,2.21,182,1.437,203,1.313,204,1.386,209,1.228,224,1.028,228,0.886,236,1.244,245,1.541,270,0.902,294,1.028,334,1.919,339,1.718,354,0.672,355,3.834,356,1.354,412,3.112,482,3.296,503,1.406,513,2.793,541,1.694,762,1.314,814,2.482,815,3.604,820,2.202,832,2.078,838,4.3,851,2.331,908,3.25,1016,2.471,1020,3.867,1023,2.404,1052,1.97,1078,4.163,1096,3.048,1171,2.327,1181,2.112,1183,1.615,1185,2.353,1189,2.353,1191,1.615,1235,3.416,1236,4.163,1237,4.796,1238,4.977,1239,3.611,1240,4.722,1241,5.261,1242,5.445,1243,4.722,1244,5.261,1245,2.482,1246,4.722,1247,4.596,1248,3.611,1249,4.722,1250,5.261,1251,4.722,1252,3.611,1253,4.722,1254,3.598,1255,4.722,1256,3.25,1257,3.611,1258,3.611,1259,3.416,1260,2.974,1261,4.722,1262,3.611,1263,4.467,1264,3.611,1265,4.333,1266,2.565,1267,3.611,1268,2.565,1269,3.611]],["title/directives/TsHeaderCellDirective.html",[236,0.644,1191,1.4]],["body/directives/TsHeaderCellDirective.html",[2,0.094,4,0.073,5,0.034,6,0.044,10,1.039,11,0.97,14,1.275,15,1.247,27,1.642,31,0.006,34,2.182,38,1.247,40,1.723,41,1.02,60,0.009,63,0.57,65,1.104,85,0.953,91,1.414,95,0.007,96,1.332,117,1.461,127,0.975,137,0.15,141,3.105,143,1.307,149,0.146,173,0.135,176,0.087,178,2.206,182,1.596,203,1.31,204,1.435,209,1.222,224,1.02,228,0.868,236,1.242,245,1.53,270,1.001,294,1.337,334,1.905,339,1.907,354,0.668,355,3.603,356,1.272,412,3.101,482,2.944,503,1.396,513,2.78,541,1.682,722,1.396,762,1.304,814,2.464,815,3.599,820,2.198,832,2.063,838,4.282,851,2.314,908,3.226,1016,2.465,1020,3.854,1023,2.386,1052,1.955,1078,4.148,1096,3.384,1171,2.186,1181,2.102,1183,1.603,1185,2.345,1189,2.102,1191,2.102,1235,3.392,1236,3.719,1237,4.506,1238,4.446,1239,3.585,1240,4.699,1241,5.242,1242,5.577,1243,4.699,1244,5.242,1245,2.464,1246,3.585,1247,4.758,1248,4.699,1249,4.699,1250,5.242,1251,4.699,1252,3.585,1253,5.242,1254,3.581,1255,4.699,1256,3.226,1257,3.585,1258,3.585,1259,3.392,1260,2.953,1261,4.699,1262,3.585,1263,4.446,1264,3.585,1265,4.318,1266,2.546,1267,3.585,1268,2.546,1269,3.585,1994,5.088]],["title/components/TsHeaderRowComponent.html",[48,0.433,1139,1.505]],["body/components/TsHeaderRowComponent.html",[2,0.084,4,0.066,5,0.041,6,0.03,28,2.381,31,0.006,32,0.834,48,0.793,60,0.009,62,1.506,63,0.511,67,1.506,85,1.319,95,0.006,96,1.109,100,1.415,117,1.779,131,1.142,137,0.139,139,1.222,143,1.329,148,1.044,149,0.131,173,0.124,176,0.083,178,2.072,182,1.748,183,1.299,203,1.474,204,1.646,209,1.289,210,1.888,211,1.888,212,1.614,213,1.614,214,1.578,228,0.779,236,1.145,270,0.947,285,1.402,339,1.805,354,0.598,355,2.999,356,1.394,360,1.738,412,2.582,413,1.543,465,1.402,541,2.048,617,0.797,624,1.436,670,1.506,673,1.37,679,1.436,695,1.581,723,3.912,756,1.581,762,1.168,795,1.506,805,1.581,814,4.284,815,3.063,820,2.251,821,2.15,838,3.301,959,1.581,1015,1.543,1016,2.551,1017,1.798,1096,3.201,1118,2.981,1119,1.798,1120,1.798,1121,2.445,1122,1.798,1123,1.798,1124,1.621,1125,1.798,1126,1.506,1127,1.798,1128,1.581,1129,1.621,1130,1.798,1131,1.621,1132,1.798,1133,1.581,1134,1.798,1135,1.543,1136,1.798,1137,1.581,1138,1.798,1139,2.558,1140,2.445,1141,1.621,1142,1.621,1143,1.798,1144,1.506,1145,1.798,1146,1.581,1147,1.798,1148,1.581,1149,1.798,1150,1.581,1151,1.798,1152,1.581,1153,1.798,1154,1.798,1155,1.581,1156,1.798,1157,1.506,1158,1.798,1159,1.798,1160,1.798,1161,2.098,1162,1.581,1163,1.798,1164,1.581,1165,1.798,1166,1.621,1167,1.798,1168,1.436,1169,1.37,1170,1.798,1171,2.068,1172,1.798,1173,1.543,1174,1.798,1175,1.581,1176,1.798,1177,1.621,1178,1.798,1179,1.581,1180,1.798,1181,1.436,1182,1.798,1183,1.436,1184,2.445,1185,1.436,1186,1.798,1187,1.581,1188,1.798,1189,1.436,1190,1.798,1191,1.436,1192,2.384,1193,1.798,1194,1.581,1195,1.798,1196,1.798,1197,2.384,1198,1.798,1199,1.338,1200,1.798,1201,1.543,1202,1.751,1203,1.798,1236,3.454,1245,2.206,1247,4.585,1254,3.326,1266,3.1,1268,3.1,1607,3.1,1995,3.209,1996,5.281,1997,5.281,1998,4.647,1999,4.692,2000,5.927,2001,5.281,2002,4.647,2003,5.281,2004,4.364,2005,4.129,2006,4.647,2007,4.364,2008,4.647,2009,3.417,2010,3.209,2011,3.209,2012,3.417,2013,3.417,2014,3.417]],["title/directives/TsHeaderRowDefDirective.html",[236,0.644,1192,1.505]],["body/directives/TsHeaderRowDefDirective.html",[2,0.102,4,0.08,5,0.037,6,0.037,28,2.976,31,0.007,48,0.754,60,0.009,63,0.621,85,1.32,95,0.007,96,1.261,100,1.507,117,2.022,137,0.158,139,1.484,143,1.394,148,1.269,149,0.159,173,0.134,176,0.085,178,2.137,182,1.748,203,1.311,204,1.427,209,1.29,210,1.889,211,1.889,212,1.615,213,1.615,214,1.579,228,0.868,236,1.181,339,1.805,354,0.726,355,3.75,356,1.495,360,1.976,412,2.935,541,2.328,723,4.222,762,1.419,814,4.411,815,3.413,820,2.308,838,3.303,1016,2.629,1096,3.203,1139,1.875,1161,1.875,1171,2.276,1192,2.623,1197,2.385,1236,4.318,1245,2.68,1247,4.731,1254,3.781,1266,3.524,1268,3.524,1607,3.524,1995,3.9,1996,5.283,1997,5.283,1998,4.152,1999,4.694,2000,5.81,2001,5.81,2002,5.283,2003,5.81,2004,5.457,2005,5.163,2006,5.81,2007,4.962,2008,5.283,2009,4.152,2010,3.9,2011,3.9,2012,4.152,2013,4.152,2014,4.152]],["title/components/TsIconButtonComponent.html",[48,0.433,1141,1.581]],["body/components/TsIconButtonComponent.html",[2,0.077,3,1.311,4,0.06,5,0.039,6,0.055,8,0.663,11,1.052,14,1.043,15,1.426,16,2.124,17,2.071,23,1.105,29,1.609,31,0.005,32,1.066,38,1.645,41,0.834,48,0.792,58,1.568,60,0.009,62,1.375,63,0.946,65,1.176,67,1.375,80,1.159,85,1.09,89,1.043,91,0.745,95,0.005,96,1.042,100,1.301,105,2.569,112,1.671,131,1.043,137,0.131,139,1.116,141,2.881,142,2.135,143,1.297,146,2.135,148,0.954,149,0.12,173,0.068,176,0.07,179,1.949,180,1.492,181,1.923,182,1.248,183,1.22,188,1.407,202,1.596,203,1.466,204,1.635,205,1.526,207,1.459,209,1.066,210,1.56,211,1.56,212,1.334,213,1.334,214,1.305,219,0.853,224,1.167,226,0.816,229,2.273,236,0.843,239,1.492,260,2.878,270,1.029,271,2.414,284,2.179,285,1.28,294,1.167,341,1.28,354,0.546,360,1.633,396,1.526,408,1.409,413,1.409,446,2.931,465,1.28,467,2.797,485,2.495,497,2.359,498,2.071,501,2.98,512,2.912,617,0.728,624,1.311,664,2.233,670,1.375,673,1.251,679,2.786,680,5.533,695,1.444,722,1.596,756,1.444,762,1.066,766,2.931,776,1.892,777,4.85,795,1.375,805,1.444,820,1.492,821,2.02,959,1.444,1015,1.409,1016,1.251,1017,1.642,1099,3.894,1117,1.599,1118,2.868,1119,1.642,1120,1.642,1121,2.296,1122,1.642,1123,1.642,1124,1.48,1125,1.642,1126,1.375,1127,1.642,1128,1.444,1129,1.48,1130,1.642,1131,1.48,1132,1.642,1133,1.444,1134,1.642,1135,1.409,1136,1.642,1137,1.444,1138,1.642,1139,1.409,1140,2.296,1141,2.586,1142,1.48,1143,1.642,1144,1.375,1145,1.642,1146,1.444,1147,1.642,1148,1.444,1149,1.642,1150,1.444,1151,1.642,1152,1.444,1153,1.642,1154,1.642,1155,1.444,1156,1.642,1157,1.375,1158,1.642,1159,1.642,1160,1.642,1161,1.409,1162,1.444,1163,1.642,1164,1.444,1165,1.642,1166,1.48,1167,1.642,1168,1.311,1169,1.251,1170,1.642,1171,1.222,1172,1.642,1173,1.409,1174,1.642,1175,1.444,1176,1.642,1177,1.48,1178,1.642,1179,1.444,1180,1.642,1181,1.311,1182,1.642,1183,1.311,1184,2.296,1185,1.311,1186,1.642,1187,1.444,1188,1.642,1189,1.311,1190,1.642,1191,1.311,1192,1.409,1193,1.642,1194,1.444,1195,1.642,1196,1.642,1197,1.409,1198,1.642,1199,1.222,1200,1.642,1201,1.409,1202,1.599,1203,1.642,1223,3.524,1315,2.817,1607,2.082,1655,4.698,2015,6.702,2016,3.677,2017,5.818,2018,5.818,2019,5.818,2020,5.818,2021,7.648,2022,6.175,2023,6.71,2024,4.16,2025,3.742,2026,5.946,2027,4.16,2028,5.946,2029,4.16,2030,4.16,2031,4.16,2032,4.16,2033,5.818,2034,4.16,2035,4.16,2036,5.818,2037,4.16,2038,6.71,2039,4.16,2040,4.16,2041,3.121,2042,4.16]],["title/modules/TsIconButtonModule.html",[614,0.54,637,2.817]],["body/modules/TsIconButtonModule.html",[2,0.119,4,0.093,5,0.043,6,0.043,31,0.007,60,0.009,87,1.453,95,0.007,137,0.205,149,0.186,173,0.145,176,0.062,228,0.669,299,1.16,410,1.822,614,0.943,616,1.662,617,1.134,618,1.778,637,5.817,638,3.948,658,2.179,661,2.179,679,2.447,680,4.32,682,3.243,744,2.281,745,1.861,797,5.824,798,4.862,800,6.861,1141,3.308,1209,5.824,1210,3.48,2015,5.232,2043,5.728,2044,5.728,2045,6.481,2046,5.728,2047,6.481]],["title/components/TsIconComponent.html",[48,0.433,1142,1.581]],["body/components/TsIconComponent.html",[2,0.07,3,1.19,4,0.054,5,0.042,6,0.057,8,0.602,11,1.049,14,0.947,15,0.926,16,1.983,17,2.476,19,1.013,20,2.661,23,1.167,27,2.661,31,0.005,32,1.166,38,0.926,39,1.344,40,1.84,41,1.276,48,0.803,58,1.114,60,0.009,62,1.248,63,0.925,65,1.033,67,1.248,80,1.015,85,1.304,88,2.027,91,0.973,95,0.005,100,0.973,112,1.56,127,0.724,130,1.451,131,0.947,137,0.173,139,1.013,143,1.261,144,1.531,148,0.866,149,0.109,164,0.926,165,1.378,170,2.58,171,1.619,172,1.619,173,0.104,176,0.071,179,1.866,180,1.89,181,2.3,182,1.165,183,1.139,188,1.334,202,1.49,203,1.459,204,1.63,205,1.424,207,1.362,209,0.995,210,1.457,211,1.457,212,1.246,213,1.246,214,1.218,224,1.678,226,1.446,229,1.279,236,0.787,244,2.478,245,2.093,270,1.152,284,3.087,285,1.162,293,1.136,294,0.757,296,2.155,308,1.139,341,2.142,354,0.713,356,0.929,408,1.279,413,1.279,465,1.162,498,1.933,514,1.956,548,2.511,584,2.027,617,0.661,624,1.19,670,2.437,673,1.136,679,2.923,695,1.311,722,1.746,756,1.311,762,0.968,774,2.191,776,1.718,779,1.49,782,2.191,795,1.248,805,1.311,820,1.393,821,1.886,959,1.311,1015,1.279,1016,1.136,1017,1.49,1052,2.951,1065,3.153,1092,2.833,1099,3.693,1102,2.287,1117,2.088,1118,2.746,1119,1.49,1120,1.49,1121,2.144,1122,1.49,1123,1.49,1124,1.344,1125,1.49,1126,1.248,1127,1.49,1128,1.311,1129,1.344,1130,1.49,1131,1.344,1132,1.49,1133,1.311,1134,1.49,1135,1.279,1136,1.49,1137,1.311,1138,1.49,1139,1.279,1140,2.144,1141,1.344,1142,2.476,1143,1.49,1144,1.248,1145,1.49,1146,1.311,1147,1.49,1148,1.311,1149,1.49,1150,1.311,1151,1.49,1152,1.311,1153,1.49,1154,1.49,1155,1.311,1156,1.49,1157,1.248,1158,1.49,1159,1.49,1160,1.49,1161,1.279,1162,1.311,1163,1.49,1164,1.311,1165,1.49,1166,1.344,1167,1.49,1168,1.19,1169,1.136,1170,1.49,1171,1.11,1172,1.49,1173,1.279,1174,1.49,1175,1.311,1176,1.49,1177,1.344,1178,1.49,1179,1.311,1180,1.49,1181,1.19,1182,1.49,1183,1.19,1184,2.144,1185,1.19,1186,1.49,1187,1.311,1188,1.49,1189,1.19,1190,1.49,1191,1.19,1192,1.279,1193,1.49,1194,1.311,1195,1.49,1196,1.49,1197,1.279,1198,1.49,1199,1.11,1200,1.49,1201,1.279,1202,1.451,1203,1.49,1222,2.027,1226,3.621,1259,5.497,1607,1.89,1632,3.049,1926,2.191,2048,2.833,2049,6.363,2050,3.828,2051,5.432,2052,5.432,2053,5.432,2054,6.958,2055,6.363,2056,8.245,2057,6.363,2058,3.776,2059,6.958,2060,5.952,2061,5.432,2062,4.483,2063,5.432,2064,5.432,2065,3.776,2066,5.432,2067,3.776,2068,5.76,2069,3.776,2070,3.776,2071,3.776,2072,3.776,2073,3.776,2074,3.776,2075,3.776,2076,3.776,2077,2.833,2078,5.432,2079,3.776,2080,3.338,2081,3.338,2082,3.049,2083,3.776,2084,4.076,2085,3.776,2086,3.776,2087,3.776,2088,3.776,2089,2.833,2090,3.338,2091,3.049,2092,3.776,2093,5.952,2094,4.076,2095,4.386,2096,3.776,2097,5.432,2098,3.776,2099,3.776,2100,3.776]],["title/modules/TsIconModule.html",[614,0.54,638,1.961]],["body/modules/TsIconModule.html",[2,0.123,4,0.096,5,0.044,6,0.044,31,0.007,60,0.009,87,1.496,95,0.007,137,0.2,149,0.192,173,0.146,176,0.064,228,0.688,299,1.195,410,1.845,614,0.96,616,1.711,617,1.168,618,1.831,638,4.014,658,2.217,661,2.217,744,2.321,745,1.916,1142,3.319,2090,5.898,2101,5.898,2102,5.898,2103,5.898,2104,6.673,2105,7.899,2106,7.899]],["title/classes/TsImageDimensions.html",[176,0.043,1947,3.13]],["body/classes/TsImageDimensions.html",[2,0.123,4,0.096,5,0.044,6,0.058,8,1.067,11,0.997,31,0.007,41,1.341,60,0.009,63,0.944,65,1.337,95,0.007,173,0.11,176,0.081,188,1.403,220,2.441,239,2.375,270,0.9,294,1.586,354,0.878,356,1.353,513,3.703,722,1.835,1903,5.052,1922,6.531,1923,4.051,1928,5.711,1940,4.713,1947,5.574,2107,5.912,2108,6.689,2109,6.689,2110,6.689,2111,6.689]],["title/modules/TsInputModule.html",[614,0.54,639,2.691]],["body/modules/TsInputModule.html",[2,0.113,4,0.088,5,0.041,6,0.041,31,0.007,32,1.121,60,0.009,87,1.372,95,0.007,137,0.207,149,0.176,151,1.679,173,0.142,176,0.059,228,0.836,299,1.096,410,1.778,614,0.911,616,1.569,617,1.071,618,1.679,626,5.881,638,3.895,639,5.642,656,4.737,657,5.12,658,2.104,661,2.104,663,5.409,682,3.063,706,3.17,707,3.881,712,4.312,744,2.203,745,1.757,746,4.181,747,4.998,751,5.625,752,4.591,1144,3.072,2112,5.409,2113,5.409,2114,5.409,2115,6.12,2116,5.409,2117,6.12,2118,6.082,2119,6.12,2120,7.498]],["title/components/TsLinkComponent.html",[48,0.433,1146,1.542]],["body/components/TsLinkComponent.html",[2,0.082,3,1.399,4,0.064,5,0.04,6,0.052,8,1.108,10,1.164,11,1.05,14,1.113,15,1.088,16,2.221,17,2.166,23,1.056,27,1.433,31,0.006,32,0.813,48,0.806,58,1.424,60,0.009,62,1.468,63,0.838,65,1.201,67,1.468,79,1.596,85,1.141,91,1.244,95,0.006,96,1.681,112,1.748,131,1.113,137,0.1,139,1.191,143,1.289,148,1.018,149,0.128,173,0.073,176,0.072,179,2.262,180,1.561,183,1.769,188,1.457,202,1.67,203,1.471,204,1.641,205,1.596,207,1.526,209,1.115,210,1.632,211,1.632,212,1.396,213,1.396,214,1.365,224,1.221,236,0.882,239,1.561,244,1.433,270,0.935,274,1.541,285,1.367,293,1.335,296,1.504,341,1.367,354,0.583,356,1.041,396,1.596,413,1.504,465,1.367,484,5.128,487,5.542,498,2.878,617,0.777,624,1.399,670,1.468,673,1.335,679,2.189,695,1.541,756,1.541,762,1.138,776,2.019,777,5.128,795,1.468,805,1.541,820,1.561,821,2.113,959,1.541,966,3.859,1015,1.504,1016,1.335,1017,1.752,1078,2.475,1117,1.706,1118,2.949,1119,1.752,1120,1.752,1121,2.402,1122,1.752,1123,1.752,1124,1.58,1125,1.752,1126,1.468,1127,1.752,1128,1.541,1129,1.58,1130,1.752,1131,1.58,1132,1.752,1133,1.541,1134,1.752,1135,1.504,1136,1.752,1137,1.541,1138,1.752,1139,1.504,1140,2.402,1141,1.58,1142,1.58,1143,1.752,1144,1.468,1145,1.752,1146,2.594,1147,1.752,1148,1.541,1149,1.752,1150,1.541,1151,1.752,1152,1.541,1153,1.752,1154,1.752,1155,1.541,1156,1.752,1157,1.468,1158,1.752,1159,1.752,1160,1.752,1161,1.504,1162,1.541,1163,1.752,1164,1.541,1165,1.752,1166,1.58,1167,1.752,1168,1.399,1169,1.335,1170,1.752,1171,1.304,1172,1.752,1173,1.504,1174,1.752,1175,1.541,1176,1.752,1177,1.58,1178,1.752,1179,1.541,1180,1.752,1181,1.399,1182,1.752,1183,1.399,1184,2.402,1185,1.399,1186,1.752,1187,1.541,1188,1.752,1189,1.399,1190,1.752,1191,1.399,1192,1.504,1193,1.752,1194,1.541,1195,1.752,1196,1.752,1197,1.504,1198,1.752,1199,1.304,1200,1.752,1201,1.504,1202,1.706,1203,1.752,1340,3.584,1456,3.871,2080,6.605,2121,3.924,2122,6.087,2123,6.087,2124,6.087,2125,7.473,2126,6.946,2127,6.087,2128,4.439,2129,4.439,2130,4.439,2131,4.439,2132,5.38,2133,4.439,2134,4.439,2135,4.439,2136,4.439,2137,3.128]],["title/modules/TsLinkModule.html",[614,0.54,640,2.962]],["body/modules/TsLinkModule.html",[2,0.121,4,0.095,5,0.043,6,0.043,31,0.007,60,0.009,87,1.47,95,0.007,137,0.204,149,0.189,173,0.145,176,0.063,228,0.676,299,1.174,410,1.831,614,0.95,616,1.681,617,1.147,618,1.799,638,3.958,640,6.127,658,2.194,661,2.194,682,3.281,744,2.297,745,1.883,1146,3.231,2138,5.795,2139,5.795,2140,6.556,2141,5.795,2142,6.556,2143,6.909,2144,5.293,2145,7.817]],["title/components/TsLoadingOverlayComponent.html",[48,0.433,1148,1.542]],["body/components/TsLoadingOverlayComponent.html",[2,0.096,4,0.075,5,0.045,6,0.034,31,0.006,32,0.95,48,0.838,60,0.009,62,1.715,67,1.715,95,0.006,96,1.209,131,1.3,137,0.117,148,1.189,149,0.149,173,0.085,176,0.076,179,2.134,180,1.731,182,1.448,183,1.416,184,4.09,188,1.416,203,1.48,204,1.655,207,1.693,209,1.237,212,1.548,213,1.548,214,1.514,216,1.548,236,0.979,270,1.011,285,2.778,354,0.681,413,1.757,465,1.597,498,2.403,500,4.09,617,0.908,624,1.635,670,1.715,673,1.56,679,1.635,685,3.654,695,1.8,756,1.8,762,1.33,795,1.715,805,1.8,820,1.731,821,2.344,959,1.8,1015,1.757,1016,2.031,1017,2.047,1065,3.919,1118,3.14,1119,2.047,1120,2.047,1121,2.665,1122,2.047,1123,2.047,1124,1.846,1125,2.047,1126,1.715,1127,2.047,1128,1.8,1129,1.846,1130,2.047,1131,1.846,1132,2.047,1133,1.8,1134,2.047,1135,1.757,1136,2.047,1137,1.8,1138,2.047,1139,1.757,1140,2.665,1141,1.846,1142,1.846,1143,2.047,1144,1.715,1145,2.047,1146,1.8,1147,2.047,1148,2.761,1149,2.047,1150,1.8,1151,2.047,1152,1.8,1153,2.047,1154,2.047,1155,1.8,1156,2.047,1157,1.715,1158,2.047,1159,2.047,1160,2.047,1161,1.757,1162,1.8,1163,2.047,1164,1.8,1165,2.047,1166,1.846,1167,2.047,1168,1.635,1169,1.56,1170,2.047,1171,1.524,1172,2.047,1173,1.757,1174,2.047,1175,1.8,1176,2.047,1177,1.846,1178,2.047,1179,1.8,1180,2.047,1181,1.635,1182,2.047,1183,1.635,1184,2.665,1185,1.635,1186,2.047,1187,1.8,1188,2.047,1189,1.635,1190,2.047,1191,1.635,1192,1.757,1193,2.047,1194,2.761,1195,2.047,1196,2.047,1197,1.757,1198,2.047,1199,1.524,1200,2.047,1201,1.757,1202,1.993,1203,2.047,1485,6.623,2146,3.891,2147,4.584,2148,5.969,2149,6.753]],["title/directives/TsLoadingOverlayDirective.html",[236,0.644,1194,1.542]],["body/directives/TsLoadingOverlayDirective.html",[2,0.083,4,0.065,5,0.03,6,0.057,8,0.72,10,1.319,11,1.045,23,1.198,31,0.006,41,1.406,45,1.941,47,3.138,48,0.682,60,0.009,63,0.933,65,1.257,80,1.35,91,1.348,95,0.006,101,2.374,112,1.769,117,1.769,127,1.181,137,0.177,141,2.822,143,1.2,145,3.188,149,0.13,164,1.51,165,1.649,169,1.458,173,0.074,176,0.043,180,1.158,183,0.948,184,3.731,188,1.47,202,1.69,203,0.959,209,1.443,216,1.412,219,1.263,224,1.51,226,1.754,228,0.635,236,1.142,270,0.943,271,3.575,285,2.503,293,1.853,294,1.235,308,1.652,327,3.424,328,1.359,334,2.307,341,1.391,354,0.808,356,1.053,408,1.53,446,3.184,458,5.304,473,2.842,541,2.036,553,1.853,554,2.431,556,3.053,685,6.12,722,1.923,762,1.158,765,1.896,766,3.184,776,2.055,779,1.783,782,2.622,799,5.648,854,3.648,918,3.763,1052,2.368,1094,3.575,1117,1.736,1148,1.568,1194,2.138,1218,6.195,1296,3.575,1485,5.91,1510,6.654,1511,3.993,1585,5.659,1609,3.993,1637,3.648,2146,6.516,2148,7.354,2150,3.993,2151,6.16,2152,6.16,2153,7.528,2154,7.528,2155,6.16,2156,7.009,2157,8.32,2158,7.009,2159,7.528,2160,8.32,2161,6.16,2162,7.009,2163,6.16,2164,6.16,2165,4.901,2166,6.16,2167,6.16,2168,4.518,2169,4.518,2170,8.468,2171,4.518,2172,7.878,2173,4.518,2174,4.518,2175,4.518,2176,3.993,2177,4.518,2178,6.16,2179,4.518,2180,4.518,2181,4.518,2182,6.16,2183,4.518,2184,4.518,2185,4.518,2186,4.518,2187,4.518,2188,4.518,2189,4.518,2190,4.518,2191,4.518,2192,6.16]],["title/modules/TsLoadingOverlayModule.html",[614,0.54,641,3.13]],["body/modules/TsLoadingOverlayModule.html",[2,0.12,4,0.094,5,0.043,6,0.043,31,0.007,60,0.009,87,1.465,95,0.007,137,0.199,149,0.188,173,0.145,176,0.063,228,0.674,285,2.567,299,1.17,410,1.829,614,0.948,616,1.675,617,1.143,618,1.792,641,6.472,658,2.189,661,2.189,685,4.604,744,2.292,745,1.876,1148,3.169,1194,3.23,1569,6.894,2146,4.902,2176,5.775,2193,5.775,2194,5.775,2195,5.775,2196,6.533,2197,7.8]],["title/components/TsLoginFormComponent.html",[48,0.433,1150,1.542]],["body/components/TsLoginFormComponent.html",[0,0.479,2,0.052,4,0.04,5,0.029,6,0.056,8,0.447,10,1.153,11,1.066,19,1.166,23,1.252,24,2.424,25,2.756,29,1.276,31,0.004,32,1.357,34,1.864,38,0.687,41,0.872,42,1.509,48,0.74,58,1.594,60,0.009,62,2.933,63,0.933,65,1.272,67,0.927,79,1.702,80,0.693,83,1.452,85,1.425,87,1.742,89,1.906,91,0.502,95,0.004,96,1.417,100,1.439,101,0.949,106,1.952,112,1.248,124,3.363,130,1.67,131,0.703,135,1.338,137,0.146,142,1.763,143,1.367,146,1.763,147,1.812,148,0.643,149,0.081,151,0.769,173,0.071,176,0.071,179,2.208,180,1.114,182,0.932,183,1.258,188,1.117,202,1.192,203,1.434,204,1.588,205,1.14,207,1.09,209,0.796,212,0.997,213,0.997,214,0.975,216,0.997,219,0.575,224,1.558,226,1.452,228,0.619,229,2.032,235,1.437,236,0.63,239,1.365,244,1.936,247,1.472,270,0.874,274,3.193,285,0.863,293,1.307,294,0.872,299,0.502,308,1.258,321,1.777,322,1.563,328,0.843,339,0.719,341,0.863,345,1.864,354,0.57,356,0.743,376,5.003,381,3.224,386,2.578,388,3.999,413,0.949,430,2.079,465,0.863,474,3.633,475,2.632,478,2.522,485,1.864,498,2.859,501,1.983,503,1.192,519,2.632,553,1.307,554,1.715,555,2.105,557,2.039,603,2.175,617,0.49,624,0.883,657,3.481,670,0.927,673,0.843,679,0.883,687,5.959,695,0.973,712,1.975,722,1.192,723,2.251,756,0.973,762,0.719,765,2.114,776,1.275,795,1.76,805,0.973,813,1.777,820,1.114,821,1.509,822,2.105,832,1.762,844,4.356,845,3.481,919,2.039,959,2.488,978,2.756,1001,1.357,1015,0.949,1016,0.843,1017,1.106,1052,1.67,1092,4.5,1094,1.627,1117,1.077,1118,2.367,1119,1.106,1120,1.106,1121,1.715,1122,1.106,1123,1.106,1124,0.997,1125,1.106,1126,2.369,1127,1.106,1128,0.973,1129,0.997,1130,1.106,1131,0.997,1132,1.106,1133,0.973,1134,1.106,1135,0.949,1136,1.106,1137,0.973,1138,1.106,1139,0.949,1140,1.715,1141,0.997,1142,0.997,1143,1.106,1144,2.271,1145,1.106,1146,1.848,1147,1.106,1148,0.973,1149,1.106,1150,2.082,1151,1.106,1152,0.973,1153,1.106,1154,1.106,1155,0.973,1156,1.106,1157,0.927,1158,1.106,1159,1.106,1160,1.106,1161,0.949,1162,0.973,1163,1.106,1164,0.973,1165,1.106,1166,0.997,1167,1.106,1168,0.883,1169,0.843,1170,1.106,1171,0.824,1172,1.106,1173,0.949,1174,1.106,1175,0.973,1176,1.106,1177,0.997,1178,1.106,1179,0.973,1180,1.106,1181,0.883,1182,1.106,1183,0.883,1184,1.715,1185,0.883,1186,1.106,1187,0.973,1188,1.106,1189,0.883,1190,1.106,1191,0.883,1192,0.949,1193,1.106,1194,0.973,1195,1.106,1196,1.106,1197,0.949,1198,1.106,1199,0.824,1200,1.106,1201,0.949,1202,1.077,1203,1.106,1217,2.756,1256,2.756,1296,1.627,1300,3.261,1302,5.049,1315,1.357,1316,2.103,1393,4.937,1607,2.175,1703,2.897,1717,3.261,1727,3.996,1738,3.999,1758,3.261,1834,2.424,1864,4.227,2198,6.344,2199,2.263,2200,4.696,2201,5.546,2202,7.101,2203,3.842,2204,3.842,2205,3.842,2206,5.302,2207,5.302,2208,5.302,2209,5.302,2210,6.071,2211,6.071,2212,4.706,2213,5.738,2214,4.706,2215,4.706,2216,5.738,2217,5.738,2218,2.477,2219,4.298,2220,4.346,2221,2.803,2222,2.803,2223,2.803,2224,3.509,2225,5.302,2226,3.842,2227,2.803,2228,2.803,2229,2.803,2230,3.063,2231,2.803,2232,3.842,2233,2.803,2234,6.071,2235,3.842,2236,3.842,2237,3.261,2238,3.509,2239,2.803,2240,3.509,2241,4.706,2242,2.803,2243,2.803,2244,4.706,2245,2.803,2246,2.803,2247,3.063,2248,2.803,2249,3.842,2250,2.477,2251,2.477,2252,2.103,2253,2.477,2254,2.477,2255,2.477,2256,2.477,2257,2.477,2258,3.842,2259,3.842,2260,2.477,2261,2.477,2262,2.477]],["title/modules/TsLoginFormModule.html",[614,0.54,642,3.13]],["body/modules/TsLoginFormModule.html",[2,0.11,4,0.086,5,0.04,6,0.04,31,0.007,60,0.009,62,2.446,87,1.343,95,0.007,137,0.208,149,0.172,151,1.643,173,0.141,176,0.058,228,0.828,299,1.073,410,1.761,548,2.364,614,0.899,616,1.536,617,1.048,618,1.643,627,4.546,631,5.851,639,5.315,640,5.851,642,6.604,652,5.851,657,5.093,658,2.077,661,2.077,664,3.216,667,5.294,683,4.493,684,5.294,687,4.22,702,5.294,712,4.22,744,2.174,745,1.72,747,4.932,808,4.294,809,3.216,1150,3.195,2198,4.493,2263,5.294,2264,5.294,2265,5.989,2266,5.294,2267,5.989,2268,5.989,2269,7.399]],["title/interfaces/TsLoginFormResponse.html",[0,0.76,2252,3.333]],["body/interfaces/TsLoginFormResponse.html",[0,1.002,2,0.077,4,0.061,5,0.028,6,0.028,8,0.67,10,1.316,11,1.013,19,1.127,23,0.891,24,2.344,25,2.665,29,1.008,31,0.005,32,1.337,34,1.803,38,1.03,42,1.459,48,0.711,60,0.009,62,2.944,63,0.757,65,1.284,79,1.769,83,3.036,85,1.439,87,1.722,89,1.925,91,1.049,95,0.005,96,1.49,100,1.424,101,1.985,106,2.029,112,1.207,124,3.495,130,1.615,135,1.294,137,0.173,142,1.983,143,1.392,146,1.722,147,1.752,148,0.964,149,0.121,151,1.153,173,0.096,176,0.074,179,2.188,180,1.078,182,0.901,183,0.882,188,0.882,202,1.153,203,0.655,204,1.026,205,1.102,207,1.054,209,0.77,212,0.964,213,0.964,214,0.943,216,0.964,219,0.862,224,1.636,226,1.431,228,0.605,229,1.985,235,1.39,239,1.078,244,1.892,274,3.21,293,1.264,294,0.843,299,0.753,308,1.229,321,2.665,322,2.344,328,1.264,339,1.078,345,1.803,354,0.552,356,1.002,376,5.167,381,4.087,386,2.838,388,3.907,430,2.049,474,3.55,475,2.546,478,4.237,485,1.803,498,2.83,501,1.938,503,1.153,519,2.546,553,1.264,554,1.659,555,2.035,557,1.972,603,2.104,657,3.401,687,2.962,712,2.962,765,1.804,795,1.39,813,3.716,822,2.035,832,1.704,844,4.279,845,3.401,919,1.972,959,2.534,978,2.665,1001,2.035,1052,1.615,1092,4.397,1094,2.439,1126,2.231,1144,2.231,1146,1.459,1150,1.459,1256,2.665,1296,2.439,1300,3.153,1302,5.144,1315,2.035,1316,3.153,1393,4.498,1607,2.104,1703,2.802,1717,3.153,1727,3.763,1738,3.907,1758,3.153,1834,2.344,1864,4.13,2198,3.153,2199,3.394,2200,5.36,2201,4.732,2202,7.028,2203,3.715,2204,3.715,2205,3.715,2206,3.715,2207,3.715,2208,3.715,2209,3.715,2210,5.18,2211,5.18,2212,3.715,2213,3.715,2214,3.715,2215,3.715,2216,3.715,2217,5.18,2219,3.394,2224,3.394,2225,5.18,2226,3.715,2230,2.962,2232,3.715,2234,5.964,2235,3.715,2236,3.715,2237,3.153,2238,3.394,2240,3.394,2241,6.786,2244,5.18,2247,2.962,2249,3.715,2250,3.715,2251,3.715,2252,4.397,2253,5.18,2254,3.715,2255,3.715,2256,3.715,2257,3.715,2258,5.18,2259,5.18,2260,3.715,2261,3.715,2262,3.715]],["title/modules/TsMaskModule.html",[614,0.54,643,3.13]],["body/modules/TsMaskModule.html",[2,0.123,4,0.096,5,0.044,6,0.044,31,0.007,60,0.009,87,1.495,95,0.007,137,0.196,149,0.192,173,0.146,176,0.064,228,0.688,299,1.194,410,1.844,411,5.607,413,3.175,614,0.959,616,1.709,617,1.166,618,1.829,643,6.405,658,2.215,661,2.215,744,2.319,745,1.914,2270,5.891,2271,5.891,2272,5.891,2273,5.891,2274,6.665,2275,7.894]],["title/components/TsMenuComponent.html",[48,0.433,1152,1.542]],["body/components/TsMenuComponent.html",[2,0.058,3,0.995,4,0.046,5,0.031,6,0.057,8,0.503,9,1.213,11,1.087,14,0.791,15,1.167,16,2.091,17,2.039,19,1.93,21,2.437,23,1.219,24,1.76,27,1.536,29,0.757,31,0.004,32,0.578,39,1.694,41,0.633,43,4.037,45,1.806,48,0.727,58,1.821,60,0.009,62,1.043,63,0.967,65,1.308,67,1.043,79,1.673,80,1.148,85,1.349,91,0.852,94,0.971,95,0.004,96,1.026,100,0.852,105,1.393,106,1.431,112,0.906,128,3.607,131,0.791,134,1.069,137,0.144,138,2.868,139,0.846,141,1.095,143,1.299,147,1.984,148,0.724,149,0.091,170,2.324,171,1.353,172,1.353,173,0.105,176,0.061,179,1.93,180,1.22,181,1.573,183,1.202,186,1.579,188,1.436,202,1.306,203,1.445,204,1.604,205,1.248,207,1.193,209,0.872,210,1.276,211,1.276,212,1.091,213,1.091,214,1.067,216,1.091,224,1.578,226,1.411,228,0.491,229,1.612,235,2.945,236,0.69,258,3.354,270,0.859,274,2.499,275,1.353,284,2.564,285,0.971,293,1.431,295,1.48,296,1.612,307,3.193,308,1.338,317,2.368,341,0.971,345,1.353,354,0.414,356,0.814,360,1.336,364,3.676,408,1.069,413,1.069,416,1.393,428,1.652,465,0.971,467,2.389,473,2.324,498,2.271,501,2.542,505,4.772,556,2.587,557,2.232,617,0.552,624,0.995,670,1.043,673,0.949,679,2.355,695,1.095,709,1.831,717,2.736,723,1.635,756,1.095,762,0.809,765,1.465,776,1.435,795,1.894,805,1.095,815,1.93,820,1.22,821,1.652,831,3.47,862,1.831,877,1.76,959,1.652,961,1.911,1015,1.069,1016,1.919,1017,1.245,1019,3.354,1020,2.465,1052,1.213,1055,5.419,1056,4.626,1079,3.843,1102,1.911,1104,4.037,1106,4.037,1117,1.213,1118,2.518,1119,1.245,1120,1.245,1121,1.878,1122,1.245,1123,1.245,1124,1.123,1125,1.245,1126,1.043,1127,1.245,1128,1.095,1129,1.123,1130,1.245,1131,1.123,1132,1.245,1133,1.095,1134,1.245,1135,1.069,1136,1.245,1137,1.095,1138,1.245,1139,1.069,1140,1.878,1141,1.123,1142,1.123,1143,1.245,1144,1.043,1145,1.245,1146,1.095,1147,1.245,1148,1.095,1149,1.245,1150,1.095,1151,1.245,1152,2.215,1153,1.245,1154,1.245,1155,1.095,1156,1.245,1157,1.043,1158,1.245,1159,1.245,1160,1.245,1161,1.069,1162,1.095,1163,1.245,1164,1.095,1165,1.245,1166,1.123,1167,1.245,1168,0.995,1169,0.949,1170,1.245,1171,0.927,1172,1.245,1173,1.069,1174,1.245,1175,1.095,1176,1.245,1177,1.123,1178,1.245,1179,1.095,1180,1.245,1181,0.995,1182,1.245,1183,0.995,1184,1.878,1185,0.995,1186,1.245,1187,1.095,1188,1.245,1189,0.995,1190,1.245,1191,0.995,1192,1.069,1193,1.245,1194,1.095,1195,1.245,1196,1.245,1197,1.069,1198,1.245,1199,0.927,1200,1.245,1201,1.069,1202,1.213,1203,1.245,1221,2.368,1222,1.694,1226,2.104,1393,3.173,1516,2.789,1598,3.173,1728,2.104,1829,5.072,1834,1.76,2082,2.548,2084,3.571,2137,3.354,2165,3.865,2276,2.548,2277,4.759,2278,4.759,2279,4.759,2280,6.381,2281,6.381,2282,6.381,2283,8.02,2284,5.73,2285,5.73,2286,5.73,2287,5.73,2288,6.847,2289,3.156,2290,5.065,2291,3.156,2292,3.156,2293,3.156,2294,5.065,2295,3.156,2296,5.065,2297,3.156,2298,3.156,2299,6.052,2300,4.207,2301,4.759,2302,3.156,2303,3.156,2304,3.156,2305,3.156,2306,6.381,2307,3.156,2308,7.198,2309,3.156,2310,7.198,2311,3.156,2312,3.156,2313,4.759,2314,3.156,2315,3.156,2316,4.759,2317,3.156,2318,2.224,2319,2.789,2320,3.156,2321,2.789,2322,2.789,2323,3.156,2324,1.911,2325,3.156,2326,3.156,2327,3.156,2328,3.156,2329,3.156,2330,3.156,2331,3.156,2332,2.548,2333,3.156,2334,2.548,2335,3.156,2336,3.156,2337,2.548,2338,4.759,2339,3.156,2340,3.156,2341,3.156,2342,3.156,2343,3.156,2344,3.156]],["title/modules/TsMenuModule.html",[614,0.54,644,2.962]],["body/modules/TsMenuModule.html",[2,0.118,4,0.093,5,0.042,6,0.042,31,0.007,60,0.009,87,1.438,95,0.007,137,0.206,149,0.185,173,0.144,176,0.062,228,0.662,299,1.149,410,1.814,614,0.937,616,1.644,617,1.122,618,1.76,627,4.62,638,3.938,644,6.166,658,2.165,661,2.165,664,3.444,682,3.21,744,2.267,745,1.842,797,5.788,798,4.812,1152,3.223,2337,5.178,2345,5.669,2346,5.669,2347,6.414,2348,5.669,2349,6.414,2350,6.819,2351,7.715]],["title/interfaces/TsNavigationActionItem.html",[0,0.76,490,2.578]],["body/interfaces/TsNavigationActionItem.html",[0,1.299,2,0.061,4,0.048,5,0.022,6,0.022,8,0.529,9,2.689,10,1.313,11,0.944,19,1.584,21,1.181,23,0.751,28,1.275,29,1.416,31,0.005,35,1.071,37,1.719,38,1.715,39,2.97,40,2,42,2.05,45,1.046,47,1.383,48,0.637,51,1.661,60,0.009,63,0.852,65,1.252,68,1.926,74,2.56,79,0.87,80,1.331,83,1.719,85,0.622,89,1.239,91,0.885,94,1.021,95,0.005,96,1.494,100,1.057,101,1.124,104,1.926,105,1.465,106,1.968,112,0.953,126,2.56,127,1.617,128,4.321,131,0.832,133,1.719,135,1.818,137,0.133,138,2.473,139,0.89,140,2.394,141,2.05,142,1.735,143,1.043,146,1.452,147,1.383,148,0.761,149,0.095,158,1.661,160,3.501,161,1.242,164,0.813,169,1.071,173,0.125,174,1.719,176,0.057,178,1.548,179,2.038,180,0.851,182,1.403,183,1.637,186,3.802,188,0.696,202,0.91,203,0.517,204,0.865,205,0.87,207,0.832,209,0.608,210,0.89,211,0.89,212,0.761,213,0.761,214,0.744,216,0.761,219,1.211,220,1.211,224,1.403,226,1.49,235,2.313,239,1.677,244,1.071,246,2.955,247,1.674,251,1.486,252,1.486,270,0.88,272,1.661,273,1.85,294,0.665,295,1.556,299,1.057,307,1.661,308,1.538,326,2.77,328,1.486,334,1.242,339,1.677,344,2.33,354,0.435,356,0.845,360,1.387,396,1.716,402,1.607,424,1.926,428,1.152,430,1.387,437,2.248,463,3.962,464,2.01,465,2.339,466,3.294,467,1.383,468,2.212,469,5.064,470,5.166,471,2.212,472,2.104,473,2.004,474,2.993,475,2.01,476,2.212,477,2.993,478,3.427,479,2.212,480,2.756,481,3.294,482,2.607,483,2.868,484,4.436,485,3.534,486,1.465,487,3.134,488,2.104,489,2.212,490,3.427,491,3.294,492,2.756,493,5.149,494,2.212,495,2.993,496,1.85,497,2.394,498,2.61,499,3.294,500,2.01,501,1.952,502,2.56,503,1.356,504,4.832,505,1.719,506,2.212,507,2.212,508,2.212,509,2.212,510,1.926,511,2.212,512,2.955,513,2.06,514,3.799,515,2.212,516,3.294,517,1.782,518,2.212,519,2.01,520,3.294,521,3.962,522,2.212,523,2.212,524,3.936,525,3.294,526,2.212,527,2.212,528,2.212,529,2.212,530,2.212,531,2.393,532,2.212,533,2.212,534,3.294,535,2.212,536,2.212,537,2.212,538,3.294,539,3.294,540,4.361,541,1.097,542,3.134,543,2.212,544,2.212,545,2.212,546,2.212,547,2.212,548,2.33,549,2.104,550,2.212,551,2.212,552,2.212,553,0.998,554,1.31,555,1.607,556,1.346,557,1.556,558,1.661,559,2.212,560,3.294,561,2.212,562,2.212,563,2.212,564,3.134,565,2.212,566,2.104,567,2.212,568,3.294,569,2.104,570,2.212,571,1.661,572,2.212,573,1.926,574,2.212,575,2.212,576,2.212,577,3.134,578,2.212,579,2.212,580,2.993,581,2.212,582,2.212,583,1.782,584,1.782,585,2.212,586,3.294,587,3.294,588,1.275,589,3.294,590,3.294,591,2.868,592,2.212,593,3.294,594,4.361,595,2.212,596,2.212,597,3.294,598,3.576,599,2.212,600,2.212,601,1.85,602,1.486,603,1.661,604,1.85,605,2.212,606,2.212,607,2.212,608,2.212,609,1.85,610,2.212,611,2.104,612,2.212,613,2.212,1929,3.708]],["title/components/TsNavigationComponent.html",[48,0.433,465,1.368]],["body/components/TsNavigationComponent.html",[0,1.081,2,0.043,4,0.033,5,0.025,6,0.056,8,0.369,9,2.071,10,1.3,11,1.047,19,1.259,21,0.823,23,1.012,28,1.435,29,1.418,31,0.003,32,0.424,35,1.205,37,1.934,38,1.321,39,2.872,40,2.003,41,1.081,42,2.195,45,0.729,47,1.557,48,0.696,51,1.869,58,1.105,60,0.009,62,0.765,63,0.922,65,1.285,67,0.765,68,1.343,74,1.934,79,0.607,80,1.369,83,1.198,85,0.434,89,0.936,91,0.841,94,0.712,95,0.003,96,1.43,100,0.841,101,1.265,104,1.343,105,1.021,106,2.082,112,1.072,126,1.934,127,1.49,128,4.31,131,1.177,133,1.934,135,1.445,137,0.106,138,2.35,139,0.621,140,2.564,141,2.053,142,1.584,143,1.008,146,1.584,147,1.557,148,0.531,149,0.067,158,1.158,160,3.756,161,0.866,164,0.567,169,0.747,173,0.109,174,1.198,176,0.052,178,0.979,179,2.115,180,0.957,182,1.485,183,1.725,186,3.946,188,0.985,202,1.025,203,1.413,204,1.559,205,0.979,207,0.936,209,0.684,210,1.002,211,1.002,212,0.856,213,0.856,214,0.837,216,0.856,219,1.213,220,1.363,224,1.334,226,1.598,235,2.427,236,0.541,239,1.775,244,0.747,246,2.697,247,1.265,251,1.123,252,1.123,270,1.029,272,1.869,273,2.082,285,0.712,294,0.749,295,1.085,299,0.841,307,2.697,308,1.604,326,2.203,328,1.123,334,1.398,339,1.382,341,0.712,344,2.334,354,0.616,356,0.639,360,1.048,396,1.413,402,1.808,408,0.784,413,0.784,424,1.343,428,0.803,430,1.318,437,2.136,463,2.844,464,1.401,465,2.201,466,2.49,467,0.965,468,1.542,469,5.182,470,5.211,471,1.542,472,2.978,473,1.904,474,3.264,475,2.262,476,1.542,477,2.844,478,3.128,479,1.542,480,2.082,481,2.49,482,1.649,483,2.167,484,4.39,485,2.969,486,1.021,487,2.978,488,1.467,489,1.542,490,2.167,491,1.542,492,1.29,493,5.118,494,1.542,495,2.844,496,1.29,497,2.398,498,2.722,499,3.593,500,2.262,501,2.09,502,2.791,503,1.478,504,4.775,505,1.934,506,2.49,507,2.49,508,2.49,509,2.49,510,2.167,511,3.593,512,3.164,513,2.247,514,3.446,515,2.49,516,2.49,517,1.242,518,1.542,519,2.262,520,4.215,521,3.581,522,3.593,523,3.593,524,3.13,525,2.49,526,1.542,527,1.542,528,3.593,529,2.49,530,1.542,531,2.863,532,3.13,533,1.542,534,2.49,535,1.542,536,1.542,537,1.542,538,2.49,539,2.49,540,3.593,541,1.235,542,3.417,543,3.942,544,1.542,545,3.593,546,1.542,547,3.593,548,2.334,549,2.368,550,2.49,551,1.542,552,1.542,553,1.123,554,1.474,555,1.808,556,2.185,557,1.752,558,1.869,559,3.593,560,2.49,561,1.542,562,1.542,563,1.542,564,2.368,565,1.542,566,1.467,567,1.542,568,3.13,569,2.368,570,2.49,571,1.869,572,2.49,573,1.343,574,1.542,575,1.542,576,1.542,577,2.368,578,1.542,579,1.542,580,2.262,581,1.542,582,1.542,583,2.005,584,2.005,585,3.593,586,2.49,587,2.49,588,0.889,589,2.49,590,2.49,591,2.167,592,1.542,593,2.49,594,3.593,595,1.542,596,1.542,597,2.49,598,3.264,599,1.542,600,1.542,601,1.29,602,1.412,603,1.158,604,1.29,605,1.542,606,1.542,607,1.542,608,1.542,609,1.29,610,1.542,611,2.368,612,2.49,613,1.542,617,0.405,624,0.729,670,0.765,673,0.696,679,0.729,695,0.803,722,1.478,723,1.934,756,0.803,762,0.593,765,1.15,776,1.052,795,0.765,805,0.803,820,0.957,821,1.296,959,0.803,1015,0.784,1016,0.696,1017,0.913,1117,0.889,1118,2.127,1119,0.913,1120,0.913,1121,1.474,1122,0.913,1123,0.913,1124,0.823,1125,0.913,1126,0.765,1127,0.913,1128,0.803,1129,0.823,1130,0.913,1131,0.823,1132,0.913,1133,0.803,1134,0.913,1135,0.784,1136,0.913,1137,0.803,1138,0.913,1139,0.784,1140,1.474,1141,0.823,1142,0.823,1143,0.913,1144,0.765,1145,0.913,1146,0.803,1147,0.913,1148,0.803,1149,0.913,1150,0.803,1151,0.913,1152,0.803,1153,0.913,1154,0.913,1155,0.803,1156,0.913,1157,0.765,1158,0.913,1159,0.913,1160,0.913,1161,0.784,1162,0.803,1163,0.913,1164,0.803,1165,0.913,1166,0.823,1167,0.913,1168,0.729,1169,0.696,1170,0.913,1171,0.68,1172,0.913,1173,0.784,1174,0.913,1175,0.803,1176,0.913,1177,0.823,1178,0.913,1179,0.803,1180,0.913,1181,0.729,1182,0.913,1183,0.729,1184,1.474,1185,0.729,1186,0.913,1187,0.803,1188,0.913,1189,0.729,1190,0.913,1191,0.729,1192,0.784,1193,0.913,1194,0.803,1195,0.913,1196,0.913,1197,0.784,1198,0.913,1199,0.68,1200,0.913,1201,0.784,1202,0.889,1203,0.913,1428,2.045,2352,3.734,2353,3.734,2354,4.696,2355,2.314,2356,3.734,2357,2.314,2358,2.314,2359,2.314,2360,2.314,2361,2.314,2362,2.314,2363,2.314,2364,2.314,2365,2.314,2366,2.314,2367,2.314,2368,2.314,2369,2.314,2370,2.314,2371,2.314,2372,2.314,2373,2.314,2374,2.314,2375,2.314,2376,2.314,2377,2.314,2378,2.314,2379,2.314,2380,7.341,2381,3.734]],["title/interfaces/TsNavigationLinkItem.html",[0,0.76,483,2.578]],["body/interfaces/TsNavigationLinkItem.html",[0,1.296,2,0.061,4,0.048,5,0.022,6,0.022,8,0.526,9,2.681,10,1.368,11,0.942,19,1.578,21,1.173,23,0.748,28,1.267,29,1.41,31,0.005,35,1.064,37,1.708,38,1.71,39,2.998,40,1.992,42,2.042,45,1.039,47,1.374,48,0.635,51,1.65,60,0.009,63,0.782,65,1.25,68,1.913,74,2.547,79,0.864,80,1.329,83,1.708,85,0.618,89,1.233,91,0.881,94,1.015,95,0.005,96,1.508,100,1.249,101,1.117,104,1.913,105,1.455,106,1.961,112,0.947,126,2.547,127,1.615,128,4.324,131,0.826,133,1.708,135,1.514,137,0.132,138,2.461,139,0.884,140,2.385,141,2.042,142,1.728,143,1.04,146,1.445,147,1.374,148,0.756,149,0.095,158,1.65,160,3.492,161,1.234,164,0.808,169,1.064,173,0.124,174,1.708,176,0.056,178,1.542,179,2.033,180,0.845,182,1.399,183,1.634,186,3.794,188,0.691,202,0.904,203,0.513,204,0.861,205,0.864,207,0.826,209,0.604,210,0.884,211,0.884,212,0.756,213,0.756,214,0.739,216,0.756,219,1.206,220,1.203,224,1.399,226,1.486,235,2.306,239,1.672,244,1.064,246,2.944,247,1.666,251,1.479,252,1.479,270,0.878,272,1.65,273,1.838,294,0.661,295,1.546,299,1.053,307,1.65,308,1.534,326,2.759,328,1.479,334,1.234,339,1.672,344,2.322,354,0.433,356,0.841,360,1.38,396,1.71,402,1.596,424,1.913,428,1.144,430,1.38,437,2.237,463,3.95,464,1.997,465,2.334,466,3.279,467,1.374,468,2.198,469,5.054,470,5.18,471,2.198,472,2.09,473,1.994,474,2.979,475,1.997,476,2.198,477,2.979,478,3.414,479,2.198,480,2.742,481,3.279,482,2.597,483,3.414,484,5.05,485,3.251,486,2.171,487,3.73,488,3.119,489,3.279,490,2.854,491,2.198,492,1.838,493,5.141,494,2.198,495,2.979,496,1.838,497,2.385,498,2.604,499,3.279,500,1.997,501,1.945,502,2.547,503,1.349,504,4.824,505,1.708,506,2.198,507,2.198,508,2.198,509,2.198,510,1.913,511,2.198,512,2.944,513,2.05,514,3.79,515,2.198,516,3.279,517,1.77,518,2.198,519,1.997,520,3.279,521,3.95,522,2.198,523,2.198,524,3.921,525,3.279,526,2.198,527,2.198,528,2.198,529,2.198,530,2.198,531,2.381,532,2.198,533,2.198,534,3.279,535,2.198,536,2.198,537,2.198,538,3.279,539,3.279,540,4.347,541,1.09,542,3.119,543,2.198,544,2.198,545,2.198,546,2.198,547,2.198,548,2.322,549,2.09,550,2.198,551,2.198,552,2.198,553,0.991,554,1.301,555,1.596,556,1.337,557,1.546,558,1.65,559,2.198,560,3.279,561,2.198,562,2.198,563,2.198,564,3.119,565,2.198,566,2.09,567,2.198,568,3.279,569,2.09,570,2.198,571,1.65,572,2.198,573,1.913,574,2.198,575,2.198,576,2.198,577,3.119,578,2.198,579,2.198,580,2.979,581,2.198,582,2.198,583,1.77,584,1.77,585,2.198,586,3.279,587,3.279,588,1.267,589,3.279,590,3.279,591,2.854,592,2.198,593,3.279,594,4.347,595,2.198,596,2.198,597,3.279,598,3.563,599,2.198,600,2.198,601,1.838,602,1.479,603,1.65,604,1.838,605,2.198,606,2.198,607,2.198,608,2.198,609,1.838,610,2.198,611,2.09,612,2.198,613,2.198]],["title/modules/TsNavigationModule.html",[614,0.54,645,3.13]],["body/modules/TsNavigationModule.html",[2,0.118,4,0.093,5,0.042,6,0.042,31,0.007,60,0.009,87,1.438,95,0.007,137,0.207,149,0.185,173,0.144,176,0.062,228,0.662,299,1.149,410,1.814,465,2.858,548,2.531,614,0.937,616,1.644,617,1.122,618,1.76,638,3.938,645,6.454,658,2.165,661,2.165,682,3.21,744,2.267,745,1.842,797,5.788,798,4.812,808,4.477,809,3.444,2143,6.819,2144,5.178,2337,5.178,2350,6.819,2382,5.669,2383,5.669,2384,6.414,2385,5.669,2386,6.414,2387,7.715]],["title/interfaces/TsNavigationPayload.html",[0,0.76,495,2.691]],["body/interfaces/TsNavigationPayload.html",[0,1.298,2,0.061,4,0.048,5,0.022,6,0.022,8,0.528,9,2.511,10,1.313,11,0.96,19,1.581,21,1.755,23,0.75,28,1.272,29,1.82,31,0.005,35,1.068,37,1.714,38,1.602,39,2.968,40,1.997,42,2.046,45,1.043,47,1.379,48,0.636,51,1.656,60,0.009,63,0.875,65,1.251,68,1.92,74,2.554,79,0.868,80,1.33,83,2.554,85,0.62,89,1.236,91,0.883,94,1.018,95,0.005,96,1.493,100,1.056,101,1.121,104,1.92,105,1.461,106,1.965,112,0.95,126,2.554,127,1.616,128,4.32,131,0.829,133,1.714,135,1.518,137,0.133,138,2.468,139,0.887,140,2.39,141,2.046,142,1.732,143,1.042,146,1.449,147,1.379,148,0.759,149,0.095,158,1.656,160,3.497,161,1.239,164,0.811,169,1.068,173,0.125,174,3.053,176,0.057,178,1.293,179,2.036,180,0.848,182,1.401,183,1.636,186,3.798,188,0.694,202,0.908,203,0.515,204,0.863,205,0.868,207,0.829,209,0.606,210,0.887,211,0.887,212,0.759,213,0.759,214,0.742,216,0.759,219,1.209,220,1.207,224,1.401,226,1.488,235,2.31,239,1.675,244,1.068,246,2.95,247,1.67,251,1.483,252,1.483,270,0.879,272,1.656,273,1.845,294,0.663,295,2.313,299,1.056,307,1.656,308,1.536,326,2.765,328,1.483,334,1.239,339,1.675,344,2.326,354,0.434,356,0.843,360,1.384,396,1.713,402,1.602,424,1.92,428,1.148,430,1.384,437,2.243,463,3.57,464,2.004,465,2.336,466,3.287,467,1.379,468,2.205,469,5.06,470,5.164,471,2.205,472,2.098,473,1.999,474,2.986,475,2.004,476,2.205,477,2.986,478,3.421,479,2.205,480,2.75,481,3.287,482,2.177,483,2.862,484,4.43,485,3.419,486,1.461,487,3.127,488,2.098,489,2.205,490,2.862,491,2.205,492,1.845,493,5.146,494,3.287,495,3.57,496,2.75,497,2.649,498,2.607,499,3.287,500,2.004,501,1.949,502,2.554,503,1.353,504,4.828,505,1.714,506,2.205,507,2.205,508,2.205,509,2.205,510,1.92,511,2.205,512,2.95,513,2.056,514,3.795,515,2.205,516,3.287,517,1.776,518,2.205,519,2.004,520,3.287,521,3.957,522,2.205,523,2.205,524,3.93,525,3.287,526,2.205,527,2.205,528,2.205,529,2.205,530,2.205,531,2.388,532,2.205,533,2.205,534,3.287,535,2.205,536,2.205,537,2.205,538,3.287,539,3.287,540,4.355,541,1.094,542,3.127,543,2.205,544,2.205,545,2.205,546,2.205,547,2.205,548,2.326,549,2.098,550,2.205,551,2.205,552,2.205,553,0.995,554,1.306,555,1.602,556,1.342,557,1.552,558,1.656,559,2.205,560,3.287,561,2.205,562,2.205,563,2.205,564,3.127,565,2.205,566,2.098,567,2.205,568,3.287,569,2.098,570,2.205,571,1.656,572,2.205,573,1.92,574,2.205,575,2.205,576,2.205,577,3.127,578,2.205,579,2.205,580,2.986,581,2.205,582,2.205,583,1.776,584,1.776,585,2.205,586,3.287,587,3.287,588,1.272,589,3.287,590,3.287,591,2.862,592,2.205,593,3.287,594,4.355,595,2.205,596,2.205,597,3.287,598,3.57,599,2.205,600,2.205,601,1.845,602,1.483,603,1.656,604,1.845,605,2.205,606,2.205,607,2.205,608,2.205,609,1.845,610,2.205,611,2.098,612,2.205,613,2.205,1929,3.699]],["title/interfaces/TsPaginatorMenuItem.html",[0,0.76,2388,3.333]],["body/interfaces/TsPaginatorMenuItem.html",[0,0.647,2,0.043,3,0.741,4,0.034,5,0.016,6,0.016,8,1.068,9,1.455,10,1.274,11,1.03,14,0.59,15,0.577,16,1.381,17,1.347,19,1.459,21,2.734,23,1.219,24,3.034,27,1.533,28,1.455,29,1.527,31,0.007,37,3.907,38,1.334,39,2.267,40,0.797,41,0.952,43,1.658,44,1.658,45,1.497,48,0.462,58,1.307,60,0.009,63,0.61,65,1.333,74,1.219,77,1.671,79,1.245,80,1.393,85,1.02,89,2.009,91,1.247,95,0.004,96,0.85,99,1.894,100,0.421,101,1.282,105,1.039,106,1.793,126,2.46,127,1.221,128,2.988,131,2.137,134,1.282,135,1.675,137,0.122,138,1.894,139,0.631,140,1.926,141,0.817,142,1.752,143,1.304,146,1.395,148,0.539,149,0.068,158,2.723,163,1.568,164,0.928,165,0.859,169,0.759,170,1.535,171,1.009,172,1.009,173,0.062,176,0.046,179,1.928,180,0.603,181,1.251,182,1.018,188,0.493,202,0.645,203,0.366,204,0.662,205,0.617,207,0.59,209,0.431,210,0.631,211,0.631,212,0.539,213,0.539,214,0.528,216,0.868,219,1.116,220,1.381,224,1.607,226,1.447,235,0.778,239,2.31,244,0.759,245,0.707,247,1.608,251,1.636,252,1.636,260,2.036,270,1.051,273,1.312,276,1.365,284,1.417,293,2.436,294,0.472,302,1.765,306,1.568,307,1.177,308,1.336,318,5.025,322,1.312,323,1.365,326,1.103,328,2.41,334,1.778,339,0.603,344,0.928,354,0.309,356,0.647,360,1.333,386,1.833,388,2.523,396,2.145,402,1.833,424,4.283,428,2.325,437,1.722,486,1.039,488,1.492,498,2.479,501,2.54,502,3.469,503,1.038,504,1.425,505,3.98,512,2.377,517,2.922,555,1.139,557,2.552,564,3.781,571,1.177,588,3.218,602,1.138,603,1.894,604,4.115,679,1.715,709,2.197,761,1.658,779,0.928,818,4.465,822,1.833,829,1.765,831,1.425,836,1.899,850,6.696,870,5.394,872,3.781,920,1.139,966,5.931,983,3.056,986,1.899,1016,1.636,1023,1.103,1056,3.056,1083,2.079,1094,1.365,1099,1.365,1102,1.425,1108,2.667,1152,1.314,1155,1.648,1222,2.032,1284,2.079,1300,1.765,1302,1.658,1314,1.492,1315,1.833,1348,2.079,1359,3.345,1410,1.365,1561,2.079,1622,1.658,1625,1.899,1650,2.079,1651,3.056,1829,2.667,1834,1.312,1951,5.4,1985,1.658,2005,1.568,2050,2.667,2094,1.765,2238,1.899,2388,5.764,2389,2.079,2390,6.282,2391,4.197,2392,2.353,2393,2.353,2394,2.353,2395,3.345,2396,2.353,2397,4.749,2398,2.353,2399,4.81,2400,2.353,2401,2.079,2402,3.785,2403,4.489,2404,2.079,2405,2.353,2406,2.353,2407,2.353,2408,2.353,2409,2.353,2410,2.353,2411,2.353,2412,2.353,2413,2.353,2414,2.353,2415,2.353,2416,2.353,2417,2.353,2418,2.353,2419,2.353,2420,2.353,2421,2.353,2422,2.353,2423,2.353,2424,2.353,2425,2.353,2426,1.899,2427,2.353,2428,2.353,2429,3.056,2430,2.353,2431,2.353,2432,3.785,2433,2.353,2434,3.785,2435,2.353,2436,5.624,2437,2.353,2438,2.353,2439,2.353,2440,2.353,2441,2.353,2442,3.785,2443,3.785,2444,2.353,2445,2.353,2446,2.353,2447,2.353,2448,2.353,2449,2.353,2450,3.785,2451,2.353,2452,5.963,2453,2.353,2454,3.785,2455,2.353,2456,2.353,2457,2.353,2458,2.353,2459,2.353,2460,2.353,2461,2.353,2462,5.441,2463,2.353,2464,5.963,2465,5.441,2466,2.353,2467,4.749,2468,4.749,2469,2.353,2470,2.353,2471,6.371,2472,2.353,2473,2.079,2474,5.963,2475,2.353,2476,3.785,2477,3.785,2478,3.785,2479,4.749,2480,2.353,2481,2.353,2482,2.353,2483,2.353,2484,2.353,2485,5.963,2486,5.441,2487,2.353,2488,2.353,2489,3.785,2490,6.698,2491,2.353,2492,2.353,2493,2.353,2494,2.353,2495,2.353,2496,2.353,2497,2.353,2498,2.353,2499,2.353,2500,2.353,2501,2.353,2502,3.785,2503,1.765,2504,3.785,2505,2.353,2506,3.785,2507,5.631,2508,2.353,2509,2.353,2510,6.371,2511,2.353,2512,5.963,2513,4.749,2514,2.353,2515,2.353,2516,2.353,2517,2.353,2518,2.353]],["title/modules/TsPaginatorModule.html",[614,0.54,646,2.962]],["body/modules/TsPaginatorModule.html",[2,0.116,4,0.09,5,0.041,6,0.041,31,0.007,60,0.009,87,1.406,95,0.007,137,0.207,149,0.18,151,1.72,173,0.143,176,0.06,228,0.647,299,1.123,410,1.797,614,0.924,616,1.608,617,1.097,618,1.72,627,4.596,644,5.915,646,6.225,650,5.915,655,5.15,658,2.136,661,2.136,664,3.367,690,5.542,700,5.542,705,4.418,744,2.236,745,1.801,746,4.243,1155,3.214,2519,5.542,2520,5.542,2521,6.271,2522,5.542,2523,6.271,2524,7.61]],["title/modules/TsPipesModule.html",[614,0.54,693,3.13]],["body/modules/TsPipesModule.html",[2,0.108,4,0.085,5,0.039,6,0.039,31,0.007,60,0.009,87,1.318,95,0.007,137,0.202,149,0.169,173,0.148,176,0.056,228,0.754,299,1.052,410,1.746,614,0.888,616,1.507,617,1.028,618,1.612,658,2.052,661,2.052,693,6.594,744,2.149,745,1.687,822,3.541,961,4.429,1665,6.145,2525,5.194,2526,5.194,2527,5.194,2528,6.495,2529,6.495,2530,6.495,2531,6.495,2532,5.876,2533,7.312,2534,6.463,2535,5.904,2536,7.312,2537,6.463,2538,5.904,2539,8.33,2540,5.904,2541,7.312,2542,5.904]],["title/classes/TsRadioChange.html",[176,0.043,2543,3.333]],["body/classes/TsRadioChange.html",[0,0.487,2,0.052,3,0.897,4,0.041,5,0.019,6,0.019,9,2.324,10,1.31,11,1.017,14,0.713,15,1.603,16,1.605,17,1.565,19,1.179,21,1.565,23,1.362,27,1.952,28,3.175,29,1.567,30,2.788,31,0.004,32,1.108,35,2.11,38,1.873,39,1.565,41,1.7,45,0.897,48,0.702,58,1.102,60,0.009,61,2.58,63,0.678,65,1.319,70,1.123,79,1.586,80,1.342,85,1.007,89,1.516,91,1.479,94,2.352,95,0.005,96,1.29,99,3.459,100,1.479,101,2.048,112,2.069,117,1.263,127,0.843,128,3.831,130,1.094,131,1.102,134,1.489,135,0.876,137,0.168,139,0.763,140,2.18,142,1.579,143,1.33,144,2.452,145,2,146,1.292,148,0.652,149,0.082,151,0.781,164,1.078,165,1.038,167,2.005,168,2.452,169,0.918,170,2.18,171,1.22,172,1.22,173,0.107,175,5.092,176,0.066,178,1.409,179,1.622,180,0.729,181,1.454,182,1.153,183,0.597,185,1.651,188,0.597,202,0.781,203,0.443,204,0.941,205,0.746,207,0.713,209,0.521,210,0.763,211,0.763,212,0.652,213,0.652,214,0.638,216,0.652,219,0.584,224,1.532,226,1.459,228,0.454,229,0.964,244,2.11,245,1.616,247,0.964,249,3.787,251,1.819,252,1.819,253,2.521,260,3.346,270,0.592,271,3.794,274,2.399,275,2.964,276,2.552,284,1.647,294,0.571,296,1.489,299,0.509,305,1.651,308,1.127,309,2.005,311,1.587,327,1.294,328,1.616,329,2.129,339,0.729,341,0.876,344,1.123,354,0.373,356,0.487,360,2.292,364,1.528,381,1.723,383,3.408,385,2.278,389,2.452,396,0.746,408,0.964,409,1.651,410,0.964,412,1.186,414,1.587,415,1.651,416,2.373,428,0.988,430,1.234,432,1.335,457,2.997,467,1.833,473,1.783,480,1.587,486,1.256,497,1.154,501,0.941,503,0.781,512,1.424,531,2.129,554,1.123,555,4.039,556,1.154,588,1.094,602,0.856,624,1.386,695,3.042,696,1.804,713,1.723,714,1.723,717,2.305,779,1.123,782,2.552,821,1.527,851,1.294,852,2.361,859,2.278,860,1.651,877,2.452,884,1.651,885,2.552,886,3.509,887,1.651,917,1.587,918,1.528,919,1.335,920,1.378,921,1.651,922,2.361,928,2.135,1016,2.167,1023,1.335,1052,1.094,1055,2.005,1094,1.651,1099,1.651,1117,1.094,1157,2.161,1265,3.119,1266,1.424,1268,1.424,1285,4.87,1292,6.197,1333,1.651,1411,1.804,1416,1.897,1420,1.897,1456,1.474,1495,2.997,1536,1.651,1554,3.55,1578,2.297,1608,3.55,1649,2.297,1727,1.587,1728,2.932,1738,1.897,1864,2.005,1987,2.005,2025,2.997,2060,4.34,2089,2.135,2137,3.099,2318,2.005,2324,2.663,2332,2.297,2543,4.905,2544,1.897,2545,2.005,2546,5.778,2547,5.345,2548,4.751,2549,7.301,2550,4.751,2551,5.345,2552,4.751,2553,4.751,2554,4.751,2555,3.887,2556,3.887,2557,3.887,2558,3.887,2559,2.515,2560,2.515,2561,4.751,2562,2.515,2563,2.515,2564,2.515,2565,3.099,2566,2.515,2567,2.297,2568,3.887,2569,5.731,2570,4.751,2571,2.515,2572,2.515,2573,2.297,2574,2.515,2575,2.515,2576,6.669,2577,2.932,2578,2.515,2579,2.515,2580,2.515,2581,2.005,2582,2.297,2583,2.515,2584,2.297,2585,2.515,2586,4.751,2587,2.135,2588,3.887,2589,2.515,2590,3.887,2591,2.515,2592,2.515,2593,3.887,2594,2.515,2595,5.58,2596,2.515,2597,3.887,2598,4.751,2599,2.515,2600,2.515,2601,3.887,2602,2.515,2603,2.515,2604,3.887,2605,3.887,2606,2.515,2607,2.515,2608,2.515,2609,3.887,2610,2.515,2611,2.515,2612,3.887,2613,2.515,2614,2.515,2615,3.887,2616,2.515,2617,2.515,2618,3.887,2619,2.515,2620,2.135,2621,2.515,2622,2.515,2623,2.515,2624,2.515,2625,2.515,2626,2.515,2627,3.887,2628,2.515,2629,2.515,2630,2.515,2631,2.515,2632,2.515]],["title/modules/TsRadioGroupModule.html",[614,0.54,647,3.13]],["body/modules/TsRadioGroupModule.html",[2,0.115,4,0.09,5,0.041,6,0.041,31,0.007,32,1.139,60,0.009,87,1.394,95,0.007,137,0.207,149,0.179,151,1.705,173,0.143,176,0.06,228,0.641,299,1.113,410,1.79,548,2.453,614,0.919,616,1.593,617,1.088,618,1.705,638,3.909,647,6.49,656,4.754,658,2.124,661,2.124,682,3.11,695,2.627,696,3.941,706,3.219,707,3.941,744,2.224,745,1.785,746,4.22,747,5.046,808,4.393,809,3.337,1157,3.077,1209,5.678,1210,3.337,2544,4.143,2573,5.018,2577,5.441,2633,5.493,2634,5.493,2635,5.493,2636,6.215,2637,5.493,2638,6.215,2639,7.569,2640,7.569]],["title/interfaces/TsRadioOption.html",[0,0.76,2569,3.333]],["body/interfaces/TsRadioOption.html",[0,0.741,2,0.051,3,0.88,4,0.04,5,0.018,6,0.029,8,0.691,9,2.636,10,1.334,11,1.034,14,0.7,15,1.682,16,1.582,17,1.543,19,1.425,21,1.543,23,1.36,27,1.932,28,3.162,29,1.435,30,2.749,31,0.004,32,1.097,35,2.092,38,1.903,39,1.543,41,1.737,45,0.88,48,0.697,58,1.089,60,0.009,61,2.558,63,0.803,65,1.316,70,1.102,79,1.57,80,1.337,85,0.996,89,1.501,91,1.473,94,2.338,95,0.005,96,1.325,99,3.433,100,1.473,101,2.028,112,2.055,117,1.245,127,0.831,128,3.898,130,1.073,131,1.087,134,1.468,135,0.86,137,0.167,139,0.749,140,2.154,142,1.561,143,1.325,144,2.428,145,1.972,146,1.274,148,0.64,149,0.08,151,0.766,164,1.063,165,1.019,167,1.968,168,2.417,169,0.901,170,2.154,171,1.198,172,1.198,173,0.106,175,5.064,176,0.062,178,1.137,179,1.606,180,0.716,181,1.433,182,1.139,183,0.586,185,1.621,188,0.586,202,0.766,203,0.435,204,0.93,205,0.732,207,0.7,209,0.512,210,0.749,211,0.749,212,0.64,213,0.64,214,0.626,216,0.64,219,0.573,224,1.585,226,1.45,228,0.447,229,0.946,244,2.092,245,1.598,247,0.946,249,3.743,251,1.801,252,1.801,253,2.492,260,3.329,270,0.583,271,3.762,274,2.381,275,2.941,276,2.516,284,1.623,294,0.56,296,1.468,299,0.5,305,1.621,308,1.114,309,1.968,311,1.557,327,1.27,328,1.598,329,2.099,339,0.716,341,0.86,344,1.102,354,0.366,356,0.908,360,2.372,364,1.5,381,1.691,383,3.368,385,2.245,389,2.417,396,0.732,408,0.946,409,1.621,410,0.951,412,1.164,414,1.557,415,1.621,416,2.345,428,0.969,430,1.217,432,1.31,457,2.962,467,1.807,473,1.758,480,1.557,486,1.233,497,1.133,501,0.923,503,0.766,512,1.398,531,2.099,554,1.102,555,4.024,556,1.133,588,1.073,602,0.84,624,1.366,695,3.034,696,2.749,713,1.691,714,1.691,717,1.859,779,1.102,782,2.516,821,1.505,851,1.27,852,2.327,859,2.245,860,1.621,877,2.417,884,1.621,885,2.516,886,3.475,887,1.621,917,1.557,918,1.5,919,1.31,920,1.352,921,1.621,922,2.327,928,2.095,1016,2.377,1023,1.31,1052,1.073,1055,1.968,1094,1.621,1099,1.621,1117,1.073,1157,1.979,1265,3.083,1266,1.398,1268,1.398,1285,5.043,1292,6.173,1333,1.621,1411,1.771,1416,1.862,1420,1.862,1456,1.447,1495,2.962,1536,1.621,1554,3.5,1578,2.255,1608,3.5,1649,2.255,1727,1.557,1728,2.89,1738,1.862,1864,1.968,1987,1.968,2025,2.962,2060,4.289,2089,2.095,2137,3.054,2318,1.968,2324,2.625,2332,2.255,2543,3.985,2544,2.89,2545,1.968,2546,4.695,2547,5.292,2548,4.695,2549,7.273,2550,4.695,2551,5.292,2552,4.695,2553,4.695,2554,4.695,2555,3.831,2556,3.831,2557,3.831,2558,3.831,2559,2.469,2560,2.469,2561,4.695,2562,2.469,2563,2.469,2564,2.469,2565,3.054,2566,2.469,2567,2.255,2568,3.831,2569,5.824,2570,4.695,2571,2.469,2572,2.469,2573,2.255,2574,2.469,2575,3.831,2576,6.643,2577,2.89,2578,2.469,2579,2.469,2580,2.469,2581,1.968,2582,2.255,2583,2.469,2584,2.255,2585,2.469,2586,4.695,2587,2.095,2588,3.831,2589,2.469,2590,3.831,2591,2.469,2592,2.469,2593,3.831,2594,2.469,2595,5.538,2596,2.469,2597,3.831,2598,4.695,2599,2.469,2600,2.469,2601,3.831,2602,2.469,2603,2.469,2604,3.831,2605,3.831,2606,2.469,2607,2.469,2608,2.469,2609,3.831,2610,2.469,2611,2.469,2612,3.831,2613,2.469,2614,2.469,2615,3.831,2616,2.469,2617,2.469,2618,3.831,2619,2.469,2620,2.095,2621,2.469,2622,2.469,2623,2.469,2624,2.469,2625,2.469,2626,2.469,2627,3.831,2628,2.469,2629,2.469,2630,2.469,2631,2.469,2632,2.469,2641,2.793]],["title/components/TsReactiveFormBaseComponent.html",[48,0.433,624,1.4]],["body/components/TsReactiveFormBaseComponent.html",[0,1.328,2,0.072,4,0.056,5,0.037,6,0.056,8,0.623,11,1.058,18,4.386,23,1.354,27,1.797,31,0.005,32,1.188,41,1.417,48,0.727,58,1.449,60,0.009,62,1.292,63,0.916,65,1.153,67,1.292,80,1.238,91,1.338,94,2.176,95,0.005,99,3.246,116,2.753,131,0.98,137,0.146,143,1.127,149,0.112,151,1.072,164,0.958,169,1.261,173,0.106,176,0.075,178,1.46,183,1.482,188,1.168,203,1.465,204,1.627,219,1.142,228,0.729,229,1.886,236,0.807,251,1.175,252,1.175,270,1.075,274,3.058,275,3.33,285,1.203,293,1.175,296,1.886,308,1.676,354,0.513,356,0.952,383,3.53,386,3.422,390,5.472,408,2.707,413,1.324,418,3.231,419,3.923,428,1.933,437,1.777,439,3.923,441,4.102,442,3.923,465,1.203,541,1.84,558,1.956,617,0.684,624,2.448,670,1.292,673,1.175,679,1.232,695,1.356,722,1.939,756,1.356,762,1.002,765,1.714,795,1.292,805,1.356,820,1.427,821,1.933,859,4.632,919,2.611,959,1.356,1015,1.324,1016,1.175,1017,1.542,1118,2.79,1119,1.542,1120,1.542,1121,2.197,1122,1.542,1123,1.542,1124,1.391,1125,1.542,1126,1.292,1127,1.542,1128,1.356,1129,1.391,1130,1.542,1131,1.391,1132,1.542,1133,1.356,1134,1.542,1135,1.324,1136,1.542,1137,1.356,1138,1.542,1139,1.324,1140,2.197,1141,1.391,1142,1.391,1143,1.542,1144,2.144,1145,1.542,1146,1.356,1147,1.542,1148,1.356,1149,1.542,1150,1.356,1151,1.542,1152,1.356,1153,1.542,1154,1.542,1155,1.356,1156,1.542,1157,1.292,1158,1.542,1159,2.79,1160,1.542,1161,1.324,1162,1.356,1163,1.542,1164,1.356,1165,1.542,1166,1.391,1167,1.542,1168,1.232,1169,1.175,1170,1.542,1171,1.148,1172,1.542,1173,1.324,1174,1.542,1175,1.356,1176,1.542,1177,1.391,1178,1.542,1179,1.356,1180,1.542,1181,1.232,1182,1.542,1183,1.232,1184,2.197,1185,1.232,1186,1.542,1187,1.356,1188,1.542,1189,1.232,1190,1.542,1191,1.232,1192,1.324,1193,1.542,1194,1.356,1195,1.542,1196,1.542,1197,1.324,1198,1.542,1199,1.148,1200,1.542,1201,1.324,1202,1.502,1203,1.542,1390,3.53,1421,5.706,1422,5.706,1423,5.706,1424,5.706,1425,4.495,1426,4.495,1427,4.495,1442,4.177,1444,4.482,1445,5.941,1447,4.495,1449,4.495,1450,4.177,1456,2.884,1457,6.032,1459,4.482,1460,5.706,1703,2.605,1758,2.932,1865,3.454,2642,7.541,2643,3.454,2644,3.908,2645,3.908,2646,3.908,2647,3.908,2648,3.908,2649,3.908,2650,3.908,2651,3.908,2652,3.908,2653,3.908,2654,3.908,2655,3.908,2656,3.454,2657,3.908,2658,3.908,2659,7.471,2660,3.908,2661,5.567,2662,3.908,2663,3.908,2664,3.908]],["title/pipes/TsRoundNumberPipe.html",[70,1.753,2528,3.13]],["body/pipes/TsRoundNumberPipe.html",[2,0.122,4,0.095,5,0.044,6,0.052,11,0.782,23,1.319,31,0.007,41,1.326,58,1.356,60,0.009,63,0.741,70,3.308,80,1.336,95,0.007,137,0.177,149,0.19,164,1.621,169,2.134,173,0.109,176,0.063,216,1.516,239,2.327,245,2.362,270,1.128,396,2.06,430,1.855,541,2.185,602,1.988,722,1.814,762,1.695,765,2.035,773,3.549,1668,4.658,1669,5.535,1673,5.535,1688,4.658,1689,4.407,1690,4.004,2528,5.535,2535,6.342,2665,6.943,2666,5.843,2667,6.943,2668,7.664,2669,6.61,2670,6.61,2671,6.61]],["title/components/TsRowComponent.html",[48,0.433,1161,1.505]],["body/components/TsRowComponent.html",[2,0.084,4,0.066,5,0.041,6,0.03,28,2.381,31,0.006,32,0.834,48,0.793,60,0.009,62,1.506,63,0.511,67,1.506,85,1.319,95,0.006,96,1.109,100,1.415,117,1.779,131,1.142,137,0.139,139,1.222,143,1.329,148,1.044,149,0.131,173,0.124,176,0.083,178,2.072,182,1.748,183,1.299,203,1.474,204,1.646,209,1.289,210,1.888,211,1.888,212,1.614,213,1.614,214,1.578,228,0.779,236,1.145,270,0.947,285,1.402,339,1.805,354,0.598,355,2.999,356,1.394,360,1.738,412,2.582,413,1.543,465,1.402,541,2.327,617,0.797,624,1.436,670,1.506,673,1.37,679,1.436,695,1.581,723,3.912,756,1.581,762,1.168,795,1.506,805,1.581,814,4.313,815,3.063,820,2.205,821,2.15,838,3.301,959,1.581,1015,1.543,1016,2.551,1017,1.798,1096,3.201,1118,2.981,1119,1.798,1120,1.798,1121,2.445,1122,1.798,1123,1.798,1124,1.621,1125,1.798,1126,1.506,1127,1.798,1128,1.581,1129,1.621,1130,1.798,1131,1.621,1132,1.798,1133,1.581,1134,1.798,1135,1.543,1136,1.798,1137,1.581,1138,1.798,1139,2.098,1140,2.445,1141,1.621,1142,1.621,1143,1.798,1144,1.506,1145,1.798,1146,1.581,1147,1.798,1148,1.581,1149,1.798,1150,1.581,1151,1.798,1152,1.581,1153,1.798,1154,1.798,1155,1.581,1156,1.798,1157,1.506,1158,1.798,1159,1.798,1160,1.798,1161,2.558,1162,1.581,1163,1.798,1164,1.581,1165,1.798,1166,1.621,1167,1.798,1168,1.436,1169,1.37,1170,1.798,1171,2.068,1172,1.798,1173,1.543,1174,1.798,1175,1.581,1176,1.798,1177,1.621,1178,1.798,1179,1.581,1180,1.798,1181,1.436,1182,1.798,1183,1.436,1184,2.445,1185,1.436,1186,1.798,1187,1.581,1188,1.798,1189,1.436,1190,1.798,1191,1.436,1192,2.384,1193,1.798,1194,1.581,1195,1.798,1196,1.798,1197,2.384,1198,1.798,1199,1.338,1200,1.798,1201,1.543,1202,1.751,1203,1.798,1236,3.454,1245,2.206,1247,4.585,1254,3.326,1266,3.1,1268,3.1,1607,3.1,1995,3.209,1996,5.281,1997,4.647,1998,3.417,1999,4.692,2000,5.927,2001,5.281,2002,5.281,2003,5.281,2004,4.364,2005,4.129,2006,4.647,2007,4.364,2008,4.647,2009,3.417,2010,3.209,2011,3.209,2012,3.417,2013,3.417,2014,4.647]],["title/directives/TsRowDefDirective.html",[236,0.644,1197,1.505]],["body/directives/TsRowDefDirective.html",[2,0.102,4,0.08,5,0.036,6,0.036,28,2.971,31,0.007,48,0.753,60,0.009,63,0.618,85,1.316,95,0.007,96,1.258,100,1.539,117,2.017,137,0.158,139,1.478,143,1.393,148,1.264,149,0.159,173,0.134,176,0.085,178,2.134,182,1.746,203,1.309,204,1.425,209,1.287,210,1.884,211,1.884,212,1.61,213,1.61,214,1.575,228,0.867,236,1.179,339,1.801,354,0.723,355,3.743,356,1.494,360,1.971,412,2.928,541,2.556,723,4.216,762,1.413,814,4.446,815,3.409,820,2.267,838,3.295,1016,2.627,1096,3.195,1139,1.867,1161,1.867,1171,2.271,1192,2.379,1197,2.618,1236,4.31,1245,2.669,1247,4.724,1254,3.771,1266,3.515,1268,3.515,1607,3.515,1995,3.884,1996,5.27,1997,5.27,1998,4.136,1999,4.682,2000,5.8,2001,5.8,2002,5.27,2003,5.8,2004,5.447,2005,5.153,2006,5.27,2007,4.949,2008,5.27,2009,5.27,2010,4.949,2011,4.949,2012,4.136,2013,4.136,2014,4.136]],["title/classes/TsScrollbarPosition.html",[176,0.043,2672,3.333]],["body/classes/TsScrollbarPosition.html",[2,0.069,3,1.184,4,0.054,5,0.025,6,0.025,10,1.146,11,0.87,14,0.942,15,1.702,16,1.975,17,1.926,23,0.571,29,1.664,31,0.005,40,1.272,41,0.753,48,0.716,51,1.88,58,0.77,60,0.009,61,2.904,63,0.421,65,1.348,80,1.376,85,0.704,91,1.136,95,0.005,96,0.969,101,1.272,112,1.079,117,1.554,137,0.143,139,1.007,142,2.645,143,1.011,146,2.487,147,1.566,148,0.861,149,0.108,164,0.921,165,1.371,173,0.114,176,0.079,178,1.663,179,1.451,180,0.963,181,1.242,182,1.36,183,0.788,188,0.788,202,1.03,203,0.585,204,1.11,205,0.985,207,0.942,209,0.688,210,1.007,211,1.007,212,0.861,213,0.861,214,0.842,219,1.714,224,1.392,226,0.736,229,1.272,235,1.242,236,1.11,239,2.213,247,1.833,251,2.375,252,2.375,256,2.275,293,2.305,294,0.753,295,1.762,308,1.656,323,3.141,328,2.572,329,2.62,344,3.19,354,0.493,360,1.948,385,1.945,396,0.985,416,1.658,430,2.151,432,2.975,467,1.566,498,1.337,502,3.286,503,1.03,513,1.566,583,3.95,602,1.129,779,1.482,782,2.18,851,1.708,852,2.905,859,3.286,860,2.18,884,2.18,885,3.141,886,3.141,887,2.18,917,2.094,918,2.017,919,1.762,920,1.819,921,2.18,922,2.905,959,1.304,967,6.081,1065,2.18,1080,2.646,1095,2.646,1096,1.708,1100,2.382,1101,2.646,1102,3.277,1104,2.646,1106,4.47,1117,1.443,1162,1.878,1308,2.382,1397,1.945,1549,3.032,1690,2.275,1769,2.504,1842,2.818,1928,2.382,1989,2.646,2165,4.34,2334,3.032,2672,5.208,2673,2.646,2674,6.362,2675,2.646,2676,3.32,2677,3.32,2678,3.32,2679,3.32,2680,4.783,2681,4.783,2682,4.783,2683,4.783,2684,4.783,2685,4.783,2686,4.783,2687,4.783,2688,4.783,2689,4.783,2690,6.503,2691,5.607,2692,2.818,2693,2.818,2694,5.604,2695,3.32,2696,4.759,2697,3.32,2698,3.32,2699,3.32,2700,3.32,2701,3.32,2702,3.32,2703,7.74,2704,3.32,2705,3.32,2706,3.32,2707,3.32,2708,3.32,2709,4.06,2710,2.818,2711,3.32,2712,2.818,2713,7.388,2714,3.32,2715,3.32,2716,4.783,2717,2.094,2718,3.32,2719,3.32,2720,3.32,2721,3.32,2722,3.32,2723,7.74,2724,3.032,2725,3.32,2726,3.32,2727,6.503,2728,3.32,2729,5.604,2730,3.32,2731,3.32,2732,3.32,2733,3.32,2734,3.32,2735,3.32,2736,3.32,2737,3.32,2738,3.32]],["title/classes/TsScrollbarsGeometry.html",[176,0.043,2696,3.333]],["body/classes/TsScrollbarsGeometry.html",[2,0.069,3,1.183,4,0.054,5,0.025,6,0.025,10,1.145,11,0.87,14,0.941,15,1.701,16,1.974,17,1.925,23,0.571,29,1.664,31,0.005,40,1.271,41,0.753,48,0.716,51,1.878,58,0.77,60,0.009,61,2.903,63,0.421,65,1.348,80,1.376,85,0.703,91,1.135,95,0.005,96,0.969,101,1.271,112,1.078,117,1.553,137,0.143,139,1.007,142,2.645,143,1.011,146,2.487,147,1.565,148,0.861,149,0.108,164,0.92,165,1.37,173,0.114,176,0.079,178,1.663,179,1.451,180,0.962,181,1.241,182,1.36,183,0.787,188,0.787,202,1.03,203,0.585,204,1.11,205,0.984,207,0.941,209,0.688,210,1.007,211,1.007,212,0.861,213,0.861,214,0.842,219,1.714,224,1.391,226,0.736,229,1.271,235,1.241,236,1.11,239,2.212,247,1.832,251,2.375,252,2.375,256,2.273,293,2.304,294,0.753,295,1.761,308,1.656,323,3.139,328,2.572,329,2.619,344,3.19,354,0.493,360,1.947,385,1.944,396,0.984,416,1.657,430,2.15,432,2.974,467,1.565,498,1.336,502,3.284,503,1.03,513,1.565,583,3.949,602,1.129,779,1.481,782,2.178,851,1.707,852,2.904,859,3.284,860,2.178,884,2.178,885,3.139,886,3.139,887,2.178,917,2.093,918,2.015,919,1.761,920,1.817,921,2.178,922,2.904,959,1.303,967,6.128,1065,2.178,1080,2.645,1095,2.645,1096,1.707,1100,2.38,1101,2.645,1102,3.276,1104,2.645,1106,4.468,1117,1.443,1162,1.878,1308,2.38,1397,2.802,1549,3.03,1690,2.273,1769,2.502,1842,2.816,1928,2.38,1989,2.645,2165,4.114,2334,3.03,2672,4.757,2673,2.645,2674,6.342,2675,2.645,2676,3.317,2677,3.317,2678,3.317,2679,3.317,2680,4.781,2681,4.781,2682,4.781,2683,4.781,2684,4.781,2685,4.781,2686,4.781,2687,4.781,2688,4.781,2689,4.781,2690,6.772,2691,5.605,2692,2.816,2693,2.816,2694,5.602,2695,4.781,2696,5.206,2697,3.317,2698,3.317,2699,3.317,2700,3.317,2701,3.317,2702,3.317,2703,7.739,2704,3.317,2705,3.317,2706,3.317,2707,3.317,2708,3.317,2709,4.058,2710,2.816,2711,3.317,2712,2.816,2713,7.387,2714,3.317,2715,3.317,2716,4.781,2717,2.093,2718,3.317,2719,3.317,2720,3.317,2721,3.317,2722,3.317,2723,7.739,2724,3.03,2725,3.317,2726,3.317,2727,6.501,2728,3.317,2729,5.602,2730,3.317,2731,3.317,2732,3.317,2733,3.317,2734,3.317,2735,3.317,2736,3.317,2737,3.317,2738,3.317]],["title/modules/TsScrollbarsModule.html",[614,0.54,648,3.13]],["body/modules/TsScrollbarsModule.html",[2,0.123,4,0.096,5,0.044,6,0.044,31,0.007,60,0.009,87,1.493,95,0.007,137,0.2,149,0.192,173,0.146,176,0.064,228,0.687,299,1.192,410,1.843,614,0.958,616,1.707,617,1.165,618,1.826,648,6.404,658,2.214,661,2.214,744,2.318,745,1.912,1162,3.237,2674,4.691,2692,4.995,2693,4.995,2739,5.884,2740,5.884,2741,5.884,2742,6.658,2743,7.888,2744,7.888]],["title/components/TsSearchComponent.html",[48,0.433,1164,1.542]],["body/components/TsSearchComponent.html",[0,0.734,2,0.051,4,0.04,5,0.028,6,0.059,8,0.44,10,1.339,11,1.1,22,2.305,23,1.354,29,2.022,31,0.004,32,1.417,34,1.841,38,1.053,41,0.553,42,2.237,48,0.737,51,4.347,54,2.6,55,3.714,58,1.729,60,0.009,62,0.912,63,0.986,65,1.357,66,2.722,67,0.912,79,1.126,80,1.175,84,2.6,85,1.381,88,4.839,89,1.616,95,0.004,96,0.769,100,1.154,106,2.216,117,2.046,131,0.692,133,2.224,134,1.454,135,2.382,137,0.145,139,0.74,142,2.273,143,1.431,146,2.005,148,0.632,149,0.079,151,0.757,164,0.676,169,0.89,170,2.137,171,1.183,172,1.183,173,0.07,176,0.057,179,1.976,180,1.101,181,1.966,182,0.921,183,1.247,187,2.862,188,1.105,202,1.178,203,1.432,204,1.586,205,1.126,207,1.076,209,0.787,210,1.151,211,1.151,212,0.984,213,0.984,216,0.984,219,1.081,220,1.567,224,1.551,226,1.397,236,0.622,239,1.75,243,3.025,244,1.92,245,1.291,247,0.934,251,0.83,252,0.83,260,2.551,265,2.149,270,0.918,274,2.557,284,2.413,285,0.849,293,1.789,294,0.861,295,2.014,296,1.785,308,1.431,341,0.849,354,0.362,356,0.734,360,1.205,396,1.126,408,0.934,413,0.934,430,1.205,457,2.394,465,0.849,467,2.197,473,2.137,485,1.841,492,2.394,498,2.429,501,2.436,553,1.291,554,1.694,556,2.412,602,0.83,617,0.483,624,0.869,664,1.481,670,0.912,673,0.83,679,2.245,695,0.958,722,0.757,756,0.958,759,3.221,762,0.707,765,1.831,776,1.255,795,1.742,805,0.958,820,1.101,821,1.49,822,2.079,831,2.6,844,4.327,845,3.452,877,2.394,959,0.958,1001,3.45,1015,0.934,1016,0.83,1017,1.089,1019,3.025,1020,2.224,1023,1.294,1117,1.06,1118,2.347,1119,1.089,1120,1.089,1121,1.694,1122,1.089,1123,1.089,1124,0.982,1125,1.089,1126,0.912,1127,1.089,1128,0.958,1129,0.982,1130,1.089,1131,0.982,1132,1.089,1133,0.958,1134,1.089,1135,0.934,1136,1.089,1137,0.958,1138,1.089,1139,0.934,1140,1.694,1141,0.982,1142,0.982,1143,1.089,1144,1.742,1145,1.089,1146,0.958,1147,1.089,1148,0.958,1149,1.089,1150,0.958,1151,1.089,1152,0.958,1153,1.089,1154,1.089,1155,0.958,1156,1.089,1157,0.912,1158,1.089,1159,1.089,1160,1.089,1161,0.934,1162,0.958,1163,1.089,1164,2.065,1165,1.089,1166,0.982,1167,1.089,1168,0.869,1169,0.83,1170,1.089,1171,0.811,1172,1.089,1173,0.934,1174,1.089,1175,0.958,1176,1.089,1177,0.982,1178,1.089,1179,0.958,1180,1.089,1181,0.869,1182,1.089,1183,0.869,1184,1.694,1185,0.869,1186,1.089,1187,0.958,1188,1.089,1189,0.869,1190,1.089,1191,0.869,1192,0.934,1193,1.089,1194,0.958,1195,1.089,1196,1.089,1197,0.934,1198,1.089,1199,0.811,1200,1.089,1201,0.934,1202,1.06,1203,1.089,1456,3.081,1592,3.025,1598,2.862,1727,4.702,2022,4.802,2026,4.462,2028,4.462,2218,2.438,2230,3.025,2247,4.191,2745,2.227,2746,3.795,2747,3.795,2748,5.257,2749,5.257,2750,5.257,2751,5.257,2752,5.257,2753,5.257,2754,5.257,2755,6.032,2756,4.659,2757,4.659,2758,4.659,2759,4.659,2760,4.659,2761,4.659,2762,4.659,2763,4.293,2764,2.722,2765,2.759,2766,2.759,2767,3.466,2768,2.759,2769,2.759,2770,2.759,2771,2.759,2772,2.759,2773,2.759,2774,2.759,2775,2.759,2776,2.759,2777,2.759,2778,2.759,2779,2.759,2780,2.759,2781,2.759,2782,3.795,2783,3.795,2784,2.759,2785,2.759,2786,2.759,2787,3.795,2788,3.795,2789,3.795,2790,3.795,2791,2.759,2792,3.795,2793,3.466,2794,2.759,2795,2.759,2796,3.795,2797,3.795,2798,2.759,2799,3.795,2800,2.759,2801,2.759,2802,2.07,2803,2.438,2804,2.438,2805,3.795,2806,2.438,2807,2.438,2808,2.07,2809,2.438,2810,3.466,2811,2.438,2812,2.438,2813,2.438,2814,2.438,2815,2.438,2816,2.438]],["title/modules/TsSearchModule.html",[614,0.54,649,3.13]],["body/modules/TsSearchModule.html",[2,0.118,4,0.092,5,0.042,6,0.042,31,0.007,60,0.009,87,1.437,95,0.007,137,0.206,149,0.184,151,1.758,173,0.144,176,0.062,228,0.661,299,1.147,410,1.813,548,2.528,614,0.936,616,1.643,617,1.121,618,1.758,627,4.619,639,5.401,649,6.516,658,2.164,661,2.164,664,3.44,683,4.806,744,2.265,745,1.84,747,5.139,808,4.474,809,3.44,1164,3.222,2817,5.663,2818,5.663,2819,6.407,2820,5.663,2821,6.407,2822,7.709]],["title/interfaces/TsSearchResponse.html",[0,0.76,2802,3.333]],["body/interfaces/TsSearchResponse.html",[0,1.252,2,0.078,4,0.061,5,0.028,6,0.028,8,0.674,10,1.349,11,1.072,22,2.27,23,1.211,29,1.959,31,0.005,32,1.497,34,1.813,38,1.037,42,2.541,48,0.713,51,4.482,54,2.561,55,4.147,60,0.009,63,0.759,65,1.36,66,2.681,79,1.109,80,1.079,84,2.561,85,1.372,88,4.849,89,1.475,95,0.005,96,1.054,100,1.212,106,2.201,117,2.102,133,2.19,134,1.432,135,2.369,137,0.173,139,1.134,142,2.401,143,1.45,146,2.151,148,0.97,149,0.122,151,1.16,164,1.037,169,1.365,170,2.387,171,1.813,172,1.813,173,0.097,176,0.065,179,1.963,180,1.084,181,1.946,182,0.907,183,0.887,187,2.819,188,0.887,202,1.16,203,0.659,204,1.03,205,1.109,207,1.06,209,0.775,210,1.134,211,1.134,212,0.97,213,0.97,216,0.97,219,1.388,220,1.543,224,1.543,226,1.327,239,1.509,243,2.98,244,1.9,245,1.272,247,1.993,251,1.272,252,1.272,260,2.524,265,2.116,270,0.569,274,2.541,284,2.204,293,1.77,294,0.848,295,1.983,296,1.993,308,1.42,354,0.555,356,1.007,360,1.187,396,1.543,430,1.187,457,2.358,467,1.763,473,2.387,485,1.813,492,2.358,498,2.409,501,2.42,553,1.272,554,1.669,556,1.715,602,1.272,664,2.27,679,1.855,759,3.172,765,1.302,795,1.398,822,2.048,831,2.561,844,4.293,845,3.416,877,2.358,1001,3.278,1019,2.98,1020,2.19,1023,1.983,1144,1.398,1164,1.468,1456,3.048,1592,2.98,1598,2.819,1727,4.647,2022,3.414,2026,4.415,2028,4.415,2230,2.98,2247,4.77,2745,3.414,2746,3.738,2747,3.738,2748,3.738,2749,3.738,2750,3.738,2751,3.738,2752,3.738,2753,3.738,2754,3.738,2755,5.202,2756,3.738,2757,3.738,2758,3.738,2759,3.738,2760,3.738,2761,3.738,2762,3.738,2764,2.681,2767,3.414,2782,3.738,2783,3.738,2787,3.738,2788,3.738,2789,3.738,2790,3.738,2792,3.738,2793,3.414,2796,3.738,2797,3.738,2799,3.738,2802,4.415,2803,3.738,2804,3.738,2805,5.202,2806,3.738,2807,3.738,2808,3.172,2809,3.738,2810,4.752,2811,3.738,2812,3.738,2813,3.738,2814,3.738,2815,3.738,2816,3.738]],["title/modules/TsSelectModule.html",[614,0.54,650,2.962]],["body/modules/TsSelectModule.html",[2,0.119,4,0.093,5,0.043,6,0.043,31,0.007,32,1.18,60,0.009,87,1.445,95,0.007,137,0.205,149,0.185,151,1.768,173,0.144,176,0.062,228,0.665,299,1.154,410,1.818,614,0.94,616,1.652,617,1.128,618,1.768,650,6.11,656,4.795,658,2.171,661,2.171,706,3.337,707,4.086,744,2.273,745,1.85,746,4.314,1166,3.325,2823,5.695,2824,5.695,2825,5.695,2826,6.443,2827,5.695,2828,6.22,2829,6.443,2830,7.736,2831,6.443,2832,7.736]],["title/classes/TsSelectedFile.html",[176,0.043,1959,3.333]],["body/classes/TsSelectedFile.html",[0,0.656,2,0.071,4,0.055,5,0.06,6,0.059,8,0.612,10,1.238,11,1.064,15,0.941,19,1.029,21,2.285,23,0.976,29,1.318,31,0.007,32,1.619,39,1.956,41,1.488,58,1.317,60,0.009,63,0.985,65,1.34,79,1.684,80,1.32,85,1.447,91,0.687,94,1.977,95,0.005,96,0.984,99,1.921,101,1.3,117,1.578,127,0.736,137,0.158,160,3.863,161,1.437,173,0.09,176,0.053,188,0.805,217,3.19,219,1.522,224,1.684,226,1.711,235,1.269,239,2.122,245,2.642,247,1.3,251,2.322,252,2.322,270,1.07,285,1.181,294,1.102,308,0.805,328,2.231,334,1.437,345,2.357,354,0.843,356,0.94,396,1.006,408,1.3,486,2.426,502,2.847,513,2.677,571,2.751,598,2.325,670,1.269,722,1.762,765,1.692,813,2.434,827,2.14,919,2.578,1274,4.123,1315,1.858,1365,3.099,1445,5.439,1456,1.988,1602,3.099,1656,3.873,1674,2.879,1903,5.2,1923,5.352,1926,4.48,1927,5.601,1928,4.071,1930,6.1,1940,6.15,1941,5.26,1942,6.722,1943,2.879,1944,5.184,1945,5.184,1946,5.184,1947,4.94,1948,5.791,1949,4.524,1950,3.099,1951,2.559,1952,4.437,1953,5.66,1954,4.123,1955,3.099,1956,6.196,1957,6.196,1958,6.196,1959,5.566,1960,6.196,1961,7.424,1962,4.858,1963,6.823,1964,6.196,1965,4.858,1966,3.392,1967,3.392,1968,4.858,1969,3.392,1970,3.392,1971,3.392,1972,3.392,1973,3.392,1974,3.392,1975,3.392,1976,4.858,1977,3.392,1978,3.392,1979,3.392,1980,3.392,1981,3.392,1982,3.392,1983,4.858,1984,3.392,1985,2.704,1986,3.392,1987,2.704,1988,3.392,1989,3.873,1990,4.858,1991,3.392,1992,3.392,1993,3.392,2833,5.496,2834,5.496,2835,3.838,2836,5.496,2837,3.838,2838,3.838,2839,3.838,2840,3.838,2841,3.838,2842,3.838,2843,3.838,2844,3.838,2845,3.838,2846,3.838,2847,3.392,2848,3.838,2849,3.838,2850,3.838,2851,3.838,2852,3.838,2853,3.838,2854,3.838,2855,3.838,2856,3.838,2857,3.838,2858,3.838,2859,3.838,2860,3.838,2861,3.838,2862,3.838,2863,3.838,2864,3.838,2865,3.392]],["title/pipes/TsSentenceCasePipe.html",[70,1.753,2529,3.13]],["body/pipes/TsSentenceCasePipe.html",[2,0.124,4,0.097,5,0.045,6,0.053,10,1.386,11,0.796,23,1.284,31,0.007,41,1.349,60,0.009,63,0.755,70,3.333,80,1.346,95,0.007,137,0.151,149,0.194,173,0.11,176,0.065,216,1.543,245,2.387,270,1.136,430,1.889,541,2.225,602,2.024,722,1.846,762,1.725,765,2.072,773,3.613,1668,4.742,1669,5.593,1673,5.593,1688,4.742,1689,4.486,1690,4.076,2529,5.593,2538,6.409,2866,7.016,2867,5.433,2868,7.016,2869,5.948,2870,6.729,2871,6.729]],["title/classes/TsSlideToggleChange.html",[176,0.043,2872,3.333]],["body/classes/TsSlideToggleChange.html",[2,0.098,4,0.077,5,0.035,6,0.035,10,1.071,11,1.008,19,1.845,23,1.046,27,2.22,29,1.825,31,0.006,32,0.977,35,1.722,48,0.81,60,0.009,65,1.317,79,1.803,80,0.851,85,1.289,89,1.724,91,1.232,95,0.006,96,0.955,100,1.44,108,5.053,127,1.023,130,2.05,134,2.578,135,1.642,137,0.192,139,1.431,142,2.237,143,1.415,146,2.021,148,1.223,149,0.153,151,1.463,164,1.308,165,1.947,170,2.789,171,2.288,172,2.288,173,0.125,176,0.082,178,1.996,179,1.845,180,1.368,181,1.764,183,1.119,188,1.119,202,1.463,203,0.831,204,1.204,205,1.399,207,1.337,209,0.977,210,1.431,211,1.431,212,1.223,213,1.223,219,1.094,224,1.669,226,1.046,228,0.709,229,1.807,245,1.604,260,2.949,270,0.925,274,2.387,275,2.288,284,2.575,329,2.583,354,0.7,360,1.497,385,3.562,389,3.835,408,1.807,409,3.096,410,1.508,412,2.224,414,2.974,415,3.096,416,2.355,428,1.852,467,2.224,503,1.463,602,1.604,624,2.168,713,3.231,714,3.231,717,2.949,779,2.105,782,3.096,822,2.583,1173,2.723,1392,4.002,1397,2.763,1409,5.71,1411,3.383,1413,4.002,1416,3.556,2025,2.974,2165,2.864,2587,4.002,2872,6.032,2873,4.002,2874,7.355,2875,4.307,2876,4.585,2877,4.715,2878,4.715,2879,4.715,2880,4.715]],["title/classes/TsSortBase.html",[176,0.043,2881,2.962]],["body/classes/TsSortBase.html",[0,1.083,2,0.069,3,1.181,4,0.054,5,0.025,6,0.025,10,0.986,11,0.443,14,1.978,15,0.918,19,1.005,29,1.518,31,0.005,33,1.606,35,1.209,42,2.658,48,0.365,58,1.299,60,0.009,61,3.248,63,0.42,65,1.222,77,3.484,79,1.416,80,1.288,85,0.702,89,1.919,91,1.515,94,1.95,95,0.005,96,0.671,100,1.474,101,1.269,105,1.654,106,1.126,124,2.798,127,1.329,129,2.269,135,1.95,137,0.165,142,1.587,143,1.105,144,2.811,145,2.457,146,1.101,149,0.108,161,1.403,164,0.918,165,1.367,173,0.126,176,0.061,178,0.982,182,1.642,183,0.786,203,0.583,204,1.381,214,0.84,216,0.859,217,3.134,219,1.422,224,1.39,226,1.242,228,0.653,229,1.829,235,2.43,236,1.322,253,2.971,257,3.271,260,1.606,283,4.855,293,1.624,308,1.541,322,3.866,327,1.704,333,1.94,339,1.624,345,1.606,360,2.215,386,2.615,396,0.982,402,3.067,430,1.051,482,2.384,485,1.606,486,1.654,496,2.089,497,1.519,501,1.238,503,1.028,571,1.875,588,1.44,602,1.126,722,1.482,728,2.174,730,3.134,773,2.011,779,1.478,815,2.98,820,2.29,832,2.19,839,2.375,841,2.497,1001,3.559,1044,2.639,1052,1.44,1168,1.181,1169,2.821,1199,2.418,1210,2.011,1217,2.375,1222,2.011,1223,2.269,1296,2.174,1333,2.174,1334,4.269,1385,3.806,1397,3.966,1410,2.174,1444,3.425,1495,2.089,1536,2.174,1559,3.425,1700,2.639,1834,3.012,1838,3.425,1852,2.174,2025,2.089,2062,2.639,2403,4.463,2717,3.012,2881,3.6,2882,2.375,2883,2.269,2884,2.639,2885,4.688,2886,4.463,2887,2.81,2888,4.776,2889,5.123,2890,4.052,2891,2.81,2892,2.81,2893,5.261,2894,4.052,2895,2.089,2896,3.6,2897,2.497,2898,2.639,2899,2.639,2900,3.806,2901,2.639,2902,4.451,2903,2.497,2904,2.497,2905,2.497,2906,3.6,2907,2.639,2908,5.569,2909,5.104,2910,2.81,2911,2.81,2912,2.81,2913,4.052,2914,2.81,2915,2.81,2916,2.81,2917,2.81,2918,4.052,2919,2.81,2920,2.81,2921,2.81,2922,2.497,2923,3.6,2924,2.497,2925,2.81,2926,2.81,2927,2.81,2928,2.81,2929,4.752,2930,2.81,2931,2.81,2932,2.81,2933,2.81,2934,2.81,2935,2.81,2936,2.81,2937,4.752,2938,4.752,2939,4.052,2940,4.052,2941,2.81,2942,2.81,2943,2.81,2944,4.052,2945,2.81,2946,2.81,2947,2.81,2948,4.752,2949,2.81,2950,2.81,2951,2.81,2952,2.639,2953,2.81,2954,4.052,2955,2.81,2956,2.81]],["title/directives/TsSortDirective.html",[236,0.644,1199,1.305]],["body/directives/TsSortDirective.html",[0,0.952,2,0.056,3,0.949,4,0.043,5,0.02,6,0.058,8,0.48,10,0.97,11,1.031,14,1.843,15,0.738,19,0.808,23,1.02,29,1.608,31,0.004,33,1.292,35,0.972,41,1.418,42,2.696,48,0.447,58,1.593,60,0.009,61,3.179,63,0.916,65,1.252,77,3.346,79,1.205,80,1.365,85,0.861,89,1.947,91,1.481,94,2.065,95,0.004,96,0.539,99,1.507,100,1.463,101,1.556,105,1.33,106,1.382,124,2.884,127,1.194,129,2.782,135,1.918,137,0.151,142,1.636,143,1.209,144,2.526,145,2.533,146,1.636,149,0.087,161,1.128,164,0.738,165,1.099,173,0.116,176,0.044,178,0.79,182,1.699,183,0.632,203,0.715,204,1.287,214,0.675,216,1.053,217,3.616,219,1.508,224,1.558,226,1.523,228,0.643,229,1.556,235,2.337,236,1.325,253,2.612,257,3.373,260,1.292,270,0.951,283,5.108,293,1.874,308,1.713,322,3.942,327,2.834,333,1.56,339,1.597,345,1.292,354,0.395,356,0.786,360,2.261,386,2.697,396,0.79,402,3.423,408,1.02,430,0.845,482,2.028,485,1.292,486,1.33,496,1.679,497,1.221,501,0.996,503,0.826,571,2.299,588,1.158,602,1.382,722,2.131,728,2.666,730,3.232,762,0.772,765,1.414,773,1.617,779,1.189,815,2.72,820,2.222,832,1.863,839,1.91,841,2.008,1001,3.761,1044,3.237,1052,1.158,1168,0.949,1169,2.818,1199,2.478,1210,1.617,1217,3.95,1222,1.617,1223,1.824,1296,2.666,1333,1.748,1334,3.942,1385,4.726,1397,3.926,1410,1.748,1444,4.483,1495,2.562,1536,2.666,1559,3.531,1700,2.122,1834,2.562,1838,2.913,1852,1.748,2025,1.679,2062,2.122,2403,4.726,2717,3.474,2881,2.008,2882,1.91,2883,1.824,2884,2.122,2885,4.508,2886,3.924,2887,2.26,2888,4.675,2889,4.948,2890,3.446,2891,4.178,2892,4.178,2893,5.053,2894,3.446,2895,1.679,2896,3.712,2897,2.008,2898,2.122,2899,2.122,2900,3.237,2901,2.122,2902,5.008,2903,2.008,2904,2.008,2905,2.008,2906,3.062,2907,2.122,2908,5.836,2909,5.622,2910,4.674,2911,3.446,2912,2.26,2913,5.033,2914,2.26,2915,2.26,2916,2.26,2917,2.26,2918,3.446,2919,4.674,2920,4.178,2921,2.26,2922,2.008,2923,3.062,2924,4.153,2925,2.26,2926,2.26,2927,2.26,2928,3.446,2929,4.178,2930,2.26,2931,2.26,2932,2.26,2933,3.446,2934,3.446,2935,2.26,2936,3.446,2937,4.178,2938,4.178,2939,3.446,2940,3.446,2941,2.26,2942,2.26,2943,3.446,2944,3.446,2945,2.26,2946,2.26,2947,2.26,2948,4.178,2949,2.26,2950,2.26,2951,2.26,2952,2.122,2953,2.26,2954,3.446,2955,2.26,2956,2.26,2957,3.709,2958,4.594,2959,4.594,2960,4.594,2961,3.012,2962,4.594,2963,4.594,2964,3.012,2965,3.012,2966,3.012,2967,3.012,2968,3.012,2969,3.012,2970,3.012,2971,3.012,2972,3.012,2973,3.012,2974,3.012,2975,3.012,2976,3.012,2977,3.012,2978,3.012,2979,3.012,2980,3.012,2981,2.662]],["title/classes/TsSortHeaderBase.html",[176,0.043,2982,3.333]],["body/classes/TsSortHeaderBase.html",[2,0.086,4,0.067,5,0.031,6,0.031,10,0.728,23,1.084,28,2.422,29,1.12,31,0.006,33,2.004,41,1.43,48,0.799,50,2.83,58,1.462,60,0.009,61,3.012,65,1.267,66,2.963,70,1.844,77,2.782,80,1.137,85,0.876,89,1.914,91,1.277,95,0.006,100,1.128,117,1.81,127,0.896,134,1.583,137,0.198,139,1.253,140,2.892,143,1.361,144,2.555,145,2.866,148,1.071,149,0.134,161,1.75,164,1.545,165,1.705,168,2.605,169,1.508,173,0.117,176,0.073,178,1.225,181,1.545,182,1.637,183,1.322,203,1.189,204,1.103,205,1.225,207,1.171,209,0.856,210,1.253,211,1.253,212,1.071,213,1.071,214,1.048,216,1.071,224,1.43,226,0.916,228,0.482,236,1.033,253,2.192,270,0.848,293,1.895,294,0.937,308,1.322,311,2.605,321,3.996,327,2.125,355,2.262,360,2.142,437,2.125,473,2.555,497,2.892,556,1.895,591,2.712,601,2.605,602,1.405,730,3.657,774,2.712,779,1.844,815,2.555,820,2.217,832,1.895,838,2.192,922,3.829,1001,2.262,1052,1.796,1168,1.473,1169,2.755,1199,2.095,1210,2.509,1222,3.384,1223,2.83,1237,2.83,1242,4.522,1245,2.262,1254,3.384,1265,4.138,1266,3.154,1268,3.154,1333,3.657,1334,2.605,1410,2.712,1420,3.115,1495,2.605,1514,2.963,1999,3.115,2093,5.088,2165,2.509,2318,3.292,2429,3.772,2709,3.505,2710,4.728,2717,3.514,2764,2.963,2883,2.83,2885,3.657,2888,3.657,2889,3.817,2893,3.115,2895,3.514,2896,4.201,2897,3.115,2902,3.817,2904,3.115,2905,3.115,2908,4.201,2909,3.115,2922,3.115,2923,4.201,2924,3.115,2957,3.772,2982,4.728,2983,3.292,2984,3.505,2985,4.728,2986,3.772,2987,5.088,2988,3.505,2989,4.44,2990,4.728,2991,3.772,2992,5.57,2993,3.772,2994,3.772,2995,6.303,2996,4.13,2997,4.13,2998,5.57,2999,5.57,3000,4.13,3001,4.13,3002,4.13,3003,4.13,3004,4.13,3005,4.13,3006,6.303,3007,4.13,3008,4.13,3009,4.13,3010,4.13,3011,4.13,3012,4.13,3013,4.13,3014,4.13,3015,4.13,3016,4.13,3017,4.13,3018,4.13,3019,4.13,3020,4.13,3021,3.772,3022,3.772,3023,4.13,3024,5.57,3025,4.13,3026,4.13]],["title/components/TsSortHeaderComponent.html",[48,0.433,1168,1.4]],["body/components/TsSortHeaderComponent.html",[2,0.059,4,0.046,5,0.032,6,0.057,8,0.512,10,0.751,11,1.009,23,1.102,28,2.474,29,1.156,31,0.005,32,0.588,33,1.377,41,1.507,48,0.77,50,1.945,58,1.541,60,0.009,61,2.966,62,1.062,63,0.903,65,1.325,66,3.058,67,1.062,70,1.268,77,3.046,80,1.261,85,0.904,89,1.817,91,1.235,95,0.005,99,1.607,100,1.153,117,1.385,127,0.616,131,0.805,134,1.634,137,0.184,139,0.861,140,3.048,143,1.284,144,1.956,145,2.634,148,0.736,149,0.092,161,1.203,164,1.182,165,1.172,168,1.791,169,1.037,173,0.095,176,0.056,178,1.265,181,1.062,182,1.658,183,1.447,203,1.45,204,1.61,205,1.265,207,1.209,209,0.884,210,1.293,211,1.293,212,1.106,213,1.106,214,1.081,216,1.106,224,1.586,226,1.135,228,0.498,236,1.05,253,1.507,270,1.064,285,0.989,293,1.936,294,0.967,308,1.52,311,1.791,321,3.672,327,2.928,354,0.421,355,2.335,356,0.825,360,2.034,408,1.088,413,1.088,437,2.194,465,0.989,473,2.348,497,2.798,556,2.61,591,1.864,601,1.791,602,1.45,617,0.562,624,1.012,670,1.062,673,0.966,679,1.012,695,1.115,722,1.323,723,2.498,730,3.736,756,1.115,762,0.823,765,1.485,774,2.799,779,1.268,795,1.062,805,1.115,815,2.61,820,2.218,821,1.674,832,1.302,838,2.262,922,3.109,959,1.115,1001,2.335,1015,1.088,1016,0.966,1017,1.268,1052,1.854,1118,2.541,1119,1.268,1120,1.268,1121,1.903,1122,1.268,1123,1.268,1124,1.143,1125,1.268,1126,1.062,1127,1.268,1128,1.115,1129,1.143,1130,1.268,1131,1.143,1132,1.268,1133,1.115,1134,1.268,1135,1.088,1136,1.268,1137,1.115,1138,1.268,1139,1.088,1140,1.903,1141,1.143,1142,1.143,1143,1.268,1144,1.062,1145,1.268,1146,1.115,1147,1.268,1148,1.115,1149,1.268,1150,1.115,1151,1.268,1152,1.115,1153,1.268,1154,1.268,1155,1.115,1156,1.268,1157,1.062,1158,1.268,1159,1.268,1160,1.268,1161,1.088,1162,1.115,1163,1.268,1164,1.115,1165,1.268,1166,1.143,1167,1.268,1168,2.029,1169,2.743,1170,1.268,1171,0.944,1172,1.268,1173,1.088,1174,1.268,1175,1.115,1176,1.268,1177,1.143,1178,1.268,1179,1.115,1180,1.268,1181,1.012,1182,1.268,1183,1.012,1184,1.903,1185,1.012,1186,1.268,1187,1.115,1188,1.268,1189,1.012,1190,1.268,1191,1.012,1192,1.088,1193,1.268,1194,1.115,1195,1.268,1196,1.268,1197,1.088,1198,1.268,1199,2.324,1200,1.268,1201,1.088,1202,1.234,1203,1.268,1210,1.724,1222,3.456,1223,2.921,1237,2.921,1242,4.903,1245,1.555,1254,2.59,1265,3.361,1266,2.414,1268,2.414,1333,3.361,1334,2.689,1410,1.864,1420,2.141,1495,2.689,1514,2.037,1999,3.215,2093,3.894,2165,2.59,2318,3.398,2429,3.894,2709,2.41,2710,5.176,2717,3.59,2764,3.058,2883,2.921,2885,3.736,2888,3.361,2889,3.507,2893,4.291,2895,4.04,2896,3.861,2897,2.141,2902,3.507,2904,2.141,2905,2.141,2908,4.291,2909,2.141,2922,2.141,2923,3.215,2924,4.291,2957,3.894,2981,2.839,2982,2.41,2983,6.056,2984,2.41,2985,3.618,2986,2.593,2987,3.894,2988,2.41,2989,3.398,2990,4.345,2991,2.593,2992,5.69,2993,3.894,2994,2.593,2995,6.404,2996,4.263,2997,4.263,2998,6.098,2999,6.098,3000,2.839,3001,2.839,3002,2.839,3003,2.839,3004,2.839,3005,5.119,3006,6.99,3007,6.098,3008,6.404,3009,2.839,3010,2.839,3011,2.839,3012,2.839,3013,2.839,3014,4.263,3015,2.839,3016,2.839,3017,2.839,3018,4.263,3019,2.839,3020,2.839,3021,3.894,3022,3.894,3023,2.839,3024,4.263,3025,2.839,3026,2.839,3027,3.212,3028,4.823,3029,3.212,3030,3.212,3031,3.212,3032,3.212,3033,3.212,3034,3.212,3035,3.212,3036,3.212,3037,3.212,3038,3.212,3039,3.212,3040,3.212,3041,3.212,3042,3.212,3043,4.823,3044,4.823]],["title/injectables/TsSortHeaderIntl.html",[553,1.336,2895,2.477]],["body/injectables/TsSortHeaderIntl.html",[2,0.101,4,0.079,5,0.036,6,0.054,8,0.873,10,1.264,11,0.912,23,1.172,27,2.257,28,2.688,31,0.007,40,1.854,41,1.402,45,2.204,48,0.681,53,4.662,58,1.58,60,0.009,61,3.485,63,0.614,80,1.368,89,2.253,94,1.685,95,0.007,100,1.38,106,2.103,127,1.05,129,4.235,135,2.153,137,0.173,149,0.157,161,2.05,173,0.127,176,0.053,219,1.811,228,0.865,236,1.176,244,2.257,260,3.854,293,2.103,333,2.836,354,0.718,356,1.196,410,1.201,432,3.614,501,2.312,504,4.235,553,2.317,774,4.059,820,2.082,1023,3.28,1169,2.655,1199,2.264,1229,5.646,1315,2.651,1318,4.839,1332,4.42,1559,5.44,2010,4.928,2025,3.899,2675,3.858,2888,4.059,2895,5.044,2983,5.721,2985,4.108,3021,5.646,3022,5.646,3045,4.42,3046,6.181,3047,8.119,3048,8.119,3049,5.475,3050,6.993,3051,5.475,3052,5.475,3053,6.993,3054,5.475,3055,5.475,3056,4.108,3057,4.839,3058,4.42]],["title/modules/TsSortModule.html",[614,0.54,651,2.962]],["body/modules/TsSortModule.html",[2,0.114,4,0.117,5,0.041,6,0.041,31,0.007,60,0.009,87,1.383,95,0.007,118,4.777,137,0.199,149,0.177,173,0.148,176,0.059,228,0.777,299,1.457,354,0.809,400,4.777,410,1.784,602,2.265,614,0.915,616,1.581,617,1.079,618,1.692,651,6.104,658,2.114,660,5.652,661,2.114,744,2.214,745,1.771,820,1.931,1168,2.912,1169,2.613,1199,2.715,1607,3.77,2985,5.652,2986,6.082,2989,4.345,3056,5.652,3059,5.451,3060,5.451,3061,5.451,3062,6.167,3063,6.658,3064,6.658,3065,6.658,3066,6.658,3067,7.533,3068,7.533]],["title/interfaces/TsSortState.html",[0,0.76,2903,2.962]],["body/interfaces/TsSortState.html",[0,1.176,2,0.068,3,1.16,4,0.053,5,0.024,6,0.024,8,0.587,10,1.136,11,0.435,14,1.968,15,0.902,19,0.987,29,1.503,31,0.005,33,1.578,35,1.188,42,2.642,48,0.358,58,1.286,60,0.009,61,3.284,63,0.703,65,1.216,77,3.465,79,1.398,80,1.282,85,0.69,89,1.908,91,1.509,94,1.93,95,0.005,96,0.659,100,1.467,101,1.246,105,1.624,106,1.107,124,2.762,127,1.318,129,2.228,135,1.93,137,0.164,142,1.567,143,1.096,144,2.788,145,2.425,146,1.081,149,0.106,161,1.378,164,0.902,165,1.343,173,0.125,176,0.051,178,0.965,182,1.632,183,0.772,203,0.573,204,1.374,214,0.825,216,0.844,217,3.094,219,1.41,224,1.379,226,1.229,228,0.647,229,1.806,235,2.413,236,1.33,253,2.941,257,3.229,260,1.578,283,5.195,293,1.886,308,1.53,322,3.834,327,1.674,333,1.906,339,1.608,345,1.578,354,0.483,356,0.912,360,2.203,386,2.582,396,0.965,402,3.036,430,1.033,482,2.354,485,1.578,486,1.624,496,2.052,497,1.492,501,1.216,503,1.009,571,1.841,588,1.414,602,1.107,722,1.463,728,2.135,730,3.094,773,1.976,779,1.452,815,3.086,820,2.285,832,2.162,839,2.333,841,2.453,1001,3.534,1044,2.593,1052,1.414,1168,1.16,1169,2.823,1199,2.476,1210,1.976,1217,2.333,1222,1.976,1223,2.228,1296,2.135,1333,2.135,1334,4.243,1385,3.757,1397,4.066,1410,2.135,1444,3.381,1495,2.052,1536,2.135,1559,3.381,1700,2.593,1834,3.496,1838,3.381,1852,2.135,2025,2.052,2062,2.593,2403,4.418,2717,2.973,2881,2.453,2882,2.333,2883,2.228,2884,2.593,2885,4.665,2886,4.418,2887,2.76,2888,4.755,2889,5.104,2890,4,2891,2.76,2892,2.76,2893,5.232,2894,4,2895,2.052,2896,3.554,2897,2.453,2898,2.593,2899,2.593,2900,3.757,2901,2.593,2902,4.42,2903,3.554,2904,2.453,2905,2.453,2906,3.554,2907,2.593,2908,5.547,2909,5.073,2910,2.76,2911,2.76,2912,2.76,2913,4,2914,2.76,2915,2.76,2916,2.76,2917,2.76,2918,4,2919,2.76,2920,2.76,2921,2.76,2922,2.453,2923,3.554,2924,2.453,2925,2.76,2926,2.76,2927,2.76,2928,2.76,2929,4.704,2930,2.76,2931,2.76,2932,2.76,2933,2.76,2934,2.76,2935,2.76,2936,2.76,2937,4.704,2938,4.704,2939,4,2940,4,2941,2.76,2942,2.76,2943,2.76,2944,4,2945,2.76,2946,2.76,2947,2.76,2948,4.704,2949,2.76,2950,2.76,2951,2.76,2952,2.593,2953,2.76,2954,4,2955,2.76,2956,2.76]],["title/interfaces/TsSortableItem.html",[0,0.76,2902,2.691]],["body/interfaces/TsSortableItem.html",[0,1.241,2,0.067,3,1.144,4,0.052,5,0.024,6,0.024,8,0.579,10,1.13,11,0.429,14,1.96,15,0.89,19,0.973,29,1.492,31,0.005,33,1.556,35,1.171,42,2.629,48,0.353,58,1.276,60,0.009,61,3.385,63,0.766,65,1.212,77,3.71,79,1.384,80,1.277,85,0.68,89,1.899,91,1.505,94,1.915,95,0.005,96,0.65,100,1.462,101,1.229,105,1.602,106,1.091,124,2.734,127,1.31,129,2.198,135,1.915,137,0.163,142,1.551,143,1.089,144,2.77,145,2.401,146,1.066,149,0.104,161,1.359,164,0.89,165,1.325,173,0.124,176,0.051,178,0.952,182,1.624,183,0.761,203,0.565,204,1.368,214,0.814,216,0.832,217,3.064,219,1.401,224,1.519,226,1.22,228,0.642,229,1.788,235,2.399,236,1.323,253,2.918,257,3.197,260,1.556,283,4.802,293,1.588,308,1.522,322,3.809,327,1.651,333,1.88,339,1.595,345,2.264,354,0.476,356,0.903,360,2.248,386,2.556,396,0.952,402,3.013,430,1.019,482,2.331,485,1.556,486,1.602,496,2.024,497,1.472,501,1.2,503,0.996,571,1.816,588,1.395,602,1.091,722,1.448,728,2.106,730,3.064,773,1.949,779,1.432,815,3.071,820,2.281,832,2.141,839,2.301,841,2.42,1001,3.667,1044,2.557,1052,1.395,1168,1.664,1169,2.823,1199,2.399,1210,1.949,1217,2.301,1222,1.949,1223,2.198,1296,2.106,1333,2.106,1334,4.223,1385,3.72,1397,4.148,1410,2.106,1444,3.347,1495,2.024,1536,2.106,1559,3.347,1700,2.557,1834,3.469,1838,3.347,1852,2.106,2025,2.024,2062,2.557,2403,4.384,2717,3.469,2881,2.42,2882,2.301,2883,2.198,2884,2.557,2885,4.648,2886,4.384,2887,2.723,2888,4.877,2889,5.195,2890,3.96,2891,2.723,2892,2.723,2893,5.53,2894,3.96,2895,2.024,2896,3.519,2897,2.42,2898,2.557,2899,2.557,2900,3.72,2901,3.72,2902,4.587,2903,2.42,2904,2.42,2905,2.42,2906,3.519,2907,2.557,2908,5.53,2909,5.049,2910,2.723,2911,2.723,2912,2.723,2913,3.96,2914,2.723,2915,2.723,2916,2.723,2917,2.723,2918,3.96,2919,2.723,2920,2.723,2921,2.723,2922,2.42,2923,3.519,2924,2.42,2925,2.723,2926,2.723,2927,2.723,2928,2.723,2929,4.668,2930,2.723,2931,2.723,2932,2.723,2933,2.723,2934,2.723,2935,2.723,2936,2.723,2937,4.668,2938,4.668,2939,3.96,2940,3.96,2941,2.723,2942,2.723,2943,2.723,2944,3.96,2945,2.723,2946,2.723,2947,2.723,2948,4.668,2949,2.723,2950,2.723,2951,2.723,2952,2.557,2953,2.723,2954,3.96,2955,2.723,2956,2.723]],["title/modules/TsSpacingModule.html",[614,0.54,652,2.962]],["body/modules/TsSpacingModule.html",[2,0.124,4,0.097,5,0.044,6,0.044,31,0.007,60,0.009,87,1.504,95,0.007,137,0.196,149,0.193,173,0.146,176,0.064,228,0.692,299,1.201,410,1.849,614,0.962,616,1.719,617,1.173,618,1.84,652,6.067,658,2.223,661,2.223,744,2.328,745,1.925,1201,3.161,3069,5.927,3070,5.927,3071,5.927,3072,6.705,3073,7.002,3074,7.922]],["title/components/TsTableComponent.html",[48,0.433,1171,1.305]],["body/components/TsTableComponent.html",[0,1.077,2,0.057,3,0.97,4,0.081,5,0.031,6,0.02,10,1.188,11,0.958,14,2.083,15,1.544,16,1.705,17,1.662,21,1.662,22,1.653,23,1.084,28,2.421,29,0.738,31,0.004,32,1.034,34,1.32,35,1.507,38,1.145,39,1.095,40,1.043,42,1.068,45,2.405,47,2.353,48,0.761,50,1.864,58,0.631,60,0.009,61,1.215,62,1.018,63,0.345,65,0.457,67,1.018,70,1.215,74,2.419,80,1.08,87,1.047,89,1.787,91,0.551,95,0.006,100,1.128,106,0.926,112,0.884,117,0.884,127,1.082,128,2.647,131,0.772,137,0.185,138,3.153,139,0.825,143,0.491,147,1.947,148,0.706,149,0.162,161,1.153,173,0.122,176,0.068,178,1.225,180,0.789,182,1.21,183,0.979,186,2.337,188,1.6,203,1.444,204,1.603,207,1.171,209,0.856,210,1.253,211,1.253,212,1.071,213,1.071,214,1.047,216,1.294,219,1.684,226,0.603,228,0.735,235,1.018,236,1.033,239,2.043,244,0.993,246,3.153,247,1.043,265,2.337,270,1.176,285,0.947,294,0.617,299,0.551,305,1.786,307,2.337,308,0.979,323,4.138,339,1.615,344,1.843,354,0.404,355,3.051,356,1.077,378,2.052,396,1.225,413,1.043,416,1.359,430,0.864,432,2.191,465,0.947,482,1.359,503,1.728,513,2.823,517,1.653,541,2.946,548,1.215,588,1.795,604,1.716,611,2.961,617,0.539,618,0.844,624,0.97,670,1.018,673,0.926,679,0.97,695,1.068,728,1.786,756,1.068,761,2.169,762,0.789,795,1.018,805,1.068,814,3.858,815,3.645,820,1.899,821,2.187,826,2.485,832,1.248,833,2.309,837,2.052,838,3.344,850,2.309,851,1.4,862,1.786,872,1.952,920,1.49,959,1.068,961,4.102,966,3.995,1015,1.043,1016,1.895,1017,1.215,1020,3.693,1052,1.795,1078,3.513,1094,1.786,1100,1.952,1102,1.864,1118,2.486,1119,1.215,1120,1.215,1121,1.843,1122,1.215,1123,1.215,1124,1.095,1125,1.215,1126,1.018,1127,1.215,1128,1.068,1129,1.095,1130,1.215,1131,1.095,1132,1.215,1133,1.068,1134,1.215,1135,1.043,1136,1.215,1137,1.068,1138,1.215,1139,1.043,1140,1.843,1141,1.095,1142,1.095,1143,1.215,1144,1.018,1145,1.215,1146,1.068,1147,1.215,1148,1.068,1149,1.215,1150,1.068,1151,1.215,1152,1.068,1153,1.215,1154,1.215,1155,1.959,1156,1.215,1157,1.018,1158,1.215,1159,1.215,1160,1.215,1161,1.043,1162,1.068,1163,1.215,1164,1.068,1165,1.215,1166,2.242,1167,1.215,1168,0.97,1169,2.566,1170,1.215,1171,1.851,1172,1.215,1173,1.043,1174,1.215,1175,1.068,1176,1.215,1177,1.095,1178,1.215,1179,1.068,1180,1.215,1181,0.97,1182,1.215,1183,0.97,1184,1.843,1185,0.97,1186,1.215,1187,1.068,1188,1.215,1189,0.97,1190,1.215,1191,0.97,1192,1.043,1193,1.215,1194,1.068,1195,1.215,1196,1.215,1197,1.043,1198,1.215,1199,2.242,1200,1.215,1201,1.043,1202,1.183,1203,1.215,1236,1.716,1237,2.829,1245,1.49,1260,3.275,1263,2.052,1293,3.771,1315,1.49,1319,3.113,1334,3.776,1391,2.485,1396,3.771,1397,3.508,1495,2.604,1514,1.952,1536,1.786,1598,3.113,1607,2.337,1620,2.72,1625,2.485,1654,2.72,1690,1.864,1725,3.291,1726,2.309,1769,2.052,1775,2.72,1852,1.786,1926,1.786,1951,2.052,2004,2.169,2011,2.169,2050,2.169,2082,2.485,2165,2.508,2300,2.72,2324,1.864,2388,2.309,2390,4.726,2507,2.72,2595,2.485,2729,3.771,2764,1.952,2808,2.309,2883,1.864,2885,1.786,2886,2.169,2952,3.291,2993,5.468,3075,2.72,3076,4.128,3077,4.67,3078,4.67,3079,5.986,3080,3.078,3081,6.301,3082,4.67,3083,2.72,3084,5.978,3085,6.773,3086,4.67,3087,3.078,3088,4.128,3089,3.078,3090,3.078,3091,3.078,3092,3.078,3093,5.644,3094,3.078,3095,3.078,3096,3.078,3097,3.078,3098,3.078,3099,3.078,3100,4.67,3101,4.67,3102,3.078,3103,3.078,3104,4.67,3105,4.67,3106,5.644,3107,4.67,3108,3.078,3109,3.078,3110,4.67,3111,3.078,3112,2.72,3113,3.078,3114,5.644,3115,5.644,3116,3.078,3117,2.72,3118,2.72,3119,3.078,3120,3.078,3121,5.644,3122,3.078,3123,4.67,3124,3.078,3125,3.078,3126,4.67,3127,3.078,3128,4.67,3129,3.078,3130,3.078,3131,3.078,3132,3.078,3133,6.3,3134,3.078,3135,3.078,3136,4.67,3137,3.078,3138,3.078,3139,3.078,3140,3.078,3141,4.67,3142,3.078,3143,3.078,3144,3.078,3145,3.078,3146,3.078,3147,3.078,3148,3.078,3149,3.078,3150,3.078,3151,3.078,3152,3.078,3153,3.078,3154,2.485,3155,4.67,3156,3.771,3157,3.078,3158,3.078,3159,3.078,3160,3.078,3161,4.67,3162,3.078,3163,3.078,3164,3.078,3165,3.078,3166,3.078,3167,3.078,3168,3.078,3169,3.078,3170,3.078,3171,3.078,3172,3.078,3173,3.078,3174,3.078]],["title/classes/TsTableDataSource.html",[176,0.043,3084,3.333]],["body/classes/TsTableDataSource.html",[2,0.081,4,0.119,5,0.029,6,0.058,8,0.702,10,0.942,11,1.022,14,2.141,21,2.153,23,0.669,31,0.006,39,2.87,41,1.213,42,2.1,50,3.664,53,4.963,58,0.903,60,0.009,63,0.875,80,1.286,89,2.235,91,1.575,94,1.863,95,0.007,96,1.333,100,1.547,135,2.292,137,0.136,158,4.505,160,4.037,161,1.648,173,0.072,176,0.058,188,1.269,216,1.387,219,1.601,226,1.581,228,0.713,235,2.461,247,2.049,270,0.814,293,1.82,294,0.883,308,1.561,336,4.539,341,1.863,344,2.939,354,0.578,356,1.035,408,1.491,428,2.71,437,2.752,502,3.857,503,1.66,531,2.93,541,3.123,616,1.551,722,1.66,765,1.863,774,3.511,814,3.905,872,3.837,919,3.492,966,2.791,1020,4.52,1098,4.885,1155,2.1,1169,2.426,1171,2.188,1199,1.778,1245,2.131,1296,3.511,1315,2.93,1334,3.374,1397,3.134,1655,4.885,1697,5.348,1852,3.511,2005,4.033,2390,6.051,2620,4.539,3079,6.581,3084,4.539,3088,6.111,3175,7.713,3176,3.89,3177,6.05,3178,7.446,3179,7.446,3180,7.446,3181,7.446,3182,7.446,3183,7.129,3184,7.446,3185,6.05,3186,8.262,3187,4.401,3188,8.416,3189,4.401,3190,4.401,3191,4.401,3192,4.401,3193,4.401,3194,6.05,3195,4.401,3196,6.05,3197,6.111,3198,4.401,3199,4.401,3200,6.05,3201,4.401,3202,4.401,3203,4.401,3204,4.401,3205,4.401,3206,4.401,3207,4.401,3208,6.05,3209,4.401,3210,4.401,3211,6.05,3212,4.401,3213,6.05,3214,4.401,3215,4.401,3216,4.401]],["title/modules/TsTableModule.html",[614,0.54,653,3.13]],["body/modules/TsTableModule.html",[2,0.092,4,0.113,5,0.033,6,0.033,14,1.252,31,0.006,60,0.009,87,1.12,95,0.006,118,4.177,137,0.199,149,0.144,173,0.144,176,0.048,228,0.515,299,1.32,354,0.655,400,4.177,410,1.616,541,1.651,602,1.981,614,0.8,616,1.28,617,0.874,618,1.37,646,5.579,651,5.579,653,6.654,658,1.849,660,4.942,661,1.849,692,4.413,701,5.822,744,1.935,745,1.434,814,3.189,838,3.09,1139,3.04,1161,3.04,1171,2.637,1181,2.858,1183,2.829,1185,2.858,1189,2.858,1191,2.829,1192,3.072,1197,3.072,1245,2.418,1607,3.296,3063,5.822,3064,5.822,3065,5.822,3066,5.822,3217,4.413,3218,4.413,3219,4.413,3220,4.993,3221,4.413,3222,4.993,3223,6.587,3224,6.587,3225,6.587]],["title/pipes/TsTimeAgoPipe.html",[70,1.753,2530,3.13]],["body/pipes/TsTimeAgoPipe.html",[2,0.113,4,0.088,5,0.04,6,0.05,10,1.442,11,0.723,23,1.341,31,0.007,32,1.484,41,1.225,60,0.009,63,0.685,70,3.196,80,1.291,95,0.007,127,1.435,137,0.169,144,3.284,149,0.176,173,0.1,176,0.059,216,1.4,219,1.536,245,2.252,247,2.068,253,3.512,270,1.09,313,5.618,430,2.102,441,3.544,541,2.019,602,2.252,673,2.763,722,1.675,762,1.566,765,1.88,773,3.279,1668,4.303,1669,5.276,1673,5.276,1674,4.581,1688,4.303,1689,4.071,1690,3.698,1691,5.398,1692,5.398,1723,4.93,1724,6.046,1888,4.93,1985,4.303,2530,5.276,2540,6.046,3226,6.618,3227,5.398,3228,6.618,3229,8.664,3230,6.107,3231,6.107,3232,6.107,3233,6.107,3234,6.107,3235,6.107,3236,6.107]],["title/pipes/TsTitleCasePipe.html",[70,1.753,2531,3.13]],["body/pipes/TsTitleCasePipe.html",[2,0.122,4,0.096,5,0.044,6,0.052,10,1.38,11,0.784,23,1.32,31,0.007,41,1.329,60,0.009,63,0.743,70,3.311,80,1.384,95,0.007,137,0.149,149,0.191,173,0.109,176,0.064,216,1.519,245,2.366,270,1.129,430,2.208,541,2.191,602,1.993,722,1.818,762,1.699,765,2.04,773,3.558,1011,5.35,1668,4.669,1669,5.542,1673,5.542,1688,4.669,1689,4.417,1690,4.013,2531,5.542,2542,6.351,2867,5.35,2869,5.857,3237,6.952,3238,6.952,3239,6.626,3240,6.626,3241,6.626,3242,6.626]],["title/components/TsToggleComponent.html",[48,0.433,1173,1.505]],["body/components/TsToggleComponent.html",[0,1.038,2,0.064,4,0.05,5,0.034,6,0.056,8,0.554,10,1.042,11,1.089,18,3.592,19,1.794,23,1.345,27,1.65,29,1.604,31,0.005,32,1.111,35,1.65,41,1.342,48,0.786,58,1.684,60,0.009,62,1.149,63,0.982,65,1.236,67,1.149,79,1.591,80,1.189,85,1.254,89,1.788,91,1.277,94,2.06,95,0.005,96,0.622,100,1.086,108,4.991,127,0.666,130,1.335,131,0.871,134,2.266,135,1.574,137,0.168,139,0.932,142,1.966,143,1.343,146,1.966,148,0.797,149,0.1,151,0.953,164,0.852,165,1.268,170,2.46,171,1.49,172,1.49,173,0.1,176,0.072,178,1.591,179,1.794,180,1.311,181,1.69,183,1.403,188,1.272,202,1.403,203,1.453,204,1.616,205,1.341,207,1.282,209,0.937,210,1.371,211,1.371,212,1.172,213,1.172,219,1.049,224,1.689,226,1.19,228,0.736,229,1.732,236,0.741,245,1.538,260,2.869,270,1.134,274,2.106,275,2.869,284,2.67,285,1.07,308,1.495,329,1.682,341,1.07,354,0.456,356,0.874,360,1.435,383,2.203,385,2.648,386,1.682,389,2.851,390,4.275,408,2.266,409,2.016,410,1.121,412,1.448,413,1.177,414,1.937,415,2.016,416,1.534,418,2.016,419,2.448,428,1.206,439,2.448,441,2.967,442,2.448,465,1.07,467,2.529,503,1.403,541,1.149,602,1.824,617,0.608,624,2.655,670,1.149,673,1.045,679,1.095,695,1.206,713,2.104,714,2.104,717,1.49,722,1.836,756,1.206,762,0.891,765,1.574,776,1.58,779,1.371,782,2.016,795,1.149,805,1.206,820,1.311,821,1.775,822,2.476,859,4.363,959,1.206,1015,1.177,1016,1.045,1017,1.371,1117,1.335,1118,2.641,1119,1.371,1120,1.371,1121,2.018,1122,1.371,1123,1.371,1124,1.236,1125,1.371,1126,1.149,1127,1.371,1128,1.206,1129,1.236,1130,1.371,1131,1.236,1132,1.371,1133,1.206,1134,1.371,1135,1.177,1136,1.371,1137,1.206,1138,1.371,1139,1.177,1140,2.018,1141,1.236,1142,1.236,1143,1.371,1144,1.149,1145,1.371,1146,1.206,1147,1.371,1148,1.206,1149,1.371,1150,1.206,1151,1.371,1152,1.206,1153,1.371,1154,1.371,1155,1.206,1156,1.371,1157,1.149,1158,1.371,1159,1.371,1160,1.371,1161,1.177,1162,1.206,1163,1.371,1164,1.206,1165,1.371,1166,1.236,1167,1.371,1168,1.095,1169,1.045,1170,1.371,1171,1.021,1172,1.371,1173,2.526,1174,1.371,1175,1.206,1176,1.371,1177,1.236,1178,1.371,1179,1.206,1180,1.371,1181,1.095,1182,1.371,1183,1.095,1184,2.018,1185,1.095,1186,1.371,1187,1.206,1188,1.371,1189,1.095,1190,1.371,1191,1.095,1192,1.177,1193,1.371,1194,1.206,1195,1.371,1196,1.371,1197,1.177,1198,1.371,1199,1.021,1200,1.371,1201,1.177,1202,1.335,1203,1.371,1392,5.02,1397,3.142,1409,4.551,1411,2.203,1413,5.02,1416,4.044,1421,4.898,1422,4.898,1423,4.898,1424,4.898,1425,4.128,1426,4.128,1427,4.128,1438,6.993,1439,3.071,1441,3.071,1442,2.607,1443,3.071,1444,3.242,1445,4.714,1446,3.071,1447,2.805,1448,3.071,1449,2.805,1450,2.607,1455,3.071,1456,1.8,1457,4.128,1458,3.071,1459,3.242,1460,4.128,1461,3.071,1463,3.071,2025,2.851,2165,2.745,2587,4.551,2872,3.836,2873,2.607,2874,5.362,2875,2.805,2876,4.044,2877,4.519,2878,4.519,2879,3.071,2880,5.362,3243,3.474,3244,5.113,3245,3.474,3246,3.474,3247,3.474,3248,3.474,3249,3.474,3250,3.474,3251,3.474,3252,3.474,3253,3.474]],["title/modules/TsToggleModule.html",[614,0.54,654,3.13]],["body/modules/TsToggleModule.html",[2,0.121,4,0.095,5,0.043,6,0.043,31,0.007,60,0.009,87,1.472,95,0.007,108,3.66,137,0.202,149,0.189,151,1.801,173,0.145,176,0.063,228,0.677,299,1.175,410,1.832,614,0.95,616,1.683,617,1.149,618,1.801,654,6.386,658,2.195,661,2.195,744,2.298,745,1.885,746,4.362,1173,3.17,2875,5.3,2876,5.57,3254,5.802,3255,5.802,3256,5.802,3257,5.802,3258,6.564,3259,7.822,3260,7.822]],["title/components/TsTooltipComponent.html",[48,0.433,1175,1.542]],["body/components/TsTooltipComponent.html",[2,0.087,4,0.068,5,0.042,6,0.051,8,0.754,10,1.118,11,1.037,15,1.558,23,1.091,28,2.443,31,0.006,32,0.867,48,0.844,58,1.303,60,0.009,62,1.564,63,0.86,65,1.065,67,1.564,85,1.191,95,0.006,96,0.847,100,1.138,112,1.825,131,1.186,134,1.603,137,0.107,139,1.269,143,1.314,148,1.085,149,0.136,173,0.104,176,0.074,179,2.058,180,1.629,183,1.609,188,1.505,202,1.744,203,1.475,204,1.647,205,1.667,207,1.593,209,1.164,210,1.705,211,1.705,212,1.457,213,1.457,224,1.274,236,0.921,244,2.051,270,0.966,285,1.457,341,1.457,354,0.621,413,1.603,465,1.457,498,2.262,531,2.291,617,0.828,624,1.491,670,1.564,673,1.423,679,1.491,695,1.642,709,2.746,756,1.642,762,1.213,776,2.152,795,1.564,805,1.642,820,1.629,821,2.206,831,4.346,872,4.03,959,1.642,1015,1.603,1016,1.423,1017,1.867,1096,2.152,1100,3,1117,1.818,1118,3.028,1119,1.867,1120,1.867,1121,2.508,1122,1.867,1123,1.867,1124,1.684,1125,1.867,1126,1.564,1127,1.867,1128,1.642,1129,1.684,1130,1.867,1131,1.684,1132,1.867,1133,1.642,1134,1.867,1135,1.603,1136,1.867,1137,1.642,1138,1.867,1139,1.603,1140,2.508,1141,1.684,1142,1.684,1143,1.867,1144,1.564,1145,1.867,1146,1.642,1147,1.867,1148,1.642,1149,1.867,1150,1.642,1151,1.867,1152,1.642,1153,1.867,1154,1.867,1155,1.642,1156,1.867,1157,1.564,1158,1.867,1159,1.867,1160,1.867,1161,1.603,1162,1.642,1163,1.867,1164,1.642,1165,1.867,1166,1.684,1167,1.867,1168,1.491,1169,1.423,1170,1.867,1171,1.39,1172,1.867,1173,1.603,1174,1.867,1175,2.778,1176,1.867,1177,1.684,1178,1.867,1179,1.642,1180,1.867,1181,1.491,1182,1.867,1183,1.491,1184,2.508,1185,1.491,1186,1.867,1187,1.642,1188,1.867,1189,1.491,1190,1.867,1191,1.491,1192,1.603,1193,1.867,1194,1.642,1195,1.867,1196,1.867,1197,1.603,1198,1.867,1199,1.39,1200,1.867,1201,1.603,1202,1.818,1203,1.867,1222,3.412,2165,3.853,2436,7.231,2717,3.544,3261,3.82,3262,5.617,3263,6.355,3264,6.355,3265,7.177,3266,7.177,3267,7.177,3268,6.355,3269,6.355,3270,4.732,3271,6.343,3272,4.732,3273,4.732]],["title/modules/TsTooltipModule.html",[614,0.54,655,2.578]],["body/modules/TsTooltipModule.html",[2,0.123,4,0.096,5,0.044,6,0.044,31,0.007,60,0.009,87,1.496,95,0.007,137,0.2,149,0.192,173,0.146,176,0.064,228,0.688,299,1.195,410,1.845,614,0.96,616,1.711,617,1.168,618,1.831,655,5.277,658,2.217,661,2.217,744,2.321,745,1.916,1175,3.238,3274,5.898,3275,5.898,3276,5.898,3277,6.673,3278,7.899,3279,6.673,3280,7.899]],["title/interfaces/TsUser.html",[0,0.76,477,2.691]],["body/interfaces/TsUser.html",[0,1.337,2,0.061,4,0.048,5,0.022,6,0.022,8,0.531,9,2.52,10,1.337,11,0.962,19,1.588,21,1.186,23,0.754,28,1.281,29,1.419,31,0.005,35,1.075,37,1.726,38,1.607,39,2.972,40,2.005,42,2.276,45,1.05,47,1.389,48,0.638,51,1.668,60,0.009,63,0.786,65,1.253,68,1.934,74,2.568,79,0.874,80,1.332,83,1.726,85,0.624,89,1.243,91,0.888,94,1.026,95,0.005,96,1.495,100,1.06,101,1.129,104,1.934,105,1.471,106,1.972,112,0.957,126,2.568,127,1.618,128,4.317,131,0.835,133,1.726,135,1.526,137,0.133,138,2.481,139,0.894,140,2.4,141,2.055,142,1.739,143,1.045,146,1.457,147,1.389,148,0.764,149,0.096,158,1.668,160,3.507,161,1.248,164,0.817,169,1.075,173,0.125,174,1.726,176,0.057,178,1.3,179,2.04,180,0.854,182,1.406,183,1.639,186,3.807,188,0.699,202,0.914,203,0.519,204,0.868,205,0.874,207,0.835,209,0.61,210,0.894,211,0.894,212,0.764,213,0.764,214,0.747,216,0.764,219,1.214,220,1.216,224,1.405,226,1.492,235,2.317,239,1.681,244,1.075,246,3.281,247,2.005,251,1.491,252,1.491,270,0.943,272,1.668,273,1.858,294,0.668,295,1.563,299,1.06,307,1.668,308,1.54,326,2.777,328,1.491,334,1.248,339,1.681,344,2.336,354,0.437,356,0.848,360,1.391,396,1.719,402,1.613,424,1.934,428,1.157,430,1.391,437,2.255,463,3.585,464,2.018,465,2.261,466,3.305,467,1.389,468,2.221,469,5.071,470,5.169,471,2.221,472,2.113,473,2.01,474,3.002,475,2.018,476,2.221,477,3.585,478,3.805,479,4.37,480,2.764,481,3.305,482,2.188,483,2.877,484,4.444,485,3.15,486,1.471,487,3.143,488,2.113,489,2.221,490,2.877,491,2.221,492,1.858,493,5.155,494,2.221,495,3.002,496,1.858,497,2.4,498,2.614,499,3.305,500,2.018,501,1.957,502,2.568,503,1.36,504,4.837,505,1.726,506,2.221,507,2.221,508,2.221,509,2.221,510,1.934,511,2.221,512,2.963,513,2.066,514,3.805,515,2.221,516,3.305,517,1.789,518,2.221,519,2.018,520,3.305,521,3.971,522,2.221,523,2.221,524,3.946,525,3.305,526,2.221,527,2.221,528,2.221,529,2.221,530,2.221,531,2.4,532,2.221,533,2.221,534,3.305,535,2.221,536,2.221,537,2.221,538,3.305,539,3.305,540,4.37,541,1.102,542,3.143,543,2.221,544,2.221,545,2.221,546,2.221,547,2.221,548,2.336,549,2.113,550,2.221,551,2.221,552,2.221,553,1.002,554,1.315,555,1.613,556,1.351,557,1.563,558,1.668,559,2.221,560,3.305,561,2.221,562,2.221,563,2.221,564,3.143,565,2.221,566,2.113,567,2.221,568,3.305,569,2.113,570,2.221,571,1.668,572,2.221,573,1.934,574,2.221,575,2.221,576,2.221,577,3.143,578,2.221,579,2.221,580,3.002,581,2.221,582,2.221,583,1.789,584,1.789,585,2.221,586,3.305,587,3.305,588,1.281,589,3.305,590,3.305,591,2.877,592,2.221,593,3.305,594,4.37,595,2.221,596,2.221,597,3.305,598,3.585,599,2.221,600,2.221,601,1.858,602,1.491,603,1.668,604,1.858,605,2.221,606,2.221,607,2.221,608,2.221,609,1.858,610,2.221,611,2.113,612,2.221,613,2.221]],["title/injectables/TsValidationMessageService.html",[553,1.336,3281,2.962]],["body/injectables/TsValidationMessageService.html",[2,0.094,4,0.074,5,0.034,6,0.044,8,0.814,9,1.962,10,1.336,11,0.996,19,1.369,20,3.598,21,1.817,23,1.017,24,2.847,27,2.552,31,0.007,32,1.612,33,3.732,34,2.19,35,2.158,36,2.963,38,1.252,41,1.024,42,1.773,46,3.598,60,0.009,63,0.75,65,1.106,80,1.309,83,3.463,95,0.006,116,3.598,117,1.92,126,2.645,127,1.614,131,2.27,134,1.73,137,0.15,149,0.147,173,0.084,176,0.049,182,1.76,239,2.104,247,1.73,270,1.003,298,3.831,299,1.197,328,2.01,333,2.645,341,2.058,345,2.19,354,0.877,364,2.742,375,4.049,376,4.325,441,2.963,453,4.123,458,4.71,480,3.728,514,2.645,531,2.473,553,2.241,554,2.638,584,2.742,609,2.847,673,2.241,706,3.463,722,1.401,765,2.058,827,2.847,875,2.963,958,4.123,978,3.238,1021,4.239,1065,2.963,1108,3.598,1340,4.123,1614,5.909,1827,6.626,1841,5.015,1843,5.015,1923,3.093,1940,3.598,1944,4.123,1945,4.123,1946,5.397,1949,3.598,1951,3.404,2050,3.598,2137,3.598,2200,4.726,2247,4.71,2581,3.598,2767,6.017,2810,4.123,2847,4.513,3281,4.456,3282,4.71,3283,4.123,3284,6.685,3285,6.685,3286,6.685,3287,7.907,3288,5.106,3289,8.207,3290,5.397,3291,3.831,3292,5.015,3293,5.397,3294,5.397,3295,5.106,3296,5.106,3297,6.685,3298,5.106,3299,4.123,3300,8.207,3301,4.123,3302,8.703,3303,5.397,3304,5.106,3305,4.123,3306,6.017,3307,5.106,3308,5.106,3309,4.123,3310,5.397,3311,5.106,3312,4.123,3313,5.106,3314,5.106,3315,5.106,3316,4.123,3317,5.106,3318,5.397,3319,5.106,3320,5.909,3321,5.106,3322,5.106,3323,5.106,3324,5.106,3325,5.106,3326,6.685,3327,5.106,3328,5.106,3329,5.106,3330,5.106,3331,5.106]],["title/components/TsValidationMessagesComponent.html",[48,0.433,1177,1.581]],["body/components/TsValidationMessagesComponent.html",[2,0.08,4,0.063,5,0.04,6,0.053,8,0.695,10,0.936,11,1.047,18,3.694,23,0.914,24,2.431,31,0.006,32,1.66,33,3.601,41,0.874,48,0.83,58,1.233,60,0.009,62,1.441,63,0.832,65,1.101,67,1.441,80,1.183,85,1.39,89,1.093,95,0.006,100,1.076,127,1.319,131,2.184,137,0.155,143,1.282,148,1,149,0.125,151,1.196,173,0.072,176,0.071,179,1.989,180,1.541,183,1.555,188,1.261,203,1.47,204,1.639,205,1.576,207,1.507,209,1.101,212,1.378,213,1.378,224,1.487,226,0.855,236,0.871,245,1.808,251,1.311,252,1.311,270,0.998,274,2.087,275,3.336,285,1.342,294,1.206,354,0.572,408,1.477,413,1.477,418,3.489,430,2.081,465,1.342,498,2.139,553,1.808,554,2.373,617,0.763,624,1.374,670,1.441,673,1.311,679,1.374,695,1.514,706,4.166,722,1.196,756,1.514,762,1.118,795,1.441,805,1.514,820,1.541,821,2.087,879,5.987,959,1.514,1015,1.477,1016,1.311,1017,1.721,1019,4.236,1020,3.114,1118,2.927,1119,1.721,1120,1.721,1121,2.373,1122,1.721,1123,1.721,1124,1.552,1125,1.721,1126,1.441,1127,1.721,1128,1.514,1129,1.552,1130,1.721,1131,1.552,1132,1.721,1133,1.514,1134,1.721,1135,1.477,1136,1.721,1137,1.514,1138,1.721,1139,1.477,1140,2.373,1141,1.552,1142,1.552,1143,1.721,1144,1.441,1145,1.721,1146,1.514,1147,1.721,1148,1.514,1149,1.721,1150,1.514,1151,1.721,1152,1.514,1153,1.721,1154,1.721,1155,1.514,1156,1.721,1157,1.441,1158,1.721,1159,1.721,1160,1.721,1161,1.477,1162,1.514,1163,1.721,1164,1.514,1165,1.721,1166,1.552,1167,1.721,1168,1.374,1169,1.311,1170,1.721,1171,1.281,1172,1.721,1173,1.477,1174,1.721,1175,1.514,1176,1.721,1177,2.639,1178,1.721,1179,1.514,1180,1.721,1181,1.374,1182,1.721,1183,1.374,1184,2.373,1185,1.374,1186,1.721,1187,1.514,1188,1.721,1189,1.374,1190,1.721,1191,1.374,1192,1.477,1193,1.721,1194,1.514,1195,1.721,1196,1.721,1197,1.477,1198,1.721,1199,1.281,1200,1.721,1201,1.477,1202,1.676,1203,1.721,1442,3.271,1740,4.51,1883,6.555,1884,6.081,2620,4.51,3281,4.944,3282,5.667,3332,3.854,3333,6.012,3334,6.012,3335,6.88,3336,4.36,3337,6.012,3338,6.012,3339,4.36,3340,4.36,3341,4.36,3342,4.36,3343,3.854,3344,4.36,3345,6.012,3346,6.012,3347,6.012,3348,4.36,3349,6.012,3350,4.36,3351,4.36,3352,4.36]],["title/modules/TsValidationMessagesModule.html",[614,0.54,656,2.385]],["body/modules/TsValidationMessagesModule.html",[2,0.118,4,0.093,5,0.042,6,0.042,31,0.007,32,1.573,60,0.009,87,1.44,95,0.007,137,0.203,149,0.185,151,1.762,173,0.147,176,0.062,228,0.854,299,1.15,410,1.815,614,0.938,616,1.646,617,1.124,618,1.762,656,4.919,658,2.167,661,2.167,706,3.326,744,2.268,745,1.844,746,4.305,751,5.792,752,4.817,1177,3.304,3281,5.948,3282,4.525,3343,6.823,3353,5.676,3354,5.676,3355,5.676,3356,5.676,3357,6.421,3358,7.72]],["title/injectables/TsValidatorsService.html",[553,1.336,657,2.578]],["body/injectables/TsValidatorsService.html",[2,0.085,3,1.447,4,0.066,5,0.03,6,0.06,8,0.732,11,1.071,14,1.151,15,1.126,16,2.58,17,2.217,23,1.404,27,2.01,31,0.006,32,1.623,33,1.969,34,3.25,35,2.01,36,3.615,40,2.394,45,1.447,48,0.447,58,1.839,60,0.009,80,0.732,94,1.414,95,0.006,100,1.115,126,2.379,131,1.151,134,1.555,137,0.204,149,0.132,151,1.26,173,0.102,176,0.068,182,1.336,226,1.221,239,2.254,274,2.75,294,0.921,354,0.603,356,1.065,375,4.948,376,4.741,428,1.594,430,1.984,553,2.126,554,2.79,601,4.418,657,4.398,673,2.279,717,2.671,731,2.561,827,2.561,837,3.061,844,4.482,845,3.615,877,2.561,1021,2.912,1319,3.061,1390,3.949,1487,3.708,1674,3.445,1728,3.061,1841,5.944,1843,5.944,2041,3.445,2077,3.445,2200,5.298,2219,3.708,2240,3.708,2426,5.707,3291,3.445,3292,3.445,3299,6.396,3301,6.596,3303,5.029,3305,6.396,3306,5.707,3309,6.396,3310,5.029,3312,6.396,3316,6.396,3318,6.596,3320,7.22,3359,4.059,3360,6.247,3361,4.592,3362,6.247,3363,4.592,3364,6.247,3365,4.592,3366,6.247,3367,4.592,3368,6.247,3369,4.592,3370,6.247,3371,4.592,3372,6.247,3373,4.592,3374,6.247,3375,4.592,3376,6.247,3377,4.592,3378,6.247,3379,4.592,3380,6.247,3381,4.592,3382,6.247,3383,4.592,3384,6.247,3385,4.592,3386,6.247,3387,4.592,3388,8.169,3389,4.592,3390,4.592,3391,5.505,3392,4.059,3393,4.059,3394,4.592,3395,4.592,3396,4.592,3397,4.592,3398,4.592,3399,4.592,3400,4.592,3401,4.592,3402,4.592,3403,4.592,3404,4.592,3405,4.592,3406,4.592,3407,4.592,3408,4.592,3409,4.592]],["title/directives/TsVerticalSpacingDirective.html",[236,0.644,1201,1.505]],["body/directives/TsVerticalSpacingDirective.html",[2,0.102,4,0.08,5,0.037,6,0.054,8,0.881,10,1.205,11,0.964,15,2.108,23,1.385,31,0.007,32,1.012,38,2.108,41,1.552,58,1.587,60,0.009,63,0.943,65,0.82,80,0.881,91,1.506,95,0.007,96,1.259,112,2.019,127,1.562,137,0.158,141,2.828,143,1.299,144,2.24,149,0.159,173,0.115,176,0.078,188,1.623,202,1.929,203,1.095,224,1.41,236,1.219,239,1.416,265,3.52,270,0.946,294,1.108,308,1.158,328,1.661,341,1.7,354,0.923,396,2.206,406,3.682,408,1.871,428,2.686,514,4.526,517,2.966,531,3.747,553,1.661,554,2.18,569,3.502,588,2.974,722,1.929,762,1.416,766,3.892,776,2.512,847,3.502,862,3.206,875,3.206,1058,5.276,1117,2.123,1201,2.621,1202,3.233,1725,3.892,1848,3.892,1926,4.49,2324,4.686,2565,6.157,3073,6.216,3410,6.576,3411,4.459,3412,7.2,3413,5.523,3414,7.033,3415,5.523,3416,5.523,3417,5.523,3418,5.523,3419,5.523,3420,5.523,3421,5.523,3422,5.523,3423,5.523,3424,5.523]],["title/classes/Version.html",[176,0.043,731,2.477]],["body/classes/Version.html",[2,0.117,4,0.092,5,0.042,6,0.059,8,1.016,10,1.457,11,1.037,31,0.007,41,1.277,45,2.008,60,0.009,63,0.983,65,1.372,95,0.007,127,1.221,173,0.126,176,0.074,219,1.306,246,4.387,270,0.857,294,1.277,354,0.836,356,1.314,722,1.748,731,4.888,839,5.801,1459,4.039,2712,4.779,3425,5.143,3426,7.571,3427,8.565,3428,7.571,3429,6.37,3430,7.683,3431,6.37,3432,6.37,3433,6.37,3434,6.37,3435,6.37,3436,6.37,3437,6.37,3438,6.37,3439,6.37,3440,6.37,3441,5.63]],["title/contributing.html",[77,1.632,3442,2.985,3443,2.985]],["body/contributing.html",[4,0.089,5,0.03,6,0.041,14,1.13,15,1.105,19,1.209,31,0.006,33,2.637,35,1.455,38,1.716,44,3.176,45,1.421,46,4.333,47,1.879,60,0.007,65,0.669,74,2.335,88,3.302,89,2.037,91,0.807,95,0.006,100,1.347,102,4.667,105,1.99,112,1.294,118,2.858,130,2.364,131,1.755,134,2.371,188,0.945,216,1.033,219,1.666,228,0.722,239,1.156,244,1.455,246,2.256,256,5.198,270,0.607,293,1.355,296,2.083,299,0.807,300,3.176,304,3.381,333,2.335,334,1.688,344,2.763,350,2.858,354,0.807,378,5.416,400,5.557,406,3.005,531,2.182,558,2.256,573,4.063,580,4.767,591,5.126,602,1.355,603,3.764,604,3.429,709,2.616,710,3.639,731,2.513,765,1.387,774,3.569,830,3.381,832,1.828,840,3.639,855,6.072,917,2.513,920,2.978,978,2.858,1001,2.182,1012,3.639,1023,2.885,1052,1.732,1080,4.333,1117,2.364,1285,3.176,1302,4.333,1308,2.858,1314,4.439,1315,2.182,1319,3.005,1329,3.984,1355,3.984,1364,3.984,1478,3.639,1505,3.984,1514,4.439,1623,3.984,1637,3.639,1651,3.639,1689,6.101,1727,4.886,1740,3.381,1805,3.984,1829,5.546,1834,3.429,1836,3.984,1838,2.858,1852,4.063,1987,3.176,2007,5.299,2050,6.048,2077,3.381,2224,3.639,2230,3.176,2237,5.252,2322,3.984,2324,2.73,2399,3.984,2401,5.436,2712,4.614,2764,2.858,2808,3.381,2883,2.73,2994,3.639,3083,3.984,3112,5.436,3118,3.984,3154,6.833,3197,3.984,3393,7.349,3426,3.984,3428,3.984,3443,5.652,3444,7.52,3445,3.984,3446,3.984,3447,6.15,3448,7,3449,7.871,3450,7.586,3451,8.763,3452,7.52,3453,6.15,3454,4.507,3455,7,3456,7.871,3457,4.507,3458,6.647,3459,4.507,3460,6.15,3461,6.15,3462,7,3463,4.507,3464,7,3465,6.15,3466,6.15,3467,4.507,3468,3.639,3469,4.507,3470,4.507,3471,4.507,3472,7,3473,6.15,3474,3.984,3475,4.507,3476,4.507,3477,4.507,3478,6.187,3479,4.507,3480,4.507,3481,4.507,3482,4.507,3483,4.507,3484,3.639,3485,4.507,3486,4.507,3487,4.507,3488,4.507,3489,4.507,3490,4.507,3491,4.507,3492,4.507,3493,4.507,3494,4.507,3495,4.507,3496,4.507,3497,4.507,3498,4.507,3499,6.15,3500,6.15,3501,4.507,3502,4.507,3503,4.507,3504,6.957,3505,8.583,3506,8.944,3507,6.15,3508,7.52,3509,8.124,3510,7,3511,7,3512,6.15,3513,7.52,3514,6.15,3515,4.507,3516,4.507,3517,3.984,3518,4.507,3519,4.507,3520,7,3521,4.507,3522,6.15,3523,4.507,3524,6.15,3525,3.984,3526,4.507,3527,7,3528,4.507,3529,4.507,3530,4.507,3531,4.507,3532,4.507,3533,4.507,3534,4.507,3535,4.507,3536,4.507,3537,6.15,3538,4.507,3539,3.984,3540,3.984]],["title/coverage.html",[3541,4.916]],["body/coverage.html",[0,1.487,1,2.018,5,0.019,6,0.063,7,4.276,14,0.718,31,0.004,48,0.877,60,0.009,63,0.321,67,0.947,70,2.588,94,2.76,95,0.004,143,0.457,174,1.484,176,0.079,177,2.018,219,0.587,236,1.199,274,0.994,352,1.816,353,5.089,395,2.149,396,2.3,398,2.149,403,2.149,407,2.149,411,1.909,413,0.97,428,0.994,463,1.735,464,4.197,465,0.882,477,1.735,483,1.662,490,1.662,495,1.735,541,0.947,553,1.972,624,0.903,657,1.662,671,4.045,674,3.316,677,4.049,680,1.909,685,3.114,687,3.114,696,4.158,706,3.396,715,1.816,716,4.049,720,1.909,731,2.465,733,1.909,756,0.994,757,2.532,795,0.947,805,0.994,806,4.276,811,2.149,812,4.553,820,1.384,821,0.994,847,1.816,849,2.149,852,3.721,875,1.662,1015,0.97,1018,3.316,1108,6.655,1124,1.019,1126,0.947,1128,0.994,1131,1.019,1133,0.994,1135,0.97,1137,0.994,1139,0.97,1141,1.019,1142,1.019,1144,0.947,1146,0.994,1148,0.994,1150,0.994,1152,0.994,1155,0.994,1157,0.947,1161,0.97,1162,0.994,1164,0.994,1166,1.019,1168,0.903,1171,0.842,1173,0.97,1175,0.994,1177,1.019,1179,0.994,1181,0.903,1183,0.903,1185,0.903,1187,0.994,1189,0.903,1191,0.903,1192,0.97,1194,0.994,1197,0.97,1199,0.842,1201,0.97,1213,2.532,1214,2.532,1235,4.371,1272,2.312,1314,1.816,1387,2.149,1388,4.553,1402,1.909,1477,2.532,1514,1.816,1555,2.532,1556,2.532,1572,2.532,1665,1.909,1666,2.312,1694,2.312,1695,3.569,1696,3.907,1825,2.312,1826,4.358,1863,2.018,1902,2.018,1903,4.537,1904,2.532,1905,2.532,1921,2.149,1922,3.316,1923,1.735,1924,2.312,1941,2.149,1942,4.049,1943,4.049,1947,2.018,1954,2.149,1959,2.149,1995,4.276,2015,2.312,2016,2.532,2048,3.316,2068,2.149,2091,2.312,2107,2.532,2118,2.149,2121,2.532,2146,3.316,2147,2.532,2150,2.532,2198,3.316,2199,3.569,2252,2.149,2276,2.312,2388,2.149,2389,3.907,2395,3.907,2503,6.798,2528,2.018,2529,2.018,2530,2.018,2531,2.018,2535,2.312,2538,2.312,2540,2.312,2542,2.312,2543,2.149,2544,4.371,2545,4.62,2569,2.149,2577,1.909,2581,2.018,2584,2.312,2642,2.532,2643,2.532,2665,2.532,2666,2.532,2672,2.149,2673,4.276,2696,2.149,2745,3.569,2802,2.149,2828,2.149,2866,2.532,2867,3.569,2872,2.149,2873,4.049,2876,1.909,2881,1.909,2882,4.394,2884,2.018,2895,1.597,2898,2.018,2899,2.018,2900,2.018,2902,1.735,2903,1.909,2906,1.909,2982,2.149,2983,5.69,2984,4.049,2987,2.312,2988,2.149,2990,2.149,3045,4.358,3056,2.149,3058,2.312,3075,2.532,3084,2.149,3175,2.532,3176,2.532,3226,2.532,3227,2.532,3237,2.532,3261,2.312,3281,1.909,3282,4.62,3283,4.899,3290,2.312,3293,2.312,3294,2.312,3332,2.532,3359,2.532,3360,2.532,3362,2.532,3364,2.532,3366,2.532,3368,2.532,3370,2.532,3372,2.532,3374,2.532,3376,2.532,3378,2.532,3380,2.532,3382,2.532,3384,2.532,3386,2.532,3410,2.312,3411,2.312,3425,3.569,3541,2.312,3542,2.864,3543,5.397,3544,2.864,3545,8.733,3546,2.864,3547,2.864,3548,3.569,3549,2.864,3550,2.864,3551,2.532,3552,2.864,3553,4.42,3554,2.864,3555,9.35,3556,6.93,3557,6.93,3558,2.864,3559,2.864,3560,4.42,3561,2.864,3562,7.223,3563,2.864,3564,2.864,3565,2.864,3566,2.864,3567,2.864,3568,2.864,3569,2.864,3570,2.864,3571,4.771,3572,4.42,3573,2.864,3574,2.532,3575,3.907,3576,4.42,3577,2.312,3578,2.312,3579,2.532,3580,2.864,3581,2.864,3582,2.864,3583,2.864,3584,2.532,3585,2.532,3586,2.864,3587,2.864,3588,3.569,3589,5.397,3590,2.864,3591,5.397,3592,5.397,3593,2.864,3594,6.557,3595,2.864,3596,2.864,3597,2.864,3598,6.557,3599,2.864,3600,2.864,3601,2.864,3602,2.864,3603,2.864,3604,3.569,3605,2.864,3606,2.864,3607,3.907,3608,2.532,3609,6.068,3610,2.864,3611,2.864,3612,2.864,3613,3.907,3614,2.864,3615,2.864,3616,2.864,3617,2.864,3618,5.397,3619,5.397,3620,2.864,3621,2.864,3622,2.532,3623,2.864,3624,2.864,3625,2.864,3626,2.864,3627,2.312,3628,2.312,3629,2.532,3630,2.532,3631,2.864,3632,2.864,3633,2.864,3634,2.864,3635,2.864,3636,4.42,3637,6.93,3638,4.42,3639,4.42,3640,4.42,3641,2.864,3642,4.42,3643,4.42,3644,2.864,3645,2.864,3646,2.864,3647,2.864,3648,2.864]],["title/dependencies.html",[616,1.372,3649,3.697]],["body/dependencies.html",[31,0.007,60,0.009,95,0.007,149,0.194,151,1.851,161,2.526,164,1.654,169,2.177,244,2.566,323,3.915,352,5.041,441,3.915,548,2.662,616,1.729,673,2.029,726,4.753,745,1.937,809,3.622,1117,3.055,1319,4.497,2089,5.964,2144,5.446,2674,4.753,2692,5.061,2693,5.061,3650,7.95,3651,6.746,3652,6.746,3653,6.746,3654,6.746,3655,6.746,3656,9.178,3657,6.746,3658,6.746,3659,6.746,3660,6.746,3661,6.746,3662,6.746,3663,6.746,3664,7.95,3665,6.746,3666,6.746,3667,6.746,3668,6.746]],["title/index.html",[8,0.59,77,1.632,3442,2.985]],["body/index.html",[4,0.056,5,0.047,6,0.051,8,0.624,9,1.504,10,0.868,13,3.927,14,1.948,15,1.366,17,3.259,21,1.393,23,1.243,25,3.534,27,2.095,31,0.005,32,1.465,34,2.39,35,1.799,36,2.271,40,2.632,45,1.233,48,0.632,52,2.757,54,2.37,60,0.007,62,1.294,70,3.155,77,1.727,88,2.992,94,1.715,95,0.005,96,0.998,100,1.338,108,2.182,112,1.864,117,1.124,122,2.936,131,0.981,134,1.325,137,0.159,143,1.275,164,0.959,169,1.263,178,1.026,180,1.003,182,1.195,183,0.821,184,2.37,204,0.685,228,0.575,229,1.325,239,1.992,270,0.527,272,1.958,274,1.934,275,1.678,285,1.998,293,1.177,296,2.532,299,0.998,300,3.927,339,1.429,341,1.715,350,2.481,352,3.534,364,2.101,365,2.757,375,3.375,376,3.234,378,3.715,400,2.481,402,2.698,428,1.358,437,2.535,457,4.458,470,3.234,482,2.865,492,2.182,501,2.146,503,1.074,505,2.886,510,2.271,514,3.663,542,2.481,548,1.544,554,2.199,555,1.895,557,1.835,558,3.248,566,2.481,601,4.168,604,2.182,609,2.182,616,1.003,660,2.936,670,1.842,673,2.337,679,2.046,695,1.358,717,2.39,718,2.757,727,3.715,731,2.182,758,3.459,759,2.936,765,1.205,770,2.936,809,2.101,815,1.587,817,3.159,822,1.895,827,2.182,829,2.936,837,2.609,847,2.481,870,2.936,920,3.143,961,2.37,966,2.481,978,2.481,1021,3.534,1023,1.835,1047,3.459,1052,2.873,1065,2.271,1080,3.927,1099,2.271,1129,1.983,1169,1.676,1238,2.609,1274,2.936,1293,4.499,1308,5.273,1314,5.069,1319,3.715,1337,3.459,1339,8.234,1390,2.481,1393,3.715,1399,3.159,1456,2.027,1478,3.159,1485,4.181,1502,4.925,1607,2.789,1622,2.757,1656,2.757,1667,3.459,1672,3.159,1680,3.159,1685,3.159,1698,3.459,1726,2.936,1748,3.159,1769,2.609,1828,4.925,1829,2.757,1841,2.936,1843,2.936,1852,2.271,1888,3.159,1926,2.271,2041,4.869,2077,4.181,2081,3.459,2132,3.459,2200,3.534,2201,3.159,2237,2.936,2319,4.925,2321,3.459,2390,2.936,2391,3.459,2404,3.459,2426,3.159,2436,3.159,2473,4.925,2534,3.459,2537,3.459,2567,3.159,2581,2.757,2582,5.24,2656,8.282,2667,3.459,2668,3.459,2674,2.757,2764,2.481,2865,6.607,2868,3.459,2901,2.757,2989,2.757,3076,4.925,3117,3.459,3154,3.159,3228,3.459,3238,3.459,3262,3.459,3291,4.181,3292,2.936,3299,3.159,3301,3.159,3303,4.499,3305,3.159,3306,5.24,3309,3.159,3310,4.499,3312,3.159,3316,3.159,3318,4.499,3391,4.925,3392,3.459,3443,5.24,3445,3.459,3446,5.736,3450,7.35,3458,3.459,3468,3.159,3474,5.736,3478,3.459,3504,3.459,3517,5.736,3525,3.459,3539,3.459,3540,3.459,3541,3.159,3622,3.459,3669,5.573,3670,6.49,3671,5.573,3672,5.573,3673,5.573,3674,3.913,3675,3.913,3676,3.913,3677,3.913,3678,3.913,3679,3.913,3680,3.913,3681,3.913,3682,3.459,3683,6.49,3684,3.913,3685,3.913,3686,3.913,3687,3.913,3688,3.913,3689,3.913,3690,3.913,3691,6.49,3692,9.389,3693,3.913,3694,3.913,3695,3.913,3696,3.913,3697,3.913,3698,3.913,3699,3.913,3700,3.913,3701,5.573,3702,3.913,3703,3.913,3704,3.913,3705,3.913,3706,3.913,3707,3.913,3708,3.913,3709,3.913,3710,3.913,3711,3.913,3712,3.913,3713,3.913,3714,3.913,3715,3.913,3716,3.913,3717,3.913,3718,3.913,3719,3.913,3720,3.913,3721,3.913,3722,3.913,3723,3.913,3724,3.913,3725,3.913,3726,3.913,3727,3.913,3728,3.913,3729,3.913,3730,3.913,3731,3.913,3732,3.913,3733,3.913,3734,6.49,3735,3.913,3736,3.913,3737,3.913,3738,3.913,3739,3.913,3740,3.913,3741,3.913,3742,3.913,3743,3.913,3744,3.913,3745,3.913,3746,3.913,3747,3.913,3748,3.913,3749,3.913,3750,3.913,3751,3.913,3752,3.913,3753,3.913,3754,6.49,3755,3.913,3756,5.573,3757,5.573,3758,3.913,3759,3.913]],["title/license.html",[77,1.632,1317,2.985,3442,2.985]],["body/license.html",[5,0.043,6,0.043,29,1.576,31,0.007,49,4.381,60,0.007,95,0.007,100,1.402,228,0.678,299,1.177,378,4.381,485,2.818,510,5.023,709,3.814,774,4.852,825,5.306,833,4.93,1096,2.989,1314,4.167,1317,5.306,1514,4.167,1559,4.167,1679,5.809,1699,5.809,1703,5.573,1735,6.32,1740,4.93,1842,4.93,1985,5.515,1989,4.631,2041,4.93,2675,4.631,2717,3.664,2793,5.306,3046,5.809,3156,6.32,3183,5.809,3468,5.306,3760,6.572,3761,8.36,3762,9.24,3763,6.572,3764,7.828,3765,6.572,3766,6.572,3767,6.572,3768,6.572,3769,7.828,3770,6.572,3771,6.572,3772,6.572,3773,6.572,3774,6.572,3775,6.572,3776,6.572,3777,6.572,3778,7.828,3779,6.572,3780,7.828,3781,6.572,3782,6.572,3783,6.572,3784,6.572,3785,6.572,3786,6.572,3787,6.572,3788,6.572,3789,6.572,3790,6.572,3791,6.572,3792,6.572]],["title/modules.html",[614,0.74]],["body/modules.html",[31,0.007,60,0.007,95,0.007,341,2.927,614,0.732,615,4.522,625,4.247,626,4.018,627,3.122,628,4.247,629,4.247,630,4.247,631,4.018,632,4.247,633,4.247,634,4.247,635,4.018,636,4.247,637,3.822,638,2.661,639,3.651,640,4.018,641,4.247,642,4.247,643,4.247,644,4.018,645,4.247,646,4.018,647,4.247,648,4.247,649,4.247,650,4.018,651,4.018,652,4.018,653,4.247,654,4.247,655,3.498,656,3.237,693,4.247,1117,3.654,3682,8.403,3793,9.508]],["title/overview.html",[3484,4.916]],["body/overview.html",[0,0.44,31,0.004,48,0.251,60,0.009,67,2.295,70,1.016,87,0.577,95,0.004,173,0.042,176,0.025,228,0.266,236,0.373,299,0.461,410,0.565,411,3.361,413,2.509,465,2.137,553,0.774,614,0.494,615,7.069,616,0.66,617,0.451,618,0.706,619,2.276,620,2.276,621,2.276,622,2.276,623,2.276,624,1.589,625,5.816,626,5.158,627,4.377,628,5.912,629,5.759,630,5.544,631,5.158,632,5.696,633,5.696,634,5.544,635,5.322,636,6.059,637,5.126,638,3.796,639,5.18,640,5.322,641,5.544,642,6.059,643,5.344,644,5.449,645,5.544,646,5.633,647,5.696,648,5.344,649,5.696,650,5.322,651,5.389,652,5.158,653,6.389,654,5.344,655,4.692,656,4.505,657,3.619,658,1.142,693,5.867,715,3.197,739,2.276,740,2.276,742,2.276,756,2.41,786,2.276,787,2.276,788,2.276,791,2.276,792,2.276,794,2.276,795,2.295,801,2.276,802,2.276,804,2.276,805,2.41,1015,2.351,1124,2.47,1126,2.449,1128,1.75,1131,2.47,1133,2.41,1135,2.509,1137,2.41,1139,2.351,1141,2.47,1142,2.47,1144,2.449,1146,2.41,1148,1.75,1150,2.41,1152,2.41,1155,2.41,1157,2.449,1161,2.351,1162,2.41,1164,2.41,1166,2.636,1168,2.188,1171,2.04,1173,2.509,1175,2.41,1177,2.47,1179,2.41,1181,2.334,1183,2.188,1185,2.334,1187,2.41,1189,2.334,1191,2.188,1192,2.509,1194,2.41,1197,2.509,1199,2.04,1201,2.351,1204,2.276,1205,2.276,1207,2.276,1379,2.276,1380,2.276,1381,2.276,1382,2.276,1402,3.361,1467,2.276,1468,2.276,1469,2.276,1470,2.276,1564,2.276,1565,2.276,1567,2.276,1659,2.276,1660,2.276,1662,2.276,1665,4.628,1819,2.276,1820,2.276,1822,2.276,1848,2.866,1863,3.552,1893,2.276,1894,2.276,1895,2.276,1897,2.276,1902,3.552,1931,2.276,1932,2.276,1934,2.276,1935,2.276,2043,2.276,2044,2.276,2046,2.276,2101,2.276,2102,2.276,2103,2.276,2112,2.276,2113,2.276,2114,2.276,2116,2.276,2118,3.782,2138,2.276,2139,2.276,2141,2.276,2193,2.276,2194,2.276,2195,2.276,2263,2.276,2264,2.276,2266,2.276,2270,2.276,2271,2.276,2272,2.276,2273,2.276,2345,2.276,2346,2.276,2348,2.276,2382,2.276,2383,2.276,2385,2.276,2519,2.276,2520,2.276,2522,2.276,2525,2.276,2526,2.276,2527,2.276,2528,4.891,2529,4.891,2530,4.891,2531,4.891,2577,3.361,2633,2.276,2634,2.276,2635,2.276,2637,2.276,2739,2.276,2740,2.276,2741,2.276,2817,2.276,2818,2.276,2820,2.276,2823,2.276,2824,2.276,2825,2.276,2827,2.276,2828,3.782,2876,3.361,3059,2.276,3060,2.276,3061,2.276,3069,2.276,3070,2.276,3071,2.276,3217,2.276,3218,2.276,3219,2.276,3221,2.276,3254,2.276,3255,2.276,3256,2.276,3257,2.276,3274,2.276,3275,2.276,3276,2.276,3281,3.361,3353,2.276,3354,2.276,3355,2.276,3356,2.276,3484,2.079,3794,2.575,3795,2.575,3796,2.575,3797,2.575,3798,2.575]],["title/miscellaneous/typealiases.html",[3799,2.774,3800,5.35]],["body/miscellaneous/typealiases.html",[5,0.029,6,0.062,7,3.077,8,0.696,9,1.678,10,0.937,11,1.085,13,3.077,19,2.431,23,0.915,27,1.409,31,0.006,32,0.8,38,1.071,39,2.142,41,0.876,58,1.412,60,0.009,63,0.998,67,1.989,80,0.696,87,0.979,88,3.231,93,3.276,94,2.656,95,0.006,96,0.782,97,5.166,100,1.329,101,2.038,114,5.166,128,2.048,134,2.038,143,0.696,170,2.792,175,4.59,178,1.145,181,1.444,219,0.896,235,1.444,236,0.872,239,1.543,244,1.409,265,3.012,270,0.588,284,2.253,293,1.81,296,1.479,341,2.12,352,2.769,353,3.077,358,4.515,359,5.559,364,3.231,365,3.077,369,3.276,371,3.077,372,4.515,374,4.859,375,2.645,376,3.996,396,1.806,400,2.769,404,3.276,405,5.166,464,2.645,465,1.344,483,2.534,485,2.581,490,2.534,493,4.366,501,1.989,505,3.844,521,2.645,531,2.914,588,2.313,673,1.313,679,1.376,696,2.769,709,3.493,717,2.581,727,2.911,728,2.534,795,2.276,831,3.645,862,2.534,875,2.534,967,3.077,1014,3.276,1015,2.038,1018,3.276,1031,5.319,1038,3.86,1039,3.86,1041,6.086,1055,3.077,1058,4.515,1085,6.086,1086,3.86,1087,3.86,1088,3.86,1089,3.86,1090,3.86,1095,3.077,1096,2.737,1098,3.526,1099,2.534,1100,3.816,1101,3.077,1102,2.645,1104,4.24,1106,4.24,1137,1.516,1144,1.989,1157,1.444,1169,1.313,1175,1.516,1199,2.023,1201,1.479,1272,3.526,1285,3.077,1298,6.086,1305,3.86,1308,2.769,1315,2.115,1342,3.86,1343,3.86,1344,3.86,1345,3.86,1346,3.86,1665,2.911,1666,3.526,1670,6.086,1672,3.526,1680,3.526,1685,3.526,1725,3.077,1727,3.356,1769,2.911,1848,3.077,1903,3.493,1921,3.276,1922,3.276,1923,3.645,1924,4.859,1926,2.534,1927,3.077,1930,5.166,1948,5.166,1949,3.077,2026,5.166,2028,5.166,2048,3.276,2068,5.166,2084,3.276,2094,3.276,2095,3.526,2165,3.697,2200,3.816,2276,3.526,2290,6.086,2294,6.086,2296,6.086,2299,6.086,2324,4.17,2544,2.911,2545,4.24,2565,5.809,2576,5.559,2673,3.077,2694,5.991,2882,2.769,2885,2.534,2888,2.534,2889,2.645,3081,3.86,3261,3.526,3271,6.086,3410,3.526,3411,4.859,3412,6.086,3548,3.526,3577,3.526,3578,4.859,3588,3.526,3604,3.526,3627,3.526,3628,4.859,3799,3.276,3801,4.367,3802,5.319,3803,3.86,3804,5.319,3805,6.018,3806,6.086,3807,4.367,3808,4.367,3809,3.86,3810,4.367,3811,6.886,3812,5.319,3813,6.886,3814,6.886,3815,4.367,3816,3.86,3817,3.86,3818,6.886,3819,3.86,3820,3.86,3821,3.86,3822,4.367,3823,4.367,3824,3.86,3825,3.86,3826,3.86,3827,3.86,3828,3.86,3829,4.367]],["title/miscellaneous/variables.html",[2503,4.014,3799,2.774]],["body/miscellaneous/variables.html",[5,0.02,6,0.062,8,0.493,11,0.803,19,2.05,23,1.405,26,5.034,27,2.684,31,0.004,32,1.36,33,2.428,36,1.796,38,0.759,39,2.248,40,1.048,41,0.621,45,1.478,48,0.8,58,1.877,60,0.009,61,2.82,63,1.015,79,1.946,95,0.004,100,1.014,130,2.746,131,1.42,170,2.296,176,0.069,181,1.023,182,0.664,216,0.71,219,1.392,228,0.837,229,2.42,236,0.821,239,2.243,247,1.588,265,3.826,274,2.48,275,3.064,293,0.931,296,1.588,299,0.554,308,0.984,329,3.459,333,1.603,341,0.953,345,1.327,353,2.181,358,4.74,365,2.181,369,2.322,371,2.181,372,2.322,376,2.722,385,3.844,389,4.138,395,4.248,396,2.181,397,2.499,398,4.248,399,2.499,404,2.322,405,3.518,406,2.063,407,4.248,408,2.514,410,0.679,411,3.775,412,3.094,413,1.048,414,4.138,428,2.887,432,3.351,503,1.96,513,1.29,514,2.429,517,1.662,553,0.931,557,1.452,583,2.518,584,1.662,588,2.428,602,0.931,670,1.023,671,2.063,677,2.322,679,0.975,696,1.962,706,1.603,716,2.322,725,3.786,729,2.181,730,1.796,731,3.523,732,2.322,733,3.775,734,2.499,806,2.181,812,3.518,820,1.202,827,1.726,847,3.591,851,3.25,852,4.647,862,3.286,875,2.722,1014,2.322,1018,2.322,1021,2.974,1058,5.093,1093,6.757,1096,1.408,1100,1.962,1108,2.181,1126,1.023,1135,1.048,1137,1.074,1144,1.023,1157,1.023,1166,1.101,1169,2.042,1173,1.048,1229,2.499,1315,1.499,1332,2.499,1388,2.322,1402,3.775,1459,1.962,1725,2.181,1826,2.499,1827,5.481,1848,2.181,1863,3.99,1903,3.286,1926,1.796,1928,1.962,1929,4.74,1942,2.322,1943,3.518,1948,3.518,1949,2.181,1950,3.786,1951,2.063,1952,2.499,1953,2.499,1954,4.248,1955,3.786,2048,2.322,2068,5.093,2084,2.322,2091,4.572,2094,2.322,2095,2.499,2118,4.248,2200,2.974,2324,1.874,2503,2.322,2544,2.063,2545,3.99,2565,2.181,2577,3.775,2673,2.181,2675,2.181,2724,6.547,2828,4.248,2873,2.322,2876,3.775,2882,1.962,2885,1.796,2888,1.796,2889,3.826,2895,3.523,2906,3.775,2907,2.181,2983,3.99,2984,3.518,2988,4.248,2989,4.784,2990,4.248,2991,2.499,3045,3.786,3056,4.248,3057,2.735,3058,2.499,3156,2.499,3282,2.181,3283,5.101,3290,4.572,3291,2.322,3292,3.518,3293,4.572,3294,4.572,3425,2.499,3441,2.735,3548,2.499,3551,5.005,3571,5.005,3574,5.005,3575,4.145,3577,2.499,3578,3.786,3579,5.005,3584,2.735,3585,2.735,3588,2.499,3604,2.499,3607,5.005,3608,5.005,3613,2.735,3627,2.499,3628,3.786,3629,5.005,3630,2.735,3799,2.322,3802,5.584,3803,2.735,3804,2.735,3806,2.735,3809,2.735,3812,2.735,3816,4.145,3817,2.735,3819,2.735,3820,2.735,3821,2.735,3824,2.735,3825,2.735,3826,2.735,3827,2.735,3828,2.735,3830,6.318,3831,4.69,3832,3.095,3833,5.663,3834,3.095,3835,4.69,3836,3.095,3837,3.095,3838,4.69,3839,3.095,3840,3.095,3841,3.095,3842,3.095,3843,3.095,3844,3.095,3845,3.095,3846,3.095,3847,7.98,3848,3.095,3849,3.095,3850,3.095,3851,3.095,3852,3.095,3853,3.095,3854,3.095,3855,3.095,3856,3.095,3857,3.095,3858,3.095,3859,3.095,3860,5.663,3861,8.401,3862,3.095,3863,3.095,3864,3.095,3865,5.663,3866,5.663,3867,3.095,3868,6.318,3869,7.422,3870,6.318,3871,3.095,3872,3.095,3873,4.69,3874,4.69,3875,3.095,3876,3.095,3877,3.095,3878,3.095,3879,3.095,3880,4.69,3881,6.318,3882,4.69,3883,4.69,3884,3.095]]],"invertedIndex":[["",{"_index":60,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":396,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsLinkComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0,000[.00",{"_index":370,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["0/1",{"_index":3545,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3558,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":367,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["0000",{"_index":368,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["00000|00000",{"_index":373,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["02",{"_index":1683,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["02/08/2018",{"_index":1676,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["08t05:00:00.000z",{"_index":1684,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["1",{"_index":588,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["1);set",{"_index":1844,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["1/1",{"_index":3555,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":3632,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3614,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3557,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":3576,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3631,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":517,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":1701,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["100",{"_index":1108,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsValidationMessageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["100px",{"_index":3119,"title":{},"body":{"components/TsTableComponent.html":{}}}],["101",{"_index":1639,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["1024",{"_index":1955,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/variables.html":{}}}],["10mb",{"_index":3856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10px",{"_index":3863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11/13",{"_index":3559,"title":{},"body":{"coverage.html":{}}}],["11/15",{"_index":3610,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":3850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12);use",{"_index":1849,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["12/16",{"_index":3554,"title":{},"body":{"coverage.html":{}}}],["12:00:00am",{"_index":1682,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["12rem",{"_index":3120,"title":{},"body":{"components/TsTableComponent.html":{}}}],["13",{"_index":3797,"title":{},"body":{"overview.html":{}}}],["138",{"_index":2585,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["14",{"_index":3796,"title":{},"body":{"overview.html":{}}}],["14/14",{"_index":3565,"title":{},"body":{"coverage.html":{}}}],["14/16",{"_index":3611,"title":{},"body":{"coverage.html":{}}}],["14/27",{"_index":3602,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":3630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["16/16",{"_index":3596,"title":{},"body":{"coverage.html":{}}}],["16:9",{"_index":1086,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["17/17",{"_index":3593,"title":{},"body":{"coverage.html":{}}}],["17/18",{"_index":3616,"title":{},"body":{"coverage.html":{}}}],["19/19",{"_index":3597,"title":{},"body":{"coverage.html":{}}}],["1:1",{"_index":1090,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["1a237",{"_index":1605,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["1px",{"_index":1642,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["1}&per_page=${perpag",{"_index":3173,"title":{},"body":{"components/TsTableComponent.html":{}}}],["2",{"_index":265,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":3662,"title":{},"body":{"dependencies.html":{}}}],["2.23.0",{"_index":3660,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":3598,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":986,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["200",{"_index":243,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["2000",{"_index":865,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["2018",{"_index":1679,"title":{},"body":{"pipes/TsDatePipe.html":{},"license.html":{}}}],["21",{"_index":3798,"title":{},"body":{"overview.html":{}}}],["21/23",{"_index":3595,"title":{},"body":{"coverage.html":{}}}],["21/24",{"_index":3561,"title":{},"body":{"coverage.html":{}}}],["24/26",{"_index":3550,"title":{},"body":{"coverage.html":{}}}],["243",{"_index":2505,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["25",{"_index":3575,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["25/29",{"_index":3606,"title":{},"body":{"coverage.html":{}}}],["26/26",{"_index":3603,"title":{},"body":{"coverage.html":{}}}],["29/30",{"_index":3569,"title":{},"body":{"coverage.html":{}}}],["2;set",{"_index":1720,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["3",{"_index":1725,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["3.7.2",{"_index":3667,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":3562,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":3570,"title":{},"body":{"coverage.html":{}}}],["30/30",{"_index":3567,"title":{},"body":{"coverage.html":{}}}],["30/40",{"_index":3600,"title":{},"body":{"coverage.html":{}}}],["312",{"_index":3508,"title":{},"body":{"contributing.html":{}}}],["32",{"_index":3795,"title":{},"body":{"overview.html":{}}}],["32/38",{"_index":3544,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":3556,"title":{},"body":{"coverage.html":{}}}],["33/36",{"_index":3590,"title":{},"body":{"coverage.html":{}}}],["34",{"_index":3794,"title":{},"body":{"overview.html":{}}}],["38",{"_index":3580,"title":{},"body":{"coverage.html":{}}}],["38/52",{"_index":3573,"title":{},"body":{"coverage.html":{}}}],["3:2",{"_index":1088,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["3:4",{"_index":1084,"title":{},"body":{"components/TsCardComponent.html":{}}}],["4",{"_index":862,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":3651,"title":{},"body":{"dependencies.html":{}}}],["4.0.10",{"_index":3654,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3594,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":3547,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":2707,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["42/50",{"_index":3566,"title":{},"body":{"coverage.html":{}}}],["44/48",{"_index":3599,"title":{},"body":{"coverage.html":{}}}],["45deg",{"_index":3873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4:3",{"_index":1087,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["5",{"_index":1848,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"directives/TsVerticalSpacingDirective.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":3668,"title":{},"body":{"dependencies.html":{}}}],["5/13",{"_index":3581,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":3591,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":3552,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":3587,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2395,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"coverage.html":{}}}],["51",{"_index":3601,"title":{},"body":{"coverage.html":{}}}],["5:4",{"_index":1089,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["6",{"_index":875,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":3657,"title":{},"body":{"dependencies.html":{}}}],["6.0.7",{"_index":3656,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":3664,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":3583,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":3586,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":3848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["73",{"_index":3572,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":3553,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1717,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["8.13.1",{"_index":3661,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":3546,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":2584,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"coverage.html":{}}}],["84",{"_index":3543,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":3582,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":3605,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":3560,"title":{},"body":{"coverage.html":{}}}],["8th",{"_index":1678,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["9",{"_index":3849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.]/g",{"_index":399,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/variables.html":{}}}],["9/10",{"_index":3564,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":3592,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":3563,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":366,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["91",{"_index":3589,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":3549,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":3615,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":3568,"title":{},"body":{"coverage.html":{}}}],["9]/g",{"_index":397,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/variables.html":{}}}],["9_",{"_index":2790,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["_",{"_index":2657,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["_background",{"_index":2054,"title":{},"body":{"components/TsIconComponent.html":{}}}],["_border",{"_index":1027,"title":{},"body":{"components/TsCardComponent.html":{}}}],["_cdkcolumndef",{"_index":3008,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_columncount",{"_index":897,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_columnhead",{"_index":909,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_columnvalid",{"_index":913,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_currentpageindex",{"_index":2445,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["_data",{"_index":3178,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["_debouncedelay",{"_index":242,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["_direct",{"_index":2919,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["_disableclear",{"_index":2924,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["_formatmodelvaluefn",{"_index":2606,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_formatuilabelfn",{"_index":2599,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_formatuisublabelfn",{"_index":2602,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_handleclick",{"_index":2999,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_id",{"_index":887,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["_initiald",{"_index":1882,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["_intl",{"_index":3007,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_intl.chang",{"_index":3012,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_intl.sortdescriptionlabel(id",{"_index":3043,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["_ischeck",{"_index":1413,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["_isdis",{"_index":2710,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_issort",{"_index":2998,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_isvisu",{"_index":2610,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_iszerobas",{"_index":2435,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["_maxdat",{"_index":1869,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["_maxrow",{"_index":892,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_mindat",{"_index":1870,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["_minimumcharact",{"_index":264,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["_name",{"_index":2613,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_option",{"_index":2616,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_parent",{"_index":1215,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["_renderchangessubscript",{"_index":3179,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["_renderdata",{"_index":3180,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["_rowcount",{"_index":902,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_selectionscontrol",{"_index":282,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["_small",{"_index":2619,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_sort",{"_index":3006,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_sort._statechang",{"_index":3011,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_sort.direct",{"_index":3044,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["_spacing.scss",{"_index":3853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_statechang",{"_index":2910,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["_svgicon",{"_index":2055,"title":{},"body":{"components/TsIconComponent.html":{}}}],["_theme",{"_index":1028,"title":{},"body":{"components/TsCardComponent.html":{}}}],["_totalrecord",{"_index":2453,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["_tssortheadermixinbas",{"_index":2990,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_tssortmixinbas",{"_index":2906,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_uid",{"_index":860,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["_updatechangesubscript",{"_index":3182,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["_visual",{"_index":1281,"title":{},"body":{"components/TsChartComponent.html":{}}}],["abil",{"_index":958,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"injectables/TsValidationMessageService.html":{}}}],["abov",{"_index":709,"title":{},"body":{"modules/TerminusUIModule.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTooltipComponent.html":{},"contributing.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["absolut",{"_index":1637,"title":{},"body":{"components/TsCopyComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"contributing.html":{}}}],["abstract",{"_index":2581,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsValidationMessageService.html":{},"coverage.html":{},"index.html":{}}}],["abstractcontrol",{"_index":1745,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["accent",{"_index":2094,"title":{},"body":{"components/TsIconComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":531,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsTableDataSource.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["access",{"_index":229,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["accessor",{"_index":408,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/variables.html":{}}}],["accident",{"_index":965,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["accord",{"_index":944,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["account",{"_index":2325,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["action",{"_index":485,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["actionnam",{"_index":2021,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["activ",{"_index":283,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["actual",{"_index":1316,"title":{},"body":{"components/TsChartComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["actual_compon",{"_index":1203,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["ad",{"_index":832,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"contributing.html":{}}}],["add",{"_index":339,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["add/remov",{"_index":2249,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["added(chip",{"_index":119,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["addheaders(headercount",{"_index":1008,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["addon",{"_index":3666,"title":{},"body":{"dependencies.html":{}}}],["addons/dist/createnumbermask",{"_index":394,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["address",{"_index":3291,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["addrows(rowcount",{"_index":931,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["adher",{"_index":3515,"title":{},"body":{"contributing.html":{}}}],["admin",{"_index":471,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["advis",{"_index":3519,"title":{},"body":{"contributing.html":{}}}],["affect",{"_index":2062,"title":{},"body":{"components/TsIconComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["afterviewinit",{"_index":138,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["ag",{"_index":3093,"title":{},"body":{"components/TsTableComponent.html":{}}}],["again",{"_index":1855,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["ago.pip",{"_index":2541,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["ago.pipe.t",{"_index":3227,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{},"coverage.html":{}}}],["ago.pipe.ts:16",{"_index":3230,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["ago/tim",{"_index":2540,"title":{},"body":{"modules/TsPipesModule.html":{},"pipes/TsTimeAgoPipe.html":{},"coverage.html":{}}}],["alert",{"_index":1656,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"index.html":{}}}],["alia",{"_index":2164,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["alias",{"_index":3801,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":2064,"title":{},"body":{"components/TsIconComponent.html":{}}}],["allcolumn",{"_index":3100,"title":{},"body":{"components/TsTableComponent.html":{}}}],["allerror",{"_index":880,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["allitem",{"_index":575,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["allow",{"_index":19,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"pipes/TsDatePipe.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["allowdecim",{"_index":380,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["allowedmaskshorcut",{"_index":407,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["allowedmaskshorcuts.indexof(valu",{"_index":436,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["alon",{"_index":2331,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["along",{"_index":3196,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["alpha.7",{"_index":3663,"title":{},"body":{"dependencies.html":{}}}],["alpha.7glob",{"_index":3720,"title":{},"body":{"index.html":{}}}],["alreadi",{"_index":333,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCopyComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["alter",{"_index":1051,"title":{},"body":{"components/TsCardComponent.html":{}}}],["altern",{"_index":2591,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["alway",{"_index":1329,"title":{},"body":{"components/TsChartComponent.html":{},"contributing.html":{}}}],["alwayshidden",{"_index":466,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["am4chart",{"_index":1322,"title":{},"body":{"components/TsChartComponent.html":{}}}],["am4charts.chart",{"_index":1336,"title":{},"body":{"components/TsChartComponent.html":{}}}],["am4cor",{"_index":1320,"title":{},"body":{"components/TsChartComponent.html":{}}}],["am4map",{"_index":1324,"title":{},"body":{"components/TsChartComponent.html":{}}}],["am4themes_anim",{"_index":1326,"title":{},"body":{"components/TsChartComponent.html":{}}}],["am4themes_materi",{"_index":1328,"title":{},"body":{"components/TsChartComponent.html":{}}}],["amchart",{"_index":718,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"index.html":{}}}],["amcharts.core.usetheme(them",{"_index":738,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["amcharts.servic",{"_index":1349,"title":{},"body":{"components/TsChartComponent.html":{},"modules/TsChartModule.html":{}}}],["amcharts.them",{"_index":736,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["amcharts.themes.length",{"_index":737,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["amcharts/amcharts4",{"_index":3650,"title":{},"body":{"dependencies.html":{}}}],["amcharts/amcharts4/chart",{"_index":1323,"title":{},"body":{"components/TsChartComponent.html":{}}}],["amcharts/amcharts4/cor",{"_index":1321,"title":{},"body":{"components/TsChartComponent.html":{}}}],["amcharts/amcharts4/map",{"_index":1325,"title":{},"body":{"components/TsChartComponent.html":{}}}],["amcharts/amcharts4/themes/anim",{"_index":1327,"title":{},"body":{"components/TsChartComponent.html":{}}}],["amchartsfactori",{"_index":1330,"title":{},"body":{"components/TsChartComponent.html":{}}}],["amchartsservic",{"_index":1289,"title":{},"body":{"components/TsChartComponent.html":{}}}],["amount",{"_index":2426,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["and/or",{"_index":1842,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"license.html":{}}}],["angular",{"_index":660,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{},"index.html":{}}}],["angular'",{"_index":1395,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["angular/anim",{"_index":3655,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/overlay",{"_index":1509,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"modules/TsConfirmationModule.html":{}}}],["angular/cdk/port",{"_index":1511,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["angular/cdk/t",{"_index":1245,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{}}}],["angular/common",{"_index":745,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":3122,"title":{},"body":{"components/TsTableComponent.html":{}}}],["angular/cor",{"_index":149,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":809,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/form",{"_index":151,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsPaginatorModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"dependencies.html":{}}}],["angular/http",{"_index":3659,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplet",{"_index":155,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["angular/material/button",{"_index":798,"title":{},"body":{"modules/TsButtonModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{}}}],["angular/material/checkbox",{"_index":1401,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{}}}],["angular/material/chip",{"_index":750,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["angular/material/cor",{"_index":1210,"title":{},"body":{"modules/TsCardModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsRadioGroupModule.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["angular/material/datepick",{"_index":1747,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{}}}],["angular/material/icon",{"_index":2090,"title":{},"body":{"components/TsIconComponent.html":{},"modules/TsIconModule.html":{}}}],["angular/material/input",{"_index":752,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsInputModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["angular/material/menu",{"_index":2337,"title":{},"body":{"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{}}}],["angular/material/progress",{"_index":754,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsButtonModule.html":{},"modules/TsFileUploadModule.html":{}}}],["angular/material/radio",{"_index":2573,"title":{},"body":{"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{}}}],["angular/material/select",{"_index":2831,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["angular/material/slid",{"_index":2875,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{}}}],["angular/material/tooltip",{"_index":3279,"title":{},"body":{"modules/TsTooltipModule.html":{}}}],["angular/platform",{"_index":2089,"title":{},"body":{"components/TsIconComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":2144,"title":{},"body":{"modules/TsLinkModule.html":{},"modules/TsNavigationModule.html":{},"dependencies.html":{}}}],["anim",{"_index":2989,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["animate(sort_animation_transit",{"_index":3869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationcurves.standard_curv",{"_index":3858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationdurations.ent",{"_index":3857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animations.t",{"_index":3607,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["anoth",{"_index":601,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["answer",{"_index":3476,"title":{},"body":{"contributing.html":{}}}],["anyth",{"_index":306,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["anytim",{"_index":1775,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsTableComponent.html":{}}}],["api",{"_index":74,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["app",{"_index":1340,"title":{},"body":{"components/TsChartComponent.html":{},"components/TsLinkComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["appear",{"_index":830,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"contributing.html":{}}}],["appeas",{"_index":1962,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["appli",{"_index":1333,"title":{},"body":{"components/TsChartComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["applic",{"_index":2319,"title":{},"body":{"components/TsMenuComponent.html":{},"index.html":{}}}],["applicationref",{"_index":2159,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["appref",{"_index":2158,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["appropri",{"_index":1364,"title":{},"body":{"components/TsChartComponent.html":{},"contributing.html":{}}}],["area",{"_index":2567,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"index.html":{}}}],["argument",{"_index":1487,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["aria",{"_index":2025,"title":{},"body":{"components/TsIconButtonComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["ariadescribedbi",{"_index":2594,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["arialabel",{"_index":2587,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["arialabelledbi",{"_index":2592,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["aris",{"_index":833,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsTableComponent.html":{},"license.html":{}}}],["around",{"_index":1079,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsCopyComponent.html":{},"components/TsMenuComponent.html":{}}}],["arr",{"_index":975,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["arr.indexof(el",{"_index":976,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["array",{"_index":39,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["array.from(item",{"_index":576,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["arraycontainsobject",{"_index":166,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["arraycontainsobject(select",{"_index":335,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["arrow",{"_index":2992,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["arrow_drop_down",{"_index":2308,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["arrowposit",{"_index":3005,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["asc",{"_index":2888,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ascend",{"_index":3021,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["ask",{"_index":1503,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["aspect",{"_index":1038,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["aspectratio",{"_index":1030,"title":{},"body":{"components/TsCardComponent.html":{}}}],["aspectratio(valu",{"_index":1103,"title":{},"body":{"components/TsCardComponent.html":{}}}],["aspectratiopad",{"_index":1029,"title":{},"body":{"components/TsCardComponent.html":{}}}],["asset",{"_index":3712,"title":{},"body":{"index.html":{}}}],["assign",{"_index":1625,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["assist",{"_index":3672,"title":{},"body":{"index.html":{}}}],["associ",{"_index":1740,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsValidationMessagesComponent.html":{},"contributing.html":{},"license.html":{}}}],["assumpt",{"_index":3102,"title":{},"body":{"components/TsTableComponent.html":{}}}],["async",{"_index":2152,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["asynchron",{"_index":2848,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["attach",{"_index":363,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{}}}],["attempt",{"_index":828,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["attribut",{"_index":271,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["author",{"_index":3785,"title":{},"body":{"license.html":{}}}],["auto",{"_index":66,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["autocomplet",{"_index":13,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["autocomplete'},{'nam",{"_index":1120,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["autocomplete.compon",{"_index":755,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["autocomplete.component.html",{"_index":206,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["autocomplete.component.scss",{"_index":208,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["autocomplete/autocomplete.modul",{"_index":662,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["autocompletetrigg",{"_index":234,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["autocompletetrigger(valu",{"_index":232,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["autofocu",{"_index":758,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"index.html":{}}}],["autofocus.direct",{"_index":790,"title":{},"body":{"modules/TsAutofocusModule.html":{}}}],["autofocus/autofocus.modul",{"_index":663,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsInputModule.html":{}}}],["autom",{"_index":2704,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["automat",{"_index":2764,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{}}}],["autosubmit",{"_index":2756,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["avail",{"_index":40,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["availablespac",{"_index":515,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["avoid",{"_index":1688,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["axi",{"_index":1337,"title":{},"body":{"components/TsChartComponent.html":{},"index.html":{}}}],["b",{"_index":44,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["back",{"_index":1094,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{}}}],["backdropclass",{"_index":1530,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["background",{"_index":2056,"title":{},"body":{"components/TsIconComponent.html":{}}}],["background(valu",{"_index":2096,"title":{},"body":{"components/TsIconComponent.html":{}}}],["badg",{"_index":3694,"title":{},"body":{"index.html":{}}}],["bar",{"_index":1292,"title":{},"body":{"components/TsChartComponent.html":{},"modules/TsFileUploadModule.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["bar_valu",{"_index":2552,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["base",{"_index":428,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["base.compon",{"_index":714,"title":{},"body":{"modules/TerminusUIModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["base.component.t",{"_index":2643,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{},"coverage.html":{}}}],["base.component.ts:26",{"_index":2649,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:31",{"_index":2650,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:36",{"_index":2651,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:42",{"_index":2644,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:47",{"_index":2655,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:53",{"_index":2653,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:61",{"_index":2645,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:69",{"_index":2646,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:77",{"_index":2647,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:85",{"_index":2648,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["basic",{"_index":16,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["baz",{"_index":2554,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["baz_valu",{"_index":2553,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["be",{"_index":1834,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"contributing.html":{}}}],["befor",{"_index":134,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["begin",{"_index":598,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{}}}],["behavior",{"_index":2883,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"contributing.html":{}}}],["behaviorsubject",{"_index":160,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSelectedFile.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{}}}],["behaviorsubject(initialdata",{"_index":3209,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["behaviorsubject(this.filerefer",{"_index":1965,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["behaviorsubject(undefin",{"_index":1760,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["behind",{"_index":3843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["believ",{"_index":3690,"title":{},"body":{"index.html":{}}}],["below",{"_index":831,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["benjamin",{"_index":3730,"title":{},"body":{"index.html":{}}}],["best",{"_index":300,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"contributing.html":{},"index.html":{}}}],["beta.15",{"_index":3718,"title":{},"body":{"index.html":{}}}],["beta.16",{"_index":3658,"title":{},"body":{"dependencies.html":{}}}],["beta.50",{"_index":3652,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":2399,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["between",{"_index":584,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/variables.html":{}}}],["bind",{"_index":773,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"pipes/TsDatePipe.html":{},"classes/TsDatepickerInputEvent.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["bing",{"_index":2551,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["blob",{"_index":823,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["blob([join",{"_index":1013,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["blobgener",{"_index":915,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["block",{"_index":2088,"title":{},"body":{"components/TsIconComponent.html":{}}}],["blur",{"_index":418,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["bodi",{"_index":854,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["bodyportalhost",{"_index":2153,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["boilerpl",{"_index":2904,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["book",{"_index":3709,"title":{},"body":{"index.html":{}}}],["bookmark",{"_index":2042,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["boolean",{"_index":224,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["bootstrap",{"_index":618,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["border",{"_index":1031,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["border(valu",{"_index":1111,"title":{},"body":{"components/TsCardComponent.html":{}}}],["borderclass",{"_index":1075,"title":{},"body":{"components/TsCardComponent.html":{}}}],["both",{"_index":1769,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["bottom",{"_index":1101,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["bound",{"_index":1709,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["box",{"_index":2607,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["bracket",{"_index":382,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["branch",{"_index":3506,"title":{},"body":{"contributing.html":{}}}],["breadcrumb",{"_index":3695,"title":{},"body":{"index.html":{}}}],["break",{"_index":519,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["breakpoint",{"_index":566,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["breakwidth",{"_index":520,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["brian",{"_index":3740,"title":{},"body":{"index.html":{}}}],["brows",{"_index":3682,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browser",{"_index":1117,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"dependencies.html":{},"modules.html":{}}}],["budget",{"_index":2326,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["bug",{"_index":3456,"title":{},"body":{"contributing.html":{}}}],["built",{"_index":914,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["button",{"_index":501,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["button'",{"_index":1501,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["button'},{'nam",{"_index":1121,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["button.compon",{"_index":800,"title":{},"body":{"modules/TsButtonModule.html":{},"modules/TsIconButtonModule.html":{}}}],["button.component.html",{"_index":2020,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.scss",{"_index":2019,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.t",{"_index":2016,"title":{},"body":{"components/TsIconButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:50",{"_index":2027,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:56",{"_index":2029,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:62",{"_index":2030,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:68",{"_index":2031,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:74",{"_index":2032,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:80",{"_index":2035,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:82",{"_index":2024,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.modul",{"_index":681,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsFileUploadModule.html":{}}}],["button.module.t",{"_index":2047,"title":{},"body":{"modules/TsIconButtonModule.html":{}}}],["button/button.compon",{"_index":1516,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsMenuComponent.html":{}}}],["button/button.modul",{"_index":664,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsFileUploadModule.html":{},"components/TsIconButtonComponent.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMenuModule.html":{},"modules/TsPaginatorModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{}}}],["button/icon",{"_index":680,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsFileUploadModule.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"coverage.html":{}}}],["buttonact",{"_index":2748,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["buttontyp",{"_index":2022,"title":{},"body":{"components/TsIconButtonComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["bypass",{"_index":1986,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["byte",{"_index":1950,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/variables.html":{}}}],["bytes_per_kb",{"_index":1954,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":49,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"license.html":{}}}],["calcul",{"_index":1953,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/variables.html":{}}}],["calendar",{"_index":1828,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"index.html":{}}}],["call",{"_index":919,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsTableDataSource.html":{}}}],["callback",{"_index":1445,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsToggleComponent.html":{}}}],["can't",{"_index":3501,"title":{},"body":{"contributing.html":{}}}],["cancel",{"_index":1484,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{}}}],["candis",{"_index":2896,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["capabl",{"_index":3708,"title":{},"body":{"index.html":{}}}],["captur",{"_index":1236,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTableComponent.html":{}}}],["card",{"_index":1021,"title":{},"body":{"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["card'},{'nam",{"_index":1123,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["card.compon",{"_index":1211,"title":{},"body":{"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{}}}],["card.component.html",{"_index":1026,"title":{},"body":{"components/TsCardComponent.html":{}}}],["card.component.scss",{"_index":1025,"title":{},"body":{"components/TsCardComponent.html":{}}}],["card/card.modul",{"_index":665,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["card__titl",{"_index":1224,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["case",{"_index":920,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{}}}],["case.pip",{"_index":2539,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["case.pipe.t",{"_index":2867,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{},"pipes/TsTitleCasePipe.html":{},"coverage.html":{}}}],["case.pipe.ts:11",{"_index":2869,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["case/sent",{"_index":2538,"title":{},"body":{"modules/TsPipesModule.html":{},"pipes/TsSentenceCasePipe.html":{},"coverage.html":{}}}],["case/titl",{"_index":2542,"title":{},"body":{"modules/TsPipesModule.html":{},"pipes/TsTitleCasePipe.html":{},"coverage.html":{}}}],["cast",{"_index":1257,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["catch",{"_index":1654,"title":{},"body":{"components/TsCopyComponent.html":{},"components/TsTableComponent.html":{}}}],["catcherror",{"_index":3128,"title":{},"body":{"components/TsTableComponent.html":{}}}],["caus",{"_index":1623,"title":{},"body":{"components/TsCopyComponent.html":{},"contributing.html":{}}}],["cdk",{"_index":3014,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["cdk_row_templ",{"_index":2000,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdkcell",{"_index":1240,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["cdkcelldef",{"_index":1241,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["cdkcolumndef",{"_index":1242,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["cdkheadercel",{"_index":1243,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["cdkheadercelldef",{"_index":1244,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["cdkheaderrow",{"_index":1997,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdkheaderrowdef",{"_index":2001,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdkrow",{"_index":2002,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdkrowdef",{"_index":2003,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdktabl",{"_index":2993,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{}}}],["cdktablemodul",{"_index":3224,"title":{},"body":{"modules/TsTableModule.html":{}}}],["cell",{"_index":838,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{}}}],["cell'",{"_index":1007,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["cell'},{'nam",{"_index":1184,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["center",{"_index":1043,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{}}}],["centeredcont",{"_index":1032,"title":{},"body":{"components/TsCardComponent.html":{}}}],["certain",{"_index":837,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["chain",{"_index":1365,"title":{},"body":{"components/TsChartComponent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["chanc",{"_index":3482,"title":{},"body":{"contributing.html":{}}}],["chang",{"_index":89,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"contributing.html":{}}}],["change(select",{"_index":125,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["changedetect",{"_index":210,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{}}}],["changedetectionstrategi",{"_index":139,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{}}}],["changedetectionstrategy.onpush",{"_index":211,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{}}}],["changedetectorref",{"_index":140,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{}}}],["changedetectorref.markforcheck",{"_index":3013,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["changelog",{"_index":3752,"title":{},"body":{"index.html":{}}}],["changepag",{"_index":2487,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["changes.hasownproperty('triggerformreset",{"_index":2256,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["changes.iszerobased.currentvalu",{"_index":2472,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["charact",{"_index":36,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["charg",{"_index":3768,"title":{},"body":{"license.html":{}}}],["charity&#x1f4bb",{"_index":3731,"title":{},"body":{"index.html":{}}}],["chart",{"_index":727,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["chart'},{'nam",{"_index":1125,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["chart.compon",{"_index":1384,"title":{},"body":{"modules/TsChartModule.html":{}}}],["chart.component.html",{"_index":1280,"title":{},"body":{"components/TsChartComponent.html":{}}}],["chart.component.scss",{"_index":1279,"title":{},"body":{"components/TsChartComponent.html":{}}}],["chart.responsive.en",{"_index":1375,"title":{},"body":{"components/TsChartComponent.html":{}}}],["chart/chart.modul",{"_index":666,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["chartdiv",{"_index":1282,"title":{},"body":{"components/TsChartComponent.html":{}}}],["chartiniti",{"_index":1286,"title":{},"body":{"components/TsChartComponent.html":{}}}],["check",{"_index":602,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["checkbox",{"_index":1393,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"index.html":{}}}],["checkbox'},{'nam",{"_index":1127,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["checkbox.compon",{"_index":1473,"title":{},"body":{"modules/TsCheckboxModule.html":{}}}],["checkbox.component.html",{"_index":1403,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1404,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["checkbox/checkbox.compon",{"_index":2251,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["checkbox/checkbox.modul",{"_index":667,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{}}}],["checkout",{"_index":3507,"title":{},"body":{"contributing.html":{}}}],["checkpar",{"_index":1216,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["child",{"_index":1044,"title":{},"body":{"components/TsCardComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["chip",{"_index":122,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"index.html":{}}}],["chips/select",{"_index":222,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["choic",{"_index":1561,"title":{},"body":{"components/TsConfirmationModalComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["chord",{"_index":1346,"title":{},"body":{"components/TsChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["chose",{"_index":337,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["chosen",{"_index":1506,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["circus_t",{"_index":3710,"title":{},"body":{"index.html":{}}}],["claim",{"_index":3788,"title":{},"body":{"license.html":{}}}],["clariti",{"_index":481,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["class",{"_index":176,"title":{"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsImageDimensions.html":{},"classes/TsRadioChange.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"classes/TsSortHeaderBase.html":{},"classes/TsTableDataSource.html":{},"classes/Version.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["class.t",{"_index":2093,"title":{},"body":{"components/TsIconComponent.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["clean",{"_index":452,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsConfirmationDirective.html":{}}}],["cleanvalue(valu",{"_index":454,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["clear",{"_index":1001,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"contributing.html":{}}}],["clearallrow",{"_index":1002,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["clearheadercel",{"_index":1004,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["cli",{"_index":3755,"title":{},"body":{"index.html":{}}}],["click",{"_index":497,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}}}],["click(ev",{"_index":1488,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["clickabl",{"_index":2566,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["clickev",{"_index":2023,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["client",{"_index":3177,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["clipboard",{"_index":1573,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["clone",{"_index":568,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["close",{"_index":1505,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"contributing.html":{}}}],["cluster_terminusuimodul",{"_index":619,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_terminusuimodule_declar",{"_index":620,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_terminusuimodule_export",{"_index":622,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_terminusuimodule_import",{"_index":621,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_terminusuimodule_provid",{"_index":623,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_tsautocompletemodul",{"_index":739,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"overview.html":{}}}],["cluster_tsautocompletemodule_declar",{"_index":740,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"overview.html":{}}}],["cluster_tsautocompletemodule_export",{"_index":742,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"overview.html":{}}}],["cluster_tsautocompletemodule_import",{"_index":741,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["cluster_tsautofocusmodul",{"_index":786,"title":{},"body":{"modules/TsAutofocusModule.html":{},"overview.html":{}}}],["cluster_tsautofocusmodule_declar",{"_index":787,"title":{},"body":{"modules/TsAutofocusModule.html":{},"overview.html":{}}}],["cluster_tsautofocusmodule_export",{"_index":788,"title":{},"body":{"modules/TsAutofocusModule.html":{},"overview.html":{}}}],["cluster_tsbuttonmodul",{"_index":791,"title":{},"body":{"modules/TsButtonModule.html":{},"overview.html":{}}}],["cluster_tsbuttonmodule_declar",{"_index":792,"title":{},"body":{"modules/TsButtonModule.html":{},"overview.html":{}}}],["cluster_tsbuttonmodule_export",{"_index":794,"title":{},"body":{"modules/TsButtonModule.html":{},"overview.html":{}}}],["cluster_tsbuttonmodule_import",{"_index":793,"title":{},"body":{"modules/TsButtonModule.html":{}}}],["cluster_tscardmodul",{"_index":1204,"title":{},"body":{"modules/TsCardModule.html":{},"overview.html":{}}}],["cluster_tscardmodule_declar",{"_index":1205,"title":{},"body":{"modules/TsCardModule.html":{},"overview.html":{}}}],["cluster_tscardmodule_export",{"_index":1207,"title":{},"body":{"modules/TsCardModule.html":{},"overview.html":{}}}],["cluster_tscardmodule_import",{"_index":1206,"title":{},"body":{"modules/TsCardModule.html":{}}}],["cluster_tschartmodul",{"_index":1379,"title":{},"body":{"modules/TsChartModule.html":{},"overview.html":{}}}],["cluster_tschartmodule_declar",{"_index":1380,"title":{},"body":{"modules/TsChartModule.html":{},"overview.html":{}}}],["cluster_tschartmodule_export",{"_index":1381,"title":{},"body":{"modules/TsChartModule.html":{},"overview.html":{}}}],["cluster_tschartmodule_provid",{"_index":1382,"title":{},"body":{"modules/TsChartModule.html":{},"overview.html":{}}}],["cluster_tscheckboxmodul",{"_index":1467,"title":{},"body":{"modules/TsCheckboxModule.html":{},"overview.html":{}}}],["cluster_tscheckboxmodule_declar",{"_index":1468,"title":{},"body":{"modules/TsCheckboxModule.html":{},"overview.html":{}}}],["cluster_tscheckboxmodule_export",{"_index":1470,"title":{},"body":{"modules/TsCheckboxModule.html":{},"overview.html":{}}}],["cluster_tscheckboxmodule_tscheckboxcomponent_provid",{"_index":1469,"title":{},"body":{"modules/TsCheckboxModule.html":{},"overview.html":{}}}],["cluster_tsconfirmationmodul",{"_index":1564,"title":{},"body":{"modules/TsConfirmationModule.html":{},"overview.html":{}}}],["cluster_tsconfirmationmodule_declar",{"_index":1565,"title":{},"body":{"modules/TsConfirmationModule.html":{},"overview.html":{}}}],["cluster_tsconfirmationmodule_export",{"_index":1567,"title":{},"body":{"modules/TsConfirmationModule.html":{},"overview.html":{}}}],["cluster_tsconfirmationmodule_import",{"_index":1566,"title":{},"body":{"modules/TsConfirmationModule.html":{}}}],["cluster_tscopymodul",{"_index":1659,"title":{},"body":{"modules/TsCopyModule.html":{},"overview.html":{}}}],["cluster_tscopymodule_declar",{"_index":1660,"title":{},"body":{"modules/TsCopyModule.html":{},"overview.html":{}}}],["cluster_tscopymodule_export",{"_index":1662,"title":{},"body":{"modules/TsCopyModule.html":{},"overview.html":{}}}],["cluster_tscopymodule_import",{"_index":1661,"title":{},"body":{"modules/TsCopyModule.html":{}}}],["cluster_tscsventrymodul",{"_index":801,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"overview.html":{}}}],["cluster_tscsventrymodule_declar",{"_index":802,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"overview.html":{}}}],["cluster_tscsventrymodule_export",{"_index":804,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"overview.html":{}}}],["cluster_tscsventrymodule_import",{"_index":803,"title":{},"body":{"modules/TsCSVEntryModule.html":{}}}],["cluster_tsdatepickermodul",{"_index":1893,"title":{},"body":{"modules/TsDatepickerModule.html":{},"overview.html":{}}}],["cluster_tsdatepickermodule_declar",{"_index":1894,"title":{},"body":{"modules/TsDatepickerModule.html":{},"overview.html":{}}}],["cluster_tsdatepickermodule_export",{"_index":1897,"title":{},"body":{"modules/TsDatepickerModule.html":{},"overview.html":{}}}],["cluster_tsdatepickermodule_import",{"_index":1896,"title":{},"body":{"modules/TsDatepickerModule.html":{}}}],["cluster_tsdatepickermodule_tsdatepickercomponent_provid",{"_index":1895,"title":{},"body":{"modules/TsDatepickerModule.html":{},"overview.html":{}}}],["cluster_tsdaterangemodul",{"_index":1819,"title":{},"body":{"modules/TsDateRangeModule.html":{},"overview.html":{}}}],["cluster_tsdaterangemodule_declar",{"_index":1820,"title":{},"body":{"modules/TsDateRangeModule.html":{},"overview.html":{}}}],["cluster_tsdaterangemodule_export",{"_index":1822,"title":{},"body":{"modules/TsDateRangeModule.html":{},"overview.html":{}}}],["cluster_tsdaterangemodule_import",{"_index":1821,"title":{},"body":{"modules/TsDateRangeModule.html":{}}}],["cluster_tsfileuploadmodul",{"_index":1931,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsfileuploadmodule_declar",{"_index":1932,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsfileuploadmodule_export",{"_index":1934,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsfileuploadmodule_import",{"_index":1933,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["cluster_tsfileuploadmodule_provid",{"_index":1935,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsiconbuttonmodul",{"_index":2043,"title":{},"body":{"modules/TsIconButtonModule.html":{},"overview.html":{}}}],["cluster_tsiconbuttonmodule_declar",{"_index":2044,"title":{},"body":{"modules/TsIconButtonModule.html":{},"overview.html":{}}}],["cluster_tsiconbuttonmodule_export",{"_index":2046,"title":{},"body":{"modules/TsIconButtonModule.html":{},"overview.html":{}}}],["cluster_tsiconbuttonmodule_import",{"_index":2045,"title":{},"body":{"modules/TsIconButtonModule.html":{}}}],["cluster_tsiconmodul",{"_index":2101,"title":{},"body":{"modules/TsIconModule.html":{},"overview.html":{}}}],["cluster_tsiconmodule_declar",{"_index":2102,"title":{},"body":{"modules/TsIconModule.html":{},"overview.html":{}}}],["cluster_tsiconmodule_export",{"_index":2103,"title":{},"body":{"modules/TsIconModule.html":{},"overview.html":{}}}],["cluster_tsinputmodul",{"_index":2112,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["cluster_tsinputmodule_declar",{"_index":2113,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["cluster_tsinputmodule_export",{"_index":2116,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["cluster_tsinputmodule_import",{"_index":2115,"title":{},"body":{"modules/TsInputModule.html":{}}}],["cluster_tsinputmodule_provid",{"_index":2117,"title":{},"body":{"modules/TsInputModule.html":{}}}],["cluster_tsinputmodule_tsinputcomponent_provid",{"_index":2114,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["cluster_tslinkmodul",{"_index":2138,"title":{},"body":{"modules/TsLinkModule.html":{},"overview.html":{}}}],["cluster_tslinkmodule_declar",{"_index":2139,"title":{},"body":{"modules/TsLinkModule.html":{},"overview.html":{}}}],["cluster_tslinkmodule_export",{"_index":2141,"title":{},"body":{"modules/TsLinkModule.html":{},"overview.html":{}}}],["cluster_tslinkmodule_import",{"_index":2140,"title":{},"body":{"modules/TsLinkModule.html":{}}}],["cluster_tsloadingoverlaymodul",{"_index":2193,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{},"overview.html":{}}}],["cluster_tsloadingoverlaymodule_declar",{"_index":2194,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{},"overview.html":{}}}],["cluster_tsloadingoverlaymodule_export",{"_index":2195,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{},"overview.html":{}}}],["cluster_tsloginformmodul",{"_index":2263,"title":{},"body":{"modules/TsLoginFormModule.html":{},"overview.html":{}}}],["cluster_tsloginformmodule_declar",{"_index":2264,"title":{},"body":{"modules/TsLoginFormModule.html":{},"overview.html":{}}}],["cluster_tsloginformmodule_export",{"_index":2266,"title":{},"body":{"modules/TsLoginFormModule.html":{},"overview.html":{}}}],["cluster_tsloginformmodule_import",{"_index":2265,"title":{},"body":{"modules/TsLoginFormModule.html":{}}}],["cluster_tsloginformmodule_provid",{"_index":2267,"title":{},"body":{"modules/TsLoginFormModule.html":{}}}],["cluster_tsmaskmodul",{"_index":2270,"title":{},"body":{"modules/TsMaskModule.html":{},"overview.html":{}}}],["cluster_tsmaskmodule_declar",{"_index":2271,"title":{},"body":{"modules/TsMaskModule.html":{},"overview.html":{}}}],["cluster_tsmaskmodule_export",{"_index":2273,"title":{},"body":{"modules/TsMaskModule.html":{},"overview.html":{}}}],["cluster_tsmaskmodule_tsmaskdirective_provid",{"_index":2272,"title":{},"body":{"modules/TsMaskModule.html":{},"overview.html":{}}}],["cluster_tsmenumodul",{"_index":2345,"title":{},"body":{"modules/TsMenuModule.html":{},"overview.html":{}}}],["cluster_tsmenumodule_declar",{"_index":2346,"title":{},"body":{"modules/TsMenuModule.html":{},"overview.html":{}}}],["cluster_tsmenumodule_export",{"_index":2348,"title":{},"body":{"modules/TsMenuModule.html":{},"overview.html":{}}}],["cluster_tsmenumodule_import",{"_index":2347,"title":{},"body":{"modules/TsMenuModule.html":{}}}],["cluster_tsnavigationmodul",{"_index":2382,"title":{},"body":{"modules/TsNavigationModule.html":{},"overview.html":{}}}],["cluster_tsnavigationmodule_declar",{"_index":2383,"title":{},"body":{"modules/TsNavigationModule.html":{},"overview.html":{}}}],["cluster_tsnavigationmodule_export",{"_index":2385,"title":{},"body":{"modules/TsNavigationModule.html":{},"overview.html":{}}}],["cluster_tsnavigationmodule_import",{"_index":2384,"title":{},"body":{"modules/TsNavigationModule.html":{}}}],["cluster_tspaginatormodul",{"_index":2519,"title":{},"body":{"modules/TsPaginatorModule.html":{},"overview.html":{}}}],["cluster_tspaginatormodule_declar",{"_index":2520,"title":{},"body":{"modules/TsPaginatorModule.html":{},"overview.html":{}}}],["cluster_tspaginatormodule_export",{"_index":2522,"title":{},"body":{"modules/TsPaginatorModule.html":{},"overview.html":{}}}],["cluster_tspaginatormodule_import",{"_index":2521,"title":{},"body":{"modules/TsPaginatorModule.html":{}}}],["cluster_tspipesmodul",{"_index":2525,"title":{},"body":{"modules/TsPipesModule.html":{},"overview.html":{}}}],["cluster_tspipesmodule_declar",{"_index":2526,"title":{},"body":{"modules/TsPipesModule.html":{},"overview.html":{}}}],["cluster_tspipesmodule_export",{"_index":2527,"title":{},"body":{"modules/TsPipesModule.html":{},"overview.html":{}}}],["cluster_tsradiogroupmodul",{"_index":2633,"title":{},"body":{"modules/TsRadioGroupModule.html":{},"overview.html":{}}}],["cluster_tsradiogroupmodule_declar",{"_index":2634,"title":{},"body":{"modules/TsRadioGroupModule.html":{},"overview.html":{}}}],["cluster_tsradiogroupmodule_export",{"_index":2637,"title":{},"body":{"modules/TsRadioGroupModule.html":{},"overview.html":{}}}],["cluster_tsradiogroupmodule_import",{"_index":2636,"title":{},"body":{"modules/TsRadioGroupModule.html":{}}}],["cluster_tsradiogroupmodule_tsradiogroupcomponent_provid",{"_index":2635,"title":{},"body":{"modules/TsRadioGroupModule.html":{},"overview.html":{}}}],["cluster_tsscrollbarsmodul",{"_index":2739,"title":{},"body":{"modules/TsScrollbarsModule.html":{},"overview.html":{}}}],["cluster_tsscrollbarsmodule_declar",{"_index":2740,"title":{},"body":{"modules/TsScrollbarsModule.html":{},"overview.html":{}}}],["cluster_tsscrollbarsmodule_export",{"_index":2741,"title":{},"body":{"modules/TsScrollbarsModule.html":{},"overview.html":{}}}],["cluster_tssearchmodul",{"_index":2817,"title":{},"body":{"modules/TsSearchModule.html":{},"overview.html":{}}}],["cluster_tssearchmodule_declar",{"_index":2818,"title":{},"body":{"modules/TsSearchModule.html":{},"overview.html":{}}}],["cluster_tssearchmodule_export",{"_index":2820,"title":{},"body":{"modules/TsSearchModule.html":{},"overview.html":{}}}],["cluster_tssearchmodule_import",{"_index":2819,"title":{},"body":{"modules/TsSearchModule.html":{}}}],["cluster_tsselectmodul",{"_index":2823,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["cluster_tsselectmodule_declar",{"_index":2824,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["cluster_tsselectmodule_export",{"_index":2827,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["cluster_tsselectmodule_import",{"_index":2826,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["cluster_tsselectmodule_tsselectcomponent_provid",{"_index":2825,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["cluster_tssortmodul",{"_index":3059,"title":{},"body":{"modules/TsSortModule.html":{},"overview.html":{}}}],["cluster_tssortmodule_declar",{"_index":3060,"title":{},"body":{"modules/TsSortModule.html":{},"overview.html":{}}}],["cluster_tssortmodule_export",{"_index":3061,"title":{},"body":{"modules/TsSortModule.html":{},"overview.html":{}}}],["cluster_tsspacingmodul",{"_index":3069,"title":{},"body":{"modules/TsSpacingModule.html":{},"overview.html":{}}}],["cluster_tsspacingmodule_declar",{"_index":3070,"title":{},"body":{"modules/TsSpacingModule.html":{},"overview.html":{}}}],["cluster_tsspacingmodule_export",{"_index":3071,"title":{},"body":{"modules/TsSpacingModule.html":{},"overview.html":{}}}],["cluster_tstablemodul",{"_index":3217,"title":{},"body":{"modules/TsTableModule.html":{},"overview.html":{}}}],["cluster_tstablemodule_declar",{"_index":3218,"title":{},"body":{"modules/TsTableModule.html":{},"overview.html":{}}}],["cluster_tstablemodule_export",{"_index":3221,"title":{},"body":{"modules/TsTableModule.html":{},"overview.html":{}}}],["cluster_tstablemodule_import",{"_index":3220,"title":{},"body":{"modules/TsTableModule.html":{}}}],["cluster_tstablemodule_tscelldefdirective_provid",{"_index":3219,"title":{},"body":{"modules/TsTableModule.html":{},"overview.html":{}}}],["cluster_tstogglemodul",{"_index":3254,"title":{},"body":{"modules/TsToggleModule.html":{},"overview.html":{}}}],["cluster_tstogglemodule_declar",{"_index":3255,"title":{},"body":{"modules/TsToggleModule.html":{},"overview.html":{}}}],["cluster_tstogglemodule_export",{"_index":3257,"title":{},"body":{"modules/TsToggleModule.html":{},"overview.html":{}}}],["cluster_tstogglemodule_tstogglecomponent_provid",{"_index":3256,"title":{},"body":{"modules/TsToggleModule.html":{},"overview.html":{}}}],["cluster_tstooltipmodul",{"_index":3274,"title":{},"body":{"modules/TsTooltipModule.html":{},"overview.html":{}}}],["cluster_tstooltipmodule_declar",{"_index":3275,"title":{},"body":{"modules/TsTooltipModule.html":{},"overview.html":{}}}],["cluster_tstooltipmodule_export",{"_index":3276,"title":{},"body":{"modules/TsTooltipModule.html":{},"overview.html":{}}}],["cluster_tsvalidationmessagesmodul",{"_index":3353,"title":{},"body":{"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["cluster_tsvalidationmessagesmodule_declar",{"_index":3354,"title":{},"body":{"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["cluster_tsvalidationmessagesmodule_export",{"_index":3355,"title":{},"body":{"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["cluster_tsvalidationmessagesmodule_provid",{"_index":3356,"title":{},"body":{"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["code",{"_index":400,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["codecov",{"_index":3759,"title":{},"body":{"index.html":{}}}],["coercearray",{"_index":162,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["coercearray(selections.slic",{"_index":288,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["coercebooleanproperti",{"_index":779,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["coercebooleanproperty(shouldproce",{"_index":1551,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["coercebooleanproperty(v",{"_index":1410,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["coercebooleanproperty(valu",{"_index":782,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["coercenumberproperti",{"_index":163,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(a.valu",{"_index":2517,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(b.valu",{"_index":2518,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(pag",{"_index":2443,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(page.valu",{"_index":2483,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(pagescount",{"_index":2500,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(record",{"_index":2451,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(valu",{"_index":241,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["coercion/i",{"_index":3619,"title":{},"body":{"coverage.html":{}}}],["collaps",{"_index":3825,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["collect",{"_index":402,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["color",{"_index":1099,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["color(acc",{"_index":2086,"title":{},"body":{"components/TsIconComponent.html":{}}}],["color(pur",{"_index":2039,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["column",{"_index":815,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsMenuComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"index.html":{}}}],["column'",{"_index":1237,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{}}}],["column.minwidth",{"_index":1261,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["column.nowrap",{"_index":1258,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["columncount",{"_index":896,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["columncount(valu",{"_index":893,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["columndef",{"_index":1253,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["columndef.cssclassfriendlynam",{"_index":1251,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["columnhead",{"_index":908,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["columnheaders(valu",{"_index":903,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["columns[i",{"_index":2329,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["columnvalid",{"_index":912,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["columnvalidators(valu",{"_index":910,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["come",{"_index":52,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCopyComponent.html":{},"index.html":{}}}],["comment",{"_index":3133,"title":{},"body":{"components/TsTableComponent.html":{}}}],["commit",{"_index":3504,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["commitizen",{"_index":3754,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":744,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["compar",{"_index":93,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"miscellaneous/typealiases.html":{}}}],["comparatorfn",{"_index":269,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["comparedd",{"_index":3229,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["comparison",{"_index":425,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["compat",{"_index":3665,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":571,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}}}],["complient",{"_index":1276,"title":{},"body":{"components/TsChartComponent.html":{}}}],["compon",{"_index":48,"title":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["component_templ",{"_index":1119,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["componentfactoryresolv",{"_index":2157,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["componentport",{"_index":1510,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["componentportal(tsconfirmationmodalcompon",{"_index":1544,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["componentportal(tsloadingoverlaycompon",{"_index":2187,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["compress",{"_index":3116,"title":{},"body":{"components/TsTableComponent.html":{}}}],["concis",{"_index":3521,"title":{},"body":{"contributing.html":{}}}],["concret",{"_index":1341,"title":{},"body":{"components/TsChartComponent.html":{}}}],["condit",{"_index":3777,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":3448,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":1614,"title":{},"body":{"components/TsCopyComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["config.imagedimens",{"_index":3329,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["config.maxd",{"_index":3324,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["config.mind",{"_index":3327,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["config[validatornam",{"_index":3331,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["confirm",{"_index":1129,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["confirmation.direct",{"_index":1571,"title":{},"body":{"modules/TsConfirmationModule.html":{}}}],["confirmation/confirmation.modul",{"_index":668,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["conform",{"_index":1037,"title":{},"body":{"components/TsCardComponent.html":{}}}],["connect",{"_index":3183,"title":{},"body":{"classes/TsTableDataSource.html":{},"license.html":{}}}],["connectedpositionstrategi",{"_index":1507,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["consid",{"_index":2401,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["consist",{"_index":2077,"title":{},"body":{"components/TsIconComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{}}}],["console.error",{"_index":1358,"title":{},"body":{"components/TsChartComponent.html":{}}}],["console.error(`tschartcompon",{"_index":1377,"title":{},"body":{"components/TsChartComponent.html":{}}}],["console.log('demo",{"_index":3150,"title":{},"body":{"components/TsTableComponent.html":{}}}],["console.log('select",{"_index":120,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["console.log('set",{"_index":279,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["console.warn('github",{"_index":3157,"title":{},"body":{"components/TsTableComponent.html":{}}}],["const",{"_index":127,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{}}}],["constant",{"_index":3669,"title":{},"body":{"index.html":{}}}],["constraint",{"_index":1927,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{}}}],["constraint.height.min",{"_index":1992,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["constraint.width.min",{"_index":1993,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["constraints.length",{"_index":1991,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["constraints.t",{"_index":1924,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["constructor",{"_index":294,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{}}}],["constructor(_intl",{"_index":3027,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["constructor(amchart",{"_index":719,"title":{},"body":{"injectables/TsAmChartsService.html":{}}}],["constructor(changedetectorref",{"_index":1428,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsNavigationComponent.html":{}}}],["constructor(columndef",{"_index":1248,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["constructor(documentservic",{"_index":1584,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["constructor(elementref",{"_index":766,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["constructor(fil",{"_index":2835,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["constructor(formbuild",{"_index":2218,"title":{},"body":{"components/TsLoginFormComponent.html":{},"components/TsSearchComponent.html":{}}}],["constructor(ful",{"_index":3429,"title":{},"body":{"classes/Version.html":{}}}],["constructor(initialdata",{"_index":3185,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["constructor(maticonregistri",{"_index":2058,"title":{},"body":{"components/TsIconComponent.html":{}}}],["constructor(par",{"_index":1219,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["constructor(priv",{"_index":3165,"title":{},"body":{"components/TsTableComponent.html":{}}}],["constructor(publ",{"_index":3434,"title":{},"body":{"classes/Version.html":{}}}],["constructor(validationmessageservic",{"_index":3336,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["constructor(width",{"_index":2108,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["constructor(windowservic",{"_index":1907,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["constructor(zon",{"_index":1287,"title":{},"body":{"components/TsChartComponent.html":{}}}],["consum",{"_index":345,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChartComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/variables.html":{}}}],["contain",{"_index":182,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":15,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"index.html":{}}}],["content.row",{"_index":953,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["content.rows.length",{"_index":952,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["content_copi",{"_index":1603,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["context",{"_index":2429,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["continu",{"_index":1549,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["contract",{"_index":3791,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":3443,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contributor",{"_index":3446,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["control",{"_index":275,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["control'",{"_index":3391,"title":{},"body":{"injectables/TsValidatorsService.html":{},"index.html":{}}}],["control.setvalid",{"_index":1856,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["control.t",{"_index":3620,"title":{},"body":{"coverage.html":{}}}],["control.updatevalueandvalid",{"_index":1859,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["controlvalueaccessor",{"_index":390,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["convent",{"_index":3514,"title":{},"body":{"contributing.html":{}}}],["convert",{"_index":1888,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"pipes/TsTimeAgoPipe.html":{},"index.html":{}}}],["cooki",{"_index":2253,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["coordin",{"_index":3471,"title":{},"body":{"contributing.html":{}}}],["copi",{"_index":510,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{},"license.html":{}}}],["copy'},{'nam",{"_index":1132,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["copy.compon",{"_index":1664,"title":{},"body":{"modules/TsCopyModule.html":{}}}],["copy.component.html",{"_index":1576,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["copy.component.scss",{"_index":1575,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["copy/copy.modul",{"_index":669,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["copyright",{"_index":3761,"title":{},"body":{"license.html":{}}}],["copytoclipboard",{"_index":1579,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["copytoclipboard(text",{"_index":1589,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["core",{"_index":726,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"dependencies.html":{}}}],["core/dist/textmaskcor",{"_index":392,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["coreyterminator&#x1f4bb",{"_index":3737,"title":{},"body":{"index.html":{}}}],["corner",{"_index":1097,"title":{},"body":{"components/TsCardComponent.html":{}}}],["correct",{"_index":458,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"injectables/TsValidationMessageService.html":{}}}],["correctli",{"_index":2087,"title":{},"body":{"components/TsIconComponent.html":{}}}],["count",{"_index":37,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["coverag",{"_index":3541,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["craft",{"_index":3473,"title":{},"body":{"contributing.html":{}}}],["creat",{"_index":45,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["created_at",{"_index":3163,"title":{},"body":{"components/TsTableComponent.html":{}}}],["createdrow",{"_index":940,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["createnumbermask",{"_index":393,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["createoverlay",{"_index":1482,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["createpagesarray(tot",{"_index":2508,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["createtextmaskinputel",{"_index":391,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["createtextmaskinputelement(maskopt",{"_index":451,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["credit",{"_index":3292,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["creditcard",{"_index":3299,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["creditcardmessag",{"_index":3293,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creditcardvalid",{"_index":3360,"title":{},"body":{"injectables/TsValidatorsService.html":{},"coverage.html":{}}}],["css",{"_index":180,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["csv",{"_index":670,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["csv_icon",{"_index":2091,"title":{},"body":{"components/TsIconComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ctr",{"_index":1743,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["ctrl",{"_index":1741,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["ctrl+c",{"_index":1658,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ctrl.enabl",{"_index":1744,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["currenc",{"_index":369,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["currency|number|percentag",{"_index":379,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["current",{"_index":293,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["currenthidden",{"_index":605,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["currenthidden.shift",{"_index":606,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["currentmask",{"_index":421,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["currentpag",{"_index":2486,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentpagechanged(pag",{"_index":2482,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentpageindex",{"_index":2444,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentpageindex(pag",{"_index":2441,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentpagelabel",{"_index":2425,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentqueri",{"_index":2799,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["currentvis",{"_index":592,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["currentvisible.pop",{"_index":595,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["cursor",{"_index":3713,"title":{},"body":{"index.html":{}}}],["custom",{"_index":27,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSlideToggleChange.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["custom_checkbox_control_value_accessor",{"_index":1402,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["custom_datepicker_control_value_accessor",{"_index":1863,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["custom_input_control_value_accessor",{"_index":2118,"title":{},"body":{"modules/TsInputModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["custom_radio_control_value_accessor",{"_index":2577,"title":{},"body":{"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["custom_select_control_value_accessor",{"_index":2828,"title":{},"body":{"modules/TsSelectModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["custom_toggle_control_value_accessor",{"_index":2876,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["cycl",{"_index":322,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["d",{"_index":1836,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"contributing.html":{}}}],["d.getday",{"_index":1837,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["damag",{"_index":3789,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2040,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["data",{"_index":541,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"pipes/TsDatePipe.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"pipes/TsSentenceCasePipe.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"coverage.html":{}}}],["data(data",{"_index":3205,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["data.item",{"_index":3153,"title":{},"body":{"components/TsTableComponent.html":{}}}],["data.total_count",{"_index":3152,"title":{},"body":{"components/TsTableComponent.html":{}}}],["databas",{"_index":3164,"title":{},"body":{"components/TsTableComponent.html":{}}}],["datasourc",{"_index":3088,"title":{},"body":{"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["datatorend",{"_index":3087,"title":{},"body":{"components/TsTableComponent.html":{}}}],["datatorender;dynam",{"_index":3099,"title":{},"body":{"components/TsTableComponent.html":{}}}],["date",{"_index":673,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["date(2017",{"_index":1715,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["date(compareddate).toisostr",{"_index":3235,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["date(d",{"_index":1892,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["date(value).toisostr",{"_index":3234,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["date/date.pip",{"_index":2533,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["date1",{"_index":1723,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["date2",{"_index":1724,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["date:shortd",{"_index":3115,"title":{},"body":{"components/TsTableComponent.html":{}}}],["datefilt",{"_index":1872,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["dateformgroup",{"_index":1733,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["datepick",{"_index":1748,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"index.html":{}}}],["datepicker'},{'nam",{"_index":1136,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["datepicker.compon",{"_index":1901,"title":{},"body":{"modules/TsDatepickerModule.html":{}}}],["datepicker.component.html",{"_index":1866,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["datepicker.component.scss",{"_index":1867,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["datepicker/datepicker.modul",{"_index":676,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsDateRangeModule.html":{}}}],["datepickerev",{"_index":1792,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["datepickerevent.valu",{"_index":1795,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["daterang",{"_index":1730,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["dateselect",{"_index":1708,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["david",{"_index":3742,"title":{},"body":{"index.html":{}}}],["day",{"_index":1832,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["de",{"_index":56,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["deal",{"_index":1985,"title":{},"body":{"interfaces/TsFileValidations.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"pipes/TsTimeAgoPipe.html":{},"license.html":{}}}],["dealt",{"_index":3483,"title":{},"body":{"contributing.html":{}}}],["dean",{"_index":3748,"title":{},"body":{"index.html":{}}}],["debounc",{"_index":55,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["debounce(this.emitsubmit",{"_index":2782,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["debouncedelay",{"_index":92,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["debouncedelay(valu",{"_index":238,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["debouncedemit",{"_index":2749,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["debouncetim",{"_index":156,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["debouncetime(1",{"_index":927,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["debouncetime(this.debouncedelay",{"_index":316,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["decim",{"_index":361,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["decis",{"_index":3683,"title":{},"body":{"index.html":{}}}],["declar",{"_index":410,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"classes/TsSlideToggleChange.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["decor",{"_index":723,"title":{},"body":{"injectables/TsAmChartsService.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSortHeaderComponent.html":{}}}],["default",{"_index":58,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["default_high_record_messag",{"_index":2412,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["default_max_prefered_record",{"_index":2410,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["default_per_pag",{"_index":2409,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["default_records_per_page_opt",{"_index":2411,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["defaultcolumncount",{"_index":863,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["defaultmaxrow",{"_index":864,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["defaultopen",{"_index":2284,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["defaultrowcount",{"_index":861,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["defin",{"_index":11,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["definit",{"_index":355,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{}}}],["delay",{"_index":90,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["delet",{"_index":855,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"contributing.html":{}}}],["delete_forev",{"_index":2017,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["delete_foreverthem",{"_index":2037,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["deleterow(index",{"_index":996,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["demo",{"_index":1339,"title":{},"body":{"components/TsChartComponent.html":{},"index.html":{}}}],["demonstr",{"_index":2151,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["dep",{"_index":3057,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{},"miscellaneous/variables.html":{}}}],["depend",{"_index":616,"title":{"dependencies.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deprec",{"_index":1698,"title":{},"body":{"interfaces/TsDateRange.html":{},"index.html":{}}}],["deregist",{"_index":2957,"title":{},"body":{"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["deregister(sort",{"_index":2934,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["desc",{"_index":2889,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["descend",{"_index":3022,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["describ",{"_index":2010,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["describedbi",{"_index":2593,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["descript",{"_index":354,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{}}}],["deselect",{"_index":348,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["deselectoption(opt",{"_index":349,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["design",{"_index":3076,"title":{},"body":{"components/TsTableComponent.html":{},"index.html":{}}}],["desir",{"_index":1083,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["destin",{"_index":484,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLinkComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["destination.indexof('http",{"_index":613,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["destinationisvalid",{"_index":2488,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["destinationpag",{"_index":2485,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["destroy",{"_index":1296,"title":{},"body":{"components/TsChartComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{}}}],["destroychart",{"_index":1283,"title":{},"body":{"components/TsChartComponent.html":{}}}],["detail",{"_index":3537,"title":{},"body":{"contributing.html":{}}}],["detect",{"_index":321,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["detector",{"_index":2622,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["determin",{"_index":101,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["determineimagedimens",{"_index":2833,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["determineimagedimensions(callback",{"_index":2845,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["determineposit",{"_index":2155,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["determineposition(posit",{"_index":2167,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["determinepostalmask(valu",{"_index":459,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["develop",{"_index":3540,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["deviat",{"_index":3685,"title":{},"body":{"index.html":{}}}],["devon",{"_index":3746,"title":{},"body":{"index.html":{}}}],["diagnos",{"_index":3463,"title":{},"body":{"contributing.html":{}}}],["dialog",{"_index":3698,"title":{},"body":{"index.html":{}}}],["differ",{"_index":317,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsMenuComponent.html":{}}}],["dimens",{"_index":1923,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dimensions.t",{"_index":2107,"title":{},"body":{"classes/TsImageDimensions.html":{},"coverage.html":{}}}],["dimensions.ts:10",{"_index":2110,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["dimensions.ts:7",{"_index":2109,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["dimensions.ts:9",{"_index":2111,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["dir",{"_index":972,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["direct",{"_index":236,"title":{"directives/TsAutofocusDirective.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"directives/TsHeaderRowDefDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"directives/TsRowDefDirective.html":{},"directives/TsSortDirective.html":{},"directives/TsVerticalSpacingDirective.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["direction(direct",{"_index":2916,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["directli",{"_index":118,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsDateRange.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{},"contributing.html":{}}}],["disabl",{"_index":360,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["disableclear",{"_index":2893,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["disableclear(v",{"_index":2922,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["disableinitialselect",{"_index":1582,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["disallow",{"_index":1871,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["disconnect",{"_index":3184,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["discuss",{"_index":3470,"title":{},"body":{"contributing.html":{}}}],["dismiss",{"_index":1493,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["dismissoverlay",{"_index":1483,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["display",{"_index":28,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{}}}],["displayedcolumn",{"_index":3101,"title":{},"body":{"components/TsTableComponent.html":{}}}],["displaywith",{"_index":113,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["displaywith(valu",{"_index":248,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["distinctuntilchang",{"_index":157,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["distribut",{"_index":3772,"title":{},"body":{"license.html":{}}}],["div",{"_index":500,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["divid",{"_index":3699,"title":{},"body":{"index.html":{}}}],["divyameher&#x1f41b",{"_index":3745,"title":{},"body":{"index.html":{}}}],["doc",{"_index":2656,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{},"index.html":{}}}],["doctoc",{"_index":3758,"title":{},"body":{"index.html":{}}}],["document",{"_index":1314,"title":{},"body":{"components/TsChartComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documentservic",{"_index":916,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCopyComponent.html":{}}}],["doesn't",{"_index":1256,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["dom",{"_index":959,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["domportalhost",{"_index":2172,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["domsanit",{"_index":2060,"title":{},"body":{"components/TsIconComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["don't",{"_index":1355,"title":{},"body":{"components/TsChartComponent.html":{},"contributing.html":{}}}],["done",{"_index":3681,"title":{},"body":{"index.html":{}}}],["dot",{"_index":3268,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["down",{"_index":273,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["drag",{"_index":3622,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["driven",{"_index":30,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["drop",{"_index":272,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["dropdown",{"_index":43,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["dual",{"_index":3697,"title":{},"body":{"index.html":{}}}],["due",{"_index":304,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"contributing.html":{}}}],["dummi",{"_index":1159,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["dupe",{"_index":57,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["duplic",{"_index":102,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"contributing.html":{}}}],["dure",{"_index":1690,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"pipes/TsSentenceCasePipe.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["dynam",{"_index":323,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"dependencies.html":{}}}],["e",{"_index":1912,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["e.preventdefault",{"_index":1920,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["each",{"_index":503,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["edg",{"_index":968,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["effect",{"_index":377,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["effort",{"_index":3472,"title":{},"body":{"contributing.html":{}}}],["el",{"_index":783,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["el.focu",{"_index":784,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["element",{"_index":183,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["element'",{"_index":2590,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["element.posit",{"_index":3103,"title":{},"body":{"components/TsTableComponent.html":{}}}],["element.t",{"_index":3625,"title":{},"body":{"coverage.html":{}}}],["elementref",{"_index":141,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["elementref.nativeelement.classlist.add(`t",{"_index":1250,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["elemetn",{"_index":2036,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["email",{"_index":2200,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["email/password",{"_index":3703,"title":{},"body":{"index.html":{}}}],["emailmessag",{"_index":3290,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailvalid",{"_index":3362,"title":{},"body":{"injectables/TsValidatorsService.html":{},"coverage.html":{}}}],["emit",{"_index":135,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["emitsubmit",{"_index":2754,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["emitt",{"_index":295,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{}}}],["emoji",{"_index":3729,"title":{},"body":{"index.html":{}}}],["empti",{"_index":761,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["enabl",{"_index":416,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsAutofocusDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{}}}],["enabled/dis",{"_index":3877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enableditem",{"_index":534,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["enablequickcopi",{"_index":1583,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["encapsul",{"_index":212,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["encourag",{"_index":2398,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["end",{"_index":609,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsChartComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["endblur(d",{"_index":1817,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endcontrol",{"_index":1784,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endcontrol.valu",{"_index":1788,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enddat",{"_index":1732,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["enddate1",{"_index":1718,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enddate2",{"_index":1719,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enddatecontrol",{"_index":1754,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enddateselected(datepickerev",{"_index":1807,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endinitiald",{"_index":1722,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endmaxd",{"_index":1710,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endmind",{"_index":1711,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endplacehold",{"_index":1761,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endselect",{"_index":1707,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endvalu",{"_index":1787,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enforc",{"_index":3539,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["engin",{"_index":3673,"title":{},"body":{"index.html":{}}}],["enough",{"_index":589,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["ensur",{"_index":3513,"title":{},"body":{"contributing.html":{}}}],["enter",{"_index":54,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"index.html":{}}}],["entir",{"_index":2332,"title":{},"body":{"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["entri",{"_index":817,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"index.html":{}}}],["entry'},{'nam",{"_index":1122,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["entry.compon",{"_index":810,"title":{},"body":{"modules/TsCSVEntryModule.html":{}}}],["entry.component.html",{"_index":856,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["entry.component.scss",{"_index":857,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["entry.component.t",{"_index":812,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entry.modul",{"_index":672,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["entry.module.t",{"_index":807,"title":{},"body":{"modules/TsCSVEntryModule.html":{}}}],["entry/csv",{"_index":671,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entrycompon",{"_index":1569,"title":{},"body":{"modules/TsConfirmationModule.html":{},"modules/TsLoadingOverlayModule.html":{}}}],["equal",{"_index":3306,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["equaltocontrol",{"_index":3316,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["equaltocontrolvalid",{"_index":3364,"title":{},"body":{"injectables/TsValidatorsService.html":{},"coverage.html":{}}}],["error",{"_index":33,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["error(`'${comparedd",{"_index":3233,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["error(`'${valu",{"_index":1692,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["error(`th",{"_index":1234,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["error(`tsautocompletecompon",{"_index":254,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["error(`tsautofocusdirect",{"_index":785,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["error(`tsradiogroupcompon",{"_index":2598,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["error.actu",{"_index":990,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["error.actual.length",{"_index":988,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["error.actual.slice(0",{"_index":989,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["error.rowid",{"_index":984,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["erroritem",{"_index":987,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["errorobj",{"_index":980,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["errorobj.control",{"_index":981,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["errorobj[nam",{"_index":982,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["errors.t",{"_index":3609,"title":{},"body":{"coverage.html":{}}}],["errors[key].filter((el",{"_index":974,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["esc",{"_index":1537,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["escap",{"_index":1512,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["etc",{"_index":1293,"title":{},"body":{"components/TsChartComponent.html":{},"components/TsTableComponent.html":{},"index.html":{}}}],["even",{"_index":2808,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"contributing.html":{}}}],["event",{"_index":29,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"license.html":{}}}],["event.deltax",{"_index":973,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["event.keycod",{"_index":1540,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["event.option.valu",{"_index":331,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["event.t",{"_index":3623,"title":{},"body":{"coverage.html":{}}}],["eventemitt",{"_index":142,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["everyon",{"_index":3684,"title":{},"body":{"index.html":{}}}],["exactli",{"_index":3844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exampl",{"_index":188,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{}}}],["exampledatabas",{"_index":3135,"title":{},"body":{"components/TsTableComponent.html":{}}}],["examplehttpdao",{"_index":3136,"title":{},"body":{"components/TsTableComponent.html":{}}}],["examplehttpdao(this.http",{"_index":3140,"title":{},"body":{"components/TsTableComponent.html":{}}}],["exce",{"_index":938,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["except",{"_index":778,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["exist",{"_index":334,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["expans",{"_index":3700,"title":{},"body":{"index.html":{}}}],["expect",{"_index":494,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["experi",{"_index":3675,"title":{},"body":{"index.html":{}}}],["explain",{"_index":3490,"title":{},"body":{"contributing.html":{}}}],["explan",{"_index":2232,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["export",{"_index":173,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"overview.html":{}}}],["exporta",{"_index":214,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["expos",{"_index":717,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["express",{"_index":2793,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"license.html":{}}}],["extend",{"_index":178,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"pipes/TsDatePipe.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["extern",{"_index":487,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLinkComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["externalicon",{"_index":2125,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["f",{"_index":3524,"title":{},"body":{"contributing.html":{}}}],["fab",{"_index":2301,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["factori",{"_index":1318,"title":{},"body":{"components/TsChartComponent.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["fail",{"_index":1736,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["fall",{"_index":1649,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["fallback",{"_index":1762,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["fallbackenddatecontrol",{"_index":1763,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["fallbackstartdatecontrol",{"_index":1764,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["fals",{"_index":85,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["far",{"_index":3498,"title":{},"body":{"contributing.html":{}}}],["favor",{"_index":1773,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["featur",{"_index":3450,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["februari",{"_index":1677,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["feel",{"_index":1081,"title":{},"body":{"components/TsCardComponent.html":{}}}],["fetch",{"_index":3106,"title":{},"body":{"components/TsTableComponent.html":{}}}],["few",{"_index":2323,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ff",{"_index":3532,"title":{},"body":{"contributing.html":{}}}],["field",{"_index":1864,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["figur",{"_index":298,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"injectables/TsValidationMessageService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["file.t",{"_index":1943,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.ts:107",{"_index":2856,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:116",{"_index":2859,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:125",{"_index":2862,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:134",{"_index":2864,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:144",{"_index":2846,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:194",{"_index":2849,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:33",{"_index":2842,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:34",{"_index":2841,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:35",{"_index":2837,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:36",{"_index":2843,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:37",{"_index":2844,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:42",{"_index":2839,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:47",{"_index":2840,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:52",{"_index":2836,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:56",{"_index":2838,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:89",{"_index":2851,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:98",{"_index":2853,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["filecont",{"_index":2860,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["fileload",{"_index":1963,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["fileread",{"_index":1961,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["filerefer",{"_index":1964,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["files",{"_index":1944,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["filetyp",{"_index":1945,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["fill",{"_index":2084,"title":{},"body":{"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":158,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{}}}],["filter((ev",{"_index":1539,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["filter((v",{"_index":312,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["filtereddata",{"_index":3181,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["find",{"_index":350,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"contributing.html":{},"index.html":{}}}],["findpage(pag",{"_index":2502,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["finish",{"_index":2920,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["fire",{"_index":1592,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["first",{"_index":604,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{},"index.html":{}}}],["first_pag",{"_index":2417,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["firstpageicon",{"_index":2416,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["firstpageindex",{"_index":2461,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["firstpagetooltip",{"_index":2437,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["fit",{"_index":1989,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"license.html":{}}}],["fix",{"_index":256,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"contributing.html":{}}}],["fixm",{"_index":255,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["flag",{"_index":381,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["flat",{"_index":1033,"title":{},"body":{"components/TsCardComponent.html":{}}}],["flexbox",{"_index":866,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["flexlayoutmodul",{"_index":808,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{}}}],["flow",{"_index":332,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{}}}],["flush",{"_index":3097,"title":{},"body":{"components/TsTableComponent.html":{}}}],["fn",{"_index":441,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"pipes/TsDatePipe.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"dependencies.html":{}}}],["fns@2.0.0",{"_index":3719,"title":{},"body":{"index.html":{}}}],["focu",{"_index":770,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"index.html":{}}}],["focus",{"_index":759,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"index.html":{}}}],["follow",{"_index":378,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["foo",{"_index":2549,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["foo_valu",{"_index":2550,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["forc",{"_index":917,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"contributing.html":{}}}],["forgot",{"_index":2202,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["forgotpasswordlink",{"_index":2212,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["forgotpasswordtext",{"_index":2213,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["fork",{"_index":3522,"title":{},"body":{"contributing.html":{}}}],["form",{"_index":274,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["form'},{'nam",{"_index":1151,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["form.compon",{"_index":2269,"title":{},"body":{"modules/TsLoginFormModule.html":{}}}],["form.component.html",{"_index":2205,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["form.component.scss",{"_index":2204,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["form.component.t",{"_index":2199,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"coverage.html":{}}}],["form.component.ts:106",{"_index":2246,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:111",{"_index":2245,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:116",{"_index":2248,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:122",{"_index":2243,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:128",{"_index":2239,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:134",{"_index":2221,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:140",{"_index":2222,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:146",{"_index":2223,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:152",{"_index":2227,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:158",{"_index":2228,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:164",{"_index":2229,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:170",{"_index":2220,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:188",{"_index":2231,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:205",{"_index":2233,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:84",{"_index":2242,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.modul",{"_index":688,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["form.module.t",{"_index":2268,"title":{},"body":{"modules/TsLoginFormModule.html":{}}}],["form/login",{"_index":687,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"coverage.html":{}}}],["form_group",{"_index":2206,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["formarray",{"_index":843,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["format",{"_index":364,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"pipes/TsDatePipe.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["format(validatorvalue.maxd",{"_index":3325,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["format(validatorvalue.mind",{"_index":3328,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["formatd",{"_index":1675,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["formatdist",{"_index":3231,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["formatdistance(date1",{"_index":3236,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["formatmodelvaluefn",{"_index":2605,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatmodelvaluefn(valu",{"_index":2603,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatt",{"_index":175,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["formatter(opt",{"_index":2627,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatuilabelfn",{"_index":2570,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatuilabelfn(valu",{"_index":2596,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatuisublabelfn",{"_index":2561,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatuisublabelfn(valu",{"_index":2600,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formbuild",{"_index":844,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["formbuilder.group",{"_index":1734,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["formcontrol",{"_index":18,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["formgroup",{"_index":845,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["formgroup.get('endd",{"_index":1782,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["formgroup.get('startd",{"_index":1781,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["formsmodul",{"_index":746,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSelectModule.html":{},"modules/TsToggleModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["forum",{"_index":2038,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["forwardref",{"_index":385,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":126,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{}}}],["foundpag",{"_index":2490,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["foundpage.nam",{"_index":2504,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["free",{"_index":3767,"title":{},"body":{"license.html":{}}}],["freeli",{"_index":574,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["full",{"_index":246,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChartComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"classes/Version.html":{},"contributing.html":{}}}],["full.split('.').slice(2).join",{"_index":3440,"title":{},"body":{"classes/Version.html":{}}}],["full.split('.')[0",{"_index":3436,"title":{},"body":{"classes/Version.html":{}}}],["full.split('.')[1",{"_index":3438,"title":{},"body":{"classes/Version.html":{}}}],["fullnam",{"_index":479,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["function",{"_index":94,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["furnish",{"_index":3776,"title":{},"body":{"license.html":{}}}],["gap",{"_index":867,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsConfirmationModalComponent.html":{}}}],["gemotr",{"_index":2695,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["gener",{"_index":558,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsReactiveFormBaseComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{},"index.html":{}}}],["generatebreakwidth",{"_index":559,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["geodata",{"_index":3653,"title":{},"body":{"dependencies.html":{}}}],["geometri",{"_index":2690,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["get",{"_index":3442,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["getavailablespac",{"_index":2373,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["getbackground",{"_index":2070,"title":{},"body":{"components/TsIconComponent.html":{}}}],["getbord",{"_index":1066,"title":{},"body":{"components/TsCardComponent.html":{}}}],["getborderclass",{"_index":1076,"title":{},"body":{"components/TsCardComponent.html":{}}}],["getcolumns(row",{"_index":942,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["getcomputedstyle(this.elementref.nativeelement).getpropertyvalue('posit",{"_index":2188,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["getcurrentqueri",{"_index":2800,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["getdata",{"_index":3201,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["getdirect",{"_index":2976,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["getdisableclear",{"_index":2979,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["getfilecont",{"_index":2861,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["getheadercellname(index",{"_index":962,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["getheight",{"_index":2852,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["gethostel",{"_index":2034,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["getid",{"_index":1069,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsCheckboxComponent.html":{}}}],["getischeck",{"_index":1463,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["getiscsv",{"_index":2855,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["getisimag",{"_index":2858,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["getisutilitymenu",{"_index":2314,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["getisvalid",{"_index":2863,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["getnextsortdirect",{"_index":2958,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["getnextsortdirection(sort",{"_index":2943,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getrepoissues(sort",{"_index":3166,"title":{},"body":{"components/TsTableComponent.html":{}}}],["getsortdirectioncycl",{"_index":3612,"title":{},"body":{"coverage.html":{}}}],["getsortdirectioncycle(sortable.start",{"_index":2947,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortdirectioncycle(start",{"_index":2953,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortduplicatesortableiderror",{"_index":2899,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"coverage.html":{}}}],["getsortduplicatesortableiderror(sortable.id",{"_index":2931,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortheadermissingiderror",{"_index":2900,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"coverage.html":{}}}],["getsortheadernotcontainedwithinsorterror",{"_index":2987,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"coverage.html":{}}}],["getsortinvaliddirectionerror",{"_index":2898,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"coverage.html":{}}}],["getsortinvaliddirectionerror(direct",{"_index":2917,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsvgicon",{"_index":2073,"title":{},"body":{"components/TsIconComponent.html":{}}}],["getter",{"_index":512,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsUser.html":{}}}],["gettextcont",{"_index":1612,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["getthem",{"_index":1072,"title":{},"body":{"components/TsCardComponent.html":{}}}],["getusersfullnam",{"_index":2375,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["getvalidationmessag",{"_index":3341,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["getvalidationresult",{"_index":3637,"title":{},"body":{"coverage.html":{}}}],["getvalidatorerrormessag",{"_index":3285,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["getvalidatorerrormessage(validatornam",{"_index":3286,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["getvalu",{"_index":2652,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["getvisibleitemslength",{"_index":2377,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["getvisu",{"_index":1311,"title":{},"body":{"components/TsChartComponent.html":{}}}],["getwidth",{"_index":2850,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["git",{"_index":3505,"title":{},"body":{"contributing.html":{}}}],["github",{"_index":3154,"title":{},"body":{"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{}}}],["githubapi",{"_index":3160,"title":{},"body":{"components/TsTableComponent.html":{}}}],["githubissu",{"_index":3161,"title":{},"body":{"components/TsTableComponent.html":{}}}],["given",{"_index":2952,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["global",{"_index":2582,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"index.html":{}}}],["go",{"_index":3108,"title":{},"body":{"components/TsTableComponent.html":{}}}],["goe",{"_index":3726,"title":{},"body":{"index.html":{}}}],["good",{"_index":2235,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["grant",{"_index":3766,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3696,"title":{},"body":{"index.html":{}}}],["greater",{"_index":3303,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["greaterthan",{"_index":3301,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["greaterthanorequ",{"_index":3305,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["greaterthanorequalvalid",{"_index":3368,"title":{},"body":{"injectables/TsValidatorsService.html":{},"coverage.html":{}}}],["greaterthanvalid",{"_index":3366,"title":{},"body":{"injectables/TsValidatorsService.html":{},"coverage.html":{}}}],["gridcel",{"_index":1252,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["group",{"_index":555,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["group'},{'nam",{"_index":1158,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["group.compon",{"_index":2640,"title":{},"body":{"modules/TsRadioGroupModule.html":{}}}],["group.component.html",{"_index":2578,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["group.component.scss",{"_index":2579,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["group.component.t",{"_index":2545,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["group.component.ts:31",{"_index":2641,"title":{},"body":{"interfaces/TsRadioOption.html":{}}}],["group.modul",{"_index":697,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["group.module.t",{"_index":2638,"title":{},"body":{"modules/TsRadioGroupModule.html":{}}}],["group/radio",{"_index":696,"title":{},"body":{"modules/TerminusUIModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["groupbi",{"_index":476,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["groupby(allitem",{"_index":579,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["guess",{"_index":301,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["guid",{"_index":431,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["guidelin",{"_index":3447,"title":{},"body":{"contributing.html":{}}}],["hack",{"_index":2234,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["hammer",{"_index":3691,"title":{},"body":{"index.html":{}}}],["handl",{"_index":2318,"title":{},"body":{"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["hankey",{"_index":3693,"title":{},"body":{"index.html":{}}}],["happen",{"_index":2887,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["hard",{"_index":3855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["harkness&#x1f4bb",{"_index":3743,"title":{},"body":{"index.html":{}}}],["hasbackdrop",{"_index":1529,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["hasinnertext",{"_index":1616,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["hasn't",{"_index":3477,"title":{},"body":{"contributing.html":{}}}],["hasprotect",{"_index":1906,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["hasrequiredcontrol",{"_index":2574,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["hasrequiredcontrol(this.formcontrol",{"_index":2621,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["hasselect",{"_index":1577,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["hasunderlin",{"_index":3265,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["header",{"_index":820,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header.compon",{"_index":3068,"title":{},"body":{"modules/TsSortModule.html":{}}}],["header.component.html",{"_index":2996,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["header.component.scss",{"_index":2997,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["header.component.t",{"_index":2984,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header.component.ts:101",{"_index":3028,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:108",{"_index":3039,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:110",{"_index":3040,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:111",{"_index":3038,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:131",{"_index":3037,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:143",{"_index":3036,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:151",{"_index":3033,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:161",{"_index":3035,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:170",{"_index":3034,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:76",{"_index":3032,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:83",{"_index":3029,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:89",{"_index":3031,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:95",{"_index":3030,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:98",{"_index":3041,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header]'},{'nam",{"_index":1170,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["headercel",{"_index":881,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["headercount",{"_index":1006,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["heavili",{"_index":3687,"title":{},"body":{"index.html":{}}}],["height",{"_index":1928,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/variables.html":{}}}],["help",{"_index":2050,"title":{},"body":{"components/TsIconComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{}}}],["helper",{"_index":457,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"index.html":{}}}],["here",{"_index":1023,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsSortHeaderIntl.html":{},"contributing.html":{},"index.html":{}}}],["here'",{"_index":3080,"title":{},"body":{"components/TsTableComponent.html":{}}}],["herebi",{"_index":3765,"title":{},"body":{"license.html":{}}}],["hi",{"_index":2571,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["hidden",{"_index":521,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["hiddenitem",{"_index":522,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["hierarchi",{"_index":2336,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["high",{"_index":2391,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["highchart",{"_index":732,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"miscellaneous/variables.html":{}}}],["higher",{"_index":2335,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["highli",{"_index":3065,"title":{},"body":{"modules/TsSortModule.html":{},"modules/TsTableModule.html":{}}}],["hint",{"_index":187,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["hint=\"begin",{"_index":190,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["hit",{"_index":73,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["hold",{"_index":2901,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"index.html":{}}}],["holder",{"_index":3786,"title":{},"body":{"license.html":{}}}],["hollow",{"_index":3824,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["home",{"_index":2049,"title":{},"body":{"components/TsIconComponent.html":{}}}],["homeif",{"_index":2076,"title":{},"body":{"components/TsIconComponent.html":{}}}],["hope",{"_index":3678,"title":{},"body":{"index.html":{}}}],["host",{"_index":209,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["hostbind",{"_index":1218,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["hostbinding('class",{"_index":1230,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["hostbinding('style.posit",{"_index":2181,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["hostel",{"_index":2033,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["hostlisten",{"_index":472,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["hostlistener('click",{"_index":1517,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["hostlistener('window:res",{"_index":551,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["hover",{"_index":1050,"title":{},"body":{"components/TsCardComponent.html":{}}}],["href",{"_index":3167,"title":{},"body":{"components/TsTableComponent.html":{}}}],["href}?q=repo:getterminus/terminu",{"_index":3170,"title":{},"body":{"components/TsTableComponent.html":{}}}],["html",{"_index":821,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{}}}],["htmlinputel",{"_index":423,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["http",{"_index":611,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["httpclient",{"_index":3121,"title":{},"body":{"components/TsTableComponent.html":{}}}],["https://api.github.com/search/issu",{"_index":3168,"title":{},"body":{"components/TsTableComponent.html":{}}}],["https://github.com/angular/material2/tree/master/src/lib/sort",{"_index":3067,"title":{},"body":{"modules/TsSortModule.html":{}}}],["https://github.com/angular/material2/tree/master/src/lib/t",{"_index":3223,"title":{},"body":{"modules/TsTableModule.html":{}}}],["https://github.com/getterminus/terminu",{"_index":3295,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["https://goo.gl/ieupag",{"_index":202,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["https://material.io/icon",{"_index":2081,"title":{},"body":{"components/TsIconComponent.html":{},"index.html":{}}}],["https://www.amcharts.com/docs/v4",{"_index":1347,"title":{},"body":{"components/TsChartComponent.html":{}}}],["human",{"_index":3711,"title":{},"body":{"index.html":{}}}],["i.",{"_index":3704,"title":{},"body":{"index.html":{}}}],["icon",{"_index":679,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"modules/TsFileUploadModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["icon'},{'nam",{"_index":1143,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["icon.compon",{"_index":2106,"title":{},"body":{"modules/TsIconModule.html":{}}}],["icon.component.html",{"_index":2053,"title":{},"body":{"components/TsIconComponent.html":{}}}],["icon.component.scss",{"_index":2052,"title":{},"body":{"components/TsIconComponent.html":{}}}],["icon/icon.modul",{"_index":682,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsCopyModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsRadioGroupModule.html":{}}}],["icons/csv",{"_index":2092,"title":{},"body":{"components/TsIconComponent.html":{}}}],["icons/csv.t",{"_index":3585,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":61,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"miscellaneous/variables.html":{}}}],["id(valu",{"_index":884,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["idea",{"_index":3445,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["identifi",{"_index":2884,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"coverage.html":{}}}],["ifram",{"_index":776,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsSearchComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["ignor",{"_index":252,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["imag",{"_index":1940,"title":{},"body":{"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["image/jpeg",{"_index":3826,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["image/jpg",{"_index":3827,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["image/png",{"_index":3828,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["imagedimens",{"_index":1946,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["imagedimensionconstraint",{"_index":1956,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["img",{"_index":1976,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["img.naturalheight",{"_index":1982,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["img.onload",{"_index":1979,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["img.src",{"_index":1977,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["immedi",{"_index":1883,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["immediatelyoronchang",{"_index":3347,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["implement",{"_index":216,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"interfaces/TsUser.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["impli",{"_index":3781,"title":{},"body":{"license.html":{}}}],["implicit",{"_index":2431,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["import",{"_index":137,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{}}}],["includ",{"_index":774,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsIconComponent.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"classes/TsTableDataSource.html":{},"contributing.html":{},"license.html":{}}}],["inclus",{"_index":3454,"title":{},"body":{"contributing.html":{}}}],["increas",{"_index":3481,"title":{},"body":{"contributing.html":{}}}],["indetermin",{"_index":1414,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["indeterminatechang",{"_index":1419,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":26,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"miscellaneous/variables.html":{}}}],["indicatortoggl",{"_index":3878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["individu",{"_index":185,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["indiviu",{"_index":1925,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{}}}],["inform",{"_index":2712,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/Version.html":{},"contributing.html":{}}}],["inherit",{"_index":1438,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["init",{"_index":1284,"title":{},"body":{"components/TsChartComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["init(typ",{"_index":1297,"title":{},"body":{"components/TsChartComponent.html":{}}}],["initi",{"_index":106,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["initiald",{"_index":1845,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["initialdata",{"_index":3189,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["initialdate(valu",{"_index":1879,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["initialselect",{"_index":107,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["initialselections(select",{"_index":286,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["initialvalu",{"_index":2757,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inject",{"_index":553,"title":{"injectables/TsAmChartsService.html":{},"injectables/TsDropProtectionService.html":{},"injectables/TsSortHeaderIntl.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["inject(ts_amcharts_token",{"_index":735,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["injectiontoken",{"_index":725,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('amchart",{"_index":734,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":2160,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["inlin",{"_index":1259,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{}}}],["inner",{"_index":1450,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["innervalu",{"_index":1421,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["inprogress",{"_index":2214,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["input",{"_index":143,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["input'},{'nam",{"_index":1145,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["input('aria",{"_index":2586,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["input('t",{"_index":3004,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["input('tscolumndef",{"_index":1267,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["input('tssortact",{"_index":2912,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["input('tssortdirect",{"_index":2915,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["input('tssortdisableclear",{"_index":2921,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["input('tssortstart",{"_index":2914,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["input.compon",{"_index":2120,"title":{},"body":{"modules/TsInputModule.html":{}}}],["input/input.compon",{"_index":2250,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["input/input.modul",{"_index":683,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsSearchModule.html":{}}}],["input_debounce_tim",{"_index":2750,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inputblur",{"_index":1885,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["inputchang",{"_index":1418,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["inputcompon",{"_index":2207,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["inputel",{"_index":422,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["inputhaschang",{"_index":1348,"title":{},"body":{"components/TsChartComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["inputhaschanged(chang",{"_index":1359,"title":{},"body":{"components/TsChartComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["inputhint",{"_index":2758,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inputlabel",{"_index":2759,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inputpatternregex",{"_index":2751,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inputplacehold",{"_index":1873,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["insid",{"_index":1226,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{}}}],["instal",{"_index":3670,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":432,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":1233,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["instead",{"_index":1700,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["interact",{"_index":492,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["intercept",{"_index":1497,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsAmChartsToken.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"coverage.html":{},"overview.html":{}}}],["intern",{"_index":1456,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsLinkComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"components/TsToggleComponent.html":{},"index.html":{}}}],["intl",{"_index":2986,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{}}}],["intl.t",{"_index":3045,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["intl.ts:21",{"_index":3049,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["intl.ts:26",{"_index":3051,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["intl.ts:33",{"_index":3052,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["invalid",{"_index":1827,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/variables.html":{}}}],["isabstractcontrol",{"_index":3621,"title":{},"body":{"coverage.html":{}}}],["ischeck",{"_index":1392,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["ischecked(v",{"_index":1408,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["ischecked(valu",{"_index":2879,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["iscsv",{"_index":2854,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["isdevmod",{"_index":144,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"pipes/TsDatePipe.html":{},"components/TsIconComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"pipes/TsTimeAgoPipe.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["isdis",{"_index":467,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["isdisabled(valu",{"_index":2708,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["isdragev",{"_index":3624,"title":{},"body":{"coverage.html":{}}}],["isextern",{"_index":2126,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["isexternallink",{"_index":2352,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["isexternallink(destin",{"_index":612,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["isfirstpage(pag",{"_index":2492,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["isfocus",{"_index":2760,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["isforadmin",{"_index":468,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["isfunct",{"_index":167,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["isfunction(v",{"_index":267,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["isfunction(valu",{"_index":249,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["ishtmlinputel",{"_index":3626,"title":{},"body":{"coverage.html":{}}}],["isimag",{"_index":2857,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["isindetermin",{"_index":1415,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["islastpage(pag",{"_index":2493,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["isn't",{"_index":116,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsReactiveFormBaseComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["iso",{"_index":1889,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["isredirect",{"_index":2215,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["isrequir",{"_index":1416,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["issu",{"_index":1689,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"contributing.html":{}}}],["issubmit",{"_index":2761,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["istanbul",{"_index":251,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["isutilitymenu",{"_index":2313,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["isvalid",{"_index":1674,"title":{},"body":{"pipes/TsDatePipe.html":{},"classes/TsSelectedFile.html":{},"pipes/TsTimeAgoPipe.html":{},"injectables/TsValidatorsService.html":{}}}],["isvalid(comparedd",{"_index":3232,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["isvalid(valu",{"_index":1691,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["isvisu",{"_index":2568,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["isvisual(valu",{"_index":2608,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["iszerobas",{"_index":2397,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["iszerobased(v",{"_index":2433,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["it'",{"_index":302,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["item",{"_index":128,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["item.ag",{"_index":3094,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.com",{"_index":3134,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.created_at",{"_index":3114,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.isdis",{"_index":536,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["item.nam",{"_index":2380,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["item.nativeelement.offsetwidth",{"_index":565,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["item.numb",{"_index":3130,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.st",{"_index":3132,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.titl",{"_index":3131,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.usernam",{"_index":3082,"title":{},"body":{"components/TsTableComponent.html":{}}}],["items(valu",{"_index":533,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["items.length",{"_index":132,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["itemtomov",{"_index":594,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["itself",{"_index":1726,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsTableComponent.html":{},"index.html":{}}}],["jest",{"_index":3395,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["join",{"_index":1011,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"pipes/TsTitleCasePipe.html":{}}}],["jones&#x1f4bb",{"_index":3749,"title":{},"body":{"index.html":{}}}],["js",{"_index":3851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kal93&#x1f41b",{"_index":3744,"title":{},"body":{"index.html":{}}}],["keep",{"_index":3112,"title":{},"body":{"components/TsTableComponent.html":{},"contributing.html":{}}}],["key",{"_index":9,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["keyboard",{"_index":841,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["keyboard_arrow_down",{"_index":2381,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["keyboard_arrow_left",{"_index":2419,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["keyboard_arrow_right",{"_index":2421,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["keyboardev",{"_index":1,"title":{"interfaces/KeyboardEvent.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"coverage.html":{}}}],["keyfram",{"_index":3881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyup",{"_index":2755,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["kilobyt",{"_index":1952,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":3468,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["know",{"_index":336,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsTableDataSource.html":{}}}],["label",{"_index":260,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsIconButtonComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["label=\"select",{"_index":191,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["labelclick(opt",{"_index":2628,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["labelledbi",{"_index":2588,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["labelposit",{"_index":2880,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["languag",{"_index":3677,"title":{},"body":{"index.html":{}}}],["larg",{"_index":2565,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":2334,"title":{},"body":{"components/TsMenuComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["last",{"_index":424,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["last_pag",{"_index":2423,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lastpageicon",{"_index":2422,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lastpageindex",{"_index":2466,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lastpagetooltip",{"_index":2440,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lastvalu",{"_index":426,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["later",{"_index":1460,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["latest",{"_index":3531,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":548,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"components/TsIconComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"dependencies.html":{},"index.html":{}}}],["layout@6.0.0",{"_index":3717,"title":{},"body":{"index.html":{}}}],["layoutgap",{"_index":868,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["learn",{"_index":2405,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["leav",{"_index":2135,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["left",{"_index":1100,"title":{},"body":{"components/TsCardComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["leftpoint",{"_index":3871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":617,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"components/TsNavigationComponent.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["length",{"_index":2247,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidationMessageService.html":{}}}],["less",{"_index":3310,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["lessthan",{"_index":3309,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["lessthanorequ",{"_index":3312,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["lessthanorequalvalid",{"_index":3372,"title":{},"body":{"injectables/TsValidatorsService.html":{},"coverage.html":{}}}],["lessthanvalid",{"_index":3370,"title":{},"body":{"injectables/TsValidatorsService.html":{},"coverage.html":{}}}],["let",{"_index":2261,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["letter",{"_index":2767,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidationMessageService.html":{}}}],["liabil",{"_index":3790,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":3787,"title":{},"body":{"license.html":{}}}],["lib/src/scss/helpers/_spacing.scss",{"_index":3846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["librari",{"_index":1308,"title":{},"body":{"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["licens",{"_index":1317,"title":{"license.html":{}},"body":{"components/TsChartComponent.html":{},"license.html":{}}}],["lift",{"_index":3064,"title":{},"body":{"modules/TsSortModule.html":{},"modules/TsTableModule.html":{}}}],["limit",{"_index":3156,"title":{},"body":{"components/TsTableComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":710,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsChartComponent.html":{},"contributing.html":{}}}],["link",{"_index":96,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["link'",{"_index":2127,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["link'},{'nam",{"_index":1147,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["link.compon",{"_index":2145,"title":{},"body":{"modules/TsLinkModule.html":{}}}],["link.component.html",{"_index":2124,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["link.component.scss",{"_index":2123,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["link/link.modul",{"_index":684,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{}}}],["linkextern",{"_index":2133,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["linter",{"_index":3510,"title":{},"body":{"contributing.html":{}}}],["list",{"_index":186,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["listen",{"_index":1536,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"injectables/TsDropProtectionService.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["liter",{"_index":1929,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsNavigationActionItem.html":{},"interfaces/TsNavigationPayload.html":{},"miscellaneous/variables.html":{}}}],["live",{"_index":3494,"title":{},"body":{"contributing.html":{}}}],["llc",{"_index":3763,"title":{},"body":{"license.html":{}}}],["load",{"_index":285,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["loadingoverlayport",{"_index":2154,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["local",{"_index":46,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{}}}],["locat",{"_index":488,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["lock",{"_index":1022,"title":{},"body":{"components/TsCardComponent.html":{}}}],["lock_outlin",{"_index":1116,"title":{},"body":{"components/TsCardComponent.html":{}}}],["log",{"_index":2225,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["login",{"_index":62,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["logincta",{"_index":2216,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["loginform",{"_index":2208,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["long",{"_index":1269,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["longer",{"_index":2560,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["loop",{"_index":104,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["lot",{"_index":2414,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lowercas",{"_index":3318,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["lowercasevalid",{"_index":3374,"title":{},"body":{"injectables/TsValidatorsService.html":{},"coverage.html":{}}}],["m/d/yyyi",{"_index":3326,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["made",{"_index":121,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["main",{"_index":3526,"title":{},"body":{"contributing.html":{}}}],["maintain",{"_index":3674,"title":{},"body":{"index.html":{}}}],["major",{"_index":3426,"title":{},"body":{"classes/Version.html":{},"contributing.html":{}}}],["make",{"_index":1080,"title":{},"body":{"components/TsCardComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"contributing.html":{},"index.html":{}}}],["malinconico&#x1f41b",{"_index":3741,"title":{},"body":{"index.html":{}}}],["manag",{"_index":217,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["mani",{"_index":870,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["manual",{"_index":829,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["map",{"_index":728,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["map((respons",{"_index":82,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["map((word",{"_index":3240,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["map(data",{"_index":3149,"title":{},"body":{"components/TsTableComponent.html":{}}}],["mark",{"_index":3009,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["mask",{"_index":352,"title":{"interfaces/Mask.html":{}},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["mask.direct",{"_index":2275,"title":{},"body":{"modules/TsMaskModule.html":{}}}],["mask/mask.modul",{"_index":689,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["maskcollect",{"_index":403,"title":{"interfaces/MaskCollection.html":{}},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"coverage.html":{}}}],["masked_input_value_accessor",{"_index":411,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"modules/TsMaskModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maskfunct",{"_index":359,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["masknam",{"_index":427,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["maskopt",{"_index":447,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["maskshortcutopt",{"_index":405,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["master",{"_index":3509,"title":{},"body":{"contributing.html":{}}}],["matautocomplet",{"_index":152,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["matautocompletemodul",{"_index":748,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["matautocompleteselectedev",{"_index":153,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["matautocompletetrigg",{"_index":154,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["matbuttonmodul",{"_index":797,"title":{},"body":{"modules/TsButtonModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{}}}],["match",{"_index":95,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matcheckbox",{"_index":1400,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["matcheckboxchang",{"_index":1389,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["matcheckboxcompon",{"_index":1406,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["matcheckboxmodul",{"_index":1472,"title":{},"body":{"modules/TsCheckboxModule.html":{}}}],["matchipsmodul",{"_index":749,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["matdatepickerinputev",{"_index":1746,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["matdatepickermodul",{"_index":1899,"title":{},"body":{"modules/TsDatepickerModule.html":{}}}],["materi",{"_index":1607,"title":{},"body":{"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"modules/TsSortModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"index.html":{}}}],["math.ceil(this.file.s",{"_index":1969,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["math.floor(bas",{"_index":3847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mathmat",{"_index":3842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maticonmodul",{"_index":2105,"title":{},"body":{"modules/TsIconModule.html":{}}}],["maticonregistri",{"_index":2059,"title":{},"body":{"components/TsIconComponent.html":{}}}],["matinputmodul",{"_index":751,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsInputModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["matmenumodul",{"_index":2350,"title":{},"body":{"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{}}}],["matmenutrigg",{"_index":2306,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["matnativedatemodul",{"_index":1900,"title":{},"body":{"modules/TsDatepickerModule.html":{}}}],["matprogressbarmodul",{"_index":1937,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["matprogressspinnermodul",{"_index":753,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsButtonModule.html":{}}}],["matradiochang",{"_index":2546,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["matradiomodul",{"_index":2639,"title":{},"body":{"modules/TsRadioGroupModule.html":{}}}],["matripplemodul",{"_index":1209,"title":{},"body":{"modules/TsCardModule.html":{},"modules/TsCopyModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsRadioGroupModule.html":{}}}],["matselectmodul",{"_index":2830,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["matslidetogglechang",{"_index":2874,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["matslidetogglemodul",{"_index":3259,"title":{},"body":{"modules/TsToggleModule.html":{}}}],["mattooltipmodul",{"_index":3278,"title":{},"body":{"modules/TsTooltipModule.html":{}}}],["max",{"_index":818,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["max/min",{"_index":1702,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["maxdat",{"_index":1843,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["maxdate(valu",{"_index":1874,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["maxdatevalid",{"_index":3376,"title":{},"body":{"injectables/TsValidatorsService.html":{},"coverage.html":{}}}],["maxim",{"_index":3479,"title":{},"body":{"contributing.html":{}}}],["maximum",{"_index":827,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["maximum_kilobytes_per_fil",{"_index":3574,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["maximumvalidationmessag",{"_index":874,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["maxitemlength",{"_index":985,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["maxlength",{"_index":3298,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["maxpreferredrecord",{"_index":2402,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["maxrow",{"_index":891,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["maxrows(valu",{"_index":888,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["maxsiz",{"_index":1958,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["medium",{"_index":1680,"title":{},"body":{"pipes/TsDatePipe.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["meet",{"_index":3392,"title":{},"body":{"injectables/TsValidatorsService.html":{},"index.html":{}}}],["menu",{"_index":505,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["menu'},{'nam",{"_index":1153,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["menu.compon",{"_index":2351,"title":{},"body":{"modules/TsMenuModule.html":{}}}],["menu.component.html",{"_index":2279,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["menu.component.scss",{"_index":2278,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["menu/menu.modul",{"_index":690,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsPaginatorModule.html":{}}}],["menuisdisabled(pagescount",{"_index":2499,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["menuitemstempl",{"_index":2285,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["menuloc",{"_index":2447,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["menupositioni",{"_index":2287,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["menupositionx",{"_index":2286,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["merchant",{"_index":3782,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1514,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"coverage.html":{},"license.html":{}}}],["merge(_sort.sortchang",{"_index":3010,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["merge(this.overlayref.backdropclick",{"_index":1541,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["merge(this.sort.sortchang",{"_index":3142,"title":{},"body":{"components/TsTableComponent.html":{}}}],["messag",{"_index":131,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["message.length",{"_index":2495,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["message.servic",{"_index":3343,"title":{},"body":{"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{}}}],["message.service.t",{"_index":3283,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["message.service.ts:40",{"_index":3288,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["messages.compon",{"_index":3358,"title":{},"body":{"modules/TsValidationMessagesModule.html":{}}}],["messages.component.html",{"_index":3334,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.scss",{"_index":3333,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.t",{"_index":3332,"title":{},"body":{"components/TsValidationMessagesComponent.html":{},"coverage.html":{}}}],["messages.component.ts:38",{"_index":3342,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:63",{"_index":3339,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:69",{"_index":3340,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:75",{"_index":3337,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.length",{"_index":993,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["messages.modul",{"_index":707,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSelectModule.html":{}}}],["messages.module.t",{"_index":3357,"title":{},"body":{"modules/TsValidationMessagesModule.html":{}}}],["messages.push(`and",{"_index":995,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["messages.push(messag",{"_index":991,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["messages/valid",{"_index":706,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSelectModule.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":762,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"pipes/TsSentenceCasePipe.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["method",{"_index":765,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{},"index.html":{}}}],["methods/variables/mixin",{"_index":3724,"title":{},"body":{"index.html":{}}}],["mime",{"_index":1949,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mimetyp",{"_index":1960,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["min",{"_index":1260,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsTableComponent.html":{}}}],["mind",{"_index":3534,"title":{},"body":{"contributing.html":{}}}],["mindat",{"_index":1841,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["mindate(valu",{"_index":1877,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["mindatevalid",{"_index":3378,"title":{},"body":{"injectables/TsValidatorsService.html":{},"coverage.html":{}}}],["minifi",{"_index":3486,"title":{},"body":{"contributing.html":{}}}],["minim",{"_index":2392,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["minimum",{"_index":34,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["minimumcharact",{"_index":263,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["minimumcharacters(valu",{"_index":261,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["minlength",{"_index":2810,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidationMessageService.html":{}}}],["minor",{"_index":3427,"title":{},"body":{"classes/Version.html":{}}}],["minu",{"_index":3864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minwidth",{"_index":1263,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsTableComponent.html":{}}}],["miscellan",{"_index":3799,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mistak",{"_index":3457,"title":{},"body":{"contributing.html":{}}}],["mit",{"_index":3760,"title":{},"body":{"license.html":{}}}],["mixin",{"_index":2905,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["mixindis",{"_index":2897,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["mixindisabled(tssortbas",{"_index":2907,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/variables.html":{}}}],["mixindisabled(tssortheaderbas",{"_index":2991,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":3388,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["modal",{"_index":1499,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{}}}],["modal'},{'nam",{"_index":1130,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["modal.compon",{"_index":1515,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"modules/TsConfirmationModule.html":{}}}],["modal.component.html",{"_index":1558,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modal.component.scss",{"_index":1557,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modal.component.t",{"_index":1556,"title":{},"body":{"components/TsConfirmationModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:29",{"_index":1560,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modal.component.ts:34",{"_index":1563,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modalinst",{"_index":1480,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["mode",{"_index":2548,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["model",{"_index":383,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["modelformatt",{"_index":2558,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["modifi",{"_index":3046,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{},"license.html":{}}}],["modul",{"_index":614,"title":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"modules.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":1771,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["more",{"_index":603,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCopyComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["more_vert",{"_index":2310,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["motiv",{"_index":3489,"title":{},"body":{"contributing.html":{}}}],["mous",{"_index":496,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}}}],["mouseev",{"_index":174,"title":{"interfaces/MouseEvent.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"coverage.html":{}}}],["move",{"_index":583,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"interfaces/TsUser.html":{},"miscellaneous/variables.html":{}}}],["movement",{"_index":2705,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["much",{"_index":3063,"title":{},"body":{"modules/TsSortModule.html":{},"modules/TsTableModule.html":{}}}],["multi",{"_index":414,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["multipl",{"_index":20,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsIconComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["multiple(v",{"_index":266,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["multiple=\"(v",{"_index":192,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["mychangefunc(v",{"_index":2394,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["myclass",{"_index":2085,"title":{},"body":{"components/TsIconComponent.html":{}}}],["mycompon",{"_index":3389,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["mycontrol.valu",{"_index":1394,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["mydat",{"_index":1846,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["mydatasource.data",{"_index":3096,"title":{},"body":{"components/TsTableComponent.html":{}}}],["myfilt",{"_index":1835,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["myform",{"_index":1728,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsValidatorsService.html":{}}}],["myform.get('daterang",{"_index":1737,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["myform.get('daterange');en",{"_index":1739,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["myform.get('daterange');exampl",{"_index":1850,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["myfunc(blob",{"_index":824,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["myradiogroup",{"_index":2555,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["myselectfunc(v",{"_index":2393,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["mytableitem",{"_index":3091,"title":{},"body":{"components/TsTableComponent.html":{}}}],["myupdat",{"_index":2677,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["myvalid",{"_index":834,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["myvalu",{"_index":1396,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsTableComponent.html":{}}}],["name",{"_index":270,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["name(valu",{"_index":2611,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["name=\"product",{"_index":194,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["nameexist",{"_index":525,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["nativ",{"_index":1655,"title":{},"body":{"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"classes/TsTableDataSource.html":{}}}],["natur",{"_index":3496,"title":{},"body":{"contributing.html":{}}}],["nav",{"_index":499,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["nav_width_buff",{"_index":516,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["navig",{"_index":470,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["navigation'},{'nam",{"_index":1154,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["navigation.compon",{"_index":2387,"title":{},"body":{"modules/TsNavigationModule.html":{}}}],["navigation.component.html",{"_index":506,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["navigation.component.scss",{"_index":507,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["navigation/navigation.modul",{"_index":691,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["navigationitembas",{"_index":463,"title":{"interfaces/NavigationItemBase.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"coverage.html":{}}}],["nb",{"_index":708,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["nbsp",{"_index":3042,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["necessari",{"_index":3516,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":117,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["nest",{"_index":1221,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{}}}],["never",{"_index":1881,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["new",{"_index":219,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"classes/Version.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":2403,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["nextdirectionindex",{"_index":2948,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["nextpageicon",{"_index":2420,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["nextpageindex",{"_index":2463,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["nextpagetooltip",{"_index":2439,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["nextuniqueid",{"_index":852,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng_value_accessor",{"_index":389,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["ngafterviewinit",{"_index":307,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["nginx",{"_index":3854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngmodel",{"_index":1391,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsTableComponent.html":{}}}],["ngmodel(v",{"_index":1417,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["ngmodul",{"_index":661,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["ngonchang",{"_index":1217,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"components/TsLoginFormComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["ngonchanges(chang",{"_index":1300,"title":{},"body":{"components/TsChartComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["ngondestroy",{"_index":327,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["ngoninit",{"_index":556,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{}}}],["ngx",{"_index":2692,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"dependencies.html":{}}}],["ngzone",{"_index":1288,"title":{},"body":{"components/TsChartComponent.html":{}}}],["node",{"_index":1626,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["node_modules/perfect",{"_index":2699,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["non",{"_index":2994,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"contributing.html":{}}}],["none",{"_index":1058,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["noninfring",{"_index":3784,"title":{},"body":{"license.html":{}}}],["noop",{"_index":1457,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["noresult",{"_index":3315,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["note",{"_index":296,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["note(b",{"_index":1254,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["noth",{"_index":3418,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["notic",{"_index":1735,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"license.html":{}}}],["notifi",{"_index":129,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["notuniqu",{"_index":3314,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["now",{"_index":305,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{}}}],["nowrap",{"_index":1255,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["nowrap=\"tru",{"_index":3111,"title":{},"body":{"components/TsTableComponent.html":{}}}],["npm",{"_index":3751,"title":{},"body":{"index.html":{}}}],["null",{"_index":430,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"modules/TsChartModule.html":{},"directives/TsConfirmationDirective.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["number",{"_index":239,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number.pip",{"_index":2536,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["number.pipe.t",{"_index":2666,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{},"coverage.html":{}}}],["number.pipe.ts:12",{"_index":2669,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["number/round",{"_index":2535,"title":{},"body":{"modules/TsPipesModule.html":{},"pipes/TsRoundNumberPipe.html":{},"coverage.html":{}}}],["number_only_regex",{"_index":395,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["number_with_decimal_regex",{"_index":398,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["numberofmissingcolumn",{"_index":946,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["numbers/currency/percentag",{"_index":434,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["numbersvalid",{"_index":3380,"title":{},"body":{"injectables/TsValidatorsService.html":{},"coverage.html":{}}}],["object",{"_index":247,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/variables.html":{}}}],["object.assign({inputel",{"_index":448,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["observ",{"_index":1495,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["obtain",{"_index":3770,"title":{},"body":{"license.html":{}}}],["occur",{"_index":2620,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsTableDataSource.html":{},"components/TsValidationMessagesComponent.html":{}}}],["offer",{"_index":3284,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["offest",{"_index":2725,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["offset",{"_index":2723,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["old",{"_index":3098,"title":{},"body":{"components/TsTableComponent.html":{}}}],["on",{"_index":1315,"title":{},"body":{"components/TsChartComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["onblur",{"_index":1424,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["onc",{"_index":873,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{}}}],["onchang",{"_index":386,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["onchangecallback",{"_index":1422,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["onclick(ev",{"_index":1518,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ondestroy",{"_index":145,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["oninit",{"_index":473,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{}}}],["oninput($event.target.valu",{"_index":417,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["onres",{"_index":552,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["onscroll(ev",{"_index":970,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["onto",{"_index":2166,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["ontouch",{"_index":419,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["ontouchedcallback",{"_index":1423,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["op",{"_index":3200,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["opac",{"_index":1093,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1829,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{},"index.html":{}}}],["open/clos",{"_index":3475,"title":{},"body":{"contributing.html":{}}}],["open_in_new",{"_index":2080,"title":{},"body":{"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{}}}],["opento",{"_index":1847,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["oper",{"_index":3491,"title":{},"body":{"contributing.html":{}}}],["option",{"_index":41,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["option.dis",{"_index":2630,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["optionremov",{"_index":292,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["optionremoved)=\"myremoved($ev",{"_index":199,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["options(valu",{"_index":2614,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["optionselect",{"_index":291,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["optionselected)=\"myselected($ev",{"_index":198,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["optiontyp",{"_index":59,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["order",{"_index":1334,"title":{},"body":{"components/TsChartComponent.html":{},"injectables/TsDropProtectionService.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["origin",{"_index":1504,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{}}}],["origini",{"_index":1526,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["originx",{"_index":1525,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["other",{"_index":3679,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":2675,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"injectables/TsSortHeaderIntl.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":299,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"modules/TsValidationMessagesModule.html":{},"contributing.html":{},"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outlet",{"_index":1996,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["outlin",{"_index":3469,"title":{},"body":{"contributing.html":{}}}],["output",{"_index":146,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["output('tssortchang",{"_index":2925,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["over",{"_index":2400,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["overlap",{"_index":258,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{}}}],["overlay",{"_index":1485,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"index.html":{}}}],["overlay'},{'nam",{"_index":1149,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["overlay.compon",{"_index":2176,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{}}}],["overlay.component.scss",{"_index":2149,"title":{},"body":{"components/TsLoadingOverlayComponent.html":{}}}],["overlay.component.t",{"_index":2147,"title":{},"body":{"components/TsLoadingOverlayComponent.html":{},"coverage.html":{}}}],["overlay.direct",{"_index":2197,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{}}}],["overlay.directive.t",{"_index":2150,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{},"coverage.html":{}}}],["overlay.directive.ts:101",{"_index":2169,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:114",{"_index":2168,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:35",{"_index":2174,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:40",{"_index":2173,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:46",{"_index":2163,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:59",{"_index":2161,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:88",{"_index":2171,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.modul",{"_index":686,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["overlay.module.t",{"_index":2196,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{}}}],["overlay/load",{"_index":685,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"coverage.html":{}}}],["overlay__panel",{"_index":1532,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overlayconfig",{"_index":1508,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overlayi",{"_index":1528,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overlaymodul",{"_index":1570,"title":{},"body":{"modules/TsConfirmationModule.html":{}}}],["overlayref",{"_index":1481,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overlayx",{"_index":1527,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overrid",{"_index":730,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/variables.html":{}}}],["overridden",{"_index":136,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["overriden",{"_index":1385,"title":{},"body":{"modules/TsChartModule.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["overview",{"_index":3484,"title":{"overview.html":{}},"body":{"contributing.html":{},"overview.html":{}}}],["overwrit",{"_index":1331,"title":{},"body":{"components/TsChartComponent.html":{}}}],["packag",{"_index":3649,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":966,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsLinkComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"index.html":{}}}],["page.valu",{"_index":2489,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagenumb",{"_index":2512,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pages.find((pag",{"_index":2501,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagesarray",{"_index":2424,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagescount",{"_index":2498,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pageselect",{"_index":2459,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagevalu",{"_index":2513,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagin",{"_index":2390,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"index.html":{}}}],["paginator'},{'nam",{"_index":1156,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["paginator.compon",{"_index":2524,"title":{},"body":{"modules/TsPaginatorModule.html":{}}}],["paginator.component.html",{"_index":2406,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginator.component.scss",{"_index":2407,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginator/paginator.modul",{"_index":692,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsTableModule.html":{}}}],["paginatorarray",{"_index":2509,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginatorarray.push",{"_index":2515,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginatorarray.sort((a",{"_index":2516,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginatormessagetempl",{"_index":2448,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["panelclass",{"_index":1531,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["param",{"_index":328,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["paramet",{"_index":722,"title":{},"body":{"injectables/TsAmChartsService.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{}}}],["parent",{"_index":1223,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"components/TsIconButtonComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["parentintl",{"_index":3055,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["parseint(value.split",{"_index":3420,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["parseint(value.split(':')[0",{"_index":1105,"title":{},"body":{"components/TsCardComponent.html":{}}}],["parseint(value.split(':')[1",{"_index":1107,"title":{},"body":{"components/TsCardComponent.html":{}}}],["part",{"_index":2333,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["partial",{"_index":2514,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["particular",{"_index":3783,"title":{},"body":{"license.html":{}}}],["pass",{"_index":38,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":376,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["password_minlength",{"_index":2209,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["passwordmessag",{"_index":3294,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordvalid",{"_index":3382,"title":{},"body":{"injectables/TsValidatorsService.html":{},"coverage.html":{}}}],["past",{"_index":826,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsTableComponent.html":{}}}],["pastedcolumncount",{"_index":947,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["pastedrowid",{"_index":954,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["patch",{"_index":3428,"title":{},"body":{"classes/Version.html":{},"contributing.html":{}}}],["path",{"_index":2663,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["pattern",{"_index":3300,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["peet&#x1f3a8",{"_index":3747,"title":{},"body":{"index.html":{}}}],["peopl",{"_index":3728,"title":{},"body":{"index.html":{}}}],["per",{"_index":1951,"title":{},"body":{"interfaces/TsFileValidations.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/variables.html":{}}}],["percentag",{"_index":371,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["percentage.tofixed(2",{"_index":1110,"title":{},"body":{"components/TsCardComponent.html":{}}}],["perfect",{"_index":2693,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"dependencies.html":{}}}],["perfectscrollbardirect",{"_index":2691,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["perfectscrollbarmodul",{"_index":2743,"title":{},"body":{"modules/TsScrollbarsModule.html":{}}}],["perform",{"_index":2238,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["perhap",{"_index":3503,"title":{},"body":{"contributing.html":{}}}],["permiss",{"_index":3764,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3775,"title":{},"body":{"license.html":{}}}],["perpag",{"_index":2507,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["person",{"_index":3769,"title":{},"body":{"license.html":{}}}],["phone",{"_index":365,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":1865,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"components/TsReactiveFormBaseComponent.html":{}}}],["pie",{"_index":1342,"title":{},"body":{"components/TsChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["pipe",{"_index":70,"title":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"pipes/TsDatePipe.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["pipes/pipes.modul",{"_index":694,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["pipetransform",{"_index":1673,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["place",{"_index":498,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["placehold",{"_index":1459,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{},"classes/Version.html":{},"miscellaneous/variables.html":{}}}],["placeholder/label",{"_index":259,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["pleas",{"_index":3455,"title":{},"body":{"contributing.html":{}}}],["plugin",{"_index":3757,"title":{},"body":{"index.html":{}}}],["point",{"_index":3118,"title":{},"body":{"components/TsTableComponent.html":{},"contributing.html":{}}}],["pointer",{"_index":3865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pop",{"_index":1502,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"index.html":{}}}],["portal",{"_index":2170,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["portion",{"_index":1699,"title":{},"body":{"interfaces/TsDateRange.html":{},"license.html":{}}}],["posit",{"_index":2165,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["positionstrategi",{"_index":1522,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["possibl",{"_index":1102,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["postal",{"_index":372,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["potenti",{"_index":257,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["pr",{"_index":3452,"title":{},"body":{"contributing.html":{}}}],["pray",{"_index":3465,"title":{},"body":{"contributing.html":{}}}],["preced",{"_index":2589,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["precis",{"_index":2668,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{},"index.html":{}}}],["predic",{"_index":2009,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["prefix",{"_index":1012,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"contributing.html":{}}}],["present",{"_index":1019,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsMenuComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsValidationMessagesComponent.html":{}}}],["preservewhitespac",{"_index":1999,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["prevent",{"_index":1838,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"contributing.html":{}}}],["prevent(",{"_index":1910,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["previou",{"_index":318,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["previouspageicon",{"_index":2418,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["previouspagetooltip",{"_index":2438,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["primari",{"_index":181,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsToggleComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pristin",{"_index":509,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["pristineitem",{"_index":511,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["privat",{"_index":226,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["problem",{"_index":3449,"title":{},"body":{"contributing.html":{}}}],["process",{"_index":1697,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsTableDataSource.html":{}}}],["progress",{"_index":25,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"index.html":{}}}],["prohibit",{"_index":1830,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["project",{"_index":3474,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["prompt",{"_index":1650,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["properti",{"_index":356,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"classes/Version.html":{}}}],["propertynam",{"_index":3346,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["propos",{"_index":3466,"title":{},"body":{"contributing.html":{}}}],["protect",{"_index":859,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"injectables/TsDropProtectionService.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsToggleComponent.html":{}}}],["protection.servic",{"_index":1939,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["protection.service.t",{"_index":1905,"title":{},"body":{"injectables/TsDropProtectionService.html":{},"coverage.html":{}}}],["protection.service.ts:18",{"_index":1909,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["protection.service.ts:30",{"_index":1913,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["protection.service.ts:46",{"_index":1911,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["protection.service.ts:7",{"_index":1908,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["provid",{"_index":228,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"contributing.html":{},"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["proxi",{"_index":2320,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["public",{"_index":65,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{}}}],["publish",{"_index":3771,"title":{},"body":{"license.html":{}}}],["pull",{"_index":591,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["purpos",{"_index":2041,"title":{},"body":{"components/TsIconButtonComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"license.html":{}}}],["push",{"_index":580,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["px",{"_index":2724,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/variables.html":{}}}],["qa",{"_index":179,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["queri",{"_index":51,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{}}}],["query)=\"myquery($ev",{"_index":201,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["querylist",{"_index":474,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["queryminlength",{"_index":2752,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["querystr",{"_index":2722,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["querysubject",{"_index":218,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["question",{"_index":3444,"title":{},"body":{"contributing.html":{}}}],["quick",{"_index":1753,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["quickli",{"_index":3462,"title":{},"body":{"contributing.html":{}}}],["r.split('\\t",{"_index":997,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["r\\n",{"_index":1010,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["radar",{"_index":1343,"title":{},"body":{"components/TsChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["radio",{"_index":695,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["rail",{"_index":2396,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["rang",{"_index":1622,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["range'},{'nam",{"_index":1134,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["range.compon",{"_index":1824,"title":{},"body":{"modules/TsDateRangeModule.html":{}}}],["range.component.html",{"_index":1749,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["range.component.scss",{"_index":1750,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["range.component.t",{"_index":1696,"title":{},"body":{"interfaces/TsDateRange.html":{},"coverage.html":{}}}],["range.modul",{"_index":675,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["range.module.t",{"_index":1823,"title":{},"body":{"modules/TsDateRangeModule.html":{}}}],["range.selectnodecont",{"_index":1624,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["range.selectnodecontents(el",{"_index":1628,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["range/d",{"_index":674,"title":{},"body":{"modules/TerminusUIModule.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"coverage.html":{}}}],["rangeendchange(ev",{"_index":1860,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["rangestartchange(ev",{"_index":1853,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["rare",{"_index":1398,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["rate",{"_index":2729,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{}}}],["ratio",{"_index":1039,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["re",{"_index":1302,"title":{},"body":{"components/TsChartComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["reach",{"_index":3155,"title":{},"body":{"components/TsTableComponent.html":{}}}],["reactiv",{"_index":1390,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsReactiveFormBaseComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["reactiveformsmodul",{"_index":747,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsInputModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{}}}],["read",{"_index":1987,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"contributing.html":{}}}],["readabl",{"_index":3117,"title":{},"body":{"components/TsTableComponent.html":{},"index.html":{}}}],["readm",{"_index":3,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["readonli",{"_index":839,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/Version.html":{}}}],["reason",{"_index":3518,"title":{},"body":{"contributing.html":{}}}],["rebas",{"_index":3520,"title":{},"body":{"contributing.html":{}}}],["receiv",{"_index":1793,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["recent",{"_index":2911,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["recommend",{"_index":3066,"title":{},"body":{"modules/TsSortModule.html":{},"modules/TsTableModule.html":{}}}],["record",{"_index":850,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["recordcounttoohighmessag",{"_index":2454,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordid",{"_index":816,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["recordsform",{"_index":876,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["recordsperpag",{"_index":2427,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsperpagechang",{"_index":2460,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsperpagechoic",{"_index":2455,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsperpageupdated(select",{"_index":2496,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsremain",{"_index":2510,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsselectlabel",{"_index":2457,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recreat",{"_index":1851,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["redirect",{"_index":2226,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["refer",{"_index":47,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["refin",{"_index":2415,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["reflect",{"_index":3845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regard",{"_index":2404,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["regardless",{"_index":3113,"title":{},"body":{"components/TsTableComponent.html":{}}}],["regex",{"_index":453,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"injectables/TsValidationMessageService.html":{}}}],["regexp",{"_index":358,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["regexp(regex",{"_index":456,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["regexp|str",{"_index":401,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["regist",{"_index":1444,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["register(sort",{"_index":2928,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["registeronchang",{"_index":1425,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["registeronchange(fn",{"_index":439,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["registerontouch",{"_index":1426,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["registerontouched(fn",{"_index":442,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["regular",{"_index":2792,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["rel",{"_index":2192,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["relat",{"_index":3499,"title":{},"body":{"contributing.html":{}}}],["releas",{"_index":3517,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["reli",{"_index":1399,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"index.html":{}}}],["remain",{"_index":2506,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["rememb",{"_index":2201,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"index.html":{}}}],["rememberm",{"_index":2241,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["remot",{"_index":3528,"title":{},"body":{"contributing.html":{}}}],["remov",{"_index":124,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["removed(chip",{"_index":123,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["renam",{"_index":1265,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["render",{"_index":1020,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsMenuComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsValidationMessagesComponent.html":{}}}],["renderer.setelementstyle(elementref.nativeel",{"_index":1262,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["renderer2",{"_index":387,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["report",{"_index":3478,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["repositori",{"_index":3458,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["repres",{"_index":502,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{}}}],["represent",{"_index":3852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reproduc",{"_index":3493,"title":{},"body":{"contributing.html":{}}}],["reproduct",{"_index":3459,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":3451,"title":{},"body":{"contributing.html":{}}}],["requestparam",{"_index":3171,"title":{},"body":{"components/TsTableComponent.html":{}}}],["requesturl",{"_index":3169,"title":{},"body":{"components/TsTableComponent.html":{}}}],["requir",{"_index":35,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{}}}],["requiredspac",{"_index":586,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["reset",{"_index":87,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resetform",{"_index":2211,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["resetselect",{"_index":1580,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["resetvalu",{"_index":1887,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["resiz",{"_index":550,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["resourc",{"_index":2473,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["respond",{"_index":1082,"title":{},"body":{"components/TsCardComponent.html":{}}}],["respons",{"_index":83,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{}}}],["response['item",{"_index":86,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["rest",{"_index":2083,"title":{},"body":{"components/TsIconComponent.html":{}}}],["restrict",{"_index":825,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"license.html":{}}}],["result",{"_index":31,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.row",{"_index":998,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["resultsarray",{"_index":977,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["resultslength",{"_index":3137,"title":{},"body":{"components/TsTableComponent.html":{}}}],["retriev",{"_index":2595,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{}}}],["retrievevalue(opt",{"_index":2626,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["return",{"_index":80,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["revers",{"_index":2890,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["revert",{"_index":1804,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["rgba(0",{"_index":2583,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["right",{"_index":1096,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTooltipComponent.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rightpoint",{"_index":3875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rippl",{"_index":1608,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["ripplecolor",{"_index":1578,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["roger",{"_index":2316,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["role",{"_index":1247,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["rotat",{"_index":3870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rotate(45deg",{"_index":3874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["round",{"_index":2534,"title":{},"body":{"modules/TsPipesModule.html":{},"index.html":{}}}],["roundnumb",{"_index":2670,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["roundnumber(valu",{"_index":2671,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["routerlink",{"_index":489,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["routermodul",{"_index":2143,"title":{},"body":{"modules/TsLinkModule.html":{},"modules/TsNavigationModule.html":{}}}],["row",{"_index":814,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{}}}],["row${rowsthatdontfit",{"_index":936,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["row'",{"_index":2004,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTableComponent.html":{}}}],["row'},{'nam",{"_index":1140,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["row.get('column",{"_index":943,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["row/column",{"_index":853,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rowcount",{"_index":901,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rowcount(valu",{"_index":898,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rows.length).map((r",{"_index":1000,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rows.slice(0",{"_index":999,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rowsthatdontfit",{"_index":934,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rule",{"_index":2007,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"contributing.html":{}}}],["run",{"_index":3511,"title":{},"body":{"contributing.html":{}}}],["rxj",{"_index":161,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":159,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{}}}],["rxjs/operators/catcherror",{"_index":3129,"title":{},"body":{"components/TsTableComponent.html":{}}}],["rxjs/operators/map",{"_index":3125,"title":{},"body":{"components/TsTableComponent.html":{}}}],["rxjs/operators/startwith",{"_index":3124,"title":{},"body":{"components/TsTableComponent.html":{}}}],["rxjs/operators/switchmap",{"_index":3127,"title":{},"body":{"components/TsTableComponent.html":{}}}],["s",{"_index":937,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["safe",{"_index":1805,"title":{},"body":{"interfaces/TsDateRange.html":{},"contributing.html":{}}}],["same",{"_index":2082,"title":{},"body":{"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"components/TsTableComponent.html":{}}}],["sanit",{"_index":362,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["sanitizevalu",{"_index":384,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["sankey",{"_index":1345,"title":{},"body":{"components/TsChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["sat/sun",{"_index":1833,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["saturday",{"_index":1839,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["save",{"_index":276,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChartComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["screenread",{"_index":3053,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["screenshot",{"_index":3464,"title":{},"body":{"contributing.html":{}}}],["scrict",{"_index":1275,"title":{},"body":{"components/TsChartComponent.html":{}}}],["scroll",{"_index":967,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["scrollabl",{"_index":2716,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollable(direct",{"_index":2718,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollar",{"_index":3707,"title":{},"body":{"index.html":{}}}],["scrollbar",{"_index":2674,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"dependencies.html":{},"index.html":{}}}],["scrollbar.css",{"_index":2701,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollbar/css/perfect",{"_index":2700,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollbars'},{'nam",{"_index":1163,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["scrollbars.compon",{"_index":2744,"title":{},"body":{"modules/TsScrollbarsModule.html":{}}}],["scrollbars.component.html",{"_index":2697,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollbars.component.scss",{"_index":2698,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollbars/scrollbars.modul",{"_index":698,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["scrolldown",{"_index":2680,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolli",{"_index":2685,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollleft",{"_index":2681,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollright",{"_index":2682,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollspe",{"_index":2706,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollto(x",{"_index":2720,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolltobottom(spe",{"_index":2730,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolltoelement(querystr",{"_index":2726,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolltoleft(spe",{"_index":2732,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolltoright(spe",{"_index":2734,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolltotop(spe",{"_index":2736,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollup",{"_index":2683,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollx",{"_index":2684,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scss",{"_index":3671,"title":{},"body":{"index.html":{}}}],["search",{"_index":88,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsIconComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["search'},{'nam",{"_index":1165,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["search.compon",{"_index":2822,"title":{},"body":{"modules/TsSearchModule.html":{}}}],["search.component.html",{"_index":2747,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["search.component.scss",{"_index":2746,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["search/search.modul",{"_index":699,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["searchform",{"_index":2753,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["searchqueri",{"_index":221,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["second",{"_index":836,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["secondari",{"_index":469,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["see",{"_index":1065,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["seed",{"_index":22,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{}}}],["seeddaterang",{"_index":1779,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["seedwithformvalues(formgroup",{"_index":1780,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["seem",{"_index":1758,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsReactiveFormBaseComponent.html":{}}}],["select",{"_index":21,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["select'},{'nam",{"_index":1167,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["select.compon",{"_index":2832,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["select/select.modul",{"_index":700,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsPaginatorModule.html":{}}}],["selectablechip",{"_index":223,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selectal",{"_index":3194,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["selectedd",{"_index":1774,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["selectedopt",{"_index":225,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selection)=\"myselection($ev",{"_index":200,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selection.addrange(rang",{"_index":1630,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["selection.removeallrang",{"_index":1629,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["selectionscontrol",{"_index":280,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selectionscontrol(valu",{"_index":277,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selectionscontrol=\"myform.get('mycontrol",{"_index":195,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selectoption(ev",{"_index":330,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selector",{"_index":203,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["selector'},{'nam",{"_index":1160,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["selecttext",{"_index":1581,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["selecttext(el",{"_index":1593,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["sell",{"_index":3774,"title":{},"body":{"license.html":{}}}],["semant",{"_index":3750,"title":{},"body":{"index.html":{}}}],["send",{"_index":3197,"title":{},"body":{"classes/TsTableDataSource.html":{},"contributing.html":{}}}],["sens",{"_index":3686,"title":{},"body":{"index.html":{}}}],["sent",{"_index":75,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["sentenc",{"_index":2537,"title":{},"body":{"modules/TsPipesModule.html":{},"index.html":{}}}],["separ",{"_index":577,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["seri",{"_index":1338,"title":{},"body":{"components/TsChartComponent.html":{}}}],["servic",{"_index":554,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsCopyComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{}}}],["set",{"_index":91,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{}}}],["setaspectratio(valu",{"_index":1064,"title":{},"body":{"components/TsCardComponent.html":{}}}],["setbackground(valu",{"_index":2072,"title":{},"body":{"components/TsIconComponent.html":{}}}],["setborder(valu",{"_index":1068,"title":{},"body":{"components/TsCardComponent.html":{}}}],["setdata(data",{"_index":3203,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["setdirection(direct",{"_index":2978,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["setdisableclear(v",{"_index":2981,"title":{},"body":{"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{}}}],["setid(valu",{"_index":1071,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsCheckboxComponent.html":{}}}],["setischecked(v",{"_index":1465,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["setischecked(valu",{"_index":3253,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["setitems(valu",{"_index":2379,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["setngmodel(v",{"_index":1466,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["setsvgicon(valu",{"_index":2075,"title":{},"body":{"components/TsIconComponent.html":{}}}],["setter",{"_index":918,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["settheme(valu",{"_index":1074,"title":{},"body":{"components/TsCardComponent.html":{}}}],["settimeout",{"_index":2262,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["settl",{"_index":926,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["settsautofocus(valu",{"_index":772,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["settsloadingoverlay(valu",{"_index":2175,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["settsverticalspacing(valu",{"_index":3415,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["setup",{"_index":532,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["setupchart(chart",{"_index":1335,"title":{},"body":{"components/TsChartComponent.html":{}}}],["setupinitialarray",{"_index":2353,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["setupinitialarrays(item",{"_index":572,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["setupmask(cr",{"_index":444,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["setvalue(v",{"_index":2654,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["setvisualization(valu",{"_index":1313,"title":{},"body":{"components/TsChartComponent.html":{}}}],["shadow",{"_index":1047,"title":{},"body":{"components/TsCardComponent.html":{},"index.html":{}}}],["shall",{"_index":3778,"title":{},"body":{"license.html":{}}}],["shell",{"_index":3530,"title":{},"body":{"contributing.html":{}}}],["short",{"_index":1672,"title":{},"body":{"pipes/TsDatePipe.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["shortcut",{"_index":404,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["shouldfocu",{"_index":764,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["shouldoverlaptrigg",{"_index":2280,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["shouldset",{"_index":2178,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["shouldshowrecordsmessage(messag",{"_index":2494,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["show",{"_index":24,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{}}}],["show/hid",{"_index":2162,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["showcolumn",{"_index":2327,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["showform",{"_index":2210,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["shown",{"_index":872,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsTooltipComponent.html":{}}}],["showprogress",{"_index":109,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["showprogress]=\"inprogress",{"_index":196,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["showrecordsperpageselector",{"_index":2458,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["side",{"_index":1098,"title":{},"body":{"components/TsCardComponent.html":{},"classes/TsTableDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["signatur",{"_index":98,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["signifi",{"_index":2134,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["similar",{"_index":2322,"title":{},"body":{"components/TsMenuComponent.html":{},"contributing.html":{}}}],["simpl",{"_index":2300,"title":{},"body":{"components/TsMenuComponent.html":{},"components/TsTableComponent.html":{}}}],["simplechang",{"_index":388,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsChartComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["simpli",{"_index":1092,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["singl",{"_index":486,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}}}],["site",{"_index":2136,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["size",{"_index":1926,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["skipself",{"_index":1229,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"miscellaneous/variables.html":{}}}],["small",{"_index":2324,"title":{},"body":{"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["small(valu",{"_index":2617,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["smaller",{"_index":3322,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["softwar",{"_index":3762,"title":{},"body":{"license.html":{}}}],["solut",{"_index":3680,"title":{},"body":{"index.html":{}}}],["somehow",{"_index":297,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["someth",{"_index":303,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["sometim",{"_index":3109,"title":{},"body":{"components/TsTableComponent.html":{}}}],["sort",{"_index":1169,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sort(sort",{"_index":2936,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sort.direct",{"_index":2985,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{}}}],["sort/sort.modul",{"_index":701,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsTableModule.html":{}}}],["sort=${sort}&order=${order}&page=${pag",{"_index":3172,"title":{},"body":{"components/TsTableComponent.html":{}}}],["sort_animation_transit",{"_index":3608,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sortabl",{"_index":2909,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortable.disableclear",{"_index":2944,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortable.id",{"_index":2929,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortable.start",{"_index":2939,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortbuttonlabel",{"_index":3047,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["sortchang",{"_index":2886,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["sortdescriptionlabel",{"_index":3048,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["sortdirectioncycl",{"_index":2946,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortdirectioncycle.indexof(this.direct",{"_index":2949,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortdirectioncycle.length",{"_index":2950,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortdirectioncycle[nextdirectionindex",{"_index":2951,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortord",{"_index":2954,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortorder.push",{"_index":2956,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortorder.revers",{"_index":2955,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sourc",{"_index":4,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{}}}],["source.t",{"_index":3176,"title":{},"body":{"classes/TsTableDataSource.html":{},"coverage.html":{}}}],["source.ts:19",{"_index":3190,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:24",{"_index":3192,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:30",{"_index":3191,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:38",{"_index":3193,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:43",{"_index":3204,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:46",{"_index":3202,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:48",{"_index":3187,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:65",{"_index":3195,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:80",{"_index":3198,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:86",{"_index":3199,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["space",{"_index":514,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsIconComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["spacing.const",{"_index":3416,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["spacing.direct",{"_index":3074,"title":{},"body":{"modules/TsSpacingModule.html":{}}}],["spacing.directive.t",{"_index":3411,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["spacing.directive.ts:58",{"_index":3414,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["spacing.directive.ts:85",{"_index":3413,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["spacing/spacing.const",{"_index":848,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsConfirmationModalComponent.html":{}}}],["spacing/spacing.modul",{"_index":702,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{}}}],["span",{"_index":3262,"title":{},"body":{"components/TsTooltipComponent.html":{},"index.html":{}}}],["spawn",{"_index":1490,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["spec",{"_index":3535,"title":{},"body":{"contributing.html":{}}}],["specif",{"_index":482,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["specifi",{"_index":921,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["speed",{"_index":2703,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["spend",{"_index":3480,"title":{},"body":{"contributing.html":{}}}],["spinner",{"_index":184,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsButtonModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"index.html":{}}}],["split",{"_index":569,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["splitarray",{"_index":578,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["stack",{"_index":3487,"title":{},"body":{"contributing.html":{}}}],["stackblitz",{"_index":3460,"title":{},"body":{"contributing.html":{}}}],["stand",{"_index":2330,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["standard",{"_index":2137,"title":{},"body":{"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsValidationMessageService.html":{}}}],["start",{"_index":77,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"index.html":{}}}],["startblur(d",{"_index":1815,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startcontrol",{"_index":1783,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startcontrol.valu",{"_index":1786,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startdat",{"_index":1731,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["startdate1",{"_index":1714,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startdate2",{"_index":1716,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startdatecontrol",{"_index":1765,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startdateselected(datepickerev",{"_index":1794,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["starter",{"_index":3461,"title":{},"body":{"contributing.html":{}}}],["startingview",{"_index":1770,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["startinitiald",{"_index":1721,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startmaxd",{"_index":1712,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startmind",{"_index":1713,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startplacehold",{"_index":1768,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startselect",{"_index":1706,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startvalu",{"_index":1785,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startwith",{"_index":3123,"title":{},"body":{"components/TsTableComponent.html":{}}}],["startwith(nul",{"_index":71,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["state",{"_index":1397,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{}}}],["state('asc",{"_index":3860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state('desc",{"_index":3866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statement",{"_index":3542,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":819,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["statu",{"_index":2865,"title":{},"body":{"classes/TsSelectedFile.html":{},"index.html":{}}}],["step",{"_index":1478,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"contributing.html":{},"index.html":{}}}],["stepper",{"_index":3705,"title":{},"body":{"index.html":{}}}],["still",{"_index":840,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"contributing.html":{}}}],["stop",{"_index":84,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["store",{"_index":220,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsImageDimensions.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{}}}],["stream",{"_index":53,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsConfirmationModalComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"classes/TsTableDataSource.html":{}}}],["stricter",{"_index":3090,"title":{},"body":{"components/TsTableComponent.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stringifi",{"_index":1890,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["string|dat",{"_index":1686,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["structur",{"_index":813,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSelectedFile.html":{}}}],["style",{"_index":1052,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{}}}],["style({transform",{"_index":3861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["style.posit",{"_index":2156,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["stylesheet",{"_index":3721,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":207,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["sub",{"_index":2547,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["subject",{"_index":1559,"title":{},"body":{"components/TsConfirmationModalComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"license.html":{}}}],["sublicens",{"_index":3773,"title":{},"body":{"license.html":{}}}],["submiss",{"_index":2230,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"contributing.html":{}}}],["submit",{"_index":1727,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["subscrib",{"_index":50,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["subscribe((data",{"_index":3214,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["subscribe((queri",{"_index":319,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["subscribe((v",{"_index":928,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["subscribe((valu",{"_index":325,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["subscribe(data",{"_index":3158,"title":{},"body":{"components/TsTableComponent.html":{}}}],["subscript",{"_index":3188,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["substanti",{"_index":3779,"title":{},"body":{"license.html":{}}}],["success",{"_index":1596,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["successfulli",{"_index":2224,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"contributing.html":{}}}],["such",{"_index":2005,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsTableDataSource.html":{}}}],["suggest",{"_index":3500,"title":{},"body":{"contributing.html":{}}}],["suit",{"_index":3512,"title":{},"body":{"contributing.html":{}}}],["sunday",{"_index":1840,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["super",{"_index":1420,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["super(columndef",{"_index":1249,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["support",{"_index":341,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["supportsinteract",{"_index":1034,"title":{},"body":{"components/TsCardComponent.html":{}}}],["sure",{"_index":3467,"title":{},"body":{"contributing.html":{}}}],["svg",{"_index":3793,"title":{},"body":{"modules.html":{}}}],["svgicon",{"_index":2057,"title":{},"body":{"components/TsIconComponent.html":{}}}],["svgicon(valu",{"_index":2098,"title":{},"body":{"components/TsIconComponent.html":{}}}],["switchmap",{"_index":3126,"title":{},"body":{"components/TsTableComponent.html":{}}}],["switchmap((term",{"_index":72,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["system",{"_index":3492,"title":{},"body":{"contributing.html":{}}}],["t",{"_index":3186,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["tab",{"_index":2132,"title":{},"body":{"components/TsLinkComponent.html":{},"index.html":{}}}],["tabindex",{"_index":777,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsLinkComponent.html":{}}}],["tabl",{"_index":14,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"coverage.html":{},"index.html":{}}}],["table'",{"_index":3079,"title":{},"body":{"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["table'},{'nam",{"_index":1172,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["table.compon",{"_index":3225,"title":{},"body":{"modules/TsTableModule.html":{}}}],["table.component.scss",{"_index":3078,"title":{},"body":{"components/TsTableComponent.html":{}}}],["table/table.modul",{"_index":703,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["tablecompon",{"_index":3104,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":3648,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":3753,"title":{},"body":{"index.html":{}}}],["take",{"_index":309,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["talli",{"_index":563,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["target",{"_index":1632,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{}}}],["target.classnam",{"_index":1634,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.focu",{"_index":1646,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.remov",{"_index":1653,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.setselectionrange(0",{"_index":1647,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.height",{"_index":1643,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.left",{"_index":1638,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.posit",{"_index":1636,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.top",{"_index":1640,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.width",{"_index":1641,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.textcont",{"_index":1644,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.value.length",{"_index":1648,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["targetel",{"_index":1635,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["task",{"_index":2481,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["tasti",{"_index":2317,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["tbd",{"_index":3538,"title":{},"body":{"contributing.html":{}}}],["team",{"_index":2237,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"contributing.html":{},"index.html":{}}}],["tel",{"_index":374,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["tell",{"_index":1858,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["templat",{"_index":1016,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["templatecontext",{"_index":2430,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["templateref",{"_index":1056,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["templateurl",{"_index":205,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["term",{"_index":76,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["terminu",{"_index":6,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["terminus/ngx",{"_index":164,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsButtonModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"dependencies.html":{},"index.html":{}}}],["terminus/ui",{"_index":1319,"title":{},"body":{"components/TsChartComponent.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{}}}],["terminus/ui/helpers'contribut",{"_index":3725,"title":{},"body":{"index.html":{}}}],["terminus/ui/terminu",{"_index":3722,"title":{},"body":{"index.html":{}}}],["terminusuimodul",{"_index":615,"title":{"modules/TerminusUIModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules.html":{},"overview.html":{}}}],["ternari",{"_index":1366,"title":{},"body":{"components/TsChartComponent.html":{}}}],["test",{"_index":3393,"title":{},"body":{"injectables/TsValidatorsService.html":{},"contributing.html":{}}}],["text",{"_index":244,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["text/csv",{"_index":1014,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["textarea",{"_index":775,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCopyComponent.html":{}}}],["textcont",{"_index":1611,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["textmaskconfig",{"_index":429,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["textmaskinputel",{"_index":433,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["thank",{"_index":3525,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["that'",{"_index":3083,"title":{},"body":{"components/TsTableComponent.html":{},"contributing.html":{}}}],["that\\'",{"_index":2413,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["theme",{"_index":284,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/typealiases.html":{}}}],["theme(valu",{"_index":1113,"title":{},"body":{"components/TsCardComponent.html":{}}}],["theme.typ",{"_index":172,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["theme.types.t",{"_index":3628,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["theme=\"primari",{"_index":197,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["themselv",{"_index":2511,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["thing",{"_index":2572,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._background",{"_index":2097,"title":{},"body":{"components/TsIconComponent.html":{}}}],["this._bord",{"_index":1112,"title":{},"body":{"components/TsCardComponent.html":{}}}],["this._cdkcolumndef",{"_index":3015,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._cdkcolumndef.nam",{"_index":3016,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._columncount",{"_index":894,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._columnhead",{"_index":904,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._columnvalid",{"_index":911,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._currentpageindex",{"_index":2442,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this._data",{"_index":3208,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._data.next(data",{"_index":3206,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._data.valu",{"_index":3207,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._debouncedelay",{"_index":240,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this._direct",{"_index":2918,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this._disableclear",{"_index":2923,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this._formatmodelvaluefn",{"_index":2604,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._formatuilabelfn",{"_index":2597,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._formatuisublabelfn",{"_index":2601,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._id",{"_index":885,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this._initiald",{"_index":1880,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this._ischeck",{"_index":1409,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["this._isdis",{"_index":2709,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._isvisu",{"_index":2609,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._iszerobas",{"_index":2434,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this._maxd",{"_index":1875,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this._maxrow",{"_index":889,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._mind",{"_index":1878,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this._minimumcharact",{"_index":262,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this._nam",{"_index":2612,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._opt",{"_index":2615,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._par",{"_index":1231,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["this._renderchangessubscript",{"_index":3211,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._renderchangessubscription.unsubscrib",{"_index":3212,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._renderdata",{"_index":3216,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._renderdata.next(data",{"_index":3215,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._rowcount",{"_index":899,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._selectionscontrol",{"_index":278,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this._smal",{"_index":2618,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._sort.act",{"_index":3023,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.deregister(thi",{"_index":3019,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.direct",{"_index":3024,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.dis",{"_index":3025,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.register(thi",{"_index":3017,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.sort(thi",{"_index":3020,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._statechanges.complet",{"_index":2927,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this._statechanges.next",{"_index":2926,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this._them",{"_index":1114,"title":{},"body":{"components/TsCardComponent.html":{}}}],["this._totalrecord",{"_index":2450,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this._uid",{"_index":886,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this._updatechangesubscript",{"_index":3210,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._visu",{"_index":1352,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.act",{"_index":2937,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.addcolumnstorows(this.row",{"_index":948,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.addheaders(this.columncount",{"_index":906,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.addrows(neededrow",{"_index":951,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.addrows(this.rowcount",{"_index":923,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.allerror",{"_index":956,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.amchart",{"_index":1353,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amcharts.charts.chorddiagram",{"_index":1374,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amcharts.charts.piechart",{"_index":1369,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amcharts.charts.radarchart",{"_index":1371,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amcharts.charts.sankeydiagram",{"_index":1373,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amcharts.charts.treemap",{"_index":1372,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amcharts.charts.xychart",{"_index":1368,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amcharts.core.create(this.chartdiv.nativeel",{"_index":1367,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amcharts.maps.mapchart",{"_index":1370,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amchartsservice.amchart",{"_index":1354,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.appref",{"_index":2184,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.aspectratiopad",{"_index":1109,"title":{},"body":{"components/TsCardComponent.html":{}}}],["this.auto",{"_index":69,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.autosubmit",{"_index":2811,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.availablespac",{"_index":590,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.blobgenerated.emit(blob",{"_index":930,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.bodyportalhost",{"_index":2182,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.bodyportalhost.attach(this.loadingoverlayport",{"_index":2179,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.bodyportalhost.detach",{"_index":2180,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.bodyportalhost.dispos",{"_index":2191,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.bord",{"_index":1115,"title":{},"body":{"components/TsCardComponent.html":{}}}],["this.breakwidths.length",{"_index":561,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.breakwidths.push(totalspac",{"_index":567,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.breakwidths[this.visibleitemslength",{"_index":587,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.cancelled.emit(tru",{"_index":1542,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.change.emit(this.daterang",{"_index":1801,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.changed.emit(this.currentqueri",{"_index":2807,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.changedetectorref.detectchang",{"_index":326,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["this.changedetectorref.markforcheck",{"_index":1554,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.changepage(this.currentpageindex",{"_index":2480,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.chart",{"_index":1362,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.chart.dispos",{"_index":1363,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.chartinitialized.emit(chart",{"_index":1376,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.checkbox.check",{"_index":1412,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["this.checkpar",{"_index":1232,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["this.clearheadercel",{"_index":905,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.collecterror",{"_index":957,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.columncount",{"_index":924,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.columnhead",{"_index":907,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.comparatorfn",{"_index":268,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.componentfactoryresolv",{"_index":2183,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.cont",{"_index":1617,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.content.nativeel",{"_index":1618,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.content.nativeelement.innertext",{"_index":1619,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.control",{"_index":3344,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.control.error",{"_index":3345,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.control.errors[propertynam",{"_index":3351,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.control.touch",{"_index":3350,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.createcurrentpagelabel(this.currentpageindex",{"_index":2478,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.createoverlay",{"_index":1519,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.createpagesarray(this.totalrecord",{"_index":2475,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.currentpagechanged(foundpag",{"_index":2491,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.currentpageindex",{"_index":2464,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.currentpagelabel",{"_index":2477,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.currentqueri",{"_index":2816,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.currentquery.length",{"_index":2813,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.datasource.data",{"_index":3159,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.dateformgroup",{"_index":1755,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.dateformgroup.get('endd",{"_index":1756,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.dateformgroup.get('startd",{"_index":1766,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.debouncedemit(thi",{"_index":2814,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.default_high_record_messag",{"_index":2432,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.default_max_prefered_record",{"_index":2446,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.default_per_pag",{"_index":2428,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.default_records_per_page_opt",{"_index":2456,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.defaultcolumncount",{"_index":895,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.defaultmaxrow",{"_index":890,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.defaultopen",{"_index":2343,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.defaultrowcount",{"_index":900,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.deleterow(pastedrowid",{"_index":950,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.destroychart",{"_index":1360,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.determineimagedimens",{"_index":1972,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.determineposition(posit",{"_index":2190,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.dimens",{"_index":1980,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.direct",{"_index":2938,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.dis",{"_index":3026,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this.disableclear",{"_index":2945,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.dismissoverlay",{"_index":1521,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.document.body.appendchild(target",{"_index":1645,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.document.createelement('textarea",{"_index":1633,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.document.createrang",{"_index":1627,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.document.execcommand('copi",{"_index":1652,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.documentservice.docu",{"_index":1599,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.elementref",{"_index":1524,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.elementref.nativeel",{"_index":446,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsAutofocusDirective.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["this.endd",{"_index":1752,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.enddatecontrol",{"_index":1809,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.enddatecontrol.setvalue(datepickerevent.valu",{"_index":1810,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endinitiald",{"_index":1777,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmind",{"_index":1802,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(d",{"_index":1816,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(datepickerevent.valu",{"_index":1796,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(startvalu",{"_index":1790,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(this.endmind",{"_index":1803,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(undefin",{"_index":1806,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endselected.emit(datepickerevent.valu",{"_index":1811,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.exampledatabas",{"_index":3139,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.exampledatabase.getrepoissu",{"_index":3145,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.fallbackenddatecontrol",{"_index":1757,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.fallbackstartdatecontrol",{"_index":1767,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.file.nam",{"_index":1971,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.file.typ",{"_index":1967,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.filereader.readasdataurl(this.fil",{"_index":1988,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.filereader.result",{"_index":1978,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.firstpageindex",{"_index":2465,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.formatmodelvaluefn",{"_index":2632,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.formbuilder.array",{"_index":878,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.formbuilder.array([tru",{"_index":2328,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.formbuilder.group",{"_index":877,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["this.formbuilder.group(this.form_group",{"_index":2244,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["this.formcontrol",{"_index":2623,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.formcontrol.valuechang",{"_index":2624,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.formtwo.get('endd",{"_index":1854,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.formtwo.get('startd",{"_index":1861,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.generateblob(v",{"_index":929,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.generatebreakwidth",{"_index":539,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.getnextsortdirection(sort",{"_index":2941,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.hasprotect",{"_index":1914,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.hasselect",{"_index":1631,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.headercel",{"_index":949,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.headercells.controls[index",{"_index":963,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.headercells.controls[index].valu",{"_index":964,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.hiddenitems.getvalu",{"_index":597,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.hiddenitems.next(splitarrays.tru",{"_index":582,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.hiddenitems.next(updatedhiddenarray",{"_index":600,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.host.clickevent.emit(this.host.originalclickev",{"_index":1552,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.host.interceptclick",{"_index":1520,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.host.showprogress",{"_index":1548,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.http.get(`${github_api_endpoint}/search/users?q=${term",{"_index":81,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.http.get(`${requesturl}${requestparam",{"_index":3174,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.id",{"_index":922,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this.init(this.visu",{"_index":1357,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.initi",{"_index":2468,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.initiald",{"_index":1886,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.initialvalu",{"_index":2805,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.injector",{"_index":2185,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.innervalu",{"_index":2659,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["this.inprogress",{"_index":78,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.input_debounce_tim",{"_index":2783,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.inputel",{"_index":445,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["this.isdis",{"_index":2629,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.isinprogress",{"_index":110,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.iszerobas",{"_index":2462,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.loadingoverlayport",{"_index":2186,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.loginform",{"_index":2259,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["this.major",{"_index":3435,"title":{},"body":{"classes/Version.html":{}}}],["this.maximumvalidationmessag",{"_index":994,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.maxrow",{"_index":933,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.mimetyp",{"_index":1966,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.minimumcharact",{"_index":315,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.minor",{"_index":3437,"title":{},"body":{"classes/Version.html":{}}}],["this.modalinst",{"_index":1545,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.modalinstance.confirm.subscribe((shouldproce",{"_index":1550,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.multipl",{"_index":342,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.mydatasourc",{"_index":3085,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.mydatasource.data",{"_index":3086,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.myform.get('daterange.startd",{"_index":1742,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.nam",{"_index":1970,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.onchang",{"_index":440,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["this.onchangecallback",{"_index":2662,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["this.onchangecallback(v",{"_index":2660,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["this.ontouch",{"_index":443,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["this.ontouchedcallback",{"_index":2661,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["this.optionselected.emit(event.option.valu",{"_index":346,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.overlay.create(overlayconfig",{"_index":1534,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlay.position().connectedto",{"_index":1523,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlayref",{"_index":1533,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlayref._keydownevents.pip",{"_index":1538,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlayref.attach(userprofileportal).inst",{"_index":1546,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlayref.dispos",{"_index":1553,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.pagesarray",{"_index":2474,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.pagesarray.length",{"_index":2467,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.pageselect.emit(pag",{"_index":2484,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.paginator.currentpageindex",{"_index":3141,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.paginator.pageselect",{"_index":3143,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.paginator.recordsperpag",{"_index":3148,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.paginator.recordsperpagechang",{"_index":3144,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.patch",{"_index":3439,"title":{},"body":{"classes/Version.html":{}}}],["this.posit",{"_index":2189,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.prev",{"_index":1916,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.pristineitem",{"_index":537,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.query.next(queri",{"_index":320,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.querysubject.pip",{"_index":310,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.recordcounttoohighmessag",{"_index":2470,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.recordsform.get('head",{"_index":882,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsform.get('record",{"_index":883,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsform.setcontrol('head",{"_index":1005,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsform.setcontrol('record",{"_index":1003,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsform.valuechanges.pip",{"_index":925,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsperpag",{"_index":2476,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.recordsperpagechange.emit(select",{"_index":2497,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.resetform",{"_index":2257,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["this.resetsearch",{"_index":343,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.resultslength",{"_index":3151,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.retrievevalue(opt",{"_index":2631,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.rows.insert(indextoinjectat",{"_index":939,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.rows.length",{"_index":932,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.rows.push(createdrow",{"_index":941,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.scrollbar",{"_index":2713,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.geometry('scrol",{"_index":2714,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.posit",{"_index":2715,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrollable(direct",{"_index":2719,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrollto(x",{"_index":2721,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrolltobottom(offset",{"_index":2731,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrolltoelement(querystr",{"_index":2728,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrolltoleft(offset",{"_index":2733,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrolltoright(offset",{"_index":2735,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrolltotop(offset",{"_index":2737,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.upd",{"_index":2738,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbars.upd",{"_index":2679,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollspe",{"_index":2727,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.searchform.patchvalu",{"_index":2806,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.searchform.valid",{"_index":2812,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.searchform.value.queri",{"_index":2803,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.searchform.value.query.trim",{"_index":2804,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.seeddaterange(this.startinitiald",{"_index":1776,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.seedwithformvalues(this.dateformgroup",{"_index":1778,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.selecteddate.emit(this.daterang",{"_index":1800,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.selectedopt",{"_index":287,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectedoptions.indexof(opt",{"_index":351,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectedoptions.push(select",{"_index":340,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selection.emit(this.selectedopt",{"_index":347,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectionscontrol",{"_index":281,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectionscontrol.setvalu",{"_index":289,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectionscontrol.setvalue(this.selectedopt",{"_index":290,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectionscontrol.valuechanges.pip",{"_index":324,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.setduplicateerror(this.selectionscontrol",{"_index":338,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.setupinitialarrays(this.pristineitem",{"_index":538,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.shouldfocu",{"_index":781,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["this.showform",{"_index":2258,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["this.siz",{"_index":1968,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.sort.act",{"_index":3146,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.sort.direct",{"_index":3147,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.sort.sortchange.subscrib",{"_index":3107,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.sortables.delete(sortable.id",{"_index":2935,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.sortables.has(sortable.id",{"_index":2930,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.sortables.set(sortable.id",{"_index":2932,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.sortchange.next({act",{"_index":2942,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.start",{"_index":2940,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.startd",{"_index":1751,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startdatecontrol",{"_index":1797,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startdatecontrol.setvalue(datepickerevent.valu",{"_index":1798,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startinitiald",{"_index":1789,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxd",{"_index":1812,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(d",{"_index":1818,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(datepickerevent.valu",{"_index":1808,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(endvalu",{"_index":1791,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(this.startmaxd",{"_index":1813,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(undefin",{"_index":1814,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startselected.emit(datepickerevent.valu",{"_index":1799,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.submitted.emit({queri",{"_index":2815,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.templatecontext.$implicit",{"_index":2469,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.textmaskconfig",{"_index":449,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["this.textmaskinputel",{"_index":450,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["this.toomanyrowsmessag",{"_index":935,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.totalrecord",{"_index":2479,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.trigg",{"_index":233,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.trigger.openmenu",{"_index":2344,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.trigger_icon_default",{"_index":2341,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.trigger_icon_util",{"_index":2342,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.triggericon",{"_index":2340,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.triggertyp",{"_index":2338,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.typeconstraint",{"_index":1973,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.typeconstraint.indexof(this.file.typ",{"_index":1974,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.uiformatfn",{"_index":250,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.updateallrowid",{"_index":955,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.updatelist",{"_index":540,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.updatescrollcont",{"_index":2678,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.us",{"_index":68,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.user.fullnam",{"_index":527,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.user.fullname.length",{"_index":526,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.validateimagedimensions(this.imagedimensionconstraint",{"_index":1984,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.validateimmedi",{"_index":3348,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.validateonchang",{"_index":3349,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.validationmessageservice.getvalidatorerrormessage(propertynam",{"_index":3352,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.validations.filetyp",{"_index":1975,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.validations.imagedimens",{"_index":1983,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.validatorsservice.email",{"_index":2240,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["this.validatorsservice.greaterthan(10",{"_index":3390,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["this.validatorsservice.maxdate(event.valu",{"_index":1862,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.validatorsservice.mindate(event.valu",{"_index":1857,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.validatorsservice.url",{"_index":835,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.valu",{"_index":1411,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["this.verifyisdateobject(valu",{"_index":1876,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.visibleitems.getvalu",{"_index":593,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visibleitems.getvalue().length",{"_index":530,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visibleitems.next(splitarrays.fals",{"_index":581,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visibleitems.next(updatedvisiblearray",{"_index":610,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visibleitemslist.nativeelement.offsetwidth",{"_index":518,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visiblelinkelement.foreach((item",{"_index":562,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visu",{"_index":1378,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.window.getselect",{"_index":1621,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.window.prompt('copi",{"_index":1657,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.windowservice.nativewindow",{"_index":1609,"title":{},"body":{"components/TsCopyComponent.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["this.windowservice.nativewindow.addeventlistener('dragov",{"_index":1915,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.windowservice.nativewindow.addeventlistener('drop",{"_index":1917,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.windowservice.nativewindow.removeeventlistener('dragov",{"_index":1918,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.windowservice.nativewindow.removeeventlistener('drop",{"_index":1919,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.writevalue(v",{"_index":2625,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.zone.runoutsideangular",{"_index":1361,"title":{},"body":{"components/TsChartComponent.html":{}}}],["though",{"_index":2809,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["thought",{"_index":3688,"title":{},"body":{"index.html":{}}}],["three",{"_index":1704,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["through",{"_index":105,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["throughout",{"_index":3533,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":253,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"directives/TsCardTitleDirective.html":{},"pipes/TsDatePipe.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["thrown",{"_index":3485,"title":{},"body":{"contributing.html":{}}}],["thursday",{"_index":1681,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["tie",{"_index":1705,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["time",{"_index":822,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPipesModule.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"index.html":{}}}],["timeout",{"_index":2260,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["timestamp",{"_index":1685,"title":{},"body":{"pipes/TsDatePipe.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["titl",{"_index":961,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsMenuComponent.html":{},"modules/TsPipesModule.html":{},"components/TsTableComponent.html":{},"index.html":{}}}],["title.direct",{"_index":1212,"title":{},"body":{"modules/TsCardModule.html":{}}}],["title.directive.t",{"_index":1214,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"coverage.html":{}}}],["title.directive.ts:21",{"_index":1228,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["title.directive.ts:27",{"_index":1220,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["title.directive.ts:42",{"_index":1227,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["title.directive.ts:50",{"_index":1225,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["todo",{"_index":480,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{}}}],["toggl",{"_index":108,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"index.html":{}}}],["toggle'},{'nam",{"_index":1174,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["toggle.compon",{"_index":3260,"title":{},"body":{"modules/TsToggleModule.html":{}}}],["toggle.component.html",{"_index":2877,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["toggle.component.scss",{"_index":2878,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["toggle/toggle.modul",{"_index":704,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["token",{"_index":729,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":169,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsButtonModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{},"dependencies.html":{},"index.html":{}}}],["tools/coercion",{"_index":165,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["tools/keycod",{"_index":1513,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["tooltip",{"_index":2436,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"components/TsTooltipComponent.html":{},"index.html":{}}}],["tooltip'},{'nam",{"_index":1176,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tooltip.compon",{"_index":3280,"title":{},"body":{"modules/TsTooltipModule.html":{}}}],["tooltip.component.html",{"_index":3264,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["tooltip.component.scss",{"_index":3263,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["tooltip/tooltip.modul",{"_index":705,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCopyModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsPaginatorModule.html":{}}}],["tooltipposit",{"_index":3266,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["tooltipvalu",{"_index":3267,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["toomanyrowsmessag",{"_index":871,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["top",{"_index":1095,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["tort",{"_index":3792,"title":{},"body":{"license.html":{}}}],["total",{"_index":564,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["total_count",{"_index":3162,"title":{},"body":{"components/TsTableComponent.html":{}}}],["totalrecord",{"_index":2452,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["totalrecords(record",{"_index":2449,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["totalspac",{"_index":560,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["touch",{"_index":1442,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["trace",{"_index":3488,"title":{},"body":{"contributing.html":{}}}],["track",{"_index":1602,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["trackbi",{"_index":103,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["transform",{"_index":1668,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["transform(valu",{"_index":1669,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["transition('asc",{"_index":3868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('desc",{"_index":3884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('void",{"_index":3880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey",{"_index":3883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(0px",{"_index":3862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(10px",{"_index":3867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(25",{"_index":3882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":1017,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["treemap",{"_index":1344,"title":{},"body":{"components/TsChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tri",{"_index":1651,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["triag",{"_index":3497,"title":{},"body":{"contributing.html":{}}}],["trigger",{"_index":235,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["trigger('ind",{"_index":3859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('indicatortoggl",{"_index":3879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('leftpoint",{"_index":3872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('rightpoint",{"_index":3876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger_icon_default",{"_index":2281,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["trigger_icon_util",{"_index":2282,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["triggerformreset",{"_index":2217,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["triggericon",{"_index":2283,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["triggertyp",{"_index":2288,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["true",{"_index":79,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"miscellaneous/variables.html":{}}}],["true;custom",{"_index":111,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["truncat",{"_index":992,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["truthi",{"_index":760,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ts",{"_index":204,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["ts_accepted_mime_typ",{"_index":3579,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ts_amcharts_token",{"_index":733,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ts_custom_icon",{"_index":2068,"title":{},"body":{"components/TsIconComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ts_custom_icons.indexof(valu",{"_index":2100,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ts_sort_header_intl_provid",{"_index":3056,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ts_sort_header_intl_provider_factori",{"_index":3058,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ts_sort_header_intl_provider_factory(parentintl",{"_index":3054,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["ts_space",{"_index":847,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsConfirmationModalComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ts_spacing.large[0",{"_index":1562,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["ts_spacing.small[0",{"_index":869,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["ts_spacing[typ",{"_index":3423,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["ts_spacing[type].length",{"_index":3424,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["tsamchartsservic",{"_index":715,"title":{"injectables/TsAmChartsService.html":{}},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"coverage.html":{},"overview.html":{}}}],["tsamchartstoken",{"_index":720,"title":{"interfaces/TsAmChartsToken.html":{}},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"coverage.html":{}}}],["tsaspectratiotyp",{"_index":1085,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsautocomplet",{"_index":215,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["tsautocompletecomparatorfn",{"_index":97,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"miscellaneous/typealiases.html":{}}}],["tsautocompletecompon",{"_index":67,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsautocompleteformatterfn",{"_index":114,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"miscellaneous/typealiases.html":{}}}],["tsautocompletemodul",{"_index":625,"title":{"modules/TsAutocompleteModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules.html":{},"overview.html":{}}}],["tsautocompleteselectedev",{"_index":177,"title":{"classes/TsAutocompleteSelectedEvent.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"coverage.html":{}}}],["tsautofocu",{"_index":763,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["tsautofocus(valu",{"_index":780,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["tsautofocus]'},{'nam",{"_index":1178,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsautofocusdirect",{"_index":756,"title":{"directives/TsAutofocusDirective.html":{}},"body":{"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsautofocusmodul",{"_index":626,"title":{"modules/TsAutofocusModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsInputModule.html":{},"modules.html":{},"overview.html":{}}}],["tsbutton",{"_index":1547,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["tsbuttonactiontyp",{"_index":2026,"title":{},"body":{"components/TsIconButtonComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"miscellaneous/typealiases.html":{}}}],["tsbuttoncompon",{"_index":795,"title":{},"body":{"modules/TsButtonModule.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsbuttonformattyp",{"_index":2290,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsbuttonformattypesarray",{"_index":3551,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tsbuttonfunctiontyp",{"_index":2028,"title":{},"body":{"components/TsIconButtonComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"miscellaneous/typealiases.html":{}}}],["tsbuttonmodul",{"_index":627,"title":{"modules/TsButtonModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMenuModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["tscard",{"_index":1024,"title":{},"body":{"components/TsCardComponent.html":{}}}],["tscardborderopt",{"_index":1041,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tscardcompon",{"_index":1015,"title":{"components/TsCardComponent.html":{}},"body":{"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tscardmodul",{"_index":629,"title":{"modules/TsCardModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCardModule.html":{},"modules.html":{},"overview.html":{}}}],["tscardtitl",{"_index":1091,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{}}}],["tscardtitle]'},{'nam",{"_index":1180,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tscardtitledirect",{"_index":1179,"title":{"directives/TsCardTitleDirective.html":{}},"body":{"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tscelldef",{"_index":1239,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["tscelldef]'},{'nam",{"_index":1182,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tscelldefdirect",{"_index":1181,"title":{"directives/TsCellDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tscelldirect",{"_index":1183,"title":{"directives/TsCellDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tschart",{"_index":1278,"title":{},"body":{"components/TsChartComponent.html":{}}}],["tschartcompon",{"_index":1124,"title":{"components/TsChartComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tschartmodul",{"_index":630,"title":{"modules/TsChartModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsChartModule.html":{},"modules.html":{},"overview.html":{}}}],["tschartvisualizationopt",{"_index":1298,"title":{},"body":{"components/TsChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tscheckbox",{"_index":1405,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["tscheckboxchang",{"_index":1387,"title":{"classes/TsCheckboxChange.html":{}},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"coverage.html":{}}}],["tscheckboxcompon",{"_index":1126,"title":{"components/TsCheckboxComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tscheckboxmodul",{"_index":631,"title":{"modules/TsCheckboxModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsLoginFormModule.html":{},"modules.html":{},"overview.html":{}}}],["tscolumndef",{"_index":1264,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["tscolumndef]'},{'nam",{"_index":1186,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tscolumndefdirect",{"_index":1185,"title":{"directives/TsColumnDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsconfig.skiplibcheck",{"_index":1277,"title":{},"body":{"components/TsChartComponent.html":{}}}],["tsconfirm",{"_index":1479,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{}}}],["tsconfirmation]'},{'nam",{"_index":1188,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsconfirmationdirect",{"_index":1187,"title":{"directives/TsConfirmationDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsconfirmationmodalcompon",{"_index":1128,"title":{"components/TsConfirmationModalComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsconfirmationmodul",{"_index":632,"title":{"modules/TsConfirmationModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsConfirmationModule.html":{},"modules.html":{},"overview.html":{}}}],["tscopi",{"_index":1574,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["tscopycompon",{"_index":1131,"title":{"components/TsCopyComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tscopymodul",{"_index":633,"title":{"modules/TsCopyModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCopyModule.html":{},"modules.html":{},"overview.html":{}}}],["tscsventri",{"_index":858,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["tscsventrycompon",{"_index":805,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tscsventrymodul",{"_index":628,"title":{"modules/TsCSVEntryModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules.html":{},"overview.html":{}}}],["tscsventryrecord",{"_index":811,"title":{"interfaces/TsCSVEntryRecord.html":{}},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"coverage.html":{}}}],["tscsvformcont",{"_index":849,"title":{"interfaces/TsCSVFormContents.html":{}},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"coverage.html":{}}}],["tsdate",{"_index":1667,"title":{},"body":{"pipes/TsDatePipe.html":{},"index.html":{}}}],["tsdatepick",{"_index":1868,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["tsdatepickercompon",{"_index":1135,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tsdatepickerinputev",{"_index":1825,"title":{"classes/TsDatepickerInputEvent.html":{}},"body":{"classes/TsDatepickerInputEvent.html":{},"coverage.html":{}}}],["tsdatepickermodul",{"_index":635,"title":{"modules/TsDatepickerModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules.html":{},"overview.html":{}}}],["tsdatepip",{"_index":1665,"title":{"pipes/TsDatePipe.html":{}},"body":{"pipes/TsDatePipe.html":{},"modules/TsPipesModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsdaterang",{"_index":1694,"title":{"interfaces/TsDateRange.html":{}},"body":{"interfaces/TsDateRange.html":{},"coverage.html":{}}}],["tsdaterangecompon",{"_index":1133,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsdaterangemodul",{"_index":634,"title":{"modules/TsDateRangeModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsDateRangeModule.html":{},"modules.html":{},"overview.html":{}}}],["tsdatetyp",{"_index":1670,"title":{},"body":{"pipes/TsDatePipe.html":{},"miscellaneous/typealiases.html":{}}}],["tsdocumentservic",{"_index":842,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCopyComponent.html":{},"modules/TsFileUploadModule.html":{}}}],["tsdropprotectionservic",{"_index":1902,"title":{"injectables/TsDropProtectionService.html":{}},"body":{"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"coverage.html":{},"overview.html":{}}}],["tsfileacceptedmimetyp",{"_index":1948,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tsfileimagedimensionconstraint",{"_index":1930,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{}}}],["tsfileimagedimensioncontraint",{"_index":1921,"title":{"interfaces/TsFileImageDimensionContraint.html":{}},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tsfileuploadcompon",{"_index":1137,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"modules/TsFileUploadModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tsfileuploadmodul",{"_index":636,"title":{"modules/TsFileUploadModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsFileUploadModule.html":{},"modules.html":{},"overview.html":{}}}],["tsfilevalid",{"_index":1941,"title":{"interfaces/TsFileValidations.html":{}},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"coverage.html":{}}}],["tsheadercelldef",{"_index":1246,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["tsheadercelldef]'},{'nam",{"_index":1190,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsheadercelldefdirect",{"_index":1189,"title":{"directives/TsHeaderCellDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsheadercelldirect",{"_index":1191,"title":{"directives/TsHeaderCellDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsheaderrow",{"_index":1998,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsheaderrowcompon",{"_index":1139,"title":{"components/TsHeaderRowComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsheaderrowdef",{"_index":2006,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsheaderrowdef]'},{'nam",{"_index":1193,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsheaderrowdefdirect",{"_index":1192,"title":{"directives/TsHeaderRowDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsicon",{"_index":2051,"title":{},"body":{"components/TsIconComponent.html":{}}}],["tsiconbutton",{"_index":2018,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["tsiconbuttoncompon",{"_index":1141,"title":{"components/TsIconButtonComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsiconbuttonmodul",{"_index":637,"title":{"modules/TsIconButtonModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["tsiconcompon",{"_index":1142,"title":{"components/TsIconComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsiconmodul",{"_index":638,"title":{"modules/TsIconModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsCopyModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsRadioGroupModule.html":{},"modules.html":{},"overview.html":{}}}],["tsimagedimens",{"_index":1947,"title":{"classes/TsImageDimensions.html":{}},"body":{"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{},"coverage.html":{}}}],["tsimagedimensions(img.naturalwidth",{"_index":1981,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["tsinputautocompletetyp",{"_index":3811,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tsinputcompon",{"_index":1144,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tsinputmodul",{"_index":639,"title":{"modules/TsInputModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsInputModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["tsinputtyp",{"_index":3813,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tslink",{"_index":2122,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["tslinkcompon",{"_index":1146,"title":{"components/TsLinkComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tslinkmodul",{"_index":640,"title":{"modules/TsLinkModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoginFormModule.html":{},"modules.html":{},"overview.html":{}}}],["tslint",{"_index":415,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["tslint:dis",{"_index":1266,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tslint:disable:no",{"_index":409,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["tslint:en",{"_index":1268,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tsloadingoverlay",{"_index":2148,"title":{},"body":{"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["tsloadingoverlay(valu",{"_index":2177,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["tsloadingoverlay]'},{'nam",{"_index":1195,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsloadingoverlaycompon",{"_index":1148,"title":{"components/TsLoadingOverlayComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsloadingoverlaydirect",{"_index":1194,"title":{"directives/TsLoadingOverlayDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsloadingoverlaymodul",{"_index":641,"title":{"modules/TsLoadingOverlayModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules.html":{},"overview.html":{}}}],["tsloginform",{"_index":2203,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["tsloginformcompon",{"_index":1150,"title":{"components/TsLoginFormComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsloginformmodul",{"_index":642,"title":{"modules/TsLoginFormModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{},"modules.html":{},"overview.html":{}}}],["tsloginformrespons",{"_index":2252,"title":{"interfaces/TsLoginFormResponse.html":{}},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"coverage.html":{}}}],["tsmask",{"_index":420,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["tsmask(valu",{"_index":435,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["tsmask]'},{'nam",{"_index":1196,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsmaskdirect",{"_index":413,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tsmaskmodul",{"_index":643,"title":{"modules/TsMaskModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsMaskModule.html":{},"modules.html":{},"overview.html":{}}}],["tsmenu",{"_index":2277,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["tsmenucompon",{"_index":1152,"title":{"components/TsMenuComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsmenumodul",{"_index":644,"title":{"modules/TsMenuModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsMenuModule.html":{},"modules/TsPaginatorModule.html":{},"modules.html":{},"overview.html":{}}}],["tsmenupositiontypesi",{"_index":2296,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsmenupositiontypesx",{"_index":2294,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsmenutriggertyp",{"_index":2299,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavig",{"_index":508,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["tsnavigationactionitem",{"_index":490,"title":{"interfaces/TsNavigationActionItem.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationcompon",{"_index":465,"title":{"components/TsNavigationComponent.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationitem",{"_index":493,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationlinkitem",{"_index":483,"title":{"interfaces/TsNavigationLinkItem.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationmodul",{"_index":645,"title":{"modules/TsNavigationModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsNavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["tsnavigationpayload",{"_index":495,"title":{"interfaces/TsNavigationPayload.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"coverage.html":{}}}],["tspagin",{"_index":2408,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["tspaginatorcompon",{"_index":1155,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tspaginatormenuitem",{"_index":2388,"title":{"interfaces/TsPaginatorMenuItem.html":{}},"body":{"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"coverage.html":{}}}],["tspaginatormodul",{"_index":646,"title":{"modules/TsPaginatorModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tspipesmodul",{"_index":693,"title":{"modules/TsPipesModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsPipesModule.html":{},"modules.html":{},"overview.html":{}}}],["tsradiochang",{"_index":2543,"title":{"classes/TsRadioChange.html":{}},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"coverage.html":{}}}],["tsradiocompon",{"_index":2575,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["tsradioformatfn",{"_index":2576,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["tsradiogroup",{"_index":2580,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["tsradiogroupcompon",{"_index":1157,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tsradiogroupmodul",{"_index":647,"title":{"modules/TsRadioGroupModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsRadioGroupModule.html":{},"modules.html":{},"overview.html":{}}}],["tsradioopt",{"_index":2569,"title":{"interfaces/TsRadioOption.html":{}},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"coverage.html":{}}}],["tsreactiveformbasecompon",{"_index":624,"title":{"components/TsReactiveFormBaseComponent.html":{}},"body":{"modules/TerminusUIModule.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsreactiveformbasecomponent:26",{"_index":1455,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:31",{"_index":1458,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:36",{"_index":1461,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:42",{"_index":1439,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:61",{"_index":1441,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:69",{"_index":1443,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:77",{"_index":1446,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:85",{"_index":1448,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsroundnumb",{"_index":2667,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{},"index.html":{}}}],["tsroundnumberpip",{"_index":2528,"title":{"pipes/TsRoundNumberPipe.html":{}},"body":{"modules/TsPipesModule.html":{},"pipes/TsRoundNumberPipe.html":{},"coverage.html":{},"overview.html":{}}}],["tsrow",{"_index":2014,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsrowcompon",{"_index":1161,"title":{"components/TsRowComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsrowdef",{"_index":2011,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTableComponent.html":{}}}],["tsrowdef]'},{'nam",{"_index":1198,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsrowdefcolumn",{"_index":2012,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsrowdefdirect",{"_index":1197,"title":{"directives/TsRowDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsrowdefwhen",{"_index":2013,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsscrollbar",{"_index":2702,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["tsscrollbarposit",{"_index":2672,"title":{"classes/TsScrollbarPosition.html":{}},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"coverage.html":{}}}],["tsscrollbarscompon",{"_index":1162,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tsscrollbarsgeometri",{"_index":2696,"title":{"classes/TsScrollbarsGeometry.html":{}},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"coverage.html":{}}}],["tsscrollbarsmodul",{"_index":648,"title":{"modules/TsScrollbarsModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsScrollbarsModule.html":{},"modules.html":{},"overview.html":{}}}],["tsscrollbarsscrolldirect",{"_index":2694,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["tssearchcompon",{"_index":1164,"title":{"components/TsSearchComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tssearchmodul",{"_index":649,"title":{"modules/TsSearchModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["tssearchrespons",{"_index":2802,"title":{"interfaces/TsSearchResponse.html":{}},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"coverage.html":{}}}],["tsselectcompon",{"_index":1166,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"modules/TsSelectModule.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tsselectedfil",{"_index":1959,"title":{"classes/TsSelectedFile.html":{}},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"coverage.html":{}}}],["tsselectformatfn",{"_index":3818,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tsselectmodul",{"_index":650,"title":{"modules/TsSelectModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsSelectModule.html":{},"modules.html":{},"overview.html":{}}}],["tssentencecas",{"_index":2868,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{},"index.html":{}}}],["tssentencecasepip",{"_index":2529,"title":{"pipes/TsSentenceCasePipe.html":{}},"body":{"modules/TsPipesModule.html":{},"pipes/TsSentenceCasePipe.html":{},"coverage.html":{},"overview.html":{}}}],["tsslidetogglechang",{"_index":2872,"title":{"classes/TsSlideToggleChange.html":{}},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"coverage.html":{}}}],["tssort",{"_index":2885,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tssort]'},{'nam",{"_index":1200,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tssortabl",{"_index":2908,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortable'",{"_index":2913,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortableitem",{"_index":2902,"title":{"interfaces/TsSortableItem.html":{}},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"coverage.html":{}}}],["tssortact",{"_index":2959,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["tssortanim",{"_index":2988,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tssortanimations.ind",{"_index":3000,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortanimations.indicatortoggl",{"_index":3003,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortanimations.leftpoint",{"_index":3001,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortanimations.rightpoint",{"_index":3002,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortbas",{"_index":2881,"title":{"classes/TsSortBase.html":{}},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"coverage.html":{}}}],["tssortchang",{"_index":2960,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["tssortdirect",{"_index":1199,"title":{"directives/TsSortDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tssortdis",{"_index":2894,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortdisableclear",{"_index":2892,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssorthead",{"_index":2995,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortheaderbas",{"_index":2982,"title":{"classes/TsSortHeaderBase.html":{}},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"coverage.html":{}}}],["tssortheadercompon",{"_index":1168,"title":{"components/TsSortHeaderComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tssortheaderintl",{"_index":2895,"title":{"injectables/TsSortHeaderIntl.html":{}},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tssortmodul",{"_index":651,"title":{"modules/TsSortModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tssortstart",{"_index":2891,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortstat",{"_index":2903,"title":{"interfaces/TsSortState.html":{}},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"coverage.html":{}}}],["tsspacingmodul",{"_index":652,"title":{"modules/TsSpacingModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsSpacingModule.html":{},"modules.html":{},"overview.html":{}}}],["tsstylethemetyp",{"_index":170,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tsstylethemetypesarray",{"_index":3629,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tstabl",{"_index":3077,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tstablecompon",{"_index":1171,"title":{"components/TsTableComponent.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tstabledatasourc",{"_index":3084,"title":{"classes/TsTableDataSource.html":{}},"body":{"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"coverage.html":{}}}],["tstabledatasource();simpli",{"_index":3095,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tstabledatasource(initial_data)4",{"_index":3092,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tstabledatasource(initial_data);an",{"_index":3089,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tstablemodul",{"_index":653,"title":{"modules/TsTableModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tstimeago",{"_index":3228,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{},"index.html":{}}}],["tstimeagopip",{"_index":2530,"title":{"pipes/TsTimeAgoPipe.html":{}},"body":{"modules/TsPipesModule.html":{},"pipes/TsTimeAgoPipe.html":{},"coverage.html":{},"overview.html":{}}}],["tstitlecas",{"_index":3238,"title":{},"body":{"pipes/TsTitleCasePipe.html":{},"index.html":{}}}],["tstitlecasepip",{"_index":2531,"title":{"pipes/TsTitleCasePipe.html":{}},"body":{"modules/TsPipesModule.html":{},"pipes/TsTitleCasePipe.html":{},"coverage.html":{},"overview.html":{}}}],["tstogglecompon",{"_index":1173,"title":{"components/TsToggleComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tstogglemodul",{"_index":654,"title":{"modules/TsToggleModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsToggleModule.html":{},"modules.html":{},"overview.html":{}}}],["tstooltipcompon",{"_index":1175,"title":{"components/TsTooltipComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"components/TsValidationMessagesComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tstooltipmodul",{"_index":655,"title":{"modules/TsTooltipModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCopyModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsTooltipModule.html":{},"modules.html":{},"overview.html":{}}}],["tstooltippositiontyp",{"_index":3271,"title":{},"body":{"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsuser",{"_index":477,"title":{"interfaces/TsUser.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"coverage.html":{}}}],["tsvalidationmessagescompon",{"_index":1177,"title":{"components/TsValidationMessagesComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"coverage.html":{},"overview.html":{}}}],["tsvalidationmessageservic",{"_index":3281,"title":{"injectables/TsValidationMessageService.html":{}},"body":{"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"coverage.html":{},"overview.html":{}}}],["tsvalidationmessagesmodul",{"_index":656,"title":{"modules/TsValidationMessagesModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSelectModule.html":{},"modules/TsValidationMessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["tsvalidatorsservic",{"_index":657,"title":{"injectables/TsValidatorsService.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsInputModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidatorsService.html":{},"coverage.html":{},"overview.html":{}}}],["tsvalidatorsservicemock",{"_index":3394,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["tsverticalspac",{"_index":1202,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["tsverticalspacing(valu",{"_index":3417,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["tsverticalspacingdirect",{"_index":1201,"title":{"directives/TsVerticalSpacingDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsverticalspacingtyp",{"_index":3412,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["tswindowservic",{"_index":799,"title":{},"body":{"modules/TsButtonModule.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["two",{"_index":133,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{}}}],["type",{"_index":63,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":3800,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeconstraint",{"_index":1957,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["typeisinvalid",{"_index":3422,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["typeof",{"_index":313,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["types.t",{"_index":3578,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1274,"title":{},"body":{"components/TsChartComponent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"index.html":{}}}],["typographi",{"_index":3714,"title":{},"body":{"index.html":{}}}],["ui",{"_index":112,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"index.html":{}}}],["ui.css'scss",{"_index":3723,"title":{},"body":{"index.html":{}}}],["ui/.../amcharts.service.t",{"_index":3840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../autocomplete.component.t",{"_index":3805,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../button.component.t",{"_index":3806,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../card.component.t",{"_index":3804,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../chart.component.t",{"_index":3807,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../checkbox.component.t",{"_index":3835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../csv",{"_index":3839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../csv.t",{"_index":3834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../date.pipe.t",{"_index":3808,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../datepicker.component.t",{"_index":3836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../fil",{"_index":3838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../icon.component.t",{"_index":3803,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../imag",{"_index":3810,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../input.component.t",{"_index":3812,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../mask.directive.t",{"_index":3802,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../menu.component.t",{"_index":3814,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../mim",{"_index":3809,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../navigation.component.t",{"_index":3815,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../radio",{"_index":3816,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../scrollbars.component.t",{"_index":3817,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../select",{"_index":3832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../select.component.t",{"_index":3819,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../sort",{"_index":3830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../sort.directive.t",{"_index":3820,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../spacing.constant.t",{"_index":3831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../styl",{"_index":3821,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../toggle.component.t",{"_index":3837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../tooltip.component.t",{"_index":3822,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../valid",{"_index":3833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../version.t",{"_index":3841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../vert",{"_index":3823,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/issues/403",{"_index":3296,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["ui/src/autocomplete/autocomplete.component.t",{"_index":7,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/autocomplete/autocomplete.component.ts:39",{"_index":12,"title":{},"body":{"interfaces/KeyboardEvent.html":{}}}],["ui/src/autocomplete/autocomplete.component.ts:43",{"_index":462,"title":{},"body":{"interfaces/MouseEvent.html":{}}}],["ui/src/autocomplete/autocomplete.module.t",{"_index":743,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["ui/src/autofocus/autofocus.directive.t",{"_index":757,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"coverage.html":{}}}],["ui/src/autofocus/autofocus.directive.ts:29",{"_index":771,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.directive.ts:35",{"_index":768,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.directive.ts:37",{"_index":767,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.directive.ts:48",{"_index":769,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.module.t",{"_index":789,"title":{},"body":{"modules/TsAutofocusModule.html":{}}}],["ui/src/button/button.component.t",{"_index":3548,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/button/button.module.t",{"_index":796,"title":{},"body":{"modules/TsButtonModule.html":{}}}],["ui/src/card/card",{"_index":1213,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"coverage.html":{}}}],["ui/src/card/card.component.t",{"_index":1018,"title":{},"body":{"components/TsCardComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/card/card.component.ts:104",{"_index":1042,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:111",{"_index":1067,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:114",{"_index":1059,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:120",{"_index":1045,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:126",{"_index":1046,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:132",{"_index":1048,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:138",{"_index":1049,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:141",{"_index":1070,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:144",{"_index":1060,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:152",{"_index":1053,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:158",{"_index":1054,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:165",{"_index":1073,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:168",{"_index":1061,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:174",{"_index":1057,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:179",{"_index":1077,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:181",{"_index":1036,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:79",{"_index":1062,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:84",{"_index":1063,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:92",{"_index":1040,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.module.t",{"_index":1208,"title":{},"body":{"modules/TsCardModule.html":{}}}],["ui/src/chart/amcharts.service.t",{"_index":716,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui/src/chart/amcharts.service.ts:25",{"_index":721,"title":{},"body":{"injectables/TsAmChartsService.html":{}}}],["ui/src/chart/amcharts.service.ts:28",{"_index":724,"title":{},"body":{"injectables/TsAmChartsService.html":{}}}],["ui/src/chart/chart.component.t",{"_index":1272,"title":{},"body":{"components/TsChartComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/chart/chart.component.ts:102",{"_index":1290,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:116",{"_index":1304,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:135",{"_index":1301,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:147",{"_index":1303,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:155",{"_index":1295,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:168",{"_index":1299,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:67",{"_index":1309,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:72",{"_index":1307,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:78",{"_index":1310,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:86",{"_index":1294,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:93",{"_index":1312,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:96",{"_index":1306,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.module.t",{"_index":1383,"title":{},"body":{"modules/TsChartModule.html":{}}}],["ui/src/checkbox/checkbox.component.t",{"_index":1388,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui/src/checkbox/checkbox.component.ts:101",{"_index":1451,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:107",{"_index":1431,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:113",{"_index":1464,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:116",{"_index":1452,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:122",{"_index":1432,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:128",{"_index":1433,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:134",{"_index":1434,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:140",{"_index":1435,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:148",{"_index":1436,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:154",{"_index":1437,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:160",{"_index":1440,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:166",{"_index":1429,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:83",{"_index":1453,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:89",{"_index":1454,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:95",{"_index":1430,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:98",{"_index":1462,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.module.t",{"_index":1471,"title":{},"body":{"modules/TsCheckboxModule.html":{}}}],["ui/src/confirmation/confirm",{"_index":1555,"title":{},"body":{"components/TsConfirmationModalComponent.html":{},"coverage.html":{}}}],["ui/src/confirmation/confirmation.directive.t",{"_index":1477,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"coverage.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:155",{"_index":1492,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:46",{"_index":1498,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:51",{"_index":1500,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:57",{"_index":1486,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:74",{"_index":1489,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:82",{"_index":1496,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:90",{"_index":1494,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:99",{"_index":1491,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.module.t",{"_index":1568,"title":{},"body":{"modules/TsConfirmationModule.html":{}}}],["ui/src/copy/copy.component.t",{"_index":1572,"title":{},"body":{"components/TsCopyComponent.html":{},"coverage.html":{}}}],["ui/src/copy/copy.component.ts:109",{"_index":1613,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:129",{"_index":1594,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:154",{"_index":1591,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:164",{"_index":1590,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:47",{"_index":1600,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:52",{"_index":1601,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:57",{"_index":1604,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:63",{"_index":1606,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:68",{"_index":1610,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:74",{"_index":1597,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:80",{"_index":1587,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:86",{"_index":1588,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:92",{"_index":1586,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.module.t",{"_index":1663,"title":{},"body":{"modules/TsCopyModule.html":{}}}],["ui/src/csv",{"_index":806,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui/src/dat",{"_index":1695,"title":{},"body":{"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"coverage.html":{}}}],["ui/src/datepicker/datepicker.component.t",{"_index":1826,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui/src/datepicker/datepicker.module.t",{"_index":1898,"title":{},"body":{"modules/TsDatepickerModule.html":{}}}],["ui/src/fil",{"_index":1903,"title":{},"body":{"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/icon",{"_index":2015,"title":{},"body":{"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"coverage.html":{}}}],["ui/src/icon/custom",{"_index":3584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui/src/icon/icon.component.t",{"_index":2048,"title":{},"body":{"components/TsIconComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/icon/icon.component.ts:100",{"_index":2069,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:106",{"_index":2061,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:69",{"_index":2063,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:72",{"_index":2071,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:75",{"_index":2067,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:81",{"_index":2065,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:87",{"_index":2066,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:97",{"_index":2074,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.module.t",{"_index":2104,"title":{},"body":{"modules/TsIconModule.html":{}}}],["ui/src/input/input.component.t",{"_index":3588,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/input/input.module.t",{"_index":2119,"title":{},"body":{"modules/TsInputModule.html":{}}}],["ui/src/link/link.component.t",{"_index":2121,"title":{},"body":{"components/TsLinkComponent.html":{},"coverage.html":{}}}],["ui/src/link/link.component.ts:47",{"_index":2131,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.component.ts:53",{"_index":2128,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.component.ts:59",{"_index":2129,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.component.ts:65",{"_index":2130,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.module.t",{"_index":2142,"title":{},"body":{"modules/TsLinkModule.html":{}}}],["ui/src/load",{"_index":2146,"title":{},"body":{"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"coverage.html":{}}}],["ui/src/login",{"_index":2198,"title":{},"body":{"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"coverage.html":{}}}],["ui/src/mask/mask.directive.t",{"_index":353,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/mask/mask.directive.ts:38",{"_index":461,"title":{},"body":{"interfaces/MaskCollection.html":{}}}],["ui/src/mask/mask.module.t",{"_index":2274,"title":{},"body":{"modules/TsMaskModule.html":{}}}],["ui/src/menu/menu.component.t",{"_index":2276,"title":{},"body":{"components/TsMenuComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/menu/menu.component.ts:103",{"_index":2312,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:109",{"_index":2307,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:115",{"_index":2289,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:121",{"_index":2292,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:127",{"_index":2293,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:133",{"_index":2295,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:139",{"_index":2297,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:145",{"_index":2298,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:151",{"_index":2291,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:160",{"_index":2302,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:166",{"_index":2304,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:175",{"_index":2303,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:81",{"_index":2309,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:86",{"_index":2311,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:91",{"_index":2315,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:98",{"_index":2305,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.module.t",{"_index":2349,"title":{},"body":{"modules/TsMenuModule.html":{}}}],["ui/src/module.t",{"_index":659,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["ui/src/navigation/navigation.component.t",{"_index":464,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/navigation/navigation.component.ts:149",{"_index":2369,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:156",{"_index":2374,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:165",{"_index":2367,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:170",{"_index":2368,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:177",{"_index":2376,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:187",{"_index":2370,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:194",{"_index":2378,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:202",{"_index":2356,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:218",{"_index":2357,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:224",{"_index":2358,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:230",{"_index":2371,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:236",{"_index":2372,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:242",{"_index":2359,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:248",{"_index":2360,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:250",{"_index":2355,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:264",{"_index":2364,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:272",{"_index":2363,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:282",{"_index":2361,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:302",{"_index":2365,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:319",{"_index":2366,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:368",{"_index":2362,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.module.t",{"_index":2386,"title":{},"body":{"modules/TsNavigationModule.html":{}}}],["ui/src/paginator/paginator.component.t",{"_index":2389,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"coverage.html":{}}}],["ui/src/paginator/paginator.module.t",{"_index":2523,"title":{},"body":{"modules/TsPaginatorModule.html":{}}}],["ui/src/pipes/date/date.pipe.t",{"_index":1666,"title":{},"body":{"pipes/TsDatePipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/pipes/date/date.pipe.ts:31",{"_index":1671,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["ui/src/pipes/pipes.module.t",{"_index":2532,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["ui/src/pipes/round",{"_index":2665,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{},"coverage.html":{}}}],["ui/src/pipes/sent",{"_index":2866,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{},"coverage.html":{}}}],["ui/src/pipes/tim",{"_index":3226,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{},"coverage.html":{}}}],["ui/src/pipes/titl",{"_index":3237,"title":{},"body":{"pipes/TsTitleCasePipe.html":{},"coverage.html":{}}}],["ui/src/radio",{"_index":2544,"title":{},"body":{"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/scrollbars/scrollbars.component.t",{"_index":2673,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/scrollbars/scrollbars.module.t",{"_index":2742,"title":{},"body":{"modules/TsScrollbarsModule.html":{}}}],["ui/src/search/search.component.t",{"_index":2745,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"coverage.html":{}}}],["ui/src/search/search.component.ts:101",{"_index":2785,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:106",{"_index":2791,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:111",{"_index":2795,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:116",{"_index":2798,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:129",{"_index":2794,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:135",{"_index":2765,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:141",{"_index":2766,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:147",{"_index":2768,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:153",{"_index":2769,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:159",{"_index":2770,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:165",{"_index":2771,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:171",{"_index":2772,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:177",{"_index":2773,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:183",{"_index":2774,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:189",{"_index":2776,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:195",{"_index":2775,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:201",{"_index":2763,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:215",{"_index":2779,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:228",{"_index":2778,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:244",{"_index":2777,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:74",{"_index":2786,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:79",{"_index":2780,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:84",{"_index":2781,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:89",{"_index":2801,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:96",{"_index":2784,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.module.t",{"_index":2821,"title":{},"body":{"modules/TsSearchModule.html":{}}}],["ui/src/select/select.component.t",{"_index":3604,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/select/select.module.t",{"_index":2829,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["ui/src/sort/sort",{"_index":2983,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui/src/sort/sort.directive.t",{"_index":2882,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/sort/sort.directive.ts:106",{"_index":2964,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:112",{"_index":2962,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:118",{"_index":2977,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:121",{"_index":2972,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:129",{"_index":2963,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:132",{"_index":2980,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:135",{"_index":2973,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:141",{"_index":2965,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:147",{"_index":2968,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:155",{"_index":2969,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:164",{"_index":2970,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:181",{"_index":2966,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:189",{"_index":2971,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:204",{"_index":2967,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:87",{"_index":2975,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:92",{"_index":2974,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:98",{"_index":2961,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.module.t",{"_index":3062,"title":{},"body":{"modules/TsSortModule.html":{}}}],["ui/src/spacing/spacing.constant.t",{"_index":3613,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui/src/spacing/spacing.module.t",{"_index":3072,"title":{},"body":{"modules/TsSpacingModule.html":{}}}],["ui/src/spacing/vert",{"_index":3410,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/table/cell.t",{"_index":1235,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"coverage.html":{}}}],["ui/src/table/cell.ts:116",{"_index":1476,"title":{},"body":{"directives/TsColumnDefDirective.html":{}}}],["ui/src/table/cell.ts:123",{"_index":1475,"title":{},"body":{"directives/TsColumnDefDirective.html":{}}}],["ui/src/table/cell.ts:129",{"_index":1474,"title":{},"body":{"directives/TsColumnDefDirective.html":{}}}],["ui/src/table/cell.ts:54",{"_index":1994,"title":{},"body":{"directives/TsHeaderCellDirective.html":{}}}],["ui/src/table/cell.ts:72",{"_index":1270,"title":{},"body":{"directives/TsCellDirective.html":{}}}],["ui/src/table/cell.ts:76",{"_index":1271,"title":{},"body":{"directives/TsCellDirective.html":{}}}],["ui/src/table/row.t",{"_index":1995,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"coverage.html":{}}}],["ui/src/table/t",{"_index":3175,"title":{},"body":{"classes/TsTableDataSource.html":{},"coverage.html":{}}}],["ui/src/table/table.component.t",{"_index":3075,"title":{},"body":{"components/TsTableComponent.html":{},"coverage.html":{}}}],["ui/src/table/table.module.t",{"_index":3222,"title":{},"body":{"modules/TsTableModule.html":{}}}],["ui/src/toggle/toggle.component.t",{"_index":2873,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui/src/toggle/toggle.component.ts:104",{"_index":3247,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:110",{"_index":3248,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:116",{"_index":3249,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:122",{"_index":3250,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:73",{"_index":3243,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:79",{"_index":3244,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:83",{"_index":3252,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:86",{"_index":3251,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:92",{"_index":3245,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:98",{"_index":3246,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.module.t",{"_index":3258,"title":{},"body":{"modules/TsToggleModule.html":{}}}],["ui/src/tooltip/tooltip.component.t",{"_index":3261,"title":{},"body":{"components/TsTooltipComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/tooltip/tooltip.component.ts:53",{"_index":3272,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["ui/src/tooltip/tooltip.component.ts:59",{"_index":3273,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["ui/src/tooltip/tooltip.component.ts:65",{"_index":3270,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["ui/src/tooltip/tooltip.module.t",{"_index":3277,"title":{},"body":{"modules/TsTooltipModule.html":{}}}],["ui/src/utilities/merge.t",{"_index":3617,"title":{},"body":{"coverage.html":{}}}],["ui/src/utilities/react",{"_index":2642,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{},"coverage.html":{}}}],["ui/src/utilities/typ",{"_index":3618,"title":{},"body":{"coverage.html":{}}}],["ui/src/utilities/types/styl",{"_index":3627,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/utilities/version/version.t",{"_index":3425,"title":{},"body":{"classes/Version.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui/src/utilities/version/version.ts:5",{"_index":3432,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/utilities/version/version.ts:6",{"_index":3433,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/utilities/version/version.ts:7",{"_index":3430,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/utilities/version/version.ts:9",{"_index":3431,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/valid",{"_index":3282,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui/src/validators/validators.service.t",{"_index":3359,"title":{},"body":{"injectables/TsValidatorsService.html":{},"coverage.html":{}}}],["ui/src/validators/validators.service.ts:24",{"_index":3361,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:25",{"_index":3363,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:26",{"_index":3365,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:27",{"_index":3367,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:28",{"_index":3369,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:29",{"_index":3371,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:30",{"_index":3373,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:31",{"_index":3377,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:32",{"_index":3379,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:33",{"_index":3383,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:34",{"_index":3387,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:35",{"_index":3375,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:36",{"_index":3385,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:37",{"_index":3381,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators/creditcard/creditcard.t",{"_index":3633,"title":{},"body":{"coverage.html":{}}}],["ui/src/validators/validators/email/email.t",{"_index":3634,"title":{},"body":{"coverage.html":{}}}],["ui/src/validators/validators/equaltocontrol/equaltocontrol.t",{"_index":3635,"title":{},"body":{"coverage.html":{}}}],["ui/src/validators/validators/greaterthan/greaterthan.t",{"_index":3636,"title":{},"body":{"coverage.html":{}}}],["ui/src/validators/validators/greaterthanorequal/greaterthanorequal.t",{"_index":3638,"title":{},"body":{"coverage.html":{}}}],["ui/src/validators/validators/lessthan/lessthan.t",{"_index":3639,"title":{},"body":{"coverage.html":{}}}],["ui/src/validators/validators/lessthanorequal/lessthanorequal.t",{"_index":3640,"title":{},"body":{"coverage.html":{}}}],["ui/src/validators/validators/lowercase/lowercase.t",{"_index":3641,"title":{},"body":{"coverage.html":{}}}],["ui/src/validators/validators/maxdate/maxdate.t",{"_index":3642,"title":{},"body":{"coverage.html":{}}}],["ui/src/validators/validators/mindate/mindate.t",{"_index":3643,"title":{},"body":{"coverage.html":{}}}],["ui/src/validators/validators/numbers/numbers.t",{"_index":3644,"title":{},"body":{"coverage.html":{}}}],["ui/src/validators/validators/password/password.t",{"_index":3645,"title":{},"body":{"coverage.html":{}}}],["ui/src/validators/validators/uppercase/uppercase.t",{"_index":3646,"title":{},"body":{"coverage.html":{}}}],["ui/src/validators/validators/url/url.t",{"_index":3647,"title":{},"body":{"coverage.html":{}}}],["ui:mast",{"_index":3523,"title":{},"body":{"contributing.html":{}}}],["uiformatfn",{"_index":227,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["uiformatt",{"_index":2556,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["uisubformatt",{"_index":2562,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["unambigu",{"_index":3495,"title":{},"body":{"contributing.html":{}}}],["undefin",{"_index":245,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"directives/TsColumnDefDirective.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["underli",{"_index":329,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["underlin",{"_index":3269,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["underscor",{"_index":2079,"title":{},"body":{"components/TsIconComponent.html":{}}}],["unifi",{"_index":3676,"title":{},"body":{"index.html":{}}}],["union",{"_index":1759,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["uniqu",{"_index":851,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":3536,"title":{},"body":{"contributing.html":{}}}],["unmaskregex",{"_index":357,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["unregist",{"_index":2933,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["unsubscrib",{"_index":3018,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["unsupport",{"_index":2099,"title":{},"body":{"components/TsIconComponent.html":{}}}],["unsur",{"_index":2008,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["untest",{"_index":2664,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["until",{"_index":1620,"title":{},"body":{"components/TsCopyComponent.html":{},"components/TsTableComponent.html":{}}}],["untilcomponentdestroy",{"_index":168,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["untilcomponentdestroyed(thi",{"_index":311,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["up",{"_index":437,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["updat",{"_index":344,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["updateallrowid",{"_index":945,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["updatedhiddenarray",{"_index":596,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updatedhiddenarray.unshift(itemtomov",{"_index":599,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updatedvisiblearray",{"_index":607,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updatedvisiblearray.push(itemtomov",{"_index":608,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updateerror",{"_index":960,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["updatelist",{"_index":585,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["upload",{"_index":3701,"title":{},"body":{"index.html":{}}}],["upload'},{'nam",{"_index":1138,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["upload.compon",{"_index":1938,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["upload.component.t",{"_index":3571,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["upload.modul",{"_index":678,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["upload.module.t",{"_index":1936,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["upload/drop",{"_index":1904,"title":{},"body":{"injectables/TsDropProtectionService.html":{},"coverage.html":{}}}],["upload/fil",{"_index":677,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsFileUploadModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["upload/imag",{"_index":1922,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"classes/TsImageDimensions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["upload/mim",{"_index":3577,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["upload/select",{"_index":1942,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["upon",{"_index":491,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["uppercas",{"_index":3320,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{}}}],["uppercasevalid",{"_index":3384,"title":{},"body":{"injectables/TsValidatorsService.html":{},"coverage.html":{}}}],["upstream",{"_index":3527,"title":{},"body":{"contributing.html":{}}}],["url",{"_index":375,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["urlvalid",{"_index":3386,"title":{},"body":{"injectables/TsValidatorsService.html":{},"coverage.html":{}}}],["us",{"_index":100,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["usabl",{"_index":3689,"title":{},"body":{"index.html":{}}}],["usag",{"_index":17,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["useexist",{"_index":412,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactori",{"_index":1332,"title":{},"body":{"components/TsChartComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":42,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{}}}],["user'",{"_index":478,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["usercanclear",{"_index":2762,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["userexist",{"_index":524,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["usernam",{"_index":3081,"title":{},"body":{"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["userprofileport",{"_index":1543,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["usersfullnam",{"_index":523,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["usevalu",{"_index":1386,"title":{},"body":{"modules/TsChartModule.html":{}}}],["usual",{"_index":1729,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["util",{"_index":1055,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["utilities/react",{"_index":713,"title":{},"body":{"modules/TerminusUIModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["utilities/types/styl",{"_index":171,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["utilitymenutempl",{"_index":1035,"title":{},"body":{"components/TsCardComponent.html":{}}}],["v",{"_index":99,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSelectedFile.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{}}}],["v.bar",{"_index":2557,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["v.bing",{"_index":2563,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["v.columns.join('\\t')).join('\\r\\n",{"_index":1009,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["v.foo",{"_index":2559,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["v.foo;ev",{"_index":2564,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["v.id",{"_index":193,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["v.length",{"_index":314,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["v.login",{"_index":115,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["v.name",{"_index":189,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["v4",{"_index":1273,"title":{},"body":{"components/TsChartComponent.html":{}}}],["valid",{"_index":32,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["validateimagedimens",{"_index":2834,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["validateimagedimensions(constraint",{"_index":1990,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["validateimmedi",{"_index":3335,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["validateonchang",{"_index":1884,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["validationerror",{"_index":150,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["validationmessag",{"_index":879,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsValidationMessagesComponent.html":{}}}],["validationmessageservic",{"_index":3338,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["validationmessagesservic",{"_index":979,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["validatorfn",{"_index":846,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["validatornam",{"_index":3289,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validators.minlength(this.queryminlength",{"_index":2796,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["validators.pattern(this.inputpatternregex",{"_index":2797,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["validators.requir",{"_index":1738,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["validators/creditcard/creditcard",{"_index":3396,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/email/email",{"_index":3397,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/equaltocontrol/equaltocontrol",{"_index":3398,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/greaterthan/greaterthan",{"_index":3400,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/greaterthanorequal/greaterthanorequ",{"_index":3399,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/lessthan/lessthan",{"_index":3402,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/lessthanorequal/lessthanorequ",{"_index":3401,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/lowercase/lowercas",{"_index":3403,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/maxdate/maxd",{"_index":3405,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/mindate/mind",{"_index":3406,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/numbers/numb",{"_index":3404,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/password/password",{"_index":3407,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/uppercase/uppercas",{"_index":3409,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/url/url",{"_index":3408,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/validators.servic",{"_index":712,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsInputModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["validatorsservic",{"_index":2219,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["validatorvalu",{"_index":3287,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.actu",{"_index":3302,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.actual.width}x${validatorvalue.actual.height",{"_index":3330,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.comparevalu",{"_index":3317,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.greaterthan",{"_index":3304,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.greaterthanorequ",{"_index":3307,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.lessthan",{"_index":3311,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.lessthanorequ",{"_index":3313,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.lowercas",{"_index":3319,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.max}kb",{"_index":3323,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.numb",{"_index":3308,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.requiredlength",{"_index":3297,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.uppercas",{"_index":3321,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validformat",{"_index":1687,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["validformats.indexof(format",{"_index":1693,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["valu",{"_index":23,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value(v",{"_index":2658,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["value.charat(0).touppercas",{"_index":2870,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{}}}],["value.filter((item",{"_index":535,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["value.length",{"_index":460,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["value.replace(new",{"_index":455,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["value.slice(1).tolowercas",{"_index":2871,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{}}}],["value.split",{"_index":3419,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["value.tolowercase().split",{"_index":3239,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["valuechangeaccessor",{"_index":438,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["valueisnon",{"_index":3421,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["var",{"_index":1118,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["variabl",{"_index":2503,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/TsPaginatorMenuItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["variat",{"_index":3829,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["veri",{"_index":2321,"title":{},"body":{"components/TsMenuComponent.html":{},"index.html":{}}}],["verifi",{"_index":406,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["verifyisdateobject(d",{"_index":1891,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["version",{"_index":731,"title":{"classes/Version.html":{}},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsValidatorsService.html":{},"classes/Version.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["version('0.0.0",{"_index":3441,"title":{},"body":{"classes/Version.html":{},"miscellaneous/variables.html":{}}}],["vertic",{"_index":3073,"title":{},"body":{"modules/TsSpacingModule.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["via",{"_index":130,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["view",{"_index":557,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["viewchild",{"_index":147,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["viewchild('auto",{"_index":64,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["viewchild('autocomplet",{"_index":230,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["viewchild('autocompletetrigg",{"_index":231,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["viewchild('chartdiv",{"_index":1350,"title":{},"body":{"components/TsChartComponent.html":{}}}],["viewchild('cont",{"_index":1615,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["viewchild('input",{"_index":237,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["viewchild('visibleitemslist",{"_index":544,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["viewchild(forwardref",{"_index":2711,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["viewchild(matcheckbox",{"_index":1407,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["viewchild(matmenutrigg",{"_index":2339,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["viewchild(tscheckboxcompon",{"_index":2255,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["viewchild(tspaginatorcompon",{"_index":3138,"title":{},"body":{"components/TsTableComponent.html":{}}}],["viewchild(tsscrollbarscompon",{"_index":2676,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["viewchild(tssortdirect",{"_index":3105,"title":{},"body":{"components/TsTableComponent.html":{}}}],["viewchildren",{"_index":475,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["viewchildren('visiblelinkel",{"_index":546,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["viewchildren(tsinputcompon",{"_index":2254,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["viewencapsul",{"_index":148,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["viewencapsulation.non",{"_index":213,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["viewport",{"_index":3110,"title":{},"body":{"components/TsTableComponent.html":{}}}],["visibl",{"_index":504,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsUser.html":{}}}],["visible/hidden",{"_index":570,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visibleitem",{"_index":528,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visibleitemslength",{"_index":529,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visibleitemslist",{"_index":545,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visiblelinkel",{"_index":547,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visual",{"_index":1285,"title":{},"body":{"components/TsChartComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["visualization(valu",{"_index":1351,"title":{},"body":{"components/TsChartComponent.html":{}}}],["void",{"_index":308,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/variables.html":{}}}],["vscode",{"_index":3756,"title":{},"body":{"index.html":{}}}],["wait",{"_index":2787,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["want",{"_index":1852,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"contributing.html":{},"index.html":{}}}],["warn",{"_index":2095,"title":{},"body":{"components/TsIconComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["warranti",{"_index":3780,"title":{},"body":{"license.html":{}}}],["wasn't",{"_index":1356,"title":{},"body":{"components/TsChartComponent.html":{}}}],["watch",{"_index":3213,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["way",{"_index":978,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{},"index.html":{}}}],["web",{"_index":3529,"title":{},"body":{"contributing.html":{}}}],["weekend",{"_index":1831,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["welcom",{"_index":542,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["welcomemessag",{"_index":543,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["well",{"_index":1238,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"index.html":{}}}],["wendy&#x1f41b",{"_index":3738,"title":{},"body":{"index.html":{}}}],["wheel",{"_index":969,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["wheelev",{"_index":971,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["whenev",{"_index":3050,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["whether",{"_index":2717,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTooltipComponent.html":{},"license.html":{}}}],["white_check_mark",{"_index":3692,"title":{},"body":{"index.html":{}}}],["whose",{"_index":1595,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["width",{"_index":513,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsImageDimensions.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"miscellaneous/variables.html":{}}}],["window",{"_index":549,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["window:res",{"_index":2354,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["windowservic",{"_index":1585,"title":{},"body":{"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["wire",{"_index":1535,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["within",{"_index":1222,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTooltipComponent.html":{}}}],["without",{"_index":1703,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsReactiveFormBaseComponent.html":{},"license.html":{}}}],["wizard",{"_index":3706,"title":{},"body":{"index.html":{}}}],["won't",{"_index":2236,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["wonder",{"_index":3727,"title":{},"body":{"index.html":{}}}],["word",{"_index":2078,"title":{},"body":{"components/TsIconComponent.html":{}}}],["word.charat(0).touppercas",{"_index":3241,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["word.slice(1",{"_index":3242,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["work",{"_index":573,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["workflow",{"_index":3453,"title":{},"body":{"contributing.html":{}}}],["wrap",{"_index":1078,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLinkComponent.html":{},"components/TsTableComponent.html":{}}}],["wrapper",{"_index":1598,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{}}}],["write",{"_index":1449,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["writevalu",{"_index":1427,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["writevalue(valu",{"_index":1447,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["x",{"_index":1104,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsMenuComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["x1f3a8",{"_index":3733,"title":{},"body":{"index.html":{}}}],["x1f440",{"_index":3735,"title":{},"body":{"index.html":{}}}],["x1f4bb",{"_index":3739,"title":{},"body":{"index.html":{}}}],["x1f4d6",{"_index":3732,"title":{},"body":{"index.html":{}}}],["x1f527",{"_index":3736,"title":{},"body":{"index.html":{}}}],["x1f914",{"_index":3734,"title":{},"body":{"index.html":{}}}],["xreachend",{"_index":2686,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["xreachstart",{"_index":2687,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["xy",{"_index":1305,"title":{},"body":{"components/TsChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["y",{"_index":1106,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsMenuComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["yarn",{"_index":3716,"title":{},"body":{"index.html":{}}}],["ye",{"_index":2847,"title":{},"body":{"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["year",{"_index":1772,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["yeoman",{"_index":711,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["yourself",{"_index":3502,"title":{},"body":{"contributing.html":{}}}],["yreachend",{"_index":2688,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["yreachstart",{"_index":2689,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["z",{"_index":3715,"title":{},"body":{"index.html":{}}}],["z0",{"_index":2789,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["za",{"_index":2788,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["zero",{"_index":983,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["zerobas",{"_index":2471,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["zip",{"_index":3702,"title":{},"body":{"index.html":{}}}],["zone",{"_index":1291,"title":{},"body":{"components/TsChartComponent.html":{}}}],["zoom",{"_index":658,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/KeyboardEvent.html":{"url":"interfaces/KeyboardEvent.html","title":"interface - KeyboardEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  KeyboardEvent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/autocomplete/autocomplete.component.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/autocomplete/autocomplete.component.ts:39\n                            \n                        \n            \n        \n\n\n    \n\n    \n        Autocomplete\n\n\n\n\nTable of Contents\n\nBasic usage with a FormControl\nAllow multiple selections\nSeed selected values\nShow the progress indicator\nCustomize how the selected value is displayed\nEvent driven\nShow a 'no results' validation error\nMinimum required character count\n\n\nBasic usage with a FormControl\na) Pass an array of available options in. These are the options displayed to the user in the\n   dropdown.\nb) Create a local reference to the autocomplete component.\n\nc) Subscribe to the query events coming from the autocomplete. This is a stream of query strings\nentered by the user. This stream is debounced and de-duped by default.\ninterface OptionType {\n  id: string;\n  login: string;\n  [key: string]: any;\n}\n\n// Create a reference to the autocomplete and pass in a typing for the options\n@ViewChild('auto')\npublic auto: TsAutocompleteComponent;\n\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      // Only hit the API if a query was sent in\n      if (term) {\n        // Start the progress indicator\n        this.inProgress = true;\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              // Stop the progress indicator\n              this.inProgress = false;\n              return response['items'];\n            }),\n          )\n      } else {\n        // If no query was passed in, reset the search results and stop the progress indicator\n        this.inProgress = false;\n        return of([]);\n      }\n    }),\n  )\n;\nChange the debounce delay by setting debounceDelay.\n\nAllow multiple selections\nTo allow multiple selections, pass in a comparator function. This function should match the type {@link TsAutocompleteComparatorFn} which has the basic signature of (v: any) => string.\nThis comparator function will be used by the autocomplete to determine if a selection is a\nduplicate. It is also used as the trackBy function when looping through options.\nSeed selected values\nTo seed initial values, pass the array of selections to initialSelections:\nShow the progress indicator\nShow a progress indicator by toggling the showProgress value:\nthis.isInProgress = true;Customize how the selected value is displayed\nThe UI display of selected options can be changed by passing in a custom displayWith function.\nThis function should match {@link TsAutocompleteFormatterFn} which has the signature of (v) =>\nstring;\n\n v.login\"\n>Event driven\nIf a FormControl isn't needed, you can subscribe to events directly:\nadded(chip) {\n  console.log('Selection made!', chip);\n}\n\nremoved(chip) {\n  console.log('Selection removed!', chip);\n}\n\nchange(selections) {\n  console.log('Selection was changed!', selections);\n}Show a 'no results' validation error\nIf no results are found, set a validation error on the FormControl:\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      if (term) {\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              const items = response['items'];\n\n              // If no results are found, notify the user via a validation message\n              if (items.length Minimum required character count\nBy default, two characters must be entered before a query is emitted. This value can be overridden:\n\n    \n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  MatAutocomplete,\n  MatAutocompleteSelectedEvent,\n  MatAutocompleteTrigger,\n} from '@angular/material/autocomplete';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  coerceArray,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  arrayContainsObject,\n  isFunction,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\nexport interface KeyboardEvent {\n  [key: string]: any;\n}\n\nexport interface MouseEvent {\n  [key: string]: any;\n}\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} formatter function\n */\nexport type TsAutocompleteFormatterFn = (value: any) => string;\n\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} comparator function\n */\nexport type TsAutocompleteComparatorFn = (value: any) => string;\n\n\nexport class TsAutocompleteSelectedEvent extends MatAutocompleteSelectedEvent {}\n\n\n/**\n * The autocomplete UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-autocomplete`: The primary container\n * - `qa-autocomplete-input`: The input element\n * - `qa-autocomplete-spinner`: The progress indicator\n * - `qa-autocomplete-chip`: An individual selection 'chip'\n * - `qa-autocomplete-options`: The container for the list of options\n * - `qa-autocomplete-option`: An individual option from the list\n * - `qa-autocomplete-hint`: The input hint\n * - `qa-autocomplete-validation-messages`: The container for validation messages\n *\n * @example\n *  v.name\"\n *              hint=\"Begin typing to search..\"\n *              label=\"Select options:\"\n *              multiple=\"(v) => v.id\"\n *              name=\"product selections\"\n *              options=\"[{}, {}, ...]\"\n *              selectionsControl=\"myForm.get('myControl')\"\n *              [showProgress]=\"inProgress\"\n *              theme=\"primary\"\n *              initialSelections=\"[{}]\"\n *              (optionSelected)=\"mySelected($event)\"\n *              (optionRemoved)=\"myRemoved($event)\"\n *              (selection)=\"mySelection($event)\"\n *              (query)=\"myQuery($event)\"\n * >\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  host: {\n    class: 'ts-autocomplete',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsAutocomplete',\n})\nexport class TsAutocompleteComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Management of the query string\n   */\n  public querySubject: BehaviorSubject = new BehaviorSubject('');\n\n  /**\n   * Store the search query\n   */\n  public searchQuery!: string;\n\n  /**\n   * Define if the chips/selections should be selectable\n   */\n  public selectableChips: boolean = false;\n\n  /**\n   * Store the selected options\n   */\n  public selectedOptions: OptionType[] = [];\n\n  /**\n   * Store the formatter function for the UI display\n   */\n  private uiFormatFn!: (value: OptionType) => string;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocomplete')\n  public autocomplete!: MatAutocomplete;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocompleteTrigger')\n  set autocompleteTrigger(value: MatAutocompleteTrigger) {\n    this.trigger = value;\n  }\n  get autocompleteTrigger(): MatAutocompleteTrigger {\n    return this.trigger;\n  }\n  private trigger!: MatAutocompleteTrigger;\n\n  /**\n   * Provide direct access to the input\n   */\n  @ViewChild('input')\n  public input!: ElementRef;\n\n  /**\n   * Define a debounce delay for the query\n   */\n  @Input()\n  public set debounceDelay(value: number) {\n    this._debounceDelay = coerceNumberProperty(value);\n  }\n  public get debounceDelay(): number {\n    return this._debounceDelay;\n  }\n  private _debounceDelay: number = 200;\n\n  /**\n   * A function to output the UI text from the selected item\n   *\n   * When undefined the full selection object will be used as the display value\n   */\n  @Input()\n  public set displayWith(value: TsAutocompleteFormatterFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this.uiFormatFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'displayWith' must be passed a function.`);\n      }\n    }\n  }\n  public get displayWith(): TsAutocompleteFormatterFn {\n    return this.uiFormatFn;\n  }\n\n  /**\n   * Define a hint for the input\n   */\n  // FIXME: Fix potential overlap of hint and error messages\n  @Input()\n  public hint: string | undefined;\n\n  /**\n   * Define the placeholder/label\n   */\n  @Input()\n  public label: string | undefined;\n\n  /**\n   * Define a minimum character count for queries\n   */\n  @Input()\n  public set minimumCharacters(value: number) {\n    this._minimumCharacters = coerceNumberProperty(value);\n  }\n  public get minimumCharacters(): number {\n    return this._minimumCharacters;\n  }\n  private _minimumCharacters: number = 2;\n\n  /**\n   * Define if multiple selections are allowed by passing in a comparator function\n   */\n  @Input()\n  public set multiple(v: TsAutocompleteComparatorFn) {\n    if (!v) {\n      return;\n    }\n\n    if (isFunction(v)) {\n      this.comparatorFn = v;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'multiple' must be passed a 'TsAutocompleteComparatorFn' function.`);\n      }\n    }\n  }\n  public get multiple(): TsAutocompleteComparatorFn {\n    return this.comparatorFn;\n  }\n  private comparatorFn!: TsAutocompleteComparatorFn;\n\n  /**\n   * Define the name attribute value\n   */\n  @Input()\n  public name: string | undefined;\n\n  /**\n   * The list of options to display in the drop down\n   */\n  @Input()\n  public options!: OptionType[];\n\n  /**\n   * Define the form control to save selections to\n   */\n  @Input()\n  public set selectionsControl(value: FormControl) {\n    if (!value) {\n      return;\n    }\n\n    this._selectionsControl = value;\n    /*\n     *console.log('set selectionsControl: ', this.selectionsControl);\n     */\n  }\n  public get selectionsControl(): FormControl {\n    return this._selectionsControl;\n  }\n  private _selectionsControl: FormControl = new FormControl();\n\n  /**\n   * Define if the progress spinner should be active\n   */\n  @Input()\n  public showProgress: boolean = false;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define items that should be selected when the component loads\n   */\n  @Input()\n  public set initialSelections(selections: OptionType[]) {\n    // istanbul ignore else\n    if (selections) {\n      // Seed the array\n      this.selectedOptions = coerceArray(selections.slice());\n\n      // istanbul ignore else\n      if (this.selectionsControl && this.selectionsControl.setValue) {\n        // Seed the formControl\n        this.selectionsControl.setValue(this.selectedOptions);\n      }\n    }\n  }\n\n  /**\n   * Emit the selected chip\n   */\n  @Output()\n  public optionSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the removed chip\n   */\n  @Output()\n  public optionRemoved: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the current selection\n   */\n  @Output()\n  public selection: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the query string\n   */\n  @Output()\n  public query: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Subscribe to the querySubject and pass values to the query emitter\n   *\n   * NOTE: When an option is selected, the full selected value is piped through this stream\n   * somehow. Have not figured out why. Best guess is it's something due to the `matAutocomplete`\n   * directive. For now, we are filtering out anything that is not a string.\n   */\n  public ngAfterViewInit(): void {\n    // Take a stream of query changes\n    this.querySubject.pipe(\n      untilComponentDestroyed(this),\n      filter((v) => (typeof v === 'string') && v.length >= this.minimumCharacters),\n      // Debounce the query changes\n      debounceTime(this.debounceDelay),\n      // Only allow a query through if it is different from the previous query\n      distinctUntilChanged(),\n    ).subscribe((query: string) => {\n      this.query.next(query);\n    });\n\n    // Trigger a change detection cycle if the formControl value was changed dynamically\n    // istanbul ignore else\n    if (this.selectionsControl) {\n      this.selectionsControl.valueChanges.pipe(\n        untilComponentDestroyed(this),\n      ).subscribe((value: OptionType[]) => {\n        this.selectedOptions = value;\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Select an option\n   *\n   * @param event - The selection event from the underlying MatAutocomplete\n   */\n  public selectOption(event: TsAutocompleteSelectedEvent): void {\n    // The selected option\n    const selection: OptionType = event.option.value;\n\n    // Stop the flow if the selection already exists in the array\n    if (arrayContainsObject(selection, this.selectedOptions, this.comparatorFn)) {\n      // Set an error on the control to let the user know they chose a duplicate option\n      // istanbul ignore else\n      if (this.selectionsControl) {\n        this.setDuplicateError(this.selectionsControl, selection, this.uiFormatFn);\n      }\n\n      return;\n    }\n\n\n    // Add to the displayed selection chips\n    this.selectedOptions.push(selection);\n\n    // If supporting multiple selections, reset the input text value\n    if (this.multiple) {\n      this.resetSearch();\n    }\n\n    // Update the form control\n    // istanbul ignore else\n    if (this.selectionsControl && this.selectionsControl.setValue) {\n      this.selectionsControl.setValue(this.selectedOptions);\n    }\n\n    // Notify consumers about changes\n    this.optionSelected.emit(event.option.value);\n    this.selection.emit(this.selectedOptions);\n  }\n\n\n  /**\n   * Deselect an option\n   *\n   * @param option - The option to deselect\n   */\n  public deselectOption(option: OptionType): void {\n    // Find the key of the selection in the selectedOptions array\n    const index = this.selectedOptions.indexOf(option);\n\n    // If not found\n    if (index \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mask.html":{"url":"interfaces/Mask.html","title":"interface - Mask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mask\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/mask/mask.directive.ts\n        \n\n            \n                Description\n            \n            \n                An individual mask definition\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mask\n                                \n                                \n                                            Optional\n                                        unmaskRegex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mask\n                                    \n                                \n                                \n                                    \n                                        mask:     (RegExp | string)[] | MaskFunction | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (RegExp | string)[] | MaskFunction | \"undefined\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unmaskRegex\n                                    \n                                \n                                \n                                    \n                                        unmaskRegex:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Mask\n\n\n\n\nTable of Contents\n\nBasic usage\nSupported input types\nDisable decimal support\nDisable sanitation\n\n\nBasic usage\nAttach the directive to an input and pass in a mask type:\n\nAvailable mask types:\n\n\n\nName\nExample format\n\n\n\n\nphone\n(900) 000-0000\n\n\ncurrency\n$0,000[.00]\n\n\nnumber\n0,000[.00]\n\n\npercentage\n0,000[.00]%\n\n\npostal\n00000|00000-0000\n\n\n\nSupported input types\n\ntext\ntel\nurl\npassword\nsearch\n\nDisable decimal support\n\nThis only effects the following masks: currency|number|percentage. By default, these masks\nsupport decimals.\n\nSet the allowDecimal flag to false:\n\nNOTE: You must use brackets [] for the allowDecimal flag.\n\nDisable sanitation\nBy default, the mask is removed from the string before it is saved to the model. To save the\nformatted value, set the sanitizeValue flag to false:\n\n    \n\n    \n        import {\n  Directive,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  isDevMode,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor,\n} from '@angular/forms';\nimport { createTextMaskInputElement } from 'text-mask-core/dist/textMaskCore';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\n\n\nconst NUMBER_ONLY_REGEX: RegExp = /[^0-9]/g;\nconst NUMBER_WITH_DECIMAL_REGEX: RegExp = /[^0-9.]/g;\n\n/**\n * A function that returns an array of RegExp (used to determine postal code RegExp)\n */\nexport type MaskFunction = (value: string) => (RegExp|string)[];\n\n/**\n * An individual mask definition\n */\nexport interface Mask {\n  mask: (RegExp|string)[] | MaskFunction | false;\n  unmaskRegex?: RegExp;\n}\n\n/**\n * The collection of masks\n */\nexport interface MaskCollection {\n  [key: string]: Mask;\n}\n\n/**\n * Define the allowed mask shortcut option\n */\nexport type MaskShortcutOptions\n  = 'phone'\n  | 'currency'\n  | 'number'\n  | 'percentage'\n  | 'postal'\n  | 'default' // matches all characters\n;\n\n/**\n * Create an array used to verify the passed in shortcut is valid\n */\nconst allowedMaskShorcuts: MaskShortcutOptions[] = [\n  'phone',\n  'currency',\n  'number',\n  'percentage',\n  'postal',\n  'default',\n];\n\n/**\n * Value accessor implementation to provide to the directive\n */\n/* tslint:disable:no-use-before-declare */\nexport const MASKED_INPUT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsMaskDirective),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n@Directive({\n  host: {\n    '(input)': 'onInput($event.target.value)',\n    '(blur)': 'onTouched()',\n  },\n  selector: '[tsMask]',\n  exportAs: 'tsMask',\n  providers: [MASKED_INPUT_VALUE_ACCESSOR],\n})\nexport class TsMaskDirective implements ControlValueAccessor, OnChanges {\n  /**\n   * Store the current mask\n   */\n  private currentMask!: Mask;\n\n  /**\n   * Store a reference to the input element\n   */\n  private inputElement!: HTMLInputElement;\n\n  /**\n   * Store the last value for comparison\n   */\n  private lastValue!: string;\n\n  /**\n   * Store the selected mask name\n   */\n  private maskName!: MaskShortcutOptions;\n\n  /**\n   * Base settings for the mask\n   */\n  private textMaskConfig: any = {\n    mask: null,\n    guide: false,\n  };\n\n  /**\n   * Store the mask instance\n   */\n  private textMaskInputElement: any;\n\n  /**\n   * Define if decimals are allowed in numbers/currency/percentage\n   */\n  @Input()\n  public allowDecimal: boolean = true;\n\n  /**\n   * Define if the value should be sanitized before saving to the model\n   */\n  @Input()\n  public sanitizeValue: boolean = true;\n\n  /**\n   * Define a mask\n   */\n  @Input()\n  set tsMask(value: MaskShortcutOptions) {\n    if (!value) {\n      return;\n    }\n\n    // Verify value is allowed\n    if (isDevMode() && (allowedMaskShorcuts.indexOf(value)  any = (value: any) => {};\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public onTouched: (value: any) => any = (value: any) => {};\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public registerOnChange(fn: (value: any) => any): void {\n    this.onChange = fn;\n  }\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public registerOnTouched(fn: () => any): void {\n    this.onTouched = fn;\n  }\n\n\n  /**\n   * Create the mask\n   *\n   * @param create - If the mask should be created\n   */\n  private setupMask(create?: boolean): void {\n    // istanbul ignore else\n    if (!this.inputElement) {\n      this.inputElement = this.elementRef.nativeElement;\n    }\n\n    // istanbul ignore else\n    if (this.inputElement && create) {\n      const maskOptions = Object.assign({inputElement: this.inputElement}, this.textMaskConfig);\n      // Initialize the mask\n      this.textMaskInputElement = createTextMaskInputElement(maskOptions);\n    }\n  }\n\n\n  /**\n   * Remove the mask if needed\n   *\n   * @param value - The value to clean\n   * @param regex - The RegExp to use to clean the value\n   * @return The clean value\n   */\n  private cleanValue(value: string, regex?: RegExp): string {\n    return regex ? value.replace(new RegExp(regex), '') : value;\n  }\n\n\n  /**\n   * Helper to determine the correct postal code match\n   *\n   * @param value - The current postal code value\n   * @return The correct mask\n   */\n  private determinePostalMask(value: string): (RegExp|string)[] {\n    if (value.length \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MaskCollection.html":{"url":"interfaces/MaskCollection.html","title":"interface - MaskCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MaskCollection\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/mask/mask.directive.ts\n        \n\n            \n                Description\n            \n            \n                The collection of masks\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    Mask\n\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/mask/mask.directive.ts:38\n                            \n                        \n            \n        \n\n\n    \n\n    \n        Mask\n\n\n\n\nTable of Contents\n\nBasic usage\nSupported input types\nDisable decimal support\nDisable sanitation\n\n\nBasic usage\nAttach the directive to an input and pass in a mask type:\n\nAvailable mask types:\n\n\n\nName\nExample format\n\n\n\n\nphone\n(900) 000-0000\n\n\ncurrency\n$0,000[.00]\n\n\nnumber\n0,000[.00]\n\n\npercentage\n0,000[.00]%\n\n\npostal\n00000|00000-0000\n\n\n\nSupported input types\n\ntext\ntel\nurl\npassword\nsearch\n\nDisable decimal support\n\nThis only effects the following masks: currency|number|percentage. By default, these masks\nsupport decimals.\n\nSet the allowDecimal flag to false:\n\nNOTE: You must use brackets [] for the allowDecimal flag.\n\nDisable sanitation\nBy default, the mask is removed from the string before it is saved to the model. To save the\nformatted value, set the sanitizeValue flag to false:\n\n    \n\n    \n        import {\n  Directive,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  isDevMode,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor,\n} from '@angular/forms';\nimport { createTextMaskInputElement } from 'text-mask-core/dist/textMaskCore';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\n\n\nconst NUMBER_ONLY_REGEX: RegExp = /[^0-9]/g;\nconst NUMBER_WITH_DECIMAL_REGEX: RegExp = /[^0-9.]/g;\n\n/**\n * A function that returns an array of RegExp (used to determine postal code RegExp)\n */\nexport type MaskFunction = (value: string) => (RegExp|string)[];\n\n/**\n * An individual mask definition\n */\nexport interface Mask {\n  mask: (RegExp|string)[] | MaskFunction | false;\n  unmaskRegex?: RegExp;\n}\n\n/**\n * The collection of masks\n */\nexport interface MaskCollection {\n  [key: string]: Mask;\n}\n\n/**\n * Define the allowed mask shortcut option\n */\nexport type MaskShortcutOptions\n  = 'phone'\n  | 'currency'\n  | 'number'\n  | 'percentage'\n  | 'postal'\n  | 'default' // matches all characters\n;\n\n/**\n * Create an array used to verify the passed in shortcut is valid\n */\nconst allowedMaskShorcuts: MaskShortcutOptions[] = [\n  'phone',\n  'currency',\n  'number',\n  'percentage',\n  'postal',\n  'default',\n];\n\n/**\n * Value accessor implementation to provide to the directive\n */\n/* tslint:disable:no-use-before-declare */\nexport const MASKED_INPUT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsMaskDirective),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n@Directive({\n  host: {\n    '(input)': 'onInput($event.target.value)',\n    '(blur)': 'onTouched()',\n  },\n  selector: '[tsMask]',\n  exportAs: 'tsMask',\n  providers: [MASKED_INPUT_VALUE_ACCESSOR],\n})\nexport class TsMaskDirective implements ControlValueAccessor, OnChanges {\n  /**\n   * Store the current mask\n   */\n  private currentMask!: Mask;\n\n  /**\n   * Store a reference to the input element\n   */\n  private inputElement!: HTMLInputElement;\n\n  /**\n   * Store the last value for comparison\n   */\n  private lastValue!: string;\n\n  /**\n   * Store the selected mask name\n   */\n  private maskName!: MaskShortcutOptions;\n\n  /**\n   * Base settings for the mask\n   */\n  private textMaskConfig: any = {\n    mask: null,\n    guide: false,\n  };\n\n  /**\n   * Store the mask instance\n   */\n  private textMaskInputElement: any;\n\n  /**\n   * Define if decimals are allowed in numbers/currency/percentage\n   */\n  @Input()\n  public allowDecimal: boolean = true;\n\n  /**\n   * Define if the value should be sanitized before saving to the model\n   */\n  @Input()\n  public sanitizeValue: boolean = true;\n\n  /**\n   * Define a mask\n   */\n  @Input()\n  set tsMask(value: MaskShortcutOptions) {\n    if (!value) {\n      return;\n    }\n\n    // Verify value is allowed\n    if (isDevMode() && (allowedMaskShorcuts.indexOf(value)  any = (value: any) => {};\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public onTouched: (value: any) => any = (value: any) => {};\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public registerOnChange(fn: (value: any) => any): void {\n    this.onChange = fn;\n  }\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public registerOnTouched(fn: () => any): void {\n    this.onTouched = fn;\n  }\n\n\n  /**\n   * Create the mask\n   *\n   * @param create - If the mask should be created\n   */\n  private setupMask(create?: boolean): void {\n    // istanbul ignore else\n    if (!this.inputElement) {\n      this.inputElement = this.elementRef.nativeElement;\n    }\n\n    // istanbul ignore else\n    if (this.inputElement && create) {\n      const maskOptions = Object.assign({inputElement: this.inputElement}, this.textMaskConfig);\n      // Initialize the mask\n      this.textMaskInputElement = createTextMaskInputElement(maskOptions);\n    }\n  }\n\n\n  /**\n   * Remove the mask if needed\n   *\n   * @param value - The value to clean\n   * @param regex - The RegExp to use to clean the value\n   * @return The clean value\n   */\n  private cleanValue(value: string, regex?: RegExp): string {\n    return regex ? value.replace(new RegExp(regex), '') : value;\n  }\n\n\n  /**\n   * Helper to determine the correct postal code match\n   *\n   * @param value - The current postal code value\n   * @return The correct mask\n   */\n  private determinePostalMask(value: string): (RegExp|string)[] {\n    if (value.length \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseEvent.html":{"url":"interfaces/MouseEvent.html","title":"interface - MouseEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseEvent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/autocomplete/autocomplete.component.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/autocomplete/autocomplete.component.ts:43\n                            \n                        \n            \n        \n\n\n    \n\n    \n        Autocomplete\n\n\n\n\nTable of Contents\n\nBasic usage with a FormControl\nAllow multiple selections\nSeed selected values\nShow the progress indicator\nCustomize how the selected value is displayed\nEvent driven\nShow a 'no results' validation error\nMinimum required character count\n\n\nBasic usage with a FormControl\na) Pass an array of available options in. These are the options displayed to the user in the\n   dropdown.\nb) Create a local reference to the autocomplete component.\n\nc) Subscribe to the query events coming from the autocomplete. This is a stream of query strings\nentered by the user. This stream is debounced and de-duped by default.\ninterface OptionType {\n  id: string;\n  login: string;\n  [key: string]: any;\n}\n\n// Create a reference to the autocomplete and pass in a typing for the options\n@ViewChild('auto')\npublic auto: TsAutocompleteComponent;\n\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      // Only hit the API if a query was sent in\n      if (term) {\n        // Start the progress indicator\n        this.inProgress = true;\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              // Stop the progress indicator\n              this.inProgress = false;\n              return response['items'];\n            }),\n          )\n      } else {\n        // If no query was passed in, reset the search results and stop the progress indicator\n        this.inProgress = false;\n        return of([]);\n      }\n    }),\n  )\n;\nChange the debounce delay by setting debounceDelay.\n\nAllow multiple selections\nTo allow multiple selections, pass in a comparator function. This function should match the type {@link TsAutocompleteComparatorFn} which has the basic signature of (v: any) => string.\nThis comparator function will be used by the autocomplete to determine if a selection is a\nduplicate. It is also used as the trackBy function when looping through options.\nSeed selected values\nTo seed initial values, pass the array of selections to initialSelections:\nShow the progress indicator\nShow a progress indicator by toggling the showProgress value:\nthis.isInProgress = true;Customize how the selected value is displayed\nThe UI display of selected options can be changed by passing in a custom displayWith function.\nThis function should match {@link TsAutocompleteFormatterFn} which has the signature of (v) =>\nstring;\n\n v.login\"\n>Event driven\nIf a FormControl isn't needed, you can subscribe to events directly:\nadded(chip) {\n  console.log('Selection made!', chip);\n}\n\nremoved(chip) {\n  console.log('Selection removed!', chip);\n}\n\nchange(selections) {\n  console.log('Selection was changed!', selections);\n}Show a 'no results' validation error\nIf no results are found, set a validation error on the FormControl:\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      if (term) {\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              const items = response['items'];\n\n              // If no results are found, notify the user via a validation message\n              if (items.length Minimum required character count\nBy default, two characters must be entered before a query is emitted. This value can be overridden:\n\n    \n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  MatAutocomplete,\n  MatAutocompleteSelectedEvent,\n  MatAutocompleteTrigger,\n} from '@angular/material/autocomplete';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  coerceArray,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  arrayContainsObject,\n  isFunction,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\nexport interface KeyboardEvent {\n  [key: string]: any;\n}\n\nexport interface MouseEvent {\n  [key: string]: any;\n}\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} formatter function\n */\nexport type TsAutocompleteFormatterFn = (value: any) => string;\n\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} comparator function\n */\nexport type TsAutocompleteComparatorFn = (value: any) => string;\n\n\nexport class TsAutocompleteSelectedEvent extends MatAutocompleteSelectedEvent {}\n\n\n/**\n * The autocomplete UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-autocomplete`: The primary container\n * - `qa-autocomplete-input`: The input element\n * - `qa-autocomplete-spinner`: The progress indicator\n * - `qa-autocomplete-chip`: An individual selection 'chip'\n * - `qa-autocomplete-options`: The container for the list of options\n * - `qa-autocomplete-option`: An individual option from the list\n * - `qa-autocomplete-hint`: The input hint\n * - `qa-autocomplete-validation-messages`: The container for validation messages\n *\n * @example\n *  v.name\"\n *              hint=\"Begin typing to search..\"\n *              label=\"Select options:\"\n *              multiple=\"(v) => v.id\"\n *              name=\"product selections\"\n *              options=\"[{}, {}, ...]\"\n *              selectionsControl=\"myForm.get('myControl')\"\n *              [showProgress]=\"inProgress\"\n *              theme=\"primary\"\n *              initialSelections=\"[{}]\"\n *              (optionSelected)=\"mySelected($event)\"\n *              (optionRemoved)=\"myRemoved($event)\"\n *              (selection)=\"mySelection($event)\"\n *              (query)=\"myQuery($event)\"\n * >\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  host: {\n    class: 'ts-autocomplete',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsAutocomplete',\n})\nexport class TsAutocompleteComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Management of the query string\n   */\n  public querySubject: BehaviorSubject = new BehaviorSubject('');\n\n  /**\n   * Store the search query\n   */\n  public searchQuery!: string;\n\n  /**\n   * Define if the chips/selections should be selectable\n   */\n  public selectableChips: boolean = false;\n\n  /**\n   * Store the selected options\n   */\n  public selectedOptions: OptionType[] = [];\n\n  /**\n   * Store the formatter function for the UI display\n   */\n  private uiFormatFn!: (value: OptionType) => string;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocomplete')\n  public autocomplete!: MatAutocomplete;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocompleteTrigger')\n  set autocompleteTrigger(value: MatAutocompleteTrigger) {\n    this.trigger = value;\n  }\n  get autocompleteTrigger(): MatAutocompleteTrigger {\n    return this.trigger;\n  }\n  private trigger!: MatAutocompleteTrigger;\n\n  /**\n   * Provide direct access to the input\n   */\n  @ViewChild('input')\n  public input!: ElementRef;\n\n  /**\n   * Define a debounce delay for the query\n   */\n  @Input()\n  public set debounceDelay(value: number) {\n    this._debounceDelay = coerceNumberProperty(value);\n  }\n  public get debounceDelay(): number {\n    return this._debounceDelay;\n  }\n  private _debounceDelay: number = 200;\n\n  /**\n   * A function to output the UI text from the selected item\n   *\n   * When undefined the full selection object will be used as the display value\n   */\n  @Input()\n  public set displayWith(value: TsAutocompleteFormatterFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this.uiFormatFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'displayWith' must be passed a function.`);\n      }\n    }\n  }\n  public get displayWith(): TsAutocompleteFormatterFn {\n    return this.uiFormatFn;\n  }\n\n  /**\n   * Define a hint for the input\n   */\n  // FIXME: Fix potential overlap of hint and error messages\n  @Input()\n  public hint: string | undefined;\n\n  /**\n   * Define the placeholder/label\n   */\n  @Input()\n  public label: string | undefined;\n\n  /**\n   * Define a minimum character count for queries\n   */\n  @Input()\n  public set minimumCharacters(value: number) {\n    this._minimumCharacters = coerceNumberProperty(value);\n  }\n  public get minimumCharacters(): number {\n    return this._minimumCharacters;\n  }\n  private _minimumCharacters: number = 2;\n\n  /**\n   * Define if multiple selections are allowed by passing in a comparator function\n   */\n  @Input()\n  public set multiple(v: TsAutocompleteComparatorFn) {\n    if (!v) {\n      return;\n    }\n\n    if (isFunction(v)) {\n      this.comparatorFn = v;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'multiple' must be passed a 'TsAutocompleteComparatorFn' function.`);\n      }\n    }\n  }\n  public get multiple(): TsAutocompleteComparatorFn {\n    return this.comparatorFn;\n  }\n  private comparatorFn!: TsAutocompleteComparatorFn;\n\n  /**\n   * Define the name attribute value\n   */\n  @Input()\n  public name: string | undefined;\n\n  /**\n   * The list of options to display in the drop down\n   */\n  @Input()\n  public options!: OptionType[];\n\n  /**\n   * Define the form control to save selections to\n   */\n  @Input()\n  public set selectionsControl(value: FormControl) {\n    if (!value) {\n      return;\n    }\n\n    this._selectionsControl = value;\n    /*\n     *console.log('set selectionsControl: ', this.selectionsControl);\n     */\n  }\n  public get selectionsControl(): FormControl {\n    return this._selectionsControl;\n  }\n  private _selectionsControl: FormControl = new FormControl();\n\n  /**\n   * Define if the progress spinner should be active\n   */\n  @Input()\n  public showProgress: boolean = false;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define items that should be selected when the component loads\n   */\n  @Input()\n  public set initialSelections(selections: OptionType[]) {\n    // istanbul ignore else\n    if (selections) {\n      // Seed the array\n      this.selectedOptions = coerceArray(selections.slice());\n\n      // istanbul ignore else\n      if (this.selectionsControl && this.selectionsControl.setValue) {\n        // Seed the formControl\n        this.selectionsControl.setValue(this.selectedOptions);\n      }\n    }\n  }\n\n  /**\n   * Emit the selected chip\n   */\n  @Output()\n  public optionSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the removed chip\n   */\n  @Output()\n  public optionRemoved: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the current selection\n   */\n  @Output()\n  public selection: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the query string\n   */\n  @Output()\n  public query: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Subscribe to the querySubject and pass values to the query emitter\n   *\n   * NOTE: When an option is selected, the full selected value is piped through this stream\n   * somehow. Have not figured out why. Best guess is it's something due to the `matAutocomplete`\n   * directive. For now, we are filtering out anything that is not a string.\n   */\n  public ngAfterViewInit(): void {\n    // Take a stream of query changes\n    this.querySubject.pipe(\n      untilComponentDestroyed(this),\n      filter((v) => (typeof v === 'string') && v.length >= this.minimumCharacters),\n      // Debounce the query changes\n      debounceTime(this.debounceDelay),\n      // Only allow a query through if it is different from the previous query\n      distinctUntilChanged(),\n    ).subscribe((query: string) => {\n      this.query.next(query);\n    });\n\n    // Trigger a change detection cycle if the formControl value was changed dynamically\n    // istanbul ignore else\n    if (this.selectionsControl) {\n      this.selectionsControl.valueChanges.pipe(\n        untilComponentDestroyed(this),\n      ).subscribe((value: OptionType[]) => {\n        this.selectedOptions = value;\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Select an option\n   *\n   * @param event - The selection event from the underlying MatAutocomplete\n   */\n  public selectOption(event: TsAutocompleteSelectedEvent): void {\n    // The selected option\n    const selection: OptionType = event.option.value;\n\n    // Stop the flow if the selection already exists in the array\n    if (arrayContainsObject(selection, this.selectedOptions, this.comparatorFn)) {\n      // Set an error on the control to let the user know they chose a duplicate option\n      // istanbul ignore else\n      if (this.selectionsControl) {\n        this.setDuplicateError(this.selectionsControl, selection, this.uiFormatFn);\n      }\n\n      return;\n    }\n\n\n    // Add to the displayed selection chips\n    this.selectedOptions.push(selection);\n\n    // If supporting multiple selections, reset the input text value\n    if (this.multiple) {\n      this.resetSearch();\n    }\n\n    // Update the form control\n    // istanbul ignore else\n    if (this.selectionsControl && this.selectionsControl.setValue) {\n      this.selectionsControl.setValue(this.selectedOptions);\n    }\n\n    // Notify consumers about changes\n    this.optionSelected.emit(event.option.value);\n    this.selection.emit(this.selectedOptions);\n  }\n\n\n  /**\n   * Deselect an option\n   *\n   * @param option - The option to deselect\n   */\n  public deselectOption(option: OptionType): void {\n    // Find the key of the selection in the selectedOptions array\n    const index = this.selectedOptions.indexOf(option);\n\n    // If not found\n    if (index \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NavigationItemBase.html":{"url":"interfaces/NavigationItemBase.html","title":"interface - NavigationItemBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NavigationItemBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Base allowed keys for an item passed to the TsNavigationComponent\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alwaysHidden\n                                \n                                \n                                            Optional\n                                        isDisabled\n                                \n                                \n                                            Optional\n                                        isForAdmin\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysHidden\n                                    \n                                \n                                \n                                    \n                                        alwaysHidden:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Define if the item should only be allowed in the secondary navigation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDisabled\n                                    \n                                \n                                \n                                    \n                                        isDisabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define if the item is disabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isForAdmin\n                                    \n                                \n                                \n                                    \n                                        isForAdmin:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define if the item is for admin functionality only\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value to use as the item text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TerminusUIModule.html":{"url":"modules/TerminusUIModule.html","title":"module - TerminusUIModule","body":"\n                   \n\n\n\n\n  Modules\n  TerminusUIModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TerminusUIModule\n\n\n\ncluster_TerminusUIModule_declarations\n\n\n\ncluster_TerminusUIModule_imports\n\n\n\ncluster_TerminusUIModule_exports\n\n\n\ncluster_TerminusUIModule_providers\n\n\n\n\nTsReactiveFormBaseComponent\n\nTsReactiveFormBaseComponent\n\n\n\nTerminusUIModule\n\nTerminusUIModule\n\nTerminusUIModule -->\n\nTsReactiveFormBaseComponent->TerminusUIModule\n\n\n\n\n\nTsAutocompleteModule \n\nTsAutocompleteModule \n\nTsAutocompleteModule  -->\n\nTerminusUIModule->TsAutocompleteModule \n\n\n\n\n\nTsAutofocusModule \n\nTsAutofocusModule \n\nTsAutofocusModule  -->\n\nTerminusUIModule->TsAutofocusModule \n\n\n\n\n\nTsButtonModule \n\nTsButtonModule \n\nTsButtonModule  -->\n\nTerminusUIModule->TsButtonModule \n\n\n\n\n\nTsCSVEntryModule \n\nTsCSVEntryModule \n\nTsCSVEntryModule  -->\n\nTerminusUIModule->TsCSVEntryModule \n\n\n\n\n\nTsCardModule \n\nTsCardModule \n\nTsCardModule  -->\n\nTerminusUIModule->TsCardModule \n\n\n\n\n\nTsChartModule \n\nTsChartModule \n\nTsChartModule  -->\n\nTerminusUIModule->TsChartModule \n\n\n\n\n\nTsCheckboxModule \n\nTsCheckboxModule \n\nTsCheckboxModule  -->\n\nTerminusUIModule->TsCheckboxModule \n\n\n\n\n\nTsConfirmationModule \n\nTsConfirmationModule \n\nTsConfirmationModule  -->\n\nTerminusUIModule->TsConfirmationModule \n\n\n\n\n\nTsCopyModule \n\nTsCopyModule \n\nTsCopyModule  -->\n\nTerminusUIModule->TsCopyModule \n\n\n\n\n\nTsDateRangeModule \n\nTsDateRangeModule \n\nTsDateRangeModule  -->\n\nTerminusUIModule->TsDateRangeModule \n\n\n\n\n\nTsDatepickerModule \n\nTsDatepickerModule \n\nTsDatepickerModule  -->\n\nTerminusUIModule->TsDatepickerModule \n\n\n\n\n\nTsFileUploadModule \n\nTsFileUploadModule \n\nTsFileUploadModule  -->\n\nTerminusUIModule->TsFileUploadModule \n\n\n\n\n\nTsIconButtonModule \n\nTsIconButtonModule \n\nTsIconButtonModule  -->\n\nTerminusUIModule->TsIconButtonModule \n\n\n\n\n\nTsIconModule \n\nTsIconModule \n\nTsIconModule  -->\n\nTerminusUIModule->TsIconModule \n\n\n\n\n\nTsInputModule \n\nTsInputModule \n\nTsInputModule  -->\n\nTerminusUIModule->TsInputModule \n\n\n\n\n\nTsLinkModule \n\nTsLinkModule \n\nTsLinkModule  -->\n\nTerminusUIModule->TsLinkModule \n\n\n\n\n\nTsLoadingOverlayModule \n\nTsLoadingOverlayModule \n\nTsLoadingOverlayModule  -->\n\nTerminusUIModule->TsLoadingOverlayModule \n\n\n\n\n\nTsLoginFormModule \n\nTsLoginFormModule \n\nTsLoginFormModule  -->\n\nTerminusUIModule->TsLoginFormModule \n\n\n\n\n\nTsMaskModule \n\nTsMaskModule \n\nTsMaskModule  -->\n\nTerminusUIModule->TsMaskModule \n\n\n\n\n\nTsMenuModule \n\nTsMenuModule \n\nTsMenuModule  -->\n\nTerminusUIModule->TsMenuModule \n\n\n\n\n\nTsNavigationModule \n\nTsNavigationModule \n\nTsNavigationModule  -->\n\nTerminusUIModule->TsNavigationModule \n\n\n\n\n\nTsPaginatorModule \n\nTsPaginatorModule \n\nTsPaginatorModule  -->\n\nTerminusUIModule->TsPaginatorModule \n\n\n\n\n\nTsRadioGroupModule \n\nTsRadioGroupModule \n\nTsRadioGroupModule  -->\n\nTerminusUIModule->TsRadioGroupModule \n\n\n\n\n\nTsScrollbarsModule \n\nTsScrollbarsModule \n\nTsScrollbarsModule  -->\n\nTerminusUIModule->TsScrollbarsModule \n\n\n\n\n\nTsSearchModule \n\nTsSearchModule \n\nTsSearchModule  -->\n\nTerminusUIModule->TsSearchModule \n\n\n\n\n\nTsSelectModule \n\nTsSelectModule \n\nTsSelectModule  -->\n\nTerminusUIModule->TsSelectModule \n\n\n\n\n\nTsSortModule \n\nTsSortModule \n\nTsSortModule  -->\n\nTerminusUIModule->TsSortModule \n\n\n\n\n\nTsSpacingModule \n\nTsSpacingModule \n\nTsSpacingModule  -->\n\nTerminusUIModule->TsSpacingModule \n\n\n\n\n\nTsTableModule \n\nTsTableModule \n\nTsTableModule  -->\n\nTerminusUIModule->TsTableModule \n\n\n\n\n\nTsToggleModule \n\nTsToggleModule \n\nTsToggleModule  -->\n\nTerminusUIModule->TsToggleModule \n\n\n\n\n\nTsTooltipModule \n\nTsTooltipModule \n\nTsTooltipModule  -->\n\nTerminusUIModule->TsTooltipModule \n\n\n\n\n\nTsValidationMessagesModule \n\nTsValidationMessagesModule \n\nTsValidationMessagesModule  -->\n\nTerminusUIModule->TsValidationMessagesModule \n\n\n\n\n\nTsAutocompleteModule\n\nTsAutocompleteModule\n\nTerminusUIModule -->\n\nTsAutocompleteModule->TerminusUIModule\n\n\n\n\n\nTsAutofocusModule\n\nTsAutofocusModule\n\nTerminusUIModule -->\n\nTsAutofocusModule->TerminusUIModule\n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTerminusUIModule -->\n\nTsButtonModule->TerminusUIModule\n\n\n\n\n\nTsCSVEntryModule\n\nTsCSVEntryModule\n\nTerminusUIModule -->\n\nTsCSVEntryModule->TerminusUIModule\n\n\n\n\n\nTsCardModule\n\nTsCardModule\n\nTerminusUIModule -->\n\nTsCardModule->TerminusUIModule\n\n\n\n\n\nTsChartModule\n\nTsChartModule\n\nTerminusUIModule -->\n\nTsChartModule->TerminusUIModule\n\n\n\n\n\nTsCheckboxModule\n\nTsCheckboxModule\n\nTerminusUIModule -->\n\nTsCheckboxModule->TerminusUIModule\n\n\n\n\n\nTsConfirmationModule\n\nTsConfirmationModule\n\nTerminusUIModule -->\n\nTsConfirmationModule->TerminusUIModule\n\n\n\n\n\nTsCopyModule\n\nTsCopyModule\n\nTerminusUIModule -->\n\nTsCopyModule->TerminusUIModule\n\n\n\n\n\nTsDateRangeModule\n\nTsDateRangeModule\n\nTerminusUIModule -->\n\nTsDateRangeModule->TerminusUIModule\n\n\n\n\n\nTsDatepickerModule\n\nTsDatepickerModule\n\nTerminusUIModule -->\n\nTsDatepickerModule->TerminusUIModule\n\n\n\n\n\nTsFileUploadModule\n\nTsFileUploadModule\n\nTerminusUIModule -->\n\nTsFileUploadModule->TerminusUIModule\n\n\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTerminusUIModule -->\n\nTsIconButtonModule->TerminusUIModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTerminusUIModule -->\n\nTsIconModule->TerminusUIModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTerminusUIModule -->\n\nTsInputModule->TerminusUIModule\n\n\n\n\n\nTsLinkModule\n\nTsLinkModule\n\nTerminusUIModule -->\n\nTsLinkModule->TerminusUIModule\n\n\n\n\n\nTsLoadingOverlayModule\n\nTsLoadingOverlayModule\n\nTerminusUIModule -->\n\nTsLoadingOverlayModule->TerminusUIModule\n\n\n\n\n\nTsLoginFormModule\n\nTsLoginFormModule\n\nTerminusUIModule -->\n\nTsLoginFormModule->TerminusUIModule\n\n\n\n\n\nTsMaskModule\n\nTsMaskModule\n\nTerminusUIModule -->\n\nTsMaskModule->TerminusUIModule\n\n\n\n\n\nTsMenuModule\n\nTsMenuModule\n\nTerminusUIModule -->\n\nTsMenuModule->TerminusUIModule\n\n\n\n\n\nTsNavigationModule\n\nTsNavigationModule\n\nTerminusUIModule -->\n\nTsNavigationModule->TerminusUIModule\n\n\n\n\n\nTsPaginatorModule\n\nTsPaginatorModule\n\nTerminusUIModule -->\n\nTsPaginatorModule->TerminusUIModule\n\n\n\n\n\nTsRadioGroupModule\n\nTsRadioGroupModule\n\nTerminusUIModule -->\n\nTsRadioGroupModule->TerminusUIModule\n\n\n\n\n\nTsScrollbarsModule\n\nTsScrollbarsModule\n\nTerminusUIModule -->\n\nTsScrollbarsModule->TerminusUIModule\n\n\n\n\n\nTsSearchModule\n\nTsSearchModule\n\nTerminusUIModule -->\n\nTsSearchModule->TerminusUIModule\n\n\n\n\n\nTsSelectModule\n\nTsSelectModule\n\nTerminusUIModule -->\n\nTsSelectModule->TerminusUIModule\n\n\n\n\n\nTsSortModule\n\nTsSortModule\n\nTerminusUIModule -->\n\nTsSortModule->TerminusUIModule\n\n\n\n\n\nTsSpacingModule\n\nTsSpacingModule\n\nTerminusUIModule -->\n\nTsSpacingModule->TerminusUIModule\n\n\n\n\n\nTsTableModule\n\nTsTableModule\n\nTerminusUIModule -->\n\nTsTableModule->TerminusUIModule\n\n\n\n\n\nTsToggleModule\n\nTsToggleModule\n\nTerminusUIModule -->\n\nTsToggleModule->TerminusUIModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTerminusUIModule -->\n\nTsTooltipModule->TerminusUIModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTerminusUIModule -->\n\nTsValidationMessagesModule->TerminusUIModule\n\n\n\n\n\nTsValidatorsService\n\nTsValidatorsService\n\nTerminusUIModule -->\n\nTsValidatorsService->TerminusUIModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsReactiveFormBaseComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsValidatorsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsAutocompleteModule\n                            \n                            \n                                    TsAutofocusModule\n                            \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsCSVEntryModule\n                            \n                            \n                                    TsCardModule\n                            \n                            \n                                    TsChartModule\n                            \n                            \n                                    TsCheckboxModule\n                            \n                            \n                                    TsConfirmationModule\n                            \n                            \n                                    TsCopyModule\n                            \n                            \n                                    TsDateRangeModule\n                            \n                            \n                                    TsDatepickerModule\n                            \n                            \n                                    TsFileUploadModule\n                            \n                            \n                                    TsIconButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsInputModule\n                            \n                            \n                                    TsLinkModule\n                            \n                            \n                                    TsLoadingOverlayModule\n                            \n                            \n                                    TsLoginFormModule\n                            \n                            \n                                    TsMaskModule\n                            \n                            \n                                    TsMenuModule\n                            \n                            \n                                    TsNavigationModule\n                            \n                            \n                                    TsPaginatorModule\n                            \n                            \n                                    TsRadioGroupModule\n                            \n                            \n                                    TsScrollbarsModule\n                            \n                            \n                                    TsSearchModule\n                            \n                            \n                                    TsSelectModule\n                            \n                            \n                                    TsSortModule\n                            \n                            \n                                    TsSpacingModule\n                            \n                            \n                                    TsTableModule\n                            \n                            \n                                    TsToggleModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsAutocompleteModule\n                            \n                            \n                                    TsAutofocusModule\n                            \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsCSVEntryModule\n                            \n                            \n                                    TsCardModule\n                            \n                            \n                                    TsChartModule\n                            \n                            \n                                    TsCheckboxModule\n                            \n                            \n                                    TsConfirmationModule\n                            \n                            \n                                    TsCopyModule\n                            \n                            \n                                    TsDateRangeModule\n                            \n                            \n                                    TsDatepickerModule\n                            \n                            \n                                    TsFileUploadModule\n                            \n                            \n                                    TsIconButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsInputModule\n                            \n                            \n                                    TsLinkModule\n                            \n                            \n                                    TsLoadingOverlayModule\n                            \n                            \n                                    TsLoginFormModule\n                            \n                            \n                                    TsMaskModule\n                            \n                            \n                                    TsMenuModule\n                            \n                            \n                                    TsNavigationModule\n                            \n                            \n                                    TsPaginatorModule\n                            \n                            \n                                    TsRadioGroupModule\n                            \n                            \n                                    TsScrollbarsModule\n                            \n                            \n                                    TsSearchModule\n                            \n                            \n                                    TsSelectModule\n                            \n                            \n                                    TsSortModule\n                            \n                            \n                                    TsSpacingModule\n                            \n                            \n                                    TsTableModule\n                            \n                            \n                                    TsToggleModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // Angular imports\nimport { NgModule } from '@angular/core';\n\n// Components\nimport { TsAutocompleteModule } from './autocomplete/autocomplete.module';\nimport { TsAutofocusModule } from './autofocus/autofocus.module';\nimport { TsButtonModule } from './button/button.module';\nimport { TsCardModule } from './card/card.module';\nimport { TsChartModule } from './chart/chart.module';\nimport { TsCheckboxModule } from './checkbox/checkbox.module';\nimport { TsConfirmationModule } from './confirmation/confirmation.module';\nimport { TsCopyModule } from './copy/copy.module';\nimport { TsCSVEntryModule } from './csv-entry/csv-entry.module';\nimport { TsDateRangeModule } from './date-range/date-range.module';\nimport { TsDatepickerModule } from './datepicker/datepicker.module';\nimport { TsFileUploadModule } from './file-upload/file-upload.module';\nimport { TsIconButtonModule } from './icon-button/icon-button.module';\nimport { TsIconModule } from './icon/icon.module';\nimport { TsInputModule } from './input/input.module';\nimport { TsLinkModule } from './link/link.module';\nimport { TsLoadingOverlayModule } from './loading-overlay/loading-overlay.module';\nimport { TsLoginFormModule } from './login-form/login-form.module';\nimport { TsMaskModule } from './mask/mask.module';\nimport { TsMenuModule } from './menu/menu.module';\nimport { TsNavigationModule } from './navigation/navigation.module';\nimport { TsPaginatorModule } from './paginator/paginator.module';\nimport { TsPipesModule } from './pipes/pipes.module';\nimport { TsRadioGroupModule } from './radio-group/radio-group.module';\nimport { TsScrollbarsModule } from './scrollbars/scrollbars.module';\nimport { TsSearchModule } from './search/search.module';\nimport { TsSelectModule } from './select/select.module';\nimport { TsSortModule } from './sort/sort.module';\nimport { TsSpacingModule } from './spacing/spacing.module';\nimport { TsTableModule } from './table/table.module';\nimport { TsToggleModule } from './toggle/toggle.module';\nimport { TsTooltipModule } from './tooltip/tooltip.module';\nimport { TsValidationMessagesModule } from './validation-messages/validation-messages.module';\n// INJECT: UI component to UI module\n// NB! The above line is required for our yeoman generator and should not be changed.\n\nimport { TsValidatorsService } from './validators/validators.service';\nimport { TsReactiveFormBaseComponent } from './utilities/reactive-form-base.component';\n\n@NgModule({\n  imports: [\n    TsAutocompleteModule,\n    TsAutofocusModule,\n    TsButtonModule,\n    TsCardModule,\n    TsChartModule,\n    TsCheckboxModule,\n    TsConfirmationModule,\n    TsCopyModule,\n    TsCSVEntryModule,\n    TsDateRangeModule,\n    TsDatepickerModule,\n    TsFileUploadModule,\n    TsIconButtonModule,\n    TsIconModule,\n    TsInputModule,\n    TsLinkModule,\n    TsLoadingOverlayModule,\n    TsLoginFormModule,\n    TsMaskModule,\n    TsMenuModule,\n    TsNavigationModule,\n    TsPaginatorModule,\n    TsPipesModule,\n    TsRadioGroupModule,\n    TsScrollbarsModule,\n    TsSearchModule,\n    TsSelectModule,\n    TsSortModule,\n    TsSpacingModule,\n    TsTableModule,\n    TsToggleModule,\n    TsTooltipModule,\n    TsValidationMessagesModule,\n    // INJECT: Add UI component module to imports\n    // NB! The above line is required for our yeoman generator and should not be changed.\n  ],\n  declarations: [\n    TsReactiveFormBaseComponent,\n  ],\n  providers: [\n    TsValidatorsService,\n  ],\n  exports: [\n    TsAutocompleteModule,\n    TsAutofocusModule,\n    TsButtonModule,\n    TsCardModule,\n    TsChartModule,\n    TsCheckboxModule,\n    TsConfirmationModule,\n    TsCopyModule,\n    TsCSVEntryModule,\n    TsDateRangeModule,\n    TsDatepickerModule,\n    TsFileUploadModule,\n    TsIconButtonModule,\n    TsIconModule,\n    TsInputModule,\n    TsLinkModule,\n    TsLoadingOverlayModule,\n    TsLoginFormModule,\n    TsMaskModule,\n    TsMenuModule,\n    TsNavigationModule,\n    TsPaginatorModule,\n    TsPipesModule,\n    TsRadioGroupModule,\n    TsScrollbarsModule,\n    TsSearchModule,\n    TsSelectModule,\n    TsSortModule,\n    TsSpacingModule,\n    TsTableModule,\n    TsToggleModule,\n    TsTooltipModule,\n    TsValidationMessagesModule,\n    // INJECT: Add UI component to module exports\n    // NB! The above line is required for our yeoman generator and should not be changed.\n  ],\n})\nexport class TerminusUIModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsAmChartsService.html":{"url":"injectables/TsAmChartsService.html","title":"injectable - TsAmChartsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsAmChartsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/amcharts.service.ts\n        \n\n            \n                Description\n            \n            \n                Expose amCharts via a service\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                amCharts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amCharts: TsAmChartsToken)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/chart/amcharts.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amCharts\n                                                  \n                                                        \n                                                                    TsAmChartsToken\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            amCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        amCharts:     TsAmChartsToken\n\n                    \n                \n                    \n                        \n                            Type :     TsAmChartsToken\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/amcharts.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InjectionToken,\n} from '@angular/core';\n\n\nexport interface TsAmChartsToken {\n  core: any;\n  charts: any;\n  maps?: any;\n  themes?: any[];\n}\n\n/**\n * Create an injection token that the consumer can override with their version of Highcharts\n */\nexport const TS_AMCHARTS_TOKEN: InjectionToken = new InjectionToken('amCharts');\n\n\n/**\n * Expose amCharts via a service\n */\n@Injectable()\nexport class TsAmChartsService {\n\n  constructor(\n    @Inject(TS_AMCHARTS_TOKEN) public amCharts: TsAmChartsToken,\n  ) {\n    // istanbul ignore else\n    if (amCharts && amCharts.themes && amCharts.themes.length > 0) {\n      for (const theme of amCharts.themes) {\n        // istanbul ignore else\n        if (theme) {\n          amCharts.core.useTheme(theme);\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsAmChartsToken.html":{"url":"interfaces/TsAmChartsToken.html","title":"interface - TsAmChartsToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsAmChartsToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/amcharts.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        charts\n                                \n                                \n                                        core\n                                \n                                \n                                            Optional\n                                        maps\n                                \n                                \n                                            Optional\n                                        themes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        charts\n                                    \n                                \n                                \n                                    \n                                        charts:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        core\n                                    \n                                \n                                \n                                    \n                                        core:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maps\n                                    \n                                \n                                \n                                    \n                                        maps:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InjectionToken,\n} from '@angular/core';\n\n\nexport interface TsAmChartsToken {\n  core: any;\n  charts: any;\n  maps?: any;\n  themes?: any[];\n}\n\n/**\n * Create an injection token that the consumer can override with their version of Highcharts\n */\nexport const TS_AMCHARTS_TOKEN: InjectionToken = new InjectionToken('amCharts');\n\n\n/**\n * Expose amCharts via a service\n */\n@Injectable()\nexport class TsAmChartsService {\n\n  constructor(\n    @Inject(TS_AMCHARTS_TOKEN) public amCharts: TsAmChartsToken,\n  ) {\n    // istanbul ignore else\n    if (amCharts && amCharts.themes && amCharts.themes.length > 0) {\n      for (const theme of amCharts.themes) {\n        // istanbul ignore else\n        if (theme) {\n          amCharts.core.useTheme(theme);\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsAutocompleteModule.html":{"url":"modules/TsAutocompleteModule.html","title":"module - TsAutocompleteModule","body":"\n                   \n\n\n\n\n  Modules\n  TsAutocompleteModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsAutocompleteModule\n\n\n\ncluster_TsAutocompleteModule_declarations\n\n\n\ncluster_TsAutocompleteModule_imports\n\n\n\ncluster_TsAutocompleteModule_exports\n\n\n\n\nTsAutocompleteComponent\n\nTsAutocompleteComponent\n\n\n\nTsAutocompleteModule\n\nTsAutocompleteModule\n\nTsAutocompleteModule -->\n\nTsAutocompleteComponent->TsAutocompleteModule\n\n\n\n\n\nTsAutocompleteComponent \n\nTsAutocompleteComponent \n\nTsAutocompleteComponent  -->\n\nTsAutocompleteModule->TsAutocompleteComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsAutocompleteModule -->\n\nTsIconModule->TsAutocompleteModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsAutocompleteModule -->\n\nTsInputModule->TsAutocompleteModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsAutocompleteModule -->\n\nTsValidationMessagesModule->TsAutocompleteModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/autocomplete/autocomplete.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsAutocompleteComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsInputModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsAutocompleteComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsInputModule } from './../input/input.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsAutocompleteComponent } from './autocomplete.component';\n\nexport * from './autocomplete.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatChipsModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    TsIconModule,\n    TsValidationMessagesModule,\n    TsInputModule,\n  ],\n  declarations: [\n    TsAutocompleteComponent,\n  ],\n  exports: [\n    TsAutocompleteComponent,\n  ],\n})\nexport class TsAutocompleteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsAutocompleteSelectedEvent.html":{"url":"classes/TsAutocompleteSelectedEvent.html","title":"class - TsAutocompleteSelectedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsAutocompleteSelectedEvent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/autocomplete/autocomplete.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MatAutocompleteSelectedEvent\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        Autocomplete\n\n\n\n\nTable of Contents\n\nBasic usage with a FormControl\nAllow multiple selections\nSeed selected values\nShow the progress indicator\nCustomize how the selected value is displayed\nEvent driven\nShow a 'no results' validation error\nMinimum required character count\n\n\nBasic usage with a FormControl\na) Pass an array of available options in. These are the options displayed to the user in the\n   dropdown.\nb) Create a local reference to the autocomplete component.\n\nc) Subscribe to the query events coming from the autocomplete. This is a stream of query strings\nentered by the user. This stream is debounced and de-duped by default.\ninterface OptionType {\n  id: string;\n  login: string;\n  [key: string]: any;\n}\n\n// Create a reference to the autocomplete and pass in a typing for the options\n@ViewChild('auto')\npublic auto: TsAutocompleteComponent;\n\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      // Only hit the API if a query was sent in\n      if (term) {\n        // Start the progress indicator\n        this.inProgress = true;\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              // Stop the progress indicator\n              this.inProgress = false;\n              return response['items'];\n            }),\n          )\n      } else {\n        // If no query was passed in, reset the search results and stop the progress indicator\n        this.inProgress = false;\n        return of([]);\n      }\n    }),\n  )\n;\nChange the debounce delay by setting debounceDelay.\n\nAllow multiple selections\nTo allow multiple selections, pass in a comparator function. This function should match the type {@link TsAutocompleteComparatorFn} which has the basic signature of (v: any) => string.\nThis comparator function will be used by the autocomplete to determine if a selection is a\nduplicate. It is also used as the trackBy function when looping through options.\nSeed selected values\nTo seed initial values, pass the array of selections to initialSelections:\nShow the progress indicator\nShow a progress indicator by toggling the showProgress value:\nthis.isInProgress = true;Customize how the selected value is displayed\nThe UI display of selected options can be changed by passing in a custom displayWith function.\nThis function should match {@link TsAutocompleteFormatterFn} which has the signature of (v) =>\nstring;\n\n v.login\"\n>Event driven\nIf a FormControl isn't needed, you can subscribe to events directly:\nadded(chip) {\n  console.log('Selection made!', chip);\n}\n\nremoved(chip) {\n  console.log('Selection removed!', chip);\n}\n\nchange(selections) {\n  console.log('Selection was changed!', selections);\n}Show a 'no results' validation error\nIf no results are found, set a validation error on the FormControl:\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      if (term) {\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              const items = response['items'];\n\n              // If no results are found, notify the user via a validation message\n              if (items.length Minimum required character count\nBy default, two characters must be entered before a query is emitted. This value can be overridden:\n\n    \n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  MatAutocomplete,\n  MatAutocompleteSelectedEvent,\n  MatAutocompleteTrigger,\n} from '@angular/material/autocomplete';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  coerceArray,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  arrayContainsObject,\n  isFunction,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\nexport interface KeyboardEvent {\n  [key: string]: any;\n}\n\nexport interface MouseEvent {\n  [key: string]: any;\n}\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} formatter function\n */\nexport type TsAutocompleteFormatterFn = (value: any) => string;\n\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} comparator function\n */\nexport type TsAutocompleteComparatorFn = (value: any) => string;\n\n\nexport class TsAutocompleteSelectedEvent extends MatAutocompleteSelectedEvent {}\n\n\n/**\n * The autocomplete UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-autocomplete`: The primary container\n * - `qa-autocomplete-input`: The input element\n * - `qa-autocomplete-spinner`: The progress indicator\n * - `qa-autocomplete-chip`: An individual selection 'chip'\n * - `qa-autocomplete-options`: The container for the list of options\n * - `qa-autocomplete-option`: An individual option from the list\n * - `qa-autocomplete-hint`: The input hint\n * - `qa-autocomplete-validation-messages`: The container for validation messages\n *\n * @example\n *  v.name\"\n *              hint=\"Begin typing to search..\"\n *              label=\"Select options:\"\n *              multiple=\"(v) => v.id\"\n *              name=\"product selections\"\n *              options=\"[{}, {}, ...]\"\n *              selectionsControl=\"myForm.get('myControl')\"\n *              [showProgress]=\"inProgress\"\n *              theme=\"primary\"\n *              initialSelections=\"[{}]\"\n *              (optionSelected)=\"mySelected($event)\"\n *              (optionRemoved)=\"myRemoved($event)\"\n *              (selection)=\"mySelection($event)\"\n *              (query)=\"myQuery($event)\"\n * >\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  host: {\n    class: 'ts-autocomplete',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsAutocomplete',\n})\nexport class TsAutocompleteComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Management of the query string\n   */\n  public querySubject: BehaviorSubject = new BehaviorSubject('');\n\n  /**\n   * Store the search query\n   */\n  public searchQuery!: string;\n\n  /**\n   * Define if the chips/selections should be selectable\n   */\n  public selectableChips: boolean = false;\n\n  /**\n   * Store the selected options\n   */\n  public selectedOptions: OptionType[] = [];\n\n  /**\n   * Store the formatter function for the UI display\n   */\n  private uiFormatFn!: (value: OptionType) => string;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocomplete')\n  public autocomplete!: MatAutocomplete;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocompleteTrigger')\n  set autocompleteTrigger(value: MatAutocompleteTrigger) {\n    this.trigger = value;\n  }\n  get autocompleteTrigger(): MatAutocompleteTrigger {\n    return this.trigger;\n  }\n  private trigger!: MatAutocompleteTrigger;\n\n  /**\n   * Provide direct access to the input\n   */\n  @ViewChild('input')\n  public input!: ElementRef;\n\n  /**\n   * Define a debounce delay for the query\n   */\n  @Input()\n  public set debounceDelay(value: number) {\n    this._debounceDelay = coerceNumberProperty(value);\n  }\n  public get debounceDelay(): number {\n    return this._debounceDelay;\n  }\n  private _debounceDelay: number = 200;\n\n  /**\n   * A function to output the UI text from the selected item\n   *\n   * When undefined the full selection object will be used as the display value\n   */\n  @Input()\n  public set displayWith(value: TsAutocompleteFormatterFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this.uiFormatFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'displayWith' must be passed a function.`);\n      }\n    }\n  }\n  public get displayWith(): TsAutocompleteFormatterFn {\n    return this.uiFormatFn;\n  }\n\n  /**\n   * Define a hint for the input\n   */\n  // FIXME: Fix potential overlap of hint and error messages\n  @Input()\n  public hint: string | undefined;\n\n  /**\n   * Define the placeholder/label\n   */\n  @Input()\n  public label: string | undefined;\n\n  /**\n   * Define a minimum character count for queries\n   */\n  @Input()\n  public set minimumCharacters(value: number) {\n    this._minimumCharacters = coerceNumberProperty(value);\n  }\n  public get minimumCharacters(): number {\n    return this._minimumCharacters;\n  }\n  private _minimumCharacters: number = 2;\n\n  /**\n   * Define if multiple selections are allowed by passing in a comparator function\n   */\n  @Input()\n  public set multiple(v: TsAutocompleteComparatorFn) {\n    if (!v) {\n      return;\n    }\n\n    if (isFunction(v)) {\n      this.comparatorFn = v;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'multiple' must be passed a 'TsAutocompleteComparatorFn' function.`);\n      }\n    }\n  }\n  public get multiple(): TsAutocompleteComparatorFn {\n    return this.comparatorFn;\n  }\n  private comparatorFn!: TsAutocompleteComparatorFn;\n\n  /**\n   * Define the name attribute value\n   */\n  @Input()\n  public name: string | undefined;\n\n  /**\n   * The list of options to display in the drop down\n   */\n  @Input()\n  public options!: OptionType[];\n\n  /**\n   * Define the form control to save selections to\n   */\n  @Input()\n  public set selectionsControl(value: FormControl) {\n    if (!value) {\n      return;\n    }\n\n    this._selectionsControl = value;\n    /*\n     *console.log('set selectionsControl: ', this.selectionsControl);\n     */\n  }\n  public get selectionsControl(): FormControl {\n    return this._selectionsControl;\n  }\n  private _selectionsControl: FormControl = new FormControl();\n\n  /**\n   * Define if the progress spinner should be active\n   */\n  @Input()\n  public showProgress: boolean = false;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define items that should be selected when the component loads\n   */\n  @Input()\n  public set initialSelections(selections: OptionType[]) {\n    // istanbul ignore else\n    if (selections) {\n      // Seed the array\n      this.selectedOptions = coerceArray(selections.slice());\n\n      // istanbul ignore else\n      if (this.selectionsControl && this.selectionsControl.setValue) {\n        // Seed the formControl\n        this.selectionsControl.setValue(this.selectedOptions);\n      }\n    }\n  }\n\n  /**\n   * Emit the selected chip\n   */\n  @Output()\n  public optionSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the removed chip\n   */\n  @Output()\n  public optionRemoved: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the current selection\n   */\n  @Output()\n  public selection: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the query string\n   */\n  @Output()\n  public query: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Subscribe to the querySubject and pass values to the query emitter\n   *\n   * NOTE: When an option is selected, the full selected value is piped through this stream\n   * somehow. Have not figured out why. Best guess is it's something due to the `matAutocomplete`\n   * directive. For now, we are filtering out anything that is not a string.\n   */\n  public ngAfterViewInit(): void {\n    // Take a stream of query changes\n    this.querySubject.pipe(\n      untilComponentDestroyed(this),\n      filter((v) => (typeof v === 'string') && v.length >= this.minimumCharacters),\n      // Debounce the query changes\n      debounceTime(this.debounceDelay),\n      // Only allow a query through if it is different from the previous query\n      distinctUntilChanged(),\n    ).subscribe((query: string) => {\n      this.query.next(query);\n    });\n\n    // Trigger a change detection cycle if the formControl value was changed dynamically\n    // istanbul ignore else\n    if (this.selectionsControl) {\n      this.selectionsControl.valueChanges.pipe(\n        untilComponentDestroyed(this),\n      ).subscribe((value: OptionType[]) => {\n        this.selectedOptions = value;\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Select an option\n   *\n   * @param event - The selection event from the underlying MatAutocomplete\n   */\n  public selectOption(event: TsAutocompleteSelectedEvent): void {\n    // The selected option\n    const selection: OptionType = event.option.value;\n\n    // Stop the flow if the selection already exists in the array\n    if (arrayContainsObject(selection, this.selectedOptions, this.comparatorFn)) {\n      // Set an error on the control to let the user know they chose a duplicate option\n      // istanbul ignore else\n      if (this.selectionsControl) {\n        this.setDuplicateError(this.selectionsControl, selection, this.uiFormatFn);\n      }\n\n      return;\n    }\n\n\n    // Add to the displayed selection chips\n    this.selectedOptions.push(selection);\n\n    // If supporting multiple selections, reset the input text value\n    if (this.multiple) {\n      this.resetSearch();\n    }\n\n    // Update the form control\n    // istanbul ignore else\n    if (this.selectionsControl && this.selectionsControl.setValue) {\n      this.selectionsControl.setValue(this.selectedOptions);\n    }\n\n    // Notify consumers about changes\n    this.optionSelected.emit(event.option.value);\n    this.selection.emit(this.selectedOptions);\n  }\n\n\n  /**\n   * Deselect an option\n   *\n   * @param option - The option to deselect\n   */\n  public deselectOption(option: OptionType): void {\n    // Find the key of the selection in the selectedOptions array\n    const index = this.selectedOptions.indexOf(option);\n\n    // If not found\n    if (index \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsAutofocusDirective.html":{"url":"directives/TsAutofocusDirective.html","title":"directive - TsAutofocusDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsAutofocusDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/autofocus/autofocus.directive.ts\n        \n\n            \n                Description\n            \n            \n                Autofocus any focusable element on-load.\nPassing any truthy value OR an empty string will enable the autofocus.\n\n            \n\n            \n                Implements\n            \n            \n                        AfterViewInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \nClick Me\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsAutofocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                shouldFocus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsAutofocus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/autofocus/autofocus.directive.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tsAutofocus\n                    \n                    \n                        Define if the element should be focused after initialization\n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/autofocus/autofocus.directive.ts:35\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/autofocus/autofocus.directive.ts:48\n                            \n                        \n\n\n                \n                    \n                            Focus the input after the view has initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shouldFocus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shouldFocus:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/autofocus/autofocus.directive.ts:29\n                            \n                        \n\n                \n                    \n                        Store the shouldFocus value\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tsAutofocus\n                    \n                \n\n\n                \n                    \n                        settsAutofocus(value: any)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/autofocus/autofocus.directive.ts:35\n                                \n                            \n                    \n                        \n                                Define if the element should be focused after initialization\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n    \n        \n\nTable of Contents\n\nBasic usage\nBinding\n\n\nBasic usage\nThe tsAutofocus directive can be used on any element that has a .focus() method. This includes\ninputs, select menus, textarea, buttons, links, iframes and any element with a defined tabindex\nabove -1.\nAdd the directive to a focusable element:\nBinding\nPassing in any value except false, 'false', null, or undefined will enable the directive.\n\n\n\n\n\n\n\n\n    \n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  AfterViewInit,\n  isDevMode,\n  ChangeDetectorRef,\n} from '@angular/core';\n\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\n\n/**\n * Autofocus any focusable element on-load.\n *\n * Passing any truthy value OR an empty string will enable the autofocus.\n *\n * @example\n * \n * Click Me\n */\n@Directive({\n  selector: '[tsAutofocus]',\n})\nexport class TsAutofocusDirective implements AfterViewInit {\n  /**\n   * Store the shouldFocus value\n   */\n  private shouldFocus!: boolean;\n\n  /**\n   * Define if the element should be focused after initialization\n   */\n  @Input()\n  public set tsAutofocus(value: any) {\n    this.shouldFocus = coerceBooleanProperty(value);\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Focus the input after the view has initialized\n   */\n  public ngAfterViewInit(): void {\n    if (this.shouldFocus) {\n      const el = this.elementRef.nativeElement;\n\n      if (el.focus) {\n        el.focus();\n        this.changeDetectorRef.detectChanges();\n      } else {\n        // istanbul ignore else\n        if (isDevMode()) {\n          throw Error(`TsAutofocusDirective must be used on an element that has a .focus() method.`);\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsAutofocusModule.html":{"url":"modules/TsAutofocusModule.html","title":"module - TsAutofocusModule","body":"\n                   \n\n\n\n\n  Modules\n  TsAutofocusModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsAutofocusModule\n\n\n\ncluster_TsAutofocusModule_declarations\n\n\n\ncluster_TsAutofocusModule_exports\n\n\n\n\nTsAutofocusDirective\n\nTsAutofocusDirective\n\n\n\nTsAutofocusModule\n\nTsAutofocusModule\n\nTsAutofocusModule -->\n\nTsAutofocusDirective->TsAutofocusModule\n\n\n\n\n\nTsAutofocusDirective \n\nTsAutofocusDirective \n\nTsAutofocusDirective  -->\n\nTsAutofocusModule->TsAutofocusDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/autofocus/autofocus.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsAutofocusDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsAutofocusDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsAutofocusDirective } from './autofocus.directive';\n\nexport * from './autofocus.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TsAutofocusDirective,\n  ],\n  exports: [\n    TsAutofocusDirective,\n  ],\n})\nexport class TsAutofocusModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsButtonModule.html":{"url":"modules/TsButtonModule.html","title":"module - TsButtonModule","body":"\n                   \n\n\n\n\n  Modules\n  TsButtonModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsButtonModule\n\n\n\ncluster_TsButtonModule_declarations\n\n\n\ncluster_TsButtonModule_imports\n\n\n\ncluster_TsButtonModule_exports\n\n\n\n\nTsButtonComponent\n\nTsButtonComponent\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsButtonModule -->\n\nTsButtonComponent->TsButtonModule\n\n\n\n\n\nTsButtonComponent \n\nTsButtonComponent \n\nTsButtonComponent  -->\n\nTsButtonModule->TsButtonComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsButtonModule -->\n\nTsIconModule->TsButtonModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/button/button.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsButtonComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsButtonComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { TsWindowService } from '@terminus/ngx-tools';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsButtonComponent } from './button.component';\n\nexport * from './button.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    TsIconModule,\n  ],\n  providers: [\n    TsWindowService,\n  ],\n  exports: [\n    TsButtonComponent,\n  ],\n  declarations: [\n    TsButtonComponent,\n  ],\n})\nexport class TsButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsCSVEntryModule.html":{"url":"modules/TsCSVEntryModule.html","title":"module - TsCSVEntryModule","body":"\n                   \n\n\n\n\n  Modules\n  TsCSVEntryModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsCSVEntryModule\n\n\n\ncluster_TsCSVEntryModule_declarations\n\n\n\ncluster_TsCSVEntryModule_imports\n\n\n\ncluster_TsCSVEntryModule_exports\n\n\n\n\nTsCSVEntryComponent\n\nTsCSVEntryComponent\n\n\n\nTsCSVEntryModule\n\nTsCSVEntryModule\n\nTsCSVEntryModule -->\n\nTsCSVEntryComponent->TsCSVEntryModule\n\n\n\n\n\nTsCSVEntryComponent \n\nTsCSVEntryComponent \n\nTsCSVEntryComponent  -->\n\nTsCSVEntryModule->TsCSVEntryComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsCSVEntryModule -->\n\nTsButtonModule->TsCSVEntryModule\n\n\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTsCSVEntryModule -->\n\nTsIconButtonModule->TsCSVEntryModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsCSVEntryModule -->\n\nTsIconModule->TsCSVEntryModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsCSVEntryModule -->\n\nTsTooltipModule->TsCSVEntryModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/csv-entry/csv-entry.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCSVEntryComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsIconButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCSVEntryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { TsButtonModule } from './../button/button.module';\nimport { TsCSVEntryComponent } from './csv-entry.component';\nimport { TsIconButtonModule } from './../icon-button/icon-button.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsTooltipModule } from './../tooltip/tooltip.module';\n\nexport * from './csv-entry.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    TsButtonModule,\n    TsIconButtonModule,\n    TsIconModule,\n    TsTooltipModule,\n  ],\n  declarations: [\n    TsCSVEntryComponent,\n  ],\n  exports: [\n    TsCSVEntryComponent,\n  ],\n})\nexport class TsCSVEntryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsCSVEntryRecord.html":{"url":"interfaces/TsCSVEntryRecord.html","title":"interface - TsCSVEntryRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsCSVEntryRecord\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/csv-entry/csv-entry.component.ts\n        \n\n            \n                Description\n            \n            \n                The structure for an individual row\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        columns\n                                \n                                \n                                        recordId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                    \n                                \n                                \n                                    \n                                        columns:     (string | null)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (string | null)[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recordId\n                                    \n                                \n                                \n                                    \n                                        recordId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        csv-entry\n\n\n\n\nTable of Contents\n\nBasic usage\nColumn Count\nRow count\nMax rows\n\n\nColumn validation\nStatic Column Headers\n\n\nBasic usage\nThe most basic implementation only needs the HTML and a single method. Each time the CSV table is updated, a new File Blob is generated and\nemitted.\n\nmyFunc(blob: Blob) {\n  ...\n}Column Count\nControl the default column count via an Input:\n\n  \n\nNOTE: Column count does not restrict what is pasted into the table.\n\nRow count\nControl the default number of rows via an Input:\n\n  \n\nNOTE: Row count does not restrict what is pasted into the table.\n\nMax rows\nControl the maximum number of rows a table will allow\n\nIf the user attempts to paste or manually add more rows than are allowed, a validation message will appear below the table.\nColumn validation\n\nNOTE: Currently, custom validation messaging is only supported for the URL validator. More will be added as needs arise.\n\nPass in an array of validators matching the column count.\nmyValidators = [null, this.validatorsService.url(), null, null];\nThis example would add the URL validation to the second column only.\nStatic Column Headers\nIf there are certain headers that must be available, these can be set via an input:\n\nSetting static column headers will set the header cells to readonly. This will still allow keyboard navigation but will not allow the user\nto change the contents of the set header cells.\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  untilComponentDestroyed,\n  TsDocumentService,\n} from '@terminus/ngx-tools';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n} from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TS_SPACING } from './../spacing/spacing.constant';\n\n\n\n/**\n * The structure for an individual row\n */\nexport interface TsCSVEntryRecord {\n  recordId: number;\n  columns: (string | null)[];\n}\n\n/**\n * The structure for the form\n */\nexport interface TsCSVFormContents {\n  headers: string[];\n  records: TsCSVEntryRecord[];\n}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * This is the csv-entry UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-csv-entry`: The primary container\n * - `qa-csv-entry-info`: Container for row/column count\n * - `qa-csv-entry-row`: A row\n * - `qa-csv-entry-cell`: A body cell\n * - `qa-csv-entry-header-cell`: A header cell\n * - `qa-csv-entry-header-row`: Container for a header row\n * - `qa-csv-entry-delete`: A delete button\n * - `qa-csv-entry`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-csv-entry',\n  templateUrl: './csv-entry.component.html',\n  styleUrls: ['./csv-entry.component.scss'],\n  host: {\n    class: 'ts-csv-entry',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCSVEntry',\n})\nexport class TsCSVEntryComponent implements OnInit, OnDestroy {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-csv-entry-${nextUniqueId++}`;\n\n  /**\n   * Define the default number of rows\n   */\n  public defaultRowCount = 4;\n\n  /**\n   * Define the default number of columns\n   */\n  public defaultColumnCount = 2;\n\n  /**\n   * Define the default for the maximum allowed rows\n   */\n  public defaultMaxRows = 2000;\n\n  /**\n   * Expose the flexbox layout gap\n   */\n  public layoutGap: string = TS_SPACING.small[0];\n\n  /**\n   * Expose a validation message if too many rows are added\n   */\n  public tooManyRowsMessage: string | null = null;\n\n  /**\n   * Define the number of validation messages that can be shown at once\n   */\n  public maximumValidationMessages = 6;\n\n  /**\n   * Store records (rows)\n   */\n  public records: TsCSVEntryRecord[] = [];\n\n  /**\n   * Initialize the records form with an empty array\n   */\n  public recordsForm: FormGroup = this.formBuilder.group({\n    headers: this.formBuilder.array([]),\n    records: this.formBuilder.array([]),\n  });\n\n  /*\n   *public validationMessages: string[] | undefined;\n   */\n  public allErrors: {[key: string]: any}[] | null = null;\n\n  /**\n   * Get header cells as a form array\n   */\n  public get headerCells(): FormArray {\n    return this.recordsForm.get('headers') as FormArray;\n  }\n\n  /**\n   * Get rows as a form array\n   */\n  public get rows(): FormArray {\n    return this.recordsForm.get('records') as FormArray;\n  }\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  public set id(value: string) {\n    this._id = value || this._uid;\n  }\n  public get id(): string {\n    return this._id;\n  }\n  protected _id!: string;\n\n  /**\n   * Set the maximum number of allowed rows\n   */\n  @Input()\n  public set maxRows(value: number) {\n    this._maxRows = coerceNumberProperty(value, this.defaultMaxRows);\n  }\n  public get maxRows(): number {\n    return this._maxRows;\n  }\n  private _maxRows: number = this.defaultMaxRows;\n\n  /**\n   * Set the number of columns\n   */\n  @Input()\n  public set columnCount(value: number) {\n    this._columnCount = coerceNumberProperty(value, this.defaultColumnCount);\n  }\n  public get columnCount(): number {\n    return this._columnCount;\n  }\n  private _columnCount: number = this.defaultColumnCount;\n\n  /**\n   * Define the number of rows\n   */\n  @Input()\n  public set rowCount(value: number) {\n    this._rowCount = coerceNumberProperty(value, this.defaultRowCount);\n  }\n  public get rowCount(): number {\n    return this._rowCount;\n  }\n  private _rowCount: number = this.defaultRowCount;\n\n  /**\n   * Allow static headers to be set\n   */\n  @Input()\n  public set columnHeaders(value: string[] | undefined) {\n    this._columnHeaders = value;\n    this.clearHeaderCells();\n    this.addHeaders(this.columnCount, this.columnHeaders);\n  }\n  public get columnHeaders(): string[] | undefined {\n    return this._columnHeaders;\n  }\n  private _columnHeaders: string[] | undefined;\n\n  /**\n   * Define any column validators\n   */\n  @Input()\n  public set columnValidators(value: ValidatorFn | null[]) {\n    if (!value) {\n      return;\n    }\n\n    this._columnValidators = value;\n  }\n  public get columnValidators(): ValidatorFn | null[] {\n    return this._columnValidators;\n  }\n  private _columnValidators: ValidatorFn | null[] = [];\n\n  /**\n   * Emit the built file blob\n   */\n  @Output()\n  public blobGenerated: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private changeDetectorRef: ChangeDetectorRef,\n    private documentService: TsDocumentService,\n  ) {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Initialize empty rows\n   */\n  public ngOnInit(): void {\n    this.addRows(this.rowCount, this.columnCount);\n    this.addHeaders(this.columnCount, this.columnHeaders);\n\n    this.recordsForm.valueChanges.pipe(\n      // Let the form values 'settle' before we emit anything\n      debounceTime(1),\n      untilComponentDestroyed(this),\n    ).subscribe((v) => {\n      const blob = this.generateBlob(v);\n      this.blobGenerated.emit(blob);\n    });\n  }\n\n\n  /**\n   * Needed for `untilComponentDestroyed`\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Add rows to the form\n   *\n   * @param rowCount - The number of rows to add\n   * @param columnCount - The number of columns each row should have\n   * @param content - The column content\n   */\n  public addRows(rowCount = 1, columnCount: number = this.columnCount, content?: string[][], index?: number): void {\n    if ((this.rows.length + rowCount) > this.maxRows) {\n      const rowsThatDontFit = (rowCount === 1 ? 2 : rowCount) - ((this.rows.length + rowCount) - this.maxRows);\n      this.tooManyRowsMessage =\n        `Adding ${rowsThatDontFit} row${rowsThatDontFit > 1 ? 's' : ''} would exceed the maximum rows allowed (${this.maxRows}).`;\n      return;\n    }\n\n    if (this.tooManyRowsMessage) {\n      this.tooManyRowsMessage = null;\n    }\n\n    for (let i = 0; i = 0)) {\n        this.rows.insert(indexToInjectAt, createdRow);\n      } else {\n        this.rows.push(createdRow);\n      }\n    }\n  }\n\n\n  /**\n   * Get the columns of a row\n   *\n   * @param row - The row\n   * @return The array of columns\n   */\n  public getColumns(row: FormGroup): FormArray {\n    return row.get('columns') as FormArray;\n  }\n\n\n  /**\n   * Update the form control for recordId on each row according to index.\n   */\n  public updateAllRowIds(): void {\n    for (let i = 0; i  this.columnCount) {\n        const numberOfMissingColumns = pastedColumnCount - this.columnCount;\n        this.addColumnsToRows(this.rows, this.headerCells, numberOfMissingColumns);\n        this.columnCount = pastedColumnCount;\n      }\n      this.deleteRow(pastedRowId);\n      this.addRows(neededRows, content.rows.length, content.rows, pastedRowId);\n    }\n\n    this.updateAllRowIds();\n    this.allErrors = this.collectErrors();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Expose ability to trigger error updates from the DOM\n   */\n  public updateErrors(): void {\n    this.allErrors = this.collectErrors();\n  }\n\n\n  /**\n   * Helper to get the name (content) of a header cell for the title attribute\n   *\n   * @param index - The column index\n   * @return The header cell content\n   */\n  public getHeaderCellName(index: number): string {\n    if (!this.headerCells || !this.headerCells.controls[index]) {\n      return '';\n    }\n    return this.headerCells.controls[index].value;\n  }\n\n\n  /**\n   * Stop accidental page navigation when scrolling to the edges of the CSV form\n   *\n   * @param event - The scroll wheel event\n   */\n  public onScroll(event: WheelEvent): void {\n    if (!event) {\n      return;\n    }\n    const dir: string = (event.deltaX  {\n          return {\n            control: key,\n            // De-duplicate the errors array\n            [key]: errors[key].filter((el, i, arr) => arr.indexOf(el) === i),\n          };\n        });\n\n        return resultsArray;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Get all validation messages\n   *\n   * NOTE: Currently this only supports a custom error message for URL validation. Other messages can be added when the need arises.\n   * FIXME: Find a way to use the existing ValidationMessagesService\n   *\n   * @return The array of validation messages\n   */\n  public get validationMessages(): string[] | undefined {\n    if (!this.allErrors) {\n      return;\n    }\n    const messages: string[] = [];\n\n    for (const errorObj of this.allErrors) {\n      const name: string = errorObj.control;\n\n      for (const error of errorObj[name]) {\n        let message = '';\n        // The ID is zero-based\n        message += `Row ${error.rowId + 1}: `;\n        // istanbul ignore else\n        if (name === 'url') {\n          const maxItemLength = 20;\n          const errorItem = (error.actual.length > maxItemLength) ? error.actual.slice(0, maxItemLength) + '...' : error.actual;\n          message += `\"${errorItem}\" is not a valid URL.`;\n        }\n        // istanbul ignore else\n        if (name === 'required') {\n          message += `Content is required.`;\n        }\n        messages.push(message);\n      }\n    }\n\n    // If more messages than allowed exist, truncate the list with a message\n    if (messages.length > this.maximumValidationMessages) {\n      const count = messages.length - this.maximumValidationMessages;\n      messages.length = this.maximumValidationMessages;\n      messages.push(`and ${count} more errors...`);\n    }\n\n    return messages.length > 0 ? messages : undefined;\n  }\n\n\n  /**\n   * Delete a row\n   *\n   * @param index - The index of the row to delete\n   */\n  public deleteRow(index: number): void {\n    if (index === undefined || index === null || index  r.split('\\t'));\n    } else {\n      result.rows = rows.slice(0, rows.length).map((r) => r.split('\\t'));\n    }\n\n    return result;\n  }\n\n\n  /**\n   * Clear all rows\n   */\n  private clearAllRows(): void {\n    this.recordsForm.setControl('records', this.formBuilder.array([]));\n  }\n\n\n  /**\n   * Clear header cells\n   */\n  private clearHeaderCells(): void {\n    this.recordsForm.setControl('headers', this.formBuilder.array([]));\n  }\n\n\n  /**\n   * Add header content to the form\n   *\n   * @param headerCount - The number of header cells\n   * @param content - The cell's content\n   */\n  private addHeaders(headerCount: number, content?: string[]): void {\n    for (let i = 0; i  v.columns.join('\\t')).join('\\r\\n') + '\\r\\n';\n    const joined: string = prefix + headers + rows;\n    return new Blob([joined], {type: 'text/csv'});\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsCSVFormContents.html":{"url":"interfaces/TsCSVFormContents.html","title":"interface - TsCSVFormContents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsCSVFormContents\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/csv-entry/csv-entry.component.ts\n        \n\n            \n                Description\n            \n            \n                The structure for the form\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        headers\n                                \n                                \n                                        records\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        records\n                                    \n                                \n                                \n                                    \n                                        records:     TsCSVEntryRecord[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsCSVEntryRecord[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        csv-entry\n\n\n\n\nTable of Contents\n\nBasic usage\nColumn Count\nRow count\nMax rows\n\n\nColumn validation\nStatic Column Headers\n\n\nBasic usage\nThe most basic implementation only needs the HTML and a single method. Each time the CSV table is updated, a new File Blob is generated and\nemitted.\n\nmyFunc(blob: Blob) {\n  ...\n}Column Count\nControl the default column count via an Input:\n\n  \n\nNOTE: Column count does not restrict what is pasted into the table.\n\nRow count\nControl the default number of rows via an Input:\n\n  \n\nNOTE: Row count does not restrict what is pasted into the table.\n\nMax rows\nControl the maximum number of rows a table will allow\n\nIf the user attempts to paste or manually add more rows than are allowed, a validation message will appear below the table.\nColumn validation\n\nNOTE: Currently, custom validation messaging is only supported for the URL validator. More will be added as needs arise.\n\nPass in an array of validators matching the column count.\nmyValidators = [null, this.validatorsService.url(), null, null];\nThis example would add the URL validation to the second column only.\nStatic Column Headers\nIf there are certain headers that must be available, these can be set via an input:\n\nSetting static column headers will set the header cells to readonly. This will still allow keyboard navigation but will not allow the user\nto change the contents of the set header cells.\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  untilComponentDestroyed,\n  TsDocumentService,\n} from '@terminus/ngx-tools';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n} from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TS_SPACING } from './../spacing/spacing.constant';\n\n\n\n/**\n * The structure for an individual row\n */\nexport interface TsCSVEntryRecord {\n  recordId: number;\n  columns: (string | null)[];\n}\n\n/**\n * The structure for the form\n */\nexport interface TsCSVFormContents {\n  headers: string[];\n  records: TsCSVEntryRecord[];\n}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * This is the csv-entry UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-csv-entry`: The primary container\n * - `qa-csv-entry-info`: Container for row/column count\n * - `qa-csv-entry-row`: A row\n * - `qa-csv-entry-cell`: A body cell\n * - `qa-csv-entry-header-cell`: A header cell\n * - `qa-csv-entry-header-row`: Container for a header row\n * - `qa-csv-entry-delete`: A delete button\n * - `qa-csv-entry`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-csv-entry',\n  templateUrl: './csv-entry.component.html',\n  styleUrls: ['./csv-entry.component.scss'],\n  host: {\n    class: 'ts-csv-entry',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCSVEntry',\n})\nexport class TsCSVEntryComponent implements OnInit, OnDestroy {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-csv-entry-${nextUniqueId++}`;\n\n  /**\n   * Define the default number of rows\n   */\n  public defaultRowCount = 4;\n\n  /**\n   * Define the default number of columns\n   */\n  public defaultColumnCount = 2;\n\n  /**\n   * Define the default for the maximum allowed rows\n   */\n  public defaultMaxRows = 2000;\n\n  /**\n   * Expose the flexbox layout gap\n   */\n  public layoutGap: string = TS_SPACING.small[0];\n\n  /**\n   * Expose a validation message if too many rows are added\n   */\n  public tooManyRowsMessage: string | null = null;\n\n  /**\n   * Define the number of validation messages that can be shown at once\n   */\n  public maximumValidationMessages = 6;\n\n  /**\n   * Store records (rows)\n   */\n  public records: TsCSVEntryRecord[] = [];\n\n  /**\n   * Initialize the records form with an empty array\n   */\n  public recordsForm: FormGroup = this.formBuilder.group({\n    headers: this.formBuilder.array([]),\n    records: this.formBuilder.array([]),\n  });\n\n  /*\n   *public validationMessages: string[] | undefined;\n   */\n  public allErrors: {[key: string]: any}[] | null = null;\n\n  /**\n   * Get header cells as a form array\n   */\n  public get headerCells(): FormArray {\n    return this.recordsForm.get('headers') as FormArray;\n  }\n\n  /**\n   * Get rows as a form array\n   */\n  public get rows(): FormArray {\n    return this.recordsForm.get('records') as FormArray;\n  }\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  public set id(value: string) {\n    this._id = value || this._uid;\n  }\n  public get id(): string {\n    return this._id;\n  }\n  protected _id!: string;\n\n  /**\n   * Set the maximum number of allowed rows\n   */\n  @Input()\n  public set maxRows(value: number) {\n    this._maxRows = coerceNumberProperty(value, this.defaultMaxRows);\n  }\n  public get maxRows(): number {\n    return this._maxRows;\n  }\n  private _maxRows: number = this.defaultMaxRows;\n\n  /**\n   * Set the number of columns\n   */\n  @Input()\n  public set columnCount(value: number) {\n    this._columnCount = coerceNumberProperty(value, this.defaultColumnCount);\n  }\n  public get columnCount(): number {\n    return this._columnCount;\n  }\n  private _columnCount: number = this.defaultColumnCount;\n\n  /**\n   * Define the number of rows\n   */\n  @Input()\n  public set rowCount(value: number) {\n    this._rowCount = coerceNumberProperty(value, this.defaultRowCount);\n  }\n  public get rowCount(): number {\n    return this._rowCount;\n  }\n  private _rowCount: number = this.defaultRowCount;\n\n  /**\n   * Allow static headers to be set\n   */\n  @Input()\n  public set columnHeaders(value: string[] | undefined) {\n    this._columnHeaders = value;\n    this.clearHeaderCells();\n    this.addHeaders(this.columnCount, this.columnHeaders);\n  }\n  public get columnHeaders(): string[] | undefined {\n    return this._columnHeaders;\n  }\n  private _columnHeaders: string[] | undefined;\n\n  /**\n   * Define any column validators\n   */\n  @Input()\n  public set columnValidators(value: ValidatorFn | null[]) {\n    if (!value) {\n      return;\n    }\n\n    this._columnValidators = value;\n  }\n  public get columnValidators(): ValidatorFn | null[] {\n    return this._columnValidators;\n  }\n  private _columnValidators: ValidatorFn | null[] = [];\n\n  /**\n   * Emit the built file blob\n   */\n  @Output()\n  public blobGenerated: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private changeDetectorRef: ChangeDetectorRef,\n    private documentService: TsDocumentService,\n  ) {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Initialize empty rows\n   */\n  public ngOnInit(): void {\n    this.addRows(this.rowCount, this.columnCount);\n    this.addHeaders(this.columnCount, this.columnHeaders);\n\n    this.recordsForm.valueChanges.pipe(\n      // Let the form values 'settle' before we emit anything\n      debounceTime(1),\n      untilComponentDestroyed(this),\n    ).subscribe((v) => {\n      const blob = this.generateBlob(v);\n      this.blobGenerated.emit(blob);\n    });\n  }\n\n\n  /**\n   * Needed for `untilComponentDestroyed`\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Add rows to the form\n   *\n   * @param rowCount - The number of rows to add\n   * @param columnCount - The number of columns each row should have\n   * @param content - The column content\n   */\n  public addRows(rowCount = 1, columnCount: number = this.columnCount, content?: string[][], index?: number): void {\n    if ((this.rows.length + rowCount) > this.maxRows) {\n      const rowsThatDontFit = (rowCount === 1 ? 2 : rowCount) - ((this.rows.length + rowCount) - this.maxRows);\n      this.tooManyRowsMessage =\n        `Adding ${rowsThatDontFit} row${rowsThatDontFit > 1 ? 's' : ''} would exceed the maximum rows allowed (${this.maxRows}).`;\n      return;\n    }\n\n    if (this.tooManyRowsMessage) {\n      this.tooManyRowsMessage = null;\n    }\n\n    for (let i = 0; i = 0)) {\n        this.rows.insert(indexToInjectAt, createdRow);\n      } else {\n        this.rows.push(createdRow);\n      }\n    }\n  }\n\n\n  /**\n   * Get the columns of a row\n   *\n   * @param row - The row\n   * @return The array of columns\n   */\n  public getColumns(row: FormGroup): FormArray {\n    return row.get('columns') as FormArray;\n  }\n\n\n  /**\n   * Update the form control for recordId on each row according to index.\n   */\n  public updateAllRowIds(): void {\n    for (let i = 0; i  this.columnCount) {\n        const numberOfMissingColumns = pastedColumnCount - this.columnCount;\n        this.addColumnsToRows(this.rows, this.headerCells, numberOfMissingColumns);\n        this.columnCount = pastedColumnCount;\n      }\n      this.deleteRow(pastedRowId);\n      this.addRows(neededRows, content.rows.length, content.rows, pastedRowId);\n    }\n\n    this.updateAllRowIds();\n    this.allErrors = this.collectErrors();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Expose ability to trigger error updates from the DOM\n   */\n  public updateErrors(): void {\n    this.allErrors = this.collectErrors();\n  }\n\n\n  /**\n   * Helper to get the name (content) of a header cell for the title attribute\n   *\n   * @param index - The column index\n   * @return The header cell content\n   */\n  public getHeaderCellName(index: number): string {\n    if (!this.headerCells || !this.headerCells.controls[index]) {\n      return '';\n    }\n    return this.headerCells.controls[index].value;\n  }\n\n\n  /**\n   * Stop accidental page navigation when scrolling to the edges of the CSV form\n   *\n   * @param event - The scroll wheel event\n   */\n  public onScroll(event: WheelEvent): void {\n    if (!event) {\n      return;\n    }\n    const dir: string = (event.deltaX  {\n          return {\n            control: key,\n            // De-duplicate the errors array\n            [key]: errors[key].filter((el, i, arr) => arr.indexOf(el) === i),\n          };\n        });\n\n        return resultsArray;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Get all validation messages\n   *\n   * NOTE: Currently this only supports a custom error message for URL validation. Other messages can be added when the need arises.\n   * FIXME: Find a way to use the existing ValidationMessagesService\n   *\n   * @return The array of validation messages\n   */\n  public get validationMessages(): string[] | undefined {\n    if (!this.allErrors) {\n      return;\n    }\n    const messages: string[] = [];\n\n    for (const errorObj of this.allErrors) {\n      const name: string = errorObj.control;\n\n      for (const error of errorObj[name]) {\n        let message = '';\n        // The ID is zero-based\n        message += `Row ${error.rowId + 1}: `;\n        // istanbul ignore else\n        if (name === 'url') {\n          const maxItemLength = 20;\n          const errorItem = (error.actual.length > maxItemLength) ? error.actual.slice(0, maxItemLength) + '...' : error.actual;\n          message += `\"${errorItem}\" is not a valid URL.`;\n        }\n        // istanbul ignore else\n        if (name === 'required') {\n          message += `Content is required.`;\n        }\n        messages.push(message);\n      }\n    }\n\n    // If more messages than allowed exist, truncate the list with a message\n    if (messages.length > this.maximumValidationMessages) {\n      const count = messages.length - this.maximumValidationMessages;\n      messages.length = this.maximumValidationMessages;\n      messages.push(`and ${count} more errors...`);\n    }\n\n    return messages.length > 0 ? messages : undefined;\n  }\n\n\n  /**\n   * Delete a row\n   *\n   * @param index - The index of the row to delete\n   */\n  public deleteRow(index: number): void {\n    if (index === undefined || index === null || index  r.split('\\t'));\n    } else {\n      result.rows = rows.slice(0, rows.length).map((r) => r.split('\\t'));\n    }\n\n    return result;\n  }\n\n\n  /**\n   * Clear all rows\n   */\n  private clearAllRows(): void {\n    this.recordsForm.setControl('records', this.formBuilder.array([]));\n  }\n\n\n  /**\n   * Clear header cells\n   */\n  private clearHeaderCells(): void {\n    this.recordsForm.setControl('headers', this.formBuilder.array([]));\n  }\n\n\n  /**\n   * Add header content to the form\n   *\n   * @param headerCount - The number of header cells\n   * @param content - The cell's content\n   */\n  private addHeaders(headerCount: number, content?: string[]): void {\n    for (let i = 0; i  v.columns.join('\\t')).join('\\r\\n') + '\\r\\n';\n    const joined: string = prefix + headers + rows;\n    return new Blob([joined], {type: 'text/csv'});\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsCardComponent.html":{"url":"components/TsCardComponent.html","title":"component - TsCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsCardComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/card/card.component.ts\n\n\n    \n        Description\n    \n    \n        A presentational component to render a card\nQA CSS CLASSES\n\nqa-card: Placed on the primary element\nqa-card-lock: Placed on the lock icon for disabled cards\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    Here is my card!\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsCard\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-card\n            \n\n            \n                styleUrls\n                card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _border\n                            \n                            \n                                    Protected\n                                _id\n                            \n                            \n                                    Private\n                                _theme\n                            \n                            \n                                    Protected\n                                _uid\n                            \n                            \n                                    Public\n                                aspectRatioPadding\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aspectRatio\n                            \n                            \n                                border\n                            \n                            \n                                centeredContent\n                            \n                            \n                                disabled\n                            \n                            \n                                flat\n                            \n                            \n                                id\n                            \n                            \n                                supportsInteraction\n                            \n                            \n                                theme\n                            \n                            \n                                utilityMenuTemplate\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/card/card.component.ts:181\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aspectRatio\n                    \n                    \n                        Define if the card should conform to a fixed aspect ratio\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:92\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        border\n                    \n                    \n                        Define if a border should be present on the card. TsCardBorderOptions\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:104\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centeredContent\n                    \n                    \n                        Define if the card should center child content\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:120\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                    \n                        Define if the card is disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:126\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        flat\n                    \n                    \n                        Define if the card should not have a drop shadow\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:132\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                    \n                        Define an ID for the component\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:138\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        supportsInteraction\n                    \n                    \n                        Define if the card should support interaction (via hover)\nNOTE: This only alters style; not functionality\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:152\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the card theme\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:158\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        utilityMenuTemplate\n                    \n                    \n                        Allow a custom utility menu to be added\n\n                            \n                            Type:    TemplateRef | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:174\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _border\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _border:     TsCardBorderOptions\n\n                    \n                \n                    \n                        \n                            Type :     TsCardBorderOptions\n\n                        \n                    \n                    \n                        \n                            Default value : 'none'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : this._uid\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:144\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _theme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _theme:     TsStyleThemeTypes\n\n                    \n                \n                    \n                        \n                            Type :     TsStyleThemeTypes\n\n                        \n                    \n                    \n                        \n                            Default value : 'primary'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:168\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _uid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _uid:     \n\n                    \n                \n                    \n                        \n                            Default value : `ts-card-${nextUniqueId++}`\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:79\n                            \n                        \n\n                \n                    \n                        Define the default component ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            aspectRatioPadding\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        aspectRatioPadding:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:84\n                            \n                        \n\n                \n                    \n                        Expose the aspect ratio as a percentage\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        aspectRatio\n                    \n                \n\n\n                \n                    \n                        setaspectRatio(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:92\n                                \n                            \n                    \n                        \n                                Define if the card should conform to a fixed aspect ratio\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                            \n                                                                    \nThe aspect ratio. See {\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        border\n                    \n                \n\n                \n                    \n                        getborder()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:111\n                                \n                            \n\n                \n                    \n                        setborder(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:104\n                                \n                            \n                    \n                        \n                                Define if a border should be present on the card. TsCardBorderOptions\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:141\n                                \n                            \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:138\n                                \n                            \n                    \n                        \n                                Define an ID for the component\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n\n                \n                    \n                        gettheme()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:165\n                                \n                            \n\n                \n                    \n                        settheme(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:158\n                                \n                            \n                    \n                        \n                                Define the card theme\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        borderClass\n                    \n                \n\n                \n                    \n                        getborderClass()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:179\n                                \n                            \n                    \n                        \n                                Getter to return a border class if the border is set\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n    \n        \n\nTable of Contents\n\nBasic usage\nInteractivity\nCentered content\nAspect ratio\nUtility menu\nCard with a Title\nDisabled Card\n\n\nBasic usage\nWrap the card component around your content:\n\n  Here is my content!\nInteractivity\nTo make the card feel interactive, pass true to the supportsInteraction input.\n\n  Now my card responds to hover and click!\nCentered content\nTo center the content, pass true to the centeredContent input.\n\n  Now my content is centered!\nAspect ratio\nPass your desired aspect ratio in the format 3:4 to the aspectRatio input.\n\n  Here is a card with a fixed aspect ratio!\n\nType: TsAspectRatioTypes.\nAllowed ratios: 16:9, 4:3, 3:2, 5:4, 1:1,\n\nUtility menu\nTo include a utility menu, pass a template which includes the menu trigger and the menu contents.\n\n\n  Here is a card with a utility menu!\n\n\n\n  \n  \n  \n\n\n  \n  \n    \n      My link\n    \n  \nCard with a Title\nAttach the tsCardTitle directive to your title element. This directive simply adds a class to the\nelement which provides the needed styles.\n\n  My Title\nDisabled Card\nThis will push the opacity of the card contents back and add a lock icon in the top right corner.\n\n  My card\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  TemplateRef,\n  ElementRef,\n} from '@angular/core';\nimport { TsStyleThemeTypes } from '../utilities/types/style-theme.types';\n\n\n/**\n * Define the allowed aspect ratios. Used in {@link TsCardComponent}\n */\nexport type TsAspectRatioTypes\n  = '16:9'\n  | '4:3'\n  | '3:2'\n  | '5:4'\n  | '1:1'\n;\n\n\n/**\n * Define allowed border sides. Used in {@link TsCardComponent}. Border color determined by the theme.\n */\nexport type TsCardBorderOptions\n  = 'none'\n  | 'left'\n  | 'right'\n  | 'top'\n  | 'bottom'\n;\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * A presentational component to render a card\n *\n * #### QA CSS CLASSES\n * - `qa-card`: Placed on the primary element\n * - `qa-card-lock`: Placed on the lock icon for disabled cards\n *\n * @example\n * Here is my card!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n  host: {\n    class: 'ts-card',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCard',\n})\nexport class TsCardComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-card-${nextUniqueId++}`;\n\n  /**\n   * Expose the aspect ratio as a percentage\n   */\n  public aspectRatioPadding!: string;\n\n  /**\n   * Define if the card should conform to a fixed aspect ratio\n   *\n   * @param value - The aspect ratio. See {@link TsAspectRatioTypes} for possible values.\n   */\n  @Input()\n  public set aspectRatio(value: TsAspectRatioTypes) {\n    const x: number = parseInt(value.split(':')[0], 10);\n    const y: number = parseInt(value.split(':')[1], 10);\n    const percentage: number = ((y / x) * 100);\n\n    this.aspectRatioPadding = `${percentage.toFixed(2)}%`;\n  }\n\n  /**\n   * Define if a border should be present on the card. {@link TsCardBorderOptions}\n   */\n  @Input()\n  public set border(value: TsCardBorderOptions) {\n    if (!value) {\n      return;\n    }\n\n    this._border = value;\n  }\n  public get border(): TsCardBorderOptions {\n    return this._border;\n  }\n  private _border: TsCardBorderOptions = 'none';\n\n  /**\n   * Define if the card should center child content\n   */\n  @Input()\n  public centeredContent: boolean = false;\n\n  /**\n   * Define if the card is disabled\n   */\n  @Input()\n  public disabled: boolean = false;\n\n  /**\n   * Define if the card should not have a drop shadow\n   */\n  @Input()\n  public flat: boolean = false;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the card should support interaction (via hover)\n   *\n   * NOTE: This only alters style; not functionality\n   */\n  @Input()\n  public supportsInteraction: boolean = false;\n\n  /**\n   * Define the card theme\n   */\n  @Input()\n  public set theme(value: TsStyleThemeTypes) {\n    if (!value) {\n      return;\n    }\n\n    this._theme = value;\n  }\n  public get theme(): TsStyleThemeTypes {\n    return this._theme;\n  }\n  private _theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Allow a custom utility menu to be added\n   */\n  @Input()\n  public utilityMenuTemplate: TemplateRef | undefined;\n\n  /**\n   * Getter to return a border class if the border is set\n   */\n  public get borderClass(): string {\n    return (!this.border || this.border === 'none') ? '' : `c-card--border-${this.border}` ;\n  }\n\n\n  constructor() {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n  lock_outline\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            lock_outline'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsCardModule.html":{"url":"modules/TsCardModule.html","title":"module - TsCardModule","body":"\n                   \n\n\n\n\n  Modules\n  TsCardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsCardModule\n\n\n\ncluster_TsCardModule_declarations\n\n\n\ncluster_TsCardModule_imports\n\n\n\ncluster_TsCardModule_exports\n\n\n\n\nTsCardComponent\n\nTsCardComponent\n\n\n\nTsCardModule\n\nTsCardModule\n\nTsCardModule -->\n\nTsCardComponent->TsCardModule\n\n\n\n\n\nTsCardTitleDirective\n\nTsCardTitleDirective\n\nTsCardModule -->\n\nTsCardTitleDirective->TsCardModule\n\n\n\n\n\nTsCardComponent \n\nTsCardComponent \n\nTsCardComponent  -->\n\nTsCardModule->TsCardComponent \n\n\n\n\n\nTsCardTitleDirective \n\nTsCardTitleDirective \n\nTsCardTitleDirective  -->\n\nTsCardModule->TsCardTitleDirective \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsCardModule -->\n\nTsIconModule->TsCardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/card/card.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCardComponent\n                            \n                            \n                                TsCardTitleDirective\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCardComponent\n                            \n                            \n                                    TsCardTitleDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsCardComponent } from './card.component';\nimport { TsCardTitleDirective } from './card-title.directive';\n\nexport * from './card.component';\nexport * from './card-title.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRippleModule,\n    TsIconModule,\n  ],\n  declarations: [\n    TsCardComponent,\n    TsCardTitleDirective,\n  ],\n  exports: [\n    TsCardComponent,\n    TsCardTitleDirective,\n  ],\n})\nexport class TsCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsCardTitleDirective.html":{"url":"directives/TsCardTitleDirective.html","title":"directive - TsCardTitleDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsCardTitleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/card/card-title.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsCardTitle]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkParent\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: TsCardComponent)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/card/card-title.directive.ts:27\n                            \n                        \n\n                \n                    \n                            Verify the directive is nested within a TsCardComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    TsCardComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     \n\n                    \n                \n                    \n                        \n                            Default value : 'c-card__title'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card-title.directive.ts:27\n                            \n                        \n\n                \n                    \n                        Set the card title class\n\n                    \n                \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkParent\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckParent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/card/card-title.directive.ts:50\n                            \n                        \n\n\n                \n                    \n                            Verify the directive is nested inside of a TsCardComponent\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/card/card-title.directive.ts:42\n                            \n                        \n\n\n                \n                    \n                            Verify correct nesting on all changes\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _parent:     TsCardComponent\n\n                    \n                \n                    \n                        \n                            Type :     TsCardComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card-title.directive.ts:21\n                            \n                        \n\n                \n                    \n                        Store a reference to the parent component\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  HostBinding,\n  Optional,\n  Host,\n  SkipSelf,\n  OnChanges,\n  isDevMode,\n} from '@angular/core';\n\nimport { TsCardComponent } from './card.component';\n\n\n@Directive({\n  selector: '[tsCardTitle]',\n})\nexport class TsCardTitleDirective implements OnChanges {\n  /**\n   * Store a reference to the parent component\n   */\n  private _parent: TsCardComponent;\n\n  /**\n   * Set the card title class\n   */\n  @HostBinding('class')\n  tsCardTitle = 'c-card__title';\n\n  /**\n   * Verify the directive is nested within a {@link TsCardComponent}\n   */\n  constructor(\n    @Optional() @Host() @SkipSelf() parent: TsCardComponent,\n  ) {\n    this._parent = parent;\n  }\n\n\n  /**\n   * Verify correct nesting on all changes\n   */\n  ngOnChanges() {\n    this.checkParent();\n  }\n\n\n  /**\n   * Verify the directive is nested inside of a {@link TsCardComponent}\n   */\n  checkParent() {\n    // istanbul ignore else\n    if (!(this._parent instanceof TsCardComponent) && isDevMode()) {\n      throw Error(`The 'tsCardTitle' directive must be inside a  component.`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsCellDefDirective.html":{"url":"directives/TsCellDefDirective.html","title":"directive - TsCellDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsCellDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Cell definition for the TsTableComponent.\nCaptures the template of a column's data row cell as well as cell-specific properties.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsCellDef]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsCellDirective.html":{"url":"directives/TsCellDirective.html","title":"directive - TsCellDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsCellDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Cell template container that adds the right classes and role.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ts-cell\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(columnDef: CdkColumnDef, elementRef: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/table/cell.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        columnDef\n                                                  \n                                                        \n                                                                    CdkColumnDef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            renderer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderer:     Renderer\n\n                    \n                \n                    \n                        \n                            Type :     Renderer\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/cell.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsChartComponent.html":{"url":"components/TsChartComponent.html","title":"component - TsChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsChartComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/chart/chart.component.ts\n\n\n    \n        Description\n    \n    \n        This is the chart UI Component\nFIXME: Once amCharts v4 is TypeScript scrict complient, we should set the tsconfig.skipLibCheck to true.\nQA CSS CLASSES\n\nqa-chart: Placed on the primary container\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                OnDestroy\n    \n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsChart\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-chart\n            \n\n            \n                styleUrls\n                chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chart.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _visualization\n                            \n                            \n                                    Private\n                                amCharts\n                            \n                            \n                                    Public\n                                chart\n                            \n                            \n                                    Private\n                                chartDiv\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroyChart\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visualization\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                chartInitialized\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, amChartsService: TsAmChartsService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/chart/chart.component.ts:102\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        amChartsService\n                                                  \n                                                        \n                                                                    TsAmChartsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visualization\n                    \n                    \n                        Define the chart visualization format (bar, line, etc)\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:86\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        chartInitialized\n                    \n                    \n                        Emit an event containing the chart each time it is initialized\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:102\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroyChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        destroyChart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:155\n                            \n                        \n\n\n                \n                    \n                            Destroy the chart\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init(type: TsChartVisualizationOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:168\n                            \n                        \n\n\n                \n                    \n                            Initialize a chart\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    TsChartVisualizationOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:135\n                            \n                        \n\n\n                \n                    \n                            Re-initialize the chart if the visualization type has changed\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:147\n                            \n                        \n\n\n                \n                    \n                            Destroy the chart when the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Initialize the chart if amCharts exists\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _visualization\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _visualization:     TsChartVisualizationOptions\n\n                    \n                \n                    \n                        \n                            Type :     TsChartVisualizationOptions\n\n                        \n                    \n                    \n                        \n                            Default value : 'xy'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            amCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        amCharts:     TsAmChartsToken\n\n                    \n                \n                    \n                        \n                            Type :     TsAmChartsToken\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:72\n                            \n                        \n\n                \n                    \n                        Save a reference to the underlying amCharts library\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:67\n                            \n                        \n\n                \n                    \n                        Store the initialized chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            chartDiv\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartDiv:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:78\n                            \n                        \n\n                \n                    \n                        Get access to the chart container\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        visualization\n                    \n                \n\n                \n                    \n                        getvisualization()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/chart/chart.component.ts:93\n                                \n                            \n\n                \n                    \n                        setvisualization(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/chart/chart.component.ts:86\n                                \n                            \n                    \n                        \n                                Define the chart visualization format (bar, line, etc)\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                            \n                                                                    \nThe visualization type. {\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        TsChart\n\n\n\n\nTable of Contents\n\nBasic usage\nInject the needed libraries\nSet up the chart\n\n\nSupported chart types\nAmCharts documentation\n\n\nBasic usage\nInject the needed libraries\n\nNote:  Since the end-user of this library is the one with the actual license to use AmCharts, we let the consumer pass in the library.\n\nCreate a factory function to inject the needed libraries:\nimport { TS_AMCHARTS_TOKEN, TsAmChartsToken } from '@terminus/ui';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport am4themes_material from '@amcharts/amcharts4/themes/animated';\n\n// `core` and `charts` are always required.\n// `maps` is required if using any map visualizations.\nexport function amChartsFactory(): TsAmChartsToken {\n  return {\n    core: am4core,\n    charts: am4charts,\n    maps: am4maps,\n    themes: [am4themes_animated, am4themes_material],\n  };\n}\n\n@NgModule({\n  ...\n  providers: [\n    // Use the factory function to overwrite the `TS_AMCHARTS_TOKEN` injectable:\n    {\n      provide: TS_AMCHARTS_TOKEN,\n      useFactory: amChartsFactory,\n    },\n  ],\n  ...\nNOTE: Themes will be applied in the order they are provided.\n\nSet up the chart\nAdd the component and set up access to the generated chart:\n\nsetUpChart(chart: am4charts.Chart) {\n  // Add axis' and series' etc...\n}\nSee the demo app for concrete examples of the supported chart types.\n\nSupported chart types\n\nxy\npie\nmap\nradar\ntreemap\nsankey\nchord\n\n\nSee TsChartVisualizationOptions for all supported types.\n\nAmCharts documentation\nSee https://www.amcharts.com/docs/v4/ for full documentation.\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n  isDevMode,\n} from '@angular/core';\nimport { inputHasChanged } from '@terminus/ngx-tools';\n\nimport { TsAmChartsService, TsAmChartsToken } from './amcharts.service';\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'pie'\n  | 'xy'\n  | 'map'\n  | 'radar'\n  | 'treemap'\n  | 'sankey'\n  | 'chord'\n;\n\n\n/**\n * This is the chart UI Component\n *\n * FIXME: Once amCharts v4 is TypeScript scrict complient, we should set the `tsconfig.skipLibCheck` to true.\n *\n * #### QA CSS CLASSES\n * - `qa-chart`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.scss'],\n  host: {\n    class: 'ts-chart',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsChart',\n})\nexport class TsChartComponent implements OnInit, OnChanges, OnDestroy {\n  /**\n   * Store the initialized chart\n   */\n  public chart: any;\n\n  /**\n   * Save a reference to the underlying amCharts library\n   */\n  private amCharts: TsAmChartsToken;\n\n  /**\n   * Get access to the chart container\n   */\n  @ViewChild('chartDiv')\n  private chartDiv!: ElementRef;\n\n  /**\n   * Define the chart visualization format (bar, line, etc)\n   *\n   * @param value - The visualization type. {@link TsChartVisualizationOptions}\n   */\n  @Input()\n  public set visualization(value: TsChartVisualizationOptions) {\n    if (!value) {\n      return;\n    }\n\n    this._visualization = value;\n  }\n  public get visualization(): TsChartVisualizationOptions {\n    return this._visualization;\n  }\n  private _visualization: TsChartVisualizationOptions = 'xy';\n\n  /**\n   * Emit an event containing the chart each time it is initialized\n   */\n  @Output()\n  public chartInitialized: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private zone: NgZone,\n    private amChartsService: TsAmChartsService,\n  ) {\n    this.amCharts = this.amChartsService.amCharts;\n  }\n\n\n  /**\n   * Initialize the chart if amCharts exists\n   */\n  public ngOnInit(): void {\n    // Don't initialize a chart if the Highcharts library wasn't passed in.\n    if (this.amCharts) {\n      this.init(this.visualization);\n      // istanbul ignore else\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        console.error(\n          'TsChartComponent: The amCharts library was not provided via injection token!',\n        );\n      }\n    }\n  }\n\n\n  /**\n   * Re-initialize the chart if the visualization type has changed\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    // istanbul ignore else\n    if (inputHasChanged(changes, 'visualization')) {\n      this.destroyChart();\n      this.init(this.visualization);\n    }\n  }\n\n\n  /**\n   * Destroy the chart when the component is destroyed\n   */\n  public ngOnDestroy(): void {\n    this.destroyChart();\n  }\n\n\n  /**\n   * Destroy the chart\n   */\n  private destroyChart(): void {\n    this.zone.runOutsideAngular(() => {\n      // istanbul ignore else\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n\n\n  /**\n   * Initialize a chart\n   */\n  private init(type: TsChartVisualizationOptions): void {\n    this.zone.runOutsideAngular(() => {\n      // Create the appropriate chart using a chained ternary\n      const chart: any =\n        type === 'xy'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.XYChart)\n        : type === 'pie'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.PieChart)\n        : type === 'map'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.maps.MapChart)\n        : type === 'radar'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.RadarChart)\n        : type === 'treemap'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.TreeMap)\n        : type === 'sankey'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.SankeyDiagram)\n        : type === 'chord'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.ChordDiagram)\n        : undefined\n      ;\n\n      if (chart) {\n        chart.responsive.enabled = true;\n        this.chart = chart;\n        this.chartInitialized.emit(chart);\n      } else {\n        console.error(`TsChartComponent: ${this.visualization} is not a supported chart type. See TsChartVisualizationOptions.`);\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsChartModule.html":{"url":"modules/TsChartModule.html","title":"module - TsChartModule","body":"\n                   \n\n\n\n\n  Modules\n  TsChartModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsChartModule\n\n\n\ncluster_TsChartModule_declarations\n\n\n\ncluster_TsChartModule_exports\n\n\n\ncluster_TsChartModule_providers\n\n\n\n\nTsChartComponent\n\nTsChartComponent\n\n\n\nTsChartModule\n\nTsChartModule\n\nTsChartModule -->\n\nTsChartComponent->TsChartModule\n\n\n\n\n\nTsChartComponent \n\nTsChartComponent \n\nTsChartComponent  -->\n\nTsChartModule->TsChartComponent \n\n\n\n\n\nTsAmChartsService\n\nTsAmChartsService\n\nTsChartModule -->\n\nTsAmChartsService->TsChartModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/chart/chart.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsChartComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsAmChartsService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsChartComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsChartComponent } from './chart.component';\nimport { TsAmChartsService, TS_AMCHARTS_TOKEN } from './amcharts.service';\n\nexport * from './chart.component';\nexport { TsAmChartsToken } from './amcharts.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    TsAmChartsService,\n    {\n      // This injection token will be overriden by the user.\n      // It will provide the amCharts core library and chart library\n      provide: TS_AMCHARTS_TOKEN,\n      useValue: null,\n    },\n  ],\n  declarations: [\n    TsChartComponent,\n  ],\n  exports: [\n    TsChartComponent,\n  ],\n})\nexport class TsChartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsCheckboxChange.html":{"url":"classes/TsCheckboxChange.html","title":"class - TsCheckboxChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsCheckboxChange\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/checkbox/checkbox.component.ts\n        \n\n            \n                Description\n            \n            \n                Expose the MatCheckboxChange event as TsCheckboxChange. Used by TsCheckboxComponent\n\n            \n\n            \n                Extends\n            \n            \n                    MatCheckboxChange\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n\nTable of Contents\n\nBasic usage\nReactive Forms\nngModel\nisChecked\n\n\nBasic usage\nWrap your label text inside the component:\n\n  My checkbox label\nReactive Forms\nTo use the checkbox with a reactive form, pass the formControl to the checkbox:\n\n  I will be checked if `myControl.value` is true.\nngModel\nTo use the checkbox with Angular's ngModel, just attach the directive to the checkbox:\n\n  I will be checked if `myValue` is true.\nisChecked\nTo seed the initial checked state use the isChecked property:\n\n  I will be checked by default!\n\nNOTE: This should rarely be used (if ever). We should be relying on a Reactive Form or ngModel.\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n} from '@angular/core';\nimport {\n  MatCheckbox,\n  MatCheckboxChange,\n} from '@angular/material/checkbox';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Expose the MatCheckboxChange event as TsCheckboxChange. Used by {@link TsCheckboxComponent}\n */\nexport class TsCheckboxChange extends MatCheckboxChange {}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsCheckboxComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the checkbox UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-checkbox`: The checkbox input element\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  host: {\n    class: 'ts-checkbox',\n  },\n  providers: [CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCheckbox',\n})\nexport class TsCheckboxComponent extends TsReactiveFormBaseComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-checkbox-${nextUniqueId++}`;\n\n  /**\n   * Provide access to the MatCheckboxComponent\n   */\n  @ViewChild(MatCheckbox)\n  checkbox!: MatCheckbox;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Toggle the underlying checkbox if the isChecked property changes\n   */\n  @Input()\n  public set isChecked(v: boolean) {\n    this._isChecked = coerceBooleanProperty(v);\n    this.value = this._isChecked;\n    this.checkbox.checked = this._isChecked;\n    this.changeDetectorRef.detectChanges();\n  }\n  public get isChecked(): boolean {\n    return this._isChecked;\n  }\n  private _isChecked: boolean = false;\n\n  /**\n   * Define if the checkbox is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the checkbox should be indeterminate\n   */\n  @Input()\n  public isIndeterminate: boolean = false;\n\n  /**\n   * Define if the checkbox is required\n   */\n  @Input()\n  public isRequired: boolean = false;\n\n  /**\n   * Toggle the underlying checkbox if the ngModel changes\n   */\n  @Input()\n  public set ngModel(v: boolean) {\n    this._isChecked = v;\n  }\n\n  /**\n   * Define the tabindex\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit an event on input change\n   */\n  @Output()\n  public inputChange: EventEmitter = new EventEmitter;\n\n  /**\n   * Emit a change when moving from the indeterminate state\n   */\n  @Output()\n  public indeterminateChange: EventEmitter = new EventEmitter;\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsCheckboxComponent.html":{"url":"components/TsCheckboxComponent.html","title":"component - TsCheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsCheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        This is the checkbox UI Component\nQA CSS CLASSES\n\nqa-checkbox: The checkbox input element\n\n\n    \n\n    \n        Extends\n    \n    \n            TsReactiveFormBaseComponent\n    \n\n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsCheckbox\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n            \n                providers\n                \n                            CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                ts-checkbox\n            \n\n            \n                styleUrls\n                checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _id\n                            \n                            \n                                    Private\n                                _isChecked\n                            \n                            \n                                    Protected\n                                _uid\n                            \n                            \n                                checkbox\n                            \n                            \n                                    Protected\n                                innerValue\n                            \n                            \n                                    Protected\n                                onChangeCallback\n                            \n                            \n                                    Protected\n                                onTouchedCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onBlur\n                            \n                            \n                                    Protected\n                                registerOnChange\n                            \n                            \n                                    Protected\n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                isChecked\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isIndeterminate\n                            \n                            \n                                isRequired\n                            \n                            \n                                ngModel\n                            \n                            \n                                tabIndex\n                            \n                            \n                                theme\n                            \n                            \n                                formControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                indeterminateChange\n                            \n                            \n                                inputChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/checkbox/checkbox.component.ts:166\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                    \n                        Define an ID for the component\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:95\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isChecked\n                    \n                    \n                        Toggle the underlying checkbox if the isChecked property changes\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:107\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the checkbox is disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:122\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isIndeterminate\n                    \n                    \n                        Define if the checkbox should be indeterminate\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:128\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                    \n                        Define if the checkbox is required\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:134\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ngModel\n                    \n                    \n                        Toggle the underlying checkbox if the ngModel changes\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:140\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                    \n                        Define the tabindex\n\n                            \n                            Type:    number\n\n                            \n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:148\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:154\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        Define the form control to get access to validators\n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        indeterminateChange\n                    \n                    \n                        Emit a change when moving from the indeterminate state\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:166\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputChange\n                    \n                    \n                        Emit an event on input change\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:160\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onBlur\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onBlur()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:61\n                            \n                        \n\n\n                \n                    \n                            Set touched on blur\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:69\n                            \n                        \n\n\n                \n                    \n                            Register onChange callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:77\n                            \n                        \n\n\n                \n                    \n                            Register onTouched callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:85\n                            \n                        \n\n\n                \n                    \n                            Write value to inner value (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : this._uid\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _isChecked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _isChecked:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _uid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _uid:     \n\n                    \n                \n                    \n                        \n                            Default value : `ts-checkbox-${nextUniqueId++}`\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:83\n                            \n                        \n\n                \n                    \n                        Define the default component ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkbox:     MatCheckbox\n\n                    \n                \n                    \n                        \n                            Type :     MatCheckbox\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:89\n                            \n                        \n\n                \n                    \n                        Provide access to the MatCheckboxComponent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            innerValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        innerValue:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:26\n                            \n                        \n\n                \n                    \n                        Define the internal data model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onChangeCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onChangeCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:31\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onTouchedCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onTouchedCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:36\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:98\n                                \n                            \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:95\n                                \n                            \n                    \n                        \n                                Define an ID for the component\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isChecked\n                    \n                \n\n                \n                    \n                        getisChecked()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:113\n                                \n                            \n\n                \n                    \n                        setisChecked(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:107\n                                \n                            \n                    \n                        \n                                Toggle the underlying checkbox if the isChecked property changes\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        ngModel\n                    \n                \n\n\n                \n                    \n                        setngModel(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:140\n                                \n                            \n                    \n                        \n                                Toggle the underlying checkbox if the ngModel changes\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        \n\nTable of Contents\n\nBasic usage\nReactive Forms\nngModel\nisChecked\n\n\nBasic usage\nWrap your label text inside the component:\n\n  My checkbox label\nReactive Forms\nTo use the checkbox with a reactive form, pass the formControl to the checkbox:\n\n  I will be checked if `myControl.value` is true.\nngModel\nTo use the checkbox with Angular's ngModel, just attach the directive to the checkbox:\n\n  I will be checked if `myValue` is true.\nisChecked\nTo seed the initial checked state use the isChecked property:\n\n  I will be checked by default!\n\nNOTE: This should rarely be used (if ever). We should be relying on a Reactive Form or ngModel.\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n} from '@angular/core';\nimport {\n  MatCheckbox,\n  MatCheckboxChange,\n} from '@angular/material/checkbox';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Expose the MatCheckboxChange event as TsCheckboxChange. Used by {@link TsCheckboxComponent}\n */\nexport class TsCheckboxChange extends MatCheckboxChange {}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsCheckboxComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the checkbox UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-checkbox`: The checkbox input element\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  host: {\n    class: 'ts-checkbox',\n  },\n  providers: [CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCheckbox',\n})\nexport class TsCheckboxComponent extends TsReactiveFormBaseComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-checkbox-${nextUniqueId++}`;\n\n  /**\n   * Provide access to the MatCheckboxComponent\n   */\n  @ViewChild(MatCheckbox)\n  checkbox!: MatCheckbox;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Toggle the underlying checkbox if the isChecked property changes\n   */\n  @Input()\n  public set isChecked(v: boolean) {\n    this._isChecked = coerceBooleanProperty(v);\n    this.value = this._isChecked;\n    this.checkbox.checked = this._isChecked;\n    this.changeDetectorRef.detectChanges();\n  }\n  public get isChecked(): boolean {\n    return this._isChecked;\n  }\n  private _isChecked: boolean = false;\n\n  /**\n   * Define if the checkbox is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the checkbox should be indeterminate\n   */\n  @Input()\n  public isIndeterminate: boolean = false;\n\n  /**\n   * Define if the checkbox is required\n   */\n  @Input()\n  public isRequired: boolean = false;\n\n  /**\n   * Toggle the underlying checkbox if the ngModel changes\n   */\n  @Input()\n  public set ngModel(v: boolean) {\n    this._isChecked = v;\n  }\n\n  /**\n   * Define the tabindex\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit an event on input change\n   */\n  @Output()\n  public inputChange: EventEmitter = new EventEmitter;\n\n  /**\n   * Emit a change when moving from the indeterminate state\n   */\n  @Output()\n  public indeterminateChange: EventEmitter = new EventEmitter;\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsCheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsCheckboxModule.html":{"url":"modules/TsCheckboxModule.html","title":"module - TsCheckboxModule","body":"\n                   \n\n\n\n\n  Modules\n  TsCheckboxModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsCheckboxModule\n\n\n\ncluster_TsCheckboxModule_declarations\n\n\n\ncluster_TsCheckboxModule_TsCheckboxComponent_providers\n\n\n\ncluster_TsCheckboxModule_exports\n\n\n\n\nTsCheckboxComponent\n\nTsCheckboxComponent\n\n\n\nTsCheckboxModule\n\nTsCheckboxModule\n\nTsCheckboxModule -->\n\nTsCheckboxComponent->TsCheckboxModule\n\n\n\n\n\nTsCheckboxComponent \n\nTsCheckboxComponent \n\nTsCheckboxComponent  -->\n\nTsCheckboxModule->TsCheckboxComponent \n\n\n\n\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n\nTsCheckboxComponent -->\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR->TsCheckboxComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/checkbox/checkbox.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCheckboxComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCheckboxComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { TsCheckboxComponent } from './checkbox.component';\n\nexport * from './checkbox.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatCheckboxModule,\n  ],\n  exports: [\n    TsCheckboxComponent,\n  ],\n  declarations: [\n    TsCheckboxComponent,\n  ],\n})\nexport class TsCheckboxModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsColumnDefDirective.html":{"url":"directives/TsColumnDefDirective.html","title":"directive - TsColumnDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsColumnDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Column definition for the TsTableComponent.\nDefines a set of cells available for a table column.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsColumnDef]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                minWidth\n                            \n                            \n                                noWrap\n                            \n                            \n                                tsColumnDef\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        minWidth\n                    \n                    \n                        Define a minimum width for the column\n\n                            \n                            Type:    string | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/table/cell.ts:129\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        noWrap\n                    \n                    \n                        Define if a column's contents should wrap when long\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/table/cell.ts:123\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tsColumnDef\n                    \n                    \n                        Define a unique name for this column\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/table/cell.ts:116\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsConfirmationDirective.html":{"url":"directives/TsConfirmationDirective.html","title":"directive - TsConfirmationDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsConfirmationDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/confirmation/confirmation.directive.ts\n        \n\n            \n                Description\n            \n            \n                A directive to inject a confirmation step into any button\n\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n                        OnInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \nClick me!\n\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsConfirmation]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modalInstance\n                            \n                            \n                                    Private\n                                overlayRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createOverlay\n                            \n                            \n                                    Private\n                                dismissOverlay\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelled\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, overlay: Overlay, host: TsButtonComponent, changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/confirmation/confirmation.directive.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    TsButtonComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelled\n                    \n                    \n                        An event emitted when the confirmation is cancelled\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:57\n                            \n                        \n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick(event: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:74\n                            \n                        \n\n\n                \n                    \n                            Spawn the confirmation overlay on click\n\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:99\n                            \n                        \n\n\n                \n                    \n                            Create and attach the confirmation overlay\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dismissOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dismissOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:155\n                            \n                        \n\n\n                \n                    \n                            Dismiss the overlay\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:90\n                            \n                        \n\n\n                \n                    \n                            Dismiss the overlay and clean up observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:82\n                            \n                        \n\n\n                \n                    \n                            Set a flag in the TsButtonComponent to intercept the click\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modalInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalInstance:     TsConfirmationModalComponent\n\n                    \n                \n                    \n                        \n                            Type :     TsConfirmationModalComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:46\n                            \n                        \n\n                \n                    \n                        Store a reference to the created confirmation modal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            overlayRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        overlayRef:     OverlayRef | null\n\n                    \n                \n                    \n                        \n                            Type :     OverlayRef | null\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:51\n                            \n                        \n\n                \n                    \n                        Store a reference to the modal overlay\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        Confirmation\n\nThis directive can be attached to any  to enable a confirmation step before triggering\nthe button's action.\nBasic flow:\n\nThe user clicks the button\nA pop-up appears asking user to cancel or confirm\nIf the user clicks 'confirm', the original ts-button click event is emitted\nIf the user clicks 'cancel' the pop-up is closed\n\n\n\nTable of Contents\n\nBasic usage\nCancelled event\n\n\nBasic usage\nAdd the directive to any ts-button:\n\n  Click me!\nCancelled event\nThis directive exposes a new event that can be used to determine when a user has chosen 'cancel'\nfrom the confirmation pop-up.\n\n  Click me!\n\n    \n\n    \n        import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  ConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n} from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ESCAPE } from '@terminus/ngx-tools/keycodes';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { untilComponentDestroyed } from '@terminus/ngx-tools';\nimport { filter, merge } from 'rxjs/operators';\n\nimport { TsConfirmationModalComponent } from './confirmation-modal.component';\nimport { TsButtonComponent } from './../button/button.component';\n\n\n/**\n * A directive to inject a confirmation step into any button\n *\n * @example\n *         \n *           Click me!\n *         \n */\n@Directive({\n  selector: '[tsConfirmation]',\n  host: {\n    class: 'ts-confirmation',\n  },\n  exportAs: 'tsConfirmation',\n})\nexport class TsConfirmationDirective implements OnDestroy, OnInit {\n  /**\n   * Store a reference to the created confirmation modal\n   */\n  private modalInstance!: TsConfirmationModalComponent;\n\n  /**\n   * Store a reference to the modal overlay\n   */\n  private overlayRef!: OverlayRef | null;\n\n  /**\n   * An event emitted when the confirmation is cancelled\n   */\n  @Output()\n  public cancelled: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private elementRef: ElementRef,\n    private overlay: Overlay,\n    private host: TsButtonComponent,\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Spawn the confirmation overlay on click\n   *\n   * @param event - The MouseEvent\n   */\n  @HostListener('click', ['$event'])\n  public onClick(event: Event): void {\n    this.createOverlay();\n  }\n\n\n  /**\n   * Set a flag in the {@link TsButtonComponent} to intercept the click\n   */\n  public ngOnInit(): void {\n    this.host.interceptClick = true;\n  }\n\n\n  /**\n   * Dismiss the overlay and clean up observables\n   */\n  public ngOnDestroy(): void {\n    this.dismissOverlay();\n    this.host.interceptClick = false;\n  }\n\n\n  /**\n   * Create and attach the confirmation overlay\n   */\n  private createOverlay(): void {\n    const positionStrategy: ConnectedPositionStrategy = this.overlay.position().connectedTo(\n      this.elementRef,\n      {\n        originX: 'center',\n        originY: 'bottom',\n      },\n      {\n        overlayX: 'center',\n        overlayY: 'top',\n      },\n    );\n\n    const overlayConfig: OverlayConfig = new OverlayConfig({\n      positionStrategy,\n      hasBackdrop: true,\n      backdropClass: 'ts-confirmation-overlay',\n      panelClass: ['qa-confirmation', 'ts-confirmation-overlay__panel'],\n    });\n\n    // Create the overlay\n    this.overlayRef = this.overlay.create(overlayConfig);\n\n    // Wire up listeners for overlay clicks and ESC key\n    this.overlayRef._keydownEvents.pipe(\n      filter((event) => event.keyCode === ESCAPE),\n      merge(this.overlayRef.backdropClick()),\n      untilComponentDestroyed(this),\n    ).subscribe(() => {\n      this.dismissOverlay();\n      this.cancelled.emit(true);\n    });\n\n    // Create and attach the modal\n    const userProfilePortal = new ComponentPortal(TsConfirmationModalComponent);\n    this.modalInstance = this.overlayRef.attach(userProfilePortal).instance;\n\n    // Start the progress indicator of the TsButton\n    this.host.showProgress = true;\n\n    // Subscribe to the continue event\n    this.modalInstance.confirm.subscribe((shouldProceed: boolean) => {\n      if (coerceBooleanProperty(shouldProceed)) {\n        this.host.clickEvent.emit(this.host.originalClickEvent);\n        this.dismissOverlay();\n      } else {\n        this.dismissOverlay();\n        this.cancelled.emit(true);\n      }\n    });\n  }\n\n\n  /**\n   * Dismiss the overlay\n   */\n  private dismissOverlay(): void {\n    // istanbul ignore else\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n    }\n    // Stop the progress indicator of the TsButton\n    this.host.showProgress = false;\n    this.changeDetectorRef.markForCheck();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsConfirmationModalComponent.html":{"url":"components/TsConfirmationModalComponent.html","title":"component - TsConfirmationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsConfirmationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/confirmation/confirmation-modal.component.ts\n\n\n    \n        Description\n    \n    \n        The confirmation modal used by TsConfirmationDirective\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsConfirmation\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-confirmation-modal\n            \n\n            \n                styleUrls\n                confirmation-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirmation-modal.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirm\n                            \n                            \n                                    Public\n                                gap\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirm:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation-modal.component.ts:29\n                            \n                        \n\n                \n                    \n                        Stream confirmation choices\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gap:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : TS_SPACING.large[0]\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation-modal.component.ts:34\n                            \n                        \n\n                \n                    \n                        Define the space between the buttons\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { TS_SPACING } from './../spacing/spacing.constant';\n\n\n/**\n * The confirmation modal used by {@link TsConfirmationDirective}\n */\n@Component({\n  selector: 'ts-confirmation-modal',\n  styleUrls: ['./confirmation-modal.component.scss'],\n  templateUrl: './confirmation-modal.component.html',\n  host: {\n    class: 'ts-confirmation',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsConfirmation',\n})\nexport class TsConfirmationModalComponent {\n  /**\n   * Stream confirmation choices\n   */\n  public confirm: Subject = new Subject();\n\n  /**\n   * Define the space between the buttons\n   */\n  public gap: string = TS_SPACING.large[0];\n}\n\n    \n\n    \n        \n  \n    Cancel\n  \n\n  \n    Confirm\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Cancel        Confirm  '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsConfirmationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsConfirmationModule.html":{"url":"modules/TsConfirmationModule.html","title":"module - TsConfirmationModule","body":"\n                   \n\n\n\n\n  Modules\n  TsConfirmationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsConfirmationModule\n\n\n\ncluster_TsConfirmationModule_declarations\n\n\n\ncluster_TsConfirmationModule_imports\n\n\n\ncluster_TsConfirmationModule_exports\n\n\n\n\nTsConfirmationDirective\n\nTsConfirmationDirective\n\n\n\nTsConfirmationModule\n\nTsConfirmationModule\n\nTsConfirmationModule -->\n\nTsConfirmationDirective->TsConfirmationModule\n\n\n\n\n\nTsConfirmationModalComponent\n\nTsConfirmationModalComponent\n\nTsConfirmationModule -->\n\nTsConfirmationModalComponent->TsConfirmationModule\n\n\n\n\n\nTsConfirmationDirective \n\nTsConfirmationDirective \n\nTsConfirmationDirective  -->\n\nTsConfirmationModule->TsConfirmationDirective \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsConfirmationModule -->\n\nTsButtonModule->TsConfirmationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/confirmation/confirmation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsConfirmationDirective\n                            \n                            \n                                TsConfirmationModalComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TsConfirmationModalComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsConfirmationDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TsButtonModule } from './../button/button.module';\nimport { TsConfirmationDirective } from './confirmation.directive';\nimport { TsConfirmationModalComponent } from './confirmation-modal.component';\n\nexport * from './confirmation.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    TsButtonModule,\n    FlexLayoutModule,\n  ],\n  declarations: [\n    TsConfirmationDirective,\n    TsConfirmationModalComponent,\n  ],\n  exports: [\n    TsConfirmationDirective,\n  ],\n  entryComponents: [\n    TsConfirmationModalComponent,\n  ],\n})\nexport class TsConfirmationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsCopyComponent.html":{"url":"components/TsCopyComponent.html","title":"component - TsCopyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsCopyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/copy/copy.component.ts\n\n\n    \n        Description\n    \n    \n        This is the TsCopyComponent UI Component\nQA CSS CLASSES\nqa-copy: Placed on the div element which contains this component\nqa-copy-content: Placed on a div element which contains the content which will be copied\nqa-copy-icon: Placed on the icon which copies the content to the clipboard when clicked\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    My text to copy!\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsCopy\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-copy\n            \n\n            \n                styleUrls\n                copy.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./copy.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Private\n                                document\n                            \n                            \n                                    Public\n                                hasSelected\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                rippleColor\n                            \n                            \n                                    Private\n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                copyToClipboard\n                            \n                            \n                                    Public\n                                resetSelection\n                            \n                            \n                                    Public\n                                selectText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableInitialSelection\n                            \n                            \n                                enableQuickCopy\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(documentService: TsDocumentService, windowService: TsWindowService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/copy/copy.component.ts:92\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        documentService\n                                                  \n                                                        \n                                                                    TsDocumentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        windowService\n                                                  \n                                                        \n                                                                    TsWindowService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableInitialSelection\n                    \n                    \n                        Define if the initial click should select the contents\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:80\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableQuickCopy\n                    \n                    \n                        Define if the copy to clipboard functionality is enabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the component theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:92\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            copyToClipboard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        copyToClipboard(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:164\n                            \n                        \n\n\n                \n                    \n                            Copy text to the user's clipboard\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe text to copy\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resetSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetSelection()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:154\n                            \n                        \n\n\n                \n                    \n                            Reset the text selection\nNOTE: The containing div must have a tabindex set or no blur event will be fired\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectText(element: ElementRef, hasSelected: boolean, disabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Select the text content of the passed in element\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    ElementRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe element whose text should be selected\n\n\n                                                        \n                                                \n                                                \n                                                        hasSelected\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe flag defining if the selection has already been made\n\n\n                                                        \n                                                \n                                                \n                                                        disabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe flag defining if the selection functionality should be disabled\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    The value representing if the copy was successful\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        content:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:74\n                            \n                        \n\n                \n                    \n                        Define access to the wrapper around the content to be copied\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            document\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        document:     Document\n\n                    \n                \n                    \n                        \n                            Type :     Document\n\n                        \n                    \n                    \n                        \n                            Default value : this.documentService.document\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:47\n                            \n                        \n\n                \n                    \n                        Store a reference to the document object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasSelected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:52\n                            \n                        \n\n                \n                    \n                        Internal flag to track if the contents have been selected\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'content_copy'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:57\n                            \n                        \n\n                \n                    \n                        Define the copy icon\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rippleColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rippleColor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '#1a237e'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:63\n                            \n                        \n\n                \n                    \n                        Define the color of the material ripple\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            window\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        window:     Window\n\n                    \n                \n                    \n                        \n                            Type :     Window\n\n                        \n                    \n                    \n                        \n                            Default value : this.windowService.nativeWindow\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:68\n                            \n                        \n\n                \n                    \n                        Store a reference to the window object\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        textContent\n                    \n                \n\n                \n                    \n                        gettextContent()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/copy/copy.component.ts:109\n                                \n                            \n                    \n                        \n                                Return the inner text content\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  TsWindowService,\n  TsDocumentService,\n} from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * This is the TsCopyComponent UI Component\n *\n * #### QA CSS CLASSES\n * `qa-copy`: Placed on the div element which contains this component\n * `qa-copy-content`: Placed on a div element which contains the content which will be copied\n * `qa-copy-icon`: Placed on the icon which copies the content to the clipboard when clicked\n *\n * @example\n * My text to copy!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-copy',\n  templateUrl: './copy.component.html',\n  styleUrls: ['./copy.component.scss'],\n  host: {\n    class: 'ts-copy',\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCopy',\n})\nexport class TsCopyComponent {\n  /**\n   * Store a reference to the document object\n   */\n  private document: Document = this.documentService.document;\n\n  /**\n   * Internal flag to track if the contents have been selected\n   */\n  public hasSelected: boolean = false;\n\n  /**\n   * Define the copy icon\n   */\n  public icon: string = 'content_copy';\n\n  /**\n   * Define the color of the material ripple\n   */\n  // FIXME: This color should be coming from a config\n  public rippleColor: string = '#1a237e';\n\n  /**\n   * Store a reference to the window object\n   */\n  private window: Window = this.windowService.nativeWindow;\n\n  /**\n   * Define access to the wrapper around the content to be copied\n   */\n  @ViewChild('content')\n  public content!: ElementRef;\n\n  /**\n   * Define if the initial click should select the contents\n   */\n  @Input()\n  public disableInitialSelection: boolean = false;\n\n  /**\n   * Define if the copy to clipboard functionality is enabled\n   */\n  @Input()\n  public enableQuickCopy: boolean = false;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private documentService: TsDocumentService,\n    private windowService: TsWindowService,\n  ) {}\n\n\n  /**\n   * Return the inner text content\n   *\n   * @return The text content of the inner \n   */\n  public get textContent(): string {\n    const hasInnerText =\n      this.content && this.content.nativeElement && this.content.nativeElement.innerText;\n\n    if (hasInnerText) {\n      return this.content.nativeElement.innerText;\n    } else {\n      return '';\n    }\n  }\n\n\n  /**\n   * Select the text content of the passed in element\n   *\n   * @param element - The element whose text should be selected\n   * @param hasSelected - The flag defining if the selection has already been made\n   * @param disabled - The flag defining if the selection functionality should be disabled\n   * @return The value representing if the copy was successful\n   */\n  public selectText(element: ElementRef, hasSelected: boolean, disabled: boolean): boolean {\n    // If this functionality is disabled OR the text has already been selected,\n    // do not intercept any more clicks until the focus is reset\n    if (disabled || hasSelected) {\n      return false;\n    }\n\n    const selection = this.window.getSelection();\n    // NOTE: Adding the type of 'Range' to this causes an error with `range.selectNodeContents`\n    // `Argument of type ElementRef is not assignable to type 'Node'`\n    const range = this.document.createRange();\n\n    range.selectNodeContents(element as any);\n    selection.removeAllRanges();\n    selection.addRange(range);\n\n    this.hasSelected = true;\n    return true;\n  }\n\n\n  /**\n   * Reset the text selection\n   * NOTE: The containing div must have a `tabindex` set or no blur event will be fired\n   */\n  public resetSelection(): void {\n    this.hasSelected = false;\n  }\n\n\n  /**\n   * Copy text to the user's clipboard\n   *\n   * @param text - The text to copy\n   */\n  public copyToClipboard(text: string): void {\n    // Create a hidden textarea to seed with text content\n    const target = this.document.createElement('textarea');\n    target.className = 'targetElement';\n    target.style.position = 'absolute';\n    target.style.left = '101%';\n    target.style.top = '0';\n    target.style.width = '1px';\n    target.style.height = '1px';\n    target.textContent = text;\n\n    // Add the textarea, focus and select the text\n    this.document.body.appendChild(target);\n    target.focus();\n    target.setSelectionRange(0, target.value.length);\n\n    // Copy the selection or fall back to prompt\n    try {\n      this.document.execCommand('copy');\n      target.remove();\n    } catch (error) {\n      // Fall back to the native alert\n      this.window.prompt('Copy to clipboard: Ctrl+C, Enter', text);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n        {{ icon }}\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ icon }}            '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsCopyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsCopyModule.html":{"url":"modules/TsCopyModule.html","title":"module - TsCopyModule","body":"\n                   \n\n\n\n\n  Modules\n  TsCopyModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsCopyModule\n\n\n\ncluster_TsCopyModule_declarations\n\n\n\ncluster_TsCopyModule_imports\n\n\n\ncluster_TsCopyModule_exports\n\n\n\n\nTsCopyComponent\n\nTsCopyComponent\n\n\n\nTsCopyModule\n\nTsCopyModule\n\nTsCopyModule -->\n\nTsCopyComponent->TsCopyModule\n\n\n\n\n\nTsCopyComponent \n\nTsCopyComponent \n\nTsCopyComponent  -->\n\nTsCopyModule->TsCopyComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsCopyModule -->\n\nTsIconModule->TsCopyModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsCopyModule -->\n\nTsTooltipModule->TsCopyModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/copy/copy.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCopyComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCopyComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { TsTooltipModule } from './../tooltip/tooltip.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsCopyComponent } from './copy.component';\n\nexport * from './copy.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    TsIconModule,\n    MatRippleModule,\n    TsTooltipModule,\n  ],\n  exports: [\n    TsCopyComponent,\n  ],\n  declarations: [\n    TsCopyComponent,\n  ],\n})\nexport class TsCopyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsDatePipe.html":{"url":"pipes/TsDatePipe.html","title":"pipe - TsDatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsDatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/date/date.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsDate\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string | Date, format: TsDateTypes)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/date/date.pipe.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string | Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        format\n                                                        \n                                                                    TsDateTypes\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'short'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n  isDevMode,\n} from '@angular/core';\nimport {\n  isValid,\n  format as formatDate,\n} from 'date-fns';\n\n\n/**\n * Define the allowed date formats for the {@link TsDatePipe}.\n */\nexport type TsDateTypes =\n  // 02/08/2018\n  'short'\n  // February 8th, 2018\n  | 'medium'\n  // Thursday, February 8th, 2018, 12:00:00am\n  | 'extended'\n  // 2018-02-08T05:00:00.000Z\n  | 'timestamp'\n;\n\n\n@Pipe({\n  name: 'tsDate',\n})\nexport class TsDatePipe implements PipeTransform {\n  transform(value: string|Date, format: TsDateTypes = 'short'): string | undefined {\n    const validFormats: TsDateTypes[] = [\n      'short',\n      'medium',\n      'extended',\n      'timestamp',\n    ];\n\n    // Check for null values to avoid issues during data-binding\n    if (!value) {\n      return;\n    }\n\n    // Check for date validity\n    if (!isValid(value) && isDevMode()) {\n      throw Error(`'${value}' is not a valid date.`);\n    }\n\n    // Check for format validity\n    if ((validFormats.indexOf(format) \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsDateRange.html":{"url":"interfaces/TsDateRange.html","title":"interface - TsDateRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsDateRange\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/date-range/date-range.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the structure of the date range object used by TsDateRangeComponent\nTODO: In the process of deprecating the null portion of this interface. It should be using\nundefined instead.\nDeprecation target: 10.0.0\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        end\n                                \n                                \n                                        start\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                    \n                                \n                                \n                                    \n                                        end:     Date | undefined | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | undefined | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The end date of the range\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:     Date | undefined | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | undefined | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The start date of the range\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        Date Range\n\n\n\nTable of Contents\n\nEvent driven\nSet max/min range\nSet the initial date without using Reactive Forms\nUse with Reactive Forms\nEnable or Disable controls\n\n\nEvent driven\nThere are three selection events that you can tie into:\n\nstartSelected is fired when a start date is selected\nendSelected is fired when an end date is selected\ndateSelected is fired when either date is selected\n\nSet max/min range\nTo define bounds for date selection, pass in a valid Date to each of these @Inputs:\n\nendMaxDate\nendMinDate\nstartMaxDate\nstartMinDate\n\nstartDate1 = new Date(2017, 1, 1);\nstartDate2 = new Date(2017, 8, 1);\nendDate1 = new Date(2017, 1, 2);\nendDate2 = new Date(2017, 8, 2;Set the initial date without using Reactive Forms\nPass in a Date to startInitialDate and endInitialDate:\ndate1 = new Date(2017, 1, 1);\ndate2 = new Date(2017, 3, 1);\nWhen using a Reactive Form, we can seed the initial values in the form itself\n\nUse with Reactive Forms\nPass in the form control:\n\n  \n\n  Submit\nmyForm: FormGroup = this.formBuilder.group({\n  // Showing a nested example since usually a date range would be nested in a group\n  dateRange: this.formBuilder.group({\n    startDate: [ // This MUST be the name of the range start control\n      new Date(2017, 4, 6),\n    ],\n    endDate: [ // This MUST be the name of the range end control\n      new Date(2017, 4, 8),\n    ],\n  }),\n});NOTE: The keys inside the formGroup passed to the dateFormGroup input must be named\nstartDate and endDate. (see example directly above)\nNOTE: If using a form with nested form groups, each group must be created with\nformBuilder.group for the form get control to work:\n// Notice the nested `dateRange` object without using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: {\n    startDate: [\n      new Date(2017, 4, 6),\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n    ],\n  },\n});\n\n// THIS WILL FAIL!\nconst range = myForm.get('dateRange');\n\n//////////////////////////////////////////////////\n\n// Notice the nested `dateRange` object IS using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: this.formBuilder.group({\n    startDate: [\n      new Date(2017, 4, 6),\n      [\n        Validators.required,\n      ],\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n      [\n        Validators.required,\n      ],\n    ],\n  }),\n});\n\n// Now there is a group for us to 'get'\nconst range = myForm.get('dateRange');Enable or Disable controls\nControls can be enabled or disabled via the associated form control:\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: this.formBuilder.group({\n    startDate: [\n      {\n        value: new Date(2017, 4, 6),\n        disabled: true,\n      },\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n    ],\n  }),\n});\n\n// Enable it at any time:\nconst ctrl = this.myForm.get('dateRange.startDate')\nif (ctr) {\n  ctrl.enable();\n}\n    \n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n} from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Define the structure of the date range object used by {@link TsDateRangeComponent}\n *\n * TODO: In the process of deprecating the `null` portion of this interface. It should be using\n * `undefined` instead.\n *\n * Deprecation target: 10.0.0\n */\nexport interface TsDateRange {\n  /**\n   * The start date of the range\n   */\n  start: Date | undefined | null;\n\n  /**\n   * The end date of the range\n   */\n  end: Date | undefined | null;\n}\n\n\n/**\n * This is the date-range UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-date-range`: The primary component container\n * - `qa-date-range-start-datepicker`: The start date {@link TsDatepickerComponent}\n * - `qa-date-range-end-datepicker`: The end date {@link TsDatepickerComponent}\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-date-range',\n  templateUrl: './date-range.component.html',\n  styleUrls: ['./date-range.component.scss'],\n  host: {\n    class: 'ts-date-range',\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsDateRange',\n})\nexport class TsDateRangeComponent implements OnInit {\n  /**\n   * Getter to return the date range as an object\n   *\n   * @return The current date range\n   */\n  private get dateRange(): TsDateRange {\n    return {\n      start: this.startDate || undefined,\n      end: this.endDate || undefined,\n    };\n  }\n\n  /**\n   * Store the selected end date\n   *\n   * Deprecated: `null` deprecation target 10.0.0\n   */\n  public endDate: Date | null | undefined;\n\n  /**\n   * Provide quick access to the endDate form control\n   */\n  public get endDateControl(): AbstractControl {\n    const ctrl: AbstractControl | null = this.dateFormGroup ? this.dateFormGroup.get('endDate') : null;\n\n    return ctrl ? ctrl : this.fallbackEndDateControl;\n  }\n\n  /**\n   * Expose the minimum date for the endDate\n   *\n   * NOTE: `any` is used since we cannot seem to use union types in a BehaviorSubject\n   */\n  public endMinDate$: BehaviorSubject = new BehaviorSubject(undefined);\n\n  /**\n   * Define the end date placeholder\n   */\n  public endPlaceholder: string = 'End date';\n\n  /**\n   * Define a fallback control in case one is not passed in\n   */\n  private fallbackEndDateControl: FormControl = new FormControl();\n\n  /**\n   * Define a fallback control in case one is not passed in\n   */\n  private fallbackStartDateControl: FormControl = new FormControl();\n\n  /**\n   * Define the separator between the two date inputs\n   */\n  public separator: string = '-';\n\n  /**\n   * Store the selected start date\n   *\n   * Deprecated: `null` deprecation target 10.0.0\n   */\n  public startDate: Date | undefined | null;\n\n  /**\n   * Provide quick access to the startDate form control\n   */\n  public get startDateControl(): AbstractControl {\n    const ctrl: AbstractControl | null = this.dateFormGroup ? this.dateFormGroup.get('startDate') : null;\n\n    return ctrl ? ctrl : this.fallbackStartDateControl;\n  }\n\n  /**\n   * Expose the maximum date for the startDate\n   *\n   * NOTE: `any` is used since we cannot seem to use union types in a BehaviorSubject\n   */\n  public startMaxDate$: BehaviorSubject = new BehaviorSubject(undefined);\n\n  /**\n   * Define the start date placeholder\n   */\n  public startPlaceholder: string = 'Start date';\n\n  /**\n   * Define the max date for the end date\n   */\n  @Input()\n  public endMaxDate: Date | undefined;\n\n  /**\n   * Define the min date for the end date\n   */\n  @Input()\n  public endMinDate: Date | undefined;\n\n  /**\n   * Define the initial date for the end date\n   */\n  @Input()\n  public endInitialDate: Date | undefined;\n\n  /**\n   * Define the starting view for both datepickers\n   */\n  @Input()\n  public startingView: 'month' | 'year' = 'month';\n\n  /**\n   * Define the max date for the starting date\n   */\n  @Input()\n  public startMaxDate: Date | undefined;\n\n  /**\n   * Define the min date for the starting date\n   */\n  @Input()\n  public startMinDate: Date | undefined;\n\n  /**\n   * Define the initial date for the starting date\n   */\n  @Input()\n  public startInitialDate: Date | undefined;\n\n  /**\n   * Define the form group to attach the date range to\n   */\n  @Input()\n  public dateFormGroup: FormGroup | AbstractControl | undefined;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Output the start date when selected\n   */\n  @Output()\n  public startSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Output the end date when selected\n   */\n  @Output()\n  public endSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Output the selected date range as {@link TsDateRange}\n   *\n   * Deprecated in favor of `change`. Target 10.0.0\n   */\n  @Output()\n  public selectedDate: EventEmitter = new EventEmitter();\n\n  /**\n   * Event emitted anytime the range is changed\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Seed initial date range values\n   */\n  public ngOnInit(): void {\n    // Seed values from @Inputs\n    this.seedDateRange(this.startInitialDate, this.endInitialDate);\n\n    // Seed values from a passed in form group\n    if (this.dateFormGroup) {\n      this.seedWithFormValues(this.dateFormGroup);\n    }\n  }\n\n\n  /**\n   * Seed the date range with initial values\n   *\n   * @param start - The initial start date\n   * @param end - The initial end date\n   */\n  private seedDateRange(\n    start: Date | null | undefined,\n    end: Date | null | undefined,\n  ): void {\n    this.startDate = start;\n    this.endDate = end;\n  }\n\n\n  /**\n   * Seed date values from a passed in form\n   *\n   * @param formGroup - The date form group\n   */\n  private seedWithFormValues(formGroup: FormGroup | AbstractControl): void {\n    if (!formGroup || !formGroup.get('startDate') || !formGroup.get('endDate')) {\n      return;\n    }\n    const startControl: AbstractControl | null = formGroup.get('startDate');\n    const endControl: AbstractControl | null = formGroup.get('endDate');\n    const startValue: Date | undefined = startControl ? startControl.value : undefined;\n    const endValue: Date | undefined = endControl ? endControl.value : undefined;\n\n    // istanbul ignore else\n    if (startValue) {\n      this.startInitialDate = startValue;\n      this.startDate = startValue;\n      this.endMinDate$.next(startValue);\n    }\n\n    // istanbul ignore else\n    if (endValue) {\n      this.endInitialDate = endValue;\n      this.endDate = endValue;\n      this.startMaxDate$.next(endValue);\n    }\n  }\n\n\n  /**\n   * Emit the selected start date and date range\n   *\n   * @param datepickerEvent - The event received from the range start event\n   * {@link TsDatepickerComponent}\n   */\n  public startDateSelected(datepickerEvent: MatDatepickerInputEvent): void {\n    if (datepickerEvent && datepickerEvent.value) {\n      this.endMinDate$.next(datepickerEvent.value);\n      this.startDate = datepickerEvent.value;\n\n      // Update the form value if a formGroup was passed in\n      // istanbul ignore else\n      if (this.dateFormGroup && this.startDateControl) {\n        this.startDateControl.setValue(datepickerEvent.value);\n      }\n\n      this.startSelected.emit(datepickerEvent.value);\n      this.selectedDate.emit(this.dateRange);\n      this.change.emit(this.dateRange);\n    } else {\n      // If no startDate was selected, reset to the original endMinDate\n      if (this.endMinDate) {\n        this.endMinDate$.next(this.endMinDate);\n      } else {\n        // If neither were set, revert to a safe date\n        this.endMinDate$.next(undefined);\n      }\n    }\n  }\n\n\n  /**\n   * Emit the selected end date and date range\n   *\n   * @param datepickerEvent - The event received from the range end event\n   * {@link TsDatepickerComponent}\n   */\n  public endDateSelected(datepickerEvent: MatDatepickerInputEvent): void {\n    if (datepickerEvent && datepickerEvent.value) {\n      this.startMaxDate$.next(datepickerEvent.value);\n      this.endDate = datepickerEvent.value;\n\n      // Update the form value if a formGroup was passed in\n      // istanbul ignore else\n      if (this.dateFormGroup && this.endDateControl) {\n        this.endDateControl.setValue(datepickerEvent.value);\n      }\n\n      this.endSelected.emit(datepickerEvent.value);\n      this.selectedDate.emit(this.dateRange);\n      this.change.emit(this.dateRange);\n    } else {\n      if (this.startMaxDate) {\n        // If no endDate was selected, reset to the original startMaxDate\n        this.startMaxDate$.next(this.startMaxDate);\n      } else {\n        // If neither were set, revert to a safe date\n        this.startMaxDate$.next(undefined);\n      }\n    }\n  }\n\n\n  /**\n   * Update dates when the start date input receives a blur event\n   *\n   * @param date - The date entered\n   */\n  public startBlur(date: Date | undefined): void {\n    this.startDate = date;\n    this.endMinDate$.next(date);\n  }\n\n\n  /**\n   * Update dates when the end date input receives a blur event\n   *\n   * @param date - The date entered\n   */\n  public endBlur(date: Date | undefined): void {\n    this.endDate = date;\n    this.startMaxDate$.next(date);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsDateRangeModule.html":{"url":"modules/TsDateRangeModule.html","title":"module - TsDateRangeModule","body":"\n                   \n\n\n\n\n  Modules\n  TsDateRangeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsDateRangeModule\n\n\n\ncluster_TsDateRangeModule_declarations\n\n\n\ncluster_TsDateRangeModule_imports\n\n\n\ncluster_TsDateRangeModule_exports\n\n\n\n\nTsDateRangeComponent\n\nTsDateRangeComponent\n\n\n\nTsDateRangeModule\n\nTsDateRangeModule\n\nTsDateRangeModule -->\n\nTsDateRangeComponent->TsDateRangeModule\n\n\n\n\n\nTsDateRangeComponent \n\nTsDateRangeComponent \n\nTsDateRangeComponent  -->\n\nTsDateRangeModule->TsDateRangeComponent \n\n\n\n\n\nTsDatepickerModule\n\nTsDatepickerModule\n\nTsDateRangeModule -->\n\nTsDatepickerModule->TsDateRangeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/date-range/date-range.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsDateRangeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsDatepickerModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsDateRangeComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TsDatepickerModule } from './../datepicker/datepicker.module';\nimport { TsDateRangeComponent } from './date-range.component';\n\nexport * from './date-range.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TsDatepickerModule,\n    FlexLayoutModule,\n  ],\n  exports: [\n    TsDateRangeComponent,\n  ],\n  declarations: [\n    TsDateRangeComponent,\n  ],\n})\nexport class TsDateRangeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsDatepickerInputEvent.html":{"url":"classes/TsDatepickerInputEvent.html","title":"class - TsDatepickerInputEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsDatepickerInputEvent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/datepicker/datepicker.component.ts\n        \n\n            \n                Description\n            \n            \n                Expose the MatDatepickerInputEvent event as TsDatepickerInputEvent. Used by TsDatepickerComponent\n\n            \n\n            \n                Extends\n            \n            \n                    MatDatepickerInputEvent\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n\nTable of Contents\n\nEvent driven\nFilter out invalid dates\nSet max/min range\nSet the initial date without using Reactive Forms\nDefine a date that the calendar should open to\nUse with Reactive Forms\nExample with dynamic validation\n\n\nEvent driven\nEach time a selection is made, the selected event is fired.\nFilter out invalid dates\nIf, for instance, you need to prohibit weekend days (sat/sun) from being selected you can pass in a\ncustom method to filter dates:\nmyFilter = (d: Date): boolean => {\n  const day = d.getDay();\n  // Prevent Saturday and Sunday from being selected.\n  return day !== 0 && day !== 6;\n}Set max/min range\nTo define bounds for date selection, pass in a valid Date to minDate and/or maxDate:\ndate1 = new Date(2017, 2, 1);\ndate2 = new Date(2017, 8, 1);Set the initial date without using Reactive Forms\nPass in a Date to initialDate:\nmyDate = new Date(2017, 1, 1);\nWhen using a Reactive Form, we can seed the initial value in the form itself\n\nDefine a date that the calendar should open to\nPass in a Date to openTo:\nmyDate = new Date(2017, 5, 12);Use with Reactive Forms\nPass in the form control:\n\n  \n\n  Submit\nmyForm = this.formBuilder.group({\n  date: [\n    null, // If you need a default value, change this `null` to your value\n    [\n      Validators.required,\n    ],\n  ],\n});NOTE: If using a form with nested form groups, each group must be created with\nformBuilder.group for the form get control to work:\n// Notice the nested `dateRange` object without using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: {\n    startDate: [\n      new Date(2017, 4, 6),\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n    ],\n  },\n});\n\n// THIS WILL FAIL!\nconst range = myForm.get('dateRange');\n\n//////////////////////////////////////////////////\n\n// Notice the nested `dateRange` object IS using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: this.formBuilder.group({\n    startDate: [\n      new Date(2017, 4, 6),\n      [\n        Validators.required,\n      ],\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n      [\n        Validators.required,\n      ],\n    ],\n  }),\n});\n\n// Now there is a group for us to 'get'\nconst range = myForm.get('dateRange');Example with dynamic validation\nWe can recreate a version of the {@link TsDateRangeComponent} using dynamic validation:\n\n  \n\n  \n\n  Submit\nmyForm = this.formBuilder.group({\n  startDate: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n  endDate: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n});\n\n// When the startDate changes, we want to set that date as the minDate for the endDate\nrangeStartChange(event: MatDatepickerInputEvent) {\n  if (event) {\n    // Get the from control\n    const control = this.formTwo.get('endDate');\n\n    // Set all validators.\n    // NOTE: setting validators will clear ALL existing validators, so we must add the required\n    // validator here again\n    control.setValidators([\n      Validators.required,\n      this.validatorsService.minDate(event.value),\n    ]);\n    // Tell the control to update according to the new validators\n    control.updateValueAndValidity();\n  }\n}\n\n// When the endDate changes, we want to set that date as the maxDate for the startDate\nrangeEndChange(event: MatDatepickerInputEvent) {\n  if (event) {\n    // Get the from control\n    const control = this.formTwo.get('startDate');\n\n    // Set all validators.\n    // NOTE: setting validators will clear ALL existing validators, so we must add the required\n    // validator here again\n    control.setValidators([\n      Validators.required,\n      this.validatorsService.maxDate(event.value),\n    ]);\n    // Tell the control to update according to the new validators\n    control.updateValueAndValidity();\n  }\n}\n    \n\n    \n        import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Expose the MatDatepickerInputEvent event as TsDatepickerInputEvent. Used by {@link TsDatepickerComponent}\n */\nexport class TsDatepickerInputEvent extends MatDatepickerInputEvent {}\n\n\n/**\n * Custom control value accessor for our component.\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsDatepickerComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the datepicker UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-datepicker`: The form-field wrapper which contains the input and button\n * - `qa-datepicker-input`: The input element which contains the chosen date\n * - `qa-datepicker-hint`: The hint element, if hint content is provided\n * - `qa-datepicker-toggle`: The button which displays the calendar when clicked\n * - `qa-datepicker-calendar`: The calendar control used for picking a date\n * - `qa-datepicker-validation-messages`: The validation messages container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  providers: [CUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR],\n  host: {\n    class: 'ts-datepicker',\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsDatepicker',\n})\nexport class TsDatepickerComponent extends TsReactiveFormBaseComponent implements OnInit {\n  /**\n   * Expose the max date to the template\n   */\n  public _maxDate: Date | undefined;\n\n  /**\n   * Expose the min date to the template\n   */\n  public _minDate: Date | undefined;\n\n  /**\n   * Store the value of the input\n   */\n  public value: any;\n\n  /**\n   * Define a date filter to disallow certain dates\n   */\n  @Input()\n  public dateFilter: any;\n\n  /**\n   * Define a hint for the datepicker\n   */\n  // FIXME: Fix potential overlap of hint and error messages\n  @Input()\n  public hint: string | undefined;\n\n  /**\n   * Define the placeholder\n   */\n  @Input()\n  public inputPlaceholder: string = 'Select a date';\n\n  /**\n   * Define if the input should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define the maximum date requirement and confirm it is a Date object\n   */\n  @Input()\n  public set maxDate(value: string | Date | undefined) {\n    this._maxDate = (value) ? this.verifyIsDateObject(value) : undefined;\n  }\n\n  /**\n   * Define the minimum date requirement and confirm it is a Date object\n   */\n  @Input()\n  public set minDate(value: string | Date | undefined) {\n    this._minDate = (value) ? this.verifyIsDateObject(value) : undefined;\n  }\n\n  /**\n   * Define a starting date for the datepicker\n   */\n  @Input()\n  public set initialDate(value: string | Date | undefined) {\n    if (!value) {\n      return;\n    }\n\n    this._initialDate = this.verifyIsDateObject(value);\n  }\n  // NOTE: This should never return a string but getter types are required to match setter types\n  public get initialDate(): string | Date | undefined {\n    return this._initialDate;\n  }\n  public _initialDate!: Date;\n\n  /**\n   * Define a date that the datepicker calendar should open to\n   */\n  @Input()\n  public openTo: Date | undefined;\n\n  /**\n   * Define the starting view of the datepicker\n   */\n  @Input()\n  public startingView: 'month' | 'year' = 'month';\n\n  /**\n   * Define the tabindex for the input\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define if validation messages should be shown immediately or on blur\n   *\n   * NOTE: Since the user may never focus the actual input, we should validate immediately\n   */\n  @Input()\n  public validateOnChange: boolean = true;\n\n  /**\n   * Define an event emitter to alert consumers that a date was selected\n   */\n  @Output()\n  public selected: EventEmitter> = new EventEmitter();\n\n  /**\n   * Define an event when the input receives a blur event\n   */\n  @Output()\n  public inputBlur: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Set the initial date if it exists\n   */\n  public ngOnInit() {\n    // istanbul ignore else\n    if (this.initialDate) {\n      this.value = this.initialDate;\n    }\n  }\n\n\n  /**\n   * Helper method to reset the input value\n   */\n  public resetValue(): void {\n    this.value = null;\n  }\n\n\n  /**\n   * Convert an valid date string to a Date if needed\n   *\n   * NOTE: When using 1 time bindings we are required to pass in ISO stringified dates. Adding this\n   * method to our setters adds support for either version\n   *\n   * @param date - The date\n   * @return The Date object\n   */\n  private verifyIsDateObject(date: string | Date): Date {\n    // If value is a valid date string, convert to a date\n    if (!(date instanceof Date)) {\n      return new Date(date);\n    } else {\n      return date;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsDatepickerModule.html":{"url":"modules/TsDatepickerModule.html","title":"module - TsDatepickerModule","body":"\n                   \n\n\n\n\n  Modules\n  TsDatepickerModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsDatepickerModule\n\n\n\ncluster_TsDatepickerModule_declarations\n\n\n\ncluster_TsDatepickerModule_TsDatepickerComponent_providers\n\n\n\ncluster_TsDatepickerModule_imports\n\n\n\ncluster_TsDatepickerModule_exports\n\n\n\n\nTsDatepickerComponent\n\nTsDatepickerComponent\n\n\n\nTsDatepickerModule\n\nTsDatepickerModule\n\nTsDatepickerModule -->\n\nTsDatepickerComponent->TsDatepickerModule\n\n\n\n\n\nTsDatepickerComponent \n\nTsDatepickerComponent \n\nTsDatepickerComponent  -->\n\nTsDatepickerModule->TsDatepickerComponent \n\n\n\n\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR\n\nTsDatepickerComponent -->\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR->TsDatepickerComponent\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsDatepickerModule -->\n\nTsValidationMessagesModule->TsDatepickerModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/datepicker/datepicker.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsDatepickerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsDatepickerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatNativeDateModule } from '@angular/material/core';\n\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsDatepickerComponent } from './datepicker.component';\n\nexport * from './datepicker.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatInputModule,\n    TsValidationMessagesModule,\n  ],\n  exports: [\n    TsDatepickerComponent,\n  ],\n  declarations: [\n    TsDatepickerComponent,\n  ],\n})\nexport class TsDatepickerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsDropProtectionService.html":{"url":"injectables/TsDropProtectionService.html","title":"injectable - TsDropProtectionService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsDropProtectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/drop-protection.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hasProtection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                prevent\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(windowService: TsWindowService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/file-upload/drop-protection.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        windowService\n                                                  \n                                                        \n                                                                    TsWindowService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/drop-protection.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Add drop protection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prevent\n                            \n                            \n                        \n                    \n                \n                \n                    \nprevent(e: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/drop-protection.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Prevent default\nNOTE: In order to remove an event listener we need a reference to a method that does not change.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/drop-protection.service.ts:30\n                            \n                        \n\n\n                \n                    \n                            Remove drop protection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hasProtection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasProtection:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/drop-protection.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TsWindowService } from '@terminus/ngx-tools';\n\n\n@Injectable()\nexport class TsDropProtectionService {\n  private hasProtection = false;\n\n\n  constructor(\n    private windowService: TsWindowService,\n  ) { }\n\n\n  /**\n   * Add drop protection\n   */\n  add(): void {\n    if (!this.hasProtection) {\n      this.windowService.nativeWindow.addEventListener('dragover', this.prevent, false);\n      this.windowService.nativeWindow.addEventListener('drop', this.prevent, false);\n      this.hasProtection = true;\n    }\n  }\n\n\n  /**\n   * Remove drop protection\n   */\n  remove(): void {\n    if (this.hasProtection) {\n      this.windowService.nativeWindow.removeEventListener('dragover', this.prevent, false);\n      this.windowService.nativeWindow.removeEventListener('drop', this.prevent, false);\n      this.hasProtection = false;\n    }\n  }\n\n\n  /**\n   * Prevent default\n   *\n   * NOTE: In order to remove an event listener we need a reference to a method that does not change.\n   *\n   * @param event - The event\n   */\n  prevent(e: Event): void {\n    e.preventDefault();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsFileImageDimensionContraint.html":{"url":"interfaces/TsFileImageDimensionContraint.html","title":"interface - TsFileImageDimensionContraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsFileImageDimensionContraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/image-dimension-constraints.ts\n        \n\n            \n                Description\n            \n            \n                An indiviual size constraint\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        height\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TsFileImageDimensionContraint {\n  height: {\n    min: number;\n    max: number;\n  };\n  width: {\n    min: number;\n    max: number;\n  };\n}\n\n/**\n * An array of file size constraints\n */\nexport type TsFileImageDimensionConstraints = TsFileImageDimensionContraint[];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsFileUploadModule.html":{"url":"modules/TsFileUploadModule.html","title":"module - TsFileUploadModule","body":"\n                   \n\n\n\n\n  Modules\n  TsFileUploadModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsFileUploadModule\n\n\n\ncluster_TsFileUploadModule_declarations\n\n\n\ncluster_TsFileUploadModule_imports\n\n\n\ncluster_TsFileUploadModule_exports\n\n\n\ncluster_TsFileUploadModule_providers\n\n\n\n\nTsFileUploadComponent\n\nTsFileUploadComponent\n\n\n\nTsFileUploadModule\n\nTsFileUploadModule\n\nTsFileUploadModule -->\n\nTsFileUploadComponent->TsFileUploadModule\n\n\n\n\n\nTsFileUploadComponent \n\nTsFileUploadComponent \n\nTsFileUploadComponent  -->\n\nTsFileUploadModule->TsFileUploadComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsFileUploadModule -->\n\nTsButtonModule->TsFileUploadModule\n\n\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTsFileUploadModule -->\n\nTsIconButtonModule->TsFileUploadModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsFileUploadModule -->\n\nTsIconModule->TsFileUploadModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsFileUploadModule -->\n\nTsTooltipModule->TsFileUploadModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsFileUploadModule -->\n\nTsValidationMessagesModule->TsFileUploadModule\n\n\n\n\n\nTsDropProtectionService\n\nTsDropProtectionService\n\nTsFileUploadModule -->\n\nTsDropProtectionService->TsFileUploadModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/file-upload/file-upload.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsFileUploadComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsDropProtectionService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsIconButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsFileUploadComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { TsDocumentService } from '@terminus/ngx-tools';\n\nimport { TsButtonModule } from './../button/button.module';\nimport { TsFileUploadComponent } from './file-upload.component';\nimport { TsIconButtonModule } from './../icon-button/icon-button.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsTooltipModule } from './../tooltip/tooltip.module';\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsDropProtectionService } from './drop-protection.service';\n\nexport * from './file-upload.component';\nexport * from './image-dimension-constraints';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    FormsModule,\n    MatProgressBarModule,\n    TsButtonModule,\n    TsIconButtonModule,\n    TsIconModule,\n    TsTooltipModule,\n    TsValidationMessagesModule,\n  ],\n  declarations: [\n    TsFileUploadComponent,\n  ],\n  providers: [\n    TsDropProtectionService,\n    TsDocumentService,\n  ],\n  exports: [\n    TsFileUploadComponent,\n  ],\n})\nexport class TsFileUploadModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsFileValidations.html":{"url":"interfaces/TsFileValidations.html","title":"interface - TsFileValidations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsFileValidations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/selected-file.ts\n        \n\n            \n                Description\n            \n            \n                The structure of the object to track file validations internally\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fileSize\n                                \n                                \n                                        fileType\n                                \n                                \n                                        imageDimensions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileSize\n                                    \n                                \n                                \n                                    \n                                        fileSize:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileType\n                                    \n                                \n                                \n                                    \n                                        fileType:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageDimensions\n                                    \n                                \n                                \n                                    \n                                        imageDimensions:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BehaviorSubject } from 'rxjs';\n\nimport { TsFileImageDimensionConstraints } from './image-dimension-constraints';\nimport { TsImageDimensions } from './image-dimensions';\nimport { TsFileAcceptedMimeTypes } from './mime-types';\n\n\n/**\n * The structure of the object to track file validations internally\n */\nexport interface TsFileValidations {\n  fileType: boolean;\n  fileSize: boolean;\n  imageDimensions: boolean;\n}\n\n\n/**\n * The number of bytes per kilobyte (for calculations)\n */\nconst BYTES_PER_KB = 1024;\n\n\n/**\n * Manage a single selected file\n *\n * @param file - The selected file\n * @param imageDimensionConstraints - An array of image dimension constraints {@link TsFileImageDimensionConstraints}\n * @param typeConstraint - An array of allowed MIME types {@link TsFileAcceptedMimeTypes}\n * @param maxSize - The maximum size in kilobytes\n */\nexport class TsSelectedFile {\n  public name: string | undefined;\n  public mimeType: string;\n  public dimensions: TsImageDimensions | undefined;\n  public size: number;\n  public validations: TsFileValidations = {\n    fileType: false,\n    fileSize: false,\n    imageDimensions: false,\n  };\n  private fileReader: FileReader = new FileReader();\n\n  /**\n   * Only needed to appease TypeScript when defining `fileLoaded$`\n   */\n  private fileReference?: TsSelectedFile;\n\n  /**\n   * BehaviorSubject to alert consumers when all calculations are complete\n   */\n  public fileLoaded$: BehaviorSubject = new BehaviorSubject(this.fileReference);\n\n\n  constructor(\n    public file: File,\n    private imageDimensionConstraints: TsFileImageDimensionConstraints | undefined,\n    private typeConstraint: TsFileAcceptedMimeTypes[] | undefined,\n    private maxSize: number,\n  ) {\n    this.mimeType = this.file.type;\n    this.size = Math.ceil(this.file.size / BYTES_PER_KB);\n    this.name = this.file.name;\n\n    // Begin the validation chain by validating image dimensions\n    this.determineImageDimensions(() => {\n      // Validate mime-type\n      // istanbul ignore else\n      if (this.typeConstraint && this.typeConstraint.indexOf(this.file.type as TsFileAcceptedMimeTypes) >= 0) {\n        this.validations.fileType = true;\n      }\n\n      // Validate file size\n      // istanbul ignore else\n      if (this.size  {\n        // istanbul ignore else\n        if (img) {\n          img.src = this.fileReader.result;\n        }\n      };\n      img.onload = (v: Event) => {\n        // istanbul ignore else\n        if (img) {\n          this.dimensions = new TsImageDimensions(img.naturalWidth, img.naturalHeight);\n        }\n\n        // Validate dimensions\n        this.validations.imageDimensions = this.validateImageDimensions(this.imageDimensionConstraints);\n\n        // Call the callback if one exists\n        // istanbul ignore else\n        if (callback) {\n          callback();\n        }\n      };\n    } else {\n      // We are not dealing with an image:\n      // istanbul ignore else\n      if (callback) {\n        callback();\n      }\n\n      // Since this is not an image, set dimension validation to `true` to 'bypass'\n      this.validations.imageDimensions = true;\n    }\n\n    // Read the file (this triggers the FileReader load event)\n    this.fileReader.readAsDataURL(this.file);\n  }\n\n\n  /**\n   * Validate the image dimensions\n   *\n   * @param constraints - The constraints this the image dimensions must fit\n   * @return The validation result\n   */\n  private validateImageDimensions(constraints: TsFileImageDimensionConstraints | undefined): boolean {\n    if (!constraints || constraints.length = constraint.height.min && height = constraint.width.min && width \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsHeaderCellDefDirective.html":{"url":"directives/TsHeaderCellDefDirective.html","title":"directive - TsHeaderCellDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsHeaderCellDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Header cell definition for the TsTableComponent.\nCaptures the template of a column's header cell and as well as cell-specific properties.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsHeaderCellDef]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsHeaderCellDirective.html":{"url":"directives/TsHeaderCellDirective.html","title":"directive - TsHeaderCellDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsHeaderCellDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Header cell template container that adds the right classes and role.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ts-header-cell\n                    \n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(columnDef: CdkColumnDef, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/table/cell.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        columnDef\n                                                  \n                                                        \n                                                                    CdkColumnDef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsHeaderRowComponent.html":{"url":"components/TsHeaderRowComponent.html","title":"component - TsHeaderRowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsHeaderRowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/table/row.ts\n\n\n    \n        Description\n    \n    \n        Header template container that contains the cell outlet. Adds the right class and role.\n\n    \n\n    \n        Extends\n    \n    \n            CdkHeaderRow\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsHeaderRow\n            \n\n            \n                host\n                {}\n            \n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                ts-header-row\n            \n\n\n\n            \n                template\n                CDK_ROW_TEMPLATE\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Header row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[tsHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: TsHeaderRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why this type of input was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsHeaderRowDef'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n\n/**\n * Data row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[tsRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: TsRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why it was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsRowDefColumns', 'when: tsRowDefWhen'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsRowDefDirective extends CdkRowDef {}\n\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-header-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsHeaderRow',\n  preserveWhitespaces: false,\n})\nexport class TsHeaderRowComponent extends CdkHeaderRow {}\n\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRow',\n  preserveWhitespaces: false,\n})\nexport class TsRowComponent extends CdkRow {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'CDK_ROW_TEMPLATE'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsHeaderRowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsHeaderRowDefDirective.html":{"url":"directives/TsHeaderRowDefDirective.html","title":"directive - TsHeaderRowDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsHeaderRowDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/row.ts\n        \n\n            \n                Description\n            \n            \n                Header row definition for the TsTableComponent.\nCaptures the header row's template and other header properties such as the columns to display.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsHeaderRowDef]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Header row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[tsHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: TsHeaderRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why this type of input was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsHeaderRowDef'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n\n/**\n * Data row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[tsRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: TsRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why it was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsRowDefColumns', 'when: tsRowDefWhen'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsRowDefDirective extends CdkRowDef {}\n\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-header-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsHeaderRow',\n  preserveWhitespaces: false,\n})\nexport class TsHeaderRowComponent extends CdkHeaderRow {}\n\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRow',\n  preserveWhitespaces: false,\n})\nexport class TsRowComponent extends CdkRow {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsIconButtonComponent.html":{"url":"components/TsIconButtonComponent.html","title":"component - TsIconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsIconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/icon-button/icon-button.component.ts\n\n\n    \n        Description\n    \n    \n        This is the icon-button UI Component\nQA CSS CLASSES\n\nqa-icon-button: Placed on the primary container\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    delete_forever\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsIconButton\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-icon-button\n            \n\n            \n                styleUrls\n                icon-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./icon-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionName\n                            \n                            \n                                buttonType\n                            \n                            \n                                isDisabled\n                            \n                            \n                                tabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/icon-button/icon-button.component.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionName\n                    \n                    \n                        Define the action for the aria-label. TsButtonActionTypes\n\n                            \n                            Type:    TsButtonActionTypes\n\n                            \n                        \n                            Default value: 'Button'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                    \n                        Define the button type. TsButtonFunctionTypes\n\n                            \n                            Type:    TsButtonFunctionTypes\n\n                            \n                        \n                            Default value: 'button'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the button is disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                    \n                        Define the tabindex for the button\n\n                            \n                            Type:    number\n\n                            \n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:68\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                    \n                        Pass the click event through to the parent\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:74\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hostElement\n                    \n                \n\n                \n                    \n                        gethostElement()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:80\n                                \n                            \n                    \n                        \n                                Getter to return the native elemetn\n\n\n                                \n                                    Returns :     ElementRef\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n    \n        \n\nTable of Contents\n\nBasic usage\nTheme (color)\nAccessibility\n\n\nBasic usage\nPass a valid Material icon name as the content of the button:\ndelete_foreverTheme (color)\nUse the theme parameter to change the color.\n\nforum\n\n\nforum\n\n\nforum\nBy default the icon will use color(pure, dark)\n\nAccessibility\nFor accessibility purposes we should set the actionName and buttonType.\n\nactionName can be one of the TsButtonActionTypes and will be used for the aria-label.\nbuttonType can be one of the TsButtonFunctionTypes and will be used for the type attribute.\n\nbookmark\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  EventEmitter,\n  ElementRef,\n} from '@angular/core';\n\nimport {\n  TsButtonActionTypes,\n  TsButtonFunctionTypes,\n} from './../button/button.module';\n\n\n/**\n * This is the icon-button UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-icon-button`: Placed on the primary container\n *\n * @example\n * delete_forever\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-icon-button',\n  templateUrl: './icon-button.component.html',\n  styleUrls: ['./icon-button.component.scss'],\n  host: {\n    class: 'ts-icon-button',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsIconButton',\n})\nexport class TsIconButtonComponent {\n  /**\n   * Define the action for the aria-label. {@link TsButtonActionTypes}\n   */\n  @Input()\n  public actionName: TsButtonActionTypes = 'Button';\n\n  /**\n   * Define the button type. {@link TsButtonFunctionTypes}\n   */\n  @Input()\n  public buttonType: TsButtonFunctionTypes = 'button';\n\n  /**\n   * Define if the button is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define the tabindex for the button\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n  /**\n   * Pass the click event through to the parent\n   */\n  @Output()\n  public clickEvent: EventEmitter = new EventEmitter;\n\n\n  /**\n   * Getter to return the native elemetn\n   */\n  public get hostElement(): ElementRef {\n    return this.elementRef.nativeElement;\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n  ) {}\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsIconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsIconButtonModule.html":{"url":"modules/TsIconButtonModule.html","title":"module - TsIconButtonModule","body":"\n                   \n\n\n\n\n  Modules\n  TsIconButtonModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsIconButtonModule\n\n\n\ncluster_TsIconButtonModule_declarations\n\n\n\ncluster_TsIconButtonModule_imports\n\n\n\ncluster_TsIconButtonModule_exports\n\n\n\n\nTsIconButtonComponent\n\nTsIconButtonComponent\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTsIconButtonModule -->\n\nTsIconButtonComponent->TsIconButtonModule\n\n\n\n\n\nTsIconButtonComponent \n\nTsIconButtonComponent \n\nTsIconButtonComponent  -->\n\nTsIconButtonModule->TsIconButtonComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsIconButtonModule -->\n\nTsIconModule->TsIconButtonModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/icon-button/icon-button.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsIconButtonComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsIconButtonComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsIconButtonComponent } from './icon-button.component';\n\nexport * from './icon-button.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatRippleModule,\n    TsIconModule,\n  ],\n  declarations: [\n    TsIconButtonComponent,\n  ],\n  exports: [\n    TsIconButtonComponent,\n  ],\n})\nexport class TsIconButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsIconComponent.html":{"url":"components/TsIconComponent.html","title":"component - TsIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsIconComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/icon/icon.component.ts\n\n\n    \n        Description\n    \n    \n        This is the icon UI Component\nQA CSS CLASSES\n\nqa-icon: Placed on the primary container\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    home\nhelp\n\n\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsIcon\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-icon\n            \n\n            \n                styleUrls\n                icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _background\n                            \n                            \n                                    Private\n                                _svgIcon\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                            \n                                inline\n                            \n                            \n                                svgIcon\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/icon/icon.component.ts:106\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                    \n                        Define if the icon should have a colored background.\nNOTE: This will affect layout and style.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inline\n                    \n                    \n                        Define if the icon should be aligned inline with text\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:81\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgIcon\n                    \n                    \n                        Name of the custom icon\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:87\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the icon theme\n\n                            \n                            Type:    TsStyleThemeTypes | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:106\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _background\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _background:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _svgIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _svgIcon:     TS_CUSTOM_ICON | undefined\n\n                    \n                \n                    \n                        \n                            Type :     TS_CUSTOM_ICON | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:100\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n\n                \n                    \n                        getbackground()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon/icon.component.ts:72\n                                \n                            \n\n                \n                    \n                        setbackground(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon/icon.component.ts:69\n                                \n                            \n                    \n                        \n                                Define if the icon should have a colored background.\nNOTE: This will affect layout and style.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        svgIcon\n                    \n                \n\n                \n                    \n                        getsvgIcon()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon/icon.component.ts:97\n                                \n                            \n\n                \n                    \n                        setsvgIcon(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon/icon.component.ts:87\n                                \n                            \n                    \n                        \n                                Name of the custom icon\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Icons\n\n\n\n\nTable of Contents\n\nBasic usage\nTheming\nStyle with CSS\nUsage inline with text\nCustom Icons\nAvailable\n\n\n\n\nBasic usage\nInclude any valid Material icon name inside the component:\nhomeIf the icon name consists of multiple words, use underscores between the words:\nopen_in_new\nSee all valid icon possibilities: https://material.io/icons\n\nTheming\nIcons support the same themes as the rest of the components:\nSearch for TsStyleThemeTypes to see all allowed types.\nStyle with CSS\nTo style with CSS, simply target the fill inside the ts-icon class:\n.myClass {\n  .ts-icon {\n    fill: color(accent);\n  }\n}Usage inline with text\nTo size and space the icons correctly for use within a block of text:\nCustom Icons\nCustom icons are accessed via a ts-icon @Input:\n\nhome\n\n\nAvailable\n\n\n\nName\nDescription\n\n\n\n\ncsv\nA file with the text 'CSV'\n\n\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n  isDevMode,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { CSV_ICON } from './custom-icons/csv';\n\n\n/**\n * Currently supported custom icons\n */\nexport type TS_CUSTOM_ICON\n  = 'csv'\n;\n\n\n/**\n * An array of supported custom icons.\n */\nexport const TS_CUSTOM_ICONS: TS_CUSTOM_ICON[] = [\n  'csv',\n];\n\n\n/**\n * This is the icon UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-icon`: Placed on the primary container\n *\n * @example\n * home\n * help\n *\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n  host: {\n    class: 'ts-icon',\n    '[class.ts-icon--inline]': 'inline',\n    '[class.ts-icon--primary]': 'theme === \"primary\"',\n    '[class.ts-icon--accent]': 'theme === \"accent\"',\n    '[class.ts-icon--warn]': 'theme === \"warn\"',\n    '[class.ts-icon--background]': 'background',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsIcon',\n})\nexport class TsIconComponent {\n  /**\n   * Define if the icon should have a colored background.\n   *\n   * NOTE: This will affect layout and style.\n   */\n  @Input()\n  public set background(value: boolean) {\n    this._background = coerceBooleanProperty(value);\n  }\n  public get background(): boolean {\n    return this._background;\n  }\n  private _background: boolean = false;\n\n  /**\n   * Define if the icon should be aligned inline with text\n   */\n  @Input()\n  public inline: boolean = false;\n\n  /**\n   * Name of the custom icon\n   */\n  @Input()\n  public set svgIcon(value: TS_CUSTOM_ICON | undefined) {\n    // If an unsupported value is passed in\n    if (value && TS_CUSTOM_ICONS.indexOf(value) \n    \n\n    \n        \n  \n\n\n\n\n  \n\n\n\n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsIconModule.html":{"url":"modules/TsIconModule.html","title":"module - TsIconModule","body":"\n                   \n\n\n\n\n  Modules\n  TsIconModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsIconModule\n\n\n\ncluster_TsIconModule_declarations\n\n\n\ncluster_TsIconModule_exports\n\n\n\n\nTsIconComponent\n\nTsIconComponent\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsIconModule -->\n\nTsIconComponent->TsIconModule\n\n\n\n\n\nTsIconComponent \n\nTsIconComponent \n\nTsIconComponent  -->\n\nTsIconModule->TsIconComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/icon/icon.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsIconComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsIconComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TsIconComponent } from './icon.component';\n\nexport * from './icon.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TsIconComponent,\n  ],\n  exports: [\n    TsIconComponent,\n  ],\n})\nexport class TsIconModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsImageDimensions.html":{"url":"classes/TsImageDimensions.html","title":"class - TsImageDimensions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsImageDimensions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/image-dimensions.ts\n        \n\n            \n                Description\n            \n            \n                A class to store dimensions for an image\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                height\n                            \n                            \n                                    Public\n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(width: number, height: number)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/file-upload/image-dimensions.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        width\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        height\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/image-dimensions.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/image-dimensions.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TsImageDimensions {\n  constructor(\n    public width: number,\n    public height: number,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsInputModule.html":{"url":"modules/TsInputModule.html","title":"module - TsInputModule","body":"\n                   \n\n\n\n\n  Modules\n  TsInputModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsInputModule\n\n\n\ncluster_TsInputModule_declarations\n\n\n\ncluster_TsInputModule_TsInputComponent_providers\n\n\n\ncluster_TsInputModule_imports\n\n\n\ncluster_TsInputModule_exports\n\n\n\ncluster_TsInputModule_providers\n\n\n\n\nTsInputComponent\n\nTsInputComponent\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsInputModule -->\n\nTsInputComponent->TsInputModule\n\n\n\n\n\nTsInputComponent \n\nTsInputComponent \n\nTsInputComponent  -->\n\nTsInputModule->TsInputComponent \n\n\n\n\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n\nTsInputComponent -->\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR->TsInputComponent\n\n\n\n\n\nTsAutofocusModule\n\nTsAutofocusModule\n\nTsInputModule -->\n\nTsAutofocusModule->TsInputModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsInputModule -->\n\nTsIconModule->TsInputModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsInputModule -->\n\nTsValidationMessagesModule->TsInputModule\n\n\n\n\n\nTsValidatorsService\n\nTsValidatorsService\n\nTsInputModule -->\n\nTsValidatorsService->TsInputModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/input/input.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsInputComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsValidatorsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsAutofocusModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsInputComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material/input';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\n\nimport { TsAutofocusModule } from './../autofocus/autofocus.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsValidatorsService } from './../validators/validators.service';\nimport { TsInputComponent } from './input.component';\n\nexport * from './input.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    TsValidationMessagesModule,\n    TsIconModule,\n    TsAutofocusModule,\n  ],\n  providers: [\n    TsValidatorsService,\n  ],\n  exports: [\n    TsInputComponent,\n  ],\n  declarations: [\n    TsInputComponent,\n  ],\n})\nexport class TsInputModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsLinkComponent.html":{"url":"components/TsLinkComponent.html","title":"component - TsLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsLinkComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/link/link.component.ts\n\n\n    \n        Description\n    \n    \n        This is the link UI Component\nQA CSS CLASSES\n\nqa-link: Placed on the link element\nqa-link-internal: Placed on the link element if the link is internal\nqa-link-external: Placed on the link element if the link is external\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    My link\n\nMy link\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsLink\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-link\n            \n\n            \n                styleUrls\n                link.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./link.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                externalIcon\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                destination\n                            \n                            \n                                isExternal\n                            \n                            \n                                tabIndex\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        destination\n                    \n                    \n                        Define the link's destination\n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/link/link.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isExternal\n                    \n                    \n                        Define if the link is to an external page\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/link/link.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                    \n                        Define the tabindex\n\n                            \n                            Type:    number\n\n                            \n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/link/link.component.ts:65\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            externalIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        externalIcon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : `open_in_new`\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/link/link.component.ts:47\n                            \n                        \n\n                \n                    \n                        Define the icon for external links\n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Link\n\n\n\n\nTable of Contents\n\nBasic usage\nExternal links\nTab index\n\n\nBasic usage\nWrap your link text and define a destination:\nMy linkExternal links\nTo signify a link will leave the current app or site, set external to true:\nMy link\nNOTE: When external is set to true, the link should be a standard link in string form.\n\nTab index\nA custom tabindex can also be set:\nMy link\n    \n\n    \n        import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\n\n\n/**\n * This is the link UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-link`: Placed on the link element\n * - `qa-link-internal`: Placed on the link element if the link is internal\n * - `qa-link-external`: Placed on the link element if the link is external\n *\n * @example\n * My link\n *\n * My link\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-link',\n  templateUrl: './link.component.html',\n  styleUrls: ['./link.component.scss'],\n  host: {\n    class: 'ts-link',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsLink',\n})\nexport class TsLinkComponent {\n  /**\n   * Define the icon for external links\n   */\n  public externalIcon: string = `open_in_new`;\n\n  /**\n   * Define the link's destination\n   */\n  @Input()\n  public destination: any;\n\n  /**\n   * Define if the link is to an external page\n   */\n  @Input()\n  public isExternal: boolean = false;\n\n  /**\n   * Define the tabindex\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n\n  \n    open_in_new\n  \n\n\n\n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          open_in_new    '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsLinkModule.html":{"url":"modules/TsLinkModule.html","title":"module - TsLinkModule","body":"\n                   \n\n\n\n\n  Modules\n  TsLinkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsLinkModule\n\n\n\ncluster_TsLinkModule_declarations\n\n\n\ncluster_TsLinkModule_imports\n\n\n\ncluster_TsLinkModule_exports\n\n\n\n\nTsLinkComponent\n\nTsLinkComponent\n\n\n\nTsLinkModule\n\nTsLinkModule\n\nTsLinkModule -->\n\nTsLinkComponent->TsLinkModule\n\n\n\n\n\nTsLinkComponent \n\nTsLinkComponent \n\nTsLinkComponent  -->\n\nTsLinkModule->TsLinkComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsLinkModule -->\n\nTsIconModule->TsLinkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/link/link.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsLinkComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsLinkComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsLinkComponent } from './link.component';\n\nexport * from './link.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    TsIconModule,\n  ],\n  exports: [\n    TsLinkComponent,\n  ],\n  declarations: [\n    TsLinkComponent,\n  ],\n})\nexport class TsLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsLoadingOverlayComponent.html":{"url":"components/TsLoadingOverlayComponent.html","title":"component - TsLoadingOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsLoadingOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/loading-overlay/loading-overlay.component.ts\n\n\n    \n        Description\n    \n    \n        The loading overlay component. Implemented by TsLoadingOverlayDirective\nQA CSS CLASSES\n\nqa-loading-overlay: Placed on the div overlay containing the loading spinner\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    See {\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsLoadingOverlay\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-loading-overlay\n            \n\n            \n                styleUrls\n                loading-overlay.component.scss\n            \n\n\n            \n                template\n                \n  \n    \n  \n\n\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\n\n\n/**\n * The loading overlay component. Implemented by {@link TsLoadingOverlayDirective}\n *\n * #### QA CSS CLASSES\n * - `qa-loading-overlay`: Placed on the div overlay containing the loading spinner\n *\n * @example\n * See {@link TsLoadingOverlayDirective}\n */\n@Component({\n  selector: 'ts-loading-overlay',\n  styleUrls: ['./loading-overlay.component.scss'],\n  host: {\n    class: 'ts-loading-overlay',\n  },\n  template: `\n    \n      \n        \n      \n    \n  `,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsLoadingOverlay',\n})\nexport class TsLoadingOverlayComponent {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsLoadingOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsLoadingOverlayDirective.html":{"url":"directives/TsLoadingOverlayDirective.html","title":"directive - TsLoadingOverlayDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsLoadingOverlayDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/loading-overlay/loading-overlay.directive.ts\n        \n\n            \n                Description\n            \n            \n                The tsLoadingOverlay UI Directive.\nProvides a spinner overlay to demonstrate loading for async data.\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n            \n                Example\n            \n            \n                        \n                            \n\nhttps://goo.gl/ieUPaG\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsLoadingOverlay]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bodyPortalHost\n                            \n                            \n                                    Private\n                                loadingOverlayPortal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                determinePosition\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsLoadingOverlay\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.position\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, windowService: TsWindowService, componentFactoryResolver: ComponentFactoryResolver, appRef: ApplicationRef, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:59\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        windowService\n                                                  \n                                                        \n                                                                    TsWindowService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        appRef\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tsLoadingOverlay\n                    \n                    \n                        Define a setter to show/hide the loading overlay\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:46\n                            \n                        \n            \n        \n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            style.position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        style.position:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:59\n                            \n                        \n\n                \n                    \n                        Alias the position back onto the component as a style attribute\n\n                    \n                \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            determinePosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        determinePosition(position: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:114\n                            \n                        \n\n\n                \n                    \n                            Return the correct position\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        position\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The current position value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The correct position value\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:101\n                            \n                        \n\n\n                \n                    \n                            Destroy the portal host if it exists\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:88\n                            \n                        \n\n\n                \n                    \n                            Determine and set the needed position\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bodyPortalHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bodyPortalHost:     DomPortalHost\n\n                    \n                \n                    \n                        \n                            Type :     DomPortalHost\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:40\n                            \n                        \n\n                \n                    \n                        Reference to our portal host\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingOverlayPortal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingOverlayPortal:     ComponentPortal\n\n                    \n                \n                    \n                        \n                            Type :     ComponentPortal\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:35\n                            \n                        \n\n                \n                    \n                        A reference to the portal\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tsLoadingOverlay\n                    \n                \n\n\n                \n                    \n                        settsLoadingOverlay(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:46\n                                \n                            \n                    \n                        \n                                Define a setter to show/hide the loading overlay\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnDestroy,\n  HostBinding,\n  ComponentFactoryResolver,\n  ApplicationRef,\n  Injector,\n} from '@angular/core';\nimport { ComponentPortal, DomPortalHost } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { TsWindowService } from '@terminus/ngx-tools';\n\nimport { TsLoadingOverlayComponent } from './loading-overlay.component';\n\n\n/**\n * The tsLoadingOverlay UI Directive.\n * Provides a spinner overlay to demonstrate loading for async data.\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Directive({\n  selector: '[tsLoadingOverlay]',\n})\nexport class TsLoadingOverlayDirective implements OnInit, OnDestroy {\n  /**\n   * A reference to the portal\n   */\n  private loadingOverlayPortal: ComponentPortal;\n\n  /**\n   * Reference to our portal host\n   */\n  private bodyPortalHost: DomPortalHost;\n\n  /**\n   * Define a setter to show/hide the loading overlay\n   */\n  @Input()\n  public set tsLoadingOverlay(value: boolean) {\n    const shouldSet = coerceBooleanProperty(value);\n    if (shouldSet) {\n      this.bodyPortalHost.attach(this.loadingOverlayPortal);\n    } else {\n      this.bodyPortalHost.detach();\n    }\n  }\n\n  /**\n   * Alias the position back onto the component as a style attribute\n   */\n  @HostBinding('style.position')\n  public position!: string;\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private elementRef: ElementRef,\n    private windowService: TsWindowService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector,\n  ) {\n    // Create the body portal host\n    this.bodyPortalHost = new DomPortalHost(\n      this.elementRef.nativeElement,\n      this.componentFactoryResolver,\n      this.appRef,\n      this.injector,\n    );\n\n    // Create the component portal\n    this.loadingOverlayPortal = new ComponentPortal(TsLoadingOverlayComponent);\n  }\n\n\n  /**\n   * Determine and set the needed position\n   */\n  public ngOnInit(): void {\n    // Determine the CSS position of the element\n    const position = this.windowService.nativeWindow\n      .getComputedStyle(this.elementRef.nativeElement).getPropertyValue('position');\n\n    // Set the position\n    this.position = this.determinePosition(position);\n  }\n\n\n  /**\n   * Destroy the portal host if it exists\n   */\n  public ngOnDestroy(): void {\n    if (this.bodyPortalHost) {\n      this.bodyPortalHost.dispose();\n    }\n  }\n\n\n  /**\n   * Return the correct position\n   *\n   * @param position The current position value\n   * @return The correct position value\n   */\n  private determinePosition(position: string): string {\n    return (position === 'relative' || position === 'absolute') ? position : 'relative';\n  }\n\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsLoadingOverlayModule.html":{"url":"modules/TsLoadingOverlayModule.html","title":"module - TsLoadingOverlayModule","body":"\n                   \n\n\n\n\n  Modules\n  TsLoadingOverlayModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsLoadingOverlayModule\n\n\n\ncluster_TsLoadingOverlayModule_declarations\n\n\n\ncluster_TsLoadingOverlayModule_exports\n\n\n\n\nTsLoadingOverlayComponent\n\nTsLoadingOverlayComponent\n\n\n\nTsLoadingOverlayModule\n\nTsLoadingOverlayModule\n\nTsLoadingOverlayModule -->\n\nTsLoadingOverlayComponent->TsLoadingOverlayModule\n\n\n\n\n\nTsLoadingOverlayDirective\n\nTsLoadingOverlayDirective\n\nTsLoadingOverlayModule -->\n\nTsLoadingOverlayDirective->TsLoadingOverlayModule\n\n\n\n\n\nTsLoadingOverlayDirective \n\nTsLoadingOverlayDirective \n\nTsLoadingOverlayDirective  -->\n\nTsLoadingOverlayModule->TsLoadingOverlayDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/loading-overlay/loading-overlay.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsLoadingOverlayComponent\n                            \n                            \n                                TsLoadingOverlayDirective\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TsLoadingOverlayComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsLoadingOverlayDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsLoadingOverlayComponent } from './loading-overlay.component';\nimport { TsLoadingOverlayDirective } from './loading-overlay.directive';\n\nexport * from './loading-overlay.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TsLoadingOverlayDirective,\n    TsLoadingOverlayComponent,\n  ],\n  entryComponents: [\n    TsLoadingOverlayComponent,\n  ],\n  exports: [\n    TsLoadingOverlayDirective,\n  ],\n})\nexport class TsLoadingOverlayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsLoginFormComponent.html":{"url":"components/TsLoginFormComponent.html","title":"component - TsLoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsLoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        This is the login-form UI Component\nQA CSS CLASSES\n\nqa-login-form: Placed on the form element which contains this component\nqa-login-form-email: Placed on the TsInputComponent used for the \"email\" field\nqa-login-form-password: Placed on the TsInputComponent used for the \"password\" field\nqa-login-form-remember-me: Placed on the TsCheckboxComponent used for the \"remember\nme\" checkbox\nqa-login-form-forgot-password: Placed on the TsLinkComponent used for the \"forgot\npassword\" link\nqa-login-form-submit: Placed on the TsButtonComponent used for the submit button\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsLoginForm\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-login-form\n            \n\n            \n                styleUrls\n                login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkbox\n                            \n                            \n                                    Private\n                                FORM_GROUP\n                            \n                            \n                                inputComponents\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                PASSWORD_MINLENGTH\n                            \n                            \n                                    Public\n                                showForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Private\n                                resetForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                forgotPasswordLink\n                            \n                            \n                                forgotPasswordText\n                            \n                            \n                                inProgress\n                            \n                            \n                                isRedirecting\n                            \n                            \n                                loginCTA\n                            \n                            \n                                triggerFormReset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, validatorsService: TsValidatorsService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/login-form/login-form.component.ts:170\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        validatorsService\n                                                  \n                                                        \n                                                                    TsValidatorsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        forgotPasswordLink\n                    \n                    \n                        Define the link to the 'forgot password' view\n\n                            \n                            Type:    string[]\n\n                            \n                        \n                            Default value: ['/forgot']\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:134\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        forgotPasswordText\n                    \n                    \n                        Define the text for the 'forgot password' link\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Forgot your password?'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:140\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inProgress\n                    \n                    \n                        Define if the form button is showing progress\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:146\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRedirecting\n                    \n                    \n                        Define if the user has successfully logged in and is being redirected\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:152\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loginCTA\n                    \n                    \n                        Define the login call to action\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Log In'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:158\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        triggerFormReset\n                    \n                    \n                        Allow a consumer to reset the form via an input\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:164\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        submit\n                    \n                    \n                        Emit an event on form submission\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:170\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:188\n                            \n                        \n\n\n                \n                    \n                            Trigger a form reset if triggerFormReset is changed to TRUE\n(explanation at resetForm method)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe inputs that have changed\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resetForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:205\n                            \n                        \n\n\n                \n                    \n                            Reset the form\nThis is a hack. Currently there doesn't seem to be a good way to reset the form value and\nvalidations without simply re-initializing the form each time.\nHACK: The showForm value is a 'hack' to reset the input validation styles by removing the\nform from the dom and re-adding it. This method won't break if the Material team changes any\nvalidation classes but it may be more performant to simply remove the classes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkbox:     TsCheckboxComponent\n\n                    \n                \n                    \n                        \n                            Type :     TsCheckboxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:128\n                            \n                        \n\n                \n                    \n                        Provide access to the checkbox inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            FORM_GROUP\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FORM_GROUP:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    email: [\n      null,\n      [\n        Validators.required,\n        this.validatorsService.email(),\n      ],\n    ],\n    password: [\n      null,\n      [\n        Validators.required,\n      ],\n    ],\n    rememberMe: [\n      false,\n    ],\n  }\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:84\n                            \n                        \n\n                \n                    \n                        Define the form group for re-use\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputComponents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputComponents:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:122\n                            \n                        \n\n                \n                    \n                        Provide access to the text inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup | null\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup | null\n\n                        \n                    \n                    \n                        \n                            Default value : this.formBuilder.group(this.FORM_GROUP)\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:111\n                            \n                        \n\n                \n                    \n                        Initialize the login form\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            PASSWORD_MINLENGTH\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PASSWORD_MINLENGTH:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 8\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:106\n                            \n                        \n\n                \n                    \n                        Define the minimum length for a password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showForm:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:116\n                            \n                        \n\n                \n                    \n                        Define a flag to add/remove the form from the DOM\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\n\nimport { TsInputComponent } from './../input/input.component';\nimport { TsCheckboxComponent } from './../checkbox/checkbox.component';\nimport { TsValidatorsService } from './../validators/validators.service';\n\n\n/**\n * Define the structure of the login form response\n */\nexport interface TsLoginFormResponse {\n  /**\n   * User's email\n   */\n  email: string;\n\n  /**\n   * User's password\n   */\n  password: string;\n\n  /**\n   * Flag determining if a cookie should be set\n   */\n  rememberMe: boolean;\n}\n\n\n/**\n * This is the login-form UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-login-form`: Placed on the form element which contains this component\n * - `qa-login-form-email`: Placed on the {@link TsInputComponent} used for the \"email\" field\n * - `qa-login-form-password`: Placed on the {@link TsInputComponent} used for the \"password\" field\n * - `qa-login-form-remember-me`: Placed on the {@link TsCheckboxComponent} used for the \"remember\n * me\" checkbox\n * - `qa-login-form-forgot-password`: Placed on the {@link TsLinkComponent} used for the \"forgot\n * password\" link\n * - `qa-login-form-submit`: Placed on the {@link TsButtonComponent} used for the submit button\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n  host: {\n    class: 'ts-login-form',\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsLoginForm',\n})\nexport class TsLoginFormComponent implements OnChanges {\n  /**\n   * Define the form group for re-use\n   */\n  private FORM_GROUP = {\n    email: [\n      null,\n      [\n        Validators.required,\n        this.validatorsService.email(),\n      ],\n    ],\n    password: [\n      null,\n      [\n        Validators.required,\n      ],\n    ],\n    rememberMe: [\n      false,\n    ],\n  };\n\n  /**\n   * Define the minimum length for a password\n   */\n  public PASSWORD_MINLENGTH: number = 8;\n\n  /**\n   * Initialize the login form\n   */\n  public loginForm: FormGroup | null = this.formBuilder.group(this.FORM_GROUP);\n\n  /**\n   * Define a flag to add/remove the form from the DOM\n   */\n  public showForm: boolean = true;\n\n  /**\n   * Provide access to the text inputs\n   */\n  @ViewChildren(TsInputComponent)\n  inputComponents!: QueryList;\n\n  /**\n   * Provide access to the checkbox inputs\n   */\n  @ViewChild(TsCheckboxComponent)\n  checkbox!: TsCheckboxComponent;\n\n  /**\n   * Define the link to the 'forgot password' view\n   */\n  @Input()\n  public forgotPasswordLink: string[] = ['/forgot'];\n\n  /**\n   * Define the text for the 'forgot password' link\n   */\n  @Input()\n  public forgotPasswordText: string = 'Forgot your password?';\n\n  /**\n   * Define if the form button is showing progress\n   */\n  @Input()\n  public inProgress: boolean = false;\n\n  /**\n   * Define if the user has successfully logged in and is being redirected\n   */\n  @Input()\n  public isRedirecting: boolean = false;\n\n  /**\n   * Define the login call to action\n   */\n  @Input()\n  public loginCTA: string = 'Log In';\n\n  /**\n   * Allow a consumer to reset the form via an input\n   */\n  @Input()\n  public triggerFormReset: boolean = false;\n\n  /**\n   * Emit an event on form submission\n   */\n  @Output()\n  public submit: EventEmitter = new EventEmitter;\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private validatorsService: TsValidatorsService,\n  ) {}\n\n\n  /**\n   * Trigger a form reset if `triggerFormReset` is changed to TRUE\n   * (explanation at `resetForm` method)\n   *\n   * @param changes - The inputs that have changed\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('triggerFormReset')) {\n      this.resetForm();\n    }\n  }\n\n\n  /**\n   * Reset the form\n   *\n   * This is a hack. Currently there doesn't seem to be a good way to reset the form value and\n   * validations without simply re-initializing the form each time.\n   *\n   * HACK: The `showForm` value is a 'hack' to reset the input validation styles by removing the\n   * form from the dom and re-adding it. This method won't break if the Material team changes any\n   * validation classes but it may be more performant to simply remove the classes.\n   */\n  private resetForm(): void {\n    // Destroy the form\n    this.showForm = false;\n\n    // Clear out the form\n    this.loginForm = null;\n\n    // Re-initialize the form\n    this.loginForm = this.formBuilder.group(this.FORM_GROUP);\n\n    // This timeout lets one change detection cycle pass so that the form is actually removed from\n    // the DOM\n    setTimeout(() => {\n      // Add the form back to the DOM\n      this.showForm = true;\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n  \n\n  \n    Remember me\n  \n\n  {{ forgotPasswordText }}\n\n  \n    \n      {{ loginCTA }}\n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Remember me    {{ forgotPasswordText }}            {{ loginCTA }}      '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsLoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsLoginFormModule.html":{"url":"modules/TsLoginFormModule.html","title":"module - TsLoginFormModule","body":"\n                   \n\n\n\n\n  Modules\n  TsLoginFormModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsLoginFormModule\n\n\n\ncluster_TsLoginFormModule_declarations\n\n\n\ncluster_TsLoginFormModule_imports\n\n\n\ncluster_TsLoginFormModule_exports\n\n\n\ncluster_TsLoginFormModule_providers\n\n\n\n\nTsLoginFormComponent\n\nTsLoginFormComponent\n\n\n\nTsLoginFormModule\n\nTsLoginFormModule\n\nTsLoginFormModule -->\n\nTsLoginFormComponent->TsLoginFormModule\n\n\n\n\n\nTsLoginFormComponent \n\nTsLoginFormComponent \n\nTsLoginFormComponent  -->\n\nTsLoginFormModule->TsLoginFormComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsLoginFormModule -->\n\nTsButtonModule->TsLoginFormModule\n\n\n\n\n\nTsCheckboxModule\n\nTsCheckboxModule\n\nTsLoginFormModule -->\n\nTsCheckboxModule->TsLoginFormModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsLoginFormModule -->\n\nTsInputModule->TsLoginFormModule\n\n\n\n\n\nTsLinkModule\n\nTsLinkModule\n\nTsLoginFormModule -->\n\nTsLinkModule->TsLoginFormModule\n\n\n\n\n\nTsSpacingModule\n\nTsSpacingModule\n\nTsLoginFormModule -->\n\nTsSpacingModule->TsLoginFormModule\n\n\n\n\n\nTsValidatorsService\n\nTsValidatorsService\n\nTsLoginFormModule -->\n\nTsValidatorsService->TsLoginFormModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/login-form/login-form.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsLoginFormComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsValidatorsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsCheckboxModule\n                            \n                            \n                                    TsInputModule\n                            \n                            \n                                    TsLinkModule\n                            \n                            \n                                    TsSpacingModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsLoginFormComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TsValidatorsService } from './../validators/validators.service';\nimport { TsInputModule } from './../input/input.module';\nimport { TsCheckboxModule } from './../checkbox/checkbox.module';\nimport { TsButtonModule } from './../button/button.module';\nimport { TsSpacingModule } from './../spacing/spacing.module';\nimport { TsLinkModule } from './../link/link.module';\nimport { TsLoginFormComponent } from './login-form.component';\n\nexport * from './login-form.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    TsInputModule,\n    TsCheckboxModule,\n    TsSpacingModule,\n    TsButtonModule,\n    TsLinkModule,\n  ],\n  providers: [\n    TsValidatorsService,\n  ],\n  exports: [\n    TsLoginFormComponent,\n  ],\n  declarations: [\n    TsLoginFormComponent,\n  ],\n})\nexport class TsLoginFormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsLoginFormResponse.html":{"url":"interfaces/TsLoginFormResponse.html","title":"interface - TsLoginFormResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsLoginFormResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/login-form/login-form.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the structure of the login form response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                                \n                                        rememberMe\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rememberMe\n                                    \n                                \n                                \n                                    \n                                        rememberMe:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag determining if a cookie should be set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\n\nimport { TsInputComponent } from './../input/input.component';\nimport { TsCheckboxComponent } from './../checkbox/checkbox.component';\nimport { TsValidatorsService } from './../validators/validators.service';\n\n\n/**\n * Define the structure of the login form response\n */\nexport interface TsLoginFormResponse {\n  /**\n   * User's email\n   */\n  email: string;\n\n  /**\n   * User's password\n   */\n  password: string;\n\n  /**\n   * Flag determining if a cookie should be set\n   */\n  rememberMe: boolean;\n}\n\n\n/**\n * This is the login-form UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-login-form`: Placed on the form element which contains this component\n * - `qa-login-form-email`: Placed on the {@link TsInputComponent} used for the \"email\" field\n * - `qa-login-form-password`: Placed on the {@link TsInputComponent} used for the \"password\" field\n * - `qa-login-form-remember-me`: Placed on the {@link TsCheckboxComponent} used for the \"remember\n * me\" checkbox\n * - `qa-login-form-forgot-password`: Placed on the {@link TsLinkComponent} used for the \"forgot\n * password\" link\n * - `qa-login-form-submit`: Placed on the {@link TsButtonComponent} used for the submit button\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n  host: {\n    class: 'ts-login-form',\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsLoginForm',\n})\nexport class TsLoginFormComponent implements OnChanges {\n  /**\n   * Define the form group for re-use\n   */\n  private FORM_GROUP = {\n    email: [\n      null,\n      [\n        Validators.required,\n        this.validatorsService.email(),\n      ],\n    ],\n    password: [\n      null,\n      [\n        Validators.required,\n      ],\n    ],\n    rememberMe: [\n      false,\n    ],\n  };\n\n  /**\n   * Define the minimum length for a password\n   */\n  public PASSWORD_MINLENGTH: number = 8;\n\n  /**\n   * Initialize the login form\n   */\n  public loginForm: FormGroup | null = this.formBuilder.group(this.FORM_GROUP);\n\n  /**\n   * Define a flag to add/remove the form from the DOM\n   */\n  public showForm: boolean = true;\n\n  /**\n   * Provide access to the text inputs\n   */\n  @ViewChildren(TsInputComponent)\n  inputComponents!: QueryList;\n\n  /**\n   * Provide access to the checkbox inputs\n   */\n  @ViewChild(TsCheckboxComponent)\n  checkbox!: TsCheckboxComponent;\n\n  /**\n   * Define the link to the 'forgot password' view\n   */\n  @Input()\n  public forgotPasswordLink: string[] = ['/forgot'];\n\n  /**\n   * Define the text for the 'forgot password' link\n   */\n  @Input()\n  public forgotPasswordText: string = 'Forgot your password?';\n\n  /**\n   * Define if the form button is showing progress\n   */\n  @Input()\n  public inProgress: boolean = false;\n\n  /**\n   * Define if the user has successfully logged in and is being redirected\n   */\n  @Input()\n  public isRedirecting: boolean = false;\n\n  /**\n   * Define the login call to action\n   */\n  @Input()\n  public loginCTA: string = 'Log In';\n\n  /**\n   * Allow a consumer to reset the form via an input\n   */\n  @Input()\n  public triggerFormReset: boolean = false;\n\n  /**\n   * Emit an event on form submission\n   */\n  @Output()\n  public submit: EventEmitter = new EventEmitter;\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private validatorsService: TsValidatorsService,\n  ) {}\n\n\n  /**\n   * Trigger a form reset if `triggerFormReset` is changed to TRUE\n   * (explanation at `resetForm` method)\n   *\n   * @param changes - The inputs that have changed\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('triggerFormReset')) {\n      this.resetForm();\n    }\n  }\n\n\n  /**\n   * Reset the form\n   *\n   * This is a hack. Currently there doesn't seem to be a good way to reset the form value and\n   * validations without simply re-initializing the form each time.\n   *\n   * HACK: The `showForm` value is a 'hack' to reset the input validation styles by removing the\n   * form from the dom and re-adding it. This method won't break if the Material team changes any\n   * validation classes but it may be more performant to simply remove the classes.\n   */\n  private resetForm(): void {\n    // Destroy the form\n    this.showForm = false;\n\n    // Clear out the form\n    this.loginForm = null;\n\n    // Re-initialize the form\n    this.loginForm = this.formBuilder.group(this.FORM_GROUP);\n\n    // This timeout lets one change detection cycle pass so that the form is actually removed from\n    // the DOM\n    setTimeout(() => {\n      // Add the form back to the DOM\n      this.showForm = true;\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsMaskModule.html":{"url":"modules/TsMaskModule.html","title":"module - TsMaskModule","body":"\n                   \n\n\n\n\n  Modules\n  TsMaskModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsMaskModule\n\n\n\ncluster_TsMaskModule_declarations\n\n\n\ncluster_TsMaskModule_TsMaskDirective_providers\n\n\n\ncluster_TsMaskModule_exports\n\n\n\n\nTsMaskDirective\n\nTsMaskDirective\n\n\n\nTsMaskModule\n\nTsMaskModule\n\nTsMaskModule -->\n\nTsMaskDirective->TsMaskModule\n\n\n\n\n\nTsMaskDirective \n\nTsMaskDirective \n\nTsMaskDirective  -->\n\nTsMaskModule->TsMaskDirective \n\n\n\n\n\nMASKED_INPUT_VALUE_ACCESSOR\n\nMASKED_INPUT_VALUE_ACCESSOR\n\nTsMaskDirective -->\n\nMASKED_INPUT_VALUE_ACCESSOR->TsMaskDirective\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/mask/mask.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsMaskDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsMaskDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsMaskDirective } from './mask.directive';\n\nexport * from './mask.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TsMaskDirective,\n  ],\n  exports: [\n    TsMaskDirective,\n  ],\n})\nexport class TsMaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsMenuComponent.html":{"url":"components/TsMenuComponent.html","title":"component - TsMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsMenuComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/menu/menu.component.ts\n\n\n    \n        Description\n    \n    \n        A presentational component to render a dropdown menu.\nQA CSS CLASSES\n-qa-menu: Placed on the wrapper around the menu items\n-qa-menu-trigger: Placed on the menu trigger\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    Select Item\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsMenu\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-menu\n            \n\n            \n                styleUrls\n                menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                shouldOverlapTrigger\n                            \n                            \n                                    Public\n                                trigger\n                            \n                            \n                                    Private\n                                TRIGGER_ICON_DEFAULT\n                            \n                            \n                                    Private\n                                TRIGGER_ICON_UTILITY\n                            \n                            \n                                    Public\n                                triggerIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                defaultOpened\n                            \n                            \n                                format\n                            \n                            \n                                isDisabled\n                            \n                            \n                                menuItemsTemplate\n                            \n                            \n                                menuPositionX\n                            \n                            \n                                menuPositionY\n                            \n                            \n                                theme\n                            \n                            \n                                triggerType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        defaultOpened\n                    \n                    \n                        Define if the menu should be opened by default\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:115\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        format\n                    \n                    \n                        Define the button format\n\n                            \n                            Type:    TsButtonFormatTypes\n\n                            \n                        \n                            Default value: 'filled'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:151\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the menu should be disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:121\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuItemsTemplate\n                    \n                    \n                        Allow a custom template for menu items\n\n                            \n                            Type:    TemplateRef\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:127\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuPositionX\n                    \n                    \n                        Define the X menu position\n\n                            \n                            Type:    TsMenuPositionTypesX\n\n                            \n                        \n                            Default value: 'after'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:133\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuPositionY\n                    \n                    \n                        Define the Y menu position\n\n                            \n                            Type:    TsMenuPositionTypesY\n\n                            \n                        \n                            Default value: 'below'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:139\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the menu theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:145\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        triggerType\n                    \n                    \n                        Define the type of trigger TsMenuTriggerTypes\n\n'utility' will expose a simple fab trigger: ⋮\n'default' will expose a standard TsButtonComponent\n\n\n                            \n                            Type:    TsMenuTriggerTypes\n\n                            \n                        \n                            Default value: 'default'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:160\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:175\n                            \n                        \n\n\n                \n                    \n                            After the view has initialized, open the menu if it is defaulted to 'open'\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:166\n                            \n                        \n\n\n                \n                    \n                            Set the triggerIcon based on the triggerType\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldOverlapTrigger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shouldOverlapTrigger:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:98\n                            \n                        \n\n                \n                    \n                        Define if the menu should overlap the trigger\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trigger:     MatMenuTrigger\n\n                    \n                \n                    \n                        \n                            Type :     MatMenuTrigger\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:109\n                            \n                        \n\n                \n                    \n                        Provide access to the trigger\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            TRIGGER_ICON_DEFAULT\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TRIGGER_ICON_DEFAULT:     \n\n                    \n                \n                    \n                        \n                            Default value : 'arrow_drop_down'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:81\n                            \n                        \n\n                \n                    \n                        Define the default icon for the trigger button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            TRIGGER_ICON_UTILITY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TRIGGER_ICON_UTILITY:     \n\n                    \n                \n                    \n                        \n                            Default value : 'more_vert'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:86\n                            \n                        \n\n                \n                    \n                        Define the utility icon for the trigger button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            triggerIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        triggerIcon:     \"arrow_drop_down\" | \"more_vert\"\n\n                    \n                \n                    \n                        \n                            Type :     \"arrow_drop_down\" | \"more_vert\"\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:103\n                            \n                        \n\n                \n                    \n                        The icon to be used in the trigger button\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isUtilityMenu\n                    \n                \n\n                \n                    \n                        getisUtilityMenu()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/menu/menu.component.ts:91\n                                \n                            \n                    \n                        \n                                Return if the current menu is a utility menu\n\n\n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n    \n        \n\nTable of Contents\n\nBasic Usage\nCheckbox Menu\n\n\nBasic Usage\n\n\n  Select Item\n\n\n\n\n  \n    Roger, Roger.\n  \n\n  \n    A tasty link\n  \nThis allows all selection functionality to be handled by the consuming application rather than being\nproxied through event emitters.\n\nNOTE:  and  will be styled the same within a menu.\n\nCheckbox Menu\n\nThis is very similar to the basic usage example, with a few small, key differences.\n\nCreate the form and array of possible options:\n// The list of column names to show in the UI\ncolumns = [\n  'Title',\n  'Account',\n  'Budget',\n  'Enabled',\n];\n// We are creating a form array with 4 controls all defaulted to 'true'\nmyForm = this.formBuilder.group({\n  showColumns: this.formBuilder.array([true, true, true, true]),\n});Create the menu trigger and the dropdown contents:\n\n\n  Select Item\n\n\n\n\n  \n    \n    \n      \n      \n        \n        {{ columns[i] }}\n      \n    \n  \n\nNOTE: In this example, the form is stand-alone so the entire form is nested inside the menu\ntemplate. If this were part of a larger form, the form element would be higher in the DOM\nhierarchy.\n\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  ViewChild,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ElementRef,\n  TemplateRef,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsButtonFormatTypes } from '../button/button.component';\n\n\n/**\n * Define the allowed X positions for a menu\n */\nexport type TsMenuPositionTypesX =\n  'before'\n  | 'after'\n;\n\n\n/**\n * Define the allowed Y positions for a menu\n */\nexport type TsMenuPositionTypesY =\n  'above'\n  | 'below'\n;\n\n\n/**\n * Define the allowed trigger types for a menu\n */\nexport type TsMenuTriggerTypes\n  = 'default'\n  | 'utility'\n;\n\n\n/**\n * A presentational component to render a dropdown menu.\n *\n * #### QA CSS CLASSES\n * -`qa-menu`: Placed on the wrapper around the menu items\n * -`qa-menu-trigger`: Placed on the menu trigger\n *\n * @example\n * Select Item\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n  host: {\n    class: 'ts-menu',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsMenu',\n})\nexport class TsMenuComponent implements AfterViewInit, OnInit {\n  /**\n   * Define the default icon for the trigger button\n   */\n  private TRIGGER_ICON_DEFAULT: 'arrow_drop_down' = 'arrow_drop_down';\n\n  /**\n   * Define the utility icon for the trigger button\n   */\n  private TRIGGER_ICON_UTILITY: 'more_vert' = 'more_vert';\n\n  /**\n   * Return if the current menu is a utility menu\n   */\n  public get isUtilityMenu(): boolean {\n    return this.triggerType === 'utility';\n  }\n\n  /**\n   * Define if the menu should overlap the trigger\n   */\n  public shouldOverlapTrigger: boolean = false;\n\n  /**\n   * The icon to be used in the trigger button\n   */\n  public triggerIcon!: 'arrow_drop_down' | 'more_vert';\n\n  /**\n   * Provide access to the trigger\n   */\n  @ViewChild(MatMenuTrigger)\n  public trigger!: MatMenuTrigger;\n\n  /**\n   * Define if the menu should be opened by default\n   */\n  @Input()\n  public defaultOpened: boolean = false;\n\n  /**\n   * Define if the menu should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Allow a custom template for menu items\n   */\n  @Input()\n  public menuItemsTemplate!: TemplateRef;\n\n  /**\n   * Define the X menu position\n   */\n  @Input()\n  public menuPositionX: TsMenuPositionTypesX = 'after';\n\n  /**\n   * Define the Y menu position\n   */\n  @Input()\n  public menuPositionY: TsMenuPositionTypesY = 'below';\n\n  /**\n   * Define the menu theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define the button format\n   */\n  @Input()\n  public format: TsButtonFormatTypes = 'filled';\n\n  /**\n   * Define the type of trigger {@link TsMenuTriggerTypes}\n   *\n   * - 'utility' will expose a simple fab trigger: `⋮`\n   * - 'default' will expose a standard {@link TsButtonComponent}\n   */\n  @Input()\n  public triggerType: TsMenuTriggerTypes = 'default';\n\n\n  /**\n   * Set the triggerIcon based on the triggerType\n   */\n  ngOnInit(): void {\n    this.triggerIcon = (this.triggerType === 'default') ?\n      this.TRIGGER_ICON_DEFAULT : this.TRIGGER_ICON_UTILITY;\n  }\n\n\n  /**\n   * After the view has initialized, open the menu if it is defaulted to 'open'\n   */\n  public ngAfterViewInit(): void {\n    if (this.defaultOpened) {\n      this.trigger.openMenu();\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n\n    \n      {{ triggerIcon }}\n    \n  \n\n  \n    \n      {{ triggerIcon }}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ triggerIcon }}                  {{ triggerIcon }}      '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsMenuModule.html":{"url":"modules/TsMenuModule.html","title":"module - TsMenuModule","body":"\n                   \n\n\n\n\n  Modules\n  TsMenuModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsMenuModule\n\n\n\ncluster_TsMenuModule_declarations\n\n\n\ncluster_TsMenuModule_imports\n\n\n\ncluster_TsMenuModule_exports\n\n\n\n\nTsMenuComponent\n\nTsMenuComponent\n\n\n\nTsMenuModule\n\nTsMenuModule\n\nTsMenuModule -->\n\nTsMenuComponent->TsMenuModule\n\n\n\n\n\nTsMenuComponent \n\nTsMenuComponent \n\nTsMenuComponent  -->\n\nTsMenuModule->TsMenuComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsMenuModule -->\n\nTsButtonModule->TsMenuModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsMenuModule -->\n\nTsIconModule->TsMenuModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/menu/menu.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsMenuComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsMenuComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsButtonModule } from './../button/button.module';\nimport { TsMenuComponent } from './menu.component';\n\nexport * from './menu.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatMenuModule,\n    TsIconModule,\n    MatButtonModule,\n    TsButtonModule,\n  ],\n  exports: [\n    TsMenuComponent,\n  ],\n  declarations: [\n    TsMenuComponent,\n  ],\n})\nexport class TsMenuModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsNavigationActionItem.html":{"url":"interfaces/TsNavigationActionItem.html","title":"interface - TsNavigationActionItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsNavigationActionItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Action specific keys for an item passed to the TsNavigationComponent\n\n            \n\n            \n                Extends\n            \n            \n                    NavigationItemBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The action to emit upon interaction\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsNavigationComponent.html":{"url":"components/TsNavigationComponent.html","title":"component - TsNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/navigation/navigation.component.ts\n\n\n    \n        Description\n    \n    \n        This is the navigation UI Component\nQA CSS CLASSES\n\nqa-navigation: Placed on the nav element which contains this component\nqa-navigation-items: Placed on the div element which contains the navigation items\nqa-navigation-item: Placed on the button elements which represent each visible navigation\nitem\nqa-navigation-secondary-trigger: Placed on the button element which displays the drop down\ncontaining secondary links when clicked\nqa-navigation-secondary-items: Placed on the menu element which contains the secondary\nnavigation items\nqa-navigation-secondary-item: Placed on the button elements which represent each secondary\nnavigation item\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsNavigation\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-navigation\n            \n\n            \n                styleUrls\n                navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                breakWidths\n                            \n                            \n                                    Public\n                                hiddenItems\n                            \n                            \n                                    Private\n                                pristineItems\n                            \n                            \n                                    Public\n                                visibleItems\n                            \n                            \n                                    Public\n                                visibleItemsList\n                            \n                            \n                                    Public\n                                visibleLinkElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateBreakWidths\n                            \n                            \n                                    Public\n                                isExternalLink\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                setUpInitialArrays\n                            \n                            \n                                    Private\n                                updateLists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                user\n                            \n                            \n                                welcomeMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/navigation/navigation.component.ts:250\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        Accept the array of navigation items and trigger setup\n\n                            \n                            Type:    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:202\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                    \n                        Accept the user data\n\n                            \n                            Type:    TsUser\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:218\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        welcomeMessage\n                    \n                    \n                        Define the welcome message\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Welcome'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:224\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                    \n                        Emit the click event with the TsNavigationPayload\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:242\n                            \n                        \n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:resize\n                            \n                            \n                        \n                    \n                \n                \n                    \nwindow:resize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:248\n                            \n                        \n\n\n                \n                    \n                            Trigger a layout update when the window resizes\n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            generateBreakWidths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateBreakWidths()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:282\n                            \n                        \n\n\n                \n                    \n                            Generate the array of breakWidths\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isExternalLink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isExternalLink(destination: string | string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:368\n                            \n                        \n\n\n                \n                    \n                            If the destination is a string and begins with http\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        destination\n                                                        \n                                                                    string | string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe destination to check\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Boolean determining if the link is external\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:272\n                            \n                        \n\n\n                \n                    \n                            Trigger initial layout update after the view initializes\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:264\n                            \n                        \n\n\n                \n                    \n                            Set up initial link groups\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setUpInitialArrays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setUpInitialArrays(items: TsNavigationItem[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:302\n                            \n                        \n\n\n                \n                    \n                            Clone the nav items and split into the initially visible/hidden lists\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    TsNavigationItem[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe complete list of navigation items\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateLists\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateLists()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:319\n                            \n                        \n\n\n                \n                    \n                            Move items between the two lists as required by the available space\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            breakWidths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        breakWidths:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:165\n                            \n                        \n\n                \n                    \n                        Define an array of widths at which to break the navigation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hiddenItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hiddenItems:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([] as TsNavigationItem[])\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:170\n                            \n                        \n\n                \n                    \n                        Define the list of hidden items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pristineItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pristineItems:     TsNavigationItem[]\n\n                    \n                \n                    \n                        \n                            Type :     TsNavigationItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:149\n                            \n                        \n\n                \n                    \n                        Store a pristine copy of the navigation items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visibleItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibleItems:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([] as TsNavigationItem[])\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:187\n                            \n                        \n\n                \n                    \n                        The collection of visible navigation items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visibleItemsList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibleItemsList:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:230\n                            \n                        \n\n                \n                    \n                        Element reference for visible list items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visibleLinkElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibleLinkElement:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:236\n                            \n                        \n\n                \n                    \n                        Query list of all elements from the visible items list\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        availableSpace\n                    \n                \n\n                \n                    \n                        getavailableSpace()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:156\n                                \n                            \n                    \n                        \n                                Getter to return the available navigation width\n\n\n                                \n                                \n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        usersFullName\n                    \n                \n\n                \n                    \n                        getusersFullName()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:177\n                                \n                            \n                    \n                        \n                                Getter to return the user's full name if it exists\n\n\n                                \n                                \n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        visibleItemsLength\n                    \n                \n\n                \n                    \n                        getvisibleItemsLength()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:194\n                                \n                            \n                    \n                        \n                                Getter to return the count of visible items\n\n\n                                \n                                \n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n\n\n                \n                    \n                        setitems(value: [])\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:202\n                                \n                            \n                    \n                        \n                                Accept the array of navigation items and trigger setup\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n      \n        \n          {{ item.name }}\n        \n      \n\n      \n        \n          {{ item.name }}\n        \n      \n\n      \n        \n          {{ item.name }}\n        \n      \n    \n\n  \n\n\n  \n    \n      {{ welcomeMessage }}\n      ,\n    \n    \n    {{ usersFullName }}\n\n    \n      keyboard_arrow_down\n    \n  \n\n\n\n\n  \n\n    \n      \n        {{ item.name }}\n      \n\n      \n        {{ item.name }}\n      \n    \n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ item.name }}                                      {{ item.name }}                                      {{ item.name }}                                {{ welcomeMessage }}      ,            {{ usersFullName }}          keyboard_arrow_down                          {{ item.name }}                    {{ item.name }}            '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsNavigationLinkItem.html":{"url":"interfaces/TsNavigationLinkItem.html","title":"interface - TsNavigationLinkItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsNavigationLinkItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Link specific keys for an item passed to the TsNavigationComponent\n\n            \n\n            \n                Extends\n            \n            \n                    NavigationItemBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destination\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The destination for items with a 'navigate' action. Single strings are used for external\nlocations while an array of strings are used for routerLinks\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsNavigationModule.html":{"url":"modules/TsNavigationModule.html","title":"module - TsNavigationModule","body":"\n                   \n\n\n\n\n  Modules\n  TsNavigationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsNavigationModule\n\n\n\ncluster_TsNavigationModule_declarations\n\n\n\ncluster_TsNavigationModule_imports\n\n\n\ncluster_TsNavigationModule_exports\n\n\n\n\nTsNavigationComponent\n\nTsNavigationComponent\n\n\n\nTsNavigationModule\n\nTsNavigationModule\n\nTsNavigationModule -->\n\nTsNavigationComponent->TsNavigationModule\n\n\n\n\n\nTsNavigationComponent \n\nTsNavigationComponent \n\nTsNavigationComponent  -->\n\nTsNavigationModule->TsNavigationComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsNavigationModule -->\n\nTsIconModule->TsNavigationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsNavigationComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsNavigationComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsNavigationComponent } from './navigation.component';\n\nexport * from './navigation.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatMenuModule,\n    RouterModule,\n    TsIconModule,\n  ],\n  declarations: [\n    TsNavigationComponent,\n  ],\n  exports: [\n    TsNavigationComponent,\n  ],\n})\nexport class TsNavigationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsNavigationPayload.html":{"url":"interfaces/TsNavigationPayload.html","title":"interface - TsNavigationPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsNavigationPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the expected response from the TsNavigationComponent emitter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The selected item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:     MouseEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MouseEvent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The mouse click event\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsPaginatorMenuItem.html":{"url":"interfaces/TsPaginatorMenuItem.html","title":"interface - TsPaginatorMenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsPaginatorMenuItem\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/paginator/paginator.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the allowed keys and types for an item passed to the TsMenuComponent within a\nTsPaginatorComponent\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The menu item name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A value for the item\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        Paginator\n\n\n\n\nTable of Contents\n\nBasic usage\nEvents\nCurrent page\nZero or One based pagination\nRecord count too high\nMax records\nRecord count message\n\n\nRecords per page\n\n\nBasic usage\nFor the most minimal implementation, just pass in the total record count:\nEvents\nThe paginator will emit the current page each time the page is changed or the records-per-page count\nis changed:\nmySelectFunc(v: TsPaginatorMenuItem) {\n  // v:\n  // {\n  //   name: \"1 - 10\",\n  //   value: 1,\n  // }\n}\n\nmyChangeFunc(v: number) {\n  // v: 50\n}Current page\nSet the current page:\nZero or One based pagination\nBy default the paginator starts the pages array with a value of '0'. If your API starts it's\npagination at 1 (such as Rails) you can set isZeroBased to false:\n\n\n\n\nRecord count too high\nThe paginator will display a message if too many records are found. This is to encourage better\nfiltering rather than more time paging through results.\nMax records\nBy default, anything over 100 is considered too many. To change this value, pass in a number to\nmaxPreferredRecords:\nRecord count message\nA custom message may be defined:\nA custom message template can also be defined. This allows dynamic links to documentation, help or a\nbetter set of filters.\n\n\n\n\n  {{ message }}\nRecords per page\nDefine the choices for how many records can be displayed on a single 'page':\nThis menu can be disabled completely if desired:\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  AfterViewInit,\n  TemplateRef,\n  ElementRef,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {\n  coerceNumberProperty,\n  coerceBooleanProperty,\n} from '@terminus/ngx-tools/coercion';\nimport { inputHasChanged } from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsMenuComponent} within a\n * {@link TsPaginatorComponent}\n */\nexport interface TsPaginatorMenuItem {\n  /**\n   * The menu item name\n   */\n  name: string;\n\n  /**\n   * A value for the item\n   */\n  value?: number;\n}\n\n\n/**\n * A paginator component\n *\n * #### QA CSS CLASSES\n * - `qa-paginator`: Placed on the primary container\n * - `qa-paginator-per-page-select`: Placed on the results per page select menu\n * - `qa-paginator-first-page-button`: Placed on the 'first page' button\n * - `qa-paginator-previous-page-button`: Placed on the 'previous page' button\n * - `qa-paginator-current-page-menu`: Placed on the 'current page' menu dropdown\n * - `qa-paginator-next-page-button`: Placed on the 'next page' button\n * - `qa-paginator-last-page-button`: Placed on the the 'last page' button\n * - `qa-paginator-message`: Placed on the messaging regarding the record count being too high\n *\n * @example\n * \n *\n * \n *   {{ message }}\n *   Learn more\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-paginator',\n  templateUrl: './paginator.component.html',\n  styleUrls: ['./paginator.component.scss'],\n  host: {\n    class: 'ts-paginator',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsPaginator',\n})\nexport class TsPaginatorComponent implements OnChanges, AfterViewInit {\n  /**\n   * Define the default count of records per page\n   */\n  private DEFAULT_PER_PAGE: number = 10;\n\n  /**\n   * Default max records before message is shown\n   */\n  private DEFAULT_MAX_PREFERED_RECORDS: number = 100;\n\n  /**\n   * Define the default options for the records per page select menu\n   */\n  private DEFAULT_RECORDS_PER_PAGE_OPTIONS: number[] = [10, 20, 50];\n\n  /**\n   * Define the default message to show when too many records are returned\n   */\n  private DEFAULT_HIGH_RECORD_MESSAGE: string = 'That\\'s a lot of results! ' +\n    'Try refining your filters for better results.';\n\n  /**\n   * Define the icon for the 'first page' button\n   */\n  public firstPageIcon: string = 'first_page';\n\n  /**\n   * Define the icon for the 'previous page' button\n   */\n  public previousPageIcon: string = 'keyboard_arrow_left';\n\n  /**\n   * Define the icon for the 'next page' button\n   */\n  public nextPageIcon: string = 'keyboard_arrow_right';\n\n  /**\n   * Define the icon for the 'last page' button\n   */\n  public lastPageIcon: string = 'last_page';\n\n  /**\n   * Store the array of objects that represent pages of collections\n   */\n  public pagesArray!: TsPaginatorMenuItem[];\n\n  /**\n   * Store the label for the current page\n   */\n  public currentPageLabel!: string;\n\n  /**\n   * Define the amount of records show per page\n   */\n  public recordsPerPage: number = this.DEFAULT_PER_PAGE;\n\n  /**\n   * Define the template context for the record count message\n   */\n  public templateContext = {\n    $implicit: this.DEFAULT_HIGH_RECORD_MESSAGE,\n  };\n\n  /**\n   * Define if the paging is 0-based or 1-based\n   */\n  @Input()\n  public set isZeroBased(v: boolean) {\n    this._isZeroBased = coerceBooleanProperty(v);\n  }\n  public get isZeroBased(): boolean {\n    return this._isZeroBased;\n  }\n  private _isZeroBased: boolean = true;\n\n  /**\n   * Define the tooltip message for the first page tooltip\n   */\n  @Input()\n  public firstPageTooltip: string = 'View the first results';\n\n  /**\n   * Define the tooltip message for the previous page tooltip\n   */\n  @Input()\n  public previousPageTooltip: string = 'View the previous results';\n\n  /**\n   * Define the tooltip message for the next page tooltip\n   */\n  @Input()\n  public nextPageTooltip: string = 'View the next results';\n\n  /**\n   * Define the tooltip message for the last page tooltip\n   */\n  @Input()\n  public lastPageTooltip: string = 'View the last results';\n\n  /**\n   * Define the current page\n   */\n  @Input()\n  public set currentPageIndex(page: number) {\n    this._currentPageIndex = coerceNumberProperty(page);\n  }\n  public get currentPageIndex(): number {\n    return this._currentPageIndex;\n  }\n  private _currentPageIndex: number = 0;\n\n  /**\n   * Define how many pages exist to show a prompt about better filtering\n   */\n  @Input()\n  public maxPreferredRecords: number = this.DEFAULT_MAX_PREFERED_RECORDS;\n\n  /**\n   * Define the menu location (open up or open down)\n   */\n  @Input()\n  public menuLocation: 'above' | 'below' = 'above';\n\n  /**\n   * Allow a custom template to be used for the paginator message\n   */\n  @Input()\n  public paginatorMessageTemplate!: TemplateRef;\n\n  /**\n   * Define the color theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'accent';\n\n  /**\n   * Define the total number of records\n   */\n  @Input()\n  public set totalRecords(records: number) {\n    this._totalRecords = coerceNumberProperty(records);\n  }\n  public get totalRecords(): number {\n    return this._totalRecords;\n  }\n  private _totalRecords: number = 0;\n\n  /**\n   * Define the message to show when too many pages exist\n   */\n  @Input()\n  public recordCountTooHighMessage: string = this.DEFAULT_HIGH_RECORD_MESSAGE;\n\n  /**\n   * Define how many records are shown per page\n   */\n  @Input()\n  public recordsPerPageChoices: number[] = this.DEFAULT_RECORDS_PER_PAGE_OPTIONS;\n\n  /**\n   * Define the label for the records per page select\n   */\n  @Input()\n  public recordsSelectLabel: string = 'Per page';\n\n  /**\n   * Define if the records per page select menu should be visible\n   */\n  @Input()\n  public showRecordsPerPageSelector: boolean = true;\n\n  /**\n   * Emit a page selected event\n   */\n  @Output()\n  public pageSelect: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit a change event when the records per page changes\n   */\n  @Output()\n  public recordsPerPageChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Getter to return the index of the first page\n   */\n  public get firstPageIndex(): number {\n    return this.isZeroBased ? 0 : 1;\n  }\n\n  /**\n   * Getter to return the index of the next page\n   */\n  public get nextPageIndex(): number {\n    return this.currentPageIndex - this.firstPageIndex;\n  }\n\n  /**\n   * Getter to return the index of the last page\n   */\n  public get lastPageIndex(): number {\n    return this.isZeroBased ? (this.pagesArray.length - 1) : this.pagesArray.length ;\n  }\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Initialize on init\n   */\n  public ngAfterViewInit(): void {\n    this.initialize();\n  }\n\n\n  /**\n   * Initialize on any changes\n   *\n   * @param changes - The object containing all changes since last cycle\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    // If the record count changed, assign the new value to the template context\n    // istanbul ignore else\n    if (inputHasChanged(changes, 'recordCountTooHighMessage')) {\n      this.templateContext.$implicit = this.recordCountTooHighMessage;\n    }\n\n    // If the zeroBased input changes, update the current page index\n    if (inputHasChanged(changes, 'isZeroBased')) {\n      this.currentPageIndex = changes.isZeroBased.currentValue ? 0 : 1;\n    }\n\n    this.initialize();\n  }\n\n\n  /**\n   * Set up initial resources\n   */\n   private initialize(): void {\n     this.pagesArray =\n       this.createPagesArray(this.totalRecords, this.recordsPerPage, this.isZeroBased);\n     this.currentPageLabel =\n       this.createCurrentPageLabel(this.currentPageIndex, this.pagesArray, this.totalRecords);\n\n     // Change to the current page\n     // istanbul ignore else\n     if (this.totalRecords > 0) {\n       this.changePage(this.currentPageIndex, -1, this.pagesArray);\n     }\n   }\n\n\n  /**\n   * Perform tasks when the current page is changed\n   *\n   * @param page - The selected page\n   */\n  public currentPageChanged(page: TsPaginatorMenuItem): void {\n    // Set the current page\n    this.currentPageIndex = coerceNumberProperty(page.value);\n\n    // Create a new label for the menu\n    this.currentPageLabel =\n      this.createCurrentPageLabel(this.currentPageIndex, this.pagesArray, this.totalRecords);\n\n    // Emit an event\n    this.pageSelect.emit(page);\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Manually trigger a page change event from a number\n   *\n   * @param destinationPage - The selected page number\n   * @param currentPage - The current page number\n   * @param pages - The collection of pages\n   */\n  public changePage(\n    destinationPage: number,\n    currentPage: number,\n    pages: TsPaginatorMenuItem[],\n  ): void {\n    const destinationIsValid: boolean = destinationPage >= this.firstPageIndex && destinationPage  {\n        return page.value === destinationPage;\n      });\n\n      // istanbul ignore else\n      if (foundPage) {\n        this.currentPageChanged(foundPage);\n      }\n    }\n  }\n\n\n  /**\n   * Check if a page is the first page\n   *\n   * @param page - The number of the current page\n   * @return A boolean representing if this is the first page\n   */\n  public isFirstPage(page: number): boolean {\n    return coerceNumberProperty(page) === this.firstPageIndex;\n  }\n\n\n  /**\n   * Check if a page is the last page\n   *\n   * @param page - The number of the current page\n   * @return A boolean representing if this is the last page\n   */\n  public isLastPage(page: number): boolean {\n    if (this.pagesArray) {\n      return page === (this.pagesArray.length - (this.isZeroBased ? 1 : 0));\n    } else {\n      return false;\n    }\n  }\n\n\n  /**\n   * Determine if the string exists\n   *\n   * @param message - The help message when too many results are returned\n   * @param max - The max number of records before the message should be shown\n   * @param totalRecords - The number of records\n   * @return A boolean representing if the message should be shown\n   */\n  public shouldShowRecordsMessage(message: string, max: number, totalRecords: number): boolean {\n    if (totalRecords > max) {\n      return (message && message.length > 0) ? true : false;\n    } else {\n      return false;\n    }\n  }\n\n\n  /**\n   * Re-initialize the paginator when records per page changes\n   *\n   * @param selection - The selected records-per-page count\n   */\n  public recordsPerPageUpdated(selection: number): void {\n    this.recordsPerPage = selection;\n    this.currentPageIndex = this.firstPageIndex;\n    this.recordsPerPageChange.emit(selection);\n\n    this.initialize();\n  }\n\n\n  /**\n   * Determine if the page select menu should be disabled\n   *\n   * @param pagesCount - The number of pages\n   * @return A boolean representing if the menu should be disabled\n   */\n  public menuIsDisabled(pagesCount: number): boolean {\n    return coerceNumberProperty(pagesCount)  {\n      return pages.find((page: TsPaginatorMenuItem): boolean => {\n        return page.value === index;\n      });\n    };\n\n    let foundPage: TsPaginatorMenuItem | undefined = findPage(pages, currentPage);\n\n    // If no found page, try the previous page\n    if (!foundPage) {\n      foundPage = findPage(pages, currentPage - 1);\n\n      // istanbul ignore else\n      if (foundPage) {\n        // If we found the previous page,\n        // save the current page change back to the primary variable\n        this.currentPageIndex -= 1;\n      }\n    }\n\n    // This may be the case if there are no records\n    if (!foundPage || !foundPage.name) {\n      foundPage = {\n        name: '0',\n      };\n    }\n\n    // '1 - 10 of 243'\n    return `${foundPage.name} of ${totalRecords}`;\n  }\n\n\n  /**\n   * Create an array containing objects that represent each available page of records\n   *\n   * @param total - The total records remaining\n   * @param perPage - How many records are shown per page\n   * @param zeroBased - If the pages are based on a `0` index rather than `1`\n   * @return The array representing all possible pages of records\n   */\n  private createPagesArray(total: number, perPage: number, zeroBased: boolean): TsPaginatorMenuItem[] {\n    const paginatorArray: TsPaginatorMenuItem[] = [];\n    let recordsRemaining = total;\n    let page = zeroBased ? 0 : 1;\n\n    // If there are no records just return an empty array\n    if (!recordsRemaining || recordsRemaining = perPage) {\n      // We are creating the text for the range here so we are dealing with records based on 1\n      // (while the pages themselves may be based on 0 or 1)\n      const pageNumber = (page = perPage) {\n        page = pageValue + 1;\n      }\n\n    }\n\n    // If any records remain, add the partial group as the last page in the array\n    if (recordsRemaining > 0) {\n      let name;\n      let value;\n      const pageNumber = (page  0) {\n        name = `${pageNumber * perPage + 1} - ${pageNumber * perPage + recordsRemaining}`;\n        value = (pageValue - (zeroBased ? 1 : 0));\n      } else {\n        name = `${pageNumber} - ${recordsRemaining}`;\n        value = (pageValue - (zeroBased ? 1 : 0));\n      }\n\n      paginatorArray.push({\n        name: name,\n        value: value,\n      });\n    }\n\n    return paginatorArray.sort((a: TsPaginatorMenuItem, b: TsPaginatorMenuItem): number => {\n      const first: number = coerceNumberProperty(a.value);\n      const second: number = coerceNumberProperty(b.value);\n\n      return (first \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsPaginatorModule.html":{"url":"modules/TsPaginatorModule.html","title":"module - TsPaginatorModule","body":"\n                   \n\n\n\n\n  Modules\n  TsPaginatorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsPaginatorModule\n\n\n\ncluster_TsPaginatorModule_declarations\n\n\n\ncluster_TsPaginatorModule_imports\n\n\n\ncluster_TsPaginatorModule_exports\n\n\n\n\nTsPaginatorComponent\n\nTsPaginatorComponent\n\n\n\nTsPaginatorModule\n\nTsPaginatorModule\n\nTsPaginatorModule -->\n\nTsPaginatorComponent->TsPaginatorModule\n\n\n\n\n\nTsPaginatorComponent \n\nTsPaginatorComponent \n\nTsPaginatorComponent  -->\n\nTsPaginatorModule->TsPaginatorComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsPaginatorModule -->\n\nTsButtonModule->TsPaginatorModule\n\n\n\n\n\nTsMenuModule\n\nTsMenuModule\n\nTsPaginatorModule -->\n\nTsMenuModule->TsPaginatorModule\n\n\n\n\n\nTsSelectModule\n\nTsSelectModule\n\nTsPaginatorModule -->\n\nTsSelectModule->TsPaginatorModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsPaginatorModule -->\n\nTsTooltipModule->TsPaginatorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/paginator/paginator.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsPaginatorComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsMenuModule\n                            \n                            \n                                    TsSelectModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsPaginatorComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TsButtonModule } from './../button/button.module';\nimport { TsSelectModule } from './../select/select.module';\nimport { TsMenuModule } from './../menu/menu.module';\nimport { TsTooltipModule } from './../tooltip/tooltip.module';\nimport { TsPaginatorComponent } from './paginator.component';\n\nexport * from './paginator.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    TsButtonModule,\n    TsSelectModule,\n    TsMenuModule,\n    TsTooltipModule,\n  ],\n  exports: [\n    TsPaginatorComponent,\n  ],\n  declarations: [\n    TsPaginatorComponent,\n  ],\n})\nexport class TsPaginatorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsPipesModule.html":{"url":"modules/TsPipesModule.html","title":"module - TsPipesModule","body":"\n                   \n\n\n\n\n  Modules\n  TsPipesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsPipesModule\n\n\n\ncluster_TsPipesModule_declarations\n\n\n\ncluster_TsPipesModule_exports\n\n\n\n\nTsDatePipe\n\nTsDatePipe\n\n\n\nTsPipesModule\n\nTsPipesModule\n\nTsPipesModule -->\n\nTsDatePipe->TsPipesModule\n\n\n\n\n\nTsRoundNumberPipe\n\nTsRoundNumberPipe\n\nTsPipesModule -->\n\nTsRoundNumberPipe->TsPipesModule\n\n\n\n\n\nTsSentenceCasePipe\n\nTsSentenceCasePipe\n\nTsPipesModule -->\n\nTsSentenceCasePipe->TsPipesModule\n\n\n\n\n\nTsTimeAgoPipe\n\nTsTimeAgoPipe\n\nTsPipesModule -->\n\nTsTimeAgoPipe->TsPipesModule\n\n\n\n\n\nTsTitleCasePipe\n\nTsTitleCasePipe\n\nTsPipesModule -->\n\nTsTitleCasePipe->TsPipesModule\n\n\n\n\n\nTsDatePipe \n\nTsDatePipe \n\nTsDatePipe  -->\n\nTsPipesModule->TsDatePipe \n\n\n\n\n\nTsRoundNumberPipe \n\nTsRoundNumberPipe \n\nTsRoundNumberPipe  -->\n\nTsPipesModule->TsRoundNumberPipe \n\n\n\n\n\nTsSentenceCasePipe \n\nTsSentenceCasePipe \n\nTsSentenceCasePipe  -->\n\nTsPipesModule->TsSentenceCasePipe \n\n\n\n\n\nTsTimeAgoPipe \n\nTsTimeAgoPipe \n\nTsTimeAgoPipe  -->\n\nTsPipesModule->TsTimeAgoPipe \n\n\n\n\n\nTsTitleCasePipe \n\nTsTitleCasePipe \n\nTsTitleCasePipe  -->\n\nTsPipesModule->TsTitleCasePipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/pipes.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsDatePipe\n                            \n                            \n                                TsRoundNumberPipe\n                            \n                            \n                                TsSentenceCasePipe\n                            \n                            \n                                TsTimeAgoPipe\n                            \n                            \n                                TsTitleCasePipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsDatePipe\n                            \n                            \n                                    TsRoundNumberPipe\n                            \n                            \n                                    TsSentenceCasePipe\n                            \n                            \n                                    TsTimeAgoPipe\n                            \n                            \n                                    TsTitleCasePipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsDatePipe } from './date/date.pipe';\nimport { TsRoundNumberPipe } from './round-number/round-number.pipe';\nimport { TsSentenceCasePipe } from './sentence-case/sentence-case.pipe';\nimport { TsTimeAgoPipe } from './time-ago/time-ago.pipe';\nimport { TsTitleCasePipe } from './title-case/title-case.pipe';\n\nexport * from './date/date.pipe';\nexport * from './round-number/round-number.pipe';\nexport * from './sentence-case/sentence-case.pipe';\nexport * from './time-ago/time-ago.pipe';\nexport * from './title-case/title-case.pipe';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    TsDatePipe,\n    TsRoundNumberPipe,\n    TsSentenceCasePipe,\n    TsTimeAgoPipe,\n    TsTitleCasePipe,\n  ],\n  providers: [\n    TsDatePipe,\n    TsRoundNumberPipe,\n    TsSentenceCasePipe,\n    TsTimeAgoPipe,\n    TsTitleCasePipe,\n  ],\n  declarations: [\n    TsDatePipe,\n    TsRoundNumberPipe,\n    TsSentenceCasePipe,\n    TsTimeAgoPipe,\n    TsTitleCasePipe,\n  ],\n})\nexport class TsPipesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsRadioChange.html":{"url":"classes/TsRadioChange.html","title":"class - TsRadioChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsRadioChange\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/radio-group/radio-group.component.ts\n        \n\n            \n                Description\n            \n            \n                Expose the MatRadioChange event as TsRadioChange. Used by TsRadioGroupComponent\n\n            \n\n            \n                Extends\n            \n            \n                    MatRadioChange\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        Radio Group\n\n\n\n\nTable of Contents\n\nBasic usage\nSub-labels\nEvent driven\nRequired\nDisabled\nDisabled option\n\n\nVisual mode\nCustom content\n\n\n\n\nBasic usage\nPass in:\n\nan array of items\na form control\na formatter function to determine the UI display value\na formatter function to determine the model value\n\n\n  \n\n  Submit\n// Define items to be passed to the radio group\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n    bing: 'Some helper text for my item',\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    bing: 'Some helper text for my item',\n    disabled: true,\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n    bing: 'Some helper text for my item',\n  },\n]);\n\n// Create a form\nmyForm = this.formBuilder.group({\n  myRadioGroup: [null],\n});\n\n// Use the 'bar' value as the UI display\nuiFormatter = (v) => v.bar;\n// use the 'foo' value to save to the model\nmodelFormatter = (v) => v.foo;\nNOTE: Since we can set the default value in the form control, we no longer need to add the\nchecked property to any or our items.\n\nSub-labels\nPassing a formatter function to formatUISubLabelFn will enable sub-label support:\n// Use the 'bing' value as a sub-label\nuiSubFormatter = (v) => v.bing;\n// Use the 'bar' value as the UI display\nuiFormatter = (v) => v.bar;\n// use the 'foo' value to save to the model\nmodelFormatter = (v) => v.foo;Event driven\nListen for change events:\nRequired\nTo define the radio group as 'required', set the required validator on the form group:\nmyForm = this.formBuilder.group({\n  myRadioGroup: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n});Disabled\nTo disable the entire radio group, set isDisabled to true:\nDisabled option\nTo disabled only a single option, define the disabled key on the item object:\n// Define items to be passed to the radio group\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    disabled: true, // This radio option will be disabled\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n  },\n]);Visual mode\nVisual mode displays radio options as large clickable areas containing content.\nEnable by setting the isVisual flag:\nCustom content\nTsRadioOption now accepts an optional template key with a string template:\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n    template: `My link!`\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    // if no template is defined, it will fall back to `formatUILabelFn` for the display value\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n    template: `Hi! Here is a thing!`\n  },\n]);\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatRadioChange } from '@angular/material/radio';\nimport {\n  isFunction,\n  hasRequiredControl,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Define the allowed keys for an item passed to the {@link TsRadioComponent}\n */\nexport interface TsRadioOption {\n  [key: string]: any;\n\n  /**\n   * Define if the item is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Define the template for the content (used if type is visual)\n   */\n  template?: string;\n}\n\n\n/**\n * Expose the MatRadioChange event as TsRadioChange. Used by {@link TsRadioGroupComponent}\n */\nexport class TsRadioChange extends MatRadioChange {}\n\n\n/**\n * Expose the formatter function type used by {@link TsRadioGroupComponent}\n */\nexport type TsRadioFormatFn = (v: any) => string;\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsRadioGroupComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the radio UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-radio-group`: The primary container\n * - `qa-radio-control`: An individual radio control\n * - `qa-radio-validation-messages`: The validation messages container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-radio-group',\n  templateUrl: './radio-group.component.html',\n  styleUrls: ['./radio-group.component.scss'],\n  host: {\n    class: 'ts-radio-group',\n  },\n  providers: [CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRadioGroup',\n})\nexport class TsRadioGroupComponent extends TsReactiveFormBaseComponent implements OnInit, OnDestroy {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-radio-group-${nextUniqueId++}`;\n\n  /**\n   * Define the ripple color.\n   * TODO: abstract out to a service or utility function or set as a global default for ripples\n   */\n  public rippleColor: string = 'rgba(0, 83, 138, .1)';\n\n  // NOTE: Since we are matching standard HTML attributes, we will rename for internal use.\n  // tslint:disable: no-input-rename\n  /**\n   * Used to set the 'aria-label' attribute on the underlying input element.\n   */\n  @Input('aria-label')\n  public ariaLabel: string | undefined;\n\n  /**\n   * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n   */\n  @Input('aria-labelledby')\n  public ariaLabelledby: string | undefined;\n\n  /**\n   * The 'aria-describedby' attribute is read after the element's label and field type.\n   */\n  @Input('aria-describedby')\n  public ariaDescribedby: string | undefined;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatUILabelFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatUILabelFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatUILabelFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatUILabelFn(): TsRadioFormatFn {\n    return this._formatUILabelFn;\n  }\n  private _formatUILabelFn!: TsRadioFormatFn;\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatUISubLabelFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatUISubLabelFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatUISubLabelFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatUISubLabelFn(): TsRadioFormatFn {\n    return this._formatUISubLabelFn;\n  }\n  private _formatUISubLabelFn!: TsRadioFormatFn;\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatModelValueFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatModelValueFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatModelValueFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatModelValueFn(): TsRadioFormatFn {\n    return this._formatModelValueFn;\n  }\n  private _formatModelValueFn!: TsRadioFormatFn;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the radio group is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the radio group is visual (boxes) or standard (text)\n   */\n  @Input()\n  public set isVisual(value: boolean) {\n    this._isVisual = coerceBooleanProperty(value);\n  }\n  public get isVisual(): boolean {\n    return this._isVisual;\n  }\n  private _isVisual: boolean = false;\n\n  /**\n   * Define a label for the radio group\n   */\n  @Input()\n  public label!: string;\n\n  /**\n   * The HTML name attribute applied to radio buttons in this group.\n   */\n  @Input()\n  public set name(value: string) {\n    this._name = value ? value : this._uid;\n  }\n  public get name(): string {\n    return this._name;\n  }\n  private _name: string = this._uid;\n\n  /**\n   * Accept an array of radio options in the {@link TsRadioOption} format\n   */\n  @Input()\n  public set options(value: TsRadioOption[]) {\n    if (!value) {\n      return;\n    }\n\n    this._options = value;\n  }\n  public get options(): TsRadioOption[] {\n    return this._options;\n  }\n  private _options!: TsRadioOption[];\n\n  /**\n   * Define if the visual style should be large or small\n   */\n  @Input()\n  public set small(value: boolean) {\n    this._small = coerceBooleanProperty(value);\n  }\n  public get small(): boolean {\n    return this._small;\n  }\n  private _small: boolean = false;\n\n  /**\n   * Define the theme. {@link TsStyleThemeTypes}\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit event when a selection occurs. {@link TsRadioChange}\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n\n  /**\n   * Getter to determine if the group is required\n   */\n  get isRequired(): boolean {\n    return hasRequiredControl(this.formControl);\n  }\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    public domSanitizer: DomSanitizer,\n  ) {\n    super();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Update the change detector if the control value changes\n   */\n  public ngOnInit(): void {\n    // istanbul ignore else\n    if (this.formControl) {\n      this.formControl.valueChanges\n        .pipe(\n          untilComponentDestroyed(this),\n        )\n        .subscribe((v: any) => {\n          this.writeValue(v);\n          this.changeDetectorRef.markForCheck();\n        });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Retrieve a value determined by the passed in formatter\n   *\n   * @param option - The radio option\n   * @param formatter - The formatter function used to retrieve the value\n   * @return The retrieved value\n   */\n  public retrieveValue(option: TsRadioOption, formatter?: TsRadioFormatFn): TsRadioOption | string {\n    return (formatter && formatter(option)) ? formatter(option) : option;\n  }\n\n\n  /**\n   * Handle clicks on labels\n   *\n   * @param option - The selected option\n   */\n  public labelClick(option: TsRadioOption): void {\n    if (this.isDisabled || (option && option.disabled)) {\n      return;\n    }\n    const value = this.retrieveValue(option, this.formatModelValueFn);\n    this.value = value;\n    this.changeDetectorRef.markForCheck();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsRadioGroupModule.html":{"url":"modules/TsRadioGroupModule.html","title":"module - TsRadioGroupModule","body":"\n                   \n\n\n\n\n  Modules\n  TsRadioGroupModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsRadioGroupModule\n\n\n\ncluster_TsRadioGroupModule_declarations\n\n\n\ncluster_TsRadioGroupModule_TsRadioGroupComponent_providers\n\n\n\ncluster_TsRadioGroupModule_imports\n\n\n\ncluster_TsRadioGroupModule_exports\n\n\n\n\nTsRadioGroupComponent\n\nTsRadioGroupComponent\n\n\n\nTsRadioGroupModule\n\nTsRadioGroupModule\n\nTsRadioGroupModule -->\n\nTsRadioGroupComponent->TsRadioGroupModule\n\n\n\n\n\nTsRadioGroupComponent \n\nTsRadioGroupComponent \n\nTsRadioGroupComponent  -->\n\nTsRadioGroupModule->TsRadioGroupComponent \n\n\n\n\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n\nTsRadioGroupComponent -->\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR->TsRadioGroupComponent\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsRadioGroupModule -->\n\nTsIconModule->TsRadioGroupModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsRadioGroupModule -->\n\nTsValidationMessagesModule->TsRadioGroupModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/radio-group/radio-group.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsRadioGroupComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsRadioGroupComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsRadioGroupComponent } from './radio-group.component';\n\nexport * from './radio-group.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatRadioModule,\n    FlexLayoutModule,\n    TsValidationMessagesModule,\n    MatRippleModule,\n    TsIconModule,\n  ],\n  exports: [\n    TsRadioGroupComponent,\n  ],\n  declarations: [\n    TsRadioGroupComponent,\n  ],\n})\nexport class TsRadioGroupModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsRadioOption.html":{"url":"interfaces/TsRadioOption.html","title":"interface - TsRadioOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsRadioOption\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/radio-group/radio-group.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the allowed keys for an item passed to the {@link TsRadioComponent}\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        template\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/radio-group/radio-group.component.ts:31\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define if the item is disabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                    \n                                \n                                \n                                    \n                                        template:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define the template for the content (used if type is visual)\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        Radio Group\n\n\n\n\nTable of Contents\n\nBasic usage\nSub-labels\nEvent driven\nRequired\nDisabled\nDisabled option\n\n\nVisual mode\nCustom content\n\n\n\n\nBasic usage\nPass in:\n\nan array of items\na form control\na formatter function to determine the UI display value\na formatter function to determine the model value\n\n\n  \n\n  Submit\n// Define items to be passed to the radio group\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n    bing: 'Some helper text for my item',\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    bing: 'Some helper text for my item',\n    disabled: true,\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n    bing: 'Some helper text for my item',\n  },\n]);\n\n// Create a form\nmyForm = this.formBuilder.group({\n  myRadioGroup: [null],\n});\n\n// Use the 'bar' value as the UI display\nuiFormatter = (v) => v.bar;\n// use the 'foo' value to save to the model\nmodelFormatter = (v) => v.foo;\nNOTE: Since we can set the default value in the form control, we no longer need to add the\nchecked property to any or our items.\n\nSub-labels\nPassing a formatter function to formatUISubLabelFn will enable sub-label support:\n// Use the 'bing' value as a sub-label\nuiSubFormatter = (v) => v.bing;\n// Use the 'bar' value as the UI display\nuiFormatter = (v) => v.bar;\n// use the 'foo' value to save to the model\nmodelFormatter = (v) => v.foo;Event driven\nListen for change events:\nRequired\nTo define the radio group as 'required', set the required validator on the form group:\nmyForm = this.formBuilder.group({\n  myRadioGroup: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n});Disabled\nTo disable the entire radio group, set isDisabled to true:\nDisabled option\nTo disabled only a single option, define the disabled key on the item object:\n// Define items to be passed to the radio group\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    disabled: true, // This radio option will be disabled\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n  },\n]);Visual mode\nVisual mode displays radio options as large clickable areas containing content.\nEnable by setting the isVisual flag:\nCustom content\nTsRadioOption now accepts an optional template key with a string template:\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n    template: `My link!`\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    // if no template is defined, it will fall back to `formatUILabelFn` for the display value\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n    template: `Hi! Here is a thing!`\n  },\n]);\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatRadioChange } from '@angular/material/radio';\nimport {\n  isFunction,\n  hasRequiredControl,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Define the allowed keys for an item passed to the {@link TsRadioComponent}\n */\nexport interface TsRadioOption {\n  [key: string]: any;\n\n  /**\n   * Define if the item is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Define the template for the content (used if type is visual)\n   */\n  template?: string;\n}\n\n\n/**\n * Expose the MatRadioChange event as TsRadioChange. Used by {@link TsRadioGroupComponent}\n */\nexport class TsRadioChange extends MatRadioChange {}\n\n\n/**\n * Expose the formatter function type used by {@link TsRadioGroupComponent}\n */\nexport type TsRadioFormatFn = (v: any) => string;\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsRadioGroupComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the radio UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-radio-group`: The primary container\n * - `qa-radio-control`: An individual radio control\n * - `qa-radio-validation-messages`: The validation messages container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-radio-group',\n  templateUrl: './radio-group.component.html',\n  styleUrls: ['./radio-group.component.scss'],\n  host: {\n    class: 'ts-radio-group',\n  },\n  providers: [CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRadioGroup',\n})\nexport class TsRadioGroupComponent extends TsReactiveFormBaseComponent implements OnInit, OnDestroy {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-radio-group-${nextUniqueId++}`;\n\n  /**\n   * Define the ripple color.\n   * TODO: abstract out to a service or utility function or set as a global default for ripples\n   */\n  public rippleColor: string = 'rgba(0, 83, 138, .1)';\n\n  // NOTE: Since we are matching standard HTML attributes, we will rename for internal use.\n  // tslint:disable: no-input-rename\n  /**\n   * Used to set the 'aria-label' attribute on the underlying input element.\n   */\n  @Input('aria-label')\n  public ariaLabel: string | undefined;\n\n  /**\n   * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n   */\n  @Input('aria-labelledby')\n  public ariaLabelledby: string | undefined;\n\n  /**\n   * The 'aria-describedby' attribute is read after the element's label and field type.\n   */\n  @Input('aria-describedby')\n  public ariaDescribedby: string | undefined;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatUILabelFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatUILabelFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatUILabelFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatUILabelFn(): TsRadioFormatFn {\n    return this._formatUILabelFn;\n  }\n  private _formatUILabelFn!: TsRadioFormatFn;\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatUISubLabelFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatUISubLabelFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatUISubLabelFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatUISubLabelFn(): TsRadioFormatFn {\n    return this._formatUISubLabelFn;\n  }\n  private _formatUISubLabelFn!: TsRadioFormatFn;\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatModelValueFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatModelValueFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatModelValueFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatModelValueFn(): TsRadioFormatFn {\n    return this._formatModelValueFn;\n  }\n  private _formatModelValueFn!: TsRadioFormatFn;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the radio group is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the radio group is visual (boxes) or standard (text)\n   */\n  @Input()\n  public set isVisual(value: boolean) {\n    this._isVisual = coerceBooleanProperty(value);\n  }\n  public get isVisual(): boolean {\n    return this._isVisual;\n  }\n  private _isVisual: boolean = false;\n\n  /**\n   * Define a label for the radio group\n   */\n  @Input()\n  public label!: string;\n\n  /**\n   * The HTML name attribute applied to radio buttons in this group.\n   */\n  @Input()\n  public set name(value: string) {\n    this._name = value ? value : this._uid;\n  }\n  public get name(): string {\n    return this._name;\n  }\n  private _name: string = this._uid;\n\n  /**\n   * Accept an array of radio options in the {@link TsRadioOption} format\n   */\n  @Input()\n  public set options(value: TsRadioOption[]) {\n    if (!value) {\n      return;\n    }\n\n    this._options = value;\n  }\n  public get options(): TsRadioOption[] {\n    return this._options;\n  }\n  private _options!: TsRadioOption[];\n\n  /**\n   * Define if the visual style should be large or small\n   */\n  @Input()\n  public set small(value: boolean) {\n    this._small = coerceBooleanProperty(value);\n  }\n  public get small(): boolean {\n    return this._small;\n  }\n  private _small: boolean = false;\n\n  /**\n   * Define the theme. {@link TsStyleThemeTypes}\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit event when a selection occurs. {@link TsRadioChange}\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n\n  /**\n   * Getter to determine if the group is required\n   */\n  get isRequired(): boolean {\n    return hasRequiredControl(this.formControl);\n  }\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    public domSanitizer: DomSanitizer,\n  ) {\n    super();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Update the change detector if the control value changes\n   */\n  public ngOnInit(): void {\n    // istanbul ignore else\n    if (this.formControl) {\n      this.formControl.valueChanges\n        .pipe(\n          untilComponentDestroyed(this),\n        )\n        .subscribe((v: any) => {\n          this.writeValue(v);\n          this.changeDetectorRef.markForCheck();\n        });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Retrieve a value determined by the passed in formatter\n   *\n   * @param option - The radio option\n   * @param formatter - The formatter function used to retrieve the value\n   * @return The retrieved value\n   */\n  public retrieveValue(option: TsRadioOption, formatter?: TsRadioFormatFn): TsRadioOption | string {\n    return (formatter && formatter(option)) ? formatter(option) : option;\n  }\n\n\n  /**\n   * Handle clicks on labels\n   *\n   * @param option - The selected option\n   */\n  public labelClick(option: TsRadioOption): void {\n    if (this.isDisabled || (option && option.disabled)) {\n      return;\n    }\n    const value = this.retrieveValue(option, this.formatModelValueFn);\n    this.value = value;\n    this.changeDetectorRef.markForCheck();\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsReactiveFormBaseComponent.html":{"url":"components/TsReactiveFormBaseComponent.html","title":"component - TsReactiveFormBaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsReactiveFormBaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/utilities/reactive-form-base.component.ts\n\n\n    \n        Description\n    \n    \n        This is the base class for all custom reactive form elements.\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    export class TsInputComponent extends TsReactiveFormBaseComponent {}\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ts-dummy-selector\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                innerValue\n                            \n                            \n                                    Protected\n                                onChangeCallback\n                            \n                            \n                                    Protected\n                                onTouchedCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onBlur\n                            \n                            \n                                    Protected\n                                registerOnChange\n                            \n                            \n                                    Protected\n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        Define the form control to get access to validators\n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:42\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onBlur\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onBlur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Set touched on blur\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Register onChange callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Register onTouched callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Write value to inner value (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            innerValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        innerValue:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:26\n                            \n                        \n\n                \n                    \n                        Define the internal data model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onChangeCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onChangeCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:31\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onTouchedCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onTouchedCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:36\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:53\n                                \n                            \n\n                \n                    \n                        setvalue(v: any)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:47\n                                \n                            \n                    \n                        \n                                Set the accessor and call the onchange callback\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { noop } from '@terminus/ngx-tools';\n\n\n/**\n * This is the base class for all custom reactive form elements.\n *\n * @example\n * export class TsInputComponent extends TsReactiveFormBaseComponent {}\n */\n@Component({\n  /*\n   * NOTE: Without this dummy selector, this class isn't picked up by the docs generator\n   */\n  selector: `ts-dummy-selector`,\n  template: ``,\n})\nexport class TsReactiveFormBaseComponent {\n  /**\n   * Define the internal data model\n   */\n  protected innerValue: any = '';\n\n  /**\n   * Define placeholder for callback (provided later by the control value accessor)\n   */\n  protected onChangeCallback: (_: any) => void = noop;\n\n  /**\n   * Define placeholder for callback (provided later by the control value accessor)\n   */\n  protected onTouchedCallback: () => void = noop;\n\n  /**\n   * Define the form control to get access to validators\n   */\n  @Input()\n  public formControl: FormControl = new FormControl();\n\n  /**\n   * Set the accessor and call the onchange callback\n   */\n  public set value(v: any) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n  public get value(): any {\n    return this.innerValue;\n  }\n\n\n  /**\n   * Set touched on blur\n   */\n  public onBlur() {\n    this.onTouchedCallback();\n  }\n\n\n  /**\n   * Register onChange callback (from ControlValueAccessor interface)\n   */\n  protected registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n\n  /**\n   * Register onTouched callback (from ControlValueAccessor interface)\n   */\n  protected registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n\n  /**\n   * Write value to inner value (from ControlValueAccessor interface)\n   */\n  protected writeValue(value: any) {\n    // NOTE: Currently, this 'else' path seems untestable\n    // istanbul ignore else\n    if (value !== this.innerValue) {\n      this.innerValue = value;\n    }\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsReactiveFormBaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsRoundNumberPipe.html":{"url":"pipes/TsRoundNumberPipe.html","title":"pipe - TsRoundNumberPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsRoundNumberPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/round-number/round-number.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsRoundNumber\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: number, precision: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/round-number/round-number.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        precision\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\nimport { roundNumber } from '@terminus/ngx-tools';\n\n\n@Pipe({\n  name: 'tsRoundNumber',\n})\nexport class TsRoundNumberPipe implements PipeTransform {\n  transform(value: number, precision = 0): number | undefined {\n    // Check for null values to avoid issues during data-binding\n    if (!value) {\n      return;\n    }\n\n    return roundNumber(value, precision);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsRowComponent.html":{"url":"components/TsRowComponent.html","title":"component - TsRowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsRowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/table/row.ts\n\n\n    \n        Description\n    \n    \n        Data row template container that contains the cell outlet. Adds the right class and role.\n\n    \n\n    \n        Extends\n    \n    \n            CdkRow\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsRow\n            \n\n            \n                host\n                {}\n            \n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                ts-row\n            \n\n\n\n            \n                template\n                CDK_ROW_TEMPLATE\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Header row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[tsHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: TsHeaderRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why this type of input was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsHeaderRowDef'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n\n/**\n * Data row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[tsRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: TsRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why it was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsRowDefColumns', 'when: tsRowDefWhen'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsRowDefDirective extends CdkRowDef {}\n\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-header-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsHeaderRow',\n  preserveWhitespaces: false,\n})\nexport class TsHeaderRowComponent extends CdkHeaderRow {}\n\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRow',\n  preserveWhitespaces: false,\n})\nexport class TsRowComponent extends CdkRow {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'CDK_ROW_TEMPLATE'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsRowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsRowDefDirective.html":{"url":"directives/TsRowDefDirective.html","title":"directive - TsRowDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsRowDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/row.ts\n        \n\n            \n                Description\n            \n            \n                Data row definition for the TsTableComponent.\nCaptures the header row's template and other row properties such as the columns to display and\na when predicate that describes when this row should be used.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsRowDef]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Header row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[tsHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: TsHeaderRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why this type of input was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsHeaderRowDef'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n\n/**\n * Data row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[tsRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: TsRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why it was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsRowDefColumns', 'when: tsRowDefWhen'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsRowDefDirective extends CdkRowDef {}\n\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-header-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsHeaderRow',\n  preserveWhitespaces: false,\n})\nexport class TsHeaderRowComponent extends CdkHeaderRow {}\n\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRow',\n  preserveWhitespaces: false,\n})\nexport class TsRowComponent extends CdkRow {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsScrollbarPosition.html":{"url":"classes/TsScrollbarPosition.html","title":"class - TsScrollbarPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsScrollbarPosition\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/scrollbars/scrollbars.component.ts\n        \n\n            \n                Description\n            \n            \n                A class that represents the current scrollbar positions\n\n            \n\n            \n                Extends\n            \n            \n                    Position\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        Scrollbars\n\n\n\n\nTable of Contents\n\nBasic usage\nDisable\nUpdate\n\n\nEvents\n\n\nBasic usage\nYou must set a fixed height and/or width to enable scrollbars (otherwise the browser will just continue making the container larger to fit\nthe content).\n\n  ...\nDisable\nThe scrollbars can be disabled dynamically if needed:\n\n  ...\nUpdate\nIf the scrollbars content is dynamically updated, you will need to update the scrollbars instance:\n\n\n  ...\n  ...\n\n  @ViewChild(TsScrollbarsComponent)\n  public scrollbars!: TsScrollbarsComponent;\n\n\n  myUpdate() {\n    // Update the content\n    this.updateScrollContent();\n\n    // Update the scrollbars\n    this.scrollbars.update();\n  }Events\n\n  ...\n\n\n\nAvailable events\n\n\n\n\nscrollDown\n\n\nscrollLeft\n\n\nscrollRight\n\n\nscrollUp\n\n\nscrollX\n\n\nscrollY\n\n\nxReachEnd\n\n\nxReachStart\n\n\nyReachEnd\n\n\nyReachStart\n\n\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n} from '@angular/core';\nimport {\n  Geometry,\n  PerfectScrollbarDirective,\n  Position,\n} from 'ngx-perfect-scrollbar';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\n\n/**\n * Define possible scroll directions for {@link TsScrollbarsScrollDirections}.\n */\nexport type TsScrollbarsScrollDirections\n  = 'any'\n  | 'both'\n  | 'x'\n  | 'y'\n;\n\n\n/**\n * A class that represents the current gemotric state of scrolling.\n */\nexport class TsScrollbarsGeometry extends Geometry {}\n\n\n/**\n * A class that represents the current scrollbar positions\n */\nexport class TsScrollbarPosition extends Position {}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * The scrollbars UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-scrollbars`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-scrollbars',\n  templateUrl: './scrollbars.component.html',\n  styleUrls: [\n    './scrollbars.component.scss',\n    './../../../node_modules/perfect-scrollbar/css/perfect-scrollbar.css',\n  ],\n  host: {\n    class: 'ts-scrollbars',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsScrollbars',\n})\nexport class TsScrollbarsComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-scrollbars-${nextUniqueId++}`;\n\n  /**\n   * Define the speed at which to scroll during automated movements\n   */\n  protected scrollSpeed = 400;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the scrollbars are disabled\n   */\n  @Input()\n  public set isDisabled(value: boolean) {\n    this._isDisabled = coerceBooleanProperty(value);\n  }\n  public get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n  private _isDisabled: boolean = false;\n\n  /**\n   * Access underlying scrollbar directive\n   */\n  @ViewChild(forwardRef(() => PerfectScrollbarDirective))\n  public scrollbar!: PerfectScrollbarDirective;\n\n  /**\n   * Event Emitters:\n   */\n  @Output()\n  public scrollDown: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollLeft: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollRight: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollUp: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollX: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollY: EventEmitter = new EventEmitter();\n\n  @Output()\n  public xReachEnd: EventEmitter = new EventEmitter();\n\n  @Output()\n  public xReachStart: EventEmitter = new EventEmitter();\n\n  @Output()\n  public yReachEnd: EventEmitter = new EventEmitter();\n\n  @Output()\n  public yReachStart: EventEmitter = new EventEmitter();\n\n\n  constructor() {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Return an object containing scrollbar geometry.\n   *\n   * @return An object with all geometry information\n   */\n  public get geometry(): TsScrollbarsGeometry | null {\n    if (this.scrollbar) {\n      return this.scrollbar.geometry('scroll') as TsScrollbarsGeometry;\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Return the current scrollbar position.\n   *\n   * @return The current scrollbar position\n   */\n  public get position(): TsScrollbarPosition | null {\n    if (this.scrollbar) {\n      return this.scrollbar.position() as TsScrollbarPosition;\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Determine if a direction is scrollable. See {@link TsScrollbarsScrollDirections} for all possible options.\n   *\n   * @param direction - The scroll direction to check\n   * @return Whether the direction is currently scrollable\n   */\n  public scrollable(direction: TsScrollbarsScrollDirections = 'any'): boolean | null {\n    if (this.scrollbar) {\n      return this.scrollbar.scrollable(direction);\n    } else {\n      return null;\n    }\n  }\n\n\n  public scrollTo(x: number, y?: number, speed?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollTo(x, y, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to element\n   *\n   * @param queryString - The string to query the DOM for\n   * @param speed - The speed to move at\n   * @param offset - A px offest\n   */\n  public scrollToElement(queryString: string, speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToElement(queryString, offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the bottom\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToBottom(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToBottom(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the left\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToLeft(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToLeft(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the right\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToRight(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToRight(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the top\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToTop(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToTop(offset, speed);\n    }\n  }\n\n\n  /**\n   * Trigger an update on the underlying scrollbar library instance.\n   */\n  public update(): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.update();\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsScrollbarsGeometry.html":{"url":"classes/TsScrollbarsGeometry.html","title":"class - TsScrollbarsGeometry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsScrollbarsGeometry\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/scrollbars/scrollbars.component.ts\n        \n\n            \n                Description\n            \n            \n                A class that represents the current gemotric state of scrolling.\n\n            \n\n            \n                Extends\n            \n            \n                    Geometry\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        Scrollbars\n\n\n\n\nTable of Contents\n\nBasic usage\nDisable\nUpdate\n\n\nEvents\n\n\nBasic usage\nYou must set a fixed height and/or width to enable scrollbars (otherwise the browser will just continue making the container larger to fit\nthe content).\n\n  ...\nDisable\nThe scrollbars can be disabled dynamically if needed:\n\n  ...\nUpdate\nIf the scrollbars content is dynamically updated, you will need to update the scrollbars instance:\n\n\n  ...\n  ...\n\n  @ViewChild(TsScrollbarsComponent)\n  public scrollbars!: TsScrollbarsComponent;\n\n\n  myUpdate() {\n    // Update the content\n    this.updateScrollContent();\n\n    // Update the scrollbars\n    this.scrollbars.update();\n  }Events\n\n  ...\n\n\n\nAvailable events\n\n\n\n\nscrollDown\n\n\nscrollLeft\n\n\nscrollRight\n\n\nscrollUp\n\n\nscrollX\n\n\nscrollY\n\n\nxReachEnd\n\n\nxReachStart\n\n\nyReachEnd\n\n\nyReachStart\n\n\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n} from '@angular/core';\nimport {\n  Geometry,\n  PerfectScrollbarDirective,\n  Position,\n} from 'ngx-perfect-scrollbar';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\n\n/**\n * Define possible scroll directions for {@link TsScrollbarsScrollDirections}.\n */\nexport type TsScrollbarsScrollDirections\n  = 'any'\n  | 'both'\n  | 'x'\n  | 'y'\n;\n\n\n/**\n * A class that represents the current gemotric state of scrolling.\n */\nexport class TsScrollbarsGeometry extends Geometry {}\n\n\n/**\n * A class that represents the current scrollbar positions\n */\nexport class TsScrollbarPosition extends Position {}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * The scrollbars UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-scrollbars`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-scrollbars',\n  templateUrl: './scrollbars.component.html',\n  styleUrls: [\n    './scrollbars.component.scss',\n    './../../../node_modules/perfect-scrollbar/css/perfect-scrollbar.css',\n  ],\n  host: {\n    class: 'ts-scrollbars',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsScrollbars',\n})\nexport class TsScrollbarsComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-scrollbars-${nextUniqueId++}`;\n\n  /**\n   * Define the speed at which to scroll during automated movements\n   */\n  protected scrollSpeed = 400;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the scrollbars are disabled\n   */\n  @Input()\n  public set isDisabled(value: boolean) {\n    this._isDisabled = coerceBooleanProperty(value);\n  }\n  public get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n  private _isDisabled: boolean = false;\n\n  /**\n   * Access underlying scrollbar directive\n   */\n  @ViewChild(forwardRef(() => PerfectScrollbarDirective))\n  public scrollbar!: PerfectScrollbarDirective;\n\n  /**\n   * Event Emitters:\n   */\n  @Output()\n  public scrollDown: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollLeft: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollRight: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollUp: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollX: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollY: EventEmitter = new EventEmitter();\n\n  @Output()\n  public xReachEnd: EventEmitter = new EventEmitter();\n\n  @Output()\n  public xReachStart: EventEmitter = new EventEmitter();\n\n  @Output()\n  public yReachEnd: EventEmitter = new EventEmitter();\n\n  @Output()\n  public yReachStart: EventEmitter = new EventEmitter();\n\n\n  constructor() {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Return an object containing scrollbar geometry.\n   *\n   * @return An object with all geometry information\n   */\n  public get geometry(): TsScrollbarsGeometry | null {\n    if (this.scrollbar) {\n      return this.scrollbar.geometry('scroll') as TsScrollbarsGeometry;\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Return the current scrollbar position.\n   *\n   * @return The current scrollbar position\n   */\n  public get position(): TsScrollbarPosition | null {\n    if (this.scrollbar) {\n      return this.scrollbar.position() as TsScrollbarPosition;\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Determine if a direction is scrollable. See {@link TsScrollbarsScrollDirections} for all possible options.\n   *\n   * @param direction - The scroll direction to check\n   * @return Whether the direction is currently scrollable\n   */\n  public scrollable(direction: TsScrollbarsScrollDirections = 'any'): boolean | null {\n    if (this.scrollbar) {\n      return this.scrollbar.scrollable(direction);\n    } else {\n      return null;\n    }\n  }\n\n\n  public scrollTo(x: number, y?: number, speed?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollTo(x, y, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to element\n   *\n   * @param queryString - The string to query the DOM for\n   * @param speed - The speed to move at\n   * @param offset - A px offest\n   */\n  public scrollToElement(queryString: string, speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToElement(queryString, offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the bottom\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToBottom(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToBottom(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the left\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToLeft(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToLeft(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the right\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToRight(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToRight(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the top\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToTop(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToTop(offset, speed);\n    }\n  }\n\n\n  /**\n   * Trigger an update on the underlying scrollbar library instance.\n   */\n  public update(): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.update();\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsScrollbarsModule.html":{"url":"modules/TsScrollbarsModule.html","title":"module - TsScrollbarsModule","body":"\n                   \n\n\n\n\n  Modules\n  TsScrollbarsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsScrollbarsModule\n\n\n\ncluster_TsScrollbarsModule_declarations\n\n\n\ncluster_TsScrollbarsModule_exports\n\n\n\n\nTsScrollbarsComponent\n\nTsScrollbarsComponent\n\n\n\nTsScrollbarsModule\n\nTsScrollbarsModule\n\nTsScrollbarsModule -->\n\nTsScrollbarsComponent->TsScrollbarsModule\n\n\n\n\n\nTsScrollbarsComponent \n\nTsScrollbarsComponent \n\nTsScrollbarsComponent  -->\n\nTsScrollbarsModule->TsScrollbarsComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/scrollbars/scrollbars.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsScrollbarsComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsScrollbarsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\nimport { TsScrollbarsComponent } from './scrollbars.component';\n\n\nexport * from './scrollbars.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PerfectScrollbarModule,\n  ],\n  declarations: [\n    TsScrollbarsComponent,\n  ],\n  exports: [\n    TsScrollbarsComponent,\n  ],\n})\nexport class TsScrollbarsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsSearchComponent.html":{"url":"components/TsSearchComponent.html","title":"component - TsSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/search/search.component.ts\n\n\n    \n        Description\n    \n    \n        A presentational component to render a search form\nQA CSS CLASSES\n\nqa-search: Placed on the form element which contains this component\nqa-search-input: Placed on the TsInputComponent used for the search text input\nqa-search-button: Placed on the TsButtonComponent used for the submit button\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-search\n            \n\n            \n                styleUrls\n                search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buttonAction\n                            \n                            \n                                    Public\n                                buttonType\n                            \n                            \n                                    Public\n                                debouncedEmit\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Private\n                                INPUT_DEBOUNCE_TIME\n                            \n                            \n                                    Public\n                                inputPatternRegex\n                            \n                            \n                                    Public\n                                query\n                            \n                            \n                                    Public\n                                queryMinLength\n                            \n                            \n                                    Public\n                                searchForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitSubmit\n                            \n                            \n                                    Public\n                                keyup\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoSubmit\n                            \n                            \n                                initialValue\n                            \n                            \n                                inputHint\n                            \n                            \n                                inputLabel\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isFocused\n                            \n                            \n                                isSubmitting\n                            \n                            \n                                theme\n                            \n                            \n                                userCanClear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                cleared\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/search/search.component.ts:201\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoSubmit\n                    \n                    \n                        Define if the input should automatically submit values as typed\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:135\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialValue\n                    \n                    \n                        Define an initial value for the search input\n\n                            \n                            Type:    string | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:141\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputHint\n                    \n                    \n                        Define the hint text below the input\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Enter at least two letters.'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:147\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputLabel\n                    \n                    \n                        Define the primary label for the input\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Search'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:153\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the search should be disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:159\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isFocused\n                    \n                    \n                        Define if the search input should be focused initially\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:165\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSubmitting\n                    \n                    \n                        Define if the search is currently submitting a query\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:171\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:177\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userCanClear\n                    \n                    \n                        Define if the user can clear the search input\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:183\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        The event to emit when the internal input value is changed\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:195\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cleared\n                    \n                    \n                        The event to emit when the internal input value is cleared\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:201\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitted\n                    \n                    \n                        The event to emit when the form is submitted\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:189\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        emitSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:244\n                            \n                        \n\n\n                \n                    \n                            Emit the submitted event\nNOTE: This wrapper is needed so that we can pass the query value to the emitter\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keyup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        keyup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:228\n                            \n                        \n\n\n                \n                    \n                            Fire events as needed after keyup events\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:215\n                            \n                        \n\n\n                \n                    \n                            Seed the value if needed on initialization\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buttonAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonAction:     TsButtonActionTypes\n\n                    \n                \n                    \n                        \n                            Type :     TsButtonActionTypes\n\n                        \n                    \n                    \n                        \n                            Default value : 'Submit'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:79\n                            \n                        \n\n                \n                    \n                        Define the button action label\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buttonType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonType:     TsButtonFunctionTypes\n\n                    \n                \n                    \n                        \n                            Type :     TsButtonFunctionTypes\n\n                        \n                    \n                    \n                        \n                            Default value : 'search'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:84\n                            \n                        \n\n                \n                    \n                        Define the button type\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            debouncedEmit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debouncedEmit:     \n\n                    \n                \n                    \n                        \n                            Default value : debounce(this.emitSubmit, this.INPUT_DEBOUNCE_TIME)\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:96\n                            \n                        \n\n                \n                    \n                        Define a debounced method to emit the submission event\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'search'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:101\n                            \n                        \n\n                \n                    \n                        Define the icon name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            INPUT_DEBOUNCE_TIME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        INPUT_DEBOUNCE_TIME:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:74\n                            \n                        \n\n                \n                    \n                        Define the time to wait for user interaction to stop before auto-submitting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputPatternRegex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputPatternRegex:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[a-zA-Z0-9_ ]*'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:106\n                            \n                        \n\n                \n                    \n                        Define the regular expression to validate the query\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:129\n                            \n                        \n\n                \n                    \n                        Store the search query\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryMinLength\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queryMinLength:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:111\n                            \n                        \n\n                \n                    \n                        Define the minimum length of a valid query\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : this.formBuilder.group({\n    query: [\n      null,\n      [\n        Validators.minLength(this.queryMinLength),\n        Validators.pattern(this.inputPatternRegex),\n      ],\n    ],\n  })\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:116\n                            \n                        \n\n                \n                    \n                        Initialize the form\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentQuery\n                    \n                \n\n                \n                    \n                        getcurrentQuery()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/search/search.component.ts:89\n                                \n                            \n                    \n                        \n                                Define a helper to return the current query string\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { debounce } from '@terminus/ngx-tools';\n\nimport {\n  TsButtonActionTypes,\n  TsButtonFunctionTypes,\n} from './../button/button.module';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsSearchResponse {\n  /**\n   * The search query\n   */\n  query: string;\n}\n\n\n/**\n * A presentational component to render a search form\n *\n * #### QA CSS CLASSES\n * - `qa-search`: Placed on the form element which contains this component\n * - `qa-search-input`: Placed on the {@link TsInputComponent} used for the search text input\n * - `qa-search-button`: Placed on the {@link TsButtonComponent} used for the submit button\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  host: {\n    class: 'ts-search',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsSearchComponent implements OnInit {\n  /**\n   * Define the time to wait for user interaction to stop before auto-submitting\n   */\n  private INPUT_DEBOUNCE_TIME: number = 200;\n\n  /**\n   * Define the button action label\n   */\n  public buttonAction: TsButtonActionTypes = 'Submit';\n\n  /**\n   * Define the button type\n   */\n  public buttonType: TsButtonFunctionTypes = 'search';\n\n  /**\n   * Define a helper to return the current query string\n   */\n  public get currentQuery(): string {\n    return this.searchForm.value.query ? this.searchForm.value.query.trim() : '';\n  }\n\n  /**\n   * Define a debounced method to emit the submission event\n   */\n  public debouncedEmit = debounce(this.emitSubmit, this.INPUT_DEBOUNCE_TIME);\n\n  /**\n   * Define the icon name\n   */\n  public icon: string = 'search';\n\n  /**\n   * Define the regular expression to validate the query\n   */\n  public inputPatternRegex: string = '[a-zA-Z0-9_ ]*';\n\n  /**\n   * Define the minimum length of a valid query\n   */\n  public queryMinLength: number = 2;\n\n  /**\n   * Initialize the form\n   */\n  public searchForm: FormGroup = this.formBuilder.group({\n    query: [\n      null,\n      [\n        Validators.minLength(this.queryMinLength),\n        Validators.pattern(this.inputPatternRegex),\n      ],\n    ],\n  });\n\n  /**\n   * Store the search query\n   */\n  public query: string = '';\n\n  /**\n   * Define if the input should automatically submit values as typed\n   */\n  @Input()\n  public autoSubmit: boolean = false;\n\n  /**\n   * Define an initial value for the search input\n   */\n  @Input()\n  public initialValue: string | undefined;\n\n  /**\n   * Define the hint text below the input\n   */\n  @Input()\n  public inputHint: string = 'Enter at least two letters.';\n\n  /**\n   * Define the primary label for the input\n   */\n  @Input()\n  public inputLabel: string = 'Search';\n\n  /**\n   * Define if the search should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the search input should be focused initially\n   */\n  @Input()\n  public isFocused: boolean = false;\n\n  /**\n   * Define if the search is currently submitting a query\n   */\n  @Input()\n  public isSubmitting: boolean = false;\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define if the user can clear the search input\n   */\n  @Input()\n  public userCanClear: boolean = true;\n\n  /**\n   * The event to emit when the form is submitted\n   */\n  @Output()\n  public submitted: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the internal input value is changed\n   */\n  @Output()\n  public changed: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the internal input value is cleared\n   */\n  @Output()\n  public cleared: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n  ) {}\n\n\n  /**\n   * Seed the value if needed on initialization\n   */\n  public ngOnInit(): void {\n    // istanbul ignore else\n    if (this.initialValue) {\n      this.searchForm.patchValue({\n        query: this.initialValue,\n      });\n    }\n  }\n\n\n  /**\n   * Fire events as needed after keyup events\n   */\n  public keyup(): void {\n    this.changed.emit(this.currentQuery);\n\n    // NOTE: We need to check for a valid query length here even though we are using a minLength\n    // validator. When the length is 0 the minLength validator returns valid.\n    if (this.autoSubmit && this.searchForm.valid && this.currentQuery.length > 0) {\n      this.debouncedEmit(this);\n    }\n  }\n\n\n  /**\n   * Emit the submitted event\n   *\n   * NOTE: This wrapper is needed so that we can pass the query value to the emitter\n   */\n  private emitSubmit(): void {\n    this.submitted.emit({query: this.currentQuery});\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n  Search\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Search'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsSearchModule.html":{"url":"modules/TsSearchModule.html","title":"module - TsSearchModule","body":"\n                   \n\n\n\n\n  Modules\n  TsSearchModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsSearchModule\n\n\n\ncluster_TsSearchModule_declarations\n\n\n\ncluster_TsSearchModule_imports\n\n\n\ncluster_TsSearchModule_exports\n\n\n\n\nTsSearchComponent\n\nTsSearchComponent\n\n\n\nTsSearchModule\n\nTsSearchModule\n\nTsSearchModule -->\n\nTsSearchComponent->TsSearchModule\n\n\n\n\n\nTsSearchComponent \n\nTsSearchComponent \n\nTsSearchComponent  -->\n\nTsSearchModule->TsSearchComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsSearchModule -->\n\nTsButtonModule->TsSearchModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsSearchModule -->\n\nTsInputModule->TsSearchModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/search/search.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsSearchComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsInputModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsSearchComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TsInputModule } from './../input/input.module';\nimport { TsButtonModule } from './../button/button.module';\nimport { TsSearchComponent } from './search.component';\n\nexport * from './search.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    TsInputModule,\n    TsButtonModule,\n  ],\n  exports: [\n    TsSearchComponent,\n  ],\n  declarations: [\n    TsSearchComponent,\n  ],\n})\nexport class TsSearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsSearchResponse.html":{"url":"interfaces/TsSearchResponse.html","title":"interface - TsSearchResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsSearchResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/search/search.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the user object interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        query\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The search query\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { debounce } from '@terminus/ngx-tools';\n\nimport {\n  TsButtonActionTypes,\n  TsButtonFunctionTypes,\n} from './../button/button.module';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsSearchResponse {\n  /**\n   * The search query\n   */\n  query: string;\n}\n\n\n/**\n * A presentational component to render a search form\n *\n * #### QA CSS CLASSES\n * - `qa-search`: Placed on the form element which contains this component\n * - `qa-search-input`: Placed on the {@link TsInputComponent} used for the search text input\n * - `qa-search-button`: Placed on the {@link TsButtonComponent} used for the submit button\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  host: {\n    class: 'ts-search',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsSearchComponent implements OnInit {\n  /**\n   * Define the time to wait for user interaction to stop before auto-submitting\n   */\n  private INPUT_DEBOUNCE_TIME: number = 200;\n\n  /**\n   * Define the button action label\n   */\n  public buttonAction: TsButtonActionTypes = 'Submit';\n\n  /**\n   * Define the button type\n   */\n  public buttonType: TsButtonFunctionTypes = 'search';\n\n  /**\n   * Define a helper to return the current query string\n   */\n  public get currentQuery(): string {\n    return this.searchForm.value.query ? this.searchForm.value.query.trim() : '';\n  }\n\n  /**\n   * Define a debounced method to emit the submission event\n   */\n  public debouncedEmit = debounce(this.emitSubmit, this.INPUT_DEBOUNCE_TIME);\n\n  /**\n   * Define the icon name\n   */\n  public icon: string = 'search';\n\n  /**\n   * Define the regular expression to validate the query\n   */\n  public inputPatternRegex: string = '[a-zA-Z0-9_ ]*';\n\n  /**\n   * Define the minimum length of a valid query\n   */\n  public queryMinLength: number = 2;\n\n  /**\n   * Initialize the form\n   */\n  public searchForm: FormGroup = this.formBuilder.group({\n    query: [\n      null,\n      [\n        Validators.minLength(this.queryMinLength),\n        Validators.pattern(this.inputPatternRegex),\n      ],\n    ],\n  });\n\n  /**\n   * Store the search query\n   */\n  public query: string = '';\n\n  /**\n   * Define if the input should automatically submit values as typed\n   */\n  @Input()\n  public autoSubmit: boolean = false;\n\n  /**\n   * Define an initial value for the search input\n   */\n  @Input()\n  public initialValue: string | undefined;\n\n  /**\n   * Define the hint text below the input\n   */\n  @Input()\n  public inputHint: string = 'Enter at least two letters.';\n\n  /**\n   * Define the primary label for the input\n   */\n  @Input()\n  public inputLabel: string = 'Search';\n\n  /**\n   * Define if the search should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the search input should be focused initially\n   */\n  @Input()\n  public isFocused: boolean = false;\n\n  /**\n   * Define if the search is currently submitting a query\n   */\n  @Input()\n  public isSubmitting: boolean = false;\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define if the user can clear the search input\n   */\n  @Input()\n  public userCanClear: boolean = true;\n\n  /**\n   * The event to emit when the form is submitted\n   */\n  @Output()\n  public submitted: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the internal input value is changed\n   */\n  @Output()\n  public changed: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the internal input value is cleared\n   */\n  @Output()\n  public cleared: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n  ) {}\n\n\n  /**\n   * Seed the value if needed on initialization\n   */\n  public ngOnInit(): void {\n    // istanbul ignore else\n    if (this.initialValue) {\n      this.searchForm.patchValue({\n        query: this.initialValue,\n      });\n    }\n  }\n\n\n  /**\n   * Fire events as needed after keyup events\n   */\n  public keyup(): void {\n    this.changed.emit(this.currentQuery);\n\n    // NOTE: We need to check for a valid query length here even though we are using a minLength\n    // validator. When the length is 0 the minLength validator returns valid.\n    if (this.autoSubmit && this.searchForm.valid && this.currentQuery.length > 0) {\n      this.debouncedEmit(this);\n    }\n  }\n\n\n  /**\n   * Emit the submitted event\n   *\n   * NOTE: This wrapper is needed so that we can pass the query value to the emitter\n   */\n  private emitSubmit(): void {\n    this.submitted.emit({query: this.currentQuery});\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsSelectModule.html":{"url":"modules/TsSelectModule.html","title":"module - TsSelectModule","body":"\n                   \n\n\n\n\n  Modules\n  TsSelectModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsSelectModule\n\n\n\ncluster_TsSelectModule_declarations\n\n\n\ncluster_TsSelectModule_TsSelectComponent_providers\n\n\n\ncluster_TsSelectModule_imports\n\n\n\ncluster_TsSelectModule_exports\n\n\n\n\nTsSelectComponent\n\nTsSelectComponent\n\n\n\nTsSelectModule\n\nTsSelectModule\n\nTsSelectModule -->\n\nTsSelectComponent->TsSelectModule\n\n\n\n\n\nTsSelectComponent \n\nTsSelectComponent \n\nTsSelectComponent  -->\n\nTsSelectModule->TsSelectComponent \n\n\n\n\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n\nTsSelectComponent -->\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR->TsSelectComponent\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsSelectModule -->\n\nTsValidationMessagesModule->TsSelectModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/select/select.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsSelectComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsSelectComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsSelectComponent } from './select.component';\n\nexport * from './select.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSelectModule,\n    TsValidationMessagesModule,\n  ],\n  exports: [\n    TsSelectComponent,\n  ],\n  declarations: [\n    TsSelectComponent,\n  ],\n})\nexport class TsSelectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsSelectedFile.html":{"url":"classes/TsSelectedFile.html","title":"class - TsSelectedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsSelectedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/selected-file.ts\n        \n\n            \n                Description\n            \n            \n                Manage a single selected file\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dimensions\n                            \n                            \n                                    Public\n                                file\n                            \n                            \n                                    Public\n                                fileLoaded$\n                            \n                            \n                                    Private\n                                fileReader\n                            \n                            \n                                    Private\n                                    Optional\n                                fileReference\n                            \n                            \n                                    Public\n                                mimeType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                size\n                            \n                            \n                                    Public\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                determineImageDimensions\n                            \n                            \n                                    Private\n                                validateImageDimensions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(file: File, imageDimensionConstraints: TsFileImageDimensionConstraints | undefined, typeConstraint: TsFileAcceptedMimeTypes[] | undefined, maxSize: number)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/file-upload/selected-file.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                  \n                                                        \n                                                                    File\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageDimensionConstraints\n                                                  \n                                                        \n                                                                    TsFileImageDimensionConstraints | undefined\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConstraint\n                                                  \n                                                        \n                                                                    TsFileAcceptedMimeTypes[] | undefined\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxSize\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dimensions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dimensions:     TsImageDimensions | undefined\n\n                    \n                \n                    \n                        \n                            Type :     TsImageDimensions | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            file\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        file:     File\n\n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileLoaded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileLoaded$:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this.fileReference)\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:52\n                            \n                        \n\n                \n                    \n                        BehaviorSubject to alert consumers when all calculations are complete\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fileReader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileReader:     FileReader\n\n                    \n                \n                    \n                        \n                            Type :     FileReader\n\n                        \n                    \n                    \n                        \n                            Default value : new FileReader()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            fileReference\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileReference:     TsSelectedFile\n\n                    \n                \n                    \n                        \n                            Type :     TsSelectedFile\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:47\n                            \n                        \n\n                \n                    \n                        Only needed to appease TypeScript when defining fileLoaded$\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mimeType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mimeType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            size\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        size:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            validations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validations:     TsFileValidations\n\n                    \n                \n                    \n                        \n                            Type :     TsFileValidations\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    fileType: false,\n    fileSize: false,\n    imageDimensions: false,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:37\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            determineImageDimensions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        determineImageDimensions(callback?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:144\n                            \n                        \n\n\n                \n                    \n                            Determine the dimensions of an image\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                \nA function to call after the dimensions have been calculated (asynchronously)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateImageDimensions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        validateImageDimensions(constraints: TsFileImageDimensionConstraints | undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:194\n                            \n                        \n\n\n                \n                    \n                            Validate the image dimensions\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        constraints\n                                                        \n                                                                    TsFileImageDimensionConstraints | undefined\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe constraints this the image dimensions must fit\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    The validation result\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:89\n                                \n                            \n                    \n                        \n                                Get the image width\n\n\n                                \n                                \n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:98\n                                \n                            \n                    \n                        \n                                Get the image height\n\n\n                                \n                                \n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isCSV\n                    \n                \n\n                \n                    \n                        getisCSV()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:107\n                                \n                            \n                    \n                        \n                                Get a boolean representing if the file is a CSV\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isImage\n                    \n                \n\n                \n                    \n                        getisImage()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:116\n                                \n                            \n                    \n                        \n                                Get a boolean representing if the file is an image\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fileContents\n                    \n                \n\n                \n                    \n                        getfileContents()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:125\n                                \n                            \n                    \n                        \n                                Get the file contents\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:134\n                                \n                            \n                    \n                        \n                                Get the validation status\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject } from 'rxjs';\n\nimport { TsFileImageDimensionConstraints } from './image-dimension-constraints';\nimport { TsImageDimensions } from './image-dimensions';\nimport { TsFileAcceptedMimeTypes } from './mime-types';\n\n\n/**\n * The structure of the object to track file validations internally\n */\nexport interface TsFileValidations {\n  fileType: boolean;\n  fileSize: boolean;\n  imageDimensions: boolean;\n}\n\n\n/**\n * The number of bytes per kilobyte (for calculations)\n */\nconst BYTES_PER_KB = 1024;\n\n\n/**\n * Manage a single selected file\n *\n * @param file - The selected file\n * @param imageDimensionConstraints - An array of image dimension constraints {@link TsFileImageDimensionConstraints}\n * @param typeConstraint - An array of allowed MIME types {@link TsFileAcceptedMimeTypes}\n * @param maxSize - The maximum size in kilobytes\n */\nexport class TsSelectedFile {\n  public name: string | undefined;\n  public mimeType: string;\n  public dimensions: TsImageDimensions | undefined;\n  public size: number;\n  public validations: TsFileValidations = {\n    fileType: false,\n    fileSize: false,\n    imageDimensions: false,\n  };\n  private fileReader: FileReader = new FileReader();\n\n  /**\n   * Only needed to appease TypeScript when defining `fileLoaded$`\n   */\n  private fileReference?: TsSelectedFile;\n\n  /**\n   * BehaviorSubject to alert consumers when all calculations are complete\n   */\n  public fileLoaded$: BehaviorSubject = new BehaviorSubject(this.fileReference);\n\n\n  constructor(\n    public file: File,\n    private imageDimensionConstraints: TsFileImageDimensionConstraints | undefined,\n    private typeConstraint: TsFileAcceptedMimeTypes[] | undefined,\n    private maxSize: number,\n  ) {\n    this.mimeType = this.file.type;\n    this.size = Math.ceil(this.file.size / BYTES_PER_KB);\n    this.name = this.file.name;\n\n    // Begin the validation chain by validating image dimensions\n    this.determineImageDimensions(() => {\n      // Validate mime-type\n      // istanbul ignore else\n      if (this.typeConstraint && this.typeConstraint.indexOf(this.file.type as TsFileAcceptedMimeTypes) >= 0) {\n        this.validations.fileType = true;\n      }\n\n      // Validate file size\n      // istanbul ignore else\n      if (this.size  {\n        // istanbul ignore else\n        if (img) {\n          img.src = this.fileReader.result;\n        }\n      };\n      img.onload = (v: Event) => {\n        // istanbul ignore else\n        if (img) {\n          this.dimensions = new TsImageDimensions(img.naturalWidth, img.naturalHeight);\n        }\n\n        // Validate dimensions\n        this.validations.imageDimensions = this.validateImageDimensions(this.imageDimensionConstraints);\n\n        // Call the callback if one exists\n        // istanbul ignore else\n        if (callback) {\n          callback();\n        }\n      };\n    } else {\n      // We are not dealing with an image:\n      // istanbul ignore else\n      if (callback) {\n        callback();\n      }\n\n      // Since this is not an image, set dimension validation to `true` to 'bypass'\n      this.validations.imageDimensions = true;\n    }\n\n    // Read the file (this triggers the FileReader load event)\n    this.fileReader.readAsDataURL(this.file);\n  }\n\n\n  /**\n   * Validate the image dimensions\n   *\n   * @param constraints - The constraints this the image dimensions must fit\n   * @return The validation result\n   */\n  private validateImageDimensions(constraints: TsFileImageDimensionConstraints | undefined): boolean {\n    if (!constraints || constraints.length = constraint.height.min && height = constraint.width.min && width \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsSentenceCasePipe.html":{"url":"pipes/TsSentenceCasePipe.html","title":"pipe - TsSentenceCasePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsSentenceCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/sentence-case/sentence-case.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsSentenceCase\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/sentence-case/sentence-case.pipe.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\n\n\n@Pipe({\n  name: 'tsSentenceCase',\n})\nexport class TsSentenceCasePipe implements PipeTransform {\n  transform(value: string): string | undefined {\n    // Check for null values to avoid issues during data-binding\n    if (!value) {\n      return;\n    }\n\n    return value.charAt(0).toUpperCase() + value.slice(1).toLowerCase();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsSlideToggleChange.html":{"url":"classes/TsSlideToggleChange.html","title":"class - TsSlideToggleChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsSlideToggleChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/toggle/toggle.component.ts\n        \n\n            \n                Description\n            \n            \n                Expose the MatSlideToggleChange event as TsSlideToggleChange. Used by TsToggleComponent\n\n            \n\n            \n                Extends\n            \n            \n                    MatSlideToggleChange\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Expose the MatSlideToggleChange event as TsSlideToggleChange. Used by {@link TsToggleComponent}\n */\nexport class TsSlideToggleChange extends MatSlideToggleChange {}\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via our base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsToggleComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * The is a toggle component\n *\n * #### QA CSS CLASSES\n * - `qa-toggle`: The toggle element\n *\n * @example\n * My Toggle!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss'],\n  host: {\n    class: 'ts-toggle',\n  },\n  providers: [CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsToggleComponent extends TsReactiveFormBaseComponent {\n  /**\n   * Define the aria label\n   */\n  @Input()\n  public ariaLabel: string | undefined;\n\n  /**\n   * Allow the checked state to be set\n   */\n  @Input()\n  public set isChecked(value: boolean) {\n    this._isChecked = coerceBooleanProperty(value);\n    this.value = this._isChecked;\n  }\n  public get isChecked(): boolean {\n    return this._isChecked;\n  }\n  private _isChecked: boolean = false;\n\n  /**\n   * Define if the toggle should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the toggle is required\n   */\n  @Input()\n  public isRequired: boolean = true;\n\n  /**\n   * Define the position of the label\n   */\n  @Input()\n  public labelPosition: 'before' | 'after' = 'after';\n\n  /**\n   * Define the input name for the toggle\n   */\n  @Input()\n  public name: string = 'toggle';\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit an event each time the toggle value changes\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsSortBase.html":{"url":"classes/TsSortBase.html","title":"class - TsSortBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsSortBase\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.directive.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n\nTable of Contents\n\nAdding sort to table headers\nChanging the sort order\nDisabling sorting\nUsing sort with the ts-table\nAccessibility\n\n\nAdding sort to table headers\nTo add sorting behavior and styling to a set of table headers, add ts-sort-header to each header\nand provide an id that will identify it. These headers should be contained within a parent element\nwith the tsSort directive, which will emit a sortChange event when the user triggers sorting\non the header.\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\ntsSort will emit an sortChange event that contains the ID of the header triggered and the\ndirection to sort (asc or desc).\nChanging the sort order\nBy default, a sort header starts its sorting at asc and then desc. Triggering the sort header\nafter desc will remove sorting.\nTo reverse the sort order for all headers, set the tsSortStart to desc on the tsSort\ndirective. To reverse the order only for a specific header, set the start input only on the header\ninstead.\nTo prevent the user from clearing the sort sort state from an already sorted column, set\ntsSortDisableClear to true on the tsSort to affect all headers, or set disableClear to true on\na specific header.\nDisabling sorting\nIf you want to prevent the user from changing the sorting order of any column, you can use the\ntsSortDisabled binding on the ts-sort, or the disabled on an single ts-sort-header.\nUsing sort with the ts-table\nWhen used on an ts-table header, it is not required to set an ts-sort-header id on because by\ndefault it will use the id of the column.\nAccessibility\nThe aria-label for the sort button can be set in TsSortHeaderIntl.\n\n    \n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n} from './sort-errors';\n\n\n/**\n * Define the allowed sort directions for {@link TsSort}\n */\nexport type TsSortDirection\n  = 'asc'\n  | 'desc'\n  | ''\n;\n\n\n/**\n * Interface for a directive that holds sorting state consumed by `TsSortHeaderComponent`\n */\nexport interface TsSortableItem {\n  /**\n   * The id of the column being sorted\n   */\n  id: string;\n\n  /**\n   * Starting sort direction\n   */\n  start: 'asc' | 'desc';\n\n  /**\n   * Whether to disable clearing the sorting state\n   */\n  disableClear: boolean;\n}\n\n\n/**\n * The current sort state\n */\nexport interface TsSortState {\n  /**\n   * The id of the column being sorted\n   */\n  active: string;\n\n  /**\n   * The sort direction\n   */\n  direction: TsSortDirection;\n}\n\n\n// Boilerplate for applying mixins to TsSort.\nexport class TsSortBase {}\nexport const _TsSortMixinBase = mixinDisabled(TsSortBase);\n\n\n/**\n * Container for TsSortables to manage the sort state and provide default sort parameters\n */\n@Directive({\n  selector: '[tsSort]',\n  exportAs: 'tsSort',\n  inputs: ['disabled: tsSortDisabled'],\n})\nexport class TsSortDirective extends _TsSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /**\n   * Collection of all registered sortables that this directive manages\n   */\n  private sortables = new Map();\n\n  /**\n   * Used to notify any child components listening to state changes\n   */\n  public _stateChanges = new Subject();\n\n  /**\n   * The id of the most recently sorted TsSortable\n   */\n  @Input('tsSortActive')\n  public active!: string;\n\n  /**\n   * The direction to set when an TsSortable is initially sorted.\n   *\n   * May be overriden by the TsSortable's sort start.\n   */\n  @Input('tsSortStart')\n  public start: 'asc' | 'desc' = 'asc';\n\n  /**\n   * The sort direction of the currently active TsSortable\n   */\n  @Input('tsSortDirection')\n  public set direction(direction: TsSortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  public get direction(): TsSortDirection {\n    return this._direction;\n  }\n  private _direction: TsSortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   *\n   * May be overriden by the TsSortable's disable clear input.\n   */\n  @Input('tsSortDisableClear')\n  public set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  public get disableClear() {\n    return this._disableClear;\n  }\n  private _disableClear: boolean = false;\n\n  /**\n   * Event emitted when the user changes either the active sort or sort direction\n   */\n  @Output('tsSortChange')\n  readonly sortChange = new EventEmitter();\n\n\n  /**\n   * Trigger next on all changes\n   */\n  public ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n\n  /**\n   * Complete the observable on destroy\n   */\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n\n  /**\n   * Register function to be used by the contained TsSortables. Adds the TsSortable to the\n   * collection of TsSortables.\n   */\n  register(sortable: TsSortableItem): void {\n    if (!sortable.id && isDevMode()) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id) && isDevMode()) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n\n  /**\n   * Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\n   * collection of contained TsSortables.\n   */\n  deregister(sortable: TsSortableItem): void {\n    this.sortables.delete(sortable.id);\n  }\n\n\n  /**\n   * Sets the active sort id and determines the new sort direction\n   */\n  sort(sortable: TsSortableItem): void {\n    if (this.active !== sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n\n  /**\n   * Returns the next sort direction of the active sortable, checking for potential overrides\n   */\n  getNextSortDirection(sortable: TsSortableItem): TsSortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    const sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n}\n\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): TsSortDirection[] {\n  const sortOrder: TsSortDirection[] = ['asc', 'desc'];\n\n  if (start === 'desc') {\n    sortOrder.reverse();\n  }\n\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n\n  return sortOrder;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsSortDirective.html":{"url":"directives/TsSortDirective.html","title":"directive - TsSortDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsSortDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.directive.ts\n        \n\n            \n                Description\n            \n            \n                Container for TsSortables to manage the sort state and provide default sort parameters\n\n            \n\n            \n                Implements\n            \n            \n                        CanDisable\n                        OnChanges\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsSort]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _direction\n                            \n                            \n                                    Private\n                                _disableClear\n                            \n                            \n                                    Public\n                                _stateChanges\n                            \n                            \n                                    Private\n                                sortables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregister\n                            \n                            \n                                getNextSortDirection\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                register\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsSortActive\n                            \n                            \n                                tsSortDirection\n                            \n                            \n                                tsSortDisableClear\n                            \n                            \n                                tsSortStart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsSortChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tsSortActive\n                    \n                    \n                        The id of the most recently sorted TsSortable\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:98\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tsSortDirection\n                    \n                    \n                        The sort direction of the currently active TsSortable\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:112\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tsSortDisableClear\n                    \n                    \n                        Whether to disable the user from clearing the sort by finishing the sort direction cycle.\nMay be overriden by the TsSortable's disable clear input.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:129\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tsSortStart\n                    \n                    \n                        The direction to set when an TsSortable is initially sorted.\nMay be overriden by the TsSortable's sort start.\n\n                            \n                            Type:    \"asc\" | \"desc\"\n\n                            \n                        \n                            Default value: 'asc'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:106\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        tsSortChange\n                    \n                    \n                        Event emitted when the user changes either the active sort or sort direction\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:141\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deregister\n                            \n                            \n                        \n                    \n                \n                \n                    \nderegister(sortable: TsSortableItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:181\n                            \n                        \n\n\n                \n                    \n                            Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\ncollection of contained TsSortables.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sortable\n                                                        \n                                                                    TsSortableItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNextSortDirection\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNextSortDirection(sortable: TsSortableItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:204\n                            \n                        \n\n\n                \n                    \n                            Returns the next sort direction of the active sortable, checking for potential overrides\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sortable\n                                                        \n                                                                    TsSortableItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TsSortDirection\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:147\n                            \n                        \n\n\n                \n                    \n                            Trigger next on all changes\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:155\n                            \n                        \n\n\n                \n                    \n                            Complete the observable on destroy\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \nregister(sortable: TsSortableItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:164\n                            \n                        \n\n\n                \n                    \n                            Register function to be used by the contained TsSortables. Adds the TsSortable to the\ncollection of TsSortables.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sortable\n                                                        \n                                                                    TsSortableItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \nsort(sortable: TsSortableItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:189\n                            \n                        \n\n\n                \n                    \n                            Sets the active sort id and determines the new sort direction\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sortable\n                                                        \n                                                                    TsSortableItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _direction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _direction:     TsSortDirection\n\n                    \n                \n                    \n                        \n                            Type :     TsSortDirection\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disableClear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disableClear:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:135\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _stateChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _stateChanges:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:92\n                            \n                        \n\n                \n                    \n                        Used to notify any child components listening to state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sortables\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortables:     \n\n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:87\n                            \n                        \n\n                \n                    \n                        Collection of all registered sortables that this directive manages\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        direction\n                    \n                \n\n                \n                    \n                        getdirection()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:118\n                                \n                            \n\n                \n                    \n                        setdirection(direction: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:112\n                                \n                            \n                    \n                        \n                                The sort direction of the currently active TsSortable\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            direction\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disableClear\n                    \n                \n\n                \n                    \n                        getdisableClear()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:132\n                                \n                            \n\n                \n                    \n                        setdisableClear(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:129\n                                \n                            \n                    \n                        \n                                Whether to disable the user from clearing the sort by finishing the sort direction cycle.\nMay be overriden by the TsSortable's disable clear input.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n    \n        \n\nTable of Contents\n\nAdding sort to table headers\nChanging the sort order\nDisabling sorting\nUsing sort with the ts-table\nAccessibility\n\n\nAdding sort to table headers\nTo add sorting behavior and styling to a set of table headers, add ts-sort-header to each header\nand provide an id that will identify it. These headers should be contained within a parent element\nwith the tsSort directive, which will emit a sortChange event when the user triggers sorting\non the header.\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\ntsSort will emit an sortChange event that contains the ID of the header triggered and the\ndirection to sort (asc or desc).\nChanging the sort order\nBy default, a sort header starts its sorting at asc and then desc. Triggering the sort header\nafter desc will remove sorting.\nTo reverse the sort order for all headers, set the tsSortStart to desc on the tsSort\ndirective. To reverse the order only for a specific header, set the start input only on the header\ninstead.\nTo prevent the user from clearing the sort sort state from an already sorted column, set\ntsSortDisableClear to true on the tsSort to affect all headers, or set disableClear to true on\na specific header.\nDisabling sorting\nIf you want to prevent the user from changing the sorting order of any column, you can use the\ntsSortDisabled binding on the ts-sort, or the disabled on an single ts-sort-header.\nUsing sort with the ts-table\nWhen used on an ts-table header, it is not required to set an ts-sort-header id on because by\ndefault it will use the id of the column.\nAccessibility\nThe aria-label for the sort button can be set in TsSortHeaderIntl.\n\n    \n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n} from './sort-errors';\n\n\n/**\n * Define the allowed sort directions for {@link TsSort}\n */\nexport type TsSortDirection\n  = 'asc'\n  | 'desc'\n  | ''\n;\n\n\n/**\n * Interface for a directive that holds sorting state consumed by `TsSortHeaderComponent`\n */\nexport interface TsSortableItem {\n  /**\n   * The id of the column being sorted\n   */\n  id: string;\n\n  /**\n   * Starting sort direction\n   */\n  start: 'asc' | 'desc';\n\n  /**\n   * Whether to disable clearing the sorting state\n   */\n  disableClear: boolean;\n}\n\n\n/**\n * The current sort state\n */\nexport interface TsSortState {\n  /**\n   * The id of the column being sorted\n   */\n  active: string;\n\n  /**\n   * The sort direction\n   */\n  direction: TsSortDirection;\n}\n\n\n// Boilerplate for applying mixins to TsSort.\nexport class TsSortBase {}\nexport const _TsSortMixinBase = mixinDisabled(TsSortBase);\n\n\n/**\n * Container for TsSortables to manage the sort state and provide default sort parameters\n */\n@Directive({\n  selector: '[tsSort]',\n  exportAs: 'tsSort',\n  inputs: ['disabled: tsSortDisabled'],\n})\nexport class TsSortDirective extends _TsSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /**\n   * Collection of all registered sortables that this directive manages\n   */\n  private sortables = new Map();\n\n  /**\n   * Used to notify any child components listening to state changes\n   */\n  public _stateChanges = new Subject();\n\n  /**\n   * The id of the most recently sorted TsSortable\n   */\n  @Input('tsSortActive')\n  public active!: string;\n\n  /**\n   * The direction to set when an TsSortable is initially sorted.\n   *\n   * May be overriden by the TsSortable's sort start.\n   */\n  @Input('tsSortStart')\n  public start: 'asc' | 'desc' = 'asc';\n\n  /**\n   * The sort direction of the currently active TsSortable\n   */\n  @Input('tsSortDirection')\n  public set direction(direction: TsSortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  public get direction(): TsSortDirection {\n    return this._direction;\n  }\n  private _direction: TsSortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   *\n   * May be overriden by the TsSortable's disable clear input.\n   */\n  @Input('tsSortDisableClear')\n  public set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  public get disableClear() {\n    return this._disableClear;\n  }\n  private _disableClear: boolean = false;\n\n  /**\n   * Event emitted when the user changes either the active sort or sort direction\n   */\n  @Output('tsSortChange')\n  readonly sortChange = new EventEmitter();\n\n\n  /**\n   * Trigger next on all changes\n   */\n  public ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n\n  /**\n   * Complete the observable on destroy\n   */\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n\n  /**\n   * Register function to be used by the contained TsSortables. Adds the TsSortable to the\n   * collection of TsSortables.\n   */\n  register(sortable: TsSortableItem): void {\n    if (!sortable.id && isDevMode()) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id) && isDevMode()) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n\n  /**\n   * Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\n   * collection of contained TsSortables.\n   */\n  deregister(sortable: TsSortableItem): void {\n    this.sortables.delete(sortable.id);\n  }\n\n\n  /**\n   * Sets the active sort id and determines the new sort direction\n   */\n  sort(sortable: TsSortableItem): void {\n    if (this.active !== sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n\n  /**\n   * Returns the next sort direction of the active sortable, checking for potential overrides\n   */\n  getNextSortDirection(sortable: TsSortableItem): TsSortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    const sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n}\n\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): TsSortDirection[] {\n  const sortOrder: TsSortDirection[] = ['asc', 'desc'];\n\n  if (start === 'desc') {\n    sortOrder.reverse();\n  }\n\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n\n  return sortOrder;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsSortHeaderBase.html":{"url":"classes/TsSortHeaderBase.html","title":"class - TsSortHeaderBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsSortHeaderBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort-header.component.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { untilComponentDestroyed } from '@terminus/ngx-tools';\nimport { CdkColumnDef } from '@angular/cdk/table';\nimport {\n  merge,\n} from 'rxjs';\n\nimport { TsSortDirective } from './sort.directive';\nimport { TsSortableItem } from './sort.directive';\nimport { TsSortHeaderIntl } from './sort-header-intl';\nimport { getSortHeaderNotContainedWithinSortError } from './sort-errors';\nimport { tsSortAnimations } from './sort-animations';\n\n\n// Boilerplate for applying mixins to the sort header.\nexport class TsSortHeaderBase {}\nexport const _TsSortHeaderMixinBase = mixinDisabled(TsSortHeaderBase);\n\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent TsSortDirective.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\n@Component({\n  // NOTE(B$): This component needs to be added to another component so we need a non-element\n  // selector\n  // tslint:disable: component-selector\n  selector: '[ts-sort-header]',\n  // tslint:enable: component-selector\n  exportAs: 'tsSortHeader',\n  templateUrl: './sort-header.component.html',\n  styleUrls: ['./sort-header.component.scss'],\n  host: {\n    class: 'ts-sortable',\n    '[class.ts-sort-header-sorted]': '_isSorted()',\n    '[class.ts-sort-header-disabled]': '_isDisabled()',\n    '(click)': '_handleClick()',\n  },\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  animations: [\n    tsSortAnimations.indicator,\n    tsSortAnimations.leftPointer,\n    tsSortAnimations.rightPointer,\n    tsSortAnimations.indicatorToggle,\n  ],\n})\nexport class TsSortHeaderComponent extends _TsSortHeaderMixinBase implements TsSortableItem, CanDisable, OnInit, OnDestroy  {\n  /**\n   * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n   * the column's name.\n   */\n  // NOTE(B$): Renaming input so that we can pull a value from the primary directive\n  // tslint:disable: no-input-rename\n  @Input('ts-sort-header')\n  id!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Sets the position of the arrow that displays when sorted\n   */\n  @Input()\n  arrowPosition: 'before' | 'after' = 'after';\n\n  /**\n   * Overrides the sort start value of the containing TsSort for this TsSortable\n   */\n  @Input()\n  start!: 'asc' | 'desc';\n\n  /**\n   * Overrides the disable clear value of the containing TsSort for this TsSortable\n   */\n  @Input()\n  get disableClear(): boolean {\n    return this._disableClear;\n  }\n  set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  private _disableClear!: boolean;\n\n\n  /**\n   * Check for _sort and set up auto-change-detection\n   */\n  constructor(\n    public _intl: TsSortHeaderIntl,\n    changeDetectorRef: ChangeDetectorRef,\n    @Optional() public _sort: TsSortDirective,\n    @Optional() public _cdkColumnDef: CdkColumnDef,\n  ) {\n    super();\n\n    if (!_sort && isDevMode()) {\n      throw getSortHeaderNotContainedWithinSortError();\n    }\n\n    // Mark directive for change detection after any of these changes\n    merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n      .pipe(\n        untilComponentDestroyed(this),\n      )\n      .subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n\n  /**\n   * Default to cdk column name\n   */\n  public ngOnInit(): void {\n    if (!this.id && this._cdkColumnDef) {\n      this.id = this._cdkColumnDef.name;\n    }\n\n    this._sort.register(this);\n  }\n\n\n  /**\n   * Deregister sort and unsubscribe from observables\n   */\n  public ngOnDestroy(): void {\n    this._sort.deregister(this);\n  }\n\n\n  /**\n   * Handles click events on the header\n   */\n  public _handleClick() {\n    if (!this._isDisabled()) {\n      this._sort.sort(this);\n    }\n  }\n\n\n  /**\n   * Whether this TsSortHeader is currently sorted in either ascending or descending order\n   */\n  public _isSorted() {\n    return this._sort.active == this.id &&\n        (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n  }\n\n\n  /**\n   * Whether this TsSortHeader is disabled\n   */\n  public _isDisabled() {\n    return this._sort.disabled || this.disabled;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsSortHeaderComponent.html":{"url":"components/TsSortHeaderComponent.html","title":"component - TsSortHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsSortHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/sort/sort-header.component.ts\n\n\n    \n        Description\n    \n    \n        Applies sorting behavior (click to change sort) and styles to an element, including an\narrow to display the current sort direction.\nMust be provided with an id and contained within a parent TsSortDirective.\nIf used on header cells in a CdkTable, it will automatically default its id from its containing\ncolumn definition.\n\n    \n\n    \n        Extends\n    \n    \n            _TsSortHeaderMixinBase\n    \n\n    \n        Implements\n    \n    \n                TsSortableItem\n                CanDisable\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsSortHeader\n            \n\n            \n                host\n                {}\n            \n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                [ts-sort-header]\n            \n\n            \n                styleUrls\n                sort-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sort-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _cdkColumnDef\n                            \n                            \n                                    Private\n                                _disableClear\n                            \n                            \n                                    Public\n                                _intl\n                            \n                            \n                                    Public\n                                _sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _handleClick\n                            \n                            \n                                    Public\n                                _isDisabled\n                            \n                            \n                                    Public\n                                _isSorted\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                arrowPosition\n                            \n                            \n                                disableClear\n                            \n                            \n                                start\n                            \n                            \n                                ts-sort-header\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_intl: TsSortHeaderIntl, changeDetectorRef: ChangeDetectorRef, _sort: TsSortDirective, _cdkColumnDef: CdkColumnDef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/sort/sort-header.component.ts:101\n                            \n                        \n\n                \n                    \n                            Check for _sort and set up auto-change-detection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _intl\n                                                  \n                                                        \n                                                                    TsSortHeaderIntl\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _sort\n                                                  \n                                                        \n                                                                    TsSortDirective\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _cdkColumnDef\n                                                  \n                                                        \n                                                                    CdkColumnDef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        arrowPosition\n                    \n                    \n                        Sets the position of the arrow that displays when sorted\n\n                            \n                            Type:    \"before\" | \"after\"\n\n                            \n                        \n                            Default value: 'after'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableClear\n                    \n                    \n                        Overrides the disable clear value of the containing TsSort for this TsSortable\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:95\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        start\n                    \n                    \n                        Overrides the sort start value of the containing TsSort for this TsSortable\n\n                            \n                            Type:    \"asc\" | \"desc\"\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:89\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ts-sort-header\n                    \n                    \n                        ID of this sort header. If used within the context of a CdkColumnDef, this will default to\nthe column's name.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:76\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _handleClick\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _handleClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            Handles click events on the header\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _isDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:170\n                            \n                        \n\n\n                \n                    \n                            Whether this TsSortHeader is disabled\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _isSorted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _isSorted()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:161\n                            \n                        \n\n\n                \n                    \n                            Whether this TsSortHeader is currently sorted in either ascending or descending order\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Deregister sort and unsubscribe from observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Default to cdk column name\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _cdkColumnDef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _cdkColumnDef:     CdkColumnDef\n\n                    \n                \n                    \n                        \n                            Type :     CdkColumnDef\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disableClear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disableClear:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _intl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _intl:     TsSortHeaderIntl\n\n                    \n                \n                    \n                        \n                            Type :     TsSortHeaderIntl\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _sort:     TsSortDirective\n\n                    \n                \n                    \n                        \n                            Type :     TsSortDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:110\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disableClear\n                    \n                \n\n\n                \n                    \n                        setdisableClear(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:98\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { untilComponentDestroyed } from '@terminus/ngx-tools';\nimport { CdkColumnDef } from '@angular/cdk/table';\nimport {\n  merge,\n} from 'rxjs';\n\nimport { TsSortDirective } from './sort.directive';\nimport { TsSortableItem } from './sort.directive';\nimport { TsSortHeaderIntl } from './sort-header-intl';\nimport { getSortHeaderNotContainedWithinSortError } from './sort-errors';\nimport { tsSortAnimations } from './sort-animations';\n\n\n// Boilerplate for applying mixins to the sort header.\nexport class TsSortHeaderBase {}\nexport const _TsSortHeaderMixinBase = mixinDisabled(TsSortHeaderBase);\n\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent TsSortDirective.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\n@Component({\n  // NOTE(B$): This component needs to be added to another component so we need a non-element\n  // selector\n  // tslint:disable: component-selector\n  selector: '[ts-sort-header]',\n  // tslint:enable: component-selector\n  exportAs: 'tsSortHeader',\n  templateUrl: './sort-header.component.html',\n  styleUrls: ['./sort-header.component.scss'],\n  host: {\n    class: 'ts-sortable',\n    '[class.ts-sort-header-sorted]': '_isSorted()',\n    '[class.ts-sort-header-disabled]': '_isDisabled()',\n    '(click)': '_handleClick()',\n  },\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  animations: [\n    tsSortAnimations.indicator,\n    tsSortAnimations.leftPointer,\n    tsSortAnimations.rightPointer,\n    tsSortAnimations.indicatorToggle,\n  ],\n})\nexport class TsSortHeaderComponent extends _TsSortHeaderMixinBase implements TsSortableItem, CanDisable, OnInit, OnDestroy  {\n  /**\n   * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n   * the column's name.\n   */\n  // NOTE(B$): Renaming input so that we can pull a value from the primary directive\n  // tslint:disable: no-input-rename\n  @Input('ts-sort-header')\n  id!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Sets the position of the arrow that displays when sorted\n   */\n  @Input()\n  arrowPosition: 'before' | 'after' = 'after';\n\n  /**\n   * Overrides the sort start value of the containing TsSort for this TsSortable\n   */\n  @Input()\n  start!: 'asc' | 'desc';\n\n  /**\n   * Overrides the disable clear value of the containing TsSort for this TsSortable\n   */\n  @Input()\n  get disableClear(): boolean {\n    return this._disableClear;\n  }\n  set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  private _disableClear!: boolean;\n\n\n  /**\n   * Check for _sort and set up auto-change-detection\n   */\n  constructor(\n    public _intl: TsSortHeaderIntl,\n    changeDetectorRef: ChangeDetectorRef,\n    @Optional() public _sort: TsSortDirective,\n    @Optional() public _cdkColumnDef: CdkColumnDef,\n  ) {\n    super();\n\n    if (!_sort && isDevMode()) {\n      throw getSortHeaderNotContainedWithinSortError();\n    }\n\n    // Mark directive for change detection after any of these changes\n    merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n      .pipe(\n        untilComponentDestroyed(this),\n      )\n      .subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n\n  /**\n   * Default to cdk column name\n   */\n  public ngOnInit(): void {\n    if (!this.id && this._cdkColumnDef) {\n      this.id = this._cdkColumnDef.name;\n    }\n\n    this._sort.register(this);\n  }\n\n\n  /**\n   * Deregister sort and unsubscribe from observables\n   */\n  public ngOnDestroy(): void {\n    this._sort.deregister(this);\n  }\n\n\n  /**\n   * Handles click events on the header\n   */\n  public _handleClick() {\n    if (!this._isDisabled()) {\n      this._sort.sort(this);\n    }\n  }\n\n\n  /**\n   * Whether this TsSortHeader is currently sorted in either ascending or descending order\n   */\n  public _isSorted() {\n    return this._sort.active == this.id &&\n        (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n  }\n\n\n  /**\n   * Whether this TsSortHeader is disabled\n   */\n  public _isDisabled() {\n    return this._sort.disabled || this.disabled;\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n\n      \n        \n        \n        \n      \n    \n  \n\n\n\n  &nbsp;{{ _intl.sortDescriptionLabel(id, _sort.direction) }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                             {{ _intl.sortDescriptionLabel(id, _sort.direction) }}'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsSortHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsSortHeaderIntl.html":{"url":"injectables/TsSortHeaderIntl.html","title":"injectable - TsSortHeaderIntl","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsSortHeaderIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort-header-intl.ts\n        \n\n            \n                Description\n            \n            \n                To modify the labels and text displayed, create a new instance of TsSortHeaderIntl and\ninclude it in a custom provider.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changes\n                            \n                            \n                                sortButtonLabel\n                            \n                            \n                                sortDescriptionLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changes:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header-intl.ts:21\n                            \n                        \n\n                \n                    \n                        Stream that emits whenever the labels here are changed. Use this to notify\ncomponents if the labels have changed after initialization.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortButtonLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortButtonLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : (id: string) => {\n    return `Change sorting for ${id}`;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header-intl.ts:26\n                            \n                        \n\n                \n                    \n                        ARIA label for the sorting button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortDescriptionLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortDescriptionLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : (id: string, direction: TsSortDirection) => {\n    return `Sorted by ${id} ${direction === 'asc' ? 'ascending' : 'descending'}`;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header-intl.ts:33\n                            \n                        \n\n                \n                    \n                        A label to describe the current sort (visible only to screenreaders)\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { TsSortDirection } from './sort.directive';\n\n\n/**\n * To modify the labels and text displayed, create a new instance of TsSortHeaderIntl and\n * include it in a custom provider.\n */\n@Injectable()\nexport class TsSortHeaderIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  changes: Subject = new Subject();\n\n  /**\n   * ARIA label for the sorting button\n   */\n  sortButtonLabel = (id: string) => {\n    return `Change sorting for ${id}`;\n  }\n\n  /**\n   * A label to describe the current sort (visible only to screenreaders)\n   */\n  sortDescriptionLabel = (id: string, direction: TsSortDirection) => {\n    return `Sorted by ${id} ${direction === 'asc' ? 'ascending' : 'descending'}`;\n  }\n}\n\n\n/**\n * Factory to return an instance of TsSortHeaderIntl\n */\nexport function TS_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl: TsSortHeaderIntl) {\n  return parentIntl || new TsSortHeaderIntl();\n}\n\n\n/**\n * TsSortHeaderIntl provider declaration\n */\nexport const TS_SORT_HEADER_INTL_PROVIDER = {\n  // If there is already an TsSortHeaderIntl available, use that. Otherwise, provide a new one.\n  provide: TsSortHeaderIntl,\n  deps: [[new Optional(), new SkipSelf(), TsSortHeaderIntl]],\n  useFactory: TS_SORT_HEADER_INTL_PROVIDER_FACTORY,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsSortModule.html":{"url":"modules/TsSortModule.html","title":"module - TsSortModule","body":"\n                   \n\n\n\n\n  Modules\n  TsSortModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsSortModule\n\n\n\ncluster_TsSortModule_declarations\n\n\n\ncluster_TsSortModule_exports\n\n\n\n\nTsSortDirective\n\nTsSortDirective\n\n\n\nTsSortModule\n\nTsSortModule\n\nTsSortModule -->\n\nTsSortDirective->TsSortModule\n\n\n\n\n\nTsSortHeaderComponent\n\nTsSortHeaderComponent\n\nTsSortModule -->\n\nTsSortHeaderComponent->TsSortModule\n\n\n\n\n\nTsSortDirective \n\nTsSortDirective \n\nTsSortDirective  -->\n\nTsSortModule->TsSortDirective \n\n\n\n\n\nTsSortHeaderComponent \n\nTsSortHeaderComponent \n\nTsSortHeaderComponent  -->\n\nTsSortModule->TsSortHeaderComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Much of this was lifted directly from Angular Material. I highly recommend checking out their\nsource code: https://github.com/angular/material2/tree/master/src/lib/sort\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsSortDirective\n                            \n                            \n                                TsSortHeaderComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsSortDirective\n                            \n                            \n                                    TsSortHeaderComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsSortHeaderComponent } from './sort-header.component';\nimport { TS_SORT_HEADER_INTL_PROVIDER } from './sort-header-intl';\nimport { TsSortDirective } from './sort.directive';\n\nexport * from './sort-animations';\nexport * from './sort-header-intl';\nexport * from './sort-header.component';\nexport * from './sort.directive';\n\n\n/**\n * Much of this was lifted directly from Angular Material. I highly recommend checking out their\n * source code: https://github.com/angular/material2/tree/master/src/lib/sort\n */\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    TS_SORT_HEADER_INTL_PROVIDER,\n  ],\n  declarations: [\n    TsSortDirective,\n    TsSortHeaderComponent,\n  ],\n  exports: [\n    TsSortDirective,\n    TsSortHeaderComponent,\n  ],\n})\nexport class TsSortModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsSortState.html":{"url":"interfaces/TsSortState.html","title":"interface - TsSortState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsSortState\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.directive.ts\n        \n\n            \n                Description\n            \n            \n                The current sort state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        direction\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the column being sorted\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:     TsSortDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsSortDirection\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sort direction\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        \n\nTable of Contents\n\nAdding sort to table headers\nChanging the sort order\nDisabling sorting\nUsing sort with the ts-table\nAccessibility\n\n\nAdding sort to table headers\nTo add sorting behavior and styling to a set of table headers, add ts-sort-header to each header\nand provide an id that will identify it. These headers should be contained within a parent element\nwith the tsSort directive, which will emit a sortChange event when the user triggers sorting\non the header.\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\ntsSort will emit an sortChange event that contains the ID of the header triggered and the\ndirection to sort (asc or desc).\nChanging the sort order\nBy default, a sort header starts its sorting at asc and then desc. Triggering the sort header\nafter desc will remove sorting.\nTo reverse the sort order for all headers, set the tsSortStart to desc on the tsSort\ndirective. To reverse the order only for a specific header, set the start input only on the header\ninstead.\nTo prevent the user from clearing the sort sort state from an already sorted column, set\ntsSortDisableClear to true on the tsSort to affect all headers, or set disableClear to true on\na specific header.\nDisabling sorting\nIf you want to prevent the user from changing the sorting order of any column, you can use the\ntsSortDisabled binding on the ts-sort, or the disabled on an single ts-sort-header.\nUsing sort with the ts-table\nWhen used on an ts-table header, it is not required to set an ts-sort-header id on because by\ndefault it will use the id of the column.\nAccessibility\nThe aria-label for the sort button can be set in TsSortHeaderIntl.\n\n    \n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n} from './sort-errors';\n\n\n/**\n * Define the allowed sort directions for {@link TsSort}\n */\nexport type TsSortDirection\n  = 'asc'\n  | 'desc'\n  | ''\n;\n\n\n/**\n * Interface for a directive that holds sorting state consumed by `TsSortHeaderComponent`\n */\nexport interface TsSortableItem {\n  /**\n   * The id of the column being sorted\n   */\n  id: string;\n\n  /**\n   * Starting sort direction\n   */\n  start: 'asc' | 'desc';\n\n  /**\n   * Whether to disable clearing the sorting state\n   */\n  disableClear: boolean;\n}\n\n\n/**\n * The current sort state\n */\nexport interface TsSortState {\n  /**\n   * The id of the column being sorted\n   */\n  active: string;\n\n  /**\n   * The sort direction\n   */\n  direction: TsSortDirection;\n}\n\n\n// Boilerplate for applying mixins to TsSort.\nexport class TsSortBase {}\nexport const _TsSortMixinBase = mixinDisabled(TsSortBase);\n\n\n/**\n * Container for TsSortables to manage the sort state and provide default sort parameters\n */\n@Directive({\n  selector: '[tsSort]',\n  exportAs: 'tsSort',\n  inputs: ['disabled: tsSortDisabled'],\n})\nexport class TsSortDirective extends _TsSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /**\n   * Collection of all registered sortables that this directive manages\n   */\n  private sortables = new Map();\n\n  /**\n   * Used to notify any child components listening to state changes\n   */\n  public _stateChanges = new Subject();\n\n  /**\n   * The id of the most recently sorted TsSortable\n   */\n  @Input('tsSortActive')\n  public active!: string;\n\n  /**\n   * The direction to set when an TsSortable is initially sorted.\n   *\n   * May be overriden by the TsSortable's sort start.\n   */\n  @Input('tsSortStart')\n  public start: 'asc' | 'desc' = 'asc';\n\n  /**\n   * The sort direction of the currently active TsSortable\n   */\n  @Input('tsSortDirection')\n  public set direction(direction: TsSortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  public get direction(): TsSortDirection {\n    return this._direction;\n  }\n  private _direction: TsSortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   *\n   * May be overriden by the TsSortable's disable clear input.\n   */\n  @Input('tsSortDisableClear')\n  public set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  public get disableClear() {\n    return this._disableClear;\n  }\n  private _disableClear: boolean = false;\n\n  /**\n   * Event emitted when the user changes either the active sort or sort direction\n   */\n  @Output('tsSortChange')\n  readonly sortChange = new EventEmitter();\n\n\n  /**\n   * Trigger next on all changes\n   */\n  public ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n\n  /**\n   * Complete the observable on destroy\n   */\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n\n  /**\n   * Register function to be used by the contained TsSortables. Adds the TsSortable to the\n   * collection of TsSortables.\n   */\n  register(sortable: TsSortableItem): void {\n    if (!sortable.id && isDevMode()) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id) && isDevMode()) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n\n  /**\n   * Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\n   * collection of contained TsSortables.\n   */\n  deregister(sortable: TsSortableItem): void {\n    this.sortables.delete(sortable.id);\n  }\n\n\n  /**\n   * Sets the active sort id and determines the new sort direction\n   */\n  sort(sortable: TsSortableItem): void {\n    if (this.active !== sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n\n  /**\n   * Returns the next sort direction of the active sortable, checking for potential overrides\n   */\n  getNextSortDirection(sortable: TsSortableItem): TsSortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    const sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n}\n\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): TsSortDirection[] {\n  const sortOrder: TsSortDirection[] = ['asc', 'desc'];\n\n  if (start === 'desc') {\n    sortOrder.reverse();\n  }\n\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n\n  return sortOrder;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsSortableItem.html":{"url":"interfaces/TsSortableItem.html","title":"interface - TsSortableItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsSortableItem\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.directive.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a directive that holds sorting state consumed by TsSortHeaderComponent\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        disableClear\n                                \n                                \n                                        id\n                                \n                                \n                                        start\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableClear\n                                    \n                                \n                                \n                                    \n                                        disableClear:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to disable clearing the sorting state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the column being sorted\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:     \"asc\" | \"desc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"asc\" | \"desc\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Starting sort direction\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        \n\nTable of Contents\n\nAdding sort to table headers\nChanging the sort order\nDisabling sorting\nUsing sort with the ts-table\nAccessibility\n\n\nAdding sort to table headers\nTo add sorting behavior and styling to a set of table headers, add ts-sort-header to each header\nand provide an id that will identify it. These headers should be contained within a parent element\nwith the tsSort directive, which will emit a sortChange event when the user triggers sorting\non the header.\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\ntsSort will emit an sortChange event that contains the ID of the header triggered and the\ndirection to sort (asc or desc).\nChanging the sort order\nBy default, a sort header starts its sorting at asc and then desc. Triggering the sort header\nafter desc will remove sorting.\nTo reverse the sort order for all headers, set the tsSortStart to desc on the tsSort\ndirective. To reverse the order only for a specific header, set the start input only on the header\ninstead.\nTo prevent the user from clearing the sort sort state from an already sorted column, set\ntsSortDisableClear to true on the tsSort to affect all headers, or set disableClear to true on\na specific header.\nDisabling sorting\nIf you want to prevent the user from changing the sorting order of any column, you can use the\ntsSortDisabled binding on the ts-sort, or the disabled on an single ts-sort-header.\nUsing sort with the ts-table\nWhen used on an ts-table header, it is not required to set an ts-sort-header id on because by\ndefault it will use the id of the column.\nAccessibility\nThe aria-label for the sort button can be set in TsSortHeaderIntl.\n\n    \n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n} from './sort-errors';\n\n\n/**\n * Define the allowed sort directions for {@link TsSort}\n */\nexport type TsSortDirection\n  = 'asc'\n  | 'desc'\n  | ''\n;\n\n\n/**\n * Interface for a directive that holds sorting state consumed by `TsSortHeaderComponent`\n */\nexport interface TsSortableItem {\n  /**\n   * The id of the column being sorted\n   */\n  id: string;\n\n  /**\n   * Starting sort direction\n   */\n  start: 'asc' | 'desc';\n\n  /**\n   * Whether to disable clearing the sorting state\n   */\n  disableClear: boolean;\n}\n\n\n/**\n * The current sort state\n */\nexport interface TsSortState {\n  /**\n   * The id of the column being sorted\n   */\n  active: string;\n\n  /**\n   * The sort direction\n   */\n  direction: TsSortDirection;\n}\n\n\n// Boilerplate for applying mixins to TsSort.\nexport class TsSortBase {}\nexport const _TsSortMixinBase = mixinDisabled(TsSortBase);\n\n\n/**\n * Container for TsSortables to manage the sort state and provide default sort parameters\n */\n@Directive({\n  selector: '[tsSort]',\n  exportAs: 'tsSort',\n  inputs: ['disabled: tsSortDisabled'],\n})\nexport class TsSortDirective extends _TsSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /**\n   * Collection of all registered sortables that this directive manages\n   */\n  private sortables = new Map();\n\n  /**\n   * Used to notify any child components listening to state changes\n   */\n  public _stateChanges = new Subject();\n\n  /**\n   * The id of the most recently sorted TsSortable\n   */\n  @Input('tsSortActive')\n  public active!: string;\n\n  /**\n   * The direction to set when an TsSortable is initially sorted.\n   *\n   * May be overriden by the TsSortable's sort start.\n   */\n  @Input('tsSortStart')\n  public start: 'asc' | 'desc' = 'asc';\n\n  /**\n   * The sort direction of the currently active TsSortable\n   */\n  @Input('tsSortDirection')\n  public set direction(direction: TsSortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  public get direction(): TsSortDirection {\n    return this._direction;\n  }\n  private _direction: TsSortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   *\n   * May be overriden by the TsSortable's disable clear input.\n   */\n  @Input('tsSortDisableClear')\n  public set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  public get disableClear() {\n    return this._disableClear;\n  }\n  private _disableClear: boolean = false;\n\n  /**\n   * Event emitted when the user changes either the active sort or sort direction\n   */\n  @Output('tsSortChange')\n  readonly sortChange = new EventEmitter();\n\n\n  /**\n   * Trigger next on all changes\n   */\n  public ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n\n  /**\n   * Complete the observable on destroy\n   */\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n\n  /**\n   * Register function to be used by the contained TsSortables. Adds the TsSortable to the\n   * collection of TsSortables.\n   */\n  register(sortable: TsSortableItem): void {\n    if (!sortable.id && isDevMode()) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id) && isDevMode()) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n\n  /**\n   * Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\n   * collection of contained TsSortables.\n   */\n  deregister(sortable: TsSortableItem): void {\n    this.sortables.delete(sortable.id);\n  }\n\n\n  /**\n   * Sets the active sort id and determines the new sort direction\n   */\n  sort(sortable: TsSortableItem): void {\n    if (this.active !== sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n\n  /**\n   * Returns the next sort direction of the active sortable, checking for potential overrides\n   */\n  getNextSortDirection(sortable: TsSortableItem): TsSortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    const sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n}\n\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): TsSortDirection[] {\n  const sortOrder: TsSortDirection[] = ['asc', 'desc'];\n\n  if (start === 'desc') {\n    sortOrder.reverse();\n  }\n\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n\n  return sortOrder;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsSpacingModule.html":{"url":"modules/TsSpacingModule.html","title":"module - TsSpacingModule","body":"\n                   \n\n\n\n\n  Modules\n  TsSpacingModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsSpacingModule\n\n\n\ncluster_TsSpacingModule_declarations\n\n\n\ncluster_TsSpacingModule_exports\n\n\n\n\nTsVerticalSpacingDirective\n\nTsVerticalSpacingDirective\n\n\n\nTsSpacingModule\n\nTsSpacingModule\n\nTsSpacingModule -->\n\nTsVerticalSpacingDirective->TsSpacingModule\n\n\n\n\n\nTsVerticalSpacingDirective \n\nTsVerticalSpacingDirective \n\nTsVerticalSpacingDirective  -->\n\nTsSpacingModule->TsVerticalSpacingDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/spacing/spacing.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsVerticalSpacingDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsVerticalSpacingDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsVerticalSpacingDirective } from './vertical-spacing.directive';\n\nexport * from './vertical-spacing.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TsVerticalSpacingDirective,\n  ],\n  exports: [\n    TsVerticalSpacingDirective,\n  ],\n})\nexport class TsSpacingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsTableComponent.html":{"url":"components/TsTableComponent.html","title":"component - TsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsTableComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/table/table.component.ts\n\n\n    \n        Description\n    \n    \n        Wrapper for the CdkTable with Material design styles.\n\n    \n\n    \n        Extends\n    \n    \n            CdkTable\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsTable\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-table\n            \n\n            \n                styleUrls\n                table.component.scss\n            \n\n\n            \n                template\n                \n  \n    \n    \n    \n  \n\n\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n\nTable of Contents\n\nBasic usage\n1. Define the table's columns\n2. Define the table's rows\n3. Provide data\n4. Full HTML example\n\n\nDynamically update table data\nDynamic columns\nSorting by column\nRow selection\nNo-wrap for a column\nMin-width for a column\nFull example with pagination, sorting and dynamic columns\n\n\nBasic usage\n1. Define the table's columns\nDefine the table's columns. Each column definition should be given a unique name and contain the\ncontent for its header and row cells.\nHere's a simple column definition with the name userName. The header cell contains the text Username\nand the row cell will render the name property of each row's data.\n\n  \n    Username\n  \n\n  \n    {{ item.username }}\n  \n2. Define the table's rows\nAfter defining your columns, provide the header and data row templates that will be rendered out by\nthe table. Each row needs to be given a list of the columns that it should contain. The order of the\nnames will define the order of the cells rendered.\nIt is not required to provide a list of all the defined column names, but only the ones that you\nwant to have rendered.\n\n\n\n\n\n3. Provide data\nThe column and row definitions now capture how data will render - all that's left is to provide the\ndata itself.\nCreate an instance of TsTableDataSource and set the items to be displayed to the data property.\nthis.myDataSource = new TsTableDataSource();\nthis.myDataSource.data = dataToRender;\n  ...\nThe DataSource can be seeded with initial data:\nthis.myDataSource = new TsTableDataSource(INITIAL_DATA);An interface for your table item can be passed to TsTableDataSource for stricter typing:\nexport interface MyTableItem {\n  name: string;\n  id: number;\n}\n\nthis.myDataSource: TsTableDataSource = new TsTableDataSource(INITIAL_DATA)4. Full HTML example\n\n\n\n  \n  \n    \n      Username\n    \n\n    \n      {{ item.username }}\n    \n  \n\n  \n  \n    \n      Age\n    \n\n    \n      {{ item.age }}\n    \n  \n\n  \n  \n  \n\n  \n  \n  \n\nDynamically update table data\nYour data source was created during the bootstraping of your component:\nthis.myDataSource = new TsTableDataSource();Simply assign the new data to myDataSource.data. The table will flush the old data and display the\nnew data:\nthis.myDataSource.data = dataToRender;Dynamic columns\nEnable dynamic columns using a TsSelectComponent:\n// Define a data source\nthis.myDataSource = new TsTableDataSource();\n\n// Define all available columns (`TsSelectComponent` requires an array of objects)\nallColumns = [\n  {\n    name: 'Username',\n    myValue: 'username',\n  },\n  {\n    name: 'Age',\n    myValue: 'age',\n  },\n];Both the TsSelectComponent and the tsRowDef columns input should reference the same ngModel\n(displayedColumns in this example).\n\n\n\n  \n\n  \n  \n  \n\n  \n  \n  \n\nSorting by column\nTo add sorting behavior to the table, add the tsSort directive to the  and add\nts-sort-header to each column header cell that should trigger sorting. Provide the\nTsSortDirective directive to the TsTableDataSource and it will automatically listen for sorting\nchanges and change the order of data rendered by the table.\nBy default, the TsTableDataSource sorts with the assumption that the sorted column's name matches\nthe data property name that the column displays. For example, the following column definition is\nnamed position, which matches the name of the property displayed in the row cell.\n\n\n\n  \n  \n    \n    \n      Position\n    \n\n    \n      \n      {{ element.position }}\n    \n  \n\nIn your class, get a reference to the TsSortDirective using @ViewChild:\nimport { AfterViewInit } from '@angular/core';\nimport { TsSortDirective } from '@terminus/ui';\n\nexport class TableComponent implements AfterViewInit {\n  // Get a reference to the TsSortDirective instance\n  @ViewChild(TsSortDirective) sort: TsSortDirective;\n\n  public ngAfterViewInit(): void {\n    // Subscribe to the sortChange event to reset pagination, fetch new data, etc\n    this.sort.sortChange.subscribe(() => {\n      // Table was sorted - go get new data!\n    });\n  }\n}Row selection\nPossible but not implemented until a valid use-case arises.\nNo-wrap for a column\nSometimes a column's content should not wrap even at small viewport sizes. Adding the directive\nnoWrap=\"true\" to the column will keep then contents from wrapping regardless of the viewport\nwidth.\n\n\n  \n    Created\n  \n  \n    {{ item.created_at | date:shortDate }}\n  \nMin-width for a column\nDefining a minimum width for specific columns can help the layout not compress certain columns past\na readable point. Add the directive minWidth and pass it any valid CSS min-width value (100px,\n10%, 12rem, etc..).\n\n\n  \n    Created\n  \n  \n    {{ item.created_at | date:shortDate }}\n  \n\nFull example with pagination, sorting and dynamic columns\nimport {\n  Component,\n  ViewChild,\n  AfterViewInit,\n} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { merge, Observable, of } from 'rxjs';\nimport { startWith } from 'rxjs/operators/startWith';\nimport { map } from 'rxjs/operators/map';\nimport { switchMap } from 'rxjs/operators/switchMap';\nimport { catchError } from 'rxjs/operators/catchError';\n\nimport {\n  TsTableDataSource,\n  TsSortDirective,\n  TsPaginatorComponent,\n  TsPaginatorMenuItem,\n} from '@terminus/ui';\n\n\n@Component({\n  selector: 'my-component',\n  template: `\n    \n    \n      \n    \n\n\n    \n\n      \n        \n          Created\n        \n        \n          {{ item.created_at | date:shortDate }}\n        \n      \n\n      \n        \n          Number\n        \n        \n          {{ item.number }}\n        \n      \n\n      \n        \n          Title\n        \n        \n          {{ item.title }}\n        \n      \n\n      \n        \n          State\n        \n        \n          {{ item.state }}\n        \n      \n\n      \n        \n          Comments\n        \n        \n          {{ item.comments }}\n        \n      \n\n      \n      \n\n      \n      \n\n    \n\n\n    \n    \n      \n    \n  `,\n})\nexport class TableComponent implements AfterViewInit {\n  allColumns: any[] = [\n    {\n      name: 'Created',\n      value: 'created',\n    },\n    {\n      name: 'Title',\n      value: 'title',\n    },\n    {\n      name: 'Comments',\n      value: 'comments',\n    },\n    {\n      name: 'State',\n      value: 'state',\n    },\n    {\n      name: 'Number',\n      value: 'number',\n    },\n  ];\n  displayedColumns: string[] = [\n    'created',\n    'number',\n    'title',\n    'state',\n    'comments',\n  ];\n  exampleDatabase: ExampleHttpDao | null;\n  dataSource: TsTableDataSource = new TsTableDataSource();\n  resultsLength: number = 0;\n\n  @ViewChild(TsSortDirective)\n  sort: TsSortDirective;\n\n  @ViewChild(TsPaginatorComponent)\n  paginator: TsPaginatorComponent;\n\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.exampleDatabase = new ExampleHttpDao(this.http);\n\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => {\n      this.paginator.currentPageIndex = 0;\n    });\n\n    // Fetch new data anytime the sort is changed, the page is changed, or the records shown per\n    // page is changed\n    merge(this.sort.sortChange, this.paginator.pageSelect, this.paginator.recordsPerPageChange)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          return this.exampleDatabase.getRepoIssues(\n            this.sort.active,\n            this.sort.direction,\n            this.paginator.currentPageIndex,\n            this.paginator.recordsPerPage,\n          );\n        }),\n        map(data => {\n          console.log('Demo: fetched data: ', data)\n          this.resultsLength = data.total_count;\n\n          return data.items;\n        }),\n        catchError(() => {\n          // Catch if the GitHub API has reached its rate limit. Return empty data.\n          console.warn('GitHub API rate limit has been reached!')\n          return of([]);\n        })\n      ).subscribe(data => {\n        this.dataSource.data = data;\n      });\n  }\n}\n\n\nexport interface GithubApi {\n  items: GithubIssue[];\n  total_count: number;\n}\n\nexport interface GithubIssue {\n  created_at: string;\n  number: string;\n  state: string;\n  title: string;\n}\n\n/**\n * An example database that this example uses to retrieve data for the table.\n */\nexport class ExampleHttpDao {\n  constructor(private http: HttpClient) {}\n\n  getRepoIssues(sort: string, order: string, page: number, perPage: number): Observable {\n    const href = 'https://api.github.com/search/issues';\n    const requestUrl = `${href}?q=repo:GetTerminus/terminus-ui`;\n    const requestParams = `&sort=${sort}&order=${order}&page=${page + 1}&per_page=${perPage}`;\n\n    return this.http.get(`${requestUrl}${requestParams}`);\n  }\n}\n    \n\n    \n        import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CdkTable,\n} from '@angular/cdk/table';\n\n\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\n@Component({\n  selector: 'ts-table',\n  template: `\n    \n      \n        \n        \n        \n      \n    \n  `,\n  styleUrls: ['./table.component.scss'],\n  host: {\n    class: 'ts-table',\n  },\n  exportAs: 'tsTable',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TsTableComponent extends CdkTable { }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsTableDataSource.html":{"url":"classes/TsTableDataSource.html","title":"class - TsTableDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsTableDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/table-data-source.ts\n        \n\n            \n                Description\n            \n            \n                Data source that accepts a client-side data array and includes native support of filtering,\nsorting (using TsSortDirective), and paginator (using TsPaginatorComponent).\n\n            \n\n\n            \n                Implements\n            \n            \n                        DataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _data\n                            \n                            \n                                _renderChangesSubscription\n                            \n                            \n                                    Private\n                                _renderData\n                            \n                            \n                                filteredData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _updateChangeSubscription\n                            \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialData: T[])\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/table/table-data-source.ts:48\n                            \n                        \n\n                \n                    \n                            Set up data and change subscriptions\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialData\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _data:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:19\n                            \n                        \n\n                \n                    \n                        Stream that emits when a new data array is set on the data source.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _renderChangesSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _renderChangesSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:30\n                            \n                        \n\n                \n                    \n                        Subscription to the changes that should trigger an update to the table's rendered rows, such\nas filtering, sorting, pagination, or base data changes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _renderData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _renderData:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:24\n                            \n                        \n\n                \n                    \n                        Stream emitting render data to the table (depends on ordered data changes).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filteredData:     T[]\n\n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:38\n                            \n                        \n\n                \n                    \n                        The filtered set of data that has been matched by the filter string, or all the data if there\nis no filter. Useful for knowing the set of data the table represents.\nFor example, a 'selectAll()' function would likely want to select the set of filtered data\nshown to the user rather than all the data.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _updateChangeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n_updateChangeSubscription()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:65\n                            \n                        \n\n\n                \n                    \n                            Subscribe to changes that should trigger an update to the table's rendered rows. When the\nchanges occur, process the current state of the filter, sort, and pagination along with the\nprovided base data and send it to the table for rendering.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connect\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:80\n                            \n                        \n\n\n                \n                    \n                            Used by the TsTableComponent. Called when it connects to the data source.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:86\n                            \n                        \n\n\n                \n                    \n                            Used by the TsTableComponent. Called when it is destroyed. No-op.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/table/table-data-source.ts:46\n                                \n                            \n\n                \n                    \n                        setdata(data: [])\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/table/table-data-source.ts:43\n                                \n                            \n                    \n                        \n                                Array of data that should be rendered by the table, where each object represents one row.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { DataSource } from '@angular/cdk/table';\nimport {\n  BehaviorSubject,\n  Subscription,\n} from 'rxjs';\n\n\n\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using {@link TsSortDirective}), and paginator (using {@link TsPaginatorComponent}).\n */\nexport class TsTableDataSource implements DataSource {\n  /**\n   * Stream that emits when a new data array is set on the data source.\n   */\n  private _data: BehaviorSubject;\n\n  /**\n   * Stream emitting render data to the table (depends on ordered data changes).\n   */\n  private _renderData = new BehaviorSubject([]);\n\n  /**\n   * Subscription to the changes that should trigger an update to the table's rendered rows, such\n   * as filtering, sorting, pagination, or base data changes.\n   */\n  _renderChangesSubscription!: Subscription;\n\n  /**\n   * The filtered set of data that has been matched by the filter string, or all the data if there\n   * is no filter. Useful for knowing the set of data the table represents.\n   * For example, a 'selectAll()' function would likely want to select the set of filtered data\n   * shown to the user rather than all the data.\n   */\n  filteredData!: T[];\n\n  /**\n   * Array of data that should be rendered by the table, where each object represents one row.\n   */\n  set data(data: T[]) {\n    this._data.next(data);\n  }\n  get data() {\n    return this._data.value;\n  }\n\n\n  /**\n   * Set up data and change subscriptions\n   */\n  constructor(initialData: T[] = []) {\n    this._data = new BehaviorSubject(initialData);\n    this._updateChangeSubscription();\n  }\n\n\n  /**\n   * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n   * changes occur, process the current state of the filter, sort, and pagination along with the\n   * provided base data and send it to the table for rendering.\n   */\n  _updateChangeSubscription(): void {\n    if (this._renderChangesSubscription) {\n      this._renderChangesSubscription.unsubscribe();\n    }\n\n    // Watch for base data or filter changes to provide a filtered set of data.\n    this._renderChangesSubscription = this._data\n    // Watched for paged data changes and send the result to the table to render.\n    .subscribe((data) => this._renderData.next(data));\n  }\n\n\n  /**\n   * Used by the {@link TsTableComponent}. Called when it connects to the data source.\n   */\n  connect() { return this._renderData; }\n\n\n  /**\n   * Used by the {@link TsTableComponent}. Called when it is destroyed. No-op.\n   */\n  disconnect() {}\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsTableModule.html":{"url":"modules/TsTableModule.html","title":"module - TsTableModule","body":"\n                   \n\n\n\n\n  Modules\n  TsTableModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsTableModule\n\n\n\ncluster_TsTableModule_declarations\n\n\n\ncluster_TsTableModule_TsCellDefDirective_providers\n\n\n\ncluster_TsTableModule_imports\n\n\n\ncluster_TsTableModule_exports\n\n\n\n\nTsCellDefDirective\n\nTsCellDefDirective\n\n\n\nTsTableModule\n\nTsTableModule\n\nTsTableModule -->\n\nTsCellDefDirective->TsTableModule\n\n\n\n\n\nTsCellDirective\n\nTsCellDirective\n\nTsTableModule -->\n\nTsCellDirective->TsTableModule\n\n\n\n\n\nTsColumnDefDirective\n\nTsColumnDefDirective\n\nTsTableModule -->\n\nTsColumnDefDirective->TsTableModule\n\n\n\n\n\nTsHeaderCellDefDirective\n\nTsHeaderCellDefDirective\n\nTsTableModule -->\n\nTsHeaderCellDefDirective->TsTableModule\n\n\n\n\n\nTsHeaderCellDirective\n\nTsHeaderCellDirective\n\nTsTableModule -->\n\nTsHeaderCellDirective->TsTableModule\n\n\n\n\n\nTsHeaderRowComponent\n\nTsHeaderRowComponent\n\nTsTableModule -->\n\nTsHeaderRowComponent->TsTableModule\n\n\n\n\n\nTsHeaderRowDefDirective\n\nTsHeaderRowDefDirective\n\nTsTableModule -->\n\nTsHeaderRowDefDirective->TsTableModule\n\n\n\n\n\nTsRowComponent\n\nTsRowComponent\n\nTsTableModule -->\n\nTsRowComponent->TsTableModule\n\n\n\n\n\nTsRowDefDirective\n\nTsRowDefDirective\n\nTsTableModule -->\n\nTsRowDefDirective->TsTableModule\n\n\n\n\n\nTsTableComponent\n\nTsTableComponent\n\nTsTableModule -->\n\nTsTableComponent->TsTableModule\n\n\n\n\n\nTsCellDefDirective \n\nTsCellDefDirective \n\nTsCellDefDirective  -->\n\nTsTableModule->TsCellDefDirective \n\n\n\n\n\nTsCellDirective \n\nTsCellDirective \n\nTsCellDirective  -->\n\nTsTableModule->TsCellDirective \n\n\n\n\n\nTsColumnDefDirective \n\nTsColumnDefDirective \n\nTsColumnDefDirective  -->\n\nTsTableModule->TsColumnDefDirective \n\n\n\n\n\nTsHeaderCellDefDirective \n\nTsHeaderCellDefDirective \n\nTsHeaderCellDefDirective  -->\n\nTsTableModule->TsHeaderCellDefDirective \n\n\n\n\n\nTsHeaderCellDirective \n\nTsHeaderCellDirective \n\nTsHeaderCellDirective  -->\n\nTsTableModule->TsHeaderCellDirective \n\n\n\n\n\nTsHeaderRowComponent \n\nTsHeaderRowComponent \n\nTsHeaderRowComponent  -->\n\nTsTableModule->TsHeaderRowComponent \n\n\n\n\n\nTsHeaderRowDefDirective \n\nTsHeaderRowDefDirective \n\nTsHeaderRowDefDirective  -->\n\nTsTableModule->TsHeaderRowDefDirective \n\n\n\n\n\nTsRowComponent \n\nTsRowComponent \n\nTsRowComponent  -->\n\nTsTableModule->TsRowComponent \n\n\n\n\n\nTsRowDefDirective \n\nTsRowDefDirective \n\nTsRowDefDirective  -->\n\nTsTableModule->TsRowDefDirective \n\n\n\n\n\nTsTableComponent \n\nTsTableComponent \n\nTsTableComponent  -->\n\nTsTableModule->TsTableComponent \n\n\n\n\n\n{ : , :  }\n\n{ : , :  }\n\nTsCellDefDirective -->\n\n{ : , :  }->TsCellDefDirective\n\n\n\nTsColumnDefDirective -->\n\n{ : , :  }->TsColumnDefDirective\n\n\n\nTsHeaderCellDefDirective -->\n\n{ : , :  }->TsHeaderCellDefDirective\n\n\n\nTsHeaderRowDefDirective -->\n\n{ : , :  }->TsHeaderRowDefDirective\n\n\n\nTsRowDefDirective -->\n\n{ : , :  }->TsRowDefDirective\n\n\n\n\n\nTsPaginatorModule\n\nTsPaginatorModule\n\nTsTableModule -->\n\nTsPaginatorModule->TsTableModule\n\n\n\n\n\nTsSortModule\n\nTsSortModule\n\nTsTableModule -->\n\nTsSortModule->TsTableModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/table/table.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Much of this was lifted directly from Angular Material. I highly recommend checking out their\nsource code: https://github.com/angular/material2/tree/master/src/lib/table\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCellDefDirective\n                            \n                            \n                                TsCellDirective\n                            \n                            \n                                TsColumnDefDirective\n                            \n                            \n                                TsHeaderCellDefDirective\n                            \n                            \n                                TsHeaderCellDirective\n                            \n                            \n                                TsHeaderRowComponent\n                            \n                            \n                                TsHeaderRowDefDirective\n                            \n                            \n                                TsRowComponent\n                            \n                            \n                                TsRowDefDirective\n                            \n                            \n                                TsTableComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsPaginatorModule\n                            \n                            \n                                    TsSortModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCellDefDirective\n                            \n                            \n                                    TsCellDirective\n                            \n                            \n                                    TsColumnDefDirective\n                            \n                            \n                                    TsHeaderCellDefDirective\n                            \n                            \n                                    TsHeaderCellDirective\n                            \n                            \n                                    TsHeaderRowComponent\n                            \n                            \n                                    TsHeaderRowDefDirective\n                            \n                            \n                                    TsRowComponent\n                            \n                            \n                                    TsRowDefDirective\n                            \n                            \n                                    TsTableComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { TsSortModule } from './../sort/sort.module';\nimport { TsPaginatorModule } from './../paginator/paginator.module';\nimport {\n  TsCellDirective,\n  TsCellDefDirective,\n  TsColumnDefDirective,\n  TsHeaderCellDirective,\n  TsHeaderCellDefDirective,\n} from './cell';\nimport {\n  TsHeaderRowComponent,\n  TsHeaderRowDefDirective,\n  TsRowComponent,\n  TsRowDefDirective,\n} from './row';\nimport { TsTableComponent } from './table.component';\n\nexport * from './table-data-source';\nexport * from './cell';\nexport * from './row';\nexport * from './table.component';\nexport * from './../sort/sort.module';\n\n\n/**\n * Much of this was lifted directly from Angular Material. I highly recommend checking out their\n * source code: https://github.com/angular/material2/tree/master/src/lib/table\n */\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CdkTableModule,\n    TsSortModule,\n    TsPaginatorModule,\n  ],\n  declarations: [\n    TsCellDefDirective,\n    TsCellDirective,\n    TsColumnDefDirective,\n    TsHeaderCellDefDirective,\n    TsHeaderCellDirective,\n    TsHeaderRowComponent,\n    TsHeaderRowDefDirective,\n    TsRowComponent,\n    TsRowDefDirective,\n    TsTableComponent,\n  ],\n  exports: [\n    TsCellDefDirective,\n    TsCellDirective,\n    TsColumnDefDirective,\n    TsHeaderCellDefDirective,\n    TsHeaderCellDirective,\n    TsHeaderRowComponent,\n    TsHeaderRowDefDirective,\n    TsRowComponent,\n    TsRowDefDirective,\n    TsTableComponent,\n  ],\n})\nexport class TsTableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsTimeAgoPipe.html":{"url":"pipes/TsTimeAgoPipe.html","title":"pipe - TsTimeAgoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsTimeAgoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/time-ago/time-ago.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsTimeAgo\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string | Date, comparedDate: string | Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/time-ago/time-ago.pipe.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string | Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        comparedDate\n                                                        \n                                                                    string | Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n  isDevMode,\n} from '@angular/core';\nimport {\n  isValid,\n  formatDistance,\n} from 'date-fns';\n\n\n@Pipe({\n  name: 'tsTimeAgo',\n})\nexport class TsTimeAgoPipe implements PipeTransform {\n  transform(value: string | Date, comparedDate: string | Date): string | undefined {\n    // Check for null values to avoid issues during data-binding\n    if (value == null || value === '') {\n      return;\n    }\n\n    // Check for date validity\n    if (!isValid(value) && isDevMode()) {\n      throw Error(`'${value}' is not a valid date.`);\n    }\n    if (!isValid(comparedDate) && isDevMode()) {\n      throw Error(`'${comparedDate}' is not a valid date.`);\n    }\n\n    // If dealing with a date objects, convert to strings\n    const date1: string = (typeof value === 'string') ? value : new Date(value).toISOString();\n    const date2: string =\n      (typeof comparedDate === 'string') ? comparedDate : new Date(comparedDate).toISOString();\n\n    return formatDistance(date1, date2);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsTitleCasePipe.html":{"url":"pipes/TsTitleCasePipe.html","title":"pipe - TsTitleCasePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsTitleCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/title-case/title-case.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsTitleCase\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/title-case/title-case.pipe.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\n\n\n@Pipe({\n  name: 'tsTitleCase',\n})\nexport class TsTitleCasePipe implements PipeTransform {\n  transform(value: string): string | undefined {\n    // Check for null values to avoid issues during data-binding\n    if (value == null || value === '') {\n      return;\n    }\n\n    return value.toLowerCase().split(' ').map((word) => {\n      return (word.charAt(0).toUpperCase() + word.slice(1));\n    }).join(' ');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsToggleComponent.html":{"url":"components/TsToggleComponent.html","title":"component - TsToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/toggle/toggle.component.ts\n\n\n    \n        Description\n    \n    \n        The is a toggle component\nQA CSS CLASSES\n\nqa-toggle: The toggle element\n\n\n    \n\n    \n        Extends\n    \n    \n            TsReactiveFormBaseComponent\n    \n\n\n    \n        Example\n    \n    \n                \n                    My Toggle!\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                ts-toggle\n            \n\n            \n                styleUrls\n                toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isChecked\n                            \n                            \n                                    Protected\n                                innerValue\n                            \n                            \n                                    Protected\n                                onChangeCallback\n                            \n                            \n                                    Protected\n                                onTouchedCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onBlur\n                            \n                            \n                                    Protected\n                                registerOnChange\n                            \n                            \n                                    Protected\n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                isChecked\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isRequired\n                            \n                            \n                                labelPosition\n                            \n                            \n                                name\n                            \n                            \n                                theme\n                            \n                            \n                                formControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                    \n                        Define the aria label\n\n                            \n                            Type:    string | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:73\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isChecked\n                    \n                    \n                        Allow the checked state to be set\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:79\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the toggle should be disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:92\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                    \n                        Define if the toggle is required\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:98\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                    \n                        Define the position of the label\n\n                            \n                            Type:    \"before\" | \"after\"\n\n                            \n                        \n                            Default value: 'after'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:104\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        Define the input name for the toggle\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'toggle'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:110\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:116\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        Define the form control to get access to validators\n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        Emit an event each time the toggle value changes\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:122\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onBlur\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onBlur()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:61\n                            \n                        \n\n\n                \n                    \n                            Set touched on blur\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:69\n                            \n                        \n\n\n                \n                    \n                            Register onChange callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:77\n                            \n                        \n\n\n                \n                    \n                            Register onTouched callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:85\n                            \n                        \n\n\n                \n                    \n                            Write value to inner value (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _isChecked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _isChecked:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            innerValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        innerValue:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:26\n                            \n                        \n\n                \n                    \n                        Define the internal data model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onChangeCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onChangeCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:31\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onTouchedCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onTouchedCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:36\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isChecked\n                    \n                \n\n                \n                    \n                        getisChecked()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:83\n                                \n                            \n\n                \n                    \n                        setisChecked(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:79\n                                \n                            \n                    \n                        \n                                Allow the checked state to be set\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Expose the MatSlideToggleChange event as TsSlideToggleChange. Used by {@link TsToggleComponent}\n */\nexport class TsSlideToggleChange extends MatSlideToggleChange {}\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via our base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsToggleComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * The is a toggle component\n *\n * #### QA CSS CLASSES\n * - `qa-toggle`: The toggle element\n *\n * @example\n * My Toggle!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss'],\n  host: {\n    class: 'ts-toggle',\n  },\n  providers: [CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsToggleComponent extends TsReactiveFormBaseComponent {\n  /**\n   * Define the aria label\n   */\n  @Input()\n  public ariaLabel: string | undefined;\n\n  /**\n   * Allow the checked state to be set\n   */\n  @Input()\n  public set isChecked(value: boolean) {\n    this._isChecked = coerceBooleanProperty(value);\n    this.value = this._isChecked;\n  }\n  public get isChecked(): boolean {\n    return this._isChecked;\n  }\n  private _isChecked: boolean = false;\n\n  /**\n   * Define if the toggle should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the toggle is required\n   */\n  @Input()\n  public isRequired: boolean = true;\n\n  /**\n   * Define the position of the label\n   */\n  @Input()\n  public labelPosition: 'before' | 'after' = 'after';\n\n  /**\n   * Define the input name for the toggle\n   */\n  @Input()\n  public name: string = 'toggle';\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit an event each time the toggle value changes\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsToggleModule.html":{"url":"modules/TsToggleModule.html","title":"module - TsToggleModule","body":"\n                   \n\n\n\n\n  Modules\n  TsToggleModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsToggleModule\n\n\n\ncluster_TsToggleModule_declarations\n\n\n\ncluster_TsToggleModule_TsToggleComponent_providers\n\n\n\ncluster_TsToggleModule_exports\n\n\n\n\nTsToggleComponent\n\nTsToggleComponent\n\n\n\nTsToggleModule\n\nTsToggleModule\n\nTsToggleModule -->\n\nTsToggleComponent->TsToggleModule\n\n\n\n\n\nTsToggleComponent \n\nTsToggleComponent \n\nTsToggleComponent  -->\n\nTsToggleModule->TsToggleComponent \n\n\n\n\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n\nTsToggleComponent -->\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR->TsToggleComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/toggle/toggle.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsToggleComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsToggleComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { TsToggleComponent } from './toggle.component';\n\nexport * from './toggle.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSlideToggleModule,\n  ],\n  exports: [\n    TsToggleComponent,\n  ],\n  declarations: [\n    TsToggleComponent,\n  ],\n})\nexport class TsToggleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsTooltipComponent.html":{"url":"components/TsTooltipComponent.html","title":"component - TsTooltipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsTooltipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/tooltip/tooltip.component.ts\n\n\n    \n        Description\n    \n    \n        This is the tooltip UI Component\nQA CSS CLASSES\n\nqa-tooltip : Placed on the span element used for this component\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    My Tooltip!\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-tooltip\n            \n\n            \n                styleUrls\n                tooltip.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tooltip.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasUnderline\n                            \n                            \n                                tooltipPosition\n                            \n                            \n                                tooltipValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hasUnderline\n                    \n                    \n                        Define whether there is a dotted underline shown on the text\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/tooltip/tooltip.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipPosition\n                    \n                    \n                        Define the position of the tooltip\n\n                            \n                            Type:    TsTooltipPositionTypes\n\n                            \n                        \n                            Default value: 'below'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/tooltip/tooltip.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipValue\n                    \n                    \n                        Define the content to display within the tooltip\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/tooltip/tooltip.component.ts:59\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\n\n\n/**\n * Define the accepted string values for the {@link TsTooltipComponent} position\n */\nexport type TsTooltipPositionTypes =\n  'left' |\n  'right' |\n  'above' |\n  'below' |\n  'before' |\n  'after'\n;\n\n\n/**\n * This is the tooltip UI Component\n *\n * #### QA CSS CLASSES\n *\n * - qa-tooltip : Placed on the span element used for this component\n *\n * @example\n * My Tooltip!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-tooltip',\n  templateUrl: './tooltip.component.html',\n  styleUrls: ['./tooltip.component.scss'],\n  host: {\n    class: 'ts-tooltip',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsTooltipComponent {\n  /**\n   * Define the position of the tooltip\n   */\n  @Input()\n  public tooltipPosition: TsTooltipPositionTypes = 'below';\n\n  /**\n   * Define the content to display within the tooltip\n   */\n  @Input()\n  public tooltipValue!: string;\n\n  /**\n   * Define whether there is a dotted underline shown on the text\n   */\n  @Input()\n  public hasUnderline: boolean = false;\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsTooltipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsTooltipModule.html":{"url":"modules/TsTooltipModule.html","title":"module - TsTooltipModule","body":"\n                   \n\n\n\n\n  Modules\n  TsTooltipModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsTooltipModule\n\n\n\ncluster_TsTooltipModule_declarations\n\n\n\ncluster_TsTooltipModule_exports\n\n\n\n\nTsTooltipComponent\n\nTsTooltipComponent\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsTooltipModule -->\n\nTsTooltipComponent->TsTooltipModule\n\n\n\n\n\nTsTooltipComponent \n\nTsTooltipComponent \n\nTsTooltipComponent  -->\n\nTsTooltipModule->TsTooltipComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/tooltip/tooltip.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsTooltipComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsTooltipComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { TsTooltipComponent } from './tooltip.component';\n\nexport * from './tooltip.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTooltipModule,\n  ],\n  exports: [\n    TsTooltipComponent,\n  ],\n  declarations: [\n    TsTooltipComponent,\n  ],\n})\nexport class TsTooltipModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsUser.html":{"url":"interfaces/TsUser.html","title":"interface - TsUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the user object interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fullName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                    \n                                \n                                \n                                    \n                                        fullName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's full name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsValidationMessageService.html":{"url":"injectables/TsValidationMessageService.html","title":"injectable - TsValidationMessageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsValidationMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/validation-messages/validation-message.service.ts\n        \n\n            \n                Description\n            \n            \n                Define a service that offers custom validators\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getValidatorErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getValidatorErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValidatorErrorMessage(validatorName: string, validatorValue?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-message.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Return the correct error message for a validator\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        validatorName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe name of the validator\n\n\n                                                        \n                                                \n                                                \n                                                        validatorValue\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe value of the validator\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The error message\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { format } from 'date-fns';\n\n\n/**\n * Define the error message for an invalid email\n */\nconst emailMessage = `Invalid email address.`;\n\n/**\n * Define the error message for an invalid credit card\n */\nconst creditCardMessage = `Invalid credit card number.`;\n\n/**\n * Define the error message for an invalid password\n */\nconst passwordMessage = `Password must be between 6 and 100 characters, and contain a number.`;\n\n\n/*\n * TODO: The consuming app will need a way to pass in the error messages config object so that\n * localization is supported. See https://github.com/GetTerminus/terminus-ui/issues/403\n */\n\n\n/**\n * Define a service that offers custom validators\n */\n@Injectable()\nexport class TsValidationMessageService {\n\n  /**\n   * Return the correct error message for a validator\n   *\n   * @param validatorName - The name of the validator\n   * @param validatorValue - The value of the validator\n   * @return The error message\n   */\n  public getValidatorErrorMessage(validatorName: string, validatorValue?: any): string {\n    const config: {[key: string]: string} = {\n      // Standard responses:\n      required: `Required`,\n      minlength: `Minimum length ${validatorValue.requiredLength}`,\n      maxlength: `Maximum length ${validatorValue.requiredLength}`,\n      // Custom responses:\n      creditCard: creditCardMessage,\n      email: emailMessage,\n      password: passwordMessage,\n      // TODO: Figure out how to abstract pattern messages out so they can be customized per\n      // pattern. (showing a regex pattern to an end user isn't helpful) and we need the ability to\n      // support multiple patterns\n      pattern: `Must contain only letters, numbers or spaces`,\n      maxDate: '',\n      minDate: '',\n      greaterThan: `${validatorValue.actual} is not greater than ${validatorValue.greaterThan}`,\n      greaterThanOrEqual: `${validatorValue.actual} is not greater than or equal to ${validatorValue.greaterThanOrEqual}`,\n      numbers: `Must contain at least ${validatorValue.numbers} numbers`,\n      lessThan: `${validatorValue.actual} must be less than ${validatorValue.lessThan}`,\n      lessThanOrEqual: `${validatorValue.actual} must be less than or equal to ${validatorValue.lessThanOrEqual}`,\n      notUnique: `${validatorValue.actual} has already been selected.`,\n      noResults: `No results found.`,\n      url: `'${validatorValue.actual}' must be a valid URL.`,\n      equalToControl: `'${validatorValue.actual}' must be equal to '${validatorValue.compareValue}'`,\n      lowercase: `Must contain at least ${validatorValue.lowercase} lowercase letters`,\n      uppercase: `Must contain at least ${validatorValue.uppercase} uppercase letters`,\n      fileSize: `Must be smaller than ${validatorValue.max}kb`,\n      fileType: `${validatorValue.actual} is not an accepted MIME type.`,\n      imageDimensions: ``,\n    };\n\n    if (validatorName === 'maxDate') {\n      const message = `Date must be before`;\n      config.maxDate = `${message} ${format(validatorValue.maxDate, 'M/D/YYYY')}`;\n    }\n\n    if (validatorName === 'minDate') {\n      const message = `Date must be after`;\n      config.minDate = `${message} ${format(validatorValue.minDate, 'M/D/YYYY')}`;\n    }\n\n    if (validatorName === 'imageDimensions') {\n      config.imageDimensions = `${validatorValue.actual.width}x${validatorValue.actual.height} is not an allowed image dimension.`;\n    }\n\n    return config[validatorName];\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsValidationMessagesComponent.html":{"url":"components/TsValidationMessagesComponent.html","title":"component - TsValidationMessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsValidationMessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/validation-messages/validation-messages.component.ts\n\n\n    \n        Description\n    \n    \n        A presentational component to render validation messages\nQA CSS CLASSES\n\nqa-validation-message: Placed on the error element used for this component\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-validation-messages\n            \n\n            \n                styleUrls\n                validation-messages.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./validation-messages.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                validateImmediately\n                            \n                            \n                                validateOnChange\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(validationMessageService: TsValidationMessageService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:75\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationMessageService\n                                                  \n                                                        \n                                                                    TsValidationMessageService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                        Define the associated form control\n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validateImmediately\n                    \n                    \n                        Define if the validation should be immediate\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:75\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validateOnChange\n                    \n                    \n                        Define if validation should occur on blur or immediately\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:69\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        validationMessage\n                    \n                \n\n                \n                    \n                        getvalidationMessage()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:38\n                                \n                            \n                    \n                        \n                                Define the error message\n\n\n                                \n                                \n                                \n                                    Returns :     string | null | undefined\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { TsValidationMessageService } from './validation-message.service';\n\n\n/**\n * A presentational component to render validation messages\n *\n * #### QA CSS CLASSES\n * - `qa-validation-message`: Placed on the error element used for this component\n *\n * @example\n * \n */\n@Component({\n  selector: 'ts-validation-messages',\n  templateUrl: './validation-messages.component.html',\n  styleUrls: ['./validation-messages.component.scss'],\n  host: {\n    class: 'ts-validation-messages',\n  },\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsValidationMessagesComponent {\n  /**\n   * Define the error message\n   *\n   * @return The error message or null if no error\n   */\n  public get validationMessage(): string | null | undefined {\n    if (this.control && this.control.errors) {\n      for (const propertyName in this.control.errors) {\n\n        // istanbul ignore else\n        if (propertyName) {\n          // Only show after 'touched' if we are NOT validating on every change\n          const immediatelyOrOnChange = this.validateImmediately || this.validateOnChange;\n          if (immediatelyOrOnChange || (!this.validateOnChange && this.control.touched)) {\n            const errors = this.control.errors[propertyName];\n\n            return this.validationMessageService.getValidatorErrorMessage(propertyName, errors);\n          }\n        }\n\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Define the associated form control\n   */\n  @Input()\n  public control!: FormControl;\n\n  /**\n   * Define if validation should occur on blur or immediately\n   */\n  @Input()\n  public validateOnChange: boolean = false;\n\n  /**\n   * Define if the validation should be immediate\n   */\n  @Input()\n  public validateImmediately: boolean = false;\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private validationMessageService: TsValidationMessageService,\n  ) {}\n\n}\n\n    \n\n    \n        \n  {{ validationMessage }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ validationMessage }}'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsValidationMessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsValidationMessagesModule.html":{"url":"modules/TsValidationMessagesModule.html","title":"module - TsValidationMessagesModule","body":"\n                   \n\n\n\n\n  Modules\n  TsValidationMessagesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsValidationMessagesModule\n\n\n\ncluster_TsValidationMessagesModule_declarations\n\n\n\ncluster_TsValidationMessagesModule_exports\n\n\n\ncluster_TsValidationMessagesModule_providers\n\n\n\n\nTsValidationMessagesComponent\n\nTsValidationMessagesComponent\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule -->\n\nTsValidationMessagesComponent->TsValidationMessagesModule\n\n\n\n\n\nTsValidationMessagesComponent \n\nTsValidationMessagesComponent \n\nTsValidationMessagesComponent  -->\n\nTsValidationMessagesModule->TsValidationMessagesComponent \n\n\n\n\n\nTsValidationMessageService\n\nTsValidationMessageService\n\nTsValidationMessagesModule -->\n\nTsValidationMessageService->TsValidationMessagesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/validation-messages/validation-messages.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsValidationMessagesComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsValidationMessageService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsValidationMessagesComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { TsValidationMessageService } from './validation-message.service';\nimport { TsValidationMessagesComponent } from './validation-messages.component';\n\nexport * from './validation-message.service';\nexport * from './validation-messages.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatInputModule,\n  ],\n  providers: [\n    TsValidationMessageService,\n  ],\n  exports: [\n    TsValidationMessagesComponent,\n  ],\n  declarations: [\n    TsValidationMessagesComponent,\n  ],\n})\nexport class TsValidationMessagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsValidatorsService.html":{"url":"injectables/TsValidatorsService.html","title":"injectable - TsValidatorsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsValidatorsService\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/validators/validators.service.ts\n        \n\n            \n                Description\n            \n            \n                Define a service that exposes custom form validators for use with reactive forms.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creditCard\n                            \n                            \n                                email\n                            \n                            \n                                equalToControl\n                            \n                            \n                                greaterThan\n                            \n                            \n                                greaterThanOrEqual\n                            \n                            \n                                lessThan\n                            \n                            \n                                lessThanOrEqual\n                            \n                            \n                                lowercase\n                            \n                            \n                                maxDate\n                            \n                            \n                                minDate\n                            \n                            \n                                numbers\n                            \n                            \n                                password\n                            \n                            \n                                uppercase\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creditCard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creditCard:     \n\n                    \n                \n                    \n                        \n                            Default value : creditCardValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     \n\n                    \n                \n                    \n                        \n                            Default value : emailValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            equalToControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        equalToControl:     \n\n                    \n                \n                    \n                        \n                            Default value : equalToControlValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            greaterThan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        greaterThan:     \n\n                    \n                \n                    \n                        \n                            Default value : greaterThanValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            greaterThanOrEqual\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        greaterThanOrEqual:     \n\n                    \n                \n                    \n                        \n                            Default value : greaterThanOrEqualValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lessThan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lessThan:     \n\n                    \n                \n                    \n                        \n                            Default value : lessThanValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lessThanOrEqual\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lessThanOrEqual:     \n\n                    \n                \n                    \n                        \n                            Default value : lessThanOrEqualValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lowercase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lowercase:     \n\n                    \n                \n                    \n                        \n                            Default value : lowercaseValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxDate:     \n\n                    \n                \n                    \n                        \n                            Default value : maxDateValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minDate:     \n\n                    \n                \n                    \n                        \n                            Default value : minDateValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numbers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numbers:     \n\n                    \n                \n                    \n                        \n                            Default value : numbersValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     \n\n                    \n                \n                    \n                        \n                            Default value : passwordValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uppercase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uppercase:     \n\n                    \n                \n                    \n                        \n                            Default value : uppercaseValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     \n\n                    \n                \n                    \n                        \n                            Default value : urlValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:34\n                            \n                        \n\n\n            \n        \n\n\n    \n\n    \n        Validators\n\n\n\n\nTable of Contents\n\nBasic usage\nAvailable validators\nMocking\n\n\nBasic usage\nimport {\n  FormBuilder,\n  FormGroup,\n} from '@angular/forms';\nimport { TsValidatorsService } from '@terminus/ui';\n\n\n@Component({\n  ...\n})\nexport class MyComponent {\n  // Create a form\n  myForm: FormGroup = this.formBuilder.group({\n    email: [\n      null,\n      [\n        // Basic validator\n        this.validatorsService.email(),\n      ],\n    ],\n    greaterThan: [\n      null,\n      [\n        // Validator with a required argument\n        this.validatorsService.greaterThan(10),\n      ],\n    ],\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private validatorsService: TsValidatorsService,\n  ) {}\n\n}Available validators\n\n\n\nValidator\nPurpose\n\n\n\n\ncreditCard\nA credit card number must be valid\n\n\nemail\nAn email address must be valid\n\n\nequalToControl\nA control's value must be equal to another control's value\n\n\ngreaterThan\nA number must be greater than another value\n\n\ngreaterThanOrEqual\nA number must be greater than or equal to another value\n\n\nlessThan\nA number must be less than another value\n\n\nlessThanOrEqual\nA number must be less than or equal to another value\n\n\nlowercase\nA value must contain a minimum amount of lowercase characters\n\n\nmaxDate\nA date must be before a maximum date\n\n\nminDate\nA date must be after a minimum date\n\n\nnumbers\nA minimum amount of numbers must be found\n\n\npassword\nA password must meet certain requirements\n\n\nuppercase\nA value must contain a minimum amount of uppercase characters\n\n\nurl\nA URL must be valid\n\n\n\nMocking\nA mocked version of the service is available for testing as TsValidatorsServiceMock.\nThe mocks consist of Jest mock functions. Based on the class value isValid the validator mock will\nreturn an error message or null.\n\n    \n\n    \n        import { Injectable } from '@angular/core';\n\nimport { creditCardValidator } from './validators/creditCard/creditCard';\nimport { emailValidator } from './validators/email/email';\nimport { equalToControlValidator } from './validators/equalToControl/equalToControl';\nimport { greaterThanOrEqualValidator } from './validators/greaterThanOrEqual/greaterThanOrEqual';\nimport { greaterThanValidator } from './validators/greaterThan/greaterThan';\nimport { lessThanOrEqualValidator } from './validators/lessThanOrEqual/lessThanOrEqual';\nimport { lessThanValidator } from './validators/lessThan/lessThan';\nimport { lowercaseValidator } from './validators/lowercase/lowercase';\nimport { numbersValidator } from './validators/numbers/numbers';\nimport { maxDateValidator } from './validators/maxDate/maxDate';\nimport { minDateValidator } from './validators/minDate/minDate';\nimport { passwordValidator } from './validators/password/password';\nimport { urlValidator } from './validators/url/url';\nimport { uppercaseValidator } from './validators/uppercase/uppercase';\n\n\n/**\n * Define a service that exposes custom form validators for use with reactive forms.\n */\n@Injectable()\nexport class TsValidatorsService {\n  creditCard = creditCardValidator;\n  email = emailValidator;\n  equalToControl = equalToControlValidator;\n  greaterThan = greaterThanValidator;\n  greaterThanOrEqual = greaterThanOrEqualValidator;\n  lessThan = lessThanValidator;\n  lessThanOrEqual = lessThanOrEqualValidator;\n  maxDate = maxDateValidator;\n  minDate = minDateValidator;\n  password = passwordValidator;\n  url = urlValidator;\n  lowercase = lowercaseValidator;\n  uppercase = uppercaseValidator;\n  numbers = numbersValidator;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsVerticalSpacingDirective.html":{"url":"directives/TsVerticalSpacingDirective.html","title":"directive - TsVerticalSpacingDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsVerticalSpacingDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/spacing/vertical-spacing.directive.ts\n        \n\n            \n                Description\n            \n            \n                This is the vertical spacing UI directive. Accepts TsVerticalSpacingTypes\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            \nMy content!\n\n\n\nMy content!\n\n\n\nMy content!\n\n\nhttps://goo.gl/ieUPaG\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsVerticalSpacing]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsVerticalSpacing\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/spacing/vertical-spacing.directive.ts:85\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tsVerticalSpacing\n                    \n                    \n                        Set a spacing class based on the passed in value\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/spacing/vertical-spacing.directive.ts:58\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tsVerticalSpacing\n                    \n                \n\n\n                \n                    \n                        settsVerticalSpacing(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/spacing/vertical-spacing.directive.ts:58\n                                \n                            \n                    \n                        \n                                Set a spacing class based on the passed in value\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                            \n                                                                    \nThe spacing value passed in.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  isDevMode,\n} from '@angular/core';\n\nimport { TS_SPACING } from './spacing.constant';\n\n\n/**\n * Define the accepted string values for {@link TsVerticalSpacingDirective}\n */\nexport type TsVerticalSpacingTypes =\n  'small--2' |\n  'small--1' |\n  'small--0' |\n  'none' |\n  'default--0' |\n  'large--0' |\n  'large--1' |\n  'large--2' |\n  'large--3' |\n  'large--4' |\n  'large--5' |\n  'large--6'\n;\n\n\n/**\n * This is the vertical spacing UI directive. Accepts {@link TsVerticalSpacingTypes}\n *\n * @example\n * \n *   My content!\n * \n *\n * \n *   My content!\n * \n *\n * \n *   My content!\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Directive({\n  selector: '[tsVerticalSpacing]',\n})\nexport class TsVerticalSpacingDirective {\n  /**\n   * Set a spacing class based on the passed in value\n   *\n   * @param value - The spacing value passed in.\n   */\n  @Input()\n  public set tsVerticalSpacing(value: TsVerticalSpacingTypes) {\n    // Set a default value if nothing was passed in\n    if (!value) {\n      value = 'default--0';\n    }\n\n    // Split the string to get the type and size\n    const type: string = value.split('--')[0];\n    const size: number = parseInt(value.split('--')[1], 10);\n    const valueIsNone: boolean = value === 'none';\n\n    // Verify type and size are valid options\n    const typeIsInvalid: boolean = !!(!TS_SPACING[type] || TS_SPACING[type].length \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Version.html":{"url":"classes/Version.html","title":"class - Version","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Version\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/utilities/version/version.ts\n        \n\n            \n                Description\n            \n            \n                Create version information from a version string\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                full\n                            \n                            \n                                    Public\n                                    Readonly\n                                major\n                            \n                            \n                                    Public\n                                    Readonly\n                                minor\n                            \n                            \n                                    Public\n                                    Readonly\n                                patch\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(full: string)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/utilities/version/version.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        full\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            full\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        full:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/version/version.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            major\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        major:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/version/version.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            minor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/version/version.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            patch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        patch:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/version/version.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Version {\n  public readonly major: string;\n  public readonly minor: string;\n  public readonly patch: string;\n\n  constructor(public full: string) {\n    this.major = full.split('.')[0];\n    this.minor = full.split('.')[1];\n    this.patch = full.split('.').slice(2).join('.');\n  }\n}\n\nexport const VERSION = new Version('0.0.0-PLACEHOLDER');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\n\n Contributing to Terminus/UI\n\nWe are always open questions, ideas and code contributions. As a contributor, here are the\nguidelines we would like you to follow.\n\n\nTable of Contents\n\nCode of Conduct\nQuestion or Problem?\nWant a Feature?\nSubmitting an Issue\nSubmitting a Pull Request (PR)\nAfter your pull request is merged\nCoding Rules & Workflow\n\n\n\n\n\n\nCode of Conduct\nHelp us keep Terminus open and inclusive. Please read and follow our Code of Conduct.\nQuestion or Problem?\nIf you find a bug in the source code or a mistake in the documentation, you can help us by\nsubmitting an issue to our GitHub repository. Including an issue\nreproduction (via our StackBlitz starter) is the absolute best way to help the team quickly\ndiagnose the problem. Screenshots are also helpful.\nYou can help the team even more and submit a Pull Request with a fix! :pray:\nWant a Feature?\nYou can request a new feature by submitting an issue to our GitHub\nrepository. If you would like to implement a new feature, please submit an issue with a\nproposal for your work first, to be sure that we can use it.  Please consider what kind of change it\nis:\n\nFor a Major Feature, first open an issue and outline your proposal so that it can be\ndiscussed. This will also allow us to better coordinate our efforts, prevent duplication of work,\nand help you to craft the change so that it is successfully accepted into the project.\nSmall Features can be crafted and directly submitted as a Pull Request.\n\nSubmitting an Issue\nBefore you submit an issue, search existing open/closed issues, as your question may have\nalready been answered.\nIf your issue appears to be a bug, and hasn't been reported, open a new issue.\nHelp us to maximize the effort we can spend fixing issues and adding new\nfeatures by not reporting duplicate issues.  Providing the following information will increase the\nchances of your issue being dealt with quickly:\n\nOverview of the Issue - if an error is being thrown a non-minified stack trace helps\nMotivation for or Use Case - explain what are you trying to do and why the current behavior\n  is a bug for you\nBrowsers and Operating System - is this a problem with all browsers?\nReproduce the Error - provide a live example using our StackBlitz starter or a\n  unambiguous set of steps\nScreenshots - Due to the visual nature of this library, screenshots can help the team triage\n  issues far more quickly than a text description.\nRelated Issues - has a similar issue been reported before?\nSuggest a Fix - if you can't fix the bug yourself, perhaps you can point to what might be\n  causing the problem (line of code or commit)\n\nYou can file new issues by providing the above information here.\nSubmitting a Pull Request (PR)\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\nSearch GitHub for an open or closed PR that relates to your submission. You don't want to\nduplicate effort.\nMake your changes in a new git branch:\ngit checkout -b 312-my-fix-branch master\nNote: You should prefix your branch name with the associated issue number.\n\n\nCreate your patch, including appropriate test cases.\nFollow our coding rules (by verifying all linters pass).\nRun the full test suite and ensure that all tests pass.\nCommit your changes using a descriptive commit message that follows our\ncommit message conventions. Adherence to these conventions is necessary because release notes are\nautomatically generated from these messages. (for this reason it is often advisable to rebase your\nfeature branch to ensure clear, concise commits)\nPush your branch to GitHub:\ngit push my-fork 312-my-fix-branch\n\n\nIn GitHub, send a pull request to terminus-ui:master.\nIf we suggest changes then:\nMake the required updates.\nRe-run all test suites to ensure tests are still passing.\nRe-run all linters.\nRebase your branch and force push to your GitHub repository (this will update your Pull Request):\ngit rebase master -i\ngit push -f\n\n\n\n\n\nThat's it! Thank you for your contribution! :pray:\nAfter your pull request is merged\nAfter your pull request is merged, you can safely delete your branch and pull the changes from the\nmain (upstream) repository:\n\nDelete the remote branch on GitHub either through the GitHub web UI or your local shell:\ngit push my-fork --delete 312-my-fix-branch\n\n\nCheck out the master branch:\ngit checkout master -f\n\n\nDelete the local branch:\ngit branch -D 312-my-fix-branch\n\n\nUpdate your master with the latest upstream version:\ngit pull --ff upstream master\n\n\n\nCoding Rules & Workflow\nTo ensure consistency throughout the source code, keep these rules in mind as you are working:\n\nAll features or bug fixes must be tested by one or more specs (unit-tests).\nAll public API methods must be documented. (Details TBD).\nMost coding styles are enforced via linters\nReference our development documentation for more details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    terminus-ui/src/autocomplete/autocomplete.component.ts\n            \n            \n                component\n            \n            \n                TsAutocompleteComponent\n            \n            \n                84 %\n                (32/38)\n            \n        \n        \n            \n                \n                    terminus-ui/src/autocomplete/autocomplete.component.ts\n            \n            \n                class\n            \n            \n                TsAutocompleteSelectedEvent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/autocomplete/autocomplete.component.ts\n            \n            \n                interface\n            \n            \n                KeyboardEvent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/autocomplete/autocomplete.component.ts\n            \n            \n                interface\n            \n            \n                MouseEvent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/autofocus/autofocus.directive.ts\n            \n            \n                directive\n            \n            \n                TsAutofocusDirective\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    terminus-ui/src/button/button.component.ts\n            \n            \n                component\n            \n            \n                TsButtonComponent\n            \n            \n                92 %\n                (24/26)\n            \n        \n        \n            \n                \n                    terminus-ui/src/button/button.component.ts\n            \n            \n                variable\n            \n            \n                tsButtonFormatTypesArray\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/card/card-title.directive.ts\n            \n            \n                directive\n            \n            \n                TsCardTitleDirective\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    terminus-ui/src/card/card.component.ts\n            \n            \n                component\n            \n            \n                TsCardComponent\n            \n            \n                75 %\n                (12/16)\n            \n        \n        \n            \n                \n                    terminus-ui/src/card/card.component.ts\n            \n            \n                variable\n            \n            \n                nextUniqueId\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/chart/amcharts.service.ts\n            \n            \n                injectable\n            \n            \n                TsAmChartsService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    terminus-ui/src/chart/amcharts.service.ts\n            \n            \n                interface\n            \n            \n                TsAmChartsToken\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    terminus-ui/src/chart/amcharts.service.ts\n            \n            \n                variable\n            \n            \n                TS_AMCHARTS_TOKEN\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/chart/chart.component.ts\n            \n            \n                component\n            \n            \n                TsChartComponent\n            \n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                    terminus-ui/src/checkbox/checkbox.component.ts\n            \n            \n                component\n            \n            \n                TsCheckboxComponent\n            \n            \n                87 %\n                (21/24)\n            \n        \n        \n            \n                \n                    terminus-ui/src/checkbox/checkbox.component.ts\n            \n            \n                class\n            \n            \n                TsCheckboxChange\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/checkbox/checkbox.component.ts\n            \n            \n                variable\n            \n            \n                CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/checkbox/checkbox.component.ts\n            \n            \n                variable\n            \n            \n                nextUniqueId\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/confirmation/confirmation-modal.component.ts\n            \n            \n                component\n            \n            \n                TsConfirmationModalComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    terminus-ui/src/confirmation/confirmation.directive.ts\n            \n            \n                directive\n            \n            \n                TsConfirmationDirective\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                    terminus-ui/src/copy/copy.component.ts\n            \n            \n                component\n            \n            \n                TsCopyComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    terminus-ui/src/csv-entry/csv-entry.component.ts\n            \n            \n                component\n            \n            \n                TsCSVEntryComponent\n            \n            \n                84 %\n                (42/50)\n            \n        \n        \n            \n                \n                    terminus-ui/src/csv-entry/csv-entry.component.ts\n            \n            \n                interface\n            \n            \n                TsCSVEntryRecord\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    terminus-ui/src/csv-entry/csv-entry.component.ts\n            \n            \n                interface\n            \n            \n                TsCSVFormContents\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    terminus-ui/src/csv-entry/csv-entry.component.ts\n            \n            \n                variable\n            \n            \n                nextUniqueId\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/date-range/date-range.component.ts\n            \n            \n                component\n            \n            \n                TsDateRangeComponent\n            \n            \n                100 %\n                (30/30)\n            \n        \n        \n            \n                \n                    terminus-ui/src/date-range/date-range.component.ts\n            \n            \n                interface\n            \n            \n                TsDateRange\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    terminus-ui/src/datepicker/datepicker.component.ts\n            \n            \n                component\n            \n            \n                TsDatepickerComponent\n            \n            \n                96 %\n                (29/30)\n            \n        \n        \n            \n                \n                    terminus-ui/src/datepicker/datepicker.component.ts\n            \n            \n                class\n            \n            \n                TsDatepickerInputEvent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/datepicker/datepicker.component.ts\n            \n            \n                variable\n            \n            \n                CUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/file-upload/drop-protection.service.ts\n            \n            \n                injectable\n            \n            \n                TsDropProtectionService\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                    terminus-ui/src/file-upload/file-upload.component.ts\n            \n            \n                component\n            \n            \n                TsFileUploadComponent\n            \n            \n                73 %\n                (38/52)\n            \n        \n        \n            \n                \n                    terminus-ui/src/file-upload/file-upload.component.ts\n            \n            \n                variable\n            \n            \n                MAXIMUM_KILOBYTES_PER_FILE\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/file-upload/file-upload.component.ts\n            \n            \n                variable\n            \n            \n                nextUniqueId\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/file-upload/image-dimension-constraints.ts\n            \n            \n                interface\n            \n            \n                TsFileImageDimensionContraint\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    terminus-ui/src/file-upload/image-dimensions.ts\n            \n            \n                class\n            \n            \n                TsImageDimensions\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    terminus-ui/src/file-upload/mime-types.ts\n            \n            \n                variable\n            \n            \n                TS_ACCEPTED_MIME_TYPES\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/file-upload/selected-file.ts\n            \n            \n                class\n            \n            \n                TsSelectedFile\n            \n            \n                38 %\n                (5/13)\n            \n        \n        \n            \n                \n                    terminus-ui/src/file-upload/selected-file.ts\n            \n            \n                interface\n            \n            \n                TsFileValidations\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    terminus-ui/src/file-upload/selected-file.ts\n            \n            \n                variable\n            \n            \n                BYTES_PER_KB\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/icon-button/icon-button.component.ts\n            \n            \n                component\n            \n            \n                TsIconButtonComponent\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    terminus-ui/src/icon/custom-icons/csv.ts\n            \n            \n                variable\n            \n            \n                CSV_ICON\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/icon/icon.component.ts\n            \n            \n                component\n            \n            \n                TsIconComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    terminus-ui/src/icon/icon.component.ts\n            \n            \n                variable\n            \n            \n                TS_CUSTOM_ICONS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/input/input.component.ts\n            \n            \n                component\n            \n            \n                TsInputComponent\n            \n            \n                91 %\n                (33/36)\n            \n        \n        \n            \n                \n                    terminus-ui/src/input/input.component.ts\n            \n            \n                variable\n            \n            \n                CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/link/link.component.ts\n            \n            \n                component\n            \n            \n                TsLinkComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    terminus-ui/src/loading-overlay/loading-overlay.component.ts\n            \n            \n                component\n            \n            \n                TsLoadingOverlayComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/loading-overlay/loading-overlay.directive.ts\n            \n            \n                directive\n            \n            \n                TsLoadingOverlayDirective\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    terminus-ui/src/login-form/login-form.component.ts\n            \n            \n                component\n            \n            \n                TsLoginFormComponent\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                    terminus-ui/src/login-form/login-form.component.ts\n            \n            \n                interface\n            \n            \n                TsLoginFormResponse\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    terminus-ui/src/mask/mask.directive.ts\n            \n            \n                directive\n            \n            \n                TsMaskDirective\n            \n            \n                91 %\n                (21/23)\n            \n        \n        \n            \n                \n                    terminus-ui/src/mask/mask.directive.ts\n            \n            \n                interface\n            \n            \n                Mask\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    terminus-ui/src/mask/mask.directive.ts\n            \n            \n                interface\n            \n            \n                MaskCollection\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/mask/mask.directive.ts\n            \n            \n                variable\n            \n            \n                allowedMaskShorcuts\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/mask/mask.directive.ts\n            \n            \n                variable\n            \n            \n                MASKED_INPUT_VALUE_ACCESSOR\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/mask/mask.directive.ts\n            \n            \n                variable\n            \n            \n                NUMBER_ONLY_REGEX\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/mask/mask.directive.ts\n            \n            \n                variable\n            \n            \n                NUMBER_WITH_DECIMAL_REGEX\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/menu/menu.component.ts\n            \n            \n                component\n            \n            \n                TsMenuComponent\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                    terminus-ui/src/navigation/navigation.component.ts\n            \n            \n                component\n            \n            \n                TsNavigationComponent\n            \n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                    terminus-ui/src/navigation/navigation.component.ts\n            \n            \n                interface\n            \n            \n                NavigationItemBase\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    terminus-ui/src/navigation/navigation.component.ts\n            \n            \n                interface\n            \n            \n                TsNavigationActionItem\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    terminus-ui/src/navigation/navigation.component.ts\n            \n            \n                interface\n            \n            \n                TsNavigationLinkItem\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    terminus-ui/src/navigation/navigation.component.ts\n            \n            \n                interface\n            \n            \n                TsNavigationPayload\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    terminus-ui/src/navigation/navigation.component.ts\n            \n            \n                interface\n            \n            \n                TsUser\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    terminus-ui/src/paginator/paginator.component.ts\n            \n            \n                component\n            \n            \n                TsPaginatorComponent\n            \n            \n                91 %\n                (44/48)\n            \n        \n        \n            \n                \n                    terminus-ui/src/paginator/paginator.component.ts\n            \n            \n                interface\n            \n            \n                TsPaginatorMenuItem\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    terminus-ui/src/pipes/date/date.pipe.ts\n            \n            \n                pipe\n            \n            \n                TsDatePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/pipes/round-number/round-number.pipe.ts\n            \n            \n                pipe\n            \n            \n                TsRoundNumberPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/pipes/sentence-case/sentence-case.pipe.ts\n            \n            \n                pipe\n            \n            \n                TsSentenceCasePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/pipes/time-ago/time-ago.pipe.ts\n            \n            \n                pipe\n            \n            \n                TsTimeAgoPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/pipes/title-case/title-case.pipe.ts\n            \n            \n                pipe\n            \n            \n                TsTitleCasePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/radio-group/radio-group.component.ts\n            \n            \n                component\n            \n            \n                TsRadioGroupComponent\n            \n            \n                75 %\n                (30/40)\n            \n        \n        \n            \n                \n                    terminus-ui/src/radio-group/radio-group.component.ts\n            \n            \n                class\n            \n            \n                TsRadioChange\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/radio-group/radio-group.component.ts\n            \n            \n                interface\n            \n            \n                TsRadioOption\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    terminus-ui/src/radio-group/radio-group.component.ts\n            \n            \n                variable\n            \n            \n                CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/radio-group/radio-group.component.ts\n            \n            \n                variable\n            \n            \n                nextUniqueId\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/scrollbars/scrollbars.component.ts\n            \n            \n                component\n            \n            \n                TsScrollbarsComponent\n            \n            \n                51 %\n                (14/27)\n            \n        \n        \n            \n                \n                    terminus-ui/src/scrollbars/scrollbars.component.ts\n            \n            \n                class\n            \n            \n                TsScrollbarPosition\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/scrollbars/scrollbars.component.ts\n            \n            \n                class\n            \n            \n                TsScrollbarsGeometry\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/scrollbars/scrollbars.component.ts\n            \n            \n                variable\n            \n            \n                nextUniqueId\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/search/search.component.ts\n            \n            \n                component\n            \n            \n                TsSearchComponent\n            \n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                    terminus-ui/src/search/search.component.ts\n            \n            \n                interface\n            \n            \n                TsSearchResponse\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    terminus-ui/src/select/select.component.ts\n            \n            \n                component\n            \n            \n                TsSelectComponent\n            \n            \n                86 %\n                (25/29)\n            \n        \n        \n            \n                \n                    terminus-ui/src/select/select.component.ts\n            \n            \n                variable\n            \n            \n                CUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort-animations.ts\n            \n            \n                variable\n            \n            \n                SORT_ANIMATION_TRANSITION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort-animations.ts\n            \n            \n                variable\n            \n            \n                tsSortAnimations\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort-errors.ts\n            \n            \n                function\n            \n            \n                getSortDuplicateSortableIdError\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort-errors.ts\n            \n            \n                function\n            \n            \n                getSortHeaderMissingIdError\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort-errors.ts\n            \n            \n                function\n            \n            \n                getSortHeaderNotContainedWithinSortError\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort-errors.ts\n            \n            \n                function\n            \n            \n                getSortInvalidDirectionError\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort-header-intl.ts\n            \n            \n                injectable\n            \n            \n                TsSortHeaderIntl\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort-header-intl.ts\n            \n            \n                function\n            \n            \n                TS_SORT_HEADER_INTL_PROVIDER_FACTORY\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort-header-intl.ts\n            \n            \n                variable\n            \n            \n                TS_SORT_HEADER_INTL_PROVIDER\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort-header.component.ts\n            \n            \n                component\n            \n            \n                TsSortHeaderComponent\n            \n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort-header.component.ts\n            \n            \n                class\n            \n            \n                TsSortHeaderBase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort-header.component.ts\n            \n            \n                variable\n            \n            \n                _TsSortHeaderMixinBase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort.directive.ts\n            \n            \n                directive\n            \n            \n                TsSortDirective\n            \n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort.directive.ts\n            \n            \n                class\n            \n            \n                TsSortBase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort.directive.ts\n            \n            \n                interface\n            \n            \n                TsSortState\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort.directive.ts\n            \n            \n                interface\n            \n            \n                TsSortableItem\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort.directive.ts\n            \n            \n                function\n            \n            \n                getSortDirectionCycle\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/sort/sort.directive.ts\n            \n            \n                variable\n            \n            \n                _TsSortMixinBase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/spacing/spacing.constant.ts\n            \n            \n                variable\n            \n            \n                base\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/spacing/spacing.constant.ts\n            \n            \n                variable\n            \n            \n                TS_SPACING\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/spacing/vertical-spacing.directive.ts\n            \n            \n                directive\n            \n            \n                TsVerticalSpacingDirective\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    terminus-ui/src/table/cell.ts\n            \n            \n                directive\n            \n            \n                TsCellDefDirective\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/table/cell.ts\n            \n            \n                directive\n            \n            \n                TsCellDirective\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    terminus-ui/src/table/cell.ts\n            \n            \n                directive\n            \n            \n                TsColumnDefDirective\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    terminus-ui/src/table/cell.ts\n            \n            \n                directive\n            \n            \n                TsHeaderCellDefDirective\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/table/cell.ts\n            \n            \n                directive\n            \n            \n                TsHeaderCellDirective\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    terminus-ui/src/table/row.ts\n            \n            \n                component\n            \n            \n                TsHeaderRowComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/table/row.ts\n            \n            \n                component\n            \n            \n                TsRowComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/table/row.ts\n            \n            \n                directive\n            \n            \n                TsHeaderRowDefDirective\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/table/row.ts\n            \n            \n                directive\n            \n            \n                TsRowDefDirective\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/table/table-data-source.ts\n            \n            \n                class\n            \n            \n                TsTableDataSource\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    terminus-ui/src/table/table.component.ts\n            \n            \n                component\n            \n            \n                TsTableComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/toggle/toggle.component.ts\n            \n            \n                component\n            \n            \n                TsToggleComponent\n            \n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                    terminus-ui/src/toggle/toggle.component.ts\n            \n            \n                class\n            \n            \n                TsSlideToggleChange\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/toggle/toggle.component.ts\n            \n            \n                variable\n            \n            \n                CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/tooltip/tooltip.component.ts\n            \n            \n                component\n            \n            \n                TsTooltipComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    terminus-ui/src/utilities/merge.ts\n            \n            \n                function\n            \n            \n                merge\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/utilities/reactive-form-base.component.ts\n            \n            \n                component\n            \n            \n                TsReactiveFormBaseComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    terminus-ui/src/utilities/type-coercion/is-abstract-control.ts\n            \n            \n                function\n            \n            \n                isAbstractControl\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/utilities/type-coercion/is-drag-event.ts\n            \n            \n                function\n            \n            \n                isDragEvent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/utilities/type-coercion/is-html-input-element.ts\n            \n            \n                function\n            \n            \n                isHTMLInputElement\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/utilities/types/style-theme.types.ts\n            \n            \n                variable\n            \n            \n                tsStyleThemeTypesArray\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/utilities/version/version.ts\n            \n            \n                class\n            \n            \n                Version\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                    terminus-ui/src/utilities/version/version.ts\n            \n            \n                variable\n            \n            \n                VERSION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validation-messages/validation-message.service.ts\n            \n            \n                injectable\n            \n            \n                TsValidationMessageService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validation-messages/validation-message.service.ts\n            \n            \n                variable\n            \n            \n                creditCardMessage\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validation-messages/validation-message.service.ts\n            \n            \n                variable\n            \n            \n                emailMessage\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validation-messages/validation-message.service.ts\n            \n            \n                variable\n            \n            \n                passwordMessage\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validation-messages/validation-messages.component.ts\n            \n            \n                component\n            \n            \n                TsValidationMessagesComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators.service.ts\n            \n            \n                injectable\n            \n            \n                TsValidatorsService\n            \n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/creditCard/creditCard.ts\n            \n            \n                function\n            \n            \n                creditCardValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/email/email.ts\n            \n            \n                function\n            \n            \n                emailValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/equalToControl/equalToControl.ts\n            \n            \n                function\n            \n            \n                equalToControlValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/greaterThan/greaterThan.ts\n            \n            \n                function\n            \n            \n                getValidationResult\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/greaterThan/greaterThan.ts\n            \n            \n                function\n            \n            \n                greaterThanValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/greaterThanOrEqual/greaterThanOrEqual.ts\n            \n            \n                function\n            \n            \n                getValidationResult\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/greaterThanOrEqual/greaterThanOrEqual.ts\n            \n            \n                function\n            \n            \n                greaterThanOrEqualValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/lessThan/lessThan.ts\n            \n            \n                function\n            \n            \n                getValidationResult\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/lessThan/lessThan.ts\n            \n            \n                function\n            \n            \n                lessThanValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/lessThanOrEqual/lessThanOrEqual.ts\n            \n            \n                function\n            \n            \n                getValidationResult\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/lessThanOrEqual/lessThanOrEqual.ts\n            \n            \n                function\n            \n            \n                lessThanOrEqualValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/lowercase/lowercase.ts\n            \n            \n                function\n            \n            \n                lowercaseValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/maxDate/maxDate.ts\n            \n            \n                function\n            \n            \n                getValidationResult\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/maxDate/maxDate.ts\n            \n            \n                function\n            \n            \n                maxDateValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/minDate/minDate.ts\n            \n            \n                function\n            \n            \n                getValidationResult\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/minDate/minDate.ts\n            \n            \n                function\n            \n            \n                minDateValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/numbers/numbers.ts\n            \n            \n                function\n            \n            \n                numbersValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/password/password.ts\n            \n            \n                function\n            \n            \n                passwordValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/uppercase/uppercase.ts\n            \n            \n                function\n            \n            \n                uppercaseValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    terminus-ui/src/validators/validators/url/url.ts\n            \n            \n                function\n            \n            \n                urlValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @amcharts/amcharts4 : ^4.0.0-beta.50\n        \n            @amcharts/amcharts4-geodata : ^4.0.10\n        \n            @angular/animations : ^6.0.7\n        \n            @angular/common : ^6.0.7\n        \n            @angular/core : ^6.0.7\n        \n            @angular/flex-layout : 6.0.0-beta.16\n        \n            @angular/forms : ^6.0.7\n        \n            @angular/http : ^6.0.7\n        \n            @angular/platform-browser : ^6.0.7\n        \n            @angular/platform-browser-dynamic : ^6.0.7\n        \n            @angular/router : ^6.0.7\n        \n            @terminus/ngx-tools : ^2.23.0\n        \n            @terminus/ui : ^8.13.1\n        \n            date-fns : 2.0.0-alpha.7\n        \n            ngx-perfect-scrollbar : ^6.2.1\n        \n            rxjs-compat : ^6.2.1\n        \n            text-mask-addons : ^3.7.2\n        \n            text-mask-core : ^5.0.1\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTerminus UI Library\nThe library of UI components used for Terminus applications.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable of Contents\n\nLibrary Purpose\nDocumentation\nAvailable Features\nComponents\nPipes\nServices\nAvailable Validators\n\n\nConstants\nStyle Helpers\n\n\nInstallation\nGlobal Styles\nSCSS Helpers\nContributing\nContributors\nProject Resources\n\n\nLibrary Purpose\nThis library was created to assist Terminus engineers in maintaining a consistent experience across\napplications while following a unified design language.\nThe library is open source with the hopes that others may find solutions and ideas here, as we have\ndone while browsing so many other repositories. While we want to make decisions that are best for\neveryone, in the end, the needs of the Terminus engineering team must come first.\nIf a deviation makes sense for the feature itself, but not for Terminus, we support (and will assist\nin) abstracting the functionality out for generalization.\nThis library is heavily based on Material Design currently. This provides us a way to rely on very\nwell thought out usability and accessibility decisions for areas we have not yet addressed\ninternally. While we hold Material in high regard, we do not believe that all of their decisions are\nbest for the Terminus UI specifically.\nDocumentation\nThe available features table contains links for functional and usage documentation\nfor each feature.\nAvailable Features\n\n\n:hammer: started\n:white_check_mark: available\n:hankey: deprecated\n\n\nComponents\n\n\n\nFeature\nNotes\nStatus\nDemo\nDocs\nUsage\n\n\n\n\nalert\n\n\n\n\n\n\n\nautocomplete\nInput with autocomplete\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nautofocus\nFocus a focusable element on load\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nbadge\n\n\n\n\n\n\n\nbutton\n\n:white_check_mark:\nDemo\nDocs\n\n\n\nbreadcrumbs\n\n\n\n\n\n\n\ncard\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nchart\nCharts, graphs etc using the AmCharts library\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nchip\n\n\n\n\n\n\n\ncheckbox\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nconfirmation\nAdd a confirmation step to any ts-button\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ncopy\n\n:white_check_mark:\nDemo\nDocs\n\n\n\ncsv entry\nManually enter CSV values\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ndatepicker\nInput with calendar pop-up\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ndate-range\nDual inputs with calendar pop-ups\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ndialog\n\n\n\n\n\n\n\ndivider\n\n\n\n\n\n\n\nexpansion\n\n\n\n\n\n\n\nfile-upload\nFile upload with drag and drop\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ninput mask\nCustom masks for inputs (phone, zip, etc)\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nicon\nSupported icons: https://material.io/icons\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nicon-button\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ninput\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nlink\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nloading overlay\nOverlay with loading spinner\n:white_check_mark:\nDemo\nDocs\n\n\n\nlogin form\nEmail/password with 'remember me' checkbox\n:white_check_mark:\nDemo\nDocs\n\n\n\nmenu\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nnavigation\nGlobal navigation menu\n:white_check_mark:\nDemo\nDocs\n\n\n\npaginator\nPaging controls for collections\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\npipes\nA collection of pipes for Angular\n:white_check_mark:\nDemo\nDocs\n\n\n\nprogress\n\n\n\n\n\n\n\nprogression\ni.e. Stepper, wizard\n\n\n\n\n\n\nradio-group\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nscrollbars\nCustom scrollars for both axis'\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nsearch\ninput with search capabilities\n:white_check_mark:\nDemo\nDocs\n\n\n\nselect\n\n:white_check_mark:\nDemo\nDocs\n\n\n\nspacing\nHelpers for consistent spacing\n:white_check_mark:\nDemo\nDocs\n\n\n\nsort\nUsed by table for column sorting\n:white_check_mark:\n(see table demo)\nDocs\nUsage\n\n\ntable\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ntabs\n\n\n\n\n\n\n\ntoggle\n\n:white_check_mark:\nDemo\nDocs\n\n\n\ntooltip\n\n:white_check_mark:\nDemo\nDocs\n\n\n\nPipes\n:books: Pipes Documentation\n\n:circus_tent: Pipes Demo\n\n\n\nPipe\nNotes\nStatus\n\n\n\n\ntsDate\nshort, medium, extended, timestamp\n:white_check_mark:\n\n\ntsRoundNumber\nRound a number to a specific precision\n:white_check_mark:\n\n\ntsSentenceCase\nConvert string casing to sentence-case\n:white_check_mark:\n\n\ntsTimeAgo\nHuman-readable time span\n:white_check_mark:\n\n\ntsTitleCase\nTitle Case A String\n:white_check_mark:\n\n\n\nServices\n\n\n\nFeature\nNotes\nStatus\nDemo\nDocs\nUsage\n\n\n\n\nValidators\nExpose custom validation methods for reactive forms\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\n\nAvailable Validators\n\n\n\nName\nPurpose\n\n\n\n\ncreditCard\nA credit card number must be valid\n\n\nemail\nAn email address must be valid\n\n\nequalToControl\nA control's value must be equal to another control's value\n\n\ngreaterThan\nA number must be greater than another value\n\n\ngreaterThanOrEqual\nA number must be greater than or equal to another value\n\n\nlessThan\nA number must be less than another value\n\n\nlessThanOrEqual\nA number must be less than or equal to another value\n\n\nlowercase\nA value must contain a minimum amount of lowercase characters\n\n\nminDate\nA date must be after a minimum date\n\n\nmaxDate\nA date must be before a maximum date\n\n\npassword\nA password must meet certain requirements\n\n\nurl\nA URL must be valid\n\n\n\nConstants\n\n\n\nFeature\nNotes\nStatus\nDemo\nDocs\nUsage\n\n\n\n\nTS_SPACING\nExpose our spacing sizes in TypeScript\n:white_check_mark:\nDemo\n\n\n\n\nStyle Helpers\n\n\n\nFeature\nNotes\nStatus\nDocs\n\n\n\n\nanimation\n\n:hammer:\n\n\n\nassets\n\n:hammer:\n\n\n\nbreakpoints\n\n:white_check_mark:\nDocs\n\n\ncolors\n\n:white_check_mark:\nDocs\n\n\ncursors\n\n:white_check_mark:\nDocs\n\n\nlayout\n\n:white_check_mark:\nDocs\n\n\nshadows\n\n:white_check_mark:\nDocs\n\n\nspacing\n\n:white_check_mark:\nDocs\n\n\ntypography\n\n:white_check_mark:\nDocs\n\n\nz-index\n\n:white_check_mark:\nDocs\n\n\n\nInstallation\nInstall the library and required dependencies:\n$ yarn add @terminus/ui @terminus/ngx-tools @angular/flex-layout@6.0.0-beta.15 date-fns@2.0.0-alpha.7Global Styles\nTo use the global styles, import the CSS file into your stylesheets:\n@import '@terminus/ui/terminus-ui.css'SCSS Helpers\nTo use the provided SCSS helper methods/variables/mixins, import the helpers file from @terminus/ui:\n@import '~@terminus/ui/helpers'Contributing\nView the contribution documentation and the development documentation.\nContributors\nThanks goes to these wonderful people (emoji key):\n\n\n\n\n\nBenjamin Charity&#x1F4BB; &#x1F4D6; ⚠️ &#x1F3A8; &#x1F914; &#x1F440; &#x1F527;\ncoreyterminator&#x1F4BB;\nWendy&#x1F41B; &#x1F4BB;\nBrian Malinconico&#x1F41B; &#x1F914;\nDavid Harkness&#x1F4BB;\nkal93&#x1F41B;\ndivyameher&#x1F41B;\n\n\n\n\nDevon Peet&#x1F3A8; &#x1F914;\ndean jones&#x1F4BB;\n\n\n\n\nThis project follows the all-contributors specification. Contributions of any kind welcome!\nProject Resources\n\nSemantic Release - Automatically release versioned release to NPM and generate\n  a changelog in the Github tag.\nCommitizen - Interactive cli for enforcing commit message format.\nCommitizen VSCode Plugin - VSCode plugin for commitizen.\nDoctoc - Generate documentation table of contents.\nCodeCov - Code coverage reporting.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright (c) 2018 Terminus Software, LLC.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TerminusUIModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsAutocompleteModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsAutofocusModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsButtonModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsCSVEntryModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsCardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsChartModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsCheckboxModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsConfirmationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsCopyModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsDateRangeModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsDatepickerModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsFileUploadModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsIconButtonModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsIconModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsInputModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsLinkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsLoadingOverlayModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsLoginFormModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsMaskModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsMenuModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsNavigationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsPaginatorModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsPipesModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsRadioGroupModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsScrollbarsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsSearchModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsSelectModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsSortModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsSpacingModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsTableModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsToggleModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsTooltipModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsValidationMessagesModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TerminusUIModule\n\n\n\ncluster_TerminusUIModule_declarations\n\n\n\ncluster_TerminusUIModule_imports\n\n\n\ncluster_TerminusUIModule_exports\n\n\n\ncluster_TerminusUIModule_providers\n\n\n\ncluster_TsAutocompleteModule\n\n\n\ncluster_TsAutocompleteModule_declarations\n\n\n\ncluster_TsAutocompleteModule_exports\n\n\n\ncluster_TsAutofocusModule\n\n\n\ncluster_TsAutofocusModule_declarations\n\n\n\ncluster_TsAutofocusModule_exports\n\n\n\ncluster_TsButtonModule\n\n\n\ncluster_TsButtonModule_declarations\n\n\n\ncluster_TsButtonModule_exports\n\n\n\ncluster_TsCSVEntryModule\n\n\n\ncluster_TsCSVEntryModule_declarations\n\n\n\ncluster_TsCSVEntryModule_exports\n\n\n\ncluster_TsCardModule\n\n\n\ncluster_TsCardModule_declarations\n\n\n\ncluster_TsCardModule_exports\n\n\n\ncluster_TsChartModule\n\n\n\ncluster_TsChartModule_declarations\n\n\n\ncluster_TsChartModule_exports\n\n\n\ncluster_TsChartModule_providers\n\n\n\ncluster_TsCheckboxModule\n\n\n\ncluster_TsCheckboxModule_declarations\n\n\n\ncluster_TsCheckboxModule_TsCheckboxComponent_providers\n\n\n\ncluster_TsCheckboxModule_exports\n\n\n\ncluster_TsConfirmationModule\n\n\n\ncluster_TsConfirmationModule_declarations\n\n\n\ncluster_TsConfirmationModule_exports\n\n\n\ncluster_TsCopyModule\n\n\n\ncluster_TsCopyModule_declarations\n\n\n\ncluster_TsCopyModule_exports\n\n\n\ncluster_TsDateRangeModule\n\n\n\ncluster_TsDateRangeModule_declarations\n\n\n\ncluster_TsDateRangeModule_exports\n\n\n\ncluster_TsDatepickerModule\n\n\n\ncluster_TsDatepickerModule_declarations\n\n\n\ncluster_TsDatepickerModule_TsDatepickerComponent_providers\n\n\n\ncluster_TsDatepickerModule_exports\n\n\n\ncluster_TsFileUploadModule\n\n\n\ncluster_TsFileUploadModule_declarations\n\n\n\ncluster_TsFileUploadModule_exports\n\n\n\ncluster_TsFileUploadModule_providers\n\n\n\ncluster_TsIconButtonModule\n\n\n\ncluster_TsIconButtonModule_declarations\n\n\n\ncluster_TsIconButtonModule_exports\n\n\n\ncluster_TsIconModule\n\n\n\ncluster_TsIconModule_declarations\n\n\n\ncluster_TsIconModule_exports\n\n\n\ncluster_TsInputModule\n\n\n\ncluster_TsInputModule_declarations\n\n\n\ncluster_TsInputModule_TsInputComponent_providers\n\n\n\ncluster_TsInputModule_exports\n\n\n\ncluster_TsLinkModule\n\n\n\ncluster_TsLinkModule_declarations\n\n\n\ncluster_TsLinkModule_exports\n\n\n\ncluster_TsLoadingOverlayModule\n\n\n\ncluster_TsLoadingOverlayModule_declarations\n\n\n\ncluster_TsLoadingOverlayModule_exports\n\n\n\ncluster_TsLoginFormModule\n\n\n\ncluster_TsLoginFormModule_declarations\n\n\n\ncluster_TsLoginFormModule_exports\n\n\n\ncluster_TsMaskModule\n\n\n\ncluster_TsMaskModule_declarations\n\n\n\ncluster_TsMaskModule_TsMaskDirective_providers\n\n\n\ncluster_TsMaskModule_exports\n\n\n\ncluster_TsMenuModule\n\n\n\ncluster_TsMenuModule_declarations\n\n\n\ncluster_TsMenuModule_exports\n\n\n\ncluster_TsNavigationModule\n\n\n\ncluster_TsNavigationModule_declarations\n\n\n\ncluster_TsNavigationModule_exports\n\n\n\ncluster_TsPaginatorModule\n\n\n\ncluster_TsPaginatorModule_declarations\n\n\n\ncluster_TsPaginatorModule_exports\n\n\n\ncluster_TsPipesModule\n\n\n\ncluster_TsPipesModule_declarations\n\n\n\ncluster_TsPipesModule_exports\n\n\n\ncluster_TsRadioGroupModule\n\n\n\ncluster_TsRadioGroupModule_declarations\n\n\n\ncluster_TsRadioGroupModule_TsRadioGroupComponent_providers\n\n\n\ncluster_TsRadioGroupModule_exports\n\n\n\ncluster_TsScrollbarsModule\n\n\n\ncluster_TsScrollbarsModule_declarations\n\n\n\ncluster_TsScrollbarsModule_exports\n\n\n\ncluster_TsSearchModule\n\n\n\ncluster_TsSearchModule_declarations\n\n\n\ncluster_TsSearchModule_exports\n\n\n\ncluster_TsSelectModule\n\n\n\ncluster_TsSelectModule_declarations\n\n\n\ncluster_TsSelectModule_TsSelectComponent_providers\n\n\n\ncluster_TsSelectModule_exports\n\n\n\ncluster_TsSortModule\n\n\n\ncluster_TsSortModule_declarations\n\n\n\ncluster_TsSortModule_exports\n\n\n\ncluster_TsSpacingModule\n\n\n\ncluster_TsSpacingModule_declarations\n\n\n\ncluster_TsSpacingModule_exports\n\n\n\ncluster_TsTableModule\n\n\n\ncluster_TsTableModule_declarations\n\n\n\ncluster_TsTableModule_TsCellDefDirective_providers\n\n\n\ncluster_TsTableModule_exports\n\n\n\ncluster_TsToggleModule\n\n\n\ncluster_TsToggleModule_declarations\n\n\n\ncluster_TsToggleModule_TsToggleComponent_providers\n\n\n\ncluster_TsToggleModule_exports\n\n\n\ncluster_TsTooltipModule\n\n\n\ncluster_TsTooltipModule_declarations\n\n\n\ncluster_TsTooltipModule_exports\n\n\n\ncluster_TsValidationMessagesModule\n\n\n\ncluster_TsValidationMessagesModule_declarations\n\n\n\ncluster_TsValidationMessagesModule_exports\n\n\n\ncluster_TsValidationMessagesModule_providers\n\n\n\n\nTsReactiveFormBaseComponent\n\nTsReactiveFormBaseComponent\n\n\n\nTerminusUIModule\n\nTerminusUIModule\n\nTerminusUIModule -->\n\nTsReactiveFormBaseComponent->TerminusUIModule\n\n\n\n\n\nTsAutocompleteModule \n\nTsAutocompleteModule \n\nTsAutocompleteModule  -->\n\nTerminusUIModule->TsAutocompleteModule \n\n\n\n\n\nTsAutofocusModule \n\nTsAutofocusModule \n\nTsAutofocusModule  -->\n\nTerminusUIModule->TsAutofocusModule \n\n\n\n\n\nTsButtonModule \n\nTsButtonModule \n\nTsButtonModule  -->\n\nTerminusUIModule->TsButtonModule \n\n\n\n\n\nTsCSVEntryModule \n\nTsCSVEntryModule \n\nTsCSVEntryModule  -->\n\nTerminusUIModule->TsCSVEntryModule \n\n\n\n\n\nTsCardModule \n\nTsCardModule \n\nTsCardModule  -->\n\nTerminusUIModule->TsCardModule \n\n\n\n\n\nTsChartModule \n\nTsChartModule \n\nTsChartModule  -->\n\nTerminusUIModule->TsChartModule \n\n\n\n\n\nTsCheckboxModule \n\nTsCheckboxModule \n\nTsCheckboxModule  -->\n\nTerminusUIModule->TsCheckboxModule \n\n\n\n\n\nTsConfirmationModule \n\nTsConfirmationModule \n\nTsConfirmationModule  -->\n\nTerminusUIModule->TsConfirmationModule \n\n\n\n\n\nTsCopyModule \n\nTsCopyModule \n\nTsCopyModule  -->\n\nTerminusUIModule->TsCopyModule \n\n\n\n\n\nTsDateRangeModule \n\nTsDateRangeModule \n\nTsDateRangeModule  -->\n\nTerminusUIModule->TsDateRangeModule \n\n\n\n\n\nTsDatepickerModule \n\nTsDatepickerModule \n\nTsDatepickerModule  -->\n\nTerminusUIModule->TsDatepickerModule \n\n\n\n\n\nTsFileUploadModule \n\nTsFileUploadModule \n\nTsFileUploadModule  -->\n\nTerminusUIModule->TsFileUploadModule \n\n\n\n\n\nTsIconButtonModule \n\nTsIconButtonModule \n\nTsIconButtonModule  -->\n\nTerminusUIModule->TsIconButtonModule \n\n\n\n\n\nTsIconModule \n\nTsIconModule \n\nTsIconModule  -->\n\nTerminusUIModule->TsIconModule \n\n\n\n\n\nTsInputModule \n\nTsInputModule \n\nTsInputModule  -->\n\nTerminusUIModule->TsInputModule \n\n\n\n\n\nTsLinkModule \n\nTsLinkModule \n\nTsLinkModule  -->\n\nTerminusUIModule->TsLinkModule \n\n\n\n\n\nTsLoadingOverlayModule \n\nTsLoadingOverlayModule \n\nTsLoadingOverlayModule  -->\n\nTerminusUIModule->TsLoadingOverlayModule \n\n\n\n\n\nTsLoginFormModule \n\nTsLoginFormModule \n\nTsLoginFormModule  -->\n\nTerminusUIModule->TsLoginFormModule \n\n\n\n\n\nTsMaskModule \n\nTsMaskModule \n\nTsMaskModule  -->\n\nTerminusUIModule->TsMaskModule \n\n\n\n\n\nTsMenuModule \n\nTsMenuModule \n\nTsMenuModule  -->\n\nTerminusUIModule->TsMenuModule \n\n\n\n\n\nTsNavigationModule \n\nTsNavigationModule \n\nTsNavigationModule  -->\n\nTerminusUIModule->TsNavigationModule \n\n\n\n\n\nTsPaginatorModule \n\nTsPaginatorModule \n\nTsPaginatorModule  -->\n\nTerminusUIModule->TsPaginatorModule \n\n\n\n\n\nTsRadioGroupModule \n\nTsRadioGroupModule \n\nTsRadioGroupModule  -->\n\nTerminusUIModule->TsRadioGroupModule \n\n\n\n\n\nTsScrollbarsModule \n\nTsScrollbarsModule \n\nTsScrollbarsModule  -->\n\nTerminusUIModule->TsScrollbarsModule \n\n\n\n\n\nTsSearchModule \n\nTsSearchModule \n\nTsSearchModule  -->\n\nTerminusUIModule->TsSearchModule \n\n\n\n\n\nTsSelectModule \n\nTsSelectModule \n\nTsSelectModule  -->\n\nTerminusUIModule->TsSelectModule \n\n\n\n\n\nTsSortModule \n\nTsSortModule \n\nTsSortModule  -->\n\nTerminusUIModule->TsSortModule \n\n\n\n\n\nTsSpacingModule \n\nTsSpacingModule \n\nTsSpacingModule  -->\n\nTerminusUIModule->TsSpacingModule \n\n\n\n\n\nTsTableModule \n\nTsTableModule \n\nTsTableModule  -->\n\nTerminusUIModule->TsTableModule \n\n\n\n\n\nTsToggleModule \n\nTsToggleModule \n\nTsToggleModule  -->\n\nTerminusUIModule->TsToggleModule \n\n\n\n\n\nTsTooltipModule \n\nTsTooltipModule \n\nTsTooltipModule  -->\n\nTerminusUIModule->TsTooltipModule \n\n\n\n\n\nTsValidationMessagesModule \n\nTsValidationMessagesModule \n\nTsValidationMessagesModule  -->\n\nTerminusUIModule->TsValidationMessagesModule \n\n\n\n\n\nTsAutocompleteModule\n\nTsAutocompleteModule\n\nTerminusUIModule -->\n\nTsAutocompleteModule->TerminusUIModule\n\n\n\n\n\nTsAutocompleteComponent \n\nTsAutocompleteComponent \n\nTsAutocompleteComponent  -->\n\nTsAutocompleteModule->TsAutocompleteComponent \n\n\n\n\n\nTsAutofocusModule\n\nTsAutofocusModule\n\nTerminusUIModule -->\n\nTsAutofocusModule->TerminusUIModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsInputModule -->\n\nTsAutofocusModule->TsInputModule\n\n\n\n\n\nTsAutofocusDirective \n\nTsAutofocusDirective \n\nTsAutofocusDirective  -->\n\nTsAutofocusModule->TsAutofocusDirective \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTerminusUIModule -->\n\nTsButtonModule->TerminusUIModule\n\n\n\n\n\nTsCSVEntryModule\n\nTsCSVEntryModule\n\nTsCSVEntryModule -->\n\nTsButtonModule->TsCSVEntryModule\n\n\n\n\n\nTsConfirmationModule\n\nTsConfirmationModule\n\nTsConfirmationModule -->\n\nTsButtonModule->TsConfirmationModule\n\n\n\n\n\nTsFileUploadModule\n\nTsFileUploadModule\n\nTsFileUploadModule -->\n\nTsButtonModule->TsFileUploadModule\n\n\n\n\n\nTsLoginFormModule\n\nTsLoginFormModule\n\nTsLoginFormModule -->\n\nTsButtonModule->TsLoginFormModule\n\n\n\n\n\nTsMenuModule\n\nTsMenuModule\n\nTsMenuModule -->\n\nTsButtonModule->TsMenuModule\n\n\n\n\n\nTsPaginatorModule\n\nTsPaginatorModule\n\nTsPaginatorModule -->\n\nTsButtonModule->TsPaginatorModule\n\n\n\n\n\nTsSearchModule\n\nTsSearchModule\n\nTsSearchModule -->\n\nTsButtonModule->TsSearchModule\n\n\n\n\n\nTsButtonComponent \n\nTsButtonComponent \n\nTsButtonComponent  -->\n\nTsButtonModule->TsButtonComponent \n\n\n\nTerminusUIModule -->\n\nTsCSVEntryModule->TerminusUIModule\n\n\n\n\n\nTsCSVEntryComponent \n\nTsCSVEntryComponent \n\nTsCSVEntryComponent  -->\n\nTsCSVEntryModule->TsCSVEntryComponent \n\n\n\n\n\nTsCardModule\n\nTsCardModule\n\nTerminusUIModule -->\n\nTsCardModule->TerminusUIModule\n\n\n\n\n\nTsCardComponent \n\nTsCardComponent \n\nTsCardComponent  -->\n\nTsCardModule->TsCardComponent \n\n\n\n\n\nTsCardTitleDirective \n\nTsCardTitleDirective \n\nTsCardTitleDirective  -->\n\nTsCardModule->TsCardTitleDirective \n\n\n\n\n\nTsChartModule\n\nTsChartModule\n\nTerminusUIModule -->\n\nTsChartModule->TerminusUIModule\n\n\n\n\n\nTsChartComponent \n\nTsChartComponent \n\nTsChartComponent  -->\n\nTsChartModule->TsChartComponent \n\n\n\n\n\nTsCheckboxModule\n\nTsCheckboxModule\n\nTerminusUIModule -->\n\nTsCheckboxModule->TerminusUIModule\n\n\n\nTsLoginFormModule -->\n\nTsCheckboxModule->TsLoginFormModule\n\n\n\n\n\nTsCheckboxComponent \n\nTsCheckboxComponent \n\nTsCheckboxComponent  -->\n\nTsCheckboxModule->TsCheckboxComponent \n\n\n\nTerminusUIModule -->\n\nTsConfirmationModule->TerminusUIModule\n\n\n\n\n\nTsConfirmationDirective \n\nTsConfirmationDirective \n\nTsConfirmationDirective  -->\n\nTsConfirmationModule->TsConfirmationDirective \n\n\n\n\n\nTsCopyModule\n\nTsCopyModule\n\nTerminusUIModule -->\n\nTsCopyModule->TerminusUIModule\n\n\n\n\n\nTsCopyComponent \n\nTsCopyComponent \n\nTsCopyComponent  -->\n\nTsCopyModule->TsCopyComponent \n\n\n\n\n\nTsDateRangeModule\n\nTsDateRangeModule\n\nTerminusUIModule -->\n\nTsDateRangeModule->TerminusUIModule\n\n\n\n\n\nTsDateRangeComponent \n\nTsDateRangeComponent \n\nTsDateRangeComponent  -->\n\nTsDateRangeModule->TsDateRangeComponent \n\n\n\n\n\nTsDatepickerModule\n\nTsDatepickerModule\n\nTerminusUIModule -->\n\nTsDatepickerModule->TerminusUIModule\n\n\n\nTsDateRangeModule -->\n\nTsDatepickerModule->TsDateRangeModule\n\n\n\n\n\nTsDatepickerComponent \n\nTsDatepickerComponent \n\nTsDatepickerComponent  -->\n\nTsDatepickerModule->TsDatepickerComponent \n\n\n\nTerminusUIModule -->\n\nTsFileUploadModule->TerminusUIModule\n\n\n\n\n\nTsFileUploadComponent \n\nTsFileUploadComponent \n\nTsFileUploadComponent  -->\n\nTsFileUploadModule->TsFileUploadComponent \n\n\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTerminusUIModule -->\n\nTsIconButtonModule->TerminusUIModule\n\n\n\nTsCSVEntryModule -->\n\nTsIconButtonModule->TsCSVEntryModule\n\n\n\nTsFileUploadModule -->\n\nTsIconButtonModule->TsFileUploadModule\n\n\n\n\n\nTsIconButtonComponent \n\nTsIconButtonComponent \n\nTsIconButtonComponent  -->\n\nTsIconButtonModule->TsIconButtonComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTerminusUIModule -->\n\nTsIconModule->TerminusUIModule\n\n\n\nTsAutocompleteModule -->\n\nTsIconModule->TsAutocompleteModule\n\n\n\nTsButtonModule -->\n\nTsIconModule->TsButtonModule\n\n\n\nTsCSVEntryModule -->\n\nTsIconModule->TsCSVEntryModule\n\n\n\nTsCardModule -->\n\nTsIconModule->TsCardModule\n\n\n\nTsCopyModule -->\n\nTsIconModule->TsCopyModule\n\n\n\nTsFileUploadModule -->\n\nTsIconModule->TsFileUploadModule\n\n\n\nTsIconButtonModule -->\n\nTsIconModule->TsIconButtonModule\n\n\n\nTsInputModule -->\n\nTsIconModule->TsInputModule\n\n\n\n\n\nTsLinkModule\n\nTsLinkModule\n\nTsLinkModule -->\n\nTsIconModule->TsLinkModule\n\n\n\nTsMenuModule -->\n\nTsIconModule->TsMenuModule\n\n\n\n\n\nTsNavigationModule\n\nTsNavigationModule\n\nTsNavigationModule -->\n\nTsIconModule->TsNavigationModule\n\n\n\n\n\nTsRadioGroupModule\n\nTsRadioGroupModule\n\nTsRadioGroupModule -->\n\nTsIconModule->TsRadioGroupModule\n\n\n\n\n\nTsIconComponent \n\nTsIconComponent \n\nTsIconComponent  -->\n\nTsIconModule->TsIconComponent \n\n\n\nTerminusUIModule -->\n\nTsInputModule->TerminusUIModule\n\n\n\nTsAutocompleteModule -->\n\nTsInputModule->TsAutocompleteModule\n\n\n\nTsLoginFormModule -->\n\nTsInputModule->TsLoginFormModule\n\n\n\nTsSearchModule -->\n\nTsInputModule->TsSearchModule\n\n\n\n\n\nTsInputComponent \n\nTsInputComponent \n\nTsInputComponent  -->\n\nTsInputModule->TsInputComponent \n\n\n\nTerminusUIModule -->\n\nTsLinkModule->TerminusUIModule\n\n\n\nTsLoginFormModule -->\n\nTsLinkModule->TsLoginFormModule\n\n\n\n\n\nTsLinkComponent \n\nTsLinkComponent \n\nTsLinkComponent  -->\n\nTsLinkModule->TsLinkComponent \n\n\n\n\n\nTsLoadingOverlayModule\n\nTsLoadingOverlayModule\n\nTerminusUIModule -->\n\nTsLoadingOverlayModule->TerminusUIModule\n\n\n\n\n\nTsLoadingOverlayDirective \n\nTsLoadingOverlayDirective \n\nTsLoadingOverlayDirective  -->\n\nTsLoadingOverlayModule->TsLoadingOverlayDirective \n\n\n\nTerminusUIModule -->\n\nTsLoginFormModule->TerminusUIModule\n\n\n\n\n\nTsLoginFormComponent \n\nTsLoginFormComponent \n\nTsLoginFormComponent  -->\n\nTsLoginFormModule->TsLoginFormComponent \n\n\n\n\n\nTsMaskModule\n\nTsMaskModule\n\nTerminusUIModule -->\n\nTsMaskModule->TerminusUIModule\n\n\n\n\n\nTsMaskDirective \n\nTsMaskDirective \n\nTsMaskDirective  -->\n\nTsMaskModule->TsMaskDirective \n\n\n\nTerminusUIModule -->\n\nTsMenuModule->TerminusUIModule\n\n\n\nTsPaginatorModule -->\n\nTsMenuModule->TsPaginatorModule\n\n\n\n\n\nTsMenuComponent \n\nTsMenuComponent \n\nTsMenuComponent  -->\n\nTsMenuModule->TsMenuComponent \n\n\n\nTerminusUIModule -->\n\nTsNavigationModule->TerminusUIModule\n\n\n\n\n\nTsNavigationComponent \n\nTsNavigationComponent \n\nTsNavigationComponent  -->\n\nTsNavigationModule->TsNavigationComponent \n\n\n\nTerminusUIModule -->\n\nTsPaginatorModule->TerminusUIModule\n\n\n\n\n\nTsTableModule\n\nTsTableModule\n\nTsTableModule -->\n\nTsPaginatorModule->TsTableModule\n\n\n\n\n\nTsPaginatorComponent \n\nTsPaginatorComponent \n\nTsPaginatorComponent  -->\n\nTsPaginatorModule->TsPaginatorComponent \n\n\n\nTerminusUIModule -->\n\nTsRadioGroupModule->TerminusUIModule\n\n\n\n\n\nTsRadioGroupComponent \n\nTsRadioGroupComponent \n\nTsRadioGroupComponent  -->\n\nTsRadioGroupModule->TsRadioGroupComponent \n\n\n\n\n\nTsScrollbarsModule\n\nTsScrollbarsModule\n\nTerminusUIModule -->\n\nTsScrollbarsModule->TerminusUIModule\n\n\n\n\n\nTsScrollbarsComponent \n\nTsScrollbarsComponent \n\nTsScrollbarsComponent  -->\n\nTsScrollbarsModule->TsScrollbarsComponent \n\n\n\nTerminusUIModule -->\n\nTsSearchModule->TerminusUIModule\n\n\n\n\n\nTsSearchComponent \n\nTsSearchComponent \n\nTsSearchComponent  -->\n\nTsSearchModule->TsSearchComponent \n\n\n\n\n\nTsSelectModule\n\nTsSelectModule\n\nTerminusUIModule -->\n\nTsSelectModule->TerminusUIModule\n\n\n\nTsPaginatorModule -->\n\nTsSelectModule->TsPaginatorModule\n\n\n\n\n\nTsSelectComponent \n\nTsSelectComponent \n\nTsSelectComponent  -->\n\nTsSelectModule->TsSelectComponent \n\n\n\n\n\nTsSortModule\n\nTsSortModule\n\nTerminusUIModule -->\n\nTsSortModule->TerminusUIModule\n\n\n\nTsTableModule -->\n\nTsSortModule->TsTableModule\n\n\n\n\n\nTsSortDirective \n\nTsSortDirective \n\nTsSortDirective  -->\n\nTsSortModule->TsSortDirective \n\n\n\n\n\nTsSortHeaderComponent \n\nTsSortHeaderComponent \n\nTsSortHeaderComponent  -->\n\nTsSortModule->TsSortHeaderComponent \n\n\n\n\n\nTsSpacingModule\n\nTsSpacingModule\n\nTerminusUIModule -->\n\nTsSpacingModule->TerminusUIModule\n\n\n\nTsLoginFormModule -->\n\nTsSpacingModule->TsLoginFormModule\n\n\n\n\n\nTsVerticalSpacingDirective \n\nTsVerticalSpacingDirective \n\nTsVerticalSpacingDirective  -->\n\nTsSpacingModule->TsVerticalSpacingDirective \n\n\n\nTerminusUIModule -->\n\nTsTableModule->TerminusUIModule\n\n\n\n\n\nTsCellDefDirective \n\nTsCellDefDirective \n\nTsCellDefDirective  -->\n\nTsTableModule->TsCellDefDirective \n\n\n\n\n\nTsCellDirective \n\nTsCellDirective \n\nTsCellDirective  -->\n\nTsTableModule->TsCellDirective \n\n\n\n\n\nTsColumnDefDirective \n\nTsColumnDefDirective \n\nTsColumnDefDirective  -->\n\nTsTableModule->TsColumnDefDirective \n\n\n\n\n\nTsHeaderCellDefDirective \n\nTsHeaderCellDefDirective \n\nTsHeaderCellDefDirective  -->\n\nTsTableModule->TsHeaderCellDefDirective \n\n\n\n\n\nTsHeaderCellDirective \n\nTsHeaderCellDirective \n\nTsHeaderCellDirective  -->\n\nTsTableModule->TsHeaderCellDirective \n\n\n\n\n\nTsHeaderRowComponent \n\nTsHeaderRowComponent \n\nTsHeaderRowComponent  -->\n\nTsTableModule->TsHeaderRowComponent \n\n\n\n\n\nTsHeaderRowDefDirective \n\nTsHeaderRowDefDirective \n\nTsHeaderRowDefDirective  -->\n\nTsTableModule->TsHeaderRowDefDirective \n\n\n\n\n\nTsRowComponent \n\nTsRowComponent \n\nTsRowComponent  -->\n\nTsTableModule->TsRowComponent \n\n\n\n\n\nTsRowDefDirective \n\nTsRowDefDirective \n\nTsRowDefDirective  -->\n\nTsTableModule->TsRowDefDirective \n\n\n\n\n\nTsTableComponent \n\nTsTableComponent \n\nTsTableComponent  -->\n\nTsTableModule->TsTableComponent \n\n\n\n\n\nTsToggleModule\n\nTsToggleModule\n\nTerminusUIModule -->\n\nTsToggleModule->TerminusUIModule\n\n\n\n\n\nTsToggleComponent \n\nTsToggleComponent \n\nTsToggleComponent  -->\n\nTsToggleModule->TsToggleComponent \n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTerminusUIModule -->\n\nTsTooltipModule->TerminusUIModule\n\n\n\nTsCSVEntryModule -->\n\nTsTooltipModule->TsCSVEntryModule\n\n\n\nTsCopyModule -->\n\nTsTooltipModule->TsCopyModule\n\n\n\nTsFileUploadModule -->\n\nTsTooltipModule->TsFileUploadModule\n\n\n\nTsPaginatorModule -->\n\nTsTooltipModule->TsPaginatorModule\n\n\n\n\n\nTsTooltipComponent \n\nTsTooltipComponent \n\nTsTooltipComponent  -->\n\nTsTooltipModule->TsTooltipComponent \n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTerminusUIModule -->\n\nTsValidationMessagesModule->TerminusUIModule\n\n\n\nTsAutocompleteModule -->\n\nTsValidationMessagesModule->TsAutocompleteModule\n\n\n\nTsDatepickerModule -->\n\nTsValidationMessagesModule->TsDatepickerModule\n\n\n\nTsFileUploadModule -->\n\nTsValidationMessagesModule->TsFileUploadModule\n\n\n\nTsInputModule -->\n\nTsValidationMessagesModule->TsInputModule\n\n\n\nTsRadioGroupModule -->\n\nTsValidationMessagesModule->TsRadioGroupModule\n\n\n\nTsSelectModule -->\n\nTsValidationMessagesModule->TsSelectModule\n\n\n\n\n\nTsValidationMessagesComponent \n\nTsValidationMessagesComponent \n\nTsValidationMessagesComponent  -->\n\nTsValidationMessagesModule->TsValidationMessagesComponent \n\n\n\n\n\nTsValidatorsService\n\nTsValidatorsService\n\nTerminusUIModule -->\n\nTsValidatorsService->TerminusUIModule\n\n\n\nTsInputModule -->\n\nTsValidatorsService->TsInputModule\n\n\n\nTsLoginFormModule -->\n\nTsValidatorsService->TsLoginFormModule\n\n\n\n\n\nTsAutocompleteComponent\n\nTsAutocompleteComponent\n\nTsAutocompleteModule -->\n\nTsAutocompleteComponent->TsAutocompleteModule\n\n\n\n\n\nTsAutofocusDirective\n\nTsAutofocusDirective\n\nTsAutofocusModule -->\n\nTsAutofocusDirective->TsAutofocusModule\n\n\n\n\n\nTsButtonComponent\n\nTsButtonComponent\n\nTsButtonModule -->\n\nTsButtonComponent->TsButtonModule\n\n\n\n\n\nTsCSVEntryComponent\n\nTsCSVEntryComponent\n\nTsCSVEntryModule -->\n\nTsCSVEntryComponent->TsCSVEntryModule\n\n\n\n\n\nTsCardComponent\n\nTsCardComponent\n\nTsCardModule -->\n\nTsCardComponent->TsCardModule\n\n\n\n\n\nTsCardTitleDirective\n\nTsCardTitleDirective\n\nTsCardModule -->\n\nTsCardTitleDirective->TsCardModule\n\n\n\n\n\nTsChartComponent\n\nTsChartComponent\n\nTsChartModule -->\n\nTsChartComponent->TsChartModule\n\n\n\n\n\nTsAmChartsService\n\nTsAmChartsService\n\nTsChartModule -->\n\nTsAmChartsService->TsChartModule\n\n\n\n\n\nTsCheckboxComponent\n\nTsCheckboxComponent\n\nTsCheckboxModule -->\n\nTsCheckboxComponent->TsCheckboxModule\n\n\n\n\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n\nTsCheckboxComponent -->\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR->TsCheckboxComponent\n\n\n\n\n\nTsConfirmationDirective\n\nTsConfirmationDirective\n\nTsConfirmationModule -->\n\nTsConfirmationDirective->TsConfirmationModule\n\n\n\n\n\nTsConfirmationModalComponent\n\nTsConfirmationModalComponent\n\nTsConfirmationModule -->\n\nTsConfirmationModalComponent->TsConfirmationModule\n\n\n\n\n\nTsCopyComponent\n\nTsCopyComponent\n\nTsCopyModule -->\n\nTsCopyComponent->TsCopyModule\n\n\n\n\n\nTsDateRangeComponent\n\nTsDateRangeComponent\n\nTsDateRangeModule -->\n\nTsDateRangeComponent->TsDateRangeModule\n\n\n\n\n\nTsDatepickerComponent\n\nTsDatepickerComponent\n\nTsDatepickerModule -->\n\nTsDatepickerComponent->TsDatepickerModule\n\n\n\n\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR\n\nTsDatepickerComponent -->\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR->TsDatepickerComponent\n\n\n\n\n\nTsFileUploadComponent\n\nTsFileUploadComponent\n\nTsFileUploadModule -->\n\nTsFileUploadComponent->TsFileUploadModule\n\n\n\n\n\nTsDropProtectionService\n\nTsDropProtectionService\n\nTsFileUploadModule -->\n\nTsDropProtectionService->TsFileUploadModule\n\n\n\n\n\nTsIconButtonComponent\n\nTsIconButtonComponent\n\nTsIconButtonModule -->\n\nTsIconButtonComponent->TsIconButtonModule\n\n\n\n\n\nTsIconComponent\n\nTsIconComponent\n\nTsIconModule -->\n\nTsIconComponent->TsIconModule\n\n\n\n\n\nTsInputComponent\n\nTsInputComponent\n\nTsInputModule -->\n\nTsInputComponent->TsInputModule\n\n\n\n\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n\nTsInputComponent -->\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR->TsInputComponent\n\n\n\n\n\nTsLinkComponent\n\nTsLinkComponent\n\nTsLinkModule -->\n\nTsLinkComponent->TsLinkModule\n\n\n\n\n\nTsLoadingOverlayComponent\n\nTsLoadingOverlayComponent\n\nTsLoadingOverlayModule -->\n\nTsLoadingOverlayComponent->TsLoadingOverlayModule\n\n\n\n\n\nTsLoadingOverlayDirective\n\nTsLoadingOverlayDirective\n\nTsLoadingOverlayModule -->\n\nTsLoadingOverlayDirective->TsLoadingOverlayModule\n\n\n\n\n\nTsLoginFormComponent\n\nTsLoginFormComponent\n\nTsLoginFormModule -->\n\nTsLoginFormComponent->TsLoginFormModule\n\n\n\n\n\nTsMaskDirective\n\nTsMaskDirective\n\nTsMaskModule -->\n\nTsMaskDirective->TsMaskModule\n\n\n\n\n\nMASKED_INPUT_VALUE_ACCESSOR\n\nMASKED_INPUT_VALUE_ACCESSOR\n\nTsMaskDirective -->\n\nMASKED_INPUT_VALUE_ACCESSOR->TsMaskDirective\n\n\n\n\n\nTsMenuComponent\n\nTsMenuComponent\n\nTsMenuModule -->\n\nTsMenuComponent->TsMenuModule\n\n\n\n\n\nTsNavigationComponent\n\nTsNavigationComponent\n\nTsNavigationModule -->\n\nTsNavigationComponent->TsNavigationModule\n\n\n\n\n\nTsPaginatorComponent\n\nTsPaginatorComponent\n\nTsPaginatorModule -->\n\nTsPaginatorComponent->TsPaginatorModule\n\n\n\n\n\nTsDatePipe\n\nTsDatePipe\n\n\n\nTsPipesModule\n\nTsPipesModule\n\nTsPipesModule -->\n\nTsDatePipe->TsPipesModule\n\n\n\n\n\nTsRoundNumberPipe\n\nTsRoundNumberPipe\n\nTsPipesModule -->\n\nTsRoundNumberPipe->TsPipesModule\n\n\n\n\n\nTsSentenceCasePipe\n\nTsSentenceCasePipe\n\nTsPipesModule -->\n\nTsSentenceCasePipe->TsPipesModule\n\n\n\n\n\nTsTimeAgoPipe\n\nTsTimeAgoPipe\n\nTsPipesModule -->\n\nTsTimeAgoPipe->TsPipesModule\n\n\n\n\n\nTsTitleCasePipe\n\nTsTitleCasePipe\n\nTsPipesModule -->\n\nTsTitleCasePipe->TsPipesModule\n\n\n\n\n\nTsDatePipe \n\nTsDatePipe \n\nTsDatePipe  -->\n\nTsPipesModule->TsDatePipe \n\n\n\n\n\nTsRoundNumberPipe \n\nTsRoundNumberPipe \n\nTsRoundNumberPipe  -->\n\nTsPipesModule->TsRoundNumberPipe \n\n\n\n\n\nTsSentenceCasePipe \n\nTsSentenceCasePipe \n\nTsSentenceCasePipe  -->\n\nTsPipesModule->TsSentenceCasePipe \n\n\n\n\n\nTsTimeAgoPipe \n\nTsTimeAgoPipe \n\nTsTimeAgoPipe  -->\n\nTsPipesModule->TsTimeAgoPipe \n\n\n\n\n\nTsTitleCasePipe \n\nTsTitleCasePipe \n\nTsTitleCasePipe  -->\n\nTsPipesModule->TsTitleCasePipe \n\n\n\n\n\nTsRadioGroupComponent\n\nTsRadioGroupComponent\n\nTsRadioGroupModule -->\n\nTsRadioGroupComponent->TsRadioGroupModule\n\n\n\n\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n\nTsRadioGroupComponent -->\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR->TsRadioGroupComponent\n\n\n\n\n\nTsScrollbarsComponent\n\nTsScrollbarsComponent\n\nTsScrollbarsModule -->\n\nTsScrollbarsComponent->TsScrollbarsModule\n\n\n\n\n\nTsSearchComponent\n\nTsSearchComponent\n\nTsSearchModule -->\n\nTsSearchComponent->TsSearchModule\n\n\n\n\n\nTsSelectComponent\n\nTsSelectComponent\n\nTsSelectModule -->\n\nTsSelectComponent->TsSelectModule\n\n\n\n\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n\nTsSelectComponent -->\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR->TsSelectComponent\n\n\n\n\n\nTsSortDirective\n\nTsSortDirective\n\nTsSortModule -->\n\nTsSortDirective->TsSortModule\n\n\n\n\n\nTsSortHeaderComponent\n\nTsSortHeaderComponent\n\nTsSortModule -->\n\nTsSortHeaderComponent->TsSortModule\n\n\n\n\n\nTsVerticalSpacingDirective\n\nTsVerticalSpacingDirective\n\nTsSpacingModule -->\n\nTsVerticalSpacingDirective->TsSpacingModule\n\n\n\n\n\nTsCellDefDirective\n\nTsCellDefDirective\n\nTsTableModule -->\n\nTsCellDefDirective->TsTableModule\n\n\n\n\n\nTsCellDirective\n\nTsCellDirective\n\nTsTableModule -->\n\nTsCellDirective->TsTableModule\n\n\n\n\n\nTsColumnDefDirective\n\nTsColumnDefDirective\n\nTsTableModule -->\n\nTsColumnDefDirective->TsTableModule\n\n\n\n\n\nTsHeaderCellDefDirective\n\nTsHeaderCellDefDirective\n\nTsTableModule -->\n\nTsHeaderCellDefDirective->TsTableModule\n\n\n\n\n\nTsHeaderCellDirective\n\nTsHeaderCellDirective\n\nTsTableModule -->\n\nTsHeaderCellDirective->TsTableModule\n\n\n\n\n\nTsHeaderRowComponent\n\nTsHeaderRowComponent\n\nTsTableModule -->\n\nTsHeaderRowComponent->TsTableModule\n\n\n\n\n\nTsHeaderRowDefDirective\n\nTsHeaderRowDefDirective\n\nTsTableModule -->\n\nTsHeaderRowDefDirective->TsTableModule\n\n\n\n\n\nTsRowComponent\n\nTsRowComponent\n\nTsTableModule -->\n\nTsRowComponent->TsTableModule\n\n\n\n\n\nTsRowDefDirective\n\nTsRowDefDirective\n\nTsTableModule -->\n\nTsRowDefDirective->TsTableModule\n\n\n\n\n\nTsTableComponent\n\nTsTableComponent\n\nTsTableModule -->\n\nTsTableComponent->TsTableModule\n\n\n\n\n\n{ : , :  }\n\n{ : , :  }\n\nTsCellDefDirective -->\n\n{ : , :  }->TsCellDefDirective\n\n\n\nTsColumnDefDirective -->\n\n{ : , :  }->TsColumnDefDirective\n\n\n\nTsHeaderCellDefDirective -->\n\n{ : , :  }->TsHeaderCellDefDirective\n\n\n\nTsHeaderRowDefDirective -->\n\n{ : , :  }->TsHeaderRowDefDirective\n\n\n\nTsRowDefDirective -->\n\n{ : , :  }->TsRowDefDirective\n\n\n\n\n\nTsToggleComponent\n\nTsToggleComponent\n\nTsToggleModule -->\n\nTsToggleComponent->TsToggleModule\n\n\n\n\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n\nTsToggleComponent -->\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR->TsToggleComponent\n\n\n\n\n\nTsTooltipComponent\n\nTsTooltipComponent\n\nTsTooltipModule -->\n\nTsTooltipComponent->TsTooltipModule\n\n\n\n\n\nTsValidationMessagesComponent\n\nTsValidationMessagesComponent\n\nTsValidationMessagesModule -->\n\nTsValidationMessagesComponent->TsValidationMessagesModule\n\n\n\n\n\nTsValidationMessageService\n\nTsValidationMessageService\n\nTsValidationMessagesModule -->\n\nTsValidationMessageService->TsValidationMessagesModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            34 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        32 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        14 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        13 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        21 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MaskFunction   (terminus-ui/.../mask.directive.ts)\n                        \n                        \n                            MaskShortcutOptions   (terminus-ui/.../mask.directive.ts)\n                        \n                        \n                            TS_CUSTOM_ICON   (terminus-ui/.../icon.component.ts)\n                        \n                        \n                            TsAspectRatioTypes   (terminus-ui/.../card.component.ts)\n                        \n                        \n                            TsAutocompleteComparatorFn   (terminus-ui/.../autocomplete.component.ts)\n                        \n                        \n                            TsAutocompleteFormatterFn   (terminus-ui/.../autocomplete.component.ts)\n                        \n                        \n                            TsButtonActionTypes   (terminus-ui/.../button.component.ts)\n                        \n                        \n                            TsButtonFormatTypes   (terminus-ui/.../button.component.ts)\n                        \n                        \n                            TsButtonFunctionTypes   (terminus-ui/.../button.component.ts)\n                        \n                        \n                            TsCardBorderOptions   (terminus-ui/.../card.component.ts)\n                        \n                        \n                            TsChartVisualizationOptions   (terminus-ui/.../chart.component.ts)\n                        \n                        \n                            TsDateTypes   (terminus-ui/.../date.pipe.ts)\n                        \n                        \n                            TsFileAcceptedMimeTypes   (terminus-ui/.../mime-types.ts)\n                        \n                        \n                            TsFileImageDimensionConstraints   (terminus-ui/.../image-dimension-constraints.ts)\n                        \n                        \n                            TsInputAutocompleteTypes   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            TsInputTypes   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            TsMenuPositionTypesX   (terminus-ui/.../menu.component.ts)\n                        \n                        \n                            TsMenuPositionTypesY   (terminus-ui/.../menu.component.ts)\n                        \n                        \n                            TsMenuTriggerTypes   (terminus-ui/.../menu.component.ts)\n                        \n                        \n                            TsNavigationItem   (terminus-ui/.../navigation.component.ts)\n                        \n                        \n                            TsRadioFormatFn   (terminus-ui/.../radio-group.component.ts)\n                        \n                        \n                            TsScrollbarsScrollDirections   (terminus-ui/.../scrollbars.component.ts)\n                        \n                        \n                            TsSelectFormatFn   (terminus-ui/.../select.component.ts)\n                        \n                        \n                            TsSortDirection   (terminus-ui/.../sort.directive.ts)\n                        \n                        \n                            TsStyleThemeTypes   (terminus-ui/.../style-theme.types.ts)\n                        \n                        \n                            TsTooltipPositionTypes   (terminus-ui/.../tooltip.component.ts)\n                        \n                        \n                            TsVerticalSpacingTypes   (terminus-ui/.../vertical-spacing.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    terminus-ui/src/mask/mask.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        MaskFunction\n                    \n                \n                    \n                        \n                            A function that returns an array of RegExp (used to determine postal code RegExp)\n\n                        \n                    \n                \n                    \n                        MaskFunction:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        MaskShortcutOptions\n                    \n                \n                    \n                        \n                            Define the allowed mask shortcut option\n\n                        \n                    \n                \n                    \n                        MaskShortcutOptions:     \"phone\" | \"currency\" | \"number\" | \"percentage\" | \"postal\" | \"default\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/icon/icon.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TS_CUSTOM_ICON\n                    \n                \n                    \n                        \n                            Currently supported custom icons\n\n                        \n                    \n                \n                    \n                        TS_CUSTOM_ICON:     \n\n                    \n                \n            \n        \n\n    terminus-ui/src/card/card.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsAspectRatioTypes\n                    \n                \n                    \n                        \n                            Define the allowed aspect ratios. Used in TsCardComponent\n\n                        \n                    \n                \n                    \n                        TsAspectRatioTypes:     \"16:9\" | \"4:3\" | \"3:2\" | \"5:4\" | \"1:1\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsCardBorderOptions\n                    \n                \n                    \n                        \n                            Define allowed border sides. Used in TsCardComponent. Border color determined by the theme.\n\n                        \n                    \n                \n                    \n                        TsCardBorderOptions:     \"none\" | \"left\" | \"right\" | \"top\" | \"bottom\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/autocomplete/autocomplete.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsAutocompleteComparatorFn\n                    \n                \n                    \n                        \n                            Define a type for allowed TsAutocompleteComponent comparator function\n\n                        \n                    \n                \n                    \n                        TsAutocompleteComparatorFn:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsAutocompleteFormatterFn\n                    \n                \n                    \n                        \n                            Define a type for allowed TsAutocompleteComponent formatter function\n\n                        \n                    \n                \n                    \n                        TsAutocompleteFormatterFn:     function\n\n                    \n                \n            \n        \n\n    terminus-ui/src/button/button.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsButtonActionTypes\n                    \n                \n                    \n                        \n                            Define the allowed TsButtonComponent action types\n\n                        \n                    \n                \n                    \n                        TsButtonActionTypes:     \"Button\" | \"Submit\" | \"Menu\" | \"Reset\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsButtonFormatTypes\n                    \n                \n                    \n                        \n                            Define the allowed TsButtonComponent format types\n\n                        \n                    \n                \n                    \n                        TsButtonFormatTypes:     \"filled\" | \"hollow\" | \"collapsable\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsButtonFunctionTypes\n                    \n                \n                    \n                        \n                            Define the allowed TsButtonComponent action types\n\n                        \n                    \n                \n                    \n                        TsButtonFunctionTypes:     \"button\" | \"search\" | \"submit\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/chart/chart.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsChartVisualizationOptions\n                    \n                \n                    \n                        \n                            Define the supported chart visualizations\n\n                        \n                    \n                \n                    \n                        TsChartVisualizationOptions:     \"pie\" | \"xy\" | \"map\" | \"radar\" | \"treemap\" | \"sankey\" | \"chord\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/pipes/date/date.pipe.ts\n    \n        \n            \n                \n                    \n                        \n                        TsDateTypes\n                    \n                \n                    \n                        \n                            Define the allowed date formats for the TsDatePipe.\n\n                        \n                    \n                \n                    \n                        TsDateTypes:     \"short\" | \"medium\" | \"extended\" | \"timestamp\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/file-upload/mime-types.ts\n    \n        \n            \n                \n                    \n                        \n                        TsFileAcceptedMimeTypes\n                    \n                \n                    \n                        \n                            Define the allowed mime types for TsFileUploadComponent\n\n                        \n                    \n                \n                    \n                        TsFileAcceptedMimeTypes:     \"text/csv\" | \"image/jpeg\" | \"image/jpg\" | \"image/png\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/file-upload/image-dimension-constraints.ts\n    \n        \n            \n                \n                    \n                        \n                        TsFileImageDimensionConstraints\n                    \n                \n                    \n                        \n                            An array of file size constraints\n\n                        \n                    \n                \n                    \n                        TsFileImageDimensionConstraints:     TsFileImageDimensionContraint[]\n\n                    \n                \n            \n        \n\n    terminus-ui/src/input/input.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsInputAutocompleteTypes\n                    \n                \n                    \n                        \n                            Define the allowed autocomplete variations for TsInputComponent\nNOTE: This is not all valid types; only the ones this library supports.\n\n                        \n                    \n                \n                    \n                        TsInputAutocompleteTypes:     \"off\" | \"on\" | \"name\" | \"email\" | \"username\" | \"new-password\" | \"current-password\" | \"tel\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsInputTypes\n                    \n                \n                    \n                        \n                            Define the allowed TsInputComponent input types\n\n                        \n                    \n                \n                    \n                        TsInputTypes:     \"text\" | \"password\" | \"email\" | \"hidden\" | \"number\" | \"search\" | \"tel\" | \"url\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/menu/menu.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsMenuPositionTypesX\n                    \n                \n                    \n                        \n                            Define the allowed X positions for a menu\n\n                        \n                    \n                \n                    \n                        TsMenuPositionTypesX:     \"before\" | \"after\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsMenuPositionTypesY\n                    \n                \n                    \n                        \n                            Define the allowed Y positions for a menu\n\n                        \n                    \n                \n                    \n                        TsMenuPositionTypesY:     \"above\" | \"below\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsMenuTriggerTypes\n                    \n                \n                    \n                        \n                            Define the allowed trigger types for a menu\n\n                        \n                    \n                \n                    \n                        TsMenuTriggerTypes:     \"default\" | \"utility\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/navigation/navigation.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsNavigationItem\n                    \n                \n                    \n                        \n                            Define the allowed keys and types for an item passed to the TsNavigationComponent\n\n                        \n                    \n                \n                    \n                        TsNavigationItem:     TsNavigationLinkItem | TsNavigationActionItem\n\n                    \n                \n            \n        \n\n    terminus-ui/src/radio-group/radio-group.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsRadioFormatFn\n                    \n                \n                    \n                        \n                            Expose the formatter function type used by TsRadioGroupComponent\n\n                        \n                    \n                \n                    \n                        TsRadioFormatFn:     function\n\n                    \n                \n            \n        \n\n    terminus-ui/src/scrollbars/scrollbars.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsScrollbarsScrollDirections\n                    \n                \n                    \n                        \n                            Define possible scroll directions for TsScrollbarsScrollDirections.\n\n                        \n                    \n                \n                    \n                        TsScrollbarsScrollDirections:     \"any\" | \"both\" | \"x\" | \"y\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/select/select.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsSelectFormatFn\n                    \n                \n                    \n                        \n                            Expose the formatter function type\n\n                        \n                    \n                \n                    \n                        TsSelectFormatFn:     function\n\n                    \n                \n            \n        \n\n    terminus-ui/src/sort/sort.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        TsSortDirection\n                    \n                \n                    \n                        \n                            Define the allowed sort directions for {@link TsSort}\n\n                        \n                    \n                \n                    \n                        TsSortDirection:     \"asc\" | \"desc\" | \"\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/utilities/types/style-theme.types.ts\n    \n        \n            \n                \n                    \n                        \n                        TsStyleThemeTypes\n                    \n                \n                    \n                        \n                            Define the allowed theme types\n\n                        \n                    \n                \n                    \n                        TsStyleThemeTypes:     \"primary\" | \"accent\" | \"warn\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/tooltip/tooltip.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsTooltipPositionTypes\n                    \n                \n                    \n                        \n                            Define the accepted string values for the TsTooltipComponent position\n\n                        \n                    \n                \n                    \n                        TsTooltipPositionTypes:     \"left\" | \"right\" | \"above\" | \"below\" | \"before\" | \"after\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/spacing/vertical-spacing.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        TsVerticalSpacingTypes\n                    \n                \n                    \n                        \n                            Define the accepted string values for TsVerticalSpacingDirective\n\n                        \n                    \n                \n                    \n                        TsVerticalSpacingTypes:     \"small--2\" | \"small--1\" | \"small--0\" | \"none\" | \"default--0\" | \"large--0\" | \"large--1\" | \"large--2\" | \"large--3\" | \"large--4\" | \"large--5\" | \"large--6\"\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _TsSortHeaderMixinBase   (terminus-ui/.../sort-header.component.ts)\n                        \n                        \n                            _TsSortMixinBase   (terminus-ui/.../sort.directive.ts)\n                        \n                        \n                            allowedMaskShorcuts   (terminus-ui/.../mask.directive.ts)\n                        \n                        \n                            base   (terminus-ui/.../spacing.constant.ts)\n                        \n                        \n                            BYTES_PER_KB   (terminus-ui/.../selected-file.ts)\n                        \n                        \n                            creditCardMessage   (terminus-ui/.../validation-message.service.ts)\n                        \n                        \n                            CSV_ICON   (terminus-ui/.../csv.ts)\n                        \n                        \n                            CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR   (terminus-ui/.../checkbox.component.ts)\n                        \n                        \n                            CUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR   (terminus-ui/.../datepicker.component.ts)\n                        \n                        \n                            CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR   (terminus-ui/.../radio-group.component.ts)\n                        \n                        \n                            CUSTOM_SELECT_CONTROL_VALUE_ACCESSOR   (terminus-ui/.../select.component.ts)\n                        \n                        \n                            CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR   (terminus-ui/.../toggle.component.ts)\n                        \n                        \n                            emailMessage   (terminus-ui/.../validation-message.service.ts)\n                        \n                        \n                            MASKED_INPUT_VALUE_ACCESSOR   (terminus-ui/.../mask.directive.ts)\n                        \n                        \n                            MAXIMUM_KILOBYTES_PER_FILE   (terminus-ui/.../file-upload.component.ts)\n                        \n                        \n                            nextUniqueId   (terminus-ui/.../card.component.ts)\n                        \n                        \n                            nextUniqueId   (terminus-ui/.../file-upload.component.ts)\n                        \n                        \n                            nextUniqueId   (terminus-ui/.../scrollbars.component.ts)\n                        \n                        \n                            nextUniqueId   (terminus-ui/.../checkbox.component.ts)\n                        \n                        \n                            nextUniqueId   (terminus-ui/.../radio-group.component.ts)\n                        \n                        \n                            nextUniqueId   (terminus-ui/.../csv-entry.component.ts)\n                        \n                        \n                            NUMBER_ONLY_REGEX   (terminus-ui/.../mask.directive.ts)\n                        \n                        \n                            NUMBER_WITH_DECIMAL_REGEX   (terminus-ui/.../mask.directive.ts)\n                        \n                        \n                            passwordMessage   (terminus-ui/.../validation-message.service.ts)\n                        \n                        \n                            SORT_ANIMATION_TRANSITION   (terminus-ui/.../sort-animations.ts)\n                        \n                        \n                            TS_ACCEPTED_MIME_TYPES   (terminus-ui/.../mime-types.ts)\n                        \n                        \n                            TS_AMCHARTS_TOKEN   (terminus-ui/.../amcharts.service.ts)\n                        \n                        \n                            TS_CUSTOM_ICONS   (terminus-ui/.../icon.component.ts)\n                        \n                        \n                            TS_SORT_HEADER_INTL_PROVIDER   (terminus-ui/.../sort-header-intl.ts)\n                        \n                        \n                            TS_SPACING   (terminus-ui/.../spacing.constant.ts)\n                        \n                        \n                            tsButtonFormatTypesArray   (terminus-ui/.../button.component.ts)\n                        \n                        \n                            tsSortAnimations   (terminus-ui/.../sort-animations.ts)\n                        \n                        \n                            tsStyleThemeTypesArray   (terminus-ui/.../style-theme.types.ts)\n                        \n                        \n                            VERSION   (terminus-ui/.../version.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    terminus-ui/src/sort/sort-header.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _TsSortHeaderMixinBase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _TsSortHeaderMixinBase:     \n\n                    \n                \n                    \n                        \n                            Default value : mixinDisabled(TsSortHeaderBase)\n                        \n                    \n\n\n            \n        \n\n    terminus-ui/src/sort/sort.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _TsSortMixinBase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _TsSortMixinBase:     \n\n                    \n                \n                    \n                        \n                            Default value : mixinDisabled(TsSortBase)\n                        \n                    \n\n\n            \n        \n\n    terminus-ui/src/mask/mask.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            allowedMaskShorcuts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allowedMaskShorcuts:     MaskShortcutOptions[]\n\n                    \n                \n                    \n                        \n                            Type :     MaskShortcutOptions[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'phone',\n  'currency',\n  'number',\n  'percentage',\n  'postal',\n  'default',\n]\n                        \n                    \n\n                \n                    \n                        Create an array used to verify the passed in shortcut is valid\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MASKED_INPUT_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MASKED_INPUT_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsMaskDirective),\n  multi: true,\n}\n                        \n                    \n\n                \n                    \n                        Value accessor implementation to provide to the directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NUMBER_ONLY_REGEX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NUMBER_ONLY_REGEX:     RegExp\n\n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /[^0-9]/g\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NUMBER_WITH_DECIMAL_REGEX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NUMBER_WITH_DECIMAL_REGEX:     RegExp\n\n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /[^0-9.]/g\n                        \n                    \n\n\n            \n        \n\n    terminus-ui/src/spacing/spacing.constant.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            base\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        base:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 16\n                        \n                    \n\n                \n                    \n                        NOTE: The base value and the mathmatics behind these spacings must exactly reflect the spacings\ndefined in lib/src/scss/helpers/_spacing.scss\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TS_SPACING\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TS_SPACING:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  none: [\n    '0',\n  ],\n  small: [\n    Math.floor(base - 4) + 'px',\n    Math.floor(base / 2) + 'px',\n    Math.floor(base / 4) + 'px',\n  ],\n  default: [\n    base + 'px',\n  ],\n  large : [\n    Math.floor(base / 2 * 3)  + 'px',\n    Math.floor(base / 2 * 4)  + 'px',\n    Math.floor(base / 2 * 5)  + 'px',\n    Math.floor(base / 2 * 6)  + 'px',\n    Math.floor(base / 2 * 7)  + 'px',\n    Math.floor(base / 2 * 9)  + 'px',\n    Math.floor(base / 2 * 12) + 'px',\n  ],\n}\n                        \n                    \n\n                \n                    \n                        JS representation of the values in _spacing.scss\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/file-upload/selected-file.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BYTES_PER_KB\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        BYTES_PER_KB:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1024\n                        \n                    \n\n                \n                    \n                        The number of bytes per kilobyte (for calculations)\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/validation-messages/validation-message.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            creditCardMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creditCardMessage:     \n\n                    \n                \n                    \n                        \n                            Default value : `Invalid credit card number.`\n                        \n                    \n\n                \n                    \n                        Define the error message for an invalid credit card\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailMessage:     \n\n                    \n                \n                    \n                        \n                            Default value : `Invalid email address.`\n                        \n                    \n\n                \n                    \n                        Define the error message for an invalid email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordMessage:     \n\n                    \n                \n                    \n                        \n                            Default value : `Password must be between 6 and 100 characters, and contain a number.`\n                        \n                    \n\n                \n                    \n                        Define the error message for an invalid password\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/icon/custom-icons/csv.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CSV_ICON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CSV_ICON:     \n\n                    \n                \n                    \n                        \n                            Default value : `\n  \n    \n      \n      \n    \n  \n`\n                        \n                    \n\n\n            \n        \n\n    terminus-ui/src/checkbox/checkbox.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsCheckboxComponent),\n  multi: true,\n}\n                        \n                    \n\n                \n                    \n                        Custom control value accessor for our component\nThis allows our custom components to access the underlying form validation via the base class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextUniqueId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextUniqueId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n                \n                    \n                        Unique ID for each instance\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/datepicker/datepicker.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsDatepickerComponent),\n  multi: true,\n}\n                        \n                    \n\n                \n                    \n                        Custom control value accessor for our component.\nThis allows our custom components to access the underlying form validation via the base class\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/input/input.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsInputComponent),\n  multi: true,\n}\n                        \n                    \n\n                \n                    \n                        Custom control value accessor for our component.\nThis allows our custom components to access the underlying form validation via our base class\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/radio-group/radio-group.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsRadioGroupComponent),\n  multi: true,\n}\n                        \n                    \n\n                \n                    \n                        Custom control value accessor for our component\nThis allows our custom components to access the underlying form validation via the base class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextUniqueId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextUniqueId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n                \n                    \n                        Unique ID for each instance\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/select/select.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CUSTOM_SELECT_CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsSelectComponent),\n  multi: true,\n}\n                        \n                    \n\n                \n                    \n                        Custom control value accessor for our component\nThis allows our custom components to access the underlying form validation via our base class\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/toggle/toggle.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsToggleComponent),\n  multi: true,\n}\n                        \n                    \n\n                \n                    \n                        Custom control value accessor for our component\nThis allows our custom components to access the underlying form validation via our base class\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/file-upload/file-upload.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAXIMUM_KILOBYTES_PER_FILE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MAXIMUM_KILOBYTES_PER_FILE:     \n\n                    \n                \n                    \n                        \n                            Default value : 10 * 1024\n                        \n                    \n\n                \n                    \n                        The maximum file size in bytes\nNOTE: Currently nginx has a hard limit of 10mb\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextUniqueId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextUniqueId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n                \n                    \n                        Unique ID for each instance\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/card/card.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            nextUniqueId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextUniqueId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n                \n                    \n                        Unique ID for each instance\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/scrollbars/scrollbars.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            nextUniqueId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextUniqueId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n                \n                    \n                        Unique ID for each instance\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/csv-entry/csv-entry.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            nextUniqueId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextUniqueId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n                \n                    \n                        Unique ID for each instance\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/sort/sort-animations.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SORT_ANIMATION_TRANSITION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SORT_ANIMATION_TRANSITION:     \n\n                    \n                \n                    \n                        \n                            Default value : AnimationDurations.ENTERING + ' ' +\n                                  AnimationCurves.STANDARD_CURVE\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tsSortAnimations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tsSortAnimations:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\n  /**\n   * Animation that moves the sort indicator\n   */\n  indicator: trigger('indicator', [\n    state('asc', style({transform: 'translateY(0px)'})),\n    // 10px is the height of the sort indicator, minus the width of the pointers\n    state('desc', style({transform: 'translateY(10px)'})),\n    transition('asc  desc', animate(SORT_ANIMATION_TRANSITION)),\n  ]),\n\n\n  /**\n   * Animation that rotates the left pointer of the indicator based on the sorting direction\n   */\n  leftPointer: trigger('leftPointer', [\n    state('asc', style({transform: 'rotate(-45deg)'})),\n    state('desc', style({transform: 'rotate(45deg)'})),\n    transition('asc  desc', animate(SORT_ANIMATION_TRANSITION)),\n  ]),\n\n\n  /**\n   * Animation that rotates the right pointer of the indicator based on the sorting direction\n   */\n  rightPointer: trigger('rightPointer', [\n    state('asc', style({transform: 'rotate(45deg)'})),\n    state('desc', style({transform: 'rotate(-45deg)'})),\n    transition('asc  desc', animate(SORT_ANIMATION_TRANSITION)),\n  ]),\n\n\n  /**\n   * Animation that moves the indicator in and out of view when sorting is enabled/disabled\n   */\n  indicatorToggle: trigger('indicatorToggle', [\n    transition('void => asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n      style({transform: 'translateY(25%)', opacity: 0}),\n      style({transform: 'none', opacity: 1}),\n    ]))),\n    transition('asc => void', animate(SORT_ANIMATION_TRANSITION, keyframes([\n      style({transform: 'none', opacity: 1}),\n      style({transform: 'translateY(-25%)', opacity: 0}),\n    ]))),\n    transition('void => desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n      style({transform: 'translateY(-25%)', opacity: 0}),\n      style({transform: 'none', opacity: 1}),\n    ]))),\n    transition('desc => void', animate(SORT_ANIMATION_TRANSITION, keyframes([\n      style({transform: 'none', opacity: 1}),\n      style({transform: 'translateY(25%)', opacity: 0}),\n    ]))),\n  ]),\n\n}\n                        \n                    \n\n                \n                    \n                        Animations used by TsSort. \n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/file-upload/mime-types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TS_ACCEPTED_MIME_TYPES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TS_ACCEPTED_MIME_TYPES:     TsFileAcceptedMimeTypes[]\n\n                    \n                \n                    \n                        \n                            Type :     TsFileAcceptedMimeTypes[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'text/csv',\n  'image/jpeg',\n  'image/jpg',\n  'image/png',\n]\n                        \n                    \n\n                \n                    \n                        Define an array of all allowed mime types for TsFileUploadComponent\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/chart/amcharts.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TS_AMCHARTS_TOKEN\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TS_AMCHARTS_TOKEN:     InjectionToken\n\n                    \n                \n                    \n                        \n                            Type :     InjectionToken\n\n                        \n                    \n                    \n                        \n                            Default value : new InjectionToken('amCharts')\n                        \n                    \n\n                \n                    \n                        Create an injection token that the consumer can override with their version of Highcharts\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/icon/icon.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TS_CUSTOM_ICONS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TS_CUSTOM_ICONS:     TS_CUSTOM_ICON[]\n\n                    \n                \n                    \n                        \n                            Type :     TS_CUSTOM_ICON[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'csv',\n]\n                        \n                    \n\n                \n                    \n                        An array of supported custom icons.\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/sort/sort-header-intl.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TS_SORT_HEADER_INTL_PROVIDER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TS_SORT_HEADER_INTL_PROVIDER:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  // If there is already an TsSortHeaderIntl available, use that. Otherwise, provide a new one.\n  provide: TsSortHeaderIntl,\n  deps: [[new Optional(), new SkipSelf(), TsSortHeaderIntl]],\n  useFactory: TS_SORT_HEADER_INTL_PROVIDER_FACTORY,\n}\n                        \n                    \n\n                \n                    \n                        TsSortHeaderIntl provider declaration\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/button/button.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            tsButtonFormatTypesArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tsButtonFormatTypesArray:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['filled', 'hollow', 'collapsable']\n                        \n                    \n\n\n            \n        \n\n    terminus-ui/src/utilities/types/style-theme.types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            tsStyleThemeTypesArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tsStyleThemeTypesArray:     TsStyleThemeTypes[]\n\n                    \n                \n                    \n                        \n                            Type :     TsStyleThemeTypes[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['primary', 'accent', 'warn']\n                        \n                    \n\n                \n                    \n                        An array of the allowed TsStyleThemeTypes for checking values\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/utilities/version/version.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            VERSION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        VERSION:     \n\n                    \n                \n                    \n                        \n                            Default value : new Version('0.0.0-PLACEHOLDER')\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
