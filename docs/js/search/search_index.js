var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/injectables/HighchartsService.html",[0,1.412,1,3.434]],["body/injectables/HighchartsService.html",[0,2.874,1,6.158,2,0.087,3,0.063,4,0.04,5,0.05,6,6.908,7,0.842,8,3.419,9,4.557,10,3.25,11,0.964,12,1.162,13,1.346,14,1.686,15,6.908,16,0.839,17,6.908,18,1.934,19,0.008,20,0.804,21,0.797,22,1.216,23,3.431,24,6.908,25,0.111,26,5.609,27,0.291,28,2.147,29,4.66,30,2.395,31,4.079,32,4.079,33,0.088,34,1.374,35,1.488,36,6.908,37,0.04,38,6.908,39,0.007,40,0.007]],["title/interfaces/ImageRatio.html",[41,0.554,42,3.232]],["body/interfaces/ImageRatio.html",[2,0.025,3,0.018,4,0.055,5,0.011,8,1.366,11,0.761,12,0.464,13,1.41,14,0.403,16,0.744,19,0.008,20,0.379,21,0.707,25,0.131,27,0.082,28,1.012,33,0.035,34,1.674,35,1.557,37,0.028,39,0.003,40,0.003,41,0.511,42,3.88,43,0.632,44,1.198,45,1.581,46,1.947,47,5.452,48,5.452,49,1.938,50,7.511,51,0.523,52,0.502,53,1.209,54,1.181,55,5.891,56,3.873,57,5.256,58,4.328,59,4.875,60,4.747,61,3.015,62,1.299,63,4.445,64,1.738,65,5.088,66,2.829,67,3.306,68,2.021,69,1.268,70,2.004,71,2.696,72,1.947,73,1.947,74,1.568,75,1.947,76,1.522,77,0.556,78,1.947,79,1.139,80,3.254,81,2.156,82,0.675,83,1.947,84,1.329,85,1.947,86,1.947,87,3.254,88,1.947,89,3.254,90,1.947,91,1.472,92,3.254,93,1.947,94,2.84,95,1.307,96,1.574,97,4.732,98,1.947,99,1.726,100,1.726,101,1.832,102,1.947,103,1.947,104,1.67,105,1.763,106,2.434,107,2.894,108,0.597,109,1.668,110,3.254,111,2.785,112,2.643,113,1.581,114,2.643,115,2.169,116,2.403,117,1.291,118,0.877,119,0.69,120,1.149,121,1.472,122,3.79,123,4.107,124,4.753,125,2.54,126,1.922,127,1.313,128,1.947,129,3.306,130,1.454,131,1.826,132,1.077,133,3.706,134,4.194,135,1.238,136,1.947,137,1.726,138,2.196,139,1.947,140,1.947,141,4.195,142,1.947,143,4.901,144,1.581,145,1.947,146,1.947,147,1.947,148,2.643,149,1.238,150,0.938,151,2.122,152,1.523,153,3.254,154,1.945,155,1.386,156,1.947,157,3.254,158,0.97,159,1.366,160,1.947,161,1.947,162,1.947,163,1.14,164,1.313,165,0.998,166,0.69,167,1.947,168,3.254,169,1.947,170,3.254,171,0.998,172,1.947,173,1.527,174,1.034,175,2.461,176,1.127,177,1.947,178,1.947,179,2.002,180,1.351,181,1.947,182,1.82,183,0.911,184,1.716,185,2.879,186,1.947,187,1.674,188,5.452,189,1.947,190,1.258,191,1.726,192,3.015,193,1.313,194,1.947,195,1.806,196,3.254,197,1.947,198,1.067,199,0.66,200,1.581,201,0.758,202,1.947,203,1.472,204,1.164,205,1.947,206,1.947,207,3.254,208,0.545,209,1.716,210,1.738,211,2.109,212,1.581,213,2.002,214,2.361,215,1.481,216,1.332,217,1.432,218,2.092,219,0.817,220,0.473,221,0.797,222,1.724,223,3.171,224,1.849,225,3.474,226,0.556,227,1.581,228,2.316,229,1.067,230,1.947,231,1.082,232,0.646,233,1.472,234,0.777,235,1.252,236,0.723,237,2.988,238,1.726,239,0.967,240,1.252,241,1.313,242,1.472,243,1.947,244,3.254,245,3.254,246,4.345,247,1.947,248,0.97,249,0.903,250,2.316,251,1.761,252,0.839,253,0.839,254,2.316,255,2.708,256,1.726,257,1.079,258,1.149,259,1.487,260,1.149,261,1.581,262,1.079,263,1.947,264,1.947,265,1.947,266,3.254,267,1.067,268,1.581,269,0.911,270,0.473,271,1.849,272,1.422,273,0.69,274,0.999,275,1.154,276,0.967,277,0.99,278,1.106,279,0.794,280,0.76,281,2.643,282,0.511,283,0.839,284,1.209,285,1.106,286,1.106,287,1.97,288,0.523,289,0.95,290,1.128,291,1.46,292,0.938,293,0.862,294,1.209,295,5.452,296,1.581,297,2.196,298,1.947,299,4.023,300,0.938,301,0.556,302,0.322,303,0.769,304,0.534,305,1.947,306,0.513,307,1.947,308,0.387,309,3.254,310,1.947,311,0.545,312,0.545,313,0.473,314,0.473,315,0.464,316,1.947,317,0.445,318,0.483,319,2.149,320,1.106,321,1.149,322,0.998,323,1.581,324,1.947,325,2.172,326,1.581,327,0.777,328,1.472,329,1.581,330,1.581,331,0.74,332,1.789,333,1.947,334,4.427,335,1.106,336,0.66,337,1.947,338,1.947,339,2.221,340,1.947,341,0.534,342,1.947,343,4.901,344,3.254,345,2.643,346,3.254,347,0.605,348,1.947,349,1.947,350,0.998,351,3.254,352,1.947,353,1.947,354,1.947,355,1.947,356,4.901,357,1.947,358,1.947,359,1.947,360,1.947,361,1.947,362,1.947,363,5.452,364,2.119,365,2.119,366,4.194,367,1.947,368,1.252,369,0.817,370,0.502,371,1.947,372,0.839,373,1.947,374,3.254,375,3.254,376,3.254,377,3.254,378,1.947,379,1.313,380,3.254,381,1.947,382,3.254,383,1.947,384,1.947,385,1.947,386,4.194,387,3.254,388,1.947,389,1.724,390,1.616,391,1.947,392,1.947,393,1.947,394,1.106,395,1.947,396,3.254,397,2.886,398,1.947,399,1.149,400,1.067,401,1.472,402,1.947,403,1.947,404,1.031,405,1.947,406,3.254,407,1.849,408,1.947,409,1.947,410,1.106,411,1.849,412,1.106,413,1.106,414,1.947,415,3.254,416,1.947,417,1.947,418,1.947,419,0.967,420,1.726,421,1.472,422,0.998,423,1.947,424,1.947,425,0.911,426,1.947,427,1.947,428,1.726,429,4.194,430,1.947,431,1.581,432,1.947,433,1.947,434,1.947,435,3.254,436,1.947,437,1.947,438,3.254,439,1.313,440,1.947,441,1.031,442,1.581,443,1.947,444,3.254,445,3.254,446,4.194,447,4.194,448,3.254,449,3.254,450,4.345,451,2.298,452,3.254,453,3.254,454,3.254,455,3.254,456,1.947,457,1.947,458,0.839,459,1.947,460,1.947,461,3.254,462,1.947,463,1.947,464,1.209,465,1.106,466,0.296,467,1.849,468,2.886,469,2.196,470,3.254,471,1.947,472,1.947,473,1.947,474,4.901,475,4.901,476,1.947,477,1.947,478,1.947,479,1.947,480,1.947,481,1.947,482,3.254,483,1.726,484,1.947,485,3.254,486,1.472,487,1.947,488,1.252,489,3.254,490,1.947,491,1.067,492,0.886,493,0.911,494,1.106,495,2.073,496,1.386,497,2.153,498,1.947,499,1.198,500,1.523,501,0.797,502,1.947,503,2.643,504,1.947,505,1.149,506,5.452,507,1.947,508,1.436,509,1.198,510,1.947,511,1.947,512,3.254,513,3.254,514,1.947,515,1.947,516,0.675,517,1.386,518,2.643,519,1.947,520,1.724,521,1.106,522,0.886,523,1.947,524,1.947,525,1.252,526,1.947,527,1.386,528,1.726,529,1.947,530,1.198,531,1.067,532,1.947,533,1.947,534,1.947,535,1.947,536,1.947,537,1.947,538,1.947,539,1.947,540,1.947,541,1.472,542,1.947,543,1.947,544,1.947,545,1.947,546,1.947,547,1.947,548,3.254,549,1.947,550,1.947,551,3.254,552,1.947,553,1.198,554,1.067,555,1.947,556,1.947,557,0.706,558,1.947,559,1.947,560,1.472,561,1.947,562,1.947,563,1.149,564,1.947,565,1.947,566,1.947,567,1.947,568,1.106,569,1.947,570,4.194,571,1.947,572,2.461,573,1.947,574,1.947,575,1.947,576,1.947,577,1.947,578,0.862,579,0.998,580,0.605,581,1.472,582,2.512,583,1.472,584,1.947,585,1.472,586,1.947,587,1.947,588,3.254,589,3.254,590,1.947,591,1.947,592,1.947,593,1.947,594,1.947,595,3.254,596,1.947,597,1.947]],["title/interfaces/KeyboardEvent.html",[41,0.554,527,3.232]],["body/interfaces/KeyboardEvent.html",[2,0.037,3,0.027,4,0.017,5,0.026,11,0.771,13,1.434,14,0.607,16,0.873,19,0.008,20,0.526,21,0.724,22,1.568,25,0.123,27,0.123,28,1.406,30,1.016,33,0.077,34,1.099,35,1.529,37,0.036,39,0.006,40,0.005,41,0.758,43,0.951,49,1.624,51,0.788,52,0.756,53,2.052,54,1.642,62,2.68,63,4.7,65,4.991,66,3.219,69,1.142,70,1.624,76,2.005,77,0.838,79,1.243,84,0.813,95,1.271,96,1.608,101,0.911,104,1.44,105,1.67,108,0.83,109,2.832,115,2.446,116,2.044,117,2.109,118,0.826,126,1.731,130,1.016,131,1.813,132,0.644,135,2.905,138,1.977,154,2.087,158,1.852,163,1.276,164,1.977,165,2.832,166,1.039,171,2.832,173,0.821,174,0.931,176,0.788,180,2.077,182,2.052,184,1.852,185,1.199,190,1.209,192,2.18,195,1.421,199,0.994,203,2.216,204,1.028,208,0.821,209,2.261,210,1.605,211,2.288,215,2.058,217,1.724,219,1.23,220,0.712,221,2.261,223,2.216,225,4.316,226,0.838,229,2.48,231,1.168,232,0.972,233,2.216,235,1.884,236,1.088,237,2.48,239,2.247,240,1.884,249,1.191,251,1.899,252,1.263,253,1.263,255,1.456,259,1.605,262,0.972,272,1.534,274,1.761,275,1.96,276,1.456,279,0.896,282,0.674,287,2.195,288,0.788,290,1.569,291,1.29,294,1.088,299,4.317,301,0.838,302,0.485,303,0.83,304,0.804,306,0.772,308,0.583,311,0.821,312,0.821,313,0.712,314,0.712,315,0.698,317,0.67,318,0.726,325,1.604,332,1.562,341,1.241,364,2.3,365,2.3,368,1.884,370,0.756,390,1.456,394,1.665,419,3.335,421,2.216,422,1.502,425,2.117,439,3.052,441,3.556,451,2.48,458,2.381,464,1.68,466,0.945,495,1.115,497,1.348,500,1.372,505,3.263,508,2.012,522,1.333,527,3.22,563,3.263,568,1.665,572,2.216,578,2.972,579,2.319,580,2.087,598,2.216,599,2.931,600,6.19,601,5.594,602,2.909,603,1.534,604,3.822,605,2.086,606,2.086,607,2.086,608,4.541,609,4.192,610,4.422,611,2.086,612,2.38,613,6.204,614,1.016,615,2.38,616,1.884,617,2.204,618,2.671,619,3.674,620,2.819,621,3.674,622,3.674,623,4.487,624,2.38,625,3.674,626,4.487,627,3.674,628,3.674,629,3.674,630,1.077,631,3.029,632,3.674,633,3.674,634,4.699,635,5.367,636,3.674,637,3.052,638,2.38,639,1.731,640,2.446,641,0.911,642,3.674,643,1.665,644,3.674,645,2.38,646,2.38,647,4.487,648,4.699,649,2.38,650,2.086,651,1.377,652,1.884,653,2.38,654,4.487,655,2.086,656,5.594,657,2.38,658,2.38,659,2.783,660,2.38,661,1.142,662,2.38,663,2.319,664,5.045,665,3.674,666,5.045,667,2.216,668,2.086,669,3.674,670,2.832,671,1.142,672,2.38,673,2.086,674,1.606,675,2.18,676,3.422,677,2.783,678,2.002,679,2.832,680,2.38,681,2.38,682,2.38,683,2.38,684,2.38,685,2.38,686,2.38,687,2.38,688,2.38,689,2.38,690,2.38,691,2.38,692,2.38,693,2.38,694,2.38,695,3.674,696,2.38,697,2.38,698,2.38,699,3.674,700,2.38,701,2.38,702,2.38,703,2.38,704,3.674,705,2.38,706,1.569,707,0.718,708,2.38,709,2.38,710,3.674,711,2.38,712,1.762,713,0.838,714,2.38,715,2.086,716,4.487,717,3.674,718,1.803,719,1.803,720,2.086,721,2.38,722,1.039,723,2.38,724,3.674,725,2.38,726,2.38,727,2.38,728,2.38,729,4.487,730,2.38,731,1.665,732,1.731,733,2.38,734,3.674,735,2.38,736,3.674,737,5.453,738,2.38,739,1.884,740,2.38,741,4.487,742,2.38,743,3.674,744,3.674,745,2.38,746,2.38,747,1.372,748,2.38,749,2.216,750,0.9,751,1.456,752,1.552,753,2.216,754,2.38,755,2.216,756,1.731,757,1.977,758,1.502,759,2.086,760,2.38,761,2.38,762,2.216,763,2.38,764,2.38,765,2.216,766,2.38,767,2.38,768,1.884,769,1.665,770,1.731,771,2.38,772,2.38,773,2.38,774,2.38,775,2.216,776,1.606,777,2.38,778,2.216,779,2.38,780,2.38,781,2.38,782,2.38,783,2.38,784,2.38,785,3.674,786,2.38,787,1.884,788,2.38]],["title/interfaces/Mask.html",[41,0.554,789,3.064]],["body/interfaces/Mask.html",[2,0.055,3,0.04,4,0.025,5,0.025,7,0.533,11,0.61,12,0.866,13,1.229,16,0.775,19,0.008,20,0.706,21,0.838,22,1.227,25,0.121,27,0.184,28,2.459,33,0.089,34,1.573,37,0.025,39,0.005,40,0.006,41,0.85,43,1.419,49,1.595,51,1.175,52,1.129,53,2.254,54,2.202,64,1.551,66,1.516,68,2.107,74,2.107,77,1.25,79,1.213,81,1.735,84,1.253,95,1.333,96,1.562,104,0.887,108,1.381,116,1.847,117,1.598,130,2.611,132,0.961,163,1.321,173,1.952,174,1.928,176,2.126,180,1.084,182,2.938,184,1.79,190,1.128,192,2.925,193,4.095,195,1.595,198,2.397,199,2.058,204,1.246,210,1.551,214,2.925,218,2.811,221,2.484,222,3.214,224,3.449,226,1.25,249,0.942,262,1.45,273,1.551,274,1.66,277,1.331,278,2.485,279,1.327,280,1.416,282,0.85,283,1.884,285,2.485,286,2.485,302,0.724,308,0.87,315,1.041,318,1.504,321,4.116,325,1.566,332,1.836,334,3.551,341,1.912,364,1.887,365,1.887,372,1.884,497,2.244,554,3.326,557,2.529,580,1.359,604,2.69,631,2.397,641,1.359,651,1.331,678,2.686,707,1.195,732,4.116,789,6.427,790,3.551,791,3.014,792,6.676,793,7.22,794,6.114,795,1.793,796,6.676,797,6.181,798,2.485,799,2.548,800,5.272,801,3.877,802,3.877,803,5.381,804,5.66,805,6.181,806,5.272,807,6.647,808,3.877,809,3.551,810,2.69,811,2.69,812,3.877,813,2.811,814,3.877,815,6.181,816,3.877,817,3.902,818,5.381,819,3.877,820,4.32,821,3.877,822,3.877,823,3.877,824,3.877,825,3.877,826,3.877,827,3.877,828,3.877,829,4.482,830,6.181,831,3.551,832,4.928,833,6.114,834,4.32,835,3.877,836,4.59,837,2.254,838,3.877,839,2.582,840,4.32,841,5.381,842,3.877,843,3.877,844,3.877,845,3.877,846,3.877,847,3.877,848,1.041,849,3.877,850,3.877,851,3.877,852,3.877,853,3.877,854,6.181,855,3.112,856,3.877,857,3.112,858,3.877,859,3.877,860,6.676,861,3.112,862,3.877,863,3.877,864,3.877,865,3.877,866,3.877,867,5.66,868,5.66,869,3.877,870,3.877,871,3.877,872,3.877,873,3.877]],["title/interfaces/MaskCollection.html",[41,0.554,831,3.687]],["body/interfaces/MaskCollection.html",[2,0.056,3,0.041,4,0.026,5,0.036,7,0.543,11,0.621,13,1.237,16,0.82,19,0.008,20,0.715,21,0.805,22,0.784,25,0.122,27,0.187,28,2.475,33,0.089,34,1.583,37,0.026,39,0.005,40,0.006,41,0.858,43,1.444,49,1.61,51,1.196,52,1.149,53,2.282,54,2.23,64,1.579,66,1.543,68,2.961,74,2.145,77,1.272,79,1.2,81,1.756,84,1.265,95,1.339,96,1.568,104,0.903,108,1.392,116,1.87,117,1.618,130,2.631,132,0.978,163,1.324,173,1.97,174,1.951,176,2.14,180,1.103,182,2.957,184,1.822,190,1.136,192,2.961,193,4.145,195,1.61,198,2.44,199,2.083,204,1.256,210,1.579,214,2.961,218,2.862,221,2.515,222,3.254,224,3.492,226,1.272,249,0.959,262,1.476,273,1.579,274,1.675,277,1.355,278,2.529,279,1.334,280,1.434,282,0.858,283,1.918,285,2.529,286,2.529,302,0.737,308,0.885,315,1.06,318,1.523,321,4.155,332,1.843,334,3.614,341,1.93,364,1.91,365,1.91,372,1.918,497,2.261,554,3.368,557,2.553,580,1.91,604,2.738,631,2.44,641,1.384,651,1.355,678,1.97,707,1.204,732,4.155,789,6.409,790,3.614,791,2.211,792,3.947,793,6.85,794,4.989,795,1.807,796,6.727,797,6.239,798,2.529,799,2.579,800,5.321,801,3.947,802,3.947,803,5.448,804,5.714,805,6.239,806,5.321,807,6.684,808,3.947,809,3.614,810,2.738,811,2.738,812,3.947,813,2.862,814,3.947,815,6.239,816,3.947,817,3.95,818,5.448,819,3.947,820,4.373,821,3.947,822,3.947,823,3.947,824,3.947,825,3.947,826,3.947,827,3.947,828,3.947,829,4.524,830,6.239,831,4.989,832,4.989,833,6.161,834,4.373,835,3.947,836,4.647,837,2.282,838,3.947,839,2.628,840,4.373,841,5.448,842,3.947,843,3.947,844,3.947,845,3.947,846,3.947,847,3.947,848,1.06,849,3.947,850,3.947,851,3.947,852,3.947,853,3.947,854,6.239,855,3.168,856,3.947,857,3.168,858,3.947,859,3.947,860,6.727,861,3.168,862,3.947,863,3.947,864,3.947,865,3.947,866,3.947,867,5.714,868,5.714,869,3.947,870,3.947,871,3.947,872,3.947,873,3.947,874,4.451]],["title/interfaces/MouseEvent.html",[41,0.554,674,2.489]],["body/interfaces/MouseEvent.html",[2,0.037,3,0.027,4,0.017,5,0.026,11,0.771,13,1.434,14,0.607,16,0.873,19,0.008,20,0.526,21,0.724,22,1.568,25,0.123,27,0.123,28,1.406,30,1.016,33,0.077,34,1.099,35,1.529,37,0.036,39,0.006,40,0.005,41,0.758,43,0.951,49,1.624,51,0.788,52,0.756,53,2.052,54,1.642,62,2.68,63,4.7,65,4.991,66,3.219,69,1.142,70,1.624,76,2.005,77,0.838,79,1.243,84,0.813,95,1.271,96,1.608,101,0.911,104,1.44,105,1.67,108,0.83,109,2.832,115,2.446,116,2.044,117,2.109,118,0.826,126,1.731,130,1.016,131,1.813,132,0.644,135,2.905,138,1.977,154,2.087,158,1.852,163,1.276,164,1.977,165,2.832,166,1.039,171,2.832,173,0.821,174,0.931,176,0.788,180,2.077,182,2.052,184,1.852,185,1.199,190,1.209,192,2.18,195,1.421,199,0.994,203,2.216,204,1.028,208,0.821,209,2.261,210,1.605,211,2.288,215,2.058,217,1.724,219,1.23,220,0.712,221,2.261,223,2.216,225,4.316,226,0.838,229,2.48,231,1.168,232,0.972,233,2.216,235,1.884,236,1.088,237,2.48,239,2.247,240,1.884,249,1.191,251,1.899,252,1.263,253,1.263,255,1.456,259,1.605,262,0.972,272,1.534,274,1.761,275,1.96,276,1.456,279,0.896,282,0.674,287,2.195,288,0.788,290,1.569,291,1.29,294,1.088,299,4.317,301,0.838,302,0.485,303,0.83,304,0.804,306,0.772,308,0.583,311,0.821,312,0.821,313,0.712,314,0.712,315,0.698,317,0.67,318,0.726,325,1.604,332,1.562,341,1.241,364,2.3,365,2.3,368,1.884,370,0.756,390,1.456,394,1.665,419,3.335,421,2.216,422,1.502,425,2.117,439,3.052,441,3.556,451,2.48,458,2.381,464,1.68,466,0.945,495,1.115,497,1.348,500,1.372,505,3.263,508,2.012,522,1.333,527,2.086,563,3.263,568,1.665,572,2.216,578,2.972,579,2.319,580,2.087,598,2.216,600,6.19,601,5.594,602,2.909,603,1.534,604,3.822,605,2.086,606,2.086,607,2.086,608,4.541,609,4.192,610,4.422,611,2.086,612,2.38,613,6.204,614,1.016,615,2.38,616,1.884,617,2.204,618,2.671,619,3.674,620,2.819,621,3.674,622,3.674,623,4.487,624,2.38,625,3.674,626,4.487,627,3.674,628,3.674,629,3.674,630,1.077,631,3.029,632,3.674,633,3.674,634,4.699,635,5.367,636,3.674,637,3.052,638,2.38,639,1.731,640,2.446,641,0.911,642,3.674,643,1.665,644,3.674,645,2.38,646,2.38,647,4.487,648,4.699,649,2.38,650,2.086,651,1.377,652,1.884,653,2.38,654,4.487,655,2.086,656,5.594,657,2.38,658,2.38,659,2.783,660,2.38,661,1.142,662,2.38,663,2.319,664,5.045,665,3.674,666,5.045,667,2.216,668,2.086,669,3.674,670,2.832,671,1.142,672,2.38,673,2.086,674,2.48,675,2.18,676,3.422,677,2.783,678,2.002,679,2.832,680,2.38,681,2.38,682,2.38,683,2.38,684,2.38,685,2.38,686,2.38,687,2.38,688,2.38,689,2.38,690,2.38,691,2.38,692,2.38,693,2.38,694,2.38,695,3.674,696,2.38,697,2.38,698,2.38,699,3.674,700,2.38,701,2.38,702,2.38,703,2.38,704,3.674,705,2.38,706,1.569,707,0.718,708,2.38,709,2.38,710,3.674,711,2.38,712,1.762,713,0.838,714,2.38,715,2.086,716,4.487,717,3.674,718,1.803,719,1.803,720,2.086,721,2.38,722,1.039,723,2.38,724,3.674,725,2.38,726,2.38,727,2.38,728,2.38,729,4.487,730,2.38,731,1.665,732,1.731,733,2.38,734,3.674,735,2.38,736,3.674,737,5.453,738,2.38,739,1.884,740,2.38,741,4.487,742,2.38,743,3.674,744,3.674,745,2.38,746,2.38,747,1.372,748,2.38,749,2.216,750,0.9,751,1.456,752,1.552,753,2.216,754,2.38,755,2.216,756,1.731,757,1.977,758,1.502,759,2.086,760,2.38,761,2.38,762,2.216,763,2.38,764,2.38,765,2.216,766,2.38,767,2.38,768,1.884,769,1.665,770,1.731,771,2.38,772,2.38,773,2.38,774,2.38,775,2.216,776,1.606,777,2.38,778,2.216,779,2.38,780,2.38,781,2.38,782,2.38,783,2.38,784,2.38,785,3.674,786,2.38,787,1.884,788,2.38,875,2.931]],["title/interfaces/NavigationItemBase.html",[41,0.554,876,2.919]],["body/interfaces/NavigationItemBase.html",[0,1.083,2,0.044,3,0.032,4,0.02,5,0.02,7,0.425,10,1.391,11,0.486,12,0.736,13,1.35,14,0.721,16,0.885,19,0.008,20,0.913,21,0.788,22,1.195,25,0.099,27,0.147,28,1.083,33,0.085,34,1.727,35,1.323,37,0.036,39,0.004,40,0.004,41,0.957,49,1.552,66,1.208,68,1.679,70,1.404,76,3.447,77,1.755,79,1.232,81,1.939,84,1.526,94,2.485,95,0.818,96,1.219,105,0.936,109,2.643,116,2.615,117,1.907,118,0.789,119,1.236,125,2.222,131,1.791,132,0.766,135,1.325,149,2.334,151,2.081,154,1.603,158,1.038,159,1.463,163,0.876,165,2.643,171,1.786,173,0.975,180,1.278,182,1.294,184,1.426,187,1.391,190,1.226,195,1.735,199,1.181,204,0.577,208,0.975,209,2.512,210,2.177,211,1.791,213,2.143,216,2.11,217,1.253,219,1.463,220,0.846,231,0.899,232,1.156,239,1.73,249,1.736,255,1.73,267,1.909,270,1.253,274,1.724,277,1.569,279,1.1,287,2.197,288,0.936,289,2.213,291,1.583,294,1.294,301,0.996,302,0.577,303,0.946,304,0.956,306,0.917,308,0.693,311,0.975,312,0.975,313,0.846,314,0.846,315,0.83,317,1.18,318,0.864,322,2.643,327,2.45,331,1.325,332,1.657,341,1.414,364,1.603,365,1.603,369,1.463,370,1.751,372,1.501,399,4.858,400,2.826,466,1.308,467,3.488,495,2.334,497,1.537,500,2.873,501,1.426,508,1.358,516,1.788,530,2.143,531,1.909,557,1.871,579,1.786,580,2.251,603,1.181,608,1.786,618,2.057,639,2.057,640,1.542,641,2.109,661,1.357,663,2.643,670,3.712,671,1.357,674,1.909,679,4.021,706,2.511,712,2.391,713,1.474,731,1.98,747,1.63,750,1.221,758,1.786,795,1.462,848,1.228,876,4.362,877,2.24,878,2.602,879,4.886,880,2.924,881,4.577,882,5.436,883,4.063,884,3.479,885,3.172,886,2.143,887,2.35,888,3.315,889,2.35,890,3.479,891,3.172,892,4.656,893,3.356,894,3.315,895,2.24,896,2.35,897,3.172,898,2.35,899,5.382,900,2.35,901,3.315,902,1.426,903,3.479,904,2.143,905,1.845,906,2.35,907,2.35,908,2.35,909,2.35,910,2.057,911,2.35,912,3.146,913,4.156,914,2.35,915,3.479,916,2.35,917,2.143,918,3.479,919,4.006,920,2.35,921,2.35,922,4.141,923,3.479,924,2.35,925,2.35,926,2.35,927,2.35,928,2.35,929,2.35,930,2.35,931,3.479,932,2.35,933,2.35,934,2.35,935,3.479,936,3.479,937,4.577,938,0.996,939,3.315,940,2.35,941,2.35,942,2.35,943,2.35,944,2.35,945,2.35,946,2.35,947,2.35,948,1.73,949,1.73,950,2.35,951,3.479,952,2.35,953,2.35,954,2.35,955,3.315,956,2.35,957,2.24,958,2.35,959,3.479,960,1.63,961,2.35,962,1.786,963,2.35,964,1.98,965,2.35,966,2.35,967,2.35,968,3.315,969,2.35,970,2.35,971,3.172,972,2.35,973,2.35,974,1.98,975,2.35,976,3.479,977,3.479,978,3.479,979,3.479,980,3.045,981,2.35,982,3.479,983,4.577,984,2.35,985,2.35,986,3.479,987,3.776,988,2.35,989,2.35,990,1.357,991,1.673,992,1.786,993,2.35,994,2.35,995,2.35,996,2.35,997,1.542,998,2.35,999,2.24,1000,2.35,1001,2.35]],["title/modules/TerminusUIModule.html",[1002,0.62,1003,3.434]],["body/modules/TerminusUIModule.html",[0,2,2,0.048,3,0.035,4,0.032,5,0.022,19,0.008,25,0.153,27,0.159,33,0.081,37,0.022,39,0.004,40,0.004,45,3.07,82,1.311,101,1.175,104,0.767,118,0.821,158,2.102,257,2.589,258,2.232,259,1.341,260,2.232,280,1.502,282,0.785,331,2.447,370,1.413,508,1.695,603,2.182,614,1.311,630,0.9,750,0.752,1002,1.022,1003,7.384,1004,1.016,1005,0.588,1006,1.081,1007,3.352,1008,3.352,1009,3.352,1010,3.352,1011,3.352,1012,6.217,1013,5.893,1014,4.626,1015,6.217,1016,6.217,1017,6.217,1018,5.893,1019,6.217,1020,6.217,1021,6.217,1022,5.893,1023,6.217,1024,5.616,1025,3.974,1026,5.373,1027,5.893,1028,6.217,1029,6.217,1030,6.217,1031,5.893,1032,6.217,1033,5.893,1034,6.217,1035,6.217,1036,6.217,1037,5.893,1038,5.893,1039,5.893,1040,6.217,1041,6.217,1042,5.157,1043,4.787,1044,4.801,1045,1.597,1046,3.78,1047,2.691,1048,1.597,1049,3.78,1050,3.352,1051,2.072,1052,3.78,1053,3.78,1054,3.352,1055,3.78,1056,3.78,1057,2.859,1058,3.78,1059,0.996,1060,3.07,1061,3.78,1062,3.352,1063,3.07,1064,1.282,1065,2.691,1066,3.07,1067,1.937,1068,2.859,1069,3.352,1070,2.859,1071,3.78,1072,2.859,1073,3.78,1074,3.78,1075,3.352,1076,3.78,1077,3.352,1078,4.58,1079,3.78,1080,1.372,1081,2.691,1082,3.78,1083,3.78,1084,3.78,1085,3.352,1086,3.352,1087,3.352,1088,3.78,1089,3.78,1090,2.691,1091,2.148,1092,2.43,1093,6.435,1094,3.799,1095,3.298,1096,6.435,1097,2.691]],["title/injectables/TsAmChartsService.html",[0,1.412,1098,3.064]],["body/injectables/TsAmChartsService.html",[0,2.846,2,0.083,3,0.061,4,0.038,5,0.049,7,0.807,8,3.333,9,3.19,10,3.169,11,0.924,12,1.133,13,1.322,14,1.644,16,0.818,18,1.854,19,0.008,20,0.77,21,0.777,22,1.166,23,3.288,25,0.106,26,6.447,27,0.279,28,2.058,29,4.467,30,2.296,31,3.909,32,3.909,33,0.092,34,1.579,35,1.426,37,0.038,39,0.006,40,0.006,41,0.807,69,3.093,81,1.892,364,2.058,365,2.058,464,3.159,1098,5.357,1099,5.871,1100,7.06,1101,6.621,1102,6.925,1103,6.621,1104,6.621,1105,4.712,1106,3.012,1107,2.93,1108,5.007,1109,5.871,1110,5.871,1111,7.04,1112,5.871,1113,5.871]],["title/interfaces/TsAmChartsToken.html",[41,0.554,1102,3.434]],["body/interfaces/TsAmChartsToken.html",[0,2.75,2,0.084,3,0.061,4,0.039,5,0.039,8,2.807,9,3.221,10,2.668,11,0.933,12,1.139,13,1.039,14,1.384,19,0.008,21,0.866,22,1.558,25,0.107,26,6.485,27,0.281,28,2.078,29,4.51,30,2.318,31,3.947,32,3.947,33,0.093,34,1.588,35,1.44,37,0.039,39,0.007,40,0.007,41,0.974,69,2.604,81,1.911,364,2.078,365,2.078,464,3.408,1098,4.51,1099,5.927,1100,6.458,1102,6.458,1105,6.297,1106,4.025,1107,3.916,1108,5.056,1109,5.927,1110,5.927,1111,7.081,1112,5.927,1113,5.927]],["title/modules/TsAutocompleteModule.html",[1002,0.62,1012,3.232]],["body/modules/TsAutocompleteModule.html",[2,0.081,3,0.059,4,0.037,5,0.037,19,0.008,25,0.153,27,0.269,33,0.097,37,0.037,39,0.006,40,0.006,104,1.298,226,1.828,280,1.956,282,0.78,617,3.362,630,1.523,667,4.837,677,3.935,750,1.272,1002,1.062,1004,1.719,1005,0.994,1006,1.828,1012,6.771,1025,4.132,1026,5.587,1043,4.978,1045,2.269,1048,2.269,1067,3.278,1068,4.837,1091,3.635,1092,4.112,1114,5.671,1115,5.671,1116,6.396,1117,5.671,1118,6.396,1119,2.367,1120,1.906,1121,4.419,1122,5.246,1123,7.776,1124,7.776,1125,6.396,1126,5.881,1127,4.837,1128,6.895,1129,5.194,1130,7.776]],["title/classes/TsAutocompleteSelectedEvent.html",[37,0.026,676,3.434]],["body/classes/TsAutocompleteSelectedEvent.html",[2,0.037,3,0.027,4,0.017,5,0.017,11,0.632,13,1.435,14,0.608,16,0.863,19,0.008,20,0.527,21,0.724,22,1.568,25,0.123,27,0.124,28,1.408,30,1.018,33,0.077,34,1.1,35,1.53,37,0.039,39,0.006,40,0.005,41,0.675,43,0.953,49,1.625,51,0.789,52,0.758,53,2.055,54,1.644,62,2.683,63,4.702,65,4.994,66,3.219,69,1.144,70,1.625,76,2.008,77,0.839,79,1.237,84,0.814,95,1.272,96,1.608,101,0.913,104,1.441,105,1.672,108,0.831,109,2.835,115,2.449,116,2.045,117,2.11,118,0.826,126,1.734,130,1.018,131,1.815,132,0.645,135,2.907,138,1.981,154,2.089,158,1.853,163,1.277,164,1.981,165,2.835,166,1.041,171,2.835,173,0.822,174,0.933,176,0.789,180,2.078,182,2.055,184,1.854,185,1.202,190,1.209,192,2.183,195,1.423,199,0.996,203,2.221,204,1.029,208,0.822,209,2.264,210,1.607,211,2.289,215,2.061,217,1.725,219,1.233,220,0.713,221,2.264,223,2.221,225,4.318,226,0.839,229,2.483,231,1.169,232,0.974,233,2.221,235,1.888,236,1.091,237,2.483,239,2.25,240,1.888,249,1.192,251,1.902,252,1.265,253,1.265,255,1.458,259,1.607,262,0.974,272,1.536,274,1.763,275,1.962,276,1.458,279,0.897,282,0.675,287,2.196,288,0.789,290,1.571,291,1.291,294,1.091,299,4.321,301,0.839,302,0.486,303,0.831,304,0.805,306,0.773,308,0.584,311,0.822,312,0.822,313,0.713,314,0.713,315,0.699,317,1.037,318,0.728,325,1.605,332,1.563,341,1.243,364,2.301,365,2.301,368,1.888,370,0.758,390,1.458,394,1.669,419,3.338,421,2.221,422,1.505,425,2.12,439,3.057,441,3.559,451,2.483,458,2.384,464,1.683,466,0.946,495,1.117,497,1.35,500,1.374,505,3.267,508,2.013,522,1.336,527,2.09,563,3.267,568,1.669,572,2.221,578,2.975,579,2.322,580,1.933,598,2.221,600,6.192,601,5.598,602,2.913,603,1.536,604,3.826,605,2.09,606,2.09,607,2.09,608,4.542,609,4.196,610,4.427,611,2.09,612,2.384,613,6.207,614,1.018,615,2.384,616,1.888,617,2.206,618,2.675,619,3.679,620,2.822,621,3.679,622,3.679,623,4.492,624,2.384,625,3.679,626,4.492,627,3.679,628,3.679,629,3.679,630,1.079,631,3.032,632,3.679,633,3.679,634,4.704,635,5.371,636,3.679,637,3.057,638,2.384,639,1.734,640,2.449,641,0.913,642,3.679,643,1.669,644,3.679,645,2.384,646,2.384,647,4.492,648,4.704,649,2.384,650,2.09,651,1.379,652,1.888,653,2.384,654,4.492,655,2.09,656,5.598,657,2.384,658,2.384,659,2.787,660,2.384,661,1.144,662,2.384,663,2.322,664,5.051,665,4.492,666,5.051,667,2.221,668,2.09,669,3.679,670,2.835,671,1.144,672,2.384,673,2.09,674,1.609,675,2.183,676,4.184,677,2.787,678,2.005,679,2.835,680,2.384,681,2.384,682,2.384,683,2.384,684,2.384,685,2.384,686,2.384,687,2.384,688,2.384,689,2.384,690,2.384,691,2.384,692,2.384,693,2.384,694,2.384,695,3.679,696,2.384,697,2.384,698,2.384,699,3.679,700,2.384,701,2.384,702,2.384,703,2.384,704,3.679,705,2.384,706,1.571,707,0.719,708,2.384,709,2.384,710,3.679,711,2.384,712,1.765,713,0.839,714,2.384,715,2.09,716,4.492,717,3.679,718,1.806,719,1.806,720,2.09,721,2.384,722,1.041,723,2.384,724,3.679,725,2.384,726,2.384,727,2.384,728,2.384,729,4.492,730,2.384,731,1.669,732,1.734,733,2.384,734,3.679,735,2.384,736,3.679,737,5.457,738,2.384,739,1.888,740,2.384,741,4.492,742,2.384,743,3.679,744,3.679,745,2.384,746,2.384,747,1.374,748,2.384,749,2.221,750,0.901,751,1.458,752,1.555,753,2.221,754,2.384,755,2.221,756,1.734,757,1.981,758,1.505,759,2.09,760,2.384,761,2.384,762,2.221,763,2.384,764,2.384,765,2.221,766,2.384,767,2.384,768,1.888,769,1.669,770,1.734,771,2.384,772,2.384,773,2.384,774,2.384,775,2.221,776,1.609,777,2.384,778,2.221,779,2.384,780,2.384,781,2.384,782,2.384,783,2.384,784,2.384,785,3.679,786,2.384,787,1.888,788,2.384]],["title/directives/TsAutofocusDirective.html",[707,0.721,1131,1.687]],["body/directives/TsAutofocusDirective.html",[2,0.072,3,0.052,4,0.033,5,0.051,7,0.694,11,0.795,12,1.032,13,1.3,14,1.497,16,0.943,18,2.025,19,0.008,20,0.842,21,0.818,22,1.274,25,0.116,27,0.24,33,0.062,34,1.132,37,0.033,39,0.006,40,0.006,43,1.848,51,1.53,52,1.469,53,2.687,54,2.625,64,2.82,66,1.974,79,1.01,84,1.429,95,0.904,96,1.611,101,2.249,117,2.094,132,1.59,149,2.751,151,1.931,163,1.259,182,2.687,187,2.273,190,1.032,195,1.819,204,1.197,209,3.669,210,3.13,221,2.96,231,1.469,234,2.273,236,2.115,249,1.974,273,2.019,279,1.173,292,3.486,302,1.197,318,1.793,325,1.469,332,1.824,364,1.77,365,1.77,370,1.469,407,3.236,425,2.665,466,0.866,500,2.665,641,2.684,663,4.075,707,1.401,758,4.287,848,1.356,861,4.052,905,3.015,949,3.593,1094,3.362,1131,2.687,1132,5.694,1133,7.417,1134,6.674,1135,7.234,1136,1.499,1137,8.825,1138,8.825,1139,2.657,1140,4.052,1141,5.694,1142,7.234,1143,5.694,1144,6.326,1145,5.694,1146,5.694,1147,3.965,1148,3.362,1149,5.048,1150,2.665,1151,3.661,1152,5.694,1153,5.694,1154,7.234,1155,5.694,1156,7.234,1157,5.694]],["title/modules/TsAutofocusModule.html",[1002,0.62,1013,3.064]],["body/modules/TsAutofocusModule.html",[2,0.087,3,0.064,4,0.04,5,0.04,19,0.008,25,0.144,27,0.292,33,0.099,37,0.04,39,0.007,40,0.007,280,2.025,282,0.846,630,1.652,750,1.38,1002,1.115,1004,1.865,1005,1.078,1006,1.983,1013,6.303,1045,2.383,1048,2.383,1119,2.485,1120,2.068,1131,3.556,1158,6.152,1159,6.152,1160,6.152,1161,6.938,1162,8.164]],["title/modules/TsButtonModule.html",[1002,0.62,1014,2.405]],["body/modules/TsButtonModule.html",[2,0.084,3,0.061,4,0.039,5,0.039,19,0.008,25,0.151,27,0.28,33,0.098,37,0.039,39,0.007,40,0.007,231,1.718,232,2.208,280,1.989,282,0.971,630,1.585,677,4.095,750,1.324,1002,1.088,1004,1.789,1005,1.035,1006,1.903,1014,4.98,1025,4.171,1045,2.325,1048,2.325,1067,3.411,1119,2.424,1120,1.984,1128,7.063,1129,5.405,1163,5.902,1164,5.902,1165,6.656,1166,5.902,1167,3.379,1168,6.656,1169,6.024,1170,5.034,1171,6.024,1172,7.063]],["title/modules/TsCSVEntryModule.html",[1002,0.62,1015,3.232]],["body/modules/TsCSVEntryModule.html",[2,0.081,3,0.059,4,0.037,5,0.037,19,0.008,25,0.152,27,0.27,33,0.097,37,0.037,39,0.006,40,0.006,82,2.701,226,1.834,280,1.958,282,0.782,327,2.561,630,1.528,750,1.276,1002,1.064,1004,1.724,1005,0.997,1006,1.834,1014,4.814,1015,6.81,1024,5.844,1025,4.135,1042,5.367,1045,2.274,1048,2.274,1051,3.517,1057,4.852,1064,2.176,1065,4.566,1066,5.21,1067,3.288,1090,4.566,1119,2.371,1120,1.912,1122,5.256,1173,5.689,1174,5.689,1175,6.416,1176,5.689,1177,3.523,1178,5.21,1179,6.416,1180,4.6,1181,3.517,1182,7.791]],["title/interfaces/TsCSVEntryRecord.html",[41,0.554,1183,3.687]],["body/interfaces/TsCSVEntryRecord.html",[2,0.056,3,0.026,4,0.031,5,0.017,7,0.348,8,2.283,11,1.11,12,0.633,13,1.44,14,0.592,16,0.78,19,0.008,20,0.713,21,0.532,25,0.113,27,0.12,33,0.059,34,1.635,35,1.172,37,0.031,39,0.004,40,0.004,41,0.663,43,0.927,49,2.085,51,1.888,52,2.122,53,2.02,54,1.61,61,2.138,69,2.119,70,1.244,74,1.377,77,0.817,79,1.244,81,2.008,82,3.002,95,1.323,96,1.429,104,1.71,105,2.309,106,1.419,107,1.688,108,1.288,111,3.484,113,2.321,115,2.938,116,2.231,117,0.753,118,0.772,119,1.014,120,3.211,124,2.853,130,0.991,131,1.295,132,0.975,151,0.969,154,1.691,158,0.852,163,0.947,171,4.15,174,1.409,176,1.193,179,1.758,182,1.061,185,2.875,187,2.447,190,1.287,195,1.819,198,1.566,208,0.8,209,2.226,211,1.587,215,2.019,216,1.816,217,1.078,220,0.694,225,1.514,226,0.817,228,3.158,229,2.432,231,1.145,232,0.948,234,1.141,235,1.838,236,1.061,240,1.838,241,1.928,242,2.161,248,0.852,259,2.759,262,2.033,269,1.338,270,1.489,271,2.522,272,1.505,274,1.853,277,0.87,279,0.463,287,2.179,288,0.768,289,0.834,290,1.538,291,1.431,292,2.138,293,1.265,294,1.648,301,0.817,302,0.473,303,0.998,304,0.784,306,0.753,308,0.568,311,0.8,312,0.8,313,0.694,314,0.694,315,0.681,318,1.1,319,2.274,320,1.624,325,1.892,326,2.321,327,1.141,328,2.161,329,2.321,330,2.321,331,1.087,332,1.71,336,0.969,339,2.35,345,2.321,350,1.465,364,1.379,365,1.379,370,1.713,389,1.514,401,2.161,410,1.624,411,2.522,412,1.624,413,1.624,422,2.274,439,3.669,451,1.566,486,2.161,491,1.566,492,1.3,493,1.338,494,1.624,495,2.068,497,2.319,500,1.338,501,1.17,508,0.753,522,1.3,525,1.838,563,1.688,568,1.624,578,2.938,580,1.691,603,1.505,611,2.034,637,1.928,641,1.379,651,1.866,668,2.034,678,1.964,679,1.465,706,0.991,718,1.758,757,1.928,787,1.838,810,4.083,848,2.062,883,1.964,992,3.142,1057,2.161,1139,0.908,1177,1.061,1178,2.321,1183,4.978,1184,2.534,1185,4.609,1186,2.97,1187,5.885,1188,6.766,1189,5.436,1190,2.102,1191,1.377,1192,5.436,1193,2.534,1194,3.603,1195,4.416,1196,2.534,1197,2.161,1198,2.447,1199,3.356,1200,2.534,1201,2.534,1202,1.514,1203,1.928,1204,3.902,1205,1.838,1206,2.034,1207,6.499,1208,3.497,1209,3.211,1210,5.436,1211,2.321,1212,5.02,1213,2.534,1214,2.321,1215,4.978,1216,2.534,1217,2.534,1218,2.534,1219,2.534,1220,1.758,1221,2.534,1222,2.534,1223,2.534,1224,1.465,1225,2.534,1226,2.534,1227,1.758,1228,2.534,1229,1.624,1230,5.436,1231,3.603,1232,2.534,1233,2.534,1234,2.534,1235,2.534,1236,2.534,1237,3.934,1238,3.934,1239,2.534,1240,2.534,1241,2.534,1242,3.934,1243,3.934,1244,4.822,1245,2.534,1246,2.534,1247,3.934,1248,3.934,1249,6.229,1250,2.534,1251,2.534,1252,3.934,1253,2.534,1254,3.934,1255,3.934,1256,1.838,1257,2.534,1258,2.534,1259,3.934,1260,2.534,1261,2.534,1262,2.534,1263,2.534,1264,2.534,1265,5.885,1266,2.534,1267,2.534,1268,2.534,1269,2.161,1270,2.534,1271,2.534,1272,2.534,1273,3.934,1274,4.822,1275,3.934,1276,4.822,1277,2.534,1278,2.534,1279,2.534,1280,2.534,1281,2.534,1282,2.534,1283,2.321,1284,2.534,1285,3.934,1286,3.934,1287,2.534,1288,3.934,1289,2.534,1290,2.534,1291,2.534,1292,2.534,1293,2.534,1294,2.534,1295,5.436,1296,3.934,1297,2.321,1298,2.534,1299,1.3,1300,2.534,1301,2.534,1302,2.534,1303,2.534,1304,1.838,1305,3.158,1306,2.534,1307,2.534,1308,2.534,1309,2.534,1310,2.534,1311,2.534,1312,2.534,1313,2.534,1314,2.534,1315,2.534,1316,2.534,1317,2.534,1318,2.534,1319,2.534,1320,2.321,1321,2.534,1322,4.822,1323,2.321,1324,3.934,1325,2.534,1326,2.534,1327,2.534,1328,2.534,1329,2.534,1330,5.436,1331,4.822,1332,2.534,1333,2.534,1334,3.934,1335,2.534,1336,2.534,1337,2.534,1338,2.534,1339,2.534,1340,2.534,1341,2.534,1342,2.534,1343,2.534,1344,2.534,1345,2.534,1346,2.534,1347,2.321,1348,2.534,1349,2.321]],["title/interfaces/TsCSVFormContents.html",[41,0.554,1211,3.687]],["body/interfaces/TsCSVFormContents.html",[2,0.056,3,0.026,4,0.032,5,0.017,7,0.349,8,2.287,11,1.111,12,0.634,13,1.44,14,0.593,16,0.781,19,0.008,20,0.714,21,0.533,25,0.113,27,0.121,33,0.059,34,1.636,35,1.174,37,0.032,39,0.004,40,0.004,41,0.664,43,0.93,49,2.072,51,1.89,52,2.123,53,2.023,54,1.613,61,2.142,69,2.122,70,1.246,74,1.38,77,0.819,79,1.245,81,2.01,82,3.003,95,1.323,96,1.43,104,1.711,105,2.31,106,1.423,107,1.691,108,1.29,111,3.488,113,2.326,115,2.941,116,2.233,117,0.754,118,0.773,119,1.016,120,3.216,124,2.858,130,0.993,131,1.297,132,0.977,151,0.971,154,1.693,158,0.854,163,0.948,171,4.153,174,1.412,176,1.195,179,1.762,182,1.064,185,2.878,187,2.45,190,1.288,195,1.82,198,1.57,208,0.802,209,2.229,211,1.59,215,2.022,216,1.819,217,1.08,220,0.696,225,1.517,226,0.819,228,3.164,229,2.436,231,1.147,232,0.95,234,1.143,235,1.842,236,1.064,240,1.842,241,1.933,242,2.166,248,0.854,259,2.822,262,2.036,269,1.341,270,1.491,271,2.526,272,1.507,274,1.854,277,0.872,279,0.464,287,2.18,288,0.77,289,0.836,290,1.541,291,1.433,292,2.142,293,1.268,294,1.651,301,0.819,302,0.474,303,0.999,304,0.786,306,0.754,308,0.57,311,0.802,312,0.802,313,0.696,314,0.696,315,0.682,318,1.102,319,2.278,320,1.628,325,1.893,326,2.326,327,1.143,328,2.166,329,2.326,330,2.326,331,1.089,332,1.711,336,0.971,339,2.354,345,2.326,350,1.468,364,1.382,365,1.382,370,1.715,389,1.517,401,2.166,410,1.628,411,2.526,412,1.628,413,1.628,422,2.278,439,3.675,451,1.57,486,2.166,491,1.57,492,1.303,493,1.341,494,1.628,495,2.071,497,2.32,500,1.341,501,1.172,508,0.754,522,1.303,525,1.842,563,1.691,568,1.628,578,2.941,580,1.693,603,1.507,611,2.039,637,1.933,641,1.382,651,1.868,668,2.039,678,1.268,679,1.468,706,0.993,718,1.762,757,1.933,787,1.842,810,4.087,848,2.028,883,1.967,992,3.146,1057,2.166,1139,0.91,1177,1.064,1178,2.326,1183,5.396,1184,2.54,1185,4.601,1186,2.928,1187,3.941,1188,6.77,1189,5.443,1190,2.133,1191,1.38,1192,5.443,1193,2.54,1194,3.609,1195,4.423,1196,2.54,1197,2.166,1198,2.45,1199,3.362,1200,2.54,1201,2.54,1202,1.517,1203,1.933,1204,3.904,1205,1.842,1206,2.039,1207,6.505,1208,3.502,1209,3.216,1210,5.443,1211,3.609,1212,5.734,1213,2.54,1214,2.326,1215,4.984,1216,2.54,1217,2.54,1218,2.54,1219,2.54,1220,1.762,1221,2.54,1222,2.54,1223,2.54,1224,1.468,1225,2.54,1226,2.54,1227,1.762,1228,2.54,1229,1.628,1230,5.443,1231,3.609,1232,2.54,1233,2.54,1234,2.54,1235,2.54,1236,2.54,1237,3.941,1238,3.941,1239,2.54,1240,2.54,1241,2.54,1242,3.941,1243,3.941,1244,4.829,1245,2.54,1246,2.54,1247,3.941,1248,3.941,1249,6.234,1250,2.54,1251,2.54,1252,3.941,1253,2.54,1254,3.941,1255,3.941,1256,1.842,1257,2.54,1258,2.54,1259,3.941,1260,2.54,1261,2.54,1262,2.54,1263,2.54,1264,2.54,1265,5.892,1266,2.54,1267,2.54,1268,2.54,1269,2.166,1270,2.54,1271,2.54,1272,2.54,1273,3.941,1274,4.829,1275,3.941,1276,4.829,1277,2.54,1278,2.54,1279,2.54,1280,2.54,1281,2.54,1282,2.54,1283,2.326,1284,2.54,1285,3.941,1286,3.941,1287,2.54,1288,3.941,1289,2.54,1290,2.54,1291,2.54,1292,2.54,1293,2.54,1294,2.54,1295,5.443,1296,3.941,1297,2.326,1298,2.54,1299,1.303,1300,2.54,1301,2.54,1302,2.54,1303,2.54,1304,1.842,1305,3.164,1306,2.54,1307,2.54,1308,2.54,1309,2.54,1310,2.54,1311,2.54,1312,2.54,1313,2.54,1314,2.54,1315,2.54,1316,2.54,1317,2.54,1318,2.54,1319,2.54,1320,2.326,1321,2.54,1322,4.829,1323,2.326,1324,3.941,1325,2.54,1326,2.54,1327,2.54,1328,2.54,1329,2.54,1330,5.443,1331,4.829,1332,2.54,1333,2.54,1334,3.941,1335,2.54,1336,2.54,1337,2.54,1338,2.54,1339,2.54,1340,2.54,1341,2.54,1342,2.54,1343,2.54,1344,2.54,1345,2.54,1346,2.54,1347,2.326,1348,2.54,1349,2.326]],["title/components/TsCardComponent.html",[118,0.528,1350,1.648]],["body/components/TsCardComponent.html",[2,0.04,3,0.029,4,0.028,5,0.053,7,0.586,8,2.019,11,0.443,12,0.686,13,1.338,14,1.202,16,0.977,18,1.814,19,0.008,20,0.885,21,0.842,22,1.14,25,0.077,27,0.134,33,0.063,34,1.155,37,0.044,39,0.004,40,0.004,43,1.03,49,1.328,51,0.853,52,2.145,53,1.786,54,1.745,59,5.751,69,1.873,74,1.53,79,1.19,81,0.907,82,1.101,84,1.408,95,1.163,96,1.561,101,0.987,104,0.644,105,0.853,108,1.5,117,1.706,118,0.992,126,3.825,132,1.276,133,2.401,149,1.207,150,2.317,163,1.272,173,1.347,176,1.56,180,1.192,183,3.257,185,3.401,190,1.216,195,1.482,199,1.076,204,1.297,208,0.889,210,1.126,220,0.771,248,1.433,249,1.578,251,3.075,252,1.368,253,1.368,255,2.389,257,1.053,262,1.595,267,2.636,269,1.486,270,0.771,271,3.299,272,1.631,273,1.126,274,1.657,279,0.78,282,0.387,284,1.179,287,2.051,288,1.293,289,1.89,290,2.246,301,1.375,302,1.576,303,1.731,304,1.319,306,1.267,308,0.956,311,1.347,312,1.347,313,1.168,314,1.168,315,1.145,319,3.753,320,3.681,325,1.241,332,1.547,335,1.804,336,1.076,339,2.547,347,1.495,368,2.041,370,1.241,389,1.681,410,1.804,411,2.733,412,3.299,413,3.681,428,2.815,464,2.91,465,2.733,466,1.059,491,1.74,492,1.444,493,1.486,494,1.804,497,0.946,531,3.815,541,4.898,614,1.101,617,1.126,651,0.966,706,1.101,707,1.028,756,2.84,795,1.91,798,1.804,799,1.333,806,4.391,837,1.179,878,1.053,905,4.15,912,2.465,971,1.953,1005,0.493,1059,0.836,1064,2.196,1080,1.152,1131,1.179,1136,0.836,1148,2.84,1150,1.486,1167,1.126,1177,1.179,1190,1.145,1198,1.92,1299,2.947,1350,2.658,1351,1.299,1352,2.815,1353,3.457,1354,2.465,1355,6.382,1356,6.96,1357,4.809,1358,4.809,1359,4.809,1360,6.477,1361,6.477,1362,6.477,1363,6.477,1364,7.634,1365,6.477,1366,5.806,1367,6.477,1368,5.806,1369,3.175,1370,5.806,1371,7.47,1372,4.809,1373,7.114,1374,4.809,1375,6.494,1376,3.245,1377,3.175,1378,3.175,1379,4.264,1380,3.175,1381,4.809,1382,3.299,1383,4.809,1384,2.318,1385,3.175,1386,4.809,1387,4.709,1388,4.715,1389,3.175,1390,3.175,1391,3.175,1392,3.175,1393,3.175,1394,3.175,1395,3.175,1396,3.175,1397,3.175,1398,3.175,1399,2.815,1400,3.175,1401,2.815,1402,3.175,1403,3.175,1404,3.175,1405,4.809,1406,3.175,1407,3.175,1408,1.804,1409,2.578,1410,2.259,1411,3.175,1412,3.175,1413,2.815,1414,5.743,1415,4.264,1416,4.264,1417,4.264,1418,4.264,1419,4.264,1420,2.815,1421,2.401,1422,3.175,1423,2.389,1424,2.317,1425,3.175,1426,2.578,1427,1.405,1428,2.142,1429,2.259,1430,1.953,1431,3.175,1432,3.175,1433,2.389,1434,3.175,1435,3.175,1436,3.175,1437,3.175,1438,4.809,1439,3.175,1440,4.809,1441,5.806,1442,4.809,1443,1.267,1444,2.651,1445,1.299,1446,1.299,1447,1.968,1448,1.299,1449,1.299,1450,1.207,1451,1.299,1452,1.207,1453,1.299,1454,1.152,1455,1.299,1456,1.179,1457,1.179,1458,1.299,1459,1.207,1460,1.299,1461,1.179,1462,1.299,1463,1.179,1464,1.299,1465,1.299,1466,1.152,1467,1.968,1468,1.207,1469,1.207,1470,1.299,1471,1.152,1472,1.299,1473,1.179,1474,1.299,1475,1.179,1476,1.299,1477,1.179,1478,1.299,1479,1.179,1480,1.299,1481,1.299,1482,1.179,1483,1.299,1484,1.152,1485,1.299,1486,1.237,1487,1.299,1488,1.152,1489,1.179,1490,1.299,1491,1.179,1492,1.299,1493,1.237,1494,1.299,1495,1.076,1496,0.853,1497,1.299,1498,1.008,1499,1.299,1500,1.179,1501,1.299,1502,1.179,1503,1.299,1504,1.207,1505,1.299,1506,1.179,1507,1.299,1508,1.076,1509,1.299,1510,1.076,1511,1.968,1512,1.126,1513,1.299,1514,1.152,1515,1.299,1516,1.076,1517,1.299,1518,1.179,1519,1.299,1520,1.076,1521,1.299,1522,1.076,1523,1.152,1524,1.299,1525,1.179,1526,1.299,1527,1.299,1528,1.152,1529,1.299,1530,1.008,1531,1.299,1532,1.152,1533,1.267,1534,1.299]],["title/modules/TsCardModule.html",[1002,0.62,1016,3.232]],["body/modules/TsCardModule.html",[2,0.083,3,0.06,4,0.038,5,0.038,19,0.008,25,0.15,27,0.277,33,0.099,37,0.038,39,0.006,40,0.006,280,1.981,282,0.804,630,1.57,750,1.311,1002,1.081,1004,1.772,1005,1.025,1006,1.884,1016,6.773,1025,4.161,1045,2.311,1048,2.311,1067,3.379,1119,2.41,1120,1.965,1350,3.453,1355,5.343,1506,3.534,1535,5.846,1536,5.846,1537,6.593,1538,5.846,1539,6.593,1540,5.989,1541,3.613,1542,7.022,1543,7.92]],["title/directives/TsCardTitleDirective.html",[707,0.721,1506,1.687]],["body/directives/TsCardTitleDirective.html",[2,0.076,3,0.055,4,0.035,5,0.052,11,0.842,12,1.07,14,1.552,16,0.905,18,1.688,19,0.008,20,0.702,21,0.734,22,1.437,25,0.12,27,0.254,33,0.066,37,0.052,39,0.006,40,0.006,95,1.19,108,1.106,118,0.95,163,0.86,182,2.785,184,3.069,190,1.07,193,5.06,195,1.716,212,6.628,214,3.933,221,3.069,302,1.241,308,1.491,318,1.859,332,1.724,364,1.875,365,1.875,368,4.822,425,2.822,466,1.141,508,1.975,707,1.457,834,6.373,1136,1.588,1139,2.382,1299,3.412,1350,3.415,1355,5.06,1420,7.572,1506,2.785,1542,5.347,1544,8.954,1545,6.03,1546,8.54,1547,8.54,1548,5.491,1549,6.03,1550,7.5,1551,6.772,1552,3.149,1553,5.403,1554,7.5,1555,6.03,1556,5.507,1557,6.03,1558,6.03,1559,6.65,1560,6.03,1561,7.5,1562,6.03,1563,5.347,1564,6.03]],["title/directives/TsCellDefDirective.html",[707,0.721,1508,1.54]],["body/directives/TsCellDefDirective.html",[2,0.068,3,0.049,4,0.031,5,0.031,7,0.656,12,1.168,13,1.203,14,1.113,16,0.843,19,0.008,20,0.811,25,0.112,27,0.226,33,0.092,34,1.07,37,0.054,39,0.006,40,0.006,51,1.446,52,1.388,77,1.537,79,0.973,84,0.967,95,1.3,96,1.525,117,1.416,123,3.057,125,3.005,183,2.517,204,0.89,210,3.138,269,2.517,270,1.307,272,1.824,282,1.079,283,3.335,291,1.628,294,1.998,302,1.439,303,1.502,308,1.387,317,1.989,325,1.388,347,2.637,370,1.8,458,2.318,466,1.178,516,2.683,651,1.637,707,1.405,791,4.067,938,1.993,1136,1.416,1185,3.464,1186,3.033,1190,2.02,1198,2.147,1204,4.539,1256,3.458,1354,3.967,1384,2.147,1408,4.398,1424,3.361,1498,2.601,1508,2.624,1510,1.824,1516,2.624,1520,2.365,1522,1.824,1565,3.828,1566,4.398,1567,5.037,1568,5.222,1569,4.964,1570,4.964,1571,5.508,1572,5.689,1573,4.964,1574,5.508,1575,2.671,1576,3.828,1577,4.835,1578,3.828,1579,4.964,1580,5.508,1581,4.964,1582,3.828,1583,4.964,1584,3.822,1585,4.964,1586,3.458,1587,3.828,1588,3.828,1589,3.629,1590,4.964,1591,3.828,1592,4.705,1593,3.828,1594,4.57,1595,2.045,1596,3.828,1597,2.147,1598,3.828]],["title/directives/TsCellDirective.html",[707,0.721,1510,1.54]],["body/directives/TsCellDirective.html",[2,0.066,3,0.048,4,0.03,5,0.044,7,0.642,11,0.735,12,1.202,13,1.31,14,1.424,16,0.89,18,1.474,19,0.008,20,0.891,21,0.673,22,0.927,25,0.11,27,0.222,33,0.092,34,1.047,37,0.054,39,0.006,40,0.006,51,1.415,52,1.359,77,1.505,79,0.96,84,0.946,95,1.289,96,1.514,117,1.386,123,2.992,125,2.964,183,2.464,204,0.871,210,3.255,269,2.464,270,1.279,272,1.785,282,1.054,283,3.301,291,1.788,294,1.955,302,1.431,303,1.546,308,1.368,317,1.977,325,1.359,347,2.62,370,1.977,458,2.269,466,1.166,516,2.385,651,1.602,707,1.398,791,3.804,938,1.505,1136,1.386,1185,2.615,1186,3.022,1190,2.007,1198,2.102,1204,4.512,1256,3.385,1354,4.733,1384,2.102,1408,4.353,1424,3.691,1498,2.433,1508,2.332,1510,2.332,1516,2.597,1520,2.332,1522,1.785,1565,3.747,1566,3.908,1567,4.712,1568,4.64,1569,3.747,1570,4.895,1571,5.452,1572,5.805,1573,4.895,1574,5.452,1575,2.615,1576,3.747,1577,4.976,1578,4.895,1579,4.895,1580,5.452,1581,4.895,1582,3.747,1583,5.452,1584,3.77,1585,4.895,1586,3.385,1587,3.747,1588,3.747,1589,3.552,1590,4.895,1591,3.747,1592,4.64,1593,3.747,1594,4.523,1595,2.002,1596,3.747,1597,2.102,1598,3.747,1599,5.265,1600,5.265]],["title/components/TsChart2Component.html",[118,0.528,1450,1.727]],["body/components/TsChart2Component.html",[0,2.192,2,0.041,3,0.03,4,0.028,5,0.051,7,0.6,9,1.576,11,0.456,12,0.702,13,1.357,14,1.018,16,0.917,18,1.841,19,0.008,20,0.894,21,0.9,22,1.158,23,1.624,25,0.13,27,0.138,28,1.529,29,2.206,33,0.064,34,0.65,35,0.704,37,0.038,39,0.004,40,0.004,43,1.061,51,0.879,52,0.844,53,1.826,54,1.784,69,1.274,70,1.352,71,2.102,82,1.134,95,1.176,96,1.182,101,1.016,104,0.663,105,0.879,108,0.6,117,0.861,118,0.959,132,1.445,154,1.529,158,1.465,163,1.006,173,1.655,176,2.125,180,1.465,182,1.826,184,2.013,190,1.154,195,1.915,208,0.915,210,2.332,211,1.919,214,2.848,215,2.689,216,2.419,217,1.597,218,4.227,219,2.065,220,0.794,221,2.013,227,2.655,231,0.844,232,1.084,248,1.465,249,1.06,257,1.084,262,1.084,270,1.195,273,1.16,275,2.096,276,2.442,279,0.958,282,0.802,284,1.214,287,1.841,288,1.322,289,1.435,290,1.705,291,1.729,294,1.826,300,2.848,301,1.406,302,1.578,303,1.731,304,1.349,306,1.295,308,0.978,311,1.377,312,1.377,313,1.195,314,1.195,315,1.171,318,1.219,325,0.844,331,1.243,332,1.87,336,1.109,347,1.016,364,1.529,365,1.529,370,1.269,401,3.719,464,1.826,465,3.736,466,0.498,497,0.974,501,2.691,508,1.557,517,3.5,518,2.655,521,4.209,522,2.991,557,2.145,603,1.667,614,1.134,617,1.16,641,2.562,651,1.799,707,0.781,712,2.302,718,3.025,732,2.904,799,2.482,837,1.214,878,1.084,1005,0.508,1048,0.954,1059,0.861,1064,1.109,1080,1.186,1095,3.029,1098,4.436,1100,6.329,1102,5.601,1105,3.5,1106,4.282,1107,3.278,1108,4.47,1131,1.214,1136,0.861,1139,1.562,1150,1.53,1167,1.16,1177,1.214,1190,1.171,1191,2.37,1350,1.186,1351,1.338,1443,1.305,1444,2.691,1445,1.338,1446,1.338,1447,2.013,1448,1.338,1449,1.338,1450,2.681,1451,1.338,1452,1.243,1453,1.338,1454,1.186,1455,1.338,1456,1.214,1457,1.214,1458,1.338,1459,1.243,1460,1.338,1461,1.214,1462,1.338,1463,1.214,1464,1.338,1465,1.338,1466,1.186,1467,2.013,1468,1.243,1469,1.243,1470,1.338,1471,1.186,1472,1.338,1473,1.214,1474,1.338,1475,1.214,1476,1.338,1477,1.214,1478,1.338,1479,1.214,1480,1.338,1481,1.338,1482,1.214,1483,1.338,1484,1.186,1485,1.338,1486,1.274,1487,1.338,1488,1.186,1489,1.214,1490,1.338,1491,1.214,1492,1.338,1493,1.274,1494,1.338,1495,1.109,1496,0.879,1497,1.338,1498,1.038,1499,1.338,1500,1.214,1501,1.338,1502,1.214,1503,1.338,1504,1.243,1505,1.338,1506,1.214,1507,1.338,1508,1.109,1509,1.338,1510,1.109,1511,2.013,1512,1.16,1513,1.338,1514,1.186,1515,1.338,1516,1.109,1517,1.338,1518,1.214,1519,1.338,1520,1.109,1521,1.338,1522,1.109,1523,1.186,1524,1.338,1525,1.214,1526,1.338,1527,1.338,1528,1.186,1529,1.338,1530,1.038,1531,1.338,1532,1.186,1533,1.305,1534,1.338,1548,3.162,1601,2.899,1602,7.684,1603,4.918,1604,3.719,1605,4.918,1606,4.918,1607,4.918,1608,5.911,1609,4.918,1610,4.918,1611,6.575,1612,6.575,1613,6.575,1614,4.36,1615,4.3,1616,5.911,1617,3.27,1618,6.575,1619,5.911,1620,4.918,1621,2.795,1622,3.482,1623,4.918,1624,3.27,1625,4.918,1626,7.518,1627,3.27,1628,3.27,1629,4.918,1630,3.27,1631,3.27,1632,6.251,1633,3.27,1634,3.27,1635,4.727,1636,3.27,1637,3.27,1638,3.27,1639,3.27,1640,3.27,1641,3.988,1642,4.36,1643,4.36,1644,2.899,1645,4.918,1646,3.27,1647,4.918,1648,3.27,1649,4.36,1650,4.36,1651,4.918,1652,2.899,1653,4.918,1654,3.27,1655,2.899,1656,1.931,1657,1.409,1658,3.27,1659,3.27,1660,1.732,1661,1.676,1662,2.899,1663,2.655,1664,3.27,1665,3.24,1666,5.241,1667,5.241,1668,5.241,1669,5.241,1670,3.27,1671,2.899,1672,3.27,1673,3.27,1674,4.918,1675,4.918,1676,3.27,1677,2.899,1678,3.27,1679,4.918,1680,3.27,1681,4.918,1682,4.918,1683,4.918,1684,3.27,1685,1.732,1686,2.655,1687,3.27,1688,7.684,1689,3.27,1690,3.27,1691,3.27,1692,3.27,1693,3.27,1694,3.27,1695,3.27,1696,3.27,1697,3.27,1698,3.27,1699,3.27]],["title/modules/TsChart2Module.html",[1002,0.62,1700,3.434]],["body/modules/TsChart2Module.html",[0,2.03,2,0.082,3,0.06,4,0.038,5,0.038,19,0.008,25,0.148,27,0.275,29,4.406,33,0.099,37,0.038,39,0.006,40,0.006,95,1.037,131,1.906,280,1.973,282,1.095,464,2.425,630,1.555,750,1.299,848,1.555,1002,1.075,1004,1.755,1005,1.015,1006,1.867,1045,2.298,1048,2.298,1098,6.158,1100,5.955,1105,4.648,1106,2.971,1108,5.955,1119,2.397,1120,1.946,1450,3.615,1635,4.844,1643,5.79,1644,5.79,1649,5.79,1650,5.79,1671,6.982,1700,7.09,1701,5.79,1702,5.79,1703,5.79,1704,5.79,1705,6.531,1706,7.875,1707,6.531,1708,4.406,1709,5.79]],["title/interfaces/TsChartAxis.html",[41,0.554,1710,2.58]],["body/interfaces/TsChartAxis.html",[2,0.039,3,0.028,4,0.018,5,0.018,9,1.481,11,0.429,12,0.909,16,0.861,19,0.008,20,0.842,21,0.896,22,1.533,25,0.049,30,1.066,33,0.094,39,0.004,40,0.004,41,1.032,49,1.937,62,2.739,64,2.819,76,1.703,77,1.821,79,1.271,84,1.3,95,0.488,106,3.164,108,0.861,116,2.419,119,1.664,131,1.661,150,3.908,152,2.982,159,2.39,163,1.294,166,2.565,176,0.826,180,1.865,190,0.439,201,1.828,204,0.777,217,1.14,248,1.399,270,2.057,274,1.118,277,1.428,279,1.033,289,0.897,292,2.261,293,1.361,300,2.261,317,1.074,325,0.793,331,1.169,341,2.064,350,2.918,369,1.291,372,1.325,390,1.527,466,1.273,516,1.627,557,1.116,580,1.459,582,2.405,661,1.197,675,3.625,678,2.077,712,1.197,713,1.342,722,3.087,751,2.331,752,2.485,795,1.517,799,3.037,848,1.791,883,1.361,902,1.258,938,2.563,960,2.982,990,1.197,997,1.361,1005,0.885,1059,1.236,1095,3.517,1106,3.529,1107,3.201,1186,1.557,1190,1.517,1202,1.628,1224,1.576,1299,3.752,1353,2.331,1382,3.235,1423,2.331,1427,3.33,1433,3.408,1496,1.261,1552,2.39,1595,1.169,1597,1.227,1615,2.331,1621,4.275,1622,1.628,1657,2.022,1660,4.953,1661,4.761,1665,2.572,1685,1.628,1710,4.11,1711,1.747,1712,4.811,1713,3.762,1714,3.235,1715,2.331,1716,3.919,1717,3.235,1718,3.62,1719,4.443,1720,3.762,1721,4.443,1722,3.592,1723,3.374,1724,3.361,1725,4.11,1726,2.771,1727,1.685,1728,3.62,1729,3.485,1730,1.747,1731,1.747,1732,1.685,1733,4.32,1734,3.235,1735,1.747,1736,1.747,1737,1.747,1738,1.747,1739,1.747,1740,1.747,1741,1.747,1742,1.747,1743,3.07,1744,4.339,1745,1.747,1746,1.747,1747,4.609,1748,2.667,1749,1.747,1750,1.747,1751,1.747,1752,4.124,1753,3.235,1754,3.235,1755,1.747,1756,2.39,1757,2.667,1758,1.815,1759,3.899,1760,3.235,1761,3.235,1762,3.361,1763,4.052,1764,3.361,1765,3.361,1766,3.361,1767,3.361,1768,1.815,1769,2.331,1770,2.485,1771,2.771,1772,2.771,1773,2.771,1774,2.771,1775,2.771,1776,2.771,1777,2.771,1778,3.62,1779,3.235,1780,1.628,1781,1.815,1782,2.572,1783,3.361,1784,1.628,1785,1.815,1786,3.361,1787,3.762,1788,1.628,1789,1.685,1790,1.685,1791,2.667,1792,1.747,1793,1.747,1794,1.815,1795,2.33,1796,1.439,1797,1.685,1798,1.747,1799,4.789,1800,2.485,1801,2.771,1802,1.747,1803,2.771,1804,2.572,1805,2.771,1806,2.572,1807,1.747]],["title/interfaces/TsChartAxisPlotBand.html",[41,0.554,1718,2.58]],["body/interfaces/TsChartAxisPlotBand.html",[2,0.039,3,0.028,4,0.018,5,0.018,7,0.378,9,1.494,11,0.433,12,0.913,16,0.863,19,0.008,20,0.801,21,0.874,22,1.37,25,0.05,30,1.075,33,0.094,39,0.004,40,0.004,41,1.034,49,1.978,62,2.284,64,2.826,76,1.714,77,1.829,79,1.272,84,1.304,95,0.492,106,3.178,108,0.866,116,2.367,119,1.675,131,1.67,150,3.917,152,2.678,159,2.402,163,1.296,166,2.676,176,0.833,180,1.87,190,0.442,201,1.84,204,0.782,217,1.148,248,1.408,270,2.036,274,1.125,277,1.438,279,0.928,289,0.905,292,2.276,293,1.372,300,2.276,317,1.081,325,0.8,331,1.179,341,2.134,350,2.933,369,1.302,372,1.336,390,1.54,466,1.275,516,1.638,557,1.125,580,1.468,582,2.421,661,1.208,675,3.636,678,2.091,712,1.208,713,1.35,722,3.092,751,2.346,752,2.502,795,1.524,799,3.047,848,2.02,883,1.372,902,1.269,938,2.566,960,2.995,990,1.208,997,2.091,1005,0.889,1059,1.244,1095,3.279,1106,3.539,1107,3.212,1186,1.567,1190,1.524,1202,1.642,1224,1.589,1299,3.433,1353,1.54,1382,3.252,1423,2.346,1427,3.598,1433,3.421,1496,1.27,1552,2.402,1595,1.179,1597,1.238,1615,2.346,1621,4.288,1622,1.642,1657,2.035,1660,4.932,1661,4.765,1665,2.589,1685,1.642,1710,3.914,1711,1.762,1712,4.42,1713,1.831,1714,2.684,1715,1.54,1716,2.906,1717,2.684,1718,3.252,1719,4.88,1720,3.778,1721,4.88,1722,3.604,1723,3.389,1724,3.379,1725,3.252,1726,2.789,1727,1.699,1728,3.636,1729,3.497,1730,1.762,1731,1.762,1732,1.699,1733,4.325,1734,3.252,1735,1.762,1736,1.762,1737,1.762,1738,1.762,1739,1.762,1740,1.762,1741,1.762,1742,1.762,1743,3.083,1744,4.347,1745,1.762,1746,1.762,1747,4.619,1748,2.684,1749,1.762,1750,1.762,1751,1.762,1752,4.136,1753,3.252,1754,3.252,1755,1.762,1756,2.892,1757,3.636,1758,1.831,1759,3.914,1760,3.252,1761,3.252,1762,3.379,1763,4.067,1764,3.379,1765,3.379,1766,3.379,1767,3.379,1768,1.831,1769,2.346,1770,2.502,1771,2.789,1772,2.789,1773,2.789,1774,2.789,1775,2.789,1776,2.789,1777,2.789,1778,3.636,1779,3.252,1780,1.642,1781,1.831,1782,2.589,1783,3.379,1784,1.642,1785,1.831,1786,3.379,1787,3.778,1788,1.642,1789,1.699,1790,1.699,1791,2.684,1792,1.762,1793,1.762,1794,1.831,1795,2.342,1796,1.451,1797,1.699,1798,1.762,1799,4.8,1800,2.502,1801,2.789,1802,1.762,1803,2.789,1804,2.589,1805,2.789,1806,2.589,1807,1.762]],["title/interfaces/TsChartDataItem.html",[41,0.554,1782,2.489]],["body/interfaces/TsChartDataItem.html",[2,0.038,3,0.027,4,0.017,5,0.017,7,0.365,9,1.441,11,0.418,12,0.967,16,0.867,19,0.008,20,0.918,21,0.891,22,1.573,25,0.048,30,1.037,33,0.093,39,0.004,40,0.004,41,1.026,49,1.874,62,2.234,64,2.856,76,2.279,77,1.795,79,1.282,84,1.382,95,0.475,106,3.119,108,0.843,116,2.53,119,1.63,131,1.633,150,3.88,152,2.619,159,2.35,163,1.299,166,2.538,176,0.804,180,1.847,190,0.427,201,1.79,204,0.761,217,1.117,248,1.37,270,2.045,274,1.094,277,1.399,279,1.018,289,0.873,292,2.215,293,2.034,300,2.215,317,1.051,325,0.772,331,1.138,341,2.044,350,3.474,369,1.93,372,1.289,390,1.486,466,1.265,516,1.941,557,1.085,580,1.953,582,2.356,661,1.79,675,3.591,678,2.78,712,1.165,713,1.314,722,2.985,751,2.283,752,2.434,795,1.614,799,3.004,848,1.917,883,1.324,902,1.881,938,2.631,960,2.939,990,1.79,997,1.324,1005,0.976,1059,1.21,1095,3.219,1106,3.588,1107,3.404,1186,1.524,1190,1.496,1202,2.434,1224,2.356,1299,3.39,1353,1.486,1382,3.181,1423,2.283,1427,3.167,1433,3.366,1496,1.235,1552,2.637,1595,1.138,1597,1.194,1615,2.78,1621,4.655,1622,2.434,1657,1.981,1660,4.886,1661,4.775,1665,2.519,1685,1.584,1710,3.852,1711,1.7,1712,4.37,1713,1.766,1714,2.612,1715,1.486,1716,2.827,1717,2.612,1718,2.612,1719,4.225,1720,3.305,1721,4.225,1722,3.366,1723,2.964,1724,2.714,1725,3.181,1726,2.714,1727,1.64,1728,3.569,1729,3.448,1730,1.7,1731,1.7,1732,1.64,1733,4.401,1734,3.181,1735,1.7,1736,1.7,1737,1.7,1738,1.7,1739,1.7,1740,1.7,1741,1.7,1742,1.7,1743,3.027,1744,4.361,1745,1.7,1746,1.7,1747,4.576,1748,3.569,1749,1.7,1750,1.7,1751,1.7,1752,4.084,1753,3.181,1754,3.181,1755,1.7,1756,2.637,1757,2.612,1758,1.766,1759,3.852,1760,3.181,1761,3.181,1762,3.305,1763,4.002,1764,3.305,1765,3.305,1766,3.305,1767,3.305,1768,1.766,1769,2.283,1770,2.434,1771,2.714,1772,2.714,1773,2.714,1774,2.714,1775,2.714,1776,2.714,1777,2.714,1778,3.569,1779,3.852,1780,1.584,1781,1.766,1782,3.068,1783,4.4,1784,2.434,1785,3.709,1786,4.002,1787,4.657,1788,2.434,1789,2.519,1790,2.519,1791,2.612,1792,1.7,1793,1.7,1794,1.766,1795,2.291,1796,1.4,1797,1.64,1798,1.7,1799,4.754,1800,2.434,1801,2.714,1802,1.7,1803,2.714,1804,2.519,1805,2.714,1806,2.519,1807,1.7]],["title/classes/TsChartEvent.html",[37,0.026,1808,3.232]],["body/classes/TsChartEvent.html",[2,0.085,3,0.062,4,0.039,5,0.051,7,0.821,11,0.94,12,1.144,14,1.661,16,0.882,18,1.886,19,0.008,20,0.784,21,0.838,22,1.186,25,0.108,33,0.073,37,0.051,39,0.007,40,0.007,70,2.189,132,1.48,154,2.494,466,1.025,497,2.391,713,1.925,1727,5.132,1796,3.754,1808,5.71,1809,6.736,1810,8.022,1811,7.161,1812,8.869,1813,6.736,1814,8.022,1815,6.736,1816,5.972,1817,6.736,1818,6.736]],["title/interfaces/TsChartEventOptions.html",[41,0.554,1819,4.026]],["body/interfaces/TsChartEventOptions.html",[2,0.068,3,0.049,4,0.031,5,0.031,7,0.655,11,0.75,12,0.994,19,0.008,21,0.906,22,1.61,25,0.132,28,2.167,33,0.076,34,1.728,39,0.006,40,0.006,41,0.85,62,2.145,66,2.417,69,2.093,70,2.161,79,1.285,101,1.671,108,0.986,120,4.116,149,3.113,180,2.223,190,1.104,192,2.589,200,4.364,262,1.782,466,1.291,495,2.044,497,2.305,554,4.487,580,2.637,713,2.34,747,3.621,798,3.054,964,3.054,1047,3.825,1106,3.954,1354,2.754,1452,2.942,1512,2.744,1514,2.807,1661,3.965,1714,4.652,1716,5.517,1733,3.728,1793,3.054,1798,4.82,1807,4.652,1808,3.825,1819,7.258,1820,5.374,1821,5.374,1822,6.97,1823,4.064,1824,4.765,1825,4.765,1826,4.364,1827,5.374,1828,5.374,1829,5.374,1830,5.374,1831,5.374,1832,5.374,1833,5.374,1834,4.765,1835,4.765,1836,4.765,1837,5.66,1838,5.66,1839,5.374,1840,4.765,1841,5.374,1842,6.97,1843,7.736,1844,7.736,1845,5.374,1846,6.282,1847,5.374,1848,6.97,1849,7.736,1850,5.374,1851,7.736,1852,5.374,1853,6.97,1854,5.374,1855,5.374,1856,6.97,1857,5.374]],["title/interfaces/TsChartMapTooltip.html",[41,0.554,1778,2.58]],["body/interfaces/TsChartMapTooltip.html",[2,0.038,3,0.028,4,0.017,5,0.017,7,0.369,9,1.458,11,0.422,12,0.901,16,0.858,19,0.008,20,0.836,21,0.866,22,1.528,25,0.049,30,1.049,33,0.094,39,0.004,40,0.004,41,1.029,49,1.879,62,2.25,64,2.806,76,1.682,77,1.947,79,1.289,84,1.387,95,0.48,106,3.383,108,1.034,116,2.349,119,1.999,131,1.844,150,3.958,152,2.638,159,2.86,163,1.301,166,2.549,176,0.813,180,1.961,190,0.431,201,2.195,204,0.767,217,1.369,248,1.679,270,2.072,274,1.104,277,1.715,279,0.914,289,0.883,292,2.234,293,1.339,300,2.234,317,1.06,325,0.781,331,1.15,341,2.052,350,2.888,369,1.27,372,1.303,390,2.302,466,1.268,516,1.607,557,1.098,580,1.441,582,2.376,661,1.178,675,3.958,678,2.052,712,1.178,713,1.325,722,2.992,751,2.799,752,2.985,795,1.504,799,3.24,848,1.781,883,1.339,902,1.238,938,2.568,960,3.612,990,1.178,997,1.339,1005,0.876,1059,1.484,1095,3.238,1106,3.6,1107,3.181,1186,1.538,1190,1.711,1202,1.602,1224,1.55,1299,3.403,1353,1.502,1382,3.59,1423,2.302,1427,3.181,1433,3.716,1496,1.246,1552,2.366,1595,1.15,1597,1.207,1615,2.302,1621,4.251,1622,1.602,1657,1.998,1660,4.921,1661,4.787,1665,2.541,1685,1.602,1710,3.871,1711,1.719,1712,4.386,1713,1.786,1714,2.634,1715,1.502,1717,2.634,1718,2.634,1719,4.244,1720,3.328,1721,4.244,1722,3.383,1723,2.985,1724,2.737,1725,3.203,1726,2.737,1727,1.658,1728,3.871,1729,3.463,1730,1.719,1731,1.719,1732,1.658,1733,4.364,1734,3.203,1735,1.719,1736,1.719,1737,1.719,1738,1.719,1739,1.719,1740,1.719,1741,1.719,1742,1.719,1743,3.282,1744,4.481,1745,1.719,1746,1.719,1747,4.795,1748,2.634,1749,1.719,1750,1.719,1751,1.719,1752,4.1,1753,3.203,1754,3.203,1755,1.719,1756,2.366,1757,2.634,1758,1.786,1759,3.871,1760,3.59,1761,3.203,1762,3.73,1763,4.417,1764,3.73,1765,3.73,1766,3.73,1767,3.73,1768,1.786,1769,2.799,1770,2.985,1771,3.328,1772,4.022,1773,3.328,1774,4.022,1775,3.328,1776,3.328,1777,4.022,1778,4.084,1779,3.203,1780,1.602,1781,1.786,1782,2.541,1783,3.328,1784,1.602,1785,1.786,1786,3.328,1787,3.73,1788,1.602,1789,1.658,1790,1.658,1791,2.634,1792,1.719,1793,1.719,1794,1.786,1795,2.307,1796,1.416,1797,1.658,1798,1.719,1799,4.769,1800,2.455,1801,2.737,1802,1.719,1803,2.737,1804,2.541,1805,2.737,1806,2.541,1807,1.719]],["title/modules/TsChartModule.html",[1002,0.62,1017,3.232]],["body/modules/TsChartModule.html",[0,1.946,1,6.834,2,0.079,3,0.057,4,0.036,5,0.036,9,4,19,0.008,25,0.147,27,0.264,29,4.224,33,0.102,37,0.036,39,0.006,40,0.006,70,1.432,131,2.24,280,1.937,282,1.083,630,1.491,750,1.245,848,1.491,1002,1.048,1004,1.683,1005,0.973,1006,1.79,1017,6.793,1045,2.24,1048,2.24,1119,2.336,1120,1.866,1452,3.596,1512,3.354,1514,3.431,1635,3.851,1708,4.224,1709,5.551,1816,5.551,1823,4.735,1824,6.806,1825,6.806,1826,6.233,1858,5.551,1859,5.551,1860,5.551,1861,5.551,1862,6.261,1863,7.676,1864,6.261,1865,6.261]],["title/interfaces/TsChartObject.html",[41,0.554,1727,2.489]],["body/interfaces/TsChartObject.html",[2,0.04,3,0.029,4,0.019,5,0.019,9,1.545,12,0.691,16,0.869,19,0.008,20,0.813,21,0.844,22,1.294,25,0.052,30,1.111,33,0.095,39,0.004,40,0.004,41,1.041,49,1.906,62,2.331,64,2.853,76,1.758,77,1.861,79,1.269,84,1.321,95,0.509,106,3.233,108,0.889,116,2.392,119,1.718,131,1.704,150,3.951,152,2.733,159,2.452,163,1.301,166,2.607,176,0.862,180,1.892,190,0.457,201,1.887,204,0.802,217,1.177,248,1.444,270,2.051,274,1.154,277,1.474,279,0.947,289,0.936,292,2.335,293,1.419,300,2.335,317,1.336,325,0.827,331,1.219,341,2.094,350,2.993,369,1.346,372,1.381,390,1.592,466,1.285,516,1.68,557,1.163,580,1.506,582,2.483,661,1.249,675,3.678,678,2.144,712,1.249,713,1.385,722,2.994,751,2.406,752,2.566,795,1.55,799,3.086,848,1.818,883,1.419,902,1.312,938,2.577,960,3.046,990,1.249,997,1.419,1005,0.908,1059,1.276,1095,3.336,1106,3.575,1107,3.254,1186,1.607,1190,1.55,1202,1.698,1224,1.643,1299,3.473,1353,1.592,1382,3.319,1423,2.406,1427,3.254,1433,3.471,1496,1.302,1552,2.452,1595,1.219,1597,1.28,1615,2.406,1621,4.338,1622,1.698,1657,2.088,1660,4.919,1661,4.779,1665,2.655,1685,1.698,1710,3.972,1711,1.822,1712,4.466,1713,1.893,1714,2.753,1715,1.592,1717,2.753,1718,2.753,1719,4.341,1720,3.449,1721,4.341,1722,3.471,1723,3.093,1724,2.861,1725,3.319,1726,3.449,1727,2.655,1728,3.699,1729,3.542,1730,1.822,1731,1.822,1732,1.757,1733,4.345,1734,3.319,1735,1.822,1736,1.822,1737,1.822,1738,1.822,1739,1.822,1740,1.822,1741,1.822,1742,1.822,1743,3.137,1744,4.377,1745,1.822,1746,1.822,1747,4.659,1748,2.753,1749,1.822,1750,1.822,1751,1.822,1752,4.184,1753,3.319,1754,3.319,1755,1.822,1756,2.452,1757,2.753,1758,1.893,1759,3.972,1760,3.319,1761,3.319,1762,3.449,1763,4.127,1764,3.449,1765,3.449,1766,3.449,1767,3.449,1768,1.893,1769,2.406,1770,2.566,1771,2.861,1772,2.861,1773,2.861,1774,2.861,1775,2.861,1776,2.861,1777,2.861,1778,3.699,1779,3.319,1780,1.698,1781,1.893,1782,2.655,1783,3.449,1784,1.698,1785,1.893,1786,3.449,1787,3.844,1788,1.698,1789,1.757,1790,1.757,1791,2.753,1792,1.822,1793,1.822,1794,1.893,1795,2.39,1796,1.5,1797,1.757,1798,1.822,1799,4.842,1800,2.566,1801,2.861,1802,1.822,1803,2.861,1804,2.655,1805,2.861,1806,2.655,1807,1.822]],["title/interfaces/TsChartOptions.html",[41,0.554,1792,2.58]],["body/interfaces/TsChartOptions.html",[2,0.037,3,0.027,4,0.017,5,0.017,7,0.361,9,1.427,11,0.413,12,0.891,16,0.854,19,0.008,20,0.785,21,0.909,22,1.611,25,0.048,30,1.581,33,0.093,39,0.004,40,0.004,41,1.035,49,1.869,62,2.22,64,2.789,76,1.655,77,1.786,79,1.256,84,1.281,95,0.724,106,3.351,108,0.837,116,2.333,119,1.617,131,1.823,150,3.937,152,2.603,159,2.335,163,1.293,166,2.527,176,0.796,180,1.84,190,0.422,201,1.777,204,0.755,217,1.108,248,1.359,270,2.04,274,1.086,277,1.388,279,0.902,289,0.864,292,2.198,293,1.311,300,2.198,317,1.043,325,0.764,331,1.126,341,2.037,350,2.851,369,1.243,372,1.276,390,1.471,466,1.262,516,1.581,557,1.075,580,1.418,582,2.337,661,1.154,675,3.578,678,2.019,712,1.154,713,1.786,722,2.941,751,2.265,752,2.415,795,1.488,799,2.992,848,1.768,883,1.311,902,1.212,938,2.549,960,2.924,990,1.154,997,1.311,1005,1.108,1059,1.201,1095,3.202,1106,3.653,1107,3.481,1186,1.513,1190,1.488,1202,1.568,1224,1.518,1299,3.717,1353,1.471,1382,3.55,1423,2.265,1427,3.154,1433,3.539,1496,1.226,1552,2.335,1595,1.126,1597,1.182,1615,2.265,1621,4.219,1622,1.568,1657,1.965,1660,4.953,1661,4.762,1665,2.5,1685,1.568,1710,4.644,1711,1.683,1712,4.469,1713,1.749,1714,3.834,1715,1.471,1716,4.94,1717,2.592,1718,2.592,1719,4.208,1720,3.284,1721,4.208,1722,3.351,1723,2.946,1724,2.693,1725,3.161,1726,2.693,1727,1.623,1728,3.55,1729,3.434,1730,1.683,1731,1.683,1732,1.623,1733,4.317,1734,3.834,1735,1.683,1736,1.683,1737,1.683,1738,1.683,1739,1.683,1740,1.683,1741,1.683,1742,1.683,1743,3.011,1744,4.465,1745,1.683,1746,1.683,1747,4.563,1748,2.592,1749,1.683,1750,1.683,1751,1.683,1752,4.069,1753,3.161,1754,3.834,1755,1.683,1756,2.335,1757,2.592,1758,1.749,1759,4.644,1760,3.55,1761,4.05,1762,3.284,1763,3.984,1764,3.284,1765,3.284,1766,3.284,1767,3.284,1768,1.749,1769,2.265,1770,2.415,1771,2.693,1772,2.693,1773,2.693,1774,2.693,1775,2.693,1776,2.693,1777,2.693,1778,4.219,1779,3.161,1780,1.568,1781,1.749,1782,2.5,1783,3.284,1784,1.568,1785,1.749,1786,3.284,1787,3.689,1788,1.568,1789,1.623,1790,1.623,1791,2.592,1792,2.592,1793,3.55,1794,3.689,1795,2.276,1796,2.134,1797,2.5,1798,3.55,1799,4.742,1800,2.415,1801,4.208,1802,2.592,1803,3.689,1804,3.424,1805,3.689,1806,3.424,1807,3.55]],["title/directives/TsChartPointDirective.html",[707,0.721,1512,1.61]],["body/directives/TsChartPointDirective.html",[2,0.072,3,0.053,4,0.033,5,0.053,13,1.396,16,0.925,19,0.008,21,0.879,25,0.117,27,0.241,30,1.989,33,0.062,35,1.935,37,0.033,39,0.006,40,0.006,66,2.908,70,2.079,118,0.667,149,3.456,180,1.422,192,4.26,211,2.801,217,2.228,237,3.983,249,1.236,262,1.902,279,1.178,302,1.388,303,1.333,336,2.705,370,1.48,404,3.038,495,3.362,509,5.798,520,3.038,640,3.217,707,1.331,798,4.13,813,5.393,902,3.433,990,2.234,1136,1.51,1139,2.664,1198,2.29,1206,4.082,1486,2.234,1512,2.577,1595,2.181,1722,4.166,1733,4.61,1770,4.442,1808,4.082,1823,4.338,1837,5.901,1838,5.901,1840,7.437,1866,5.736,1867,5.736,1868,5.901,1869,5.736,1870,5.736,1871,5.736,1872,8.842,1873,5.736,1874,5.736,1875,5.736]],["title/directives/TsChartSeriesDirective.html",[707,0.721,1514,1.648]],["body/directives/TsChartSeriesDirective.html",[2,0.066,3,0.048,4,0.03,5,0.053,11,0.734,12,0.98,13,1.387,16,0.93,19,0.008,20,0.799,21,0.883,23,2.61,25,0.123,27,0.221,28,2.136,30,1.822,33,0.057,35,1.923,37,0.03,39,0.006,40,0.006,62,3.362,70,2.065,76,3.135,118,0.612,135,2.613,149,3.53,152,3.215,180,1.303,184,2.812,200,6.839,201,2.676,211,2.795,217,2.229,237,3.765,249,1.132,262,1.743,293,3.041,294,2.552,302,1.343,303,1.26,331,3.087,336,2.595,370,1.356,404,2.783,466,0.8,492,3.693,493,3.215,509,5.779,520,2.783,641,2.136,707,1.288,795,1.636,798,3.904,902,3.322,919,4.057,990,2.047,1005,1.387,1106,3.693,1136,1.384,1191,3.911,1198,2.098,1206,3.741,1376,4.635,1486,2.047,1512,3.064,1514,2.493,1595,1.999,1661,4.815,1733,3.911,1808,3.741,1823,3.975,1826,4.268,1834,6.786,1835,6.786,1836,6.786,1837,6.215,1838,6.215,1868,5.579,1876,5.256,1877,4.89,1878,5.777,1879,5.579,1880,5.256,1881,4.417,1882,5.256,1883,5.256,1884,5.256,1885,6.87,1886,5.256,1887,7.197,1888,5.256,1889,5.256,1890,5.256,1891,6.87,1892,5.256,1893,5.256]],["title/interfaces/TsChartTitle.html",[41,0.554,1759,2.58]],["body/interfaces/TsChartTitle.html",[2,0.04,3,0.029,4,0.018,5,0.018,7,0.387,9,1.53,11,0.443,12,0.924,16,0.868,19,0.008,20,0.81,21,0.85,22,1.29,25,0.051,30,1.101,33,0.094,39,0.004,40,0.004,41,1.039,49,1.901,62,2.586,64,2.845,76,1.745,77,1.851,79,1.276,84,1.316,95,0.504,106,3.217,108,0.882,116,2.385,119,1.706,131,1.694,150,3.941,152,3.031,159,2.438,163,1.3,166,2.597,176,0.853,180,1.886,190,0.453,201,1.873,204,0.796,217,1.168,248,1.433,270,2.047,274,1.145,277,1.464,279,0.941,289,0.926,292,2.317,293,1.405,300,2.317,317,1.1,325,0.819,331,1.207,341,2.28,350,2.976,369,1.333,372,1.368,390,1.577,466,1.282,516,1.668,557,1.152,580,1.495,582,2.976,661,1.237,675,3.666,678,2.129,712,1.237,713,1.375,722,2.988,751,2.389,752,2.547,795,1.542,799,3.075,848,1.812,883,1.405,902,1.299,938,2.574,960,3.031,990,1.237,997,1.405,1005,0.902,1059,1.267,1095,3.567,1106,3.565,1107,3.242,1186,1.595,1190,1.542,1202,1.681,1224,1.627,1299,3.65,1353,1.577,1382,3.299,1423,2.389,1427,3.242,1433,3.457,1496,1.293,1552,2.438,1595,1.207,1597,1.267,1615,2.389,1621,4.323,1622,1.681,1657,2.072,1660,4.943,1661,4.775,1665,2.636,1685,1.681,1710,3.955,1711,1.804,1712,4.453,1713,1.874,1714,2.733,1715,1.577,1717,2.733,1718,2.733,1719,4.324,1720,3.428,1721,4.324,1722,3.457,1723,3.075,1724,2.84,1725,3.299,1726,2.84,1727,1.74,1728,3.681,1729,3.529,1730,1.804,1731,1.804,1732,1.74,1733,4.339,1734,3.299,1735,1.804,1736,1.804,1737,1.804,1738,1.804,1739,1.804,1740,1.804,1741,1.804,1742,1.804,1743,3.121,1744,4.368,1745,1.804,1746,1.804,1747,4.648,1748,2.733,1749,1.804,1750,1.804,1751,1.804,1752,4.17,1753,3.299,1754,3.299,1755,1.804,1756,2.438,1757,2.733,1758,1.874,1759,4.162,1760,3.299,1761,3.299,1762,3.428,1763,4.11,1764,3.428,1765,3.428,1766,3.428,1767,3.428,1768,1.874,1769,2.389,1770,2.547,1771,2.84,1772,2.84,1773,2.84,1774,2.84,1775,2.84,1776,2.84,1777,2.84,1778,3.681,1779,3.299,1780,1.681,1781,1.874,1782,2.636,1783,3.428,1784,1.681,1785,1.874,1786,3.428,1787,3.825,1788,1.681,1789,1.74,1790,1.74,1791,2.733,1792,1.804,1793,1.804,1794,1.874,1795,2.376,1796,1.486,1797,1.74,1798,1.804,1799,4.829,1800,2.547,1801,2.84,1802,1.804,1803,2.84,1804,2.636,1805,2.84,1806,2.636,1807,1.804]],["title/interfaces/TsChartTooltip.html",[41,0.554,1761,2.58]],["body/interfaces/TsChartTooltip.html",[2,0.038,3,0.028,4,0.018,5,0.018,7,0.37,9,1.462,11,0.423,12,0.903,16,0.859,19,0.008,20,0.794,21,0.867,22,1.529,25,0.049,30,1.052,33,0.094,39,0.004,40,0.004,41,1.029,49,1.881,62,2.254,64,2.809,76,1.686,77,1.95,79,1.29,84,1.388,95,0.482,106,3.388,108,1.036,116,2.351,119,2.002,131,1.847,150,3.961,152,2.642,159,2.656,163,1.301,166,2.552,176,0.815,180,1.915,190,0.433,201,2.199,204,0.769,217,1.372,248,1.683,270,2.073,274,1.106,277,1.718,279,0.915,289,0.885,292,2.239,293,1.343,300,2.239,317,1.063,325,0.783,331,1.154,341,2.054,350,2.894,369,1.274,372,1.307,390,1.507,466,1.269,516,1.611,557,1.101,580,1.444,582,2.381,661,1.182,675,3.609,678,2.056,712,1.182,713,1.328,722,2.994,751,2.804,752,2.99,795,1.507,799,3.243,848,1.783,883,1.343,902,1.242,938,2.569,960,3.615,990,1.182,997,1.343,1005,0.878,1059,1.487,1095,3.243,1106,3.603,1107,3.185,1186,1.541,1190,1.713,1202,1.607,1224,1.555,1299,3.407,1353,1.507,1382,3.596,1423,2.307,1427,3.185,1433,3.719,1496,1.249,1552,2.37,1595,1.154,1597,1.211,1615,2.307,1621,4.256,1622,1.607,1657,2.002,1660,4.923,1661,4.788,1665,2.546,1685,1.607,1710,3.876,1711,1.724,1712,4.39,1713,1.791,1714,2.64,1715,1.507,1717,2.64,1718,2.64,1719,4.249,1720,3.334,1721,4.249,1722,3.388,1723,2.99,1724,2.743,1725,3.209,1726,2.743,1727,1.663,1728,3.876,1729,3.467,1730,1.724,1731,1.724,1732,1.663,1733,4.365,1734,3.209,1735,1.724,1736,1.724,1737,1.724,1738,1.724,1739,1.724,1740,1.724,1741,1.724,1742,1.724,1743,3.287,1744,4.484,1745,1.724,1746,1.724,1747,4.798,1748,2.64,1749,1.724,1750,1.724,1751,1.724,1752,4.104,1753,3.209,1754,3.209,1755,1.724,1756,2.37,1757,2.64,1758,1.791,1759,3.876,1760,3.596,1761,3.596,1762,3.736,1763,4.422,1764,3.736,1765,3.736,1766,3.736,1767,3.736,1768,3.736,1769,2.804,1770,2.99,1771,3.334,1772,4.028,1773,3.334,1774,4.028,1775,3.334,1776,3.334,1777,4.028,1778,3.596,1779,3.209,1780,1.607,1781,1.791,1782,2.546,1783,3.334,1784,1.607,1785,1.791,1786,3.334,1787,3.736,1788,1.607,1789,1.663,1790,1.663,1791,2.64,1792,1.724,1793,1.724,1794,1.791,1795,2.311,1796,1.42,1797,1.663,1798,1.724,1799,4.772,1800,2.46,1801,2.743,1802,1.724,1803,2.743,1804,2.546,1805,2.743,1806,2.546,1807,1.724]],["title/interfaces/TsChartZone.html",[41,0.554,1779,2.58]],["body/interfaces/TsChartZone.html",[2,0.039,3,0.029,4,0.018,5,0.018,7,0.381,9,1.504,11,0.436,12,0.916,16,0.884,19,0.008,20,0.804,21,0.866,22,1.478,25,0.05,30,1.082,33,0.094,39,0.004,40,0.004,41,1.036,49,1.943,62,2.294,64,2.832,76,1.723,77,1.836,79,1.281,84,1.308,95,0.496,106,3.19,108,0.871,116,2.372,119,1.684,131,1.677,150,3.924,152,2.69,159,2.413,163,1.316,166,2.581,176,0.839,180,1.875,190,0.445,201,1.85,204,0.786,217,1.154,248,1.415,270,2.039,274,1.131,277,1.445,279,0.932,289,0.911,292,2.288,293,1.382,300,2.288,317,1.315,325,1.226,331,1.187,341,2.075,350,2.945,369,1.311,372,2.046,390,1.551,466,1.277,516,1.647,557,1.723,580,1.476,582,2.434,661,1.216,675,3.645,678,2.102,712,1.216,713,1.357,722,2.977,751,2.359,752,2.515,795,1.529,799,3.055,848,1.801,883,1.382,902,1.278,938,2.568,960,3.005,990,1.216,997,1.382,1005,0.893,1059,1.251,1095,3.291,1106,3.546,1107,3.221,1186,1.575,1190,1.529,1202,1.653,1224,1.6,1299,3.441,1353,1.551,1382,3.266,1423,2.359,1427,3.664,1433,3.431,1496,1.276,1552,2.696,1595,1.187,1597,1.246,1615,2.359,1621,4.628,1622,1.653,1657,2.046,1660,4.907,1661,4.807,1665,2.603,1685,1.653,1710,3.926,1711,1.774,1712,4.43,1713,1.843,1714,2.699,1715,1.551,1717,2.699,1718,2.699,1719,4.297,1720,3.792,1721,4.297,1722,3.614,1723,3.044,1724,2.804,1725,3.266,1726,2.804,1727,1.711,1728,3.649,1729,3.506,1730,1.774,1731,1.774,1732,1.711,1733,4.329,1734,3.266,1735,1.774,1736,1.774,1737,1.774,1738,1.774,1739,1.774,1740,1.774,1741,1.774,1742,1.774,1743,3.094,1744,4.353,1745,1.774,1746,1.774,1747,4.628,1748,2.699,1749,1.774,1750,1.774,1751,1.774,1752,4.146,1753,3.266,1754,3.266,1755,1.774,1756,2.413,1757,2.699,1758,1.843,1759,3.926,1760,3.266,1761,3.266,1762,3.393,1763,4.08,1764,3.393,1765,3.393,1766,3.393,1767,3.393,1768,1.843,1769,2.359,1770,2.515,1771,2.804,1772,2.804,1773,2.804,1774,2.804,1775,2.804,1776,2.804,1777,2.804,1778,3.649,1779,3.649,1780,2.515,1781,3.792,1782,2.603,1783,3.393,1784,1.653,1785,1.843,1786,3.393,1787,3.792,1788,1.653,1789,1.711,1790,1.711,1791,2.699,1792,1.774,1793,1.774,1794,1.843,1795,2.352,1796,1.461,1797,1.711,1798,1.774,1799,4.809,1800,2.515,1801,2.804,1802,1.774,1803,2.804,1804,2.603,1805,2.804,1806,2.603,1807,1.774]],["title/classes/TsCheckboxChange.html",[37,0.026,1894,3.687]],["body/classes/TsCheckboxChange.html",[2,0.061,3,0.045,4,0.028,5,0.028,7,0.594,8,2.743,12,0.932,13,1.397,14,1.009,16,0.89,19,0.008,25,0.136,27,0.205,33,0.08,34,0.969,35,1.408,37,0.049,39,0.005,40,0.005,43,1.581,49,1.115,51,1.31,52,1.258,53,2.427,54,2.371,64,1.728,69,1.898,70,1.687,74,2.348,79,1.029,81,1.868,84,1.553,95,1.17,96,1.629,104,0.989,108,1.199,115,2.157,117,1.283,118,1.022,130,2.266,132,1.071,154,2.031,158,1.452,163,0.932,173,2.064,185,3.362,190,0.932,204,1.304,208,1.364,209,3.017,211,2.398,217,1.791,219,2.046,220,1.184,222,3.461,224,3.713,225,2.581,226,1.393,231,1.258,234,1.945,236,1.81,249,1.05,251,2.743,252,2.1,253,2.1,257,2.167,258,2.877,259,2.999,260,2.877,262,1.616,269,2.281,270,1.184,271,3.713,272,2.216,273,1.728,274,1.16,275,2.318,276,3.662,277,1.483,278,2.769,279,1.423,280,1.525,282,0.899,283,2.1,285,2.769,286,2.769,287,1.83,288,1.31,290,1.69,301,1.393,302,0.807,303,1.352,304,1.337,306,1.283,308,0.969,311,1.364,312,1.364,313,1.184,314,1.184,315,1.16,317,1.687,319,3.349,320,2.769,332,1.38,339,3.461,341,1.337,389,2.581,410,2.769,411,3.713,412,3.713,413,2.769,419,2.42,441,2.581,464,2.427,466,0.741,488,3.133,491,2.671,492,2.217,493,2.281,494,2.769,499,2.998,500,2.281,508,2.075,603,1.652,641,1.515,643,3.713,707,0.774,722,2.318,795,1.16,798,2.769,880,2.1,974,2.769,991,2.556,1151,4.201,1408,2.769,1454,2.859,1556,3.288,1881,6.009,1894,6.397,1895,4.321,1896,7.284,1897,5.065,1898,6.671,1899,6.213,1900,4.321,1901,4.321,1902,3.957,1903,3.461,1904,4.321,1905,3.957,1906,5.794,1907,3.957,1908,5.794,1909,4.321,1910,4.321,1911,4.321,1912,4.321,1913,4.321,1914,4.321,1915,6.213,1916,2.877,1917,4.321,1918,3.685,1919,5.794,1920,4.321,1921,3.288,1922,4.321,1923,4.321,1924,4.321]],["title/components/TsCheckboxComponent.html",[118,0.528,1454,1.648]],["body/components/TsCheckboxComponent.html",[2,0.039,3,0.029,4,0.028,5,0.052,7,0.382,8,1.317,11,0.438,12,1.04,13,1.306,14,0.986,16,0.976,18,2.121,19,0.008,20,0.949,21,0.89,22,1.334,23,1.558,25,0.117,27,0.132,33,0.063,34,0.624,35,1.242,37,0.042,39,0.004,40,0.004,41,0.703,43,1.018,49,1.09,51,0.843,52,0.809,53,1.77,54,1.729,64,1.112,69,1.222,70,1.584,74,1.511,79,1.09,81,1.647,82,1.087,84,1.591,95,1.022,96,1.558,101,0.975,104,1.169,105,0.843,108,1.59,115,2.849,117,0.826,118,1.008,130,1.652,132,1.267,154,2.001,158,1.42,163,1.277,173,1.614,176,0.843,180,1.595,185,3.392,190,1.141,195,1.733,204,1.292,208,0.878,209,2.983,211,2.211,214,1.511,217,1.682,219,2.001,220,0.762,222,2.524,224,2.708,225,3.666,226,0.896,231,0.809,234,1.252,236,1.165,248,1.42,249,1.387,251,2.419,252,1.351,253,1.351,257,2.787,258,1.852,259,2.687,260,1.852,262,1.04,269,1.468,270,0.762,271,3.275,272,1.616,273,2.283,274,0.747,275,2.283,276,3.763,277,0.954,278,1.782,279,1.228,280,1.112,282,0.924,283,1.351,284,1.165,285,1.782,286,1.782,287,1.802,288,1.281,290,1.652,301,1.362,302,1.574,303,1.73,304,1.307,306,1.255,308,0.948,311,1.334,312,1.334,313,1.158,314,1.158,315,1.135,317,1.318,319,4.537,320,3.658,332,1.359,336,1.063,339,2.524,341,0.86,347,0.975,389,1.661,410,1.782,411,2.708,412,3.275,413,3.658,419,2.862,441,1.661,464,2.571,466,0.477,488,2.016,491,1.719,492,1.427,493,1.468,494,1.782,496,2.232,499,1.929,500,1.468,508,2.147,553,2.931,554,2.612,603,1.616,614,1.087,617,1.112,641,0.975,643,4.142,707,0.915,722,1.69,795,1.135,798,1.782,817,2.016,820,4.102,837,1.165,839,1.852,840,2.232,855,2.232,857,2.232,878,1.04,880,2.483,938,0.896,974,2.708,991,2.089,1005,0.487,1059,0.826,1064,1.063,1080,1.138,1131,1.165,1136,0.826,1139,1.513,1150,1.468,1151,4.451,1167,1.112,1177,1.165,1190,1.135,1350,1.138,1351,1.283,1399,2.781,1401,2.781,1408,1.782,1443,1.252,1444,2.634,1445,1.283,1446,1.283,1447,1.95,1448,1.283,1449,1.283,1450,1.193,1451,1.283,1452,1.193,1453,1.283,1454,2.645,1455,1.283,1456,1.165,1457,1.165,1458,1.283,1459,1.193,1460,1.283,1461,1.165,1462,1.283,1463,1.165,1464,1.283,1465,1.283,1466,1.138,1467,1.95,1468,1.193,1469,1.193,1470,1.283,1471,1.138,1472,1.283,1473,1.165,1474,1.283,1475,1.165,1476,1.283,1477,1.165,1478,1.283,1479,1.165,1480,1.283,1481,1.283,1482,1.165,1483,1.283,1484,1.138,1485,1.283,1486,1.222,1487,1.283,1488,1.138,1489,1.165,1490,1.283,1491,1.165,1492,1.283,1493,1.222,1494,1.283,1495,1.063,1496,0.843,1497,1.283,1498,0.996,1499,1.283,1500,1.165,1501,1.283,1502,1.165,1503,1.283,1504,1.193,1505,1.283,1506,1.165,1507,1.283,1508,1.063,1509,1.283,1510,1.063,1511,1.95,1512,1.112,1513,1.283,1514,1.138,1515,1.283,1516,1.063,1517,1.283,1518,1.165,1519,1.283,1520,1.063,1521,1.283,1522,1.063,1523,1.138,1524,1.283,1525,1.165,1526,1.283,1527,1.283,1528,1.138,1529,1.283,1530,0.996,1531,1.283,1532,1.138,1533,1.252,1534,1.283,1556,2.116,1743,3.102,1881,5.972,1894,3.869,1895,2.781,1896,5.11,1897,4.138,1898,6.621,1899,6.166,1900,2.781,1901,2.781,1902,2.547,1903,3.052,1904,2.781,1905,2.547,1906,5.707,1907,2.547,1908,5.11,1909,4.225,1910,4.225,1911,4.225,1912,4.225,1913,2.781,1914,2.781,1915,5.235,1916,1.852,1917,2.781,1918,4.868,1919,5.707,1920,5.11,1921,3.888,1922,2.781,1923,5.11,1924,5.11,1925,4.68,1926,4.68,1927,4.68,1928,4.68,1929,3.869,1930,3.869,1931,3.869,1932,2.781,1933,4.765,1934,4.765,1935,4.765,1936,3.136,1937,3.136,1938,3.136,1939,4.765,1940,3.136,1941,3.136,1942,6.922,1943,2.781,1944,3.136,1945,2.781,1946,2.372,1947,2.781,1948,2.781,1949,2.547,1950,2.781,1951,2.547,1952,3.136,1953,3.136,1954,3.136,1955,3.136,1956,2.781,1957,1.661,1958,3.869,1959,2.781,1960,3.215,1961,3.869,1962,2.781,1963,3.136,1964,2.781,1965,3.136,1966,3.136,1967,3.136]],["title/modules/TsCheckboxModule.html",[1002,0.62,1018,3.064]],["body/modules/TsCheckboxModule.html",[2,0.086,3,0.063,4,0.04,5,0.04,19,0.008,25,0.148,27,0.288,33,0.099,37,0.04,39,0.007,40,0.007,226,1.957,280,2.013,282,0.835,630,1.63,750,1.362,1002,1.106,1004,1.84,1005,1.064,1006,1.957,1018,6.287,1045,2.364,1048,2.364,1119,2.465,1120,2.04,1121,4.603,1454,3.469,1907,5.56,1968,6.071,1969,6.071,1970,6.071,1971,6.847,1972,8.1,1973,8.1]],["title/directives/TsColumnDefDirective.html",[707,0.721,1516,1.54]],["body/directives/TsColumnDefDirective.html",[2,0.066,3,0.048,4,0.03,5,0.047,7,0.635,11,0.727,12,1.087,13,1.184,14,1.078,16,0.944,19,0.008,20,0.887,21,0.746,25,0.11,27,0.219,33,0.091,34,1.036,37,0.053,39,0.006,40,0.006,51,1.835,52,1.762,77,1.952,79,1.129,84,1.227,95,1.333,96,1.578,108,0.955,117,1.371,123,2.959,125,3.283,163,0.743,183,2.437,204,1.13,210,3.114,269,3.196,270,1.265,272,1.766,282,1.071,283,3.283,291,1.594,294,1.934,302,1.426,303,1.483,308,1.358,317,1.971,325,1.762,347,2.514,370,1.762,458,2.943,466,1.159,516,2.368,651,1.585,707,1.394,791,4.017,938,1.489,1136,1.371,1185,2.586,1186,3.089,1190,1.999,1198,2.079,1204,4.488,1256,3.348,1354,3.905,1384,2.079,1408,4.596,1424,3.29,1498,2.569,1508,2.315,1510,1.766,1516,2.742,1520,2.315,1522,1.766,1565,3.706,1566,3.881,1567,4.975,1568,4.607,1569,3.706,1570,4.86,1571,5.423,1572,5.646,1573,4.86,1574,5.423,1575,2.586,1576,3.706,1577,4.776,1578,3.706,1579,4.86,1580,5.423,1581,4.86,1582,3.706,1583,4.86,1584,3.743,1585,5.756,1586,3.348,1587,3.706,1588,3.706,1589,3.513,1590,4.86,1591,3.706,1592,5.457,1593,5.756,1594,4.499,1595,1.98,1596,3.706,1597,2.079,1598,4.86,1974,5.208,1975,5.208,1976,5.208]],["title/directives/TsConfirmationDirective.html",[707,0.721,1518,1.687]],["body/directives/TsConfirmationDirective.html",[0,1.898,2,0.056,3,0.04,4,0.026,5,0.051,7,0.538,8,1.851,11,0.616,12,0.871,13,1.333,14,1.264,16,0.897,18,1.235,19,0.008,20,0.513,21,0.739,22,0.777,25,0.14,27,0.186,28,2.552,33,0.048,34,1.392,35,1.628,37,0.035,39,0.005,40,0.005,43,1.431,51,1.185,52,1.138,53,2.601,54,2.215,63,3.755,64,1.564,70,2.07,84,0.793,95,0.969,106,2.19,130,1.529,131,2.316,132,1.342,149,3.481,151,2.69,154,2.177,166,1.564,173,1.961,182,2.807,184,3.093,190,1.078,195,1.992,199,1.495,204,1.01,209,3.444,210,2.911,211,2.205,213,4.307,215,3.185,216,2.866,217,1.836,229,2.417,231,1.807,232,1.463,234,1.76,236,1.638,238,3.91,239,2.19,240,2.835,279,0.715,287,1.235,302,1.01,303,1.455,308,1.503,315,1.05,318,1.513,321,3.605,332,1.942,364,1.371,365,1.371,370,1.138,451,2.417,466,0.671,483,3.91,497,1.314,501,3.093,505,3.605,520,2.336,522,3.438,528,3.91,557,2.978,560,3.335,563,2.604,580,1.371,601,4.617,674,2.417,706,1.529,707,1.362,775,3.335,798,4.294,848,1.667,867,4.957,893,1.952,1136,1.161,1139,1.939,1140,3.139,1167,2.911,1375,5.413,1423,2.19,1429,3.139,1456,2.807,1457,3.466,1518,2.267,1770,2.336,1977,4.41,1978,5.686,1979,6.208,1980,7.557,1981,8.577,1982,7.557,1983,7.557,1984,7.816,1985,7.058,1986,6.105,1987,3.581,1988,4.41,1989,4.41,1990,6.105,1991,4.41,1992,4.41,1993,7.557,1994,4.41,1995,3.469,1996,4.41,1997,5.413,1998,4.41,1999,7.035,2000,4.41,2001,4.41,2002,6.208,2003,4.41,2004,3.91,2005,3.91,2006,6.105,2007,7.557,2008,3.91,2009,3.91,2010,3.91,2011,6.105,2012,2.975,2013,3.91,2014,3.91,2015,4.41,2016,4.41,2017,6.105,2018,7.557,2019,6.105,2020,4.41,2021,4.41,2022,4.41,2023,4.41,2024,4.41,2025,4.41,2026,4.41,2027,4.41,2028,4.41,2029,4.41,2030,6.105,2031,4.41,2032,4.41,2033,4.41,2034,4.41,2035,4.41,2036,4.41,2037,6.105,2038,4.41,2039,4.41,2040,4.41,2041,4.41,2042,6.105,2043,6.105,2044,3.581,2045,4.41,2046,4.41,2047,4.41,2048,4.41]],["title/components/TsConfirmationModalComponent.html",[118,0.528,1456,1.687]],["body/components/TsConfirmationModalComponent.html",[2,0.065,3,0.047,4,0.039,5,0.044,7,0.629,11,0.72,12,0.968,13,1.336,16,0.83,19,0.008,20,0.883,21,0.664,25,0.122,27,0.217,33,0.056,35,1.462,37,0.039,39,0.006,40,0.006,79,1.059,82,1.789,101,1.604,104,1.047,105,1.387,108,1.245,118,0.974,151,2.302,159,2.85,163,0.968,208,1.445,220,1.254,241,3.481,242,3.902,248,2.023,249,1.462,257,1.711,279,1.1,284,1.916,302,1.612,303,1.778,304,1.862,306,1.788,308,1.35,311,1.901,312,1.901,313,1.649,314,1.649,315,1.616,328,6.095,336,1.75,347,1.604,466,0.785,609,4.58,614,1.789,617,1.83,671,2.01,707,1.077,837,1.916,878,1.711,913,3.72,1005,0.802,1059,1.359,1064,1.75,1080,1.872,1131,1.916,1136,1.359,1167,1.83,1177,1.916,1190,1.616,1350,1.872,1351,2.112,1444,3.298,1445,2.112,1446,2.112,1447,2.778,1448,2.112,1449,2.112,1450,1.962,1451,2.112,1452,1.962,1453,2.112,1454,1.872,1455,2.112,1456,2.993,1457,3.503,1458,2.112,1459,1.962,1460,2.112,1461,1.916,1462,2.112,1463,1.916,1464,2.112,1465,2.112,1466,1.872,1467,2.778,1468,1.962,1469,1.962,1470,2.112,1471,1.872,1472,2.112,1473,1.916,1474,2.112,1475,1.916,1476,2.112,1477,1.916,1478,2.112,1479,1.916,1480,2.112,1481,2.112,1482,1.916,1483,2.112,1484,1.872,1485,2.112,1486,2.01,1487,2.112,1488,1.872,1489,1.916,1490,2.112,1491,1.916,1492,2.112,1493,2.01,1494,2.112,1495,1.75,1496,1.387,1497,2.112,1498,1.639,1499,2.112,1500,1.916,1501,2.112,1502,1.916,1503,2.112,1504,1.962,1505,2.112,1506,1.916,1507,2.112,1508,1.75,1509,2.112,1510,1.75,1511,2.778,1512,1.83,1513,2.112,1514,1.872,1515,2.112,1516,1.75,1517,2.112,1518,2.817,1519,2.112,1520,1.75,1521,2.112,1522,1.75,1523,1.872,1524,2.112,1525,1.916,1526,2.112,1527,2.112,1528,1.872,1529,2.112,1530,1.639,1531,2.112,1532,1.872,1533,2.06,1534,2.112,1979,6.019,1984,6.019,1999,7.146,2049,7.585,2050,5.16,2051,6.788,2052,6.788,2053,5.526,2054,5.16,2055,6.019,2056,6.788,2057,5.16]],["title/modules/TsConfirmationModule.html",[1002,0.62,1019,3.232]],["body/modules/TsConfirmationModule.html",[2,0.083,3,0.06,4,0.038,5,0.038,19,0.008,25,0.151,27,0.277,33,0.098,37,0.038,39,0.006,40,0.006,280,1.98,282,0.803,327,2.629,630,1.568,750,1.31,1002,1.081,1004,1.77,1005,1.024,1006,1.882,1014,4.843,1019,6.747,1045,2.31,1048,2.31,1051,3.61,1119,2.409,1120,1.963,1180,4.673,1181,3.61,1456,3.464,1457,2.446,1518,3.534,2008,5.839,2013,5.839,2058,5.839,2059,5.839,2060,6.586,2061,5.839,2062,6.586,2063,7.018,2064,7.915,2065,7.915]],["title/components/TsCopyComponent.html",[118,0.528,1459,1.727]],["body/components/TsCopyComponent.html",[0,1.539,2,0.042,3,0.03,4,0.029,5,0.051,7,0.725,10,1.976,11,0.46,12,0.706,13,1.427,14,1.025,16,0.957,18,1.664,19,0.008,20,0.865,21,0.856,22,1.046,23,1.639,25,0.095,27,0.139,28,1.026,33,0.036,34,1.313,37,0.038,39,0.004,40,0.004,52,2.345,64,1.756,66,3.093,70,1.133,79,1.171,81,0.943,82,1.144,84,1.572,95,0.786,96,1.336,101,1.026,104,0.669,105,0.887,108,1.454,117,1.304,118,0.976,129,3.34,132,1.306,149,2.691,158,1.475,163,1.178,164,2.226,173,1.386,175,2.495,176,0.887,180,1.754,182,2.453,184,2.703,190,1.212,195,1.511,204,1.312,210,2.812,219,2.079,220,0.801,228,4.701,231,0.851,232,1.094,237,1.808,248,1.475,249,1.83,251,2.495,252,1.422,253,1.422,257,1.094,262,1.971,273,1.17,275,1.756,284,1.225,287,2.22,288,1.331,289,2.169,290,1.717,291,1.734,296,2.679,301,1.415,302,1.579,303,1.732,304,1.358,306,1.304,308,0.985,313,1.203,314,1.203,315,1.179,321,4.388,322,2.537,332,1.674,335,2.813,336,1.119,341,2.493,347,1.026,370,0.851,441,1.747,464,2.628,467,2.813,486,3.744,496,4.23,497,1.968,509,3.046,530,4.988,578,2.191,614,1.144,617,1.17,630,1.415,641,1.539,655,3.524,707,0.786,713,1.888,718,2.029,776,3.257,795,1.888,837,1.225,839,2.923,878,1.094,904,4.572,910,5.464,919,1.948,992,1.691,1005,0.513,1059,0.869,1064,2.913,1080,1.197,1131,1.225,1136,0.869,1139,1.572,1144,3.744,1149,4.39,1150,1.544,1151,3.183,1167,1.17,1171,4.995,1177,1.225,1190,1.179,1198,1.317,1350,1.197,1351,1.35,1409,4.02,1427,2.63,1443,1.317,1444,2.703,1445,1.35,1446,1.35,1447,2.026,1448,1.35,1449,1.35,1450,1.255,1451,1.35,1452,1.255,1453,1.35,1454,1.197,1455,1.35,1456,1.225,1457,1.225,1458,1.35,1459,2.826,1460,1.35,1461,1.225,1462,1.35,1463,1.225,1464,1.35,1465,1.35,1466,1.197,1467,2.026,1468,1.255,1469,1.255,1470,1.35,1471,1.197,1472,1.35,1473,1.225,1474,1.35,1475,1.225,1476,1.35,1477,1.225,1478,1.35,1479,1.225,1480,1.35,1481,1.35,1482,1.225,1483,1.35,1484,1.197,1485,1.35,1486,1.285,1487,1.35,1488,1.197,1489,1.225,1490,1.35,1491,1.225,1492,1.35,1493,1.285,1494,1.35,1495,1.119,1496,0.887,1497,1.35,1498,1.048,1499,1.35,1500,1.225,1501,1.35,1502,1.225,1503,1.35,1504,1.255,1505,1.35,1506,1.225,1507,1.35,1508,1.119,1509,1.35,1510,1.119,1511,2.026,1512,1.17,1513,1.35,1514,1.197,1515,1.35,1516,1.119,1517,1.35,1518,1.225,1519,1.35,1520,1.119,1521,1.35,1522,1.119,1523,1.197,1524,1.35,1525,1.225,1526,1.35,1527,1.35,1528,1.197,1529,1.35,1530,1.048,1531,1.35,1532,1.197,1533,1.317,1534,1.35,1641,5.471,1784,2.622,1796,2.317,1797,1.808,1957,2.622,1987,2.679,1997,2.925,2066,3.299,2067,7.708,2068,4.951,2069,4.951,2070,4.951,2071,8.109,2072,5.363,2073,4.951,2074,6.604,2075,4.951,2076,5.943,2077,5.943,2078,3.299,2079,4.826,2080,4.951,2081,3.299,2082,3.299,2083,4.951,2084,3.299,2085,3.299,2086,4.951,2087,3.299,2088,4.951,2089,4.951,2090,3.299,2091,4.951,2092,3.299,2093,3.299,2094,4.951,2095,3.299,2096,4.951,2097,3.299,2098,2.537,2099,4.02,2100,4.39,2101,3.299,2102,4.951,2103,3.299,2104,3.299,2105,3.299,2106,4.951,2107,3.299,2108,3.299,2109,4.951,2110,2.925,2111,3.299,2112,2.925,2113,3.299,2114,2.679,2115,3.299,2116,3.299,2117,3.299,2118,3.299,2119,3.299,2120,4.951,2121,2.679,2122,3.299,2123,3.299,2124,3.299,2125,3.299,2126,2.679,2127,3.299,2128,3.299,2129,3.299,2130,3.299,2131,4.951,2132,3.299,2133,3.299,2134,3.299,2135,3.299,2136,3.299,2137,3.299,2138,4.02,2139,2.679,2140,3.299,2141,3.299,2142,2.925,2143,2.348,2144,3.299,2145,3.299]],["title/modules/TsCopyModule.html",[1002,0.62,1020,3.232]],["body/modules/TsCopyModule.html",[2,0.084,3,0.061,4,0.038,5,0.038,19,0.008,25,0.151,27,0.279,33,0.098,37,0.038,39,0.006,40,0.006,280,1.987,282,0.809,327,2.649,630,1.58,750,1.319,1002,1.085,1004,1.783,1005,1.031,1006,1.897,1020,6.754,1025,4.168,1042,5.409,1045,2.32,1048,2.32,1067,3.4,1090,4.722,1119,2.42,1120,1.977,1180,4.694,1181,3.637,1459,3.622,1540,6.012,1541,3.637,2146,5.883,2147,5.883,2148,6.635,2149,5.883,2150,6.635,2151,7.95]],["title/pipes/TsDatePipe.html",[620,1.906,2152,3.232]],["body/pipes/TsDatePipe.html",[2,0.08,3,0.058,4,0.037,5,0.045,16,0.8,18,1.787,19,0.008,20,0.974,21,0.76,22,1.124,25,0.125,27,0.269,33,0.084,34,1.269,37,0.037,39,0.006,40,0.006,79,1.216,104,1.698,108,1.171,163,1.243,190,1.108,221,3.179,274,1.52,317,1.777,318,1.582,325,2.004,425,2.987,466,0.971,554,3.498,620,3.515,799,3.811,848,1.52,938,1.825,991,2.717,1059,2.391,1136,1.681,1139,2.027,1147,3.498,2152,5.958,2153,5.66,2154,6.886,2155,4.543,2156,5.528,2157,7.916,2158,6.383,2159,7.073,2160,5.528,2161,4.827,2162,6.383,2163,6.383,2164,7.767,2165,7.767,2166,7.423,2167,6.307,2168,6.383,2169,6.383,2170,6.383,2171,6.383,2172,6.307,2173,6.383,2174,6.383,2175,4.543,2176,4.306,2177,3.927,2178,5.66,2179,5.66,2180,6.383]],["title/interfaces/TsDateRange.html",[41,0.554,2181,4.026]],["body/interfaces/TsDateRange.html",[2,0.036,3,0.026,4,0.016,5,0.016,7,0.347,8,1.856,11,0.397,12,0.631,13,1.411,16,0.891,19,0.008,20,0.631,21,0.598,25,0.106,27,0.12,28,0.884,33,0.048,34,1.545,35,1.92,37,0.031,39,0.004,40,0.004,41,0.746,43,0.923,51,0.765,52,0.734,62,1.136,64,1.923,66,2.92,69,1.108,70,1.817,79,0.757,95,1.051,96,1.542,104,0.577,111,1.617,115,3.636,117,2.092,118,0.771,120,2.611,123,2.513,124,2.843,129,6.193,132,1.192,154,1.686,158,0.848,159,1.194,163,1.108,166,3.21,173,0.797,174,0.904,182,1.642,187,2.921,190,1,195,1.674,201,1.722,211,2.268,216,1.809,217,1.838,220,0.691,225,3.508,226,0.813,237,2.423,251,1.856,252,1.226,253,1.226,259,3.11,262,2.028,270,1.074,275,1.568,279,1.391,282,0.539,287,1.712,288,0.765,290,1.533,291,0.664,301,0.813,302,0.471,303,0.811,304,0.78,306,0.749,308,0.566,313,0.691,314,0.691,315,0.677,318,0.705,325,2.343,332,1.399,364,1.901,365,1.901,397,6.488,400,2.423,422,1.458,441,3.713,458,1.226,464,1.642,465,1.617,466,1.067,493,2.069,495,2.326,497,2.181,501,1.164,508,1.428,509,3.336,580,0.884,602,2.843,630,1.053,641,2.415,652,1.829,661,1.108,670,3.395,671,1.108,713,1.893,756,1.68,795,1.456,798,1.617,839,2.611,848,2.1,912,1.458,948,3.859,949,1.413,964,1.617,968,2.843,997,3.992,1059,2.545,1060,2.31,1094,1.68,1191,1.371,1209,4.85,1220,4.654,1227,3.762,1229,4.158,1461,2.014,1463,2.271,1551,5.009,1556,1.919,1715,2.196,1897,4.258,1960,2.983,2004,3.92,2121,5.378,2181,5.873,2182,2.523,2183,2.845,2184,3.92,2185,6.889,2186,3.92,2187,6.623,2188,3.92,2189,3.659,2190,2.845,2191,2.845,2192,4.421,2193,4.421,2194,2.845,2195,2.523,2196,4.421,2197,6.116,2198,6.116,2199,4.421,2200,2.845,2201,7.467,2202,2.845,2203,5.302,2204,2.845,2205,2.845,2206,2.845,2207,4.421,2208,4.421,2209,2.31,2210,2.31,2211,2.152,2212,2.152,2213,1.617,2214,4.126,2215,2.845,2216,6.488,2217,6.889,2218,6.889,2219,4.421,2220,2.523,2221,3.59,2222,2.523,2223,2.523,2224,2.983,2225,2.845,2226,2.152,2227,2.845,2228,2.845,2229,2.845,2230,7.77,2231,4.808,2232,2.31,2233,4.404,2234,2.845,2235,2.845,2236,6.623,2237,6.623,2238,4.421,2239,2.845,2240,6.623,2241,2.845,2242,2.845,2243,3.344,2244,4.421,2245,4.421,2246,2.845,2247,4.421,2248,2.845,2249,2.845,2250,2.845,2251,2.845,2252,2.845,2253,2.845,2254,1.919,2255,2.523,2256,3.92,2257,2.523,2258,2.845,2259,2.845,2260,2.523,2261,2.845,2262,4.421,2263,2.845,2264,2.845,2265,2.845,2266,4.421,2267,4.421,2268,4.421,2269,4.421,2270,6.116,2271,2.845,2272,6.116,2273,2.845,2274,2.845,2275,2.845,2276,2.845,2277,6.116,2278,5.423,2279,2.845,2280,6.116,2281,2.845,2282,2.845,2283,2.845,2284,2.845,2285,4.421,2286,4.421,2287,2.845,2288,2.845,2289,4.421,2290,3.92,2291,2.845,2292,2.845,2293,2.845,2294,2.845,2295,2.845,2296,2.845,2297,2.845,2298,2.845,2299,2.845,2300,2.845,2301,2.845,2302,2.845,2303,2.845]],["title/modules/TsDateRangeModule.html",[1002,0.62,1021,3.232]],["body/modules/TsDateRangeModule.html",[2,0.085,3,0.062,4,0.039,5,0.039,19,0.008,25,0.149,27,0.284,33,0.098,37,0.039,39,0.007,40,0.007,280,2,282,0.822,327,2.692,630,1.606,750,1.341,1002,1.096,1004,1.812,1005,1.048,1006,1.927,1021,6.707,1022,6.203,1045,2.343,1048,2.343,1059,2.114,1060,5.475,1062,5.979,1119,2.443,1120,2.009,1180,4.74,1181,3.696,1461,3.544,2182,5.979,2304,5.979,2305,5.979,2306,6.743,2307,5.979,2308,6.743,2309,8.027]],["title/classes/TsDatepickerInputEvent.html",[37,0.026,2310,4.026]],["body/classes/TsDatepickerInputEvent.html",[2,0.043,3,0.031,4,0.02,5,0.02,7,0.416,8,2.821,13,1.413,16,0.918,19,0.008,21,0.497,25,0.115,27,0.144,28,1.062,30,1.184,32,3,33,0.066,34,1.497,35,1.863,37,0.044,39,0.004,40,0.005,43,1.108,49,0.781,51,0.918,52,1.311,61,2.448,64,1.211,66,2.777,69,1.33,70,1.906,74,1.646,79,1.163,81,1.452,84,1.09,95,1.373,96,1.64,104,1.845,105,1.806,108,0.626,111,1.941,115,3.687,117,1.982,118,0.876,123,1.941,124,2.196,126,2.016,129,4.533,130,1.762,131,0.997,132,1.117,135,1.299,149,1.299,151,1.723,158,1.018,163,1.206,166,1.802,173,1.422,176,0.918,182,1.268,183,2.378,187,2.682,190,1.112,195,0.781,198,1.872,204,0.565,211,2.096,216,2.079,217,1.474,220,0.83,222,2.69,224,2.887,226,0.976,239,3.337,249,1.095,251,2.133,252,1.472,253,1.472,257,1.685,258,2.016,259,3.067,260,2.016,262,2.497,270,1.234,272,2.057,273,1.211,274,0.813,275,1.211,276,1.696,277,1.039,278,1.941,279,1.415,280,1.186,282,0.74,283,1.472,285,1.941,286,1.941,287,2.183,288,0.918,290,1.184,291,1.416,293,1.512,294,2.253,297,4.093,299,4.84,301,0.976,302,0.565,303,0.932,304,0.937,306,0.899,308,0.679,313,0.83,314,0.83,315,0.813,317,1.388,318,0.846,325,2.15,332,0.721,347,1.579,364,1.062,365,1.062,370,1.566,389,2.69,404,2.69,422,1.75,441,1.809,458,1.472,464,1.887,466,0.773,469,2.304,495,1.932,497,1.018,499,3.125,501,1.398,508,1.598,509,2.101,578,1.512,582,1.75,602,3.266,603,2.552,630,0.813,641,2.089,643,1.941,651,1.846,655,2.431,713,2.053,718,2.101,719,2.101,720,2.431,747,1.598,750,1.01,756,2.016,770,3.582,795,0.813,839,3,848,1.71,880,1.472,912,1.75,948,3.567,949,1.696,964,1.941,1059,2.517,1139,1.927,1144,2.583,1147,1.872,1151,3.266,1191,2.448,1198,1.363,1203,2.304,1209,3,1220,4.133,1227,3.732,1229,4.081,1283,4.125,1457,1.887,1461,1.268,1463,2.495,1551,4.588,1563,3.028,1732,3.682,1796,1.598,1879,4.125,1897,4.617,1960,2.304,2005,3.028,2143,2.431,2188,4.505,2189,4.093,2195,3.028,2201,7.102,2203,4.588,2209,2.773,2210,2.773,2212,2.583,2213,2.887,2214,4.533,2216,5.957,2217,6.368,2218,6.368,2220,3.028,2221,4.125,2222,3.028,2223,3.028,2224,5.26,2231,6.912,2232,2.773,2233,7.023,2255,3.028,2256,4.505,2257,3.028,2278,3.028,2310,5.957,2311,3.415,2312,4.505,2313,6.674,2314,3.415,2315,3.415,2316,3.415,2317,2.887,2318,3.415,2319,3.028,2320,3.415,2321,2.196,2322,3.415,2323,3.415,2324,3.842,2325,2.583,2326,3.842,2327,3.415,2328,5.08,2329,5.08,2330,5.08,2331,2.583,2332,3.415,2333,3.415,2334,3.415,2335,3.415,2336,3.415,2337,5.08,2338,5.08,2339,3.415,2340,5.08,2341,5.08,2342,3.415,2343,3.415,2344,3.415,2345,4.125,2346,3.028,2347,3.415,2348,3.415,2349,3.415,2350,3.415,2351,3.415,2352,3.415,2353,3.415,2354,3.415,2355,3.415,2356,3.415,2357,6.067,2358,3.415,2359,3.415,2360,3.415,2361,5.08,2362,5.08,2363,3.415,2364,3.028,2365,3.415,2366,5.08,2367,3.415,2368,4.125,2369,3.415,2370,3.415,2371,3.415,2372,3.415]],["title/modules/TsDatepickerModule.html",[1002,0.62,1022,3.064]],["body/modules/TsDatepickerModule.html",[2,0.083,3,0.06,4,0.038,5,0.038,19,0.008,25,0.152,27,0.277,33,0.098,37,0.038,39,0.006,40,0.006,104,1.336,226,1.882,280,1.98,282,0.803,630,1.568,750,1.31,1002,1.081,1004,1.77,1005,1.024,1006,1.882,1022,6.334,1043,5.012,1045,2.31,1048,2.31,1091,3.743,1092,4.234,1119,2.409,1120,1.963,1121,4.498,1126,5.986,1127,4.981,1463,3.554,1541,3.61,2232,5.348,2345,6.89,2373,5.839,2374,5.839,2375,5.839,2376,6.586,2377,5.839,2378,6.586,2379,7.915,2380,7.915,2381,7.915]],["title/injectables/TsDropProtectionService.html",[0,1.412,254,3.232]],["body/injectables/TsDropProtectionService.html",[0,2.549,2,0.077,3,0.056,4,0.035,5,0.052,11,0.85,12,1.076,14,1.562,16,0.907,18,2.113,19,0.008,20,0.878,21,0.738,22,1.329,25,0.121,27,0.256,33,0.066,37,0.035,39,0.006,40,0.006,44,5.521,70,2.082,108,1.504,163,0.869,173,1.705,184,3.088,190,1.17,192,4.43,195,2.053,204,1.506,231,1.571,232,2.02,254,5.37,255,4.256,262,2.503,319,4.392,332,1.81,370,2.316,497,1.815,508,1.987,520,3.996,651,2.296,1139,2.722,1171,6.481,1657,3.251,2079,6.127,2321,5.51,2382,8.976,2383,6.089,2384,8.57,2385,6.089,2386,7.545,2387,6.089,2388,7.545,2389,6.089,2390,6.089,2391,6.089,2392,8.57,2393,6.089,2394,8.57,2395,6.089,2396,6.089,2397,6.089,2398,6.089]],["title/interfaces/TsFileImageDimensionContraint.html",[41,0.554,121,3.434]],["body/interfaces/TsFileImageDimensionContraint.html",[2,0.088,3,0.064,4,0.048,5,0.041,7,0.855,11,0.978,12,1.172,19,0.008,21,0.916,33,0.089,39,0.007,40,0.007,41,1.001,44,4.311,49,2.055,56,4.849,58,4.311,60,5.541,116,2.133,121,6.588,122,5.776,123,4.667,124,5.28,125,3.871,141,4.988,1716,5.527,2399,5.691,2400,6.214,2401,7.009]],["title/modules/TsFileUploadModule.html",[1002,0.62,1023,3.232]],["body/modules/TsFileUploadModule.html",[2,0.076,3,0.055,4,0.047,5,0.035,19,0.008,25,0.153,27,0.254,33,0.097,37,0.035,39,0.006,40,0.006,44,3.717,45,4.906,57,4.076,58,3.717,60,4.076,104,1.226,226,1.727,228,5.344,231,1.559,232,2.004,254,6.376,255,3.001,256,5.357,280,1.907,281,6.634,282,0.996,284,3.521,300,2.911,327,2.412,630,1.439,750,1.202,1002,1.025,1004,1.624,1005,0.939,1006,1.727,1014,4.744,1023,6.827,1024,5.76,1025,4.076,1042,5.29,1043,4.91,1045,2.191,1048,2.191,1051,3.312,1064,2.049,1065,4.3,1066,4.906,1067,3.097,1090,4.3,1091,3.434,1092,3.885,1119,2.285,1120,1.801,1121,4.267,1129,4.906,1180,4.434,1181,3.312,2402,5.357,2403,5.357,2404,5.357,2405,6.042,2406,5.357,2407,5.357,2408,6.042,2409,7.509,2410,7.509]],["title/interfaces/TsFileValidations.html",[41,0.554,91,3.434]],["body/interfaces/TsFileValidations.html",[2,0.06,3,0.043,4,0.052,5,0.027,7,0.577,11,0.66,12,0.914,13,1.356,14,0.98,16,0.487,19,0.008,20,0.551,21,0.839,25,0.131,30,1.641,33,0.07,34,1.548,35,1.565,37,0.027,39,0.006,40,0.005,41,0.781,42,6.102,44,2.911,49,2.044,55,4.845,56,4.289,57,5.964,58,5.365,59,5.785,60,5.657,66,2.221,70,1.466,79,0.894,81,1.353,84,1.653,91,5.493,95,0.751,97,5.887,101,1.471,104,1.83,111,2.689,112,5.202,116,2.369,119,1.678,120,3.783,122,3.042,125,2.039,127,4.322,141,5.54,173,2.348,180,1.173,190,1.16,199,1.605,201,2.496,204,1.346,250,5.17,259,1.678,261,3.843,268,3.843,274,1.526,294,1.758,325,2.251,332,1.842,364,2.607,365,2.607,379,3.193,394,2.689,419,2.35,431,5.202,466,0.975,492,2.153,497,2.599,581,6.151,583,6.151,585,6.151,651,1.44,661,2.496,670,3.723,671,1.843,706,1.641,713,1.831,962,2.425,987,2.911,990,1.843,1063,3.843,1387,3.042,1604,3.579,1686,3.843,1743,3.919,1769,2.35,1784,3.393,1795,2.622,1957,3.393,2143,3.368,2411,4.196,2412,4.196,2413,4.845,2414,5.681,2415,5.681,2416,5.681,2417,5.681,2418,5.681,2419,4.196,2420,6.902,2421,4.196,2422,5.681,2423,4.196,2424,4.196,2425,4.196,2426,4.196,2427,5.681,2428,4.196,2429,4.196,2430,4.196,2431,4.196,2432,4.196,2433,4.196,2434,4.196,2435,5.681,2436,4.196,2437,4.196,2438,4.196,2439,4.196,2440,4.196,2441,4.196,2442,5.681,2443,4.196,2444,5.681,2445,4.196,2446,4.196,2447,4.196,2448,3.368,2449,4.196,2450,3.368,2451,4.196,2452,4.196,2453,4.196,2454,4.196,2455,4.196,2456,4.196,2457,4.196,2458,4.196,2459,4.196,2460,4.196,2461,4.196,2462,5.681,2463,6.44,2464,4.196,2465,4.196]],["title/directives/TsHeaderCellDefDirective.html",[707,0.721,1520,1.54]],["body/directives/TsHeaderCellDefDirective.html",[2,0.068,3,0.049,4,0.031,5,0.031,7,0.656,12,1.168,13,1.203,14,1.113,16,0.843,19,0.008,20,0.811,25,0.112,27,0.226,33,0.092,34,1.07,37,0.054,39,0.006,40,0.006,51,1.446,52,1.388,77,1.537,79,0.973,84,0.967,95,1.3,96,1.525,117,1.416,123,3.057,125,3.005,183,2.517,204,0.89,210,3.138,269,2.517,270,1.307,272,1.824,282,1.079,283,3.335,291,1.628,294,1.998,302,1.439,303,1.502,308,1.387,317,1.989,325,1.388,347,2.637,370,1.8,458,2.318,466,1.178,516,2.683,651,1.637,707,1.405,791,4.067,938,1.537,1136,1.416,1185,2.671,1186,3.033,1190,2.107,1198,2.147,1204,4.539,1256,3.458,1354,3.967,1384,2.147,1408,4.398,1424,3.361,1498,2.601,1508,2.365,1510,1.824,1516,2.624,1520,2.624,1522,1.824,1565,3.828,1566,4.398,1567,5.037,1568,5.222,1569,3.828,1570,4.964,1571,5.508,1572,5.689,1573,4.964,1574,5.508,1575,2.671,1576,4.964,1577,4.835,1578,3.828,1579,4.964,1580,5.508,1581,4.964,1582,3.828,1583,4.964,1584,3.822,1585,4.964,1586,3.458,1587,3.828,1588,3.828,1589,3.629,1590,4.964,1591,3.828,1592,4.705,1593,3.828,1594,4.57,1595,2.045,1596,3.828,1597,2.147,1598,3.828]],["title/directives/TsHeaderCellDirective.html",[707,0.721,1522,1.54]],["body/directives/TsHeaderCellDirective.html",[2,0.067,3,0.049,4,0.031,5,0.04,7,0.651,12,1.1,13,1.199,14,1.437,16,0.872,18,1.496,19,0.008,20,0.897,21,0.523,22,0.941,25,0.112,27,0.225,33,0.092,34,1.062,37,0.054,39,0.006,40,0.006,51,1.436,52,1.379,77,1.527,79,0.969,84,0.96,95,1.296,96,1.521,117,1.407,123,3.036,125,2.992,183,2.5,204,0.884,210,3.263,269,2.5,270,1.298,272,1.811,282,1.058,283,3.324,291,1.8,294,1.984,302,1.436,303,1.553,308,1.381,317,1.985,325,1.379,347,2.632,370,1.991,458,2.302,466,1.174,516,2.407,651,1.626,707,1.402,791,3.831,938,1.527,1136,1.407,1185,2.653,1186,3.029,1190,2.104,1198,2.132,1204,4.52,1256,3.434,1354,3.953,1384,2.132,1408,4.384,1424,3.717,1498,2.45,1508,2.354,1510,1.811,1516,2.616,1520,2.354,1522,2.354,1565,3.802,1566,3.946,1567,4.745,1568,4.684,1569,3.802,1570,4.942,1571,5.49,1572,5.821,1573,4.942,1574,5.49,1575,2.653,1576,3.802,1577,4.999,1578,4.942,1579,4.942,1580,5.49,1581,4.942,1582,3.802,1583,5.49,1584,3.805,1585,4.942,1586,3.434,1587,3.802,1588,3.802,1589,3.604,1590,4.942,1591,3.802,1592,4.684,1593,3.802,1594,4.555,1595,2.031,1596,3.802,1597,2.132,1598,3.802,2466,5.342]],["title/components/TsHeaderRowComponent.html",[118,0.528,1466,1.648]],["body/components/TsHeaderRowComponent.html",[2,0.06,3,0.044,4,0.037,5,0.028,7,0.581,12,1.199,19,0.008,20,0.848,21,0.466,23,3.877,25,0.103,27,0.201,33,0.085,37,0.051,39,0.005,40,0.005,82,1.652,96,1.544,101,1.481,104,0.967,105,1.281,118,0.978,135,2.448,204,1.206,208,1.334,220,1.158,248,1.918,249,1.387,257,1.58,279,1.322,282,0.952,283,2.774,284,1.77,291,1.961,302,1.609,303,1.773,308,1.449,311,2.041,312,2.041,313,1.771,314,1.771,315,1.736,317,1.865,336,1.616,347,2.715,370,1.881,466,0.979,614,1.652,617,1.69,651,1.959,707,1.294,791,3.197,795,1.533,837,1.77,878,1.58,938,1.84,1005,0.741,1059,1.255,1064,1.616,1080,1.729,1131,1.77,1136,1.255,1167,1.69,1177,1.77,1185,4.518,1186,2.589,1190,2.15,1204,3.512,1350,1.729,1351,1.95,1424,3.512,1444,3.195,1445,1.95,1446,1.95,1447,2.634,1448,1.95,1449,1.95,1450,1.812,1451,1.95,1452,1.812,1453,1.95,1454,1.729,1455,1.95,1456,1.77,1457,1.77,1458,1.95,1459,1.812,1460,1.95,1461,1.77,1462,1.95,1463,1.77,1464,1.95,1465,1.95,1466,2.833,1467,2.634,1468,1.812,1469,1.812,1470,1.95,1471,1.729,1472,1.95,1473,1.77,1474,1.95,1475,1.77,1476,1.95,1477,1.77,1478,1.95,1479,1.77,1480,1.95,1481,1.95,1482,1.77,1483,1.95,1484,1.729,1485,1.95,1486,1.856,1487,1.95,1488,2.336,1489,1.77,1490,1.95,1491,1.77,1492,1.95,1493,1.856,1494,1.95,1495,1.616,1496,1.281,1497,1.95,1498,2.315,1499,1.95,1500,1.77,1501,1.95,1502,1.77,1503,1.95,1504,1.812,1505,1.95,1506,1.77,1507,1.95,1508,1.616,1509,1.95,1510,1.616,1511,2.634,1512,1.69,1513,1.95,1514,1.729,1515,1.95,1516,1.616,1517,1.95,1518,1.77,1519,1.95,1520,1.616,1521,1.95,1522,1.616,1523,2.645,1524,1.95,1525,1.77,1526,1.95,1527,1.95,1528,2.645,1529,1.95,1530,1.513,1531,1.95,1532,1.729,1533,1.902,1534,1.95,1566,3.658,1575,2.366,1577,4.814,1584,3.528,1595,2.448,1597,2.569,2098,3.299,2467,3.603,2468,5.512,2469,5.512,2470,4.868,2471,4.918,2472,6.166,2473,5.512,2474,4.868,2475,5.512,2476,4.581,2477,4.343,2478,4.868,2479,4.581,2480,4.868,2481,3.603,2482,3.391,2483,3.391,2484,3.603,2485,3.603,2486,3.603]],["title/directives/TsHeaderRowDefDirective.html",[707,0.721,1523,1.648]],["body/directives/TsHeaderRowDefDirective.html",[2,0.073,3,0.053,4,0.033,5,0.033,7,0.705,12,1.284,19,0.008,21,0.566,23,4.178,25,0.117,27,0.243,33,0.091,37,0.053,39,0.006,40,0.006,96,1.617,118,0.932,135,3.045,204,1.209,208,1.619,220,1.405,279,1.406,282,1.058,283,3.148,291,1.964,302,1.436,303,1.543,308,1.453,311,2.046,312,2.046,313,1.775,314,1.775,315,1.74,317,1.925,347,2.797,370,1.885,466,1.112,651,2.223,707,1.335,791,3.977,795,1.74,938,2.088,1136,1.523,1185,4.648,1186,2.878,1190,2.204,1204,3.52,1424,3.52,1466,2.099,1488,2.099,1498,2.543,1523,2.906,1528,2.651,1566,4.551,1575,2.872,1577,4.968,1584,4.004,1595,2.778,1597,2.916,2098,3.744,2467,4.374,2468,5.525,2469,5.525,2470,4.374,2471,4.929,2472,6.057,2473,6.057,2474,5.525,2475,6.057,2476,5.7,2477,5.403,2478,6.057,2479,5.2,2480,5.525,2481,4.374,2482,4.116,2483,4.116,2484,4.374,2485,4.374,2486,4.374]],["title/components/TsIconButtonComponent.html",[118,0.528,1468,1.727]],["body/components/TsIconButtonComponent.html",[2,0.055,3,0.04,4,0.035,5,0.05,7,0.533,11,0.61,13,1.272,14,1.256,16,0.942,18,1.699,19,0.008,20,0.92,21,0.85,22,0.77,25,0.098,27,0.184,33,0.048,35,0.942,37,0.044,39,0.005,40,0.005,43,1.419,49,1.388,51,1.175,52,1.566,53,2.254,54,2.202,70,1.595,81,1.735,82,1.516,84,1.091,95,0.694,96,1.509,101,1.359,104,1.231,105,1.175,108,1.451,117,1.836,118,0.977,132,1.532,149,2.308,151,3.141,158,1.809,163,1.074,175,4.59,176,1.175,190,1.074,201,2.364,204,1.005,208,1.224,210,3.036,211,2.197,217,1.829,220,1.062,248,1.809,249,1.308,257,1.45,273,1.551,275,2.472,279,1.221,284,1.624,287,2.108,288,1.631,289,1.771,290,2.104,291,1.416,301,1.735,302,1.601,303,1.763,304,1.665,306,1.598,308,1.207,311,1.699,312,1.699,313,1.474,314,1.474,315,1.445,332,0.923,336,1.483,347,1.359,464,2.254,466,0.924,508,1.152,568,2.485,614,1.516,617,1.551,640,2.686,707,0.963,722,2.472,795,1.445,837,1.624,861,3.112,878,1.45,880,3.004,893,2.686,912,3.111,1005,0.68,1051,2.397,1059,1.152,1064,3.083,1065,6.092,1080,1.587,1131,1.624,1136,1.152,1140,3.112,1150,2.046,1151,5.086,1167,1.551,1177,1.624,1190,1.445,1350,1.587,1351,1.79,1427,3.085,1443,1.746,1444,3.082,1445,1.79,1446,1.79,1447,2.484,1448,1.79,1449,1.79,1450,1.663,1451,1.79,1452,1.663,1453,1.79,1454,1.587,1455,1.79,1456,1.624,1457,1.624,1458,1.79,1459,1.663,1460,1.79,1461,1.624,1462,1.79,1463,1.624,1464,1.79,1465,1.79,1466,1.587,1467,2.484,1468,2.863,1469,1.663,1470,1.79,1471,1.587,1472,1.79,1473,1.624,1474,1.79,1475,1.624,1476,1.79,1477,1.624,1478,1.79,1479,1.624,1480,1.79,1481,1.79,1482,1.624,1483,1.79,1484,1.587,1485,1.79,1486,1.703,1487,1.79,1488,1.587,1489,1.624,1490,1.79,1491,1.624,1492,1.79,1493,1.703,1494,1.79,1495,1.483,1496,1.175,1497,1.79,1498,1.389,1499,1.79,1500,1.624,1501,1.79,1502,1.624,1503,1.79,1504,1.663,1505,1.79,1506,1.624,1507,1.79,1508,1.483,1509,1.79,1510,1.483,1511,2.484,1512,1.551,1513,1.79,1514,1.587,1515,1.79,1516,1.483,1517,1.79,1518,1.624,1519,1.79,1520,1.483,1521,1.79,1522,1.483,1523,1.587,1524,1.79,1525,1.624,1526,1.79,1527,1.79,1528,1.587,1529,1.79,1530,1.389,1531,1.79,1532,1.587,1533,1.746,1534,1.79,1553,3.733,2098,2.241,2487,7.589,2488,4.373,2489,6.069,2490,6.069,2491,6.069,2492,6.069,2493,7.91,2494,6.423,2495,6.971,2496,4.373,2497,3.961,2498,6.191,2499,4.373,2500,6.191,2501,4.373,2502,4.373,2503,4.373,2504,4.373,2505,6.069,2506,4.373,2507,4.373,2508,6.069,2509,4.373,2510,6.971,2511,4.373,2512,4.373,2513,3.307,2514,4.373]],["title/modules/TsIconButtonModule.html",[1002,0.62,1024,2.919]],["body/modules/TsIconButtonModule.html",[2,0.084,3,0.061,4,0.039,5,0.039,19,0.008,25,0.15,27,0.282,33,0.098,37,0.039,39,0.007,40,0.007,280,1.996,282,0.818,630,1.597,750,1.334,1002,1.092,1004,1.802,1005,1.042,1006,1.917,1024,6.053,1025,4.178,1045,2.335,1048,2.335,1064,2.713,1065,4.773,1067,3.437,1119,2.435,1120,1.999,1169,6.051,1170,5.072,1172,7.095,1468,3.626,1540,6.051,1541,3.676,2487,5.946,2515,5.946,2516,5.946,2517,6.707,2518,5.946,2519,6.707]],["title/components/TsIconComponent.html",[118,0.528,1469,1.727]],["body/components/TsIconComponent.html",[2,0.05,3,0.037,4,0.038,5,0.051,7,0.694,11,0.557,12,0.812,13,1.124,14,0.826,16,0.939,18,1.857,19,0.008,20,1.027,21,0.833,22,1.168,25,0.128,27,0.168,33,0.072,34,0.793,37,0.044,39,0.005,40,0.005,43,1.294,51,1.072,52,1.029,53,2.113,54,2.624,56,2.355,65,2.691,69,1.554,77,1.626,82,2.65,84,1.551,95,0.903,96,1.47,101,1.24,104,1.345,105,1.072,108,1.043,116,1.214,117,1.05,118,0.99,127,2.691,132,1.458,158,1.695,159,1.675,163,1.134,174,1.267,176,1.943,190,0.946,195,1.301,204,1.197,208,1.117,220,0.969,221,1.632,231,1.029,234,1.592,236,1.481,248,1.695,249,1.226,251,2.784,252,1.719,253,1.719,257,1.323,262,2.199,272,2.886,273,1.415,274,0.95,275,1.415,279,0.922,284,1.481,287,2.024,288,2.054,289,1.66,290,2.507,291,1.328,301,1.626,302,1.595,303,1.758,304,1.561,306,1.498,308,1.131,311,1.593,312,1.593,313,1.382,314,1.382,315,1.355,325,1.866,327,2.647,332,1.614,336,1.352,341,2.18,347,1.24,407,2.267,464,3.161,465,3.233,614,1.383,617,1.415,631,2.186,707,0.903,837,1.481,878,1.323,913,2.186,1005,0.62,1059,1.05,1064,3.229,1080,1.447,1131,1.481,1136,1.05,1148,2.355,1150,1.867,1167,1.415,1177,1.481,1190,1.355,1350,1.447,1351,1.632,1384,3.172,1421,3.017,1427,2.935,1430,2.454,1443,2.271,1444,2.959,1445,1.632,1446,1.632,1447,2.328,1448,1.632,1449,1.632,1450,1.517,1451,1.632,1452,1.517,1453,1.632,1454,1.447,1455,1.632,1456,1.481,1457,1.481,1458,1.632,1459,1.517,1460,1.632,1461,1.481,1462,1.632,1463,1.481,1464,1.632,1465,1.632,1466,1.447,1467,2.328,1468,1.517,1469,2.749,1470,1.632,1471,1.447,1472,1.632,1473,1.481,1474,1.632,1475,1.481,1476,1.632,1477,1.481,1478,1.632,1479,1.481,1480,1.632,1481,1.632,1482,1.481,1483,1.632,1484,1.447,1485,1.632,1486,1.554,1487,1.632,1488,1.447,1489,1.481,1490,1.632,1491,1.481,1492,1.632,1493,1.554,1494,1.632,1495,1.352,1496,1.072,1497,1.632,1498,1.267,1499,1.632,1500,1.481,1501,1.632,1502,1.481,1503,1.632,1504,1.517,1505,1.632,1506,1.481,1507,1.632,1508,1.352,1509,1.632,1510,1.352,1511,2.328,1512,1.415,1513,1.632,1514,1.447,1515,1.632,1516,1.352,1517,1.632,1518,1.481,1519,1.632,1520,1.352,1521,1.632,1522,1.352,1523,1.447,1524,1.632,1525,1.481,1526,1.632,1527,1.632,1528,1.447,1529,1.632,1530,1.267,1531,1.632,1532,1.447,1533,1.592,1534,1.632,1552,1.675,1556,3.838,1589,5.742,1780,3.013,2098,2.044,2121,3.239,2520,3.537,2521,6.631,2522,4.049,2523,5.689,2524,5.689,2525,5.689,2526,7.23,2527,6.631,2528,8.511,2529,6.631,2530,3.989,2531,7.23,2532,6.207,2533,5.689,2534,4.72,2535,5.689,2536,5.689,2537,3.989,2538,5.689,2539,3.989,2540,7.047,2541,3.989,2542,3.989,2543,3.989,2544,3.989,2545,3.989,2546,3.989,2547,3.989,2548,3.989,2549,3.017,2550,5.689,2551,3.989,2552,3.537,2553,3.537,2554,3.989,2555,3.989,2556,3.989,2557,3.989,2558,3.989,2559,3.017,2560,3.537,2561,3.989,2562,3.989,2563,6.207,2564,4.62,2565,5.044,2566,3.989,2567,5.689,2568,3.989,2569,3.989,2570,3.989]],["title/modules/TsIconModule.html",[1002,0.62,1025,2.066]],["body/modules/TsIconModule.html",[2,0.087,3,0.063,4,0.04,5,0.04,19,0.008,25,0.146,27,0.29,33,0.099,37,0.04,39,0.007,40,0.007,280,2.019,282,0.84,630,1.641,750,1.371,1002,1.11,1004,1.852,1005,1.071,1006,1.97,1025,4.245,1045,2.373,1048,2.373,1119,2.475,1120,2.054,1469,3.638,2560,6.111,2571,6.111,2572,6.111,2573,6.111,2574,6.892,2575,8.132,2576,8.132]],["title/classes/TsImageDimensions.html",[37,0.026,2413,3.434]],["body/classes/TsImageDimensions.html",[2,0.087,3,0.063,4,0.04,5,0.052,7,0.842,11,0.964,12,1.162,13,1.437,14,1.686,16,0.892,18,1.934,19,0.008,20,0.804,21,0.847,22,1.216,33,0.075,37,0.05,39,0.007,40,0.007,44,5.501,49,2.174,57,4.66,58,4.249,122,5.944,125,3.931,132,1.518,182,2.566,2399,7.261,2413,6.158,2577,6.908,2578,6.908,2579,6.908,2580,6.908,2581,6.908]],["title/modules/TsInputModule.html",[1002,0.62,1026,2.793]],["body/modules/TsInputModule.html",[2,0.08,3,0.058,4,0.037,5,0.037,19,0.008,25,0.152,27,0.268,33,0.097,37,0.037,39,0.006,40,0.006,104,1.29,226,1.817,280,1.95,282,1.019,630,1.514,750,1.264,1002,1.058,1004,1.709,1005,0.988,1006,1.817,1013,6.119,1025,4.126,1026,5.88,1043,4.971,1044,5.579,1045,2.261,1048,2.261,1050,5.637,1067,3.258,1091,3.612,1092,4.087,1097,4.524,1119,2.358,1120,1.894,1121,4.403,1122,5.227,1126,5.859,1127,4.808,1471,3.46,2582,5.637,2583,5.637,2584,5.637,2585,6.357,2586,5.637,2587,6.357,2588,7.409,2589,6.357,2590,7.747]],["title/components/TsLinkComponent.html",[118,0.528,1473,1.687]],["body/components/TsLinkComponent.html",[2,0.059,3,0.043,4,0.037,5,0.047,7,0.567,11,1.005,12,0.903,13,1.297,16,0.939,19,0.008,20,0.838,21,0.756,25,0.075,27,0.196,33,0.051,37,0.045,39,0.005,40,0.005,43,1.509,49,1.449,51,1.25,52,1.2,53,2.352,54,2.298,79,1.079,81,1.81,82,1.613,84,1.138,95,1.143,96,1.499,101,1.446,104,0.944,105,1.25,108,1.32,118,0.993,132,1.582,158,1.887,163,1.027,173,1.773,174,1.477,176,1.25,204,1.048,208,1.302,220,1.13,248,1.887,249,1.872,257,1.543,259,1.649,262,1.543,272,1.577,284,1.727,287,2.432,288,1.702,289,2.434,301,1.81,302,1.606,303,1.769,304,1.737,306,1.667,308,1.259,311,1.773,312,1.773,313,1.538,314,1.538,315,1.508,336,1.577,341,1.276,347,1.446,466,1.465,614,1.613,617,1.649,707,1.005,837,1.727,878,1.543,892,5.363,894,5.78,1005,0.723,1059,1.225,1064,2.441,1080,1.688,1131,1.727,1136,1.225,1150,2.177,1151,5.363,1167,1.649,1177,1.727,1190,1.508,1304,4.071,1350,1.688,1351,1.903,1408,2.643,1443,1.856,1444,3.163,1445,1.903,1446,1.903,1447,2.591,1448,1.903,1449,1.903,1450,1.769,1451,1.903,1452,1.769,1453,1.903,1454,1.688,1455,1.903,1456,1.727,1457,1.727,1458,1.903,1459,1.769,1460,1.903,1461,1.727,1462,1.903,1463,1.727,1464,1.903,1465,1.903,1466,1.688,1467,2.591,1468,1.769,1469,1.769,1470,1.903,1471,1.688,1472,1.903,1473,2.87,1474,1.903,1475,1.727,1476,1.903,1477,1.727,1478,1.903,1479,1.727,1480,1.903,1481,1.903,1482,1.727,1483,1.903,1484,1.688,1485,1.903,1486,1.812,1487,1.903,1488,1.688,1489,1.727,1490,1.903,1491,1.727,1492,1.903,1493,1.812,1494,1.903,1495,1.577,1496,1.25,1497,1.903,1498,1.477,1499,1.903,1500,1.727,1501,1.903,1502,1.727,1503,1.903,1504,1.769,1505,1.903,1506,1.727,1507,1.903,1508,1.577,1509,1.903,1510,1.577,1511,2.591,1512,1.649,1513,1.903,1514,1.688,1515,1.903,1516,1.577,1517,1.903,1518,1.727,1519,1.903,1520,1.577,1521,1.903,1522,1.577,1523,1.688,1524,1.903,1525,1.727,1526,1.903,1527,1.903,1528,1.688,1529,1.903,1530,1.477,1531,1.903,1532,1.688,1533,1.856,1534,1.903,1663,3.777,1868,3.777,1957,4.093,2552,6.853,2591,4.651,2592,6.332,2593,6.332,2594,6.332,2595,7.729,2596,7.199,2597,6.332,2598,4.651,2599,4.651,2600,4.651,2601,4.651,2602,5.614,2603,4.651,2604,4.651,2605,4.651,2606,3.31]],["title/modules/TsLinkModule.html",[1002,0.62,1027,3.064]],["body/modules/TsLinkModule.html",[2,0.085,3,0.062,4,0.039,5,0.039,19,0.008,25,0.149,27,0.285,33,0.099,37,0.039,39,0.007,40,0.007,280,2.005,282,0.827,630,1.614,750,1.348,1002,1.1,1004,1.822,1005,1.054,1006,1.938,1025,4.188,1027,6.363,1045,2.35,1048,2.35,1067,3.475,1119,2.451,1120,2.02,1473,3.546,2607,6.011,2608,6.011,2609,6.78,2610,6.011,2611,6.78,2612,7.14,2613,5.505,2614,8.053]],["title/components/TsLoadingOverlayComponent.html",[118,0.528,1475,1.687]],["body/components/TsLoadingOverlayComponent.html",[2,0.068,3,0.049,4,0.04,5,0.031,7,0.656,19,0.008,20,0.901,25,0.086,27,0.227,33,0.058,37,0.047,39,0.006,40,0.006,82,1.867,101,2.88,104,1.092,105,1.447,118,1.03,132,1.534,220,1.308,248,2.079,249,1.503,257,1.786,284,1.999,287,2.294,288,1.875,289,2.036,291,1.629,302,1.615,303,1.781,306,1.838,308,1.388,313,1.695,314,1.695,315,1.662,318,1.73,336,1.825,347,2.169,465,3.965,466,1.062,614,1.867,617,1.909,677,4.293,707,1.108,837,1.999,878,1.786,904,4.293,1005,0.837,1059,1.418,1064,1.825,1070,4.071,1080,1.953,1131,1.999,1136,1.418,1167,1.909,1177,1.999,1190,1.662,1350,1.953,1351,2.203,1444,3.352,1445,2.203,1446,2.203,1447,2.856,1448,2.203,1449,2.203,1450,2.047,1451,2.203,1452,2.047,1453,2.203,1454,1.953,1455,2.203,1456,1.999,1457,1.999,1458,2.203,1459,2.047,1460,2.203,1461,1.999,1462,2.203,1463,1.999,1464,2.203,1465,2.203,1466,1.953,1467,2.856,1468,2.047,1469,2.047,1470,2.203,1471,1.953,1472,2.203,1473,1.999,1474,2.203,1475,3.042,1476,2.203,1477,1.999,1478,2.203,1479,1.999,1480,2.203,1481,2.203,1482,1.999,1483,2.203,1484,1.953,1485,2.203,1486,2.097,1487,2.203,1488,1.953,1489,1.999,1490,2.203,1491,1.999,1492,2.203,1493,2.097,1494,2.203,1495,1.825,1496,1.447,1497,2.203,1498,1.71,1499,2.203,1500,1.999,1501,2.203,1502,1.999,1503,2.203,1504,2.047,1505,2.203,1506,1.999,1507,2.203,1508,1.825,1509,2.203,1510,1.825,1511,2.856,1512,1.909,1513,2.203,1514,1.953,1515,2.203,1516,1.825,1517,2.203,1518,1.999,1519,2.203,1520,1.825,1521,2.203,1522,1.825,1523,1.953,1524,2.203,1525,3.042,1526,2.203,1527,2.203,1528,1.953,1529,2.203,1530,1.71,1531,2.203,1532,1.953,1533,2.149,1534,2.203,1985,6.857,2615,4.371,2616,5.383,2617,6.187,2618,6.978]],["title/directives/TsLoadingOverlayDirective.html",[707,0.721,1525,1.687]],["body/directives/TsLoadingOverlayDirective.html",[0,2.003,2,0.06,3,0.044,4,0.028,5,0.052,7,0.786,10,2.572,11,0.666,12,0.919,13,1.358,14,1.334,16,0.937,18,2.043,19,0.008,20,0.849,21,0.841,22,1.284,25,0.131,27,0.201,28,2.003,33,0.052,34,1.281,35,1.388,37,0.028,39,0.005,40,0.005,79,1.22,84,1.404,95,1.24,96,1.404,101,2.613,118,0.849,132,1.603,158,1.92,163,1.164,174,2.046,176,1.283,184,3.197,190,1.247,193,5.27,195,1.866,199,2.473,210,2.981,212,5.924,215,3.319,216,2.985,231,1.663,232,1.583,234,1.905,236,1.772,249,1.028,273,1.692,282,0.786,288,1.283,294,2.393,301,1.842,302,1.066,308,1.622,318,1.597,332,1.944,335,3.662,389,3.863,407,2.712,497,1.422,501,3.197,521,3.662,522,3.553,568,3.662,651,1.961,677,3.964,707,1.295,861,3.396,938,1.842,1070,6.769,1136,1.257,1139,2.046,1140,3.396,1150,2.233,1171,5.907,1214,3.875,1384,2.572,1443,1.905,1475,1.772,1525,2.393,1756,3.939,1985,6.169,2009,6.926,2010,4.231,2079,5.924,2100,4.231,2126,3.875,2615,7.268,2617,7.619,2619,4.772,2620,6.443,2621,6.443,2622,7.811,2623,7.811,2624,6.443,2625,7.295,2626,8.593,2627,7.295,2628,7.811,2629,8.593,2630,6.443,2631,7.295,2632,6.443,2633,6.443,2634,6.443,2635,6.443,2636,4.772,2637,4.772,2638,8.738,2639,4.772,2640,8.157,2641,4.772,2642,4.772,2643,4.772,2644,4.231,2645,4.772,2646,6.443,2647,4.772,2648,4.772,2649,4.772,2650,6.443,2651,4.772,2652,4.772,2653,4.772,2654,4.772,2655,4.772,2656,4.772,2657,4.772,2658,4.772,2659,4.772,2660,6.443]],["title/modules/TsLoadingOverlayModule.html",[1002,0.62,1028,3.232]],["body/modules/TsLoadingOverlayModule.html",[2,0.085,3,0.062,4,0.039,5,0.039,19,0.008,25,0.146,27,0.284,33,0.099,37,0.039,39,0.007,40,0.007,101,2.667,280,2.002,282,0.824,630,1.609,750,1.344,1002,1.097,1004,1.816,1005,1.05,1006,1.932,1028,6.709,1045,2.346,1048,2.346,1070,5.11,1119,2.446,1120,2.014,1475,3.479,1525,3.545,2063,7.127,2615,5.487,2644,5.992,2661,5.992,2662,5.992,2663,5.992,2664,6.758,2665,8.038]],["title/components/TsLoginFormComponent.html",[118,0.528,1477,1.687]],["body/components/TsLoginFormComponent.html",[0,1.431,2,0.038,3,0.027,4,0.027,5,0.051,7,0.561,10,1.837,11,0.418,12,0.657,13,1.374,14,0.953,16,0.954,18,1.289,19,0.008,20,0.789,21,0.841,22,0.81,23,2.286,25,0.109,27,0.126,30,1.596,33,0.05,35,0.646,37,0.045,39,0.004,40,0.004,41,0.365,49,1.282,61,1.444,62,1.837,63,2.832,69,1.793,70,1.282,79,1.074,82,1.039,84,1.448,95,0.476,96,1.589,101,0.932,104,1.561,105,0.806,108,1.478,117,0.789,118,0.918,120,1.77,131,1.343,132,1.232,151,2.132,154,1.431,158,1.372,163,1.214,173,1.899,174,1.462,176,0.806,179,2.832,190,0.657,192,3.269,195,1.438,199,1.016,201,1.167,204,1.306,211,1.835,214,2.7,217,1.527,218,4.042,219,1.932,220,0.728,226,0.857,248,1.372,249,1.355,257,0.994,259,3.352,270,1.118,274,1.096,275,2.23,279,1.348,282,0.767,284,1.113,287,2.383,288,1.237,289,2.427,291,1.074,301,1.316,302,1.57,303,1.719,304,1.263,306,1.212,308,0.915,313,1.118,314,1.118,315,1.096,318,1.141,321,3.309,332,1.625,335,1.703,336,2.528,341,1.725,347,0.932,370,0.773,442,5.815,458,1.984,466,1.247,467,2.616,469,4.242,492,2.094,497,0.893,508,2.078,517,3.276,521,1.703,579,1.536,582,1.536,614,3.167,617,1.063,630,1.918,641,2.109,706,1.596,707,0.731,713,1.316,750,0.596,768,1.927,769,1.703,811,5.469,837,1.113,848,1.832,878,0.994,885,3.868,886,2.832,893,2.037,917,2.832,948,2.286,949,2.286,992,2.359,1005,0.466,1044,3.868,1059,0.789,1064,1.016,1072,6.602,1080,1.088,1097,2.133,1131,1.113,1136,0.789,1139,2.274,1150,1.403,1167,1.987,1177,1.113,1190,1.096,1191,2.218,1198,1.837,1208,4.604,1209,3.712,1350,1.088,1351,1.227,1384,1.837,1421,4.755,1443,1.196,1444,2.573,1445,1.227,1446,1.227,1447,1.884,1448,1.227,1449,1.227,1450,1.14,1451,1.227,1452,1.14,1453,1.227,1454,2.706,1455,1.227,1456,1.113,1457,1.113,1458,1.227,1459,1.14,1460,1.227,1461,1.113,1462,1.227,1463,1.113,1464,1.227,1465,1.227,1466,1.088,1467,1.884,1468,1.14,1469,1.14,1470,1.227,1471,2.598,1472,1.227,1473,2.081,1474,1.227,1475,1.113,1476,1.227,1477,2.335,1478,1.227,1479,1.113,1480,1.227,1481,1.227,1482,1.113,1483,1.227,1484,1.088,1485,1.227,1486,1.167,1487,1.227,1488,1.088,1489,1.113,1490,1.227,1491,1.113,1492,1.227,1493,1.167,1494,1.227,1495,1.016,1496,0.806,1497,1.227,1498,0.952,1499,1.227,1500,1.113,1501,1.227,1502,1.113,1503,1.227,1504,1.14,1505,1.227,1506,1.113,1507,1.227,1508,1.016,1509,1.227,1510,1.016,1511,1.884,1512,1.063,1513,1.227,1514,1.088,1515,1.227,1516,1.016,1517,1.227,1518,1.113,1519,1.227,1520,1.016,1521,1.227,1522,1.016,1523,1.088,1524,1.227,1525,1.113,1526,1.227,1527,1.227,1528,1.088,1529,1.227,1530,0.952,1531,1.227,1532,1.088,1533,1.196,1534,1.227,1548,2.959,1586,2.959,1788,2.438,1881,4.947,2098,2.359,2189,3.105,2203,3.481,2213,4.237,2224,4.242,2243,3.481,2317,2.616,2666,7.089,2667,2.657,2668,5.192,2669,5.815,2670,7.374,2671,4.081,2672,4.081,2673,4.081,2674,5.575,2675,5.575,2676,5.575,2677,5.575,2678,6.349,2679,6.349,2680,4.969,2681,6.015,2682,4.969,2683,4.969,2684,6.015,2685,6.015,2686,2.657,2687,4.55,2688,4.603,2689,2.997,2690,2.997,2691,2.997,2692,3.738,2693,5.575,2694,4.081,2695,2.997,2696,2.997,2697,2.997,2698,3.276,2699,2.997,2700,4.081,2701,2.997,2702,4.081,2703,5.639,2704,4.081,2705,3.481,2706,2.997,2707,3.738,2708,4.969,2709,2.997,2710,2.997,2711,4.969,2712,2.997,2713,2.997,2714,3.276,2715,2.997,2716,4.081,2717,2.657,2718,2.657,2719,2.434,2720,2.657,2721,2.657,2722,2.657,2723,2.657,2724,2.657,2725,4.081,2726,4.081,2727,2.657,2728,2.657,2729,2.657]],["title/modules/TsLoginFormModule.html",[1002,0.62,1029,3.232]],["body/modules/TsLoginFormModule.html",[2,0.078,3,0.057,4,0.036,5,0.036,19,0.008,25,0.152,27,0.262,33,0.096,37,0.036,39,0.006,40,0.006,226,1.781,280,1.933,282,1.01,327,2.487,614,2.653,630,1.483,750,1.239,1002,1.045,1004,1.674,1005,0.968,1006,1.781,1014,4.78,1018,6.089,1026,5.552,1027,6.089,1029,6.844,1039,6.089,1044,5.552,1045,2.233,1048,2.233,1051,3.414,1054,5.524,1068,4.711,1069,5.524,1072,4.711,1087,5.524,1097,4.434,1119,2.329,1120,1.856,1122,5.163,1180,4.518,1181,3.414,1477,3.51,2666,5.059,2730,5.524,2731,5.524,2732,6.23,2733,5.524,2734,6.23,2735,6.23,2736,7.652]],["title/interfaces/TsLoginFormResponse.html",[41,0.554,2719,3.687]],["body/interfaces/TsLoginFormResponse.html",[0,1.385,2,0.056,3,0.041,4,0.026,5,0.026,7,0.543,10,1.778,11,0.622,12,0.877,13,1.387,14,0.922,16,0.91,19,0.008,21,0.689,25,0.128,27,0.187,30,1.544,33,0.067,35,0.96,37,0.046,39,0.005,40,0.005,41,0.75,49,1.019,61,2.146,62,1.778,63,2.74,69,1.735,70,1.019,79,1.218,84,1.516,95,0.976,96,1.617,104,1.54,117,1.173,118,0.883,120,3.63,131,1.3,132,0.979,151,2.084,154,1.385,158,1.327,163,0.877,173,1.971,174,1.415,179,2.74,192,3.392,195,1.406,199,2.084,201,1.735,204,1.318,211,2.054,214,2.962,217,1.493,218,3.952,219,1.87,220,1.082,226,1.273,249,0.96,259,3.369,270,1.082,274,1.061,275,2.18,279,1.335,282,0.75,287,2.363,288,1.197,289,2.403,291,1.04,301,1.273,302,0.737,303,1.127,304,1.222,306,1.173,308,0.886,313,1.082,314,1.082,315,1.061,318,1.104,321,4.156,332,1.603,335,2.531,336,2.573,341,1.686,370,1.15,442,5.716,458,1.919,466,1.308,467,4.313,469,4.147,492,2.026,497,1.327,508,2.097,517,3.17,521,2.531,579,3.151,582,2.283,614,3.178,630,1.896,641,2.188,706,1.544,750,0.886,768,2.864,769,2.531,811,5.639,848,1.807,885,3.781,886,2.74,893,1.971,917,2.74,948,2.212,949,2.212,992,2.283,1044,3.781,1072,3.369,1097,3.17,1139,1.952,1167,1.58,1191,2.146,1198,1.778,1208,4.525,1209,3.63,1384,1.778,1421,4.649,1454,2.554,1471,2.554,1473,1.654,1477,1.654,1586,2.864,1788,2.359,1881,4.525,2098,2.283,2189,3.005,2203,3.369,2213,4,2224,4.147,2243,3.369,2317,2.531,2666,3.617,2667,3.949,2668,5.888,2669,4.992,2670,7.3,2671,3.949,2672,3.949,2673,3.949,2674,3.949,2675,3.949,2676,3.949,2677,3.949,2678,5.451,2679,5.451,2680,3.949,2681,3.949,2682,3.949,2683,3.949,2684,3.949,2685,5.451,2687,3.617,2692,3.617,2693,5.451,2694,3.949,2698,3.17,2700,3.949,2702,3.949,2703,5.74,2704,3.949,2705,3.369,2707,3.617,2708,7.061,2711,5.451,2714,3.17,2716,3.949,2717,3.949,2718,3.949,2719,4.992,2720,5.451,2721,3.949,2722,3.949,2723,3.949,2724,3.949,2725,5.451,2726,5.451,2727,3.949,2728,3.949,2729,3.949]],["title/modules/TsMaskModule.html",[1002,0.62,1030,3.232]],["body/modules/TsMaskModule.html",[2,0.087,3,0.063,4,0.04,5,0.04,19,0.008,25,0.144,27,0.29,33,0.099,37,0.04,39,0.007,40,0.007,280,2.018,282,0.839,630,1.639,750,1.369,836,6.539,837,3.57,1002,1.11,1004,1.85,1005,1.07,1006,1.968,1030,6.64,1045,2.372,1048,2.372,1119,2.473,1120,2.052,2737,6.104,2738,6.104,2739,6.104,2740,6.104,2741,6.885,2742,8.127]],["title/components/TsMenuComponent.html",[118,0.528,1479,1.687]],["body/components/TsMenuComponent.html",[2,0.042,3,0.031,4,0.029,5,0.051,7,0.41,8,2.798,11,0.469,12,0.716,13,1.41,16,0.972,19,0.008,20,0.775,21,0.87,22,0.592,23,1.669,25,0.107,27,0.141,28,1.868,30,1.165,33,0.072,37,0.039,39,0.004,40,0.004,43,1.09,51,0.903,52,1.295,53,2.231,54,2.18,62,1.341,64,1.192,66,2.473,67,2.267,70,0.769,76,2.893,82,1.165,84,1.464,95,0.797,96,1.514,101,1.044,104,0.682,105,0.903,107,3.548,108,1.676,115,1.487,116,1.527,118,0.902,127,2.267,130,1.165,132,1.568,150,2.895,151,2.703,158,1.001,163,1.184,173,1.866,174,1.594,176,0.903,180,0.833,190,1.067,195,1.525,204,1.238,208,0.941,210,1.192,216,2.459,219,2.107,220,0.816,248,1.496,249,1.294,251,2.522,252,1.448,253,1.448,257,1.114,259,2.654,262,1.665,272,1.702,273,1.192,274,1.782,275,1.78,277,1.527,279,0.814,282,0.612,284,1.248,287,2.095,288,1.349,289,1.945,290,1.74,297,5.048,301,1.435,302,1.581,303,1.734,304,1.377,306,1.322,308,0.998,311,1.405,312,1.405,313,1.219,314,1.219,315,1.195,318,1.244,332,1.58,336,1.702,347,2.072,390,1.669,464,2.649,466,0.914,501,2.728,580,1.044,605,4.276,614,1.165,617,1.192,640,1.487,641,1.56,663,3.079,679,1.722,706,3.18,707,0.797,720,3.572,747,1.572,758,3.416,795,1.195,799,2.994,837,1.248,878,1.114,880,2.589,905,5.013,949,2.493,1005,0.522,1059,0.885,1064,2.629,1080,1.219,1094,1.984,1131,1.248,1136,0.885,1139,1.594,1150,1.572,1167,2.131,1177,1.248,1186,1.665,1190,1.195,1220,2.067,1229,1.909,1299,1.528,1350,1.219,1351,1.375,1353,2.493,1354,2.572,1384,1.341,1387,5.125,1388,4.879,1409,4.075,1430,2.067,1433,2.984,1443,1.341,1444,2.728,1445,1.375,1446,1.375,1447,2.054,1448,1.375,1449,1.375,1450,1.278,1451,1.375,1452,1.278,1453,1.375,1454,1.219,1455,1.375,1456,1.248,1457,1.248,1458,1.375,1459,1.278,1460,1.375,1461,1.248,1462,1.375,1463,1.248,1464,1.375,1465,1.375,1466,1.219,1467,2.054,1468,1.278,1469,1.278,1470,1.375,1471,1.219,1472,1.375,1473,1.248,1474,1.375,1475,1.248,1476,1.375,1477,1.248,1478,1.375,1479,2.475,1480,1.375,1481,1.375,1482,1.248,1483,1.375,1484,1.219,1485,1.375,1486,1.309,1487,1.375,1488,1.219,1489,1.248,1490,1.375,1491,1.248,1492,1.375,1493,1.309,1494,1.375,1495,1.139,1496,0.903,1497,1.375,1498,1.067,1499,1.375,1500,1.248,1501,1.375,1502,1.248,1503,1.375,1504,1.278,1505,1.375,1506,1.248,1507,1.375,1508,1.139,1509,1.375,1510,1.139,1511,2.054,1512,1.192,1513,1.375,1514,1.219,1515,1.375,1516,1.139,1517,1.375,1518,1.248,1519,1.375,1520,1.139,1521,1.375,1522,1.139,1523,1.219,1524,1.375,1525,1.248,1526,1.375,1527,1.375,1528,1.219,1529,1.375,1530,1.067,1531,1.375,1532,1.219,1533,1.341,1534,1.375,1551,2.541,1552,1.41,1556,2.267,1756,3.141,1780,2.658,1796,2.349,1881,3.227,2014,2.979,2214,2.267,2317,1.909,2606,3.572,2743,2.979,2744,5.019,2745,5.019,2746,5.019,2747,6.665,2748,6.665,2749,6.665,2750,8.297,2751,6.008,2752,6.008,2753,6.008,2754,6.008,2755,7.132,2756,3.36,2757,5.327,2758,3.36,2759,3.36,2760,3.36,2761,5.327,2762,3.36,2763,5.327,2764,3.36,2765,3.36,2766,6.324,2767,4.45,2768,5.019,2769,3.36,2770,3.36,2771,3.36,2772,3.36,2773,6.665,2774,3.36,2775,7.482,2776,3.36,2777,7.482,2778,3.36,2779,3.36,2780,5.019,2781,3.36,2782,3.36,2783,5.019,2784,3.36,2785,2.979,2786,3.36,2787,2.979,2788,2.979,2789,3.36,2790,2.16,2791,3.36,2792,3.36,2793,3.36,2794,3.36,2795,3.36,2796,3.36,2797,3.36,2798,2.728,2799,3.36,2800,2.728,2801,3.36,2802,3.36,2803,2.728,2804,5.019,2805,3.36,2806,3.36,2807,3.36,2808,3.36,2809,3.36,2810,3.36]],["title/modules/TsMenuModule.html",[1002,0.62,1031,3.064]],["body/modules/TsMenuModule.html",[2,0.084,3,0.061,4,0.038,5,0.038,19,0.008,25,0.151,27,0.28,33,0.098,37,0.038,39,0.007,40,0.007,280,1.988,282,0.81,630,1.582,750,1.321,1002,1.086,1004,1.785,1005,1.032,1006,1.899,1014,4.853,1025,4.169,1031,6.403,1045,2.322,1048,2.322,1051,3.64,1067,3.404,1119,2.421,1120,1.979,1169,6.016,1170,5.023,1479,3.537,2803,5.393,2811,5.889,2812,5.889,2813,6.642,2814,5.889,2815,6.642,2816,7.054,2817,7.955]],["title/interfaces/TsNavigationActionItem.html",[41,0.554,897,2.793]],["body/interfaces/TsNavigationActionItem.html",[0,1.103,2,0.045,3,0.033,4,0.021,5,0.021,7,0.433,10,1.417,11,0.495,12,0.746,13,1.354,14,0.735,16,0.851,19,0.008,20,0.797,21,0.772,25,0.1,27,0.149,28,1.103,33,0.086,34,1.733,35,1.337,37,0.036,39,0.004,40,0.004,41,0.962,49,1.566,66,1.231,68,1.71,70,1.42,76,3.436,77,1.774,79,1.216,81,1.957,84,1.312,94,2.519,95,0.83,96,1.23,105,0.954,109,2.679,116,2.625,117,1.922,118,0.797,119,1.259,125,2.253,131,1.811,132,0.78,135,1.35,149,2.36,151,2.104,154,1.929,158,1.058,159,1.49,163,0.746,165,2.679,171,1.819,173,0.994,180,0.88,182,1.318,184,1.453,187,1.417,190,1.231,195,1.746,199,1.204,204,0.587,208,0.994,209,2.54,210,2.201,211,1.811,213,2.183,216,2.139,217,1.27,219,1.49,220,0.862,231,0.916,232,1.177,239,1.763,249,1.745,255,1.763,267,1.945,270,1.27,274,1.478,277,1.08,279,1.006,287,2.21,288,0.954,289,2.228,291,1.598,294,1.318,301,1.015,302,0.587,303,0.959,304,0.974,306,0.935,308,0.706,311,0.994,312,0.994,313,0.862,314,0.862,315,0.845,317,1.42,318,0.88,322,2.679,327,2.477,331,1.35,332,1.667,341,0.974,364,1.625,365,1.625,369,1.49,370,1.767,372,1.53,399,4.882,400,2.865,466,1.313,467,3.526,495,2.36,497,1.558,500,2.904,501,1.453,508,1.377,516,2.152,530,2.183,531,2.865,557,1.897,579,1.819,580,2.269,603,1.204,608,1.819,618,2.096,639,2.096,640,1.571,641,2.128,661,1.383,663,2.679,670,3.74,671,1.383,674,1.945,679,4.045,706,2.53,712,2.417,713,1.494,731,2.017,747,1.661,750,1.234,758,1.819,795,1.245,848,1.245,876,4.401,877,2.282,878,2.618,879,3.527,880,1.53,881,2.395,882,5.325,883,4.058,884,2.395,885,3.216,886,2.183,887,2.395,888,3.361,889,2.395,890,3.527,891,3.216,892,4.692,893,3.773,894,3.361,895,2.282,896,2.395,897,3.817,898,3.527,899,5.406,900,2.395,901,3.361,902,1.453,903,3.527,904,2.183,905,1.88,906,2.395,907,2.395,908,2.395,909,2.395,910,2.096,911,2.395,912,3.18,913,4.184,914,2.395,915,3.527,916,2.395,917,2.183,918,3.527,919,4.042,920,2.395,921,2.395,922,4.187,923,3.527,924,2.395,925,2.395,926,2.395,927,2.395,928,2.395,929,2.395,930,2.395,931,3.527,932,2.395,933,2.395,934,2.395,935,3.527,936,3.527,937,4.619,938,1.015,939,3.361,940,2.395,941,2.395,942,2.395,943,2.395,944,2.395,945,2.395,946,2.395,947,2.395,948,1.763,949,1.763,950,2.395,951,3.527,952,2.395,953,2.395,954,2.395,955,3.361,956,2.395,957,2.282,958,2.395,959,3.527,960,1.661,961,2.395,962,1.819,963,2.395,964,2.017,965,2.395,966,2.395,967,2.395,968,3.361,969,2.395,970,2.395,971,3.216,972,2.395,973,2.395,974,2.017,975,2.395,976,3.527,977,3.527,978,3.527,979,3.527,980,3.087,981,2.395,982,3.527,983,4.619,984,2.395,985,2.395,986,3.527,987,3.817,988,2.395,989,2.395,990,1.383,991,1.696,992,1.819,993,2.395,994,2.395,995,2.395,996,2.395,997,1.571,998,2.395,999,2.282,1000,2.395,1001,2.395,1716,3.216]],["title/components/TsNavigationComponent.html",[118,0.528,878,1.506]],["body/components/TsNavigationComponent.html",[0,1.237,2,0.031,3,0.023,4,0.023,5,0.051,7,0.606,10,1.589,11,0.347,12,0.568,13,1.388,14,0.824,16,0.939,18,1.59,19,0.008,20,0.924,21,0.832,22,1,23,1.977,25,0.08,27,0.105,28,0.774,33,0.076,34,1.604,35,1.338,37,0.033,39,0.003,40,0.003,41,0.808,49,1.652,66,0.863,68,1.918,70,1.421,76,3.428,77,1.775,79,1.204,81,1.624,82,0.863,84,1.25,94,2.993,95,0.789,96,1.19,101,0.774,104,0.505,105,1.336,108,1.042,109,2.04,116,2.544,117,1.496,118,0.867,119,0.883,125,2.448,131,1.933,132,1.093,135,1.514,149,2.362,151,2.246,154,1.546,158,1.186,159,1.671,163,0.992,165,2.04,171,2.04,173,0.697,176,0.669,180,0.617,182,1.478,184,1.629,187,0.994,190,1.264,195,1.817,199,1.35,204,0.412,208,0.697,209,2.711,210,2.203,211,1.658,213,3.059,216,2.035,217,1.38,219,1.671,220,0.605,231,0.643,232,0.826,239,1.237,248,1.186,249,1.833,255,1.977,257,0.826,267,1.365,270,1.38,273,0.883,274,1.184,277,0.758,279,0.806,284,0.925,287,2.289,288,1.07,289,2.318,291,1.686,294,1.478,301,1.138,302,1.55,303,1.692,304,1.092,306,1.048,308,0.791,311,1.114,312,1.114,313,0.967,314,0.967,315,0.948,317,0.911,318,0.987,322,2.911,327,2.479,331,1.514,332,1.781,336,0.844,341,0.683,347,0.774,364,1.237,365,1.237,369,1.045,370,1.466,372,1.073,399,4.827,400,2.181,466,1.259,467,3.228,495,2.362,497,1.186,500,2.327,501,2.325,508,1.048,516,1.38,530,2.448,531,1.365,557,1.804,579,1.276,580,1.766,603,1.35,608,2.04,614,0.863,617,0.883,618,1.47,639,1.47,640,1.102,641,2.245,661,1.55,663,2.548,670,3.998,671,0.97,674,1.365,679,4.189,706,2.648,707,0.632,712,2.213,713,1.138,731,2.262,747,1.165,750,0.989,758,2.911,795,0.948,837,0.925,848,1.184,876,3.197,877,1.601,878,2.47,879,2.685,880,1.073,881,1.68,882,5.441,883,4.091,884,1.68,885,3.494,886,2.448,887,1.68,888,3.197,889,1.68,890,2.685,891,2.448,892,4.644,893,3.197,894,3.197,895,1.601,896,1.68,897,2.448,898,1.68,899,5.373,900,1.68,901,3.197,902,1.019,903,3.832,904,2.448,905,2.108,906,2.685,907,2.685,908,2.685,909,2.685,910,2.35,911,3.832,912,3.394,913,3.811,914,2.685,915,2.685,916,1.68,917,2.448,918,4.469,919,3.667,920,3.832,921,3.832,922,3.355,923,2.685,924,1.68,925,1.68,926,3.832,927,2.685,928,1.68,929,3.355,930,1.68,931,2.685,932,1.68,933,1.68,934,1.68,935,2.685,936,2.685,937,3.832,938,1.138,939,3.652,940,4.19,941,1.68,942,3.832,943,1.68,944,3.832,945,2.685,946,1.68,947,1.68,948,1.977,949,1.977,950,3.832,951,2.685,952,1.68,953,1.68,954,1.68,955,2.559,956,1.68,957,1.601,958,1.68,959,3.355,960,1.863,961,2.685,962,2.04,963,2.685,964,1.415,965,1.68,966,1.68,967,1.68,968,2.559,969,1.68,970,1.68,971,2.448,972,1.68,973,1.68,974,2.262,975,3.832,976,2.685,977,2.685,978,2.685,979,2.685,980,2.35,981,1.68,982,2.685,983,3.832,984,1.68,985,1.68,986,2.685,987,3.494,988,1.68,989,1.68,990,0.97,991,1.614,992,1.276,993,1.68,994,1.68,995,1.68,996,1.68,997,1.102,998,1.68,999,2.559,1000,2.685,1001,1.68,1005,0.387,1059,0.656,1064,0.844,1080,0.903,1131,0.925,1136,0.656,1139,1.264,1150,1.165,1167,0.883,1177,0.925,1190,0.948,1350,0.903,1351,1.019,1443,0.994,1444,2.325,1445,1.019,1446,1.019,1447,1.629,1448,1.019,1449,1.019,1450,0.947,1451,1.019,1452,0.947,1453,1.019,1454,0.903,1455,1.019,1456,0.925,1457,0.925,1458,1.019,1459,0.947,1460,1.019,1461,0.925,1462,1.019,1463,0.925,1464,1.019,1465,1.019,1466,0.903,1467,1.629,1468,0.947,1469,0.947,1470,1.019,1471,0.903,1472,1.019,1473,0.925,1474,1.019,1475,0.925,1476,1.019,1477,0.925,1478,1.019,1479,0.925,1480,1.019,1481,1.019,1482,0.925,1483,1.019,1484,0.903,1485,1.019,1486,0.97,1487,1.019,1488,0.903,1489,0.925,1490,1.019,1491,0.925,1492,1.019,1493,0.97,1494,1.019,1495,0.844,1496,0.669,1497,1.019,1498,0.791,1499,1.019,1500,0.925,1501,1.019,1502,0.925,1503,1.019,1504,0.947,1505,1.019,1506,0.925,1507,1.019,1508,0.844,1509,1.019,1510,0.844,1511,1.629,1512,0.883,1513,1.019,1514,0.903,1515,1.019,1516,0.844,1517,1.019,1518,0.925,1519,1.019,1520,0.844,1521,1.019,1522,0.844,1523,0.903,1524,1.019,1525,0.925,1526,1.019,1527,1.019,1528,0.903,1529,1.019,1530,0.791,1531,1.019,1532,0.903,1533,0.994,1534,1.019,1932,2.208,2818,3.98,2819,3.98,2820,4.972,2821,2.49,2822,3.98,2823,2.49,2824,2.49,2825,2.49,2826,2.49,2827,2.49,2828,2.49,2829,2.49,2830,2.49,2831,2.49,2832,2.49,2833,2.49,2834,2.49,2835,2.49,2836,2.49,2837,2.49,2838,2.49,2839,2.49,2840,2.49,2841,2.49,2842,2.49,2843,2.49,2844,2.49,2845,2.49,2846,7.638,2847,3.98]],["title/interfaces/TsNavigationLinkItem.html",[41,0.554,891,2.793]],["body/interfaces/TsNavigationLinkItem.html",[0,1.097,2,0.044,3,0.032,4,0.02,5,0.02,7,0.43,10,1.408,11,0.492,12,0.742,13,1.353,14,0.73,16,0.85,19,0.008,20,0.794,21,0.712,25,0.099,27,0.148,28,1.097,33,0.086,34,1.731,35,1.332,37,0.036,39,0.004,40,0.004,41,0.961,49,1.561,66,1.223,68,1.7,70,1.414,76,3.438,77,1.767,79,1.264,81,1.951,84,1.308,94,2.507,95,0.826,96,1.227,105,0.948,109,2.667,116,2.649,117,1.917,118,0.794,119,1.845,125,2.242,131,1.804,132,0.775,135,1.341,149,2.351,151,2.097,154,1.618,158,1.051,159,1.481,163,0.742,165,2.667,171,1.808,173,0.988,180,0.874,182,1.31,184,1.444,187,1.408,190,1.229,195,1.742,199,1.196,204,0.584,208,0.988,209,2.53,210,2.193,211,1.804,213,2.17,216,2.13,217,1.264,219,1.481,220,0.857,231,0.91,232,1.17,239,1.752,249,1.742,255,1.752,267,1.933,270,1.264,274,1.472,277,1.074,279,1.18,287,2.206,288,0.948,289,2.223,291,1.593,294,1.31,301,1.008,302,0.584,303,0.954,304,0.968,306,0.929,308,0.701,311,0.988,312,0.988,313,0.857,314,0.857,315,0.84,317,1.414,318,0.874,322,2.667,327,2.468,331,1.341,332,1.664,341,0.968,364,1.618,365,1.618,369,1.481,370,1.761,372,1.52,399,4.874,400,2.852,466,1.324,467,3.514,495,2.351,497,1.551,500,2.894,501,1.444,508,1.37,516,2.144,530,2.17,531,1.933,557,1.888,579,1.808,580,2.263,603,1.196,608,1.808,618,2.083,639,2.083,640,1.561,641,2.122,661,1.374,663,2.667,670,3.731,671,1.374,674,1.933,679,4.037,706,2.524,712,2.408,713,1.487,731,2.004,747,1.651,750,1.23,758,1.808,795,1.239,848,1.239,876,4.388,877,2.268,878,2.613,879,3.511,880,1.52,881,2.38,882,5.315,883,4.068,884,2.38,885,3.201,886,2.17,887,2.38,888,3.346,889,2.38,890,3.511,891,3.804,892,5.307,893,3.487,894,3.975,895,3.346,896,3.511,897,3.201,898,2.38,899,5.398,900,2.38,901,3.346,902,1.444,903,3.511,904,2.17,905,1.868,906,2.38,907,2.38,908,2.38,909,2.38,910,2.083,911,2.38,912,3.169,913,4.175,914,2.38,915,3.511,916,2.38,917,2.17,918,3.511,919,4.03,920,2.38,921,2.38,922,4.172,923,3.511,924,2.38,925,2.38,926,2.38,927,2.38,928,2.38,929,2.38,930,2.38,931,3.511,932,2.38,933,2.38,934,2.38,935,3.511,936,3.511,937,4.605,938,1.008,939,3.346,940,2.38,941,2.38,942,2.38,943,2.38,944,2.38,945,2.38,946,2.38,947,2.38,948,1.752,949,1.752,950,2.38,951,3.511,952,2.38,953,2.38,954,2.38,955,3.346,956,2.38,957,2.268,958,2.38,959,3.511,960,1.651,961,2.38,962,1.808,963,2.38,964,2.004,965,2.38,966,2.38,967,2.38,968,3.346,969,2.38,970,2.38,971,3.201,972,2.38,973,2.38,974,2.004,975,2.38,976,3.511,977,3.511,978,3.511,979,3.511,980,3.073,981,2.38,982,3.511,983,4.605,984,2.38,985,2.38,986,3.511,987,3.804,988,2.38,989,2.38,990,1.374,991,1.689,992,1.808,993,2.38,994,2.38,995,2.38,996,2.38,997,1.561,998,2.38,999,2.268,1000,2.38,1001,2.38]],["title/modules/TsNavigationModule.html",[1002,0.62,1032,3.232]],["body/modules/TsNavigationModule.html",[2,0.084,3,0.061,4,0.038,5,0.038,19,0.008,25,0.152,27,0.28,33,0.098,37,0.038,39,0.007,40,0.007,280,1.988,282,0.81,327,2.651,630,1.582,750,1.321,878,3.159,1002,1.086,1004,1.785,1005,1.032,1006,1.899,1025,4.169,1032,6.691,1045,2.322,1048,2.322,1067,3.404,1119,2.421,1120,1.979,1169,6.016,1170,5.023,1180,4.697,1181,3.64,2612,7.054,2613,5.393,2803,5.393,2816,7.054,2848,5.889,2849,5.889,2850,6.642,2851,5.889,2852,6.642,2853,7.955]],["title/interfaces/TsNavigationPayload.html",[41,0.554,901,2.919]],["body/interfaces/TsNavigationPayload.html",[0,1.1,2,0.045,3,0.032,4,0.02,5,0.02,7,0.432,10,1.413,11,0.494,12,0.744,13,1.354,14,0.733,16,0.865,19,0.008,20,0.795,21,0.792,25,0.1,27,0.149,28,1.1,33,0.086,34,1.732,35,1.335,37,0.036,39,0.004,40,0.004,41,0.962,49,1.564,66,1.809,68,1.705,70,1.804,76,3.435,77,1.771,79,1.216,81,1.954,84,1.31,94,2.514,95,0.828,96,1.229,105,0.951,109,2.674,116,2.624,117,1.8,118,0.795,119,1.255,125,2.248,131,1.808,132,0.778,135,1.346,149,2.6,151,2.101,154,1.622,158,1.055,159,1.486,163,0.744,165,2.674,171,1.814,173,0.991,180,0.877,182,1.315,184,1.449,187,1.413,190,1.23,195,1.745,199,1.2,204,0.586,208,0.991,209,2.536,210,2.197,211,1.808,213,2.177,216,2.135,217,1.267,219,1.486,220,0.86,231,0.913,232,1.174,239,1.758,249,1.744,255,1.758,267,1.94,270,1.267,274,1.475,277,1.077,279,1.004,287,2.208,288,0.951,289,2.226,291,1.596,294,1.315,301,1.012,302,0.586,303,0.957,304,0.971,306,0.932,308,0.704,311,0.991,312,0.991,313,0.86,314,0.86,315,0.843,317,1.193,318,0.877,322,2.674,327,2.473,331,1.346,332,1.665,341,0.971,364,1.622,365,1.622,369,1.486,370,1.764,372,1.525,399,4.878,400,2.859,466,1.312,467,3.521,495,2.356,497,1.555,500,2.899,501,1.449,508,1.374,516,1.809,530,2.177,531,1.94,557,1.893,579,2.674,580,2.125,603,1.2,608,1.814,618,2.09,639,2.09,640,1.567,641,2.125,661,1.379,663,2.674,670,3.736,671,1.379,674,3.396,679,4.042,706,2.527,712,2.413,713,1.491,731,2.011,747,2.441,750,1.232,758,1.814,795,1.242,848,1.242,876,3.983,877,2.276,878,2.616,879,3.52,880,1.525,881,2.388,882,5.321,883,4.057,884,2.388,885,3.209,886,2.177,887,2.388,888,3.354,889,2.388,890,3.52,891,3.209,892,4.686,893,3.657,894,3.354,895,2.276,896,2.388,897,3.209,898,2.388,899,5.402,900,3.52,901,3.983,902,2.135,903,3.52,904,2.177,905,1.874,906,2.388,907,2.388,908,2.388,909,2.388,910,2.09,911,2.388,912,3.175,913,4.18,914,2.388,915,3.52,916,2.388,917,2.177,918,3.52,919,4.037,920,2.388,921,2.388,922,4.18,923,3.52,924,2.388,925,2.388,926,2.388,927,2.388,928,2.388,929,2.388,930,2.388,931,3.52,932,2.388,933,2.388,934,2.388,935,3.52,936,3.52,937,4.612,938,1.012,939,3.354,940,2.388,941,2.388,942,2.388,943,2.388,944,2.388,945,2.388,946,2.388,947,2.388,948,1.758,949,1.758,950,2.388,951,3.52,952,2.388,953,2.388,954,2.388,955,3.354,956,2.388,957,2.276,958,2.388,959,3.52,960,1.656,961,2.388,962,1.814,963,2.388,964,2.011,965,2.388,966,2.388,967,2.388,968,3.354,969,2.388,970,2.388,971,3.209,972,2.388,973,2.388,974,2.011,975,2.388,976,3.52,977,3.52,978,3.52,979,3.52,980,3.08,981,2.388,982,3.52,983,4.612,984,2.388,985,2.388,986,3.52,987,3.811,988,2.388,989,2.388,990,1.379,991,1.693,992,1.814,993,2.388,994,2.388,995,2.388,996,2.388,997,1.567,998,2.388,999,2.276,1000,2.388,1001,2.388,1716,3.209]],["title/interfaces/TsPaginatorMenuItem.html",[41,0.554,2854,3.687]],["body/interfaces/TsPaginatorMenuItem.html",[2,0.032,3,0.023,4,0.015,5,0.015,7,0.31,11,0.979,12,0.577,13,1.437,14,0.526,16,0.925,19,0.008,20,0.943,21,0.562,22,0.888,25,0.092,27,0.107,28,1.567,33,0.044,34,1.329,35,1.239,37,0.029,39,0.006,40,0.003,41,0.494,43,0.825,49,2.122,51,0.683,52,0.656,53,1.503,54,1.469,62,2.295,66,2.769,68,1.95,70,1.529,76,2.426,77,0.727,79,1.182,81,2.421,84,1.493,95,1.155,96,1.522,105,2.367,107,1.501,108,1.226,109,2.584,116,2.034,117,1.514,118,0.587,119,0.902,124,4.508,129,1.715,130,1.403,132,0.559,133,3.061,135,1.539,137,3.589,151,2.708,152,3.128,154,1.787,163,1.185,165,1.303,166,1.435,171,4.022,173,1.412,174,2.666,182,1.503,183,1.19,187,3.457,190,1.286,195,1.529,199,1.372,201,1.577,204,0.951,208,0.712,209,2.064,210,0.902,211,1.832,214,1.95,217,1.225,218,2.602,220,0.618,227,2.065,231,1.045,232,0.843,234,1.015,235,1.635,236,0.944,239,2.855,251,1.699,252,1.096,253,1.096,267,3.151,270,0.983,272,1.71,274,1.369,277,2.134,279,0.412,287,2.1,288,0.683,289,2.124,290,1.403,291,1.177,292,1.225,293,2.778,294,1.873,296,2.065,297,2.731,301,0.727,302,0.421,303,0.742,304,0.697,306,0.67,308,0.506,311,0.712,312,0.712,313,0.618,314,0.618,315,0.605,318,1.003,322,3.593,325,0.656,332,1.623,335,1.445,341,0.697,347,1.787,364,1.787,365,1.787,369,3.227,370,0.656,372,3.312,379,1.715,399,1.501,419,2.01,464,1.503,466,0.767,493,1.19,495,0.967,497,2.476,500,1.19,508,2.188,517,1.81,518,3.287,557,1.469,580,1.258,605,1.81,606,1.81,640,1.125,641,1.951,663,2.074,706,0.882,713,1.441,722,1.788,731,1.445,732,1.501,753,1.923,757,1.715,758,1.303,765,5.302,769,1.445,770,1.501,795,1.201,895,1.635,905,4.229,912,2.584,948,1.263,949,2.855,955,4.035,962,1.303,991,1.313,992,2.074,1064,1.949,1094,2.39,1191,1.95,1197,1.923,1202,1.347,1212,6.954,1224,3.844,1304,6.176,1320,3.287,1323,2.065,1388,3.287,1413,2.254,1427,1.125,1430,1.564,1479,1.503,1482,1.873,1552,1.699,1614,2.254,1641,1.715,1744,3.73,1760,1.445,1769,4.169,1788,1.347,1790,3.151,1811,3.061,1916,1.501,2055,2.254,2114,2.065,2139,3.287,2317,1.445,2477,1.715,2522,2.881,2564,2.065,2703,1.923,2854,6.485,2855,2.543,2856,6.549,2857,4.471,2858,2.543,2859,2.543,2860,2.543,2861,2.543,2862,5.042,2863,2.543,2864,2.254,2865,4.047,2866,2.254,2867,2.543,2868,2.543,2869,2.543,2870,2.543,2871,2.543,2872,2.543,2873,2.543,2874,2.543,2875,2.543,2876,2.543,2877,2.543,2878,2.543,2879,2.543,2880,2.543,2881,2.543,2882,2.543,2883,2.543,2884,2.543,2885,2.543,2886,2.543,2887,2.543,2888,2.065,2889,2.543,2890,2.543,2891,2.543,2892,2.543,2893,4.047,2894,2.543,2895,4.047,2896,2.543,2897,2.543,2898,2.543,2899,2.543,2900,2.543,2901,2.543,2902,4.047,2903,4.047,2904,2.543,2905,2.543,2906,2.543,2907,2.543,2908,2.543,2909,2.543,2910,4.047,2911,2.543,2912,6.276,2913,2.543,2914,4.047,2915,2.543,2916,2.543,2917,2.543,2918,2.543,2919,2.543,2920,2.543,2921,2.543,2922,5.748,2923,2.543,2924,6.276,2925,5.748,2926,2.543,2927,5.042,2928,5.042,2929,2.543,2930,2.543,2931,6.685,2932,2.543,2933,2.254,2934,6.276,2935,2.543,2936,4.047,2937,4.047,2938,4.047,2939,5.042,2940,2.543,2941,2.543,2942,2.543,2943,2.543,2944,2.543,2945,6.276,2946,5.748,2947,2.543,2948,2.543,2949,4.047,2950,7.011,2951,2.543,2952,2.543,2953,2.543,2954,2.543,2955,2.543,2956,2.543,2957,2.543,2958,2.543,2959,2.543,2960,2.543,2961,2.543,2962,4.047,2963,2.543,2964,4.047,2965,2.543,2966,4.047,2967,5.927,2968,2.543,2969,2.543,2970,6.685,2971,2.543,2972,6.276,2973,5.042,2974,2.543,2975,2.543,2976,2.543,2977,2.543,2978,2.543]],["title/modules/TsPaginatorModule.html",[1002,0.62,1033,3.064]],["body/modules/TsPaginatorModule.html",[2,0.082,3,0.06,4,0.038,5,0.038,19,0.008,25,0.151,27,0.274,33,0.098,37,0.038,39,0.006,40,0.006,226,1.859,280,1.97,282,0.793,630,1.548,750,1.293,1002,1.072,1004,1.748,1005,1.011,1006,1.859,1014,4.829,1031,6.152,1033,6.464,1037,6.152,1042,5.384,1045,2.292,1048,2.292,1051,3.564,1075,5.766,1085,5.766,1090,4.629,1119,2.391,1120,1.938,1121,4.464,1482,3.528,2979,5.766,2980,5.766,2981,6.503,2982,5.766,2983,6.503,2984,7.855]],["title/modules/TsPipesModule.html",[1002,0.62,1078,3.232]],["body/modules/TsPipesModule.html",[2,0.077,3,0.056,4,0.035,5,0.035,19,0.008,25,0.148,27,0.258,33,0.101,37,0.035,39,0.006,40,0.006,280,1.918,282,0.923,630,1.457,750,1.217,1002,1.033,1004,1.645,1005,0.951,1006,1.749,1045,2.209,1048,2.209,1078,6.834,1119,2.303,1120,1.824,1191,3.647,1299,3.443,2152,6.736,2985,5.426,2986,5.426,2987,5.426,2988,7.157,2989,7.157,2990,7.157,2991,7.157,2992,6.119,2993,7.568,2994,6.71,2995,6.71,2996,7.568,2997,6.71,2998,6.71,2999,8.584,3000,6.71,3001,7.568,3002,6.71]],["title/classes/TsRadioChange.html",[37,0.026,3003,3.687]],["body/classes/TsRadioChange.html",[2,0.039,3,0.028,4,0.018,5,0.018,7,0.373,8,2.383,10,1.221,12,0.436,13,1.423,14,0.633,16,0.913,19,0.008,20,0.544,21,0.622,22,1.543,25,0.124,27,0.129,28,0.951,33,0.074,34,0.93,35,0.659,37,0.042,39,0.004,40,0.005,41,0.373,43,0.993,51,0.822,52,1.767,53,1.737,54,1.697,64,2.013,66,1.621,67,2.064,69,1.192,70,1.566,74,1.474,76,3.069,79,1.214,81,0.874,84,1.427,94,2.253,95,1.357,96,1.55,104,1.289,105,1.257,108,1.041,115,3.195,116,1.423,117,2.091,118,0.874,119,1.085,130,1.621,132,0.672,135,3.25,149,1.163,151,1.037,154,0.951,155,2.177,158,2.238,163,1.316,173,1.779,176,0.822,180,1.968,183,1.432,185,2.802,187,1.221,190,1.241,195,1.298,198,3.111,199,2.155,204,0.939,208,0.857,209,2.323,211,1.656,215,2.127,216,1.914,217,1.136,220,0.743,221,2.601,222,2.476,224,2.657,226,0.874,229,2.563,231,1.207,232,1.015,234,1.221,236,1.136,248,1.393,249,0.659,251,2.383,252,1.318,253,1.318,257,1.551,258,1.806,259,2.56,260,1.806,262,1.551,269,1.432,270,0.743,271,2.657,272,2.155,273,1.085,274,1.113,275,1.085,276,2.322,277,0.931,278,1.738,279,1.386,280,1.091,282,0.57,283,1.318,285,1.738,286,1.738,287,1.779,288,0.822,290,1.621,291,1.325,300,4.119,301,0.874,302,0.506,303,1.041,304,0.839,306,0.806,308,0.608,311,0.857,312,0.857,313,0.743,314,0.743,315,0.728,317,1.298,318,0.758,319,2.396,320,1.738,321,1.806,325,1.465,332,1.636,335,1.738,339,2.476,341,1.878,347,2.335,364,1.975,365,1.975,370,0.789,389,1.62,400,1.677,407,2.657,410,1.738,411,2.657,412,3.611,413,1.738,419,3.585,425,2.656,451,1.677,464,1.737,466,1.143,469,2.064,488,1.967,491,1.677,492,1.392,493,1.432,494,1.738,495,1.163,497,1.691,499,1.882,501,1.252,503,2.484,508,1.674,520,1.62,522,1.392,560,3.536,568,3.891,580,1.975,602,3.006,603,2.321,620,1.284,651,1.423,673,2.177,675,3.825,678,1.354,713,0.874,715,4.039,722,2.873,732,2.761,750,0.608,756,1.806,759,2.177,795,2.014,799,1.284,817,3.649,848,1.113,880,2.015,912,1.568,948,4.284,991,0.993,1080,3.279,1081,2.177,1229,2.657,1269,2.313,1384,1.221,1387,1.967,1427,1.354,1443,1.221,1484,2.484,1594,3.351,1595,1.163,1597,1.221,1615,3.585,1656,1.806,1722,1.519,1921,2.064,1957,1.62,1995,3.225,2072,2.484,2099,3.797,2138,2.484,2213,1.738,2214,3.155,2224,2.064,2448,2.177,2497,3.225,2532,4.608,2559,2.313,2606,3.328,2790,3.006,2798,2.484,3003,5.559,3004,2.313,3005,2.484,3006,6.071,3007,5.635,3008,5.032,3009,7.579,3010,5.032,3011,5.635,3012,5.032,3013,5.032,3014,5.032,3015,4.146,3016,4.146,3017,4.146,3018,4.146,3019,2.712,3020,2.712,3021,5.032,3022,2.712,3023,2.712,3024,2.712,3025,3.536,3026,2.712,3027,4.146,3028,6.446,3029,5.032,3030,2.712,3031,2.712,3032,2.484,3033,2.712,3034,2.712,3035,6.941,3036,3.536,3037,2.712,3038,2.712,3039,2.712,3040,2.313,3041,2.484,3042,2.712,3043,2.712,3044,2.712,3045,5.032,3046,2.313,3047,4.146,3048,2.712,3049,4.146,3050,2.712,3051,2.712,3052,4.146,3053,2.712,3054,5.862,3055,2.712,3056,4.146,3057,5.032,3058,2.712,3059,2.712,3060,4.146,3061,2.712,3062,2.712,3063,4.146,3064,4.146,3065,2.712,3066,2.712,3067,2.712,3068,4.146,3069,2.712,3070,2.712,3071,4.146,3072,2.712,3073,2.712,3074,4.146,3075,2.712,3076,2.712,3077,4.146,3078,2.712,3079,2.712,3080,2.712,3081,2.712,3082,2.712,3083,2.712,3084,4.146,3085,2.712,3086,2.712,3087,2.712,3088,2.712,3089,2.712]],["title/modules/TsRadioGroupModule.html",[1002,0.62,1034,3.232]],["body/modules/TsRadioGroupModule.html",[2,0.081,3,0.059,4,0.037,5,0.037,19,0.008,25,0.152,27,0.271,33,0.097,37,0.037,39,0.006,40,0.006,104,1.308,226,1.843,280,1.963,282,0.786,327,2.574,630,1.536,750,1.282,1002,1.067,1004,1.733,1005,1.002,1006,1.843,1025,4.14,1034,6.729,1043,4.988,1045,2.281,1048,2.281,1067,3.305,1080,2.836,1081,4.59,1091,3.665,1092,4.146,1119,2.379,1120,1.922,1121,4.441,1122,5.273,1180,4.615,1181,3.535,1484,3.465,1540,5.91,1541,3.535,3004,4.877,3032,5.237,3036,6.359,3090,5.718,3091,5.718,3092,5.718,3093,6.449,3094,5.718,3095,6.449,3096,7.815,3097,7.815]],["title/interfaces/TsRadioOption.html",[41,0.554,3028,3.687]],["body/interfaces/TsRadioOption.html",[2,0.038,3,0.028,4,0.017,5,0.027,7,0.366,8,1.936,10,1.199,11,0.644,12,0.801,13,1.42,14,0.622,16,0.928,19,0.008,20,0.537,21,0.73,22,1.574,25,0.124,27,0.126,28,0.934,33,0.074,34,0.917,35,0.647,37,0.039,39,0.004,40,0.005,41,0.562,43,0.975,51,0.807,52,1.85,53,1.713,54,1.673,64,1.99,66,1.599,67,2.027,69,1.17,70,1.44,74,1.448,76,3.12,79,1.234,81,0.859,84,1.474,94,2.222,95,1.352,96,1.545,104,1.277,105,1.239,108,1.029,115,3.172,116,1.403,117,2.123,118,0.868,119,1.065,130,1.599,132,0.66,135,3.239,149,1.142,151,1.019,154,0.934,155,2.138,158,2.224,163,1.314,173,1.763,176,0.807,180,1.957,183,1.406,185,2.779,187,1.199,190,1.237,195,1.284,198,3.076,199,2.135,204,0.929,208,0.841,209,2.297,211,1.638,215,2.098,216,1.887,217,1.12,220,0.73,221,2.576,222,2.442,224,2.621,226,0.859,229,2.527,231,1.19,232,0.996,234,1.199,236,1.116,248,1.374,249,0.647,251,2.356,252,1.295,253,1.295,257,1.53,258,1.774,259,2.542,260,1.774,262,1.53,269,1.406,270,0.73,271,2.621,272,2.135,273,1.065,274,1.336,275,1.065,276,2.29,277,0.914,278,1.707,279,1.38,280,1.076,282,0.562,283,1.295,285,1.707,286,1.707,287,1.763,288,0.807,290,1.599,291,1.31,300,4.104,301,0.859,302,0.497,303,1.029,304,0.824,306,0.791,308,0.597,311,0.841,312,0.841,313,0.73,314,0.73,315,0.715,317,1.055,318,0.745,319,2.363,320,1.707,321,1.774,325,1.448,332,1.626,335,1.707,339,2.442,341,1.863,347,2.549,364,1.957,365,1.957,370,0.775,389,1.591,400,1.647,407,2.621,410,1.707,411,2.621,412,3.577,413,1.707,419,3.56,425,2.626,451,1.647,464,1.713,466,1.172,469,2.027,488,1.932,491,1.647,492,1.367,493,1.406,494,1.707,495,1.142,497,1.672,499,1.848,501,1.23,503,2.44,508,1.658,520,1.591,522,1.367,560,3.487,568,3.859,580,2.228,602,2.965,603,2.303,620,1.261,651,1.403,673,2.138,675,3.805,678,1.33,713,0.859,715,3.994,722,2.859,732,2.723,750,0.597,756,1.774,759,2.138,795,2.08,799,1.261,817,3.608,848,1.098,880,1.987,912,1.54,948,4.27,991,0.975,1080,3.271,1081,3.282,1229,2.621,1269,2.272,1384,1.199,1387,1.932,1427,1.33,1443,1.199,1484,2.284,1594,3.314,1595,1.142,1597,1.199,1615,3.707,1656,1.774,1722,1.492,1921,2.027,1957,1.591,1995,3.189,2072,2.44,2099,3.745,2138,2.44,2213,1.707,2214,3.111,2224,2.027,2448,2.138,2497,3.189,2532,4.557,2559,2.272,2606,3.282,2790,2.965,2798,2.44,3003,4.557,3004,3.487,3005,2.44,3006,4.976,3007,5.582,3008,4.976,3009,7.551,3010,4.976,3011,5.582,3012,4.976,3013,4.976,3014,4.976,3015,4.089,3016,4.089,3017,4.089,3018,4.089,3019,2.664,3020,2.664,3021,4.976,3022,2.664,3023,2.664,3024,2.664,3025,3.487,3026,2.664,3027,4.089,3028,6.546,3029,4.976,3030,2.664,3031,2.664,3032,2.44,3033,2.664,3034,4.089,3035,6.915,3036,3.487,3037,2.664,3038,2.664,3039,2.664,3040,2.272,3041,2.44,3042,2.664,3043,2.664,3044,2.664,3045,4.976,3046,2.272,3047,4.089,3048,2.664,3049,4.089,3050,2.664,3051,2.664,3052,4.089,3053,2.664,3054,5.82,3055,2.664,3056,4.089,3057,4.976,3058,2.664,3059,2.664,3060,4.089,3061,2.664,3062,2.664,3063,4.089,3064,4.089,3065,2.664,3066,2.664,3067,2.664,3068,4.089,3069,2.664,3070,2.664,3071,4.089,3072,2.664,3073,2.664,3074,4.089,3075,2.664,3076,2.664,3077,4.089,3078,2.664,3079,2.664,3080,2.664,3081,2.664,3082,2.664,3083,2.664,3084,4.089,3085,2.664,3086,2.664,3087,2.664,3088,2.664,3089,2.664,3098,3.004]],["title/components/TsReactiveFormBaseComponent.html",[118,0.528,257,1.506]],["body/components/TsReactiveFormBaseComponent.html",[2,0.052,3,0.038,4,0.034,5,0.051,7,0.502,11,0.575,12,0.831,13,1.249,16,0.947,18,2.054,19,0.008,20,0.961,21,0.825,22,1.292,25,0.108,27,0.173,33,0.073,35,1.254,37,0.046,39,0.005,40,0.005,41,0.979,82,1.429,95,1.228,96,1.318,101,1.281,104,1.37,105,1.108,108,1.346,115,3.555,118,0.9,132,1.28,163,1.306,174,1.309,180,1.818,190,1.146,195,1.889,214,3.535,225,4.466,226,1.178,231,1.063,232,1.367,248,1.735,249,1.581,257,2.664,259,3.215,262,1.931,272,1.974,273,2.928,275,2.065,277,1.772,282,0.895,284,1.531,302,1.6,303,1.755,317,1.332,319,4.714,331,1.567,336,1.397,347,1.281,364,1.281,365,1.281,419,3.353,492,2.649,496,4.144,553,4.513,554,4.021,557,1.495,614,1.429,617,1.461,650,2.933,707,0.924,817,3.743,820,5.717,837,1.531,839,3.438,840,4.144,855,4.144,857,4.144,878,1.367,938,1.664,1005,0.64,1059,1.085,1064,1.397,1080,1.495,1131,1.531,1136,1.085,1139,1.849,1167,1.461,1177,1.531,1190,1.386,1350,1.495,1351,1.687,1444,3.003,1445,1.687,1446,1.687,1447,2.383,1448,1.687,1449,1.687,1450,1.567,1451,1.687,1452,1.567,1453,1.687,1454,1.495,1455,1.687,1456,1.531,1457,1.531,1458,1.687,1459,1.567,1460,1.687,1461,1.531,1462,1.687,1463,1.531,1464,1.687,1465,1.687,1466,1.495,1467,2.383,1468,1.567,1469,1.567,1470,1.687,1471,2.45,1472,1.687,1473,1.531,1474,1.687,1475,1.531,1476,1.687,1477,1.531,1478,1.687,1479,1.531,1480,1.687,1481,1.687,1482,1.531,1483,1.687,1484,1.495,1485,1.687,1486,2.858,1487,1.687,1488,1.495,1489,1.531,1490,1.687,1491,1.531,1492,1.687,1493,1.605,1494,1.687,1495,1.397,1496,1.108,1497,1.687,1498,1.309,1499,1.687,1500,1.531,1501,1.687,1502,1.531,1503,1.687,1504,1.567,1505,1.687,1506,1.531,1507,1.687,1508,1.397,1509,1.687,1510,1.397,1511,2.383,1512,1.461,1513,1.687,1514,1.495,1515,1.687,1516,1.397,1517,1.687,1518,1.531,1519,1.687,1520,1.397,1521,1.687,1522,1.397,1523,1.495,1524,1.687,1525,1.531,1526,1.687,1527,1.687,1528,1.495,1529,1.687,1530,1.309,1531,1.687,1532,1.495,1533,1.645,1534,1.687,1743,4.189,1897,3.743,1925,5.957,1926,5.957,1927,5.957,1928,5.957,1929,4.728,1930,4.728,1931,4.728,1946,4.403,1949,4.728,1951,4.728,1957,3.083,1958,6.284,1960,4.95,1961,5.957,2189,2.78,2243,3.116,2346,3.654,3099,8.792,3100,4.121,3101,4.121,3102,4.121,3103,4.121,3104,4.121,3105,4.121,3106,4.121,3107,4.121,3108,4.121,3109,4.121,3110,4.121,3111,4.121,3112,4.121,3113,3.654,3114,4.121,3115,4.121,3116,7.739,3117,4.121,3118,5.822,3119,4.121,3120,4.121,3121,4.121]],["title/pipes/TsRoundNumberPipe.html",[620,1.906,2988,3.434]],["body/pipes/TsRoundNumberPipe.html",[2,0.086,3,0.063,4,0.04,5,0.047,16,0.704,18,1.913,19,0.008,20,1.003,21,0.668,22,1.203,25,0.13,27,0.288,33,0.074,37,0.04,39,0.007,40,0.007,49,2.131,81,2.312,108,1.253,163,1.271,190,1.229,231,1.763,232,2.266,318,1.693,325,2.088,620,3.618,848,1.627,938,1.953,991,2.217,1136,1.799,1139,2.17,1147,3.744,2155,4.862,2156,5.758,2160,5.758,2175,4.862,2176,4.609,2177,4.203,2988,6.118,2995,7.173,3122,8.09,3123,6.832,3124,7.173,3125,7.9,3126,6.832,3127,6.832,3128,6.832]],["title/components/TsRowComponent.html",[118,0.528,1488,1.648]],["body/components/TsRowComponent.html",[2,0.06,3,0.044,4,0.037,5,0.028,7,0.581,12,1.199,19,0.008,20,0.848,21,0.466,23,3.877,25,0.103,27,0.201,33,0.085,37,0.051,39,0.005,40,0.005,82,1.652,96,1.544,101,1.481,104,0.967,105,1.281,118,0.978,135,2.448,204,1.206,208,1.334,220,1.158,248,1.918,249,1.387,257,1.58,279,1.322,282,0.952,283,2.774,284,1.77,291,1.961,302,1.609,303,1.773,308,1.449,311,2.041,312,2.041,313,1.771,314,1.771,315,1.736,317,1.865,336,1.616,347,2.715,370,1.881,466,0.979,614,1.652,617,1.69,651,1.959,707,1.294,791,3.197,795,1.533,837,1.77,878,1.58,938,2.083,1005,0.741,1059,1.255,1064,1.616,1080,1.729,1131,1.77,1136,1.255,1167,1.69,1177,1.77,1185,4.547,1186,2.589,1190,2.108,1204,3.512,1350,1.729,1351,1.95,1424,3.512,1444,3.195,1445,1.95,1446,1.95,1447,2.634,1448,1.95,1449,1.95,1450,1.812,1451,1.95,1452,1.812,1453,1.95,1454,1.729,1455,1.95,1456,1.77,1457,1.77,1458,1.95,1459,1.812,1460,1.95,1461,1.77,1462,1.95,1463,1.77,1464,1.95,1465,1.95,1466,2.336,1467,2.634,1468,1.812,1469,1.812,1470,1.95,1471,1.729,1472,1.95,1473,1.77,1474,1.95,1475,1.77,1476,1.95,1477,1.77,1478,1.95,1479,1.77,1480,1.95,1481,1.95,1482,1.77,1483,1.95,1484,1.729,1485,1.95,1486,1.856,1487,1.95,1488,2.833,1489,1.77,1490,1.95,1491,1.77,1492,1.95,1493,1.856,1494,1.95,1495,1.616,1496,1.281,1497,1.95,1498,2.315,1499,1.95,1500,1.77,1501,1.95,1502,1.77,1503,1.95,1504,1.812,1505,1.95,1506,1.77,1507,1.95,1508,1.616,1509,1.95,1510,1.616,1511,2.634,1512,1.69,1513,1.95,1514,1.729,1515,1.95,1516,1.616,1517,1.95,1518,1.77,1519,1.95,1520,1.616,1521,1.95,1522,1.616,1523,2.645,1524,1.95,1525,1.77,1526,1.95,1527,1.95,1528,2.645,1529,1.95,1530,1.513,1531,1.95,1532,1.729,1533,1.902,1534,1.95,1566,3.658,1575,2.366,1577,4.814,1584,3.528,1595,2.448,1597,2.569,2098,3.299,2467,3.603,2468,5.512,2469,4.868,2470,3.603,2471,4.918,2472,6.166,2473,5.512,2474,5.512,2475,5.512,2476,4.581,2477,4.343,2478,4.868,2479,4.581,2480,4.868,2481,3.603,2482,3.391,2483,3.391,2484,3.603,2485,3.603,2486,4.868]],["title/directives/TsRowDefDirective.html",[707,0.721,1528,1.648]],["body/directives/TsRowDefDirective.html",[2,0.073,3,0.053,4,0.033,5,0.033,7,0.703,12,1.282,19,0.008,21,0.564,23,4.173,25,0.117,27,0.243,33,0.091,37,0.053,39,0.006,40,0.006,96,1.616,118,0.93,135,3.04,204,1.206,208,1.613,220,1.4,279,1.435,282,1.057,283,3.141,291,1.961,302,1.434,303,1.541,308,1.449,311,2.041,312,2.041,313,1.771,314,1.771,315,1.736,317,1.922,347,2.795,370,1.881,466,1.109,651,2.218,707,1.334,791,3.971,795,1.736,938,2.285,1136,1.517,1185,4.684,1186,2.874,1190,2.166,1204,3.512,1424,3.512,1466,2.091,1488,2.091,1498,2.539,1523,2.645,1528,2.901,1566,4.543,1575,2.862,1577,4.961,1584,3.995,1595,2.772,1597,2.91,2098,3.736,2467,4.358,2468,5.512,2469,5.512,2470,4.358,2471,4.918,2472,6.046,2473,6.046,2474,5.512,2475,6.046,2476,5.69,2477,5.394,2478,5.512,2479,5.188,2480,5.512,2481,5.512,2482,5.188,2483,5.188,2484,4.358,2485,4.358,2486,4.358]],["title/classes/TsScrollbarPosition.html",[37,0.026,3129,3.687]],["body/classes/TsScrollbarPosition.html",[2,0.05,3,0.037,4,0.023,5,0.023,7,0.488,13,1.452,14,0.828,16,0.788,19,0.008,21,0.391,22,0.704,25,0.107,27,0.168,33,0.079,35,1.861,37,0.049,39,0.005,40,0.005,43,1.298,49,2.037,51,1.075,52,1.868,53,2.117,54,2.068,64,1.418,70,1.656,74,3.2,77,1.143,79,1.068,81,1.143,84,1.301,95,1.054,96,1.193,108,0.733,118,0.89,122,2.571,125,1.723,126,2.361,132,0.879,144,3.247,150,1.927,158,1.192,163,0.57,174,2.526,185,3.131,190,1.27,195,1.873,199,1.356,204,0.662,208,1.12,211,2.703,217,2.123,219,1.679,220,0.971,222,2.118,231,1.032,234,1.596,236,1.485,249,0.862,269,1.871,270,0.971,271,3.239,275,1.418,276,2.831,287,1.596,288,1.075,289,1.167,290,1.387,291,1.55,301,1.143,302,0.662,303,1.218,304,1.097,306,1.053,308,0.795,311,1.12,312,1.12,313,0.971,314,0.971,315,0.952,317,1.519,319,3.403,320,2.273,322,3.403,323,3.247,332,0.845,336,1.356,339,3.018,364,2.545,365,2.545,389,2.118,407,2.273,410,2.273,411,3.239,412,3.239,413,2.273,465,2.273,466,0.867,491,2.192,492,1.819,493,1.871,494,2.273,495,3.182,497,2.631,608,2.05,651,1.735,706,1.387,707,1.263,713,1.629,747,1.871,770,3.365,795,1.724,848,1.894,880,1.723,974,4.348,991,1.298,1305,6.336,1410,2.846,1423,1.986,1424,1.927,1428,2.698,1429,2.846,1430,3.506,1433,3.298,1443,1.596,1489,2.117,1635,2.46,1756,3.513,1795,1.637,1903,2.118,2044,3.247,2177,2.46,2254,2.698,2325,3.024,2450,2.846,2800,3.247,3129,5.878,3130,3.247,3131,6.613,3132,3.024,3133,3.546,3134,3.546,3135,3.546,3136,3.546,3137,5.054,3138,5.054,3139,5.054,3140,5.054,3141,5.054,3142,5.054,3143,5.054,3144,5.054,3145,5.054,3146,5.054,3147,6.784,3148,5.888,3149,3.024,3150,3.024,3151,5.878,3152,3.546,3153,5.392,3154,3.546,3155,3.546,3156,3.546,3157,3.546,3158,3.546,3159,3.546,3160,8.003,3161,3.546,3162,3.546,3163,3.546,3164,4.31,3165,3.024,3166,3.546,3167,3.024,3168,7.659,3169,3.546,3170,3.546,3171,5.054,3172,3.546,3173,3.546,3174,3.546,3175,3.546,3176,3.546,3177,8.003,3178,3.546,3179,3.546,3180,3.546,3181,6.784,3182,3.546,3183,5.878,3184,3.546,3185,3.546,3186,3.546,3187,3.546,3188,3.546,3189,3.546,3190,3.546,3191,3.546,3192,3.546]],["title/classes/TsScrollbarsGeometry.html",[37,0.026,3153,3.687]],["body/classes/TsScrollbarsGeometry.html",[2,0.05,3,0.037,4,0.023,5,0.023,7,0.487,13,1.452,14,0.827,16,0.788,19,0.008,21,0.391,22,0.704,25,0.107,27,0.168,33,0.079,35,1.861,37,0.049,39,0.005,40,0.005,43,1.297,49,2.036,51,1.074,52,1.867,53,2.116,54,2.067,64,1.417,70,1.655,74,3.199,77,1.142,79,1.068,81,1.142,84,1.3,95,1.054,96,1.193,108,0.733,118,0.89,122,2.569,125,1.722,126,2.36,132,0.878,144,3.245,150,1.926,158,1.191,163,0.57,174,2.526,185,3.131,190,1.27,195,1.872,199,1.355,204,0.661,208,1.119,211,2.703,217,2.123,219,1.678,220,0.971,222,2.116,231,1.031,234,1.595,236,1.484,249,0.861,269,1.87,270,0.971,271,3.237,275,1.417,276,2.829,287,1.595,288,1.074,289,1.166,290,1.386,291,1.549,301,1.142,302,0.661,303,1.218,304,1.096,306,1.052,308,0.795,311,1.119,312,1.119,313,0.971,314,0.971,315,0.952,317,1.519,319,3.402,320,2.271,322,3.402,323,3.245,332,0.844,336,1.355,339,3.017,364,2.544,365,2.544,389,2.116,407,2.271,410,2.271,411,3.237,412,3.237,413,2.271,465,2.271,466,0.867,491,2.19,492,1.818,493,1.87,494,2.271,495,3.182,497,2.63,608,2.048,651,1.734,706,1.386,707,1.262,713,1.628,747,1.87,770,3.364,795,1.723,848,1.894,880,1.722,974,4.347,991,1.297,1305,6.382,1410,2.844,1423,1.985,1424,1.926,1428,2.696,1429,2.844,1430,3.504,1433,3.297,1443,1.595,1489,2.116,1635,2.458,1756,3.339,1795,1.636,1903,3.017,2044,3.245,2177,2.458,2254,2.696,2325,3.022,2450,2.844,2800,3.245,3129,5.39,3130,3.245,3131,6.592,3132,3.022,3133,3.544,3134,3.544,3135,3.544,3136,3.544,3137,5.051,3138,5.051,3139,5.051,3140,5.051,3141,5.051,3142,5.051,3143,5.051,3144,5.051,3145,5.051,3146,5.051,3147,7.051,3148,5.886,3149,3.022,3150,3.022,3151,5.876,3152,5.051,3153,5.876,3154,3.544,3155,3.544,3156,3.544,3157,3.544,3158,3.544,3159,3.544,3160,8.002,3161,3.544,3162,3.544,3163,3.544,3164,4.308,3165,3.022,3166,3.544,3167,3.022,3168,7.658,3169,3.544,3170,3.544,3171,5.051,3172,3.544,3173,3.544,3174,3.544,3175,3.544,3176,3.544,3177,8.002,3178,3.544,3179,3.544,3180,3.544,3181,6.783,3182,3.544,3183,5.876,3184,3.544,3185,3.544,3186,3.544,3187,3.544,3188,3.544,3189,3.544,3190,3.544,3191,3.544,3192,3.544]],["title/modules/TsScrollbarsModule.html",[1002,0.62,1035,3.232]],["body/modules/TsScrollbarsModule.html",[2,0.087,3,0.063,4,0.04,5,0.04,19,0.008,25,0.146,27,0.289,33,0.099,37,0.04,39,0.007,40,0.007,280,2.017,282,0.839,630,1.637,750,1.368,1002,1.109,1004,1.848,1005,1.069,1006,1.966,1035,6.638,1045,2.37,1048,2.37,1119,2.472,1120,2.049,1489,3.552,3131,4.895,3149,5.201,3150,5.201,3193,6.098,3194,6.098,3195,6.098,3196,6.877,3197,8.122,3198,8.122]],["title/components/TsSearchComponent.html",[118,0.528,1491,1.687]],["body/components/TsSearchComponent.html",[0,1.414,2,0.037,3,0.027,4,0.026,5,0.053,7,0.36,10,1.816,11,0.412,12,0.649,13,1.461,14,0.942,16,0.983,18,0.826,19,0.008,20,0.828,21,0.887,22,0.52,25,0.108,27,0.124,33,0.049,35,1.196,37,0.036,39,0.004,40,0.004,41,0.555,49,1.628,61,3.574,70,1.992,79,1.238,81,1.3,82,1.023,84,1.442,96,1.66,101,0.918,104,1.628,105,0.793,107,2.686,108,1.597,117,1.198,118,0.914,130,1.577,131,1.966,132,1.22,138,3.069,151,2.596,154,2.494,163,1.308,173,1.274,174,1.981,176,0.793,182,1.69,183,1.381,190,1.092,195,1.628,198,2.493,204,1.267,208,0.826,211,2.341,216,2.272,217,1.729,220,0.717,226,0.844,231,0.762,232,0.979,237,2.493,248,1.356,249,1.344,251,2.33,252,1.272,253,1.272,257,0.979,259,2.716,262,1.841,273,1.047,279,1.092,284,1.096,287,2.144,288,1.223,289,2.077,290,2.162,291,1.062,299,2.925,301,1.3,302,1.569,303,1.717,304,1.248,306,1.198,308,0.905,311,1.274,312,1.274,313,1.105,314,1.105,318,1.128,325,1.174,332,1.566,336,1.001,341,1.711,347,0.918,364,0.918,365,0.918,422,2.331,441,2.409,458,1.96,464,2.502,466,0.692,501,2.553,508,1.774,509,2.798,531,2.493,563,2.686,608,4.59,610,3.95,614,1.023,616,2.925,617,1.047,631,5.082,641,2.38,651,2.257,661,1.772,707,0.722,713,0.844,722,2.212,747,2.129,795,1.083,837,1.096,848,1.083,878,0.979,880,2.392,893,2.013,991,0.958,1005,0.459,1051,1.618,1059,0.777,1064,2.515,1080,1.071,1131,1.096,1134,3.44,1136,0.777,1139,1.981,1150,1.381,1167,1.968,1177,1.096,1190,1.083,1191,2.192,1208,4.576,1209,3.683,1229,2.585,1350,1.071,1351,1.208,1353,2.259,1354,2.331,1443,1.178,1444,2.553,1445,1.208,1446,1.208,1447,1.862,1448,1.208,1449,1.208,1450,1.122,1451,1.208,1452,1.122,1453,1.208,1454,1.071,1455,1.208,1456,1.096,1457,1.096,1458,1.208,1459,1.122,1460,1.208,1461,1.096,1462,1.208,1463,1.096,1464,1.208,1465,1.208,1466,1.071,1467,1.862,1468,1.122,1469,1.122,1470,1.208,1471,2.014,1472,1.208,1473,1.096,1474,1.208,1475,1.096,1476,1.208,1477,1.096,1478,1.208,1479,1.096,1480,1.208,1481,1.208,1482,1.096,1483,1.208,1484,1.071,1485,1.208,1486,1.15,1487,1.208,1488,1.071,1489,1.096,1490,1.208,1491,2.316,1492,1.208,1493,1.15,1494,1.208,1495,1.001,1496,0.793,1497,1.208,1498,0.937,1499,1.208,1500,1.096,1501,1.208,1502,1.096,1503,1.208,1504,1.122,1505,1.208,1506,1.096,1507,1.208,1508,1.001,1509,1.208,1510,1.001,1511,1.862,1512,1.047,1513,1.208,1514,1.071,1515,1.208,1516,1.001,1517,1.208,1518,1.096,1519,1.208,1520,1.001,1521,1.208,1522,1.001,1523,1.071,1524,1.208,1525,1.096,1526,1.208,1527,1.208,1528,1.071,1529,1.208,1530,0.937,1531,1.208,1532,1.071,1533,1.178,1534,1.208,1796,2.129,1804,1.618,1957,3.303,2213,4.948,2494,5.064,2498,4.717,2500,4.717,2686,2.617,2698,3.238,2714,4.439,3199,2.617,3200,4.034,3201,4.034,3202,5.53,3203,5.53,3204,5.53,3205,5.53,3206,5.53,3207,5.53,3208,5.53,3209,6.31,3210,4.921,3211,4.921,3212,4.921,3213,4.921,3214,4.921,3215,4.921,3216,4.921,3217,4.549,3218,2.925,3219,2.952,3220,2.952,3221,3.694,3222,2.952,3223,2.952,3224,2.952,3225,2.952,3226,2.952,3227,2.952,3228,2.952,3229,2.952,3230,2.952,3231,2.952,3232,2.952,3233,2.952,3234,2.952,3235,2.952,3236,4.034,3237,4.034,3238,2.952,3239,2.952,3240,2.952,3241,4.034,3242,4.034,3243,4.034,3244,4.034,3245,2.952,3246,4.034,3247,3.694,3248,2.952,3249,2.952,3250,4.034,3251,4.034,3252,2.952,3253,4.034,3254,2.952,3255,2.952,3256,2.397,3257,2.617,3258,2.617,3259,4.034,3260,2.617,3261,2.617,3262,2.232,3263,3.694,3264,2.617,3265,2.617,3266,2.617,3267,2.617,3268,2.617,3269,2.617]],["title/modules/TsSearchModule.html",[1002,0.62,1036,3.232]],["body/modules/TsSearchModule.html",[2,0.084,3,0.061,4,0.038,5,0.038,19,0.008,25,0.151,27,0.279,33,0.098,37,0.038,39,0.006,40,0.006,226,1.897,280,1.987,282,0.809,327,2.649,630,1.58,750,1.319,1002,1.085,1004,1.783,1005,1.031,1006,1.897,1014,4.851,1026,5.635,1036,6.754,1045,2.32,1048,2.32,1051,3.637,1068,5.018,1119,2.42,1120,1.977,1122,5.364,1180,4.694,1181,3.637,1491,3.537,3270,5.883,3271,5.883,3272,6.635,3273,5.883,3274,6.635,3275,7.95]],["title/interfaces/TsSearchResponse.html",[41,0.554,3256,3.687]],["body/interfaces/TsSearchResponse.html",[0,1.393,2,0.056,3,0.041,4,0.026,5,0.026,7,0.546,10,1.788,11,0.625,12,0.88,13,1.464,14,0.927,16,0.96,19,0.008,20,0.521,21,0.691,25,0.128,27,0.189,33,0.067,35,1.521,37,0.041,39,0.005,40,0.005,41,0.928,49,1.412,61,3.402,70,1.933,79,1.246,81,1.764,84,1.434,96,1.68,104,1.715,107,2.645,117,1.18,118,0.885,130,1.553,131,2.22,132,0.985,138,3.023,151,2.58,154,2.48,163,1.177,173,1.254,174,1.96,182,1.664,183,2.097,190,1.007,195,1.615,198,2.455,204,1.259,208,1.254,211,2.466,216,2.526,217,1.848,220,1.088,226,1.281,231,1.156,232,1.486,237,2.455,249,0.965,251,2.591,252,1.931,253,1.931,259,2.698,262,2.047,279,1.144,287,2.13,288,1.204,289,2.06,290,2.14,291,1.046,299,2.88,301,1.281,302,0.741,303,1.132,304,1.229,306,1.18,308,0.891,311,1.254,312,1.254,313,1.088,314,1.088,318,1.11,325,1.156,332,1.491,341,1.693,364,1.393,365,1.393,422,2.296,441,2.373,458,1.931,464,2.292,466,0.939,501,1.833,508,1.625,509,2.756,531,2.455,563,2.645,608,4.724,610,4.393,616,2.88,631,5.091,641,2.365,651,2.315,661,1.745,713,1.764,722,2.189,747,2.097,795,1.067,848,1.067,880,1.931,893,1.983,991,1.454,1051,2.455,1064,2.093,1134,3.388,1139,1.423,1167,1.589,1191,2.159,1208,4.539,1209,3.644,1229,2.546,1353,2.225,1354,2.296,1471,1.626,1491,1.664,1796,2.097,1804,2.455,1957,3.268,2213,4.893,2494,3.638,2498,4.667,2500,4.667,2698,3.189,2714,5.025,3199,3.972,3200,3.972,3201,3.972,3202,3.972,3203,3.972,3204,3.972,3205,3.972,3206,3.972,3207,3.972,3208,3.972,3209,5.472,3210,3.972,3211,3.972,3212,3.972,3213,3.972,3214,3.972,3215,3.972,3216,3.972,3218,2.88,3221,3.638,3236,3.972,3237,3.972,3241,3.972,3242,3.972,3243,3.972,3244,3.972,3246,3.972,3247,3.638,3250,3.972,3251,3.972,3253,3.972,3256,5.011,3257,3.972,3258,3.972,3259,5.472,3260,3.972,3261,3.972,3262,3.388,3263,5.011,3264,3.972,3265,3.972,3266,3.972,3267,3.972,3268,3.972,3269,3.972]],["title/modules/TsSelectModule.html",[1002,0.62,1037,3.064]],["body/modules/TsSelectModule.html",[2,0.084,3,0.061,4,0.039,5,0.039,19,0.008,25,0.15,27,0.281,33,0.098,37,0.039,39,0.007,40,0.007,104,1.353,226,1.907,280,1.991,282,0.813,630,1.588,750,1.326,1002,1.089,1004,1.793,1005,1.037,1006,1.907,1037,6.347,1043,5.027,1045,2.328,1048,2.328,1091,3.791,1092,4.289,1119,2.427,1120,1.988,1121,4.532,1493,3.733,3276,5.915,3277,5.915,3278,5.915,3279,6.671,3280,5.915,3281,7.565,3282,6.671,3283,7.976,3284,6.671,3285,7.976]],["title/classes/TsSelectedFile.html",[37,0.026,55,3.434]],["body/classes/TsSelectedFile.html",[2,0.045,3,0.033,4,0.053,5,0.053,7,0.893,11,0.5,12,0.75,13,1.435,14,1.089,16,0.948,18,2.051,19,0.008,20,0.964,21,0.883,22,1.394,25,0.118,30,1.824,33,0.057,34,1.367,35,1.578,37,0.03,39,0.006,40,0.004,41,0.437,42,5.213,44,5.646,49,2.124,52,0.924,55,5.539,56,4.521,57,6.059,58,5.456,59,5.888,60,5.591,66,2.162,70,1.204,79,1.105,81,1.023,82,1.241,84,1.582,91,5.199,95,0.568,97,5.791,101,1.113,104,1.832,108,1.144,111,2.034,112,4.272,116,2.471,119,1.866,120,2.114,122,4.01,125,2.688,127,4.638,132,0.787,141,5.779,163,0.89,173,2.144,180,1.815,190,1.265,195,0.819,199,2.115,201,2.429,204,1.372,250,4.439,259,1.27,261,2.907,268,2.907,273,1.27,274,1.253,294,1.33,322,2.696,325,2.383,332,1.924,364,2.38,365,2.38,379,2.415,394,2.99,419,1.778,431,5.582,466,0.801,492,2.393,497,2.42,581,4.717,583,4.717,585,4.717,651,1.601,661,2.678,670,3.924,671,1.395,706,1.241,713,1.023,962,2.696,987,2.202,990,2.049,1063,2.907,1139,1.671,1387,3.382,1604,3.979,1686,2.907,1743,3.69,1769,1.778,1784,1.896,1795,2.813,1957,1.896,2143,3.744,2161,2.708,2411,8.137,2412,3.174,2413,5.199,2414,6.095,2415,4.665,2416,6.095,2417,6.095,2418,6.095,2419,6.095,2420,7.47,2421,4.665,2422,6.789,2423,6.095,2424,4.665,2425,3.174,2426,3.174,2427,4.665,2428,3.174,2429,3.174,2430,3.174,2431,3.174,2432,3.174,2433,3.174,2434,3.174,2435,4.665,2436,3.174,2437,3.174,2438,3.174,2439,3.174,2440,3.174,2441,3.174,2442,4.665,2443,3.174,2444,4.665,2445,3.174,2446,3.174,2447,3.174,2448,2.548,2449,3.174,2450,4.439,2451,4.665,2452,3.174,2453,3.174,2454,3.174,2455,3.174,2456,3.174,2457,3.174,2458,3.174,2459,3.174,2460,3.174,2461,3.174,2462,5.53,2463,6.494,2464,4.665,2465,3.174,3286,5.261,3287,5.261,3288,5.261,3289,5.261,3290,3.58,3291,5.261,3292,3.58,3293,3.58,3294,3.58,3295,3.58,3296,3.58,3297,3.58,3298,3.58,3299,3.58,3300,3.58,3301,3.58,3302,3.58,3303,3.174,3304,3.58,3305,3.58,3306,3.58,3307,3.58,3308,3.58,3309,3.58,3310,3.58,3311,3.58,3312,3.58,3313,3.58,3314,3.58,3315,3.58,3316,3.58,3317,3.58,3318,3.58,3319,3.58,3320,3.58,3321,3.58,3322,3.58,3323,3.58,3324,3.58,3325,3.174]],["title/pipes/TsSentenceCasePipe.html",[620,1.906,2989,3.434]],["body/pipes/TsSentenceCasePipe.html",[2,0.087,3,0.064,4,0.04,5,0.047,16,0.715,18,1.945,19,0.008,20,1.01,21,0.68,22,1.223,25,0.112,27,0.292,33,0.075,37,0.04,39,0.007,40,0.007,79,1.275,163,1.238,190,1.238,318,1.722,325,2.108,620,3.644,848,1.654,938,1.985,991,2.254,1136,1.829,1139,2.206,1147,3.807,2155,4.944,2156,5.814,2160,5.814,2175,4.944,2176,4.686,2177,4.273,2989,6.178,2998,7.244,3326,8.17,3327,6.159,3328,7.244,3329,6.159,3330,6.946,3331,6.946]],["title/classes/TsSlideToggleChange.html",[37,0.026,3332,3.687]],["body/classes/TsSlideToggleChange.html",[2,0.07,3,0.051,4,0.032,5,0.032,7,0.681,8,3,13,1.419,16,0.904,19,0.008,20,0.831,25,0.141,27,0.235,33,0.086,34,1.111,35,1.204,37,0.051,39,0.006,40,0.006,64,1.981,69,2.176,70,1.803,79,0.997,84,1.543,95,1.134,96,1.641,104,1.133,115,2.473,118,0.999,130,2.732,132,1.228,154,1.737,163,1.019,173,2.001,190,0.797,204,1.183,208,1.564,211,2.3,217,1.736,220,1.357,222,3.785,224,4.061,226,1.597,231,1.442,234,2.23,236,2.075,249,1.204,251,3,252,2.407,253,2.407,257,2.37,258,3.299,259,2.535,260,3.299,270,1.357,272,2.423,273,1.981,274,1.702,275,1.981,276,2.774,277,1.7,278,3.175,279,1.346,280,1.668,282,0.871,283,2.407,285,3.175,286,3.175,287,2.001,288,1.501,290,1.937,301,1.597,302,0.925,303,1.311,304,1.532,306,1.471,308,1.111,311,1.564,312,1.564,313,1.357,314,1.357,317,1.803,325,1.442,332,1.18,407,3.175,464,2.654,466,0.85,499,3.436,508,1.882,603,1.894,643,5.293,722,2.535,795,1.33,880,2.407,991,1.813,1191,2.692,1500,3.085,1756,2.345,1899,4.225,1903,2.958,1915,5.959,1918,4.225,1921,3.769,2497,3.175,3046,4.225,3332,6.745,3333,4.953,3334,7.612,3335,4.536,3336,5.405,3337,4.953,3338,4.953,3339,4.953,3340,4.953]],["title/classes/TsSortBase.html",[37,0.026,3341,3.232]],["body/classes/TsSortBase.html",[2,0.05,3,0.037,4,0.023,5,0.023,13,1.323,16,0.411,18,1.593,19,0.008,21,0.39,25,0.123,27,0.168,30,1.383,31,3.359,33,0.086,34,1.438,35,1.558,37,0.038,39,0.005,40,0.005,41,0.809,43,1.294,51,2.198,52,1.029,61,3.683,68,3.195,70,1.517,79,0.926,81,1.14,84,1.299,95,1.387,96,1.299,108,1.216,118,0.464,119,1.415,131,2.319,149,1.517,151,1.352,152,3.103,154,2.061,166,2.901,173,1.593,174,1.807,180,1.644,185,3.483,187,1.592,190,1.193,192,2.741,195,1.749,199,1.352,204,0.66,211,1.66,214,2.741,215,2.588,217,0.969,221,2.959,231,1.029,234,1.592,236,1.481,249,0.859,270,0.969,274,0.95,275,2.018,279,1.38,282,0.809,291,1.855,302,0.66,303,1.5,315,0.95,317,0.912,318,0.989,332,1.4,370,1.711,394,3.233,404,2.112,425,3.103,466,0.607,508,2.093,516,1.973,520,2.112,521,2.267,522,1.815,525,2.564,553,3.5,578,1.765,603,1.352,640,1.765,641,1.24,659,2.454,671,1.554,706,2.65,707,1.489,719,3.5,722,1.415,739,5.11,769,4.109,776,2.186,795,1.948,848,0.95,893,1.765,902,1.632,962,2.044,991,1.294,1107,1.765,1147,2.186,1186,2.535,1190,2.19,1198,2.271,1205,2.564,1376,2.691,1384,1.592,1495,1.352,1496,2.588,1530,2.703,1541,2.186,1548,2.564,1552,1.675,1553,2.454,1656,2.355,1657,3.425,1708,3.838,1715,1.981,1729,1.922,1795,2.328,1877,2.839,1903,4.209,1916,2.355,1995,2.267,2053,3.658,2317,3.233,2321,3.658,2497,2.267,2534,2.839,3341,4.049,3342,2.839,3343,2.454,3344,3.017,3345,5.144,3346,4.72,3347,3.017,3348,5.235,3349,5.616,3350,4.302,3351,3.017,3352,3.017,3353,5.518,3354,4.302,3355,2.454,3356,3.838,3357,2.691,3358,3.017,3359,3.017,3360,4.302,3361,2.839,3362,4.915,3363,2.839,3364,2.691,3365,2.691,3366,4.302,3367,3.017,3368,5.824,3369,5.362,3370,3.017,3371,3.017,3372,3.017,3373,4.302,3374,3.017,3375,3.017,3376,3.017,3377,3.017,3378,4.302,3379,3.017,3380,3.017,3381,2.691,3382,3.838,3383,2.691,3384,3.017,3385,3.017,3386,3.017,3387,3.017,3388,5.015,3389,3.017,3390,3.017,3391,3.017,3392,3.017,3393,3.017,3394,3.017,3395,3.017,3396,5.015,3397,5.015,3398,4.302,3399,4.302,3400,3.017,3401,3.017,3402,3.017,3403,4.302,3404,3.017,3405,3.017,3406,3.017,3407,5.015,3408,3.017,3409,3.017,3410,3.017,3411,3.017,3412,4.302,3413,3.017,3414,3.017]],["title/directives/TsSortDirective.html",[707,0.721,1530,1.442]],["body/directives/TsSortDirective.html",[2,0.041,3,0.03,4,0.019,5,0.052,7,0.394,11,0.451,12,0.695,13,1.354,16,0.925,18,2.258,19,0.008,20,0.858,21,0.828,22,1.298,25,0.113,27,0.136,30,1.121,31,3.466,33,0.08,34,1.3,35,1.649,37,0.028,39,0.004,40,0.004,41,0.716,43,1.049,51,2.057,52,0.834,61,3.885,68,3.553,70,1.605,79,0.912,81,0.924,84,1.449,95,1.358,96,1.416,108,1.479,118,0.567,119,1.146,131,2.353,149,1.229,151,1.096,152,3.283,154,2.032,163,1.001,166,2.794,173,1.365,174,2.076,180,1.739,185,3.416,187,1.29,190,1.261,192,2.828,195,1.935,199,1.653,204,0.807,211,1.713,214,2.828,215,2.67,217,1.426,221,2.675,231,0.834,234,1.29,236,1.2,249,0.696,270,0.785,273,1.146,274,0.77,275,1.729,279,1.371,282,0.797,291,1.918,302,0.807,303,1.404,315,0.77,317,0.739,318,1.208,332,1.703,370,1.687,394,3.715,404,1.712,419,1.605,425,2.747,466,0.492,508,2.123,516,1.69,520,2.582,521,2.77,522,2.974,525,2.078,553,4.536,578,1.431,603,1.096,640,1.431,641,1.516,659,2.999,671,1.259,706,2.557,707,1.493,719,3.611,722,1.146,739,5.366,769,4.191,776,1.772,795,1.987,848,0.77,893,1.431,902,1.323,962,2.499,991,1.582,1107,2.158,1136,0.851,1139,1.548,1147,1.772,1186,2.327,1190,2.129,1198,1.946,1205,2.078,1376,3.289,1384,1.29,1495,1.096,1496,2.586,1530,2.768,1541,1.772,1548,4.203,1552,1.357,1553,1.988,1656,1.909,1657,3.178,1708,4.733,1715,1.605,1729,1.558,1795,2.675,1877,4.178,1903,4.173,1916,1.909,1995,2.77,2053,3.774,2317,2.77,2321,3.134,2497,1.837,2534,2.301,3341,2.301,3342,2.301,3343,1.988,3344,2.444,3345,4.96,3346,4.178,3347,2.444,3348,5.135,3349,5.438,3350,3.687,3351,4.439,3352,4.439,3353,5.316,3354,3.687,3355,1.988,3356,3.96,3357,2.181,3358,2.444,3359,2.444,3360,3.687,3361,2.301,3362,5.5,3363,2.301,3364,2.181,3365,2.181,3366,3.687,3367,2.444,3368,6.09,3369,5.879,3370,4.943,3371,3.687,3372,2.444,3373,5.305,3374,2.444,3375,2.444,3376,2.444,3377,2.444,3378,3.687,3379,4.943,3380,2.444,3381,2.181,3382,3.289,3383,4.41,3384,2.444,3385,2.444,3386,2.444,3387,3.687,3388,4.439,3389,2.444,3390,2.444,3391,2.444,3392,3.687,3393,3.687,3394,2.444,3395,3.687,3396,4.439,3397,4.439,3398,3.687,3399,3.687,3400,2.444,3401,2.444,3402,3.687,3403,3.687,3404,2.444,3405,2.444,3406,2.444,3407,4.439,3408,2.444,3409,2.444,3410,2.444,3411,2.444,3412,3.687,3413,2.444,3414,2.444,3415,3.959,3416,4.875,3417,4.875,3418,4.875,3419,3.232,3420,4.875,3421,4.875,3422,3.232,3423,3.232,3424,3.232,3425,3.232,3426,3.232,3427,3.232,3428,3.232,3429,3.232,3430,3.232,3431,3.232,3432,3.232,3433,3.232,3434,3.232,3435,3.232,3436,3.232,3437,3.232,3438,3.232,3439,2.866]],["title/classes/TsSortHeaderBase.html",[37,0.026,3440,3.687]],["body/classes/TsSortHeaderBase.html",[2,0.062,3,0.045,4,0.029,5,0.029,13,1.368,14,1.02,19,0.008,20,0.766,22,1.305,25,0.146,27,0.207,31,3.887,33,0.081,34,0.98,37,0.046,39,0.005,40,0.005,61,2.374,67,3.324,70,1.127,79,0.688,84,1.332,95,1.177,96,1.582,108,1.36,118,0.987,130,1.708,135,2.503,149,2.819,163,1.058,166,2.335,174,2.091,185,3.238,190,1.058,195,1.506,204,0.815,208,1.38,209,3.034,215,2.995,216,2.694,220,1.197,221,2.694,229,2.7,231,1.699,232,1.634,234,1.967,236,1.83,249,1.418,279,1.067,282,0.601,290,1.708,291,1.847,302,1.31,303,1.207,304,1.352,306,1.298,308,0.98,311,1.38,312,1.38,313,1.197,314,1.197,315,1.173,317,1.127,318,1.221,332,1.041,339,3.926,425,2.306,451,2.7,488,3.168,501,2.016,505,2.909,508,2.084,522,2.241,557,1.788,578,2.181,616,3.168,620,2.069,651,2.003,671,1.919,707,1.177,768,4.232,791,2.447,795,1.884,980,2.909,990,1.919,991,1.599,1148,2.909,1186,2.183,1190,2.122,1198,1.967,1204,2.374,1384,1.967,1495,1.671,1496,2.53,1530,2.354,1541,2.7,1552,2.764,1553,3.031,1567,3.031,1572,4.766,1575,2.447,1584,3.608,1594,4.378,1595,2.503,1597,2.628,1656,3.887,1657,2.123,1723,2.609,1756,2.069,1795,2.694,1800,2.609,1811,3.726,1878,4.685,1916,2.909,1995,2.8,2012,3.324,2471,3.324,2563,5.346,3164,3.726,3165,4.978,3218,3.168,3343,3.031,3345,4.05,3348,4.05,3349,4.232,3353,3.324,3355,4.05,3356,4.441,3357,3.324,3362,4.232,3364,3.324,3365,3.324,3368,4.441,3369,3.324,3381,3.324,3382,4.441,3383,3.324,3415,4.001,3440,5.346,3441,4.001,3442,4.369,3443,4.978,3444,4.001,3445,5.837,3446,4.369,3447,5.837,3448,4.369,3449,5.837,3450,4.001,3451,4.001,3452,6.573,3453,4.369,3454,4.369,3455,5.837,3456,5.837,3457,4.369,3458,4.369,3459,4.369,3460,4.369,3461,4.369,3462,4.369,3463,6.573,3464,4.369,3465,4.369,3466,4.369,3467,4.369,3468,4.369,3469,4.369,3470,4.369,3471,4.369,3472,4.369,3473,4.369,3474,4.369,3475,4.369,3476,4.369,3477,4.001,3478,4.369,3479,5.837,3480,4.369,3481,4.369]],["title/components/TsSortHeaderComponent.html",[118,0.528,1495,1.54]],["body/components/TsSortHeaderComponent.html",[2,0.043,3,0.031,4,0.029,5,0.051,7,0.417,11,0.477,12,0.725,13,1.428,14,1.052,16,0.906,18,1.423,19,0.008,20,0.952,21,0.815,22,1.373,23,2.524,25,0.136,27,0.144,31,3.968,33,0.066,34,0.679,37,0.035,39,0.004,40,0.004,61,2.449,67,3.429,70,1.163,79,0.709,82,1.185,84,1.471,95,1.14,96,1.497,101,1.062,104,0.693,105,0.918,108,1.43,118,0.952,130,1.762,135,2.556,149,2.732,163,1.074,166,2.548,174,2.134,185,3.191,190,1.168,195,1.722,204,0.841,208,0.957,209,3.191,215,2.761,216,2.484,220,0.83,221,2.08,229,1.873,231,1.312,232,1.133,234,1.364,236,1.269,248,1.515,249,1.548,257,1.133,273,1.212,279,1.089,282,0.62,284,1.269,290,1.185,291,1.87,302,1.585,303,1.74,304,1.394,306,1.338,308,1.011,311,1.423,312,1.423,313,1.235,314,1.235,315,1.21,317,1.163,318,1.26,332,1.282,336,1.159,339,3.214,347,1.062,419,1.697,425,1.599,451,1.873,488,2.197,501,2.75,505,2.018,508,1.983,522,3.057,557,1.844,578,1.512,614,1.185,616,3.268,617,1.212,620,1.435,651,1.547,671,1.331,707,1.195,768,3.902,791,2.524,795,1.793,837,1.269,878,1.133,980,2.018,990,1.331,991,1.649,1005,0.531,1059,0.9,1064,1.159,1080,1.24,1131,1.269,1136,0.9,1139,1.614,1148,3.001,1167,1.212,1177,1.269,1186,2.229,1190,2.123,1198,1.364,1204,2.449,1350,1.24,1351,1.398,1384,2.029,1444,2.75,1445,1.398,1446,1.398,1447,2.08,1448,1.398,1449,1.398,1450,1.299,1451,1.398,1452,1.299,1453,1.398,1454,1.24,1455,1.398,1456,1.269,1457,1.269,1458,1.398,1459,1.299,1460,1.398,1461,1.269,1462,1.398,1463,1.269,1464,1.398,1465,1.398,1466,1.24,1467,2.08,1468,1.299,1469,1.299,1470,1.398,1471,1.24,1472,1.398,1473,1.269,1474,1.398,1475,1.269,1476,1.398,1477,1.269,1478,1.398,1479,1.269,1480,1.398,1481,1.398,1482,1.269,1483,1.398,1484,1.24,1485,1.398,1486,1.331,1487,1.398,1488,1.24,1489,1.269,1490,1.398,1491,1.269,1492,1.398,1493,1.331,1494,1.398,1495,2.279,1496,2.52,1497,1.398,1498,1.085,1499,1.398,1500,1.269,1501,1.398,1502,1.269,1503,1.398,1504,1.299,1505,1.398,1506,1.269,1507,1.398,1508,1.159,1509,1.398,1510,1.159,1511,2.08,1512,1.212,1513,1.398,1514,1.24,1515,1.398,1516,1.159,1517,1.398,1518,1.269,1519,1.398,1520,1.159,1521,1.398,1522,1.159,1523,1.24,1524,1.398,1525,1.269,1526,1.398,1527,1.398,1528,1.24,1529,1.398,1530,2.6,1531,1.398,1532,1.24,1533,1.364,1534,1.398,1541,1.873,1552,2.821,1553,3.126,1567,3.126,1572,5.151,1575,1.697,1584,2.786,1594,3.583,1595,1.933,1597,2.029,1656,3.583,1657,2.19,1723,1.81,1756,2.134,1795,2.75,1800,2.692,1811,3.844,1878,3.617,1916,2.018,1995,2.888,2012,2.305,2471,3.429,2563,4.127,3164,2.584,3165,5.432,3218,3.268,3343,3.126,3345,4.134,3348,3.733,3349,3.902,3353,4.534,3355,4.632,3356,4.094,3357,2.305,3362,3.902,3364,2.305,3365,2.305,3368,4.534,3369,2.305,3381,2.305,3382,3.429,3383,4.534,3415,4.127,3439,3.03,3440,2.775,3441,7.196,3442,3.03,3443,3.844,3444,2.775,3445,4.506,3446,3.03,3447,5.381,3448,3.03,3449,5.959,3450,4.127,3451,2.775,3452,6.676,3453,4.506,3454,4.506,3455,6.369,3456,6.369,3457,3.03,3458,3.03,3459,3.03,3460,3.03,3461,3.03,3462,5.381,3463,7.258,3464,6.369,3465,6.676,3466,3.03,3467,3.03,3468,3.03,3469,3.03,3470,4.506,3471,3.03,3472,3.03,3473,3.03,3474,4.506,3475,3.03,3476,3.03,3477,4.127,3478,3.03,3479,4.506,3480,3.03,3481,3.03,3482,3.417,3483,5.082,3484,3.417,3485,3.417,3486,3.417,3487,3.417,3488,3.417,3489,3.417,3490,3.417,3491,3.417,3492,3.417,3493,3.417,3494,3.417,3495,3.417,3496,3.417,3497,3.417,3498,5.082,3499,5.082]],["title/injectables/TsSortHeaderIntl.html",[0,1.412,3355,2.793]],["body/injectables/TsSortHeaderIntl.html",[0,2.478,2,0.072,3,0.052,4,0.033,5,0.048,7,0.698,11,0.799,12,1.036,16,0.821,19,0.008,21,0.56,22,1.278,25,0.128,27,0.241,28,2.257,33,0.087,34,1.138,35,1.957,37,0.033,39,0.006,40,0.006,74,3.841,77,1.636,79,1.17,108,1.462,118,0.845,135,2.76,151,2.461,154,2.257,163,1.137,174,2.305,180,1.419,183,3.397,185,3.718,190,1.261,201,2.23,272,2.461,279,1.292,280,1.336,282,1.055,341,1.991,399,4.286,508,2.433,609,4.897,641,2.257,659,4.465,671,2.23,707,1.331,722,3.277,776,3.138,1148,4.286,1190,1.996,1496,2.442,1530,2.531,1559,6.436,1642,5.076,1655,5.076,1800,3.844,2053,5.682,2482,5.167,2497,4.125,3132,4.33,3348,4.465,3355,5.719,3441,6.806,3443,4.33,3477,5.894,3500,5.725,3501,6.436,3502,8.382,3503,8.382,3504,5.725,3505,7.259,3506,5.725,3507,5.725,3508,7.259,3509,5.725,3510,5.725,3511,5.076,3512,5.725,3513,5.725]],["title/modules/TsSortModule.html",[1002,0.62,1038,3.064]],["body/modules/TsSortModule.html",[2,0.081,3,0.077,4,0.037,5,0.037,7,0.781,19,0.008,25,0.146,27,0.269,33,0.101,37,0.037,39,0.006,40,0.006,280,1.956,282,0.949,630,1.525,652,5.003,750,1.667,829,5.003,991,2.525,1002,1.062,1004,1.721,1005,0.995,1006,1.83,1038,6.342,1045,2.271,1047,5.538,1048,2.271,1119,2.368,1120,1.908,1190,1.853,1495,3.215,1496,2.401,1530,3.011,1789,4.265,1878,4.557,2098,3.988,3443,5.885,3444,6.318,3511,6.899,3514,5.677,3515,5.677,3516,5.677,3517,6.403,3518,6.899,3519,6.899,3520,6.899,3521,7.781,3522,7.781]],["title/interfaces/TsSortState.html",[41,0.554,3363,3.232]],["body/interfaces/TsSortState.html",[2,0.049,3,0.036,4,0.023,5,0.023,7,0.478,11,0.547,12,0.802,13,1.317,16,0.404,18,1.573,19,0.008,21,0.643,25,0.122,27,0.165,30,1.359,31,3.318,33,0.086,34,1.427,35,1.546,37,0.033,39,0.005,40,0.005,41,0.875,43,1.272,51,2.187,52,1.012,61,3.659,68,3.165,70,1.503,79,1.06,81,1.121,84,1.289,95,1.382,96,1.289,108,1.205,118,0.456,119,1.391,131,2.306,149,1.491,151,1.329,152,3.074,154,2.042,166,2.886,173,1.573,174,2.086,180,1.628,185,3.52,187,1.565,190,1.188,192,2.708,195,1.737,199,1.329,204,0.649,211,1.64,214,2.708,215,2.557,217,0.953,221,2.936,231,1.012,234,1.565,236,1.456,249,0.845,270,0.953,274,0.934,275,1.993,279,1.374,282,0.801,291,1.844,302,0.649,303,1.493,315,0.934,317,0.897,318,0.972,332,1.387,370,1.695,394,3.193,404,2.076,425,3.074,466,0.597,508,2.081,516,1.948,520,2.076,521,2.228,522,1.784,525,2.521,553,3.457,578,1.735,603,1.329,640,1.735,641,1.219,659,2.412,671,1.527,706,2.633,707,1.498,719,3.457,722,1.391,739,5.449,769,4.077,776,2.149,795,1.938,848,0.934,893,1.735,902,1.605,962,2.009,991,1.272,1107,1.735,1147,2.149,1186,2.621,1190,2.185,1198,2.243,1205,2.521,1376,2.645,1384,1.565,1495,1.329,1496,2.59,1530,2.765,1541,2.149,1548,2.521,1552,1.646,1553,2.412,1656,2.315,1657,3.405,1708,3.791,1715,1.947,1729,1.889,1795,2.3,1877,2.791,1903,4.31,1916,2.315,1995,2.228,2053,3.613,2317,3.733,2321,3.613,2497,2.228,2534,2.791,3341,2.791,3342,2.791,3343,2.412,3344,2.965,3345,5.121,3346,4.675,3347,2.965,3348,5.214,3349,5.597,3350,4.25,3351,2.965,3352,2.965,3353,5.491,3354,4.25,3355,2.412,3356,3.791,3357,2.645,3358,2.965,3359,2.965,3360,4.25,3361,2.791,3362,4.882,3363,4,3364,2.645,3365,2.645,3366,4.25,3367,2.965,3368,5.803,3369,5.331,3370,2.965,3371,2.965,3372,2.965,3373,4.25,3374,2.965,3375,2.965,3376,2.965,3377,2.965,3378,4.25,3379,2.965,3380,2.965,3381,2.645,3382,3.791,3383,2.645,3384,2.965,3385,2.965,3386,2.965,3387,2.965,3388,4.967,3389,2.965,3390,2.965,3391,2.965,3392,2.965,3393,2.965,3394,2.965,3395,2.965,3396,4.967,3397,4.967,3398,4.25,3399,4.25,3400,2.965,3401,2.965,3402,2.965,3403,4.25,3404,2.965,3405,2.965,3406,2.965,3407,4.967,3408,2.965,3409,2.965,3410,2.965,3411,2.965,3412,4.25,3413,2.965,3414,2.965]],["title/interfaces/TsSortableItem.html",[41,0.554,3362,2.919]],["body/interfaces/TsSortableItem.html",[2,0.049,3,0.035,4,0.022,5,0.022,7,0.472,11,0.54,12,0.794,13,1.313,16,0.398,18,1.559,19,0.008,21,0.698,25,0.121,27,0.163,30,1.93,31,3.287,33,0.085,34,1.418,35,1.536,37,0.032,39,0.005,40,0.005,41,0.921,43,1.256,51,2.179,52,0.999,61,3.791,68,3.142,70,1.492,79,1.054,81,1.106,84,1.414,95,1.378,96,1.281,108,1.196,118,0.45,119,1.372,131,2.296,149,1.472,151,1.312,152,3.051,154,2.027,166,3.079,173,1.559,174,1.768,180,1.616,185,3.623,187,1.545,190,1.183,192,2.682,195,1.728,199,1.312,204,0.64,211,1.625,214,2.682,215,2.533,217,0.94,221,2.918,231,0.999,234,1.545,236,1.437,249,0.834,270,0.94,274,0.921,275,1.974,279,1.37,282,0.795,291,1.836,302,0.64,303,1.487,315,0.921,317,0.885,318,0.959,332,1.377,370,1.683,394,3.163,404,2.049,425,3.051,466,0.589,508,2.072,516,1.93,520,2.049,521,2.199,522,1.76,525,2.488,553,3.424,578,1.713,603,1.312,640,1.713,641,1.203,659,2.38,671,1.507,706,2.619,707,1.491,719,3.424,722,1.372,739,5.058,769,4.052,776,2.121,795,1.975,848,0.921,893,1.713,902,1.584,962,1.983,991,1.256,1107,1.713,1147,2.121,1186,2.609,1190,2.182,1198,2.222,1205,2.488,1376,2.611,1384,1.545,1495,1.888,1496,2.59,1530,2.683,1541,2.121,1548,2.488,1552,1.625,1553,2.38,1656,2.285,1657,3.39,1708,3.756,1715,1.922,1729,1.865,1795,2.668,1877,2.754,1903,4.393,1916,2.285,1995,2.199,2053,3.579,2317,3.705,2321,3.579,2497,2.199,2534,2.754,3341,2.754,3342,2.754,3343,2.38,3344,2.926,3345,5.103,3346,4.641,3347,2.926,3348,5.341,3349,5.691,3350,4.21,3351,2.926,3352,2.926,3353,5.786,3354,4.21,3355,2.38,3356,3.756,3357,2.611,3358,2.926,3359,2.926,3360,4.21,3361,3.962,3362,5.058,3363,2.754,3364,2.611,3365,2.611,3366,4.21,3367,2.926,3368,5.786,3369,5.308,3370,2.926,3371,2.926,3372,2.926,3373,4.21,3374,2.926,3375,2.926,3376,2.926,3377,2.926,3378,4.21,3379,2.926,3380,2.926,3381,2.611,3382,3.756,3383,2.611,3384,2.926,3385,2.926,3386,2.926,3387,2.926,3388,4.931,3389,2.926,3390,2.926,3391,2.926,3392,2.926,3393,2.926,3394,2.926,3395,2.926,3396,4.931,3397,4.931,3398,4.21,3399,4.21,3400,2.926,3401,2.926,3402,2.926,3403,4.21,3404,2.926,3405,2.926,3406,2.926,3407,4.931,3408,2.926,3409,2.926,3410,2.926,3411,2.926,3412,4.21,3413,2.926,3414,2.926]],["title/modules/TsSpacingModule.html",[1002,0.62,1039,3.064]],["body/modules/TsSpacingModule.html",[2,0.087,3,0.063,4,0.04,5,0.04,19,0.008,25,0.144,27,0.291,33,0.099,37,0.04,39,0.007,40,0.007,280,2.023,282,0.844,630,1.648,750,1.377,1002,1.113,1004,1.861,1005,1.076,1006,1.979,1039,6.301,1045,2.379,1048,2.379,1119,2.481,1120,2.063,1532,3.473,1806,4.469,3523,6.138,3524,6.138,3525,6.138,3526,6.923,3527,8.153]],["title/components/TsTableComponent.html",[118,0.528,1498,1.442]],["body/components/TsTableComponent.html",[2,0.041,3,0.054,4,0.029,5,0.019,7,0.4,12,0.939,13,0.51,14,0.679,16,0.862,19,0.008,20,1.048,21,0.321,25,0.136,27,0.249,28,2.46,33,0.084,34,1.178,35,1.828,37,0.043,39,0.004,40,0.005,41,0.803,43,1.064,49,1.887,51,2.306,52,1.699,53,1.831,54,1.789,56,1.937,64,1.163,66,1.709,70,0.75,71,3.169,74,2.375,76,2.149,77,0.938,79,1.105,81,1.409,82,1.137,95,0.521,96,0.589,101,1.02,104,1.202,105,0.882,108,0.602,114,4.003,116,0.998,117,1.298,118,0.942,123,3.365,125,3.042,127,2.213,131,0.957,132,1.74,135,2.504,158,0.977,163,1.058,165,2.526,184,2.424,185,1.342,187,1.968,190,1.007,195,1.128,201,1.278,208,0.918,219,2.07,220,0.797,248,1.962,249,1.062,257,1.088,267,1.798,269,1.535,270,1.6,279,1.067,282,0.904,284,1.218,288,0.882,291,1.382,292,1.58,293,1.452,302,1.58,303,1.733,306,1.298,308,0.98,311,1.38,312,1.38,313,1.198,314,1.198,315,1.174,317,1.128,318,1.468,327,1.309,332,0.693,335,1.864,336,1.112,341,0.9,347,2.047,369,1.377,370,1.699,404,1.737,422,2.526,441,1.737,458,1.413,493,1.535,495,1.875,505,1.937,508,1.953,516,1.137,520,1.737,603,1.671,614,1.137,617,1.163,620,1.377,630,1.174,641,1.02,651,0.998,663,3.375,671,1.278,679,2.526,706,1.137,707,1.177,712,2.565,713,0.938,750,0.652,756,1.937,758,2.526,770,4.379,791,3.271,813,2.109,837,1.218,848,0.781,878,1.088,938,2.622,999,3.169,1005,0.51,1006,0.938,1059,0.864,1064,1.112,1080,1.19,1107,1.452,1131,1.218,1136,0.864,1167,1.163,1177,1.218,1185,4.096,1186,3.067,1190,1.832,1195,2.663,1198,1.309,1199,2.481,1203,2.213,1204,3.573,1212,2.481,1220,2.018,1299,3.212,1304,4.234,1350,1.19,1351,1.342,1354,3.8,1384,1.968,1408,3.742,1428,2.213,1430,2.018,1444,2.695,1445,1.342,1446,1.342,1447,2.017,1448,1.342,1449,1.342,1450,1.247,1451,1.342,1452,1.247,1453,1.342,1454,1.19,1455,1.342,1456,1.218,1457,1.218,1458,1.342,1459,1.247,1460,1.342,1461,1.218,1462,1.342,1463,1.218,1464,1.342,1465,1.342,1466,1.19,1467,2.017,1468,1.247,1469,1.247,1470,1.342,1471,1.19,1472,1.342,1473,1.218,1474,1.342,1475,1.218,1476,1.342,1477,1.218,1478,1.342,1479,1.218,1480,1.342,1481,1.342,1482,2.199,1483,1.342,1484,1.19,1485,1.342,1486,1.278,1487,1.342,1488,1.19,1489,1.218,1490,1.342,1491,1.218,1492,1.342,1493,2.565,1494,1.342,1495,1.112,1496,2.366,1497,1.342,1498,2.091,1499,1.342,1500,1.218,1501,1.342,1502,1.218,1503,1.342,1504,1.247,1505,1.342,1506,1.218,1507,1.342,1508,1.112,1509,1.342,1510,1.112,1511,2.017,1512,1.163,1513,1.342,1514,1.19,1515,1.342,1516,1.112,1517,1.342,1518,1.218,1519,1.342,1520,1.112,1521,1.342,1522,1.112,1523,1.19,1524,1.342,1525,1.218,1526,1.342,1527,1.342,1528,1.19,1529,1.342,1530,2.513,1531,1.342,1532,1.19,1533,1.309,1534,1.342,1566,1.864,1567,3.032,1575,1.629,1592,2.213,1622,2.611,1657,3.042,1729,2.375,1733,1.58,1756,2.07,1769,1.629,1796,2.307,1898,2.663,1902,4.003,1903,3.739,1995,2.801,2012,2.213,2098,2.526,2110,2.908,2114,2.663,2142,2.908,2177,2.018,2211,3.728,2212,2.481,2254,2.213,2260,2.908,2476,2.334,2483,2.334,2522,2.334,2767,2.908,2790,2.109,2854,2.663,2856,4.98,2967,2.908,3054,2.663,3183,4.003,3218,2.109,3262,2.481,3343,2.018,3345,2.018,3346,2.334,3450,5.732,3528,3.28,3529,4.371,3530,4.929,3531,4.929,3532,6.259,3533,3.28,3534,6.575,3535,4.929,3536,2.908,3537,6.697,3538,7.059,3539,4.929,3540,3.28,3541,4.371,3542,3.28,3543,3.28,3544,3.28,3545,3.28,3546,5.922,3547,3.28,3548,3.28,3549,3.28,3550,3.28,3551,3.28,3552,3.28,3553,4.929,3554,4.929,3555,3.28,3556,3.28,3557,4.929,3558,4.929,3559,5.922,3560,4.929,3561,3.28,3562,3.28,3563,4.929,3564,3.28,3565,2.908,3566,3.28,3567,5.922,3568,5.922,3569,3.28,3570,2.908,3571,3.28,3572,3.28,3573,5.922,3574,3.28,3575,4.929,3576,3.28,3577,3.28,3578,4.929,3579,3.28,3580,4.929,3581,3.28,3582,3.28,3583,3.28,3584,3.28,3585,6.585,3586,3.28,3587,3.28,3588,4.929,3589,3.28,3590,3.28,3591,3.28,3592,3.28,3593,4.929,3594,3.28,3595,3.28,3596,3.28,3597,3.28,3598,3.28,3599,3.28,3600,3.28,3601,3.28,3602,3.28,3603,3.28,3604,3.28,3605,3.28,3606,2.663,3607,4.929,3608,3.28,3609,3.28,3610,3.28,3611,3.28,3612,4.929,3613,3.28,3614,3.28,3615,3.28,3616,3.28,3617,3.28,3618,3.28,3619,3.28,3620,3.28,3621,3.28,3622,3.28,3623,3.28,3624,3.28,3625,3.28]],["title/classes/TsTableDataSource.html",[37,0.026,3537,3.687]],["body/classes/TsTableDataSource.html",[2,0.059,3,0.078,4,0.027,5,0.052,7,0.567,11,0.65,12,0.904,14,0.963,16,0.917,18,1.774,19,0.008,20,0.737,21,0.791,22,1.115,25,0.102,33,0.051,35,1.742,37,0.037,39,0.006,40,0.006,51,2.368,66,2.197,79,0.884,94,3.053,95,1.438,108,0.854,116,2.539,131,1.849,132,1.392,154,2.403,155,4.509,163,0.664,174,2.012,175,4.791,176,1.703,180,1.57,190,1.19,195,1.769,201,2.468,239,4.6,270,1.539,273,1.651,277,2.461,279,1.444,282,0.878,293,2.804,318,1.57,322,3.962,332,1.762,404,3.355,450,7.57,466,1.176,492,3.517,495,2.94,505,3.741,508,2.416,521,3.6,557,2.299,609,5.216,670,4.276,671,1.813,706,2.68,713,1.811,778,4.791,938,2.77,1004,1.703,1139,2.012,1148,3.741,1185,4.144,1304,2.992,1354,4.608,1426,5.144,1482,2.353,1496,2.242,1498,2.455,1530,2.012,1575,2.312,1657,2.73,1846,6.775,1903,3.355,2184,5.617,2477,4.274,2856,6.31,3532,6.855,3537,5.144,3541,6.386,3626,8.992,3627,4.654,3628,6.335,3629,7.731,3630,7.731,3631,7.731,3632,7.731,3633,7.731,3634,7.731,3635,6.335,3636,4.654,3637,8.688,3638,4.654,3639,4.654,3640,4.654,3641,4.654,3642,4.654,3643,6.335,3644,4.654,3645,6.335,3646,6.386,3647,4.654,3648,4.654,3649,6.335,3650,4.654,3651,4.654,3652,4.654,3653,4.654,3654,4.654,3655,4.654,3656,4.654,3657,6.335,3658,4.654,3659,4.654,3660,6.335,3661,4.654,3662,6.335,3663,4.654,3664,4.654,3665,4.654]],["title/modules/TsTableModule.html",[1002,0.62,1040,3.232]],["body/modules/TsTableModule.html",[2,0.066,3,0.074,4,0.03,5,0.03,7,0.64,19,0.008,25,0.146,27,0.221,33,0.098,37,0.03,39,0.006,40,0.006,51,1.41,280,1.785,282,0.64,630,1.249,652,4.412,750,1.521,829,4.412,938,1.5,991,2.227,1002,0.937,1004,1.41,1005,0.816,1006,1.5,1033,5.826,1038,5.826,1040,6.896,1045,2.003,1047,4.884,1048,2.003,1077,4.652,1086,6.085,1119,2.089,1120,1.564,1185,3.408,1204,3.307,1466,3.35,1488,3.35,1498,2.932,1508,3.161,1510,3.13,1516,3.161,1520,3.161,1522,3.13,1523,3.383,1528,3.383,1575,2.606,1789,3.761,2098,3.517,3518,6.085,3519,6.085,3520,6.085,3666,4.652,3667,4.652,3668,4.652,3669,5.247,3670,4.652,3671,5.247,3672,6.863,3673,6.863,3674,6.863]],["title/pipes/TsTimeAgoPipe.html",[620,1.906,2990,3.434]],["body/pipes/TsTimeAgoPipe.html",[2,0.08,3,0.058,4,0.037,5,0.045,16,0.653,18,1.776,19,0.008,20,0.971,21,0.621,22,1.117,25,0.124,27,0.267,33,0.069,34,1.539,35,1.667,37,0.037,39,0.006,40,0.006,79,1.327,104,1.694,163,1.293,190,1.191,221,3.417,318,1.572,325,1.997,379,4.28,425,3.621,554,3.477,620,3.505,713,1.813,762,5.852,848,1.842,938,1.813,991,2.511,1059,2.484,1136,1.671,1139,2.015,1147,3.477,2155,4.515,2156,5.507,2160,5.507,2161,4.798,2175,4.515,2176,4.28,2177,3.903,2178,5.625,2179,5.625,2209,5.151,2210,6.283,2368,5.151,2990,5.852,3000,6.861,3675,7.738,3676,6.344,3677,6.861,3678,8.912,3679,6.344,3680,6.344,3681,6.344,3682,6.344,3683,6.344,3684,6.344,3685,6.344]],["title/pipes/TsTitleCasePipe.html",[620,1.906,2991,3.434]],["body/pipes/TsTitleCasePipe.html",[2,0.086,3,0.063,4,0.04,5,0.047,16,0.705,18,1.917,19,0.008,20,1.004,21,0.67,22,1.206,25,0.11,27,0.288,33,0.074,37,0.04,39,0.007,40,0.007,79,1.27,163,1.272,190,1.272,318,1.697,325,2.09,350,3.509,620,3.622,848,1.929,938,1.957,991,2.222,1136,1.803,1139,2.174,1147,3.753,2155,4.873,2156,5.765,2160,5.765,2175,4.873,2176,4.619,2177,4.212,2991,6.126,3002,7.182,3327,6.071,3329,6.071,3686,8.1,3687,7.182,3688,6.847,3689,6.847,3690,6.847,3691,6.847]],["title/components/TsToggleComponent.html",[118,0.528,1500,1.687]],["body/components/TsToggleComponent.html",[2,0.046,3,0.034,4,0.031,5,0.05,7,0.449,8,1.547,11,0.514,12,0.766,13,1.336,16,0.974,18,1.951,19,0.008,20,1.011,21,0.882,22,1.227,25,0.124,27,0.155,33,0.069,34,0.733,35,1.157,37,0.045,39,0.004,40,0.004,41,0.773,64,1.307,69,1.435,70,1.594,79,0.973,82,1.277,84,1.562,95,1.176,96,1.562,101,1.145,104,1.286,105,0.99,108,1.556,115,3.084,118,0.971,130,2.416,132,1.394,154,1.67,163,1.299,173,1.775,176,0.99,180,1.727,190,1.103,195,1.695,204,1.153,208,1.032,211,2.034,214,1.775,217,1.693,220,0.895,222,2.845,224,3.053,225,3.691,226,1.053,231,0.951,234,1.471,236,1.368,248,1.601,249,1.501,251,2.662,252,1.588,253,1.588,257,2.883,258,2.175,259,2.249,260,2.175,270,1.305,272,1.822,273,2.471,274,1.659,275,1.905,276,1.83,277,1.121,278,2.094,279,1.028,280,1.254,282,0.903,283,1.588,284,1.368,285,2.094,286,2.094,287,1.951,288,1.444,290,1.863,301,1.536,302,1.588,303,1.745,304,1.474,306,1.415,308,1.068,311,1.504,312,1.504,313,1.305,314,1.305,317,1.451,319,4.454,325,1.386,332,1.339,336,1.249,347,1.145,407,2.094,464,2.752,466,0.561,496,2.622,499,2.266,508,1.951,553,3.305,554,2.944,603,1.822,614,1.277,617,1.307,643,5.232,707,0.853,722,2.471,795,1.279,817,2.369,820,4.513,837,1.368,839,2.175,840,2.622,855,2.622,857,2.622,878,1.222,880,2.732,938,1.053,991,2.058,1005,0.573,1059,0.97,1064,1.249,1080,1.337,1131,1.368,1136,0.97,1139,1.706,1150,1.724,1167,1.307,1177,1.368,1190,1.279,1191,2.589,1350,1.337,1351,1.508,1443,1.471,1444,2.852,1445,1.508,1446,1.508,1447,2.199,1448,1.508,1449,1.508,1450,1.401,1451,1.508,1452,1.401,1453,1.508,1454,1.337,1455,1.508,1456,1.368,1457,1.368,1458,1.508,1459,1.401,1460,1.508,1461,1.368,1462,1.508,1463,1.368,1464,1.508,1465,1.508,1466,1.337,1467,2.199,1468,1.401,1469,1.401,1470,1.508,1471,1.337,1472,1.508,1473,1.368,1474,1.508,1475,1.368,1476,1.508,1477,1.368,1478,1.508,1479,1.368,1480,1.508,1481,1.508,1482,1.368,1483,1.508,1484,1.337,1485,1.508,1486,1.435,1487,1.508,1488,1.337,1489,1.368,1490,1.508,1491,1.368,1492,1.508,1493,1.435,1494,1.508,1495,1.249,1496,0.99,1497,1.508,1498,1.17,1499,1.508,1500,2.873,1501,1.508,1502,1.368,1503,1.508,1504,1.401,1505,1.508,1506,1.368,1507,1.508,1508,1.249,1509,1.508,1510,1.249,1511,2.199,1512,1.307,1513,1.508,1514,1.337,1515,1.508,1516,1.249,1517,1.508,1518,1.368,1519,1.508,1520,1.249,1521,1.508,1522,1.249,1523,1.337,1524,1.508,1525,1.368,1526,1.508,1527,1.508,1528,1.337,1529,1.508,1530,1.17,1531,1.508,1532,1.337,1533,1.471,1534,1.508,1743,3.358,1756,2.255,1899,5.27,1903,3.358,1915,4.795,1918,5.27,1921,4.278,1925,5.149,1926,5.149,1927,5.149,1928,5.149,1929,4.362,1930,4.362,1931,4.362,1942,7.257,1943,3.267,1945,3.267,1946,2.786,1947,3.267,1948,3.267,1949,2.991,1950,3.267,1951,2.991,1956,3.267,1957,1.951,1958,4.362,1959,3.267,1960,3.624,1961,4.362,1962,3.267,1964,3.267,2497,3.053,3046,4.795,3332,4.362,3333,3.267,3334,5.622,3335,2.991,3336,4.795,3337,4.763,3338,4.763,3339,3.267,3340,5.622,3692,3.684,3693,5.372,3694,3.684,3695,3.684,3696,3.684,3697,3.684,3698,3.684,3699,3.684,3700,3.684,3701,3.684,3702,3.684]],["title/modules/TsToggleModule.html",[1002,0.62,1041,3.232]],["body/modules/TsToggleModule.html",[2,0.085,3,0.062,4,0.039,5,0.039,19,0.008,25,0.148,27,0.286,33,0.099,37,0.039,39,0.007,40,0.007,226,1.94,280,2.006,282,0.828,630,1.616,643,3.857,750,1.35,1002,1.1,1004,1.824,1005,1.055,1006,1.94,1041,6.621,1045,2.352,1048,2.352,1119,2.452,1120,2.023,1121,4.579,1500,3.565,3335,5.511,3336,6.5,3703,6.018,3704,6.018,3705,6.018,3706,6.018,3707,6.787,3708,8.058,3709,8.058]],["title/components/TsTooltipComponent.html",[118,0.528,1502,1.687]],["body/components/TsTooltipComponent.html",[2,0.062,3,0.045,4,0.038,5,0.046,7,0.602,11,0.689,13,1.154,16,0.928,19,0.008,20,0.864,21,0.775,25,0.079,27,0.208,33,0.072,37,0.046,39,0.005,40,0.005,52,1.702,79,1.036,82,1.712,84,1.185,94,2.38,96,1.526,101,1.535,104,1.002,105,1.327,107,4.383,108,1.209,118,1.038,130,1.712,132,1.631,135,2.507,158,1.965,163,1.059,176,1.327,204,1.091,208,1.383,220,1.2,248,1.965,249,1.706,257,1.638,279,1.069,284,1.834,287,2.218,288,1.772,289,1.924,293,2.918,301,1.885,302,1.609,303,1.774,304,1.809,306,1.736,308,1.311,311,1.846,312,1.846,313,1.602,314,1.602,336,1.675,341,1.809,347,1.535,466,0.751,614,1.712,617,1.752,707,1.047,837,1.834,878,1.638,1005,0.768,1059,1.301,1064,1.675,1080,1.792,1094,2.916,1131,1.834,1136,1.301,1150,2.311,1167,1.752,1177,1.834,1190,1.57,1350,1.792,1351,2.021,1424,2.38,1428,3.332,1443,1.971,1444,3.241,1445,2.021,1446,2.021,1447,2.698,1448,2.021,1449,2.021,1450,1.878,1451,2.021,1452,1.878,1453,2.021,1454,1.792,1455,2.021,1456,1.834,1457,1.834,1458,2.021,1459,1.878,1460,2.021,1461,1.834,1462,2.021,1463,1.834,1464,2.021,1465,2.021,1466,1.792,1467,2.698,1468,1.878,1469,1.878,1470,2.021,1471,1.792,1472,2.021,1473,1.834,1474,2.021,1475,1.834,1476,2.021,1477,1.834,1478,2.021,1479,1.834,1480,2.021,1481,2.021,1482,1.834,1483,2.021,1484,1.792,1485,2.021,1486,1.924,1487,2.021,1488,1.792,1489,1.834,1490,2.021,1491,1.834,1492,2.021,1493,1.924,1494,2.021,1495,1.675,1496,1.327,1497,2.021,1498,1.568,1499,2.021,1500,1.834,1501,2.021,1502,3.065,1503,2.021,1504,1.878,1505,2.021,1506,1.834,1507,2.021,1508,1.675,1509,2.021,1510,1.675,1511,2.698,1512,1.752,1513,2.021,1514,1.792,1515,2.021,1516,1.675,1517,2.021,1518,1.834,1519,2.021,1520,1.675,1521,2.021,1522,1.675,1523,1.792,1524,2.021,1525,1.834,1526,2.021,1527,2.021,1528,1.792,1529,2.021,1530,1.568,1531,2.021,1532,1.792,1533,1.971,1534,2.021,1552,2.768,1744,4.716,1756,3.116,1795,2.698,3710,4.379,3711,5.846,3712,6.594,3713,6.594,3714,7.423,3715,7.423,3716,7.423,3717,6.594,3718,6.594,3719,4.939,3720,6.581,3721,4.939,3722,4.939]],["title/modules/TsTooltipModule.html",[1002,0.62,1042,2.681]],["body/modules/TsTooltipModule.html",[2,0.087,3,0.063,4,0.04,5,0.04,19,0.008,25,0.146,27,0.29,33,0.099,37,0.04,39,0.007,40,0.007,280,2.019,282,0.84,630,1.641,750,1.371,1002,1.11,1004,1.852,1005,1.071,1006,1.97,1042,5.51,1045,2.373,1048,2.373,1119,2.475,1120,2.054,1502,3.553,3723,6.111,3724,6.111,3725,6.111,3726,6.892,3727,8.132,3728,6.892,3729,8.132]],["title/interfaces/TsUser.html",[41,0.554,888,2.919]],["body/interfaces/TsUser.html",[0,1.108,2,0.045,3,0.033,4,0.021,5,0.021,7,0.435,10,1.423,11,0.497,12,0.748,13,1.355,14,0.738,16,0.867,19,0.008,20,0.85,21,0.715,25,0.1,27,0.15,28,1.108,33,0.086,34,1.734,35,1.34,37,0.036,39,0.004,40,0.004,41,0.989,49,1.569,66,1.236,68,1.717,70,1.423,76,3.433,77,1.778,79,1.237,81,1.961,84,1.314,94,2.526,95,0.832,96,1.233,105,0.958,109,2.687,116,2.627,117,1.806,118,0.798,119,1.264,125,2.259,131,2.002,132,0.783,135,1.355,149,2.365,151,2.109,154,1.63,158,1.062,159,1.496,163,0.748,165,2.687,171,1.826,173,0.998,180,0.883,182,1.324,184,1.458,187,1.423,190,1.232,195,1.749,199,1.208,204,0.59,208,0.998,209,2.546,210,2.206,211,1.815,213,2.192,216,2.146,217,1.274,219,1.496,220,0.866,231,0.92,232,1.182,239,1.77,249,1.747,255,1.77,267,1.953,270,1.274,274,1.481,277,1.085,279,1.008,287,2.213,288,0.958,289,2.231,291,1.601,294,1.324,301,1.019,302,0.59,303,0.962,304,0.978,306,0.939,308,0.709,311,0.998,312,0.998,313,0.866,314,0.866,315,0.849,317,1.199,318,0.883,322,2.687,327,2.483,331,1.355,332,1.669,341,0.978,364,1.63,365,1.63,369,1.496,370,1.77,372,1.536,399,4.887,400,2.874,466,1.314,467,3.898,495,2.365,497,1.562,500,2.911,501,1.458,508,1.381,516,1.818,530,2.192,531,1.953,557,1.903,579,1.826,580,2.132,603,1.208,608,1.826,618,2.104,639,2.104,640,1.577,641,2.132,661,1.388,663,2.687,670,3.746,671,1.388,674,1.953,679,4.051,706,2.535,712,2.672,713,1.778,731,2.025,747,1.668,750,1.237,758,1.826,795,1.248,848,1.248,876,3.999,877,2.291,878,2.536,879,3.537,880,1.536,881,2.404,882,5.332,883,4.06,884,2.404,885,3.225,886,2.192,887,2.404,888,3.999,889,4.628,890,3.537,891,3.225,892,4.7,893,3.384,894,3.371,895,2.291,896,2.404,897,3.225,898,2.404,899,5.411,900,2.404,901,3.371,902,1.458,903,3.537,904,2.192,905,1.887,906,2.404,907,2.404,908,2.404,909,2.404,910,2.104,911,2.404,912,3.188,913,4.19,914,2.404,915,3.537,916,2.404,917,2.192,918,3.537,919,4.05,920,2.404,921,2.404,922,4.197,923,3.537,924,2.404,925,2.404,926,2.404,927,2.404,928,2.404,929,2.404,930,2.404,931,3.537,932,2.404,933,2.404,934,2.404,935,3.537,936,3.537,937,4.628,938,1.019,939,3.371,940,2.404,941,2.404,942,2.404,943,2.404,944,2.404,945,2.404,946,2.404,947,2.404,948,1.77,949,1.77,950,2.404,951,3.537,952,2.404,953,2.404,954,2.404,955,3.371,956,2.404,957,2.291,958,2.404,959,3.537,960,1.668,961,2.404,962,1.826,963,2.404,964,2.025,965,2.404,966,2.404,967,2.404,968,3.371,969,2.404,970,2.404,971,3.225,972,2.404,973,2.404,974,2.025,975,2.404,976,3.537,977,3.537,978,3.537,979,3.537,980,3.096,981,2.404,982,3.537,983,4.628,984,2.404,985,2.404,986,3.537,987,3.826,988,2.404,989,2.404,990,1.388,991,1.701,992,1.826,993,2.404,994,2.404,995,2.404,996,2.404,997,1.577,998,2.404,999,2.291,1000,2.404,1001,2.404]],["title/injectables/TsValidationMessageService.html",[0,1.412,3730,3.232]],["body/injectables/TsValidationMessageService.html",[0,2.389,2,0.067,3,0.049,4,0.031,5,0.04,7,0.842,10,2.758,11,0.74,13,1.194,16,0.892,18,1.484,19,0.008,20,0.894,21,0.676,22,0.933,25,0.111,27,0.223,30,1.838,33,0.058,34,1.722,37,0.031,39,0.006,40,0.006,42,4.917,49,1.932,57,4.661,58,3.261,59,3.576,62,2.116,65,3.576,66,1.838,79,1.231,94,2.554,104,1.834,105,2.498,109,2.717,111,3.012,117,1.396,130,1.838,131,1.547,133,4.009,159,2.225,163,0.985,176,1.857,179,3.261,190,1.205,193,4.661,250,3.773,272,2.761,274,1.645,291,1.971,400,3.786,458,2.284,465,3.012,497,2.059,554,2.905,578,3.958,579,3.541,580,1.648,581,4.009,583,4.009,585,5.225,603,2.342,604,3.261,607,3.773,650,3.773,651,2.102,713,1.515,749,4.009,750,1.374,776,2.905,799,2.225,810,4.25,811,4.728,868,4.304,913,2.905,997,2.346,1059,2.024,1091,3.926,1139,2.194,1227,3.261,1297,4.304,1355,4.661,1663,4.304,1769,2.633,1797,3.786,2312,7.488,2324,5.225,2326,5.225,2522,3.773,2606,3.773,2668,5.185,2714,4.917,3040,4.009,3221,6.241,3263,4.304,3303,4.7,3730,4.917,3731,5.61,3732,5.301,3733,6.908,3734,6.908,3735,6.908,3736,8.143,3737,5.301,3738,8.659,3739,6.908,3740,4.304,3741,5.61,3742,6.908,3743,6.908,3744,5.301,3745,5.301,3746,6.908,3747,5.301,3748,4.304,3749,8.445,3750,4.304,3751,9.041,3752,5.61,3753,5.301,3754,4.304,3755,6.241,3756,5.301,3757,5.301,3758,4.304,3759,5.61,3760,5.301,3761,4.304,3762,5.301,3763,5.301,3764,5.301,3765,4.304,3766,5.301,3767,5.61,3768,5.301,3769,6.125,3770,5.301,3771,5.301,3772,5.301,3773,5.301,3774,5.301,3775,6.908,3776,5.301,3777,5.301,3778,5.301,3779,5.301,3780,5.301,3781,5.301]],["title/components/TsValidationMessagesComponent.html",[118,0.528,1504,1.727]],["body/components/TsValidationMessagesComponent.html",[0,1.946,2,0.058,3,0.042,4,0.036,5,0.048,7,0.557,10,2.498,11,0.638,13,1.193,14,1.296,16,0.937,18,1.28,19,0.008,20,0.893,21,0.751,22,0.805,25,0.115,27,0.192,33,0.05,34,1.419,37,0.044,39,0.005,40,0.005,62,1.825,79,0.874,82,1.585,84,1.379,96,1.492,101,1.421,104,1.889,105,2.409,108,1.148,115,3.557,118,1.021,132,1.376,155,4.454,163,0.893,190,1.095,204,1.27,220,1.111,225,3.779,226,1.307,248,1.865,249,1.653,257,1.516,259,2.22,273,1.622,279,1.014,284,1.698,287,2.149,288,1.682,289,1.826,302,1.604,303,1.767,304,1.717,306,1.648,308,1.245,313,1.52,314,1.52,325,1.615,332,0.966,336,1.55,347,1.421,364,1.421,365,1.421,508,1.204,578,3.829,614,1.585,617,1.622,707,0.993,837,1.698,839,3.695,848,1.827,878,1.516,1005,0.711,1059,1.204,1064,1.55,1080,1.659,1091,4.716,1131,1.698,1136,1.204,1167,1.622,1177,1.698,1190,1.49,1231,6.231,1350,1.659,1351,1.871,1353,3.108,1354,3.208,1444,3.141,1445,1.871,1446,1.871,1447,2.561,1448,1.871,1449,1.871,1450,1.739,1451,1.871,1452,1.739,1453,1.871,1454,1.659,1455,1.871,1456,1.698,1457,1.698,1458,1.871,1459,1.739,1460,1.871,1461,1.698,1462,1.871,1463,1.698,1464,1.871,1465,1.871,1466,1.659,1467,2.561,1468,1.739,1469,1.739,1470,1.871,1471,1.659,1472,1.871,1473,1.698,1474,1.871,1475,1.698,1476,1.871,1477,1.698,1478,1.871,1479,1.698,1480,1.871,1481,1.871,1482,1.698,1483,1.871,1484,1.659,1485,1.871,1486,1.781,1487,1.871,1488,1.659,1489,1.698,1490,1.871,1491,1.698,1492,1.871,1493,1.781,1494,1.871,1495,1.55,1496,1.229,1497,1.871,1498,1.452,1499,1.871,1500,1.698,1501,1.871,1502,1.698,1503,1.871,1504,2.918,1505,1.871,1506,1.698,1507,1.871,1508,1.55,1509,1.871,1510,1.55,1511,2.561,1512,1.622,1513,1.871,1514,1.659,1515,1.871,1516,1.55,1517,1.871,1518,1.698,1519,1.871,1520,1.55,1521,1.871,1522,1.55,1523,1.659,1524,1.871,1525,1.698,1526,1.871,1527,1.871,1528,1.659,1529,1.871,1530,1.452,1531,1.871,1532,1.659,1533,1.825,1534,1.871,1879,6.231,1946,3.458,2226,4.733,2364,6.327,3730,5.462,3731,6.739,3782,4.572,3783,6.259,3784,6.259,3785,7.136,3786,4.572,3787,6.259,3788,6.259,3789,4.572,3790,4.572,3791,4.572,3792,4.572,3793,4.054,3794,4.572,3795,6.259,3796,6.259,3797,6.259,3798,4.572,3799,6.259,3800,4.572,3801,4.572,3802,4.572]],["title/modules/TsValidationMessagesModule.html",[1002,0.62,1043,2.489]],["body/modules/TsValidationMessagesModule.html",[2,0.084,3,0.061,4,0.038,5,0.038,19,0.008,25,0.149,27,0.28,33,0.1,37,0.038,39,0.007,40,0.007,104,1.792,226,1.901,280,1.989,282,1.039,630,1.583,750,1.322,1002,1.087,1004,1.787,1005,1.033,1006,1.901,1043,5.153,1045,2.323,1048,2.323,1091,3.779,1119,2.423,1120,1.981,1121,4.524,1126,6.02,1127,5.028,1504,3.622,3730,6.523,3731,5.399,3793,7.058,3803,5.896,3804,5.896,3805,5.896,3806,5.896,3807,6.649,3808,7.96]],["title/injectables/TsValidatorsService.html",[0,1.412,1044,2.793]],["body/injectables/TsValidatorsService.html",[0,2.286,2,0.061,3,0.044,4,0.028,5,0.054,7,0.591,8,2.733,10,2.935,11,0.676,12,0.929,14,1.003,16,0.958,19,0.008,25,0.15,27,0.204,28,1.507,32,2.862,33,0.071,37,0.043,39,0.005,40,0.005,43,1.573,49,2.071,51,1.303,52,1.251,53,2.731,54,2.363,71,3.116,77,2.102,104,1.85,105,1.303,108,1.692,109,2.484,111,2.754,118,0.564,130,1.68,148,3.935,163,1.353,180,1.201,190,0.691,226,1.385,259,2.908,272,2.208,277,1.475,279,1.055,291,1.52,332,1.375,458,3.387,578,2.145,603,2.208,604,4.005,810,5.194,811,5.194,848,1.751,990,3.194,1044,4.835,1059,2.07,1203,3.27,1208,4.727,1209,3.844,1229,2.754,1355,3.27,1897,4.186,1987,3.935,2161,3.665,2214,3.27,2324,6.202,2326,6.202,2513,3.665,2549,3.665,2668,5.82,2687,3.935,2707,3.935,2888,5.97,3740,3.935,3741,3.935,3748,6.659,3750,6.856,3752,5.287,3754,6.659,3755,5.97,3758,6.659,3759,5.287,3761,6.659,3765,6.659,3767,6.856,3769,7.487,3809,4.846,3810,7.352,3811,4.846,3812,7.352,3813,4.846,3814,7.352,3815,4.846,3816,7.352,3817,4.846,3818,7.352,3819,4.846,3820,7.352,3821,4.846,3822,7.352,3823,4.846,3824,7.352,3825,4.846,3826,7.352,3827,4.846,3828,7.352,3829,4.846,3830,7.352,3831,4.846,3832,7.352,3833,4.846,3834,7.352,3835,4.846,3836,7.352,3837,4.846,3838,8.444,3839,4.846,3840,4.846,3841,5.773,3842,4.297,3843,4.846,3844,4.846,3845,4.846,3846,4.846,3847,4.846,3848,4.846,3849,4.846,3850,4.846,3851,4.846,3852,4.846,3853,4.846,3854,4.846,3855,4.846,3856,4.846,3857,4.846,3858,4.846]],["title/directives/TsVerticalSpacingDirective.html",[707,0.721,1532,1.648]],["body/directives/TsVerticalSpacingDirective.html",[0,1.795,2,0.073,3,0.053,4,0.033,5,0.049,7,0.89,10,2.304,11,0.806,13,0.897,14,1.195,16,0.866,18,2.043,19,0.008,20,0.849,21,0.848,22,1.409,25,0.117,27,0.243,33,0.079,34,1.672,37,0.049,39,0.006,40,0.006,49,1.321,52,2.286,56,4.725,79,1.117,81,2.479,84,1.311,94,3.856,95,1.376,96,1.511,104,1.171,108,1.468,117,2.332,132,1.759,158,2.175,163,1.335,176,1.552,187,3.194,190,0.824,195,1.321,210,2.982,221,2.363,241,3.895,267,3.164,273,2.047,277,2.435,301,2.086,302,1.208,420,5.119,422,3.74,466,1.11,497,1.72,541,5.519,707,1.376,834,4.109,913,4.929,960,2.702,1136,1.52,1140,4.109,1150,2.702,1220,3.551,1227,3.551,1443,2.304,1532,2.904,1533,3.461,1806,4,2211,4.366,2331,4.366,2790,5.144,3025,6.802,3859,7.455,3860,5.119,3861,7.455,3862,5.773,3863,7.297,3864,5.773,3865,5.773,3866,5.773,3867,5.773,3868,5.773,3869,5.773,3870,5.773,3871,5.773,3872,5.773]],["title/classes/Version.html",[32,2.681,37,0.026]],["body/classes/Version.html",[2,0.083,3,0.06,4,0.038,5,0.053,7,0.805,11,0.921,12,1.131,13,1.474,14,1.366,16,0.928,18,1.848,19,0.008,20,0.768,21,0.882,22,1.162,28,2.052,32,5.32,33,0.086,34,1.312,35,1.422,37,0.046,39,0.006,40,0.006,79,1.339,712,3.51,1205,6.038,1960,4.453,3167,4.991,3873,6.6,3874,7.811,3875,8.809,3876,7.811,3877,6.6,3878,7.925,3879,6.6,3880,6.6,3881,6.6,3882,6.6,3883,6.6,3884,6.6,3885,6.6,3886,6.6,3887,6.6,3888,6.6,3889,6.6]],["title/contributing.html",[166,1.339,3890,3.067,3891,3.067]],["body/contributing.html",[3,0.059,4,0.028,5,0.037,7,0.784,13,0.74,19,0.006,20,0.554,28,1.48,32,2.811,35,1.81,39,0.005,40,0.005,49,1.089,51,1.28,52,1.229,61,2.294,69,2.506,71,3.061,94,2.294,95,0.756,105,1.958,106,2.365,117,1.919,126,5.226,130,2.526,132,1.047,158,1.419,165,2.44,174,1.512,179,2.929,183,3.011,184,1.949,191,5.704,201,1.855,262,2.134,274,1.134,279,1.265,282,0.888,294,1.768,297,5.499,318,1.18,331,1.811,341,1.306,369,2.701,404,3.859,491,2.61,493,3.011,495,2.771,508,2.212,578,2.847,603,1.614,606,3.389,607,4.579,631,3.526,637,4.916,640,2.107,652,3.061,712,1.855,750,0.947,751,2.365,755,3.601,776,2.61,787,3.061,813,5.401,829,5.804,834,3.389,964,4.141,971,5.014,980,5.37,991,1.545,992,3.999,1094,2.811,1095,2.44,1139,1.512,1148,3.799,1198,1.901,1206,3.389,1215,6.337,1347,3.866,1384,1.901,1410,4.579,1443,2.568,1615,2.365,1635,2.929,1641,4.916,1652,4.222,1677,4.222,1685,2.521,1733,2.294,1752,2.61,1757,2.706,1770,2.521,1790,2.61,1802,2.706,1978,3.866,2012,4.916,2112,4.222,2126,3.866,2139,3.866,2176,6.346,2213,5.13,2226,3.601,2290,4.222,2317,3.656,2319,4.222,2321,3.061,2448,3.389,2479,5.554,2522,6.3,2549,3.601,2692,3.866,2698,3.389,2703,4.865,2705,5.51,2788,4.222,2790,3.061,2864,5.704,3167,4.865,3218,3.061,3262,3.601,3343,2.929,3451,3.866,3536,4.222,3565,5.704,3606,7.092,3646,4.222,3842,7.614,3874,4.222,3876,4.222,3891,5.917,3892,7.804,3893,4.222,3894,4.222,3895,6.433,3896,7.286,3897,8.151,3898,7.848,3899,9.027,3900,7.804,3901,6.433,3902,4.761,3903,7.286,3904,8.151,3905,4.761,3906,6.919,3907,4.761,3908,6.433,3909,6.433,3910,7.286,3911,4.761,3912,7.286,3913,6.433,3914,6.433,3915,4.761,3916,3.866,3917,4.761,3918,4.761,3919,4.761,3920,7.286,3921,6.433,3922,4.222,3923,4.761,3924,4.761,3925,4.761,3926,6.461,3927,4.761,3928,4.761,3929,4.761,3930,4.761,3931,4.761,3932,3.866,3933,4.761,3934,4.761,3935,4.761,3936,4.761,3937,4.761,3938,4.761,3939,4.761,3940,4.761,3941,4.761,3942,4.761,3943,4.761,3944,4.761,3945,4.761,3946,6.433,3947,6.433,3948,4.761,3949,4.761,3950,4.761,3951,7.227,3952,8.851,3953,9.204,3954,6.433,3955,7.804,3956,8.4,3957,7.286,3958,7.286,3959,6.433,3960,7.804,3961,6.433,3962,4.761,3963,4.761,3964,4.222,3965,4.761,3966,4.761,3967,7.286,3968,4.761,3969,6.433,3970,4.761,3971,4.222,3972,7.286,3973,4.761,3974,4.761,3975,4.761,3976,4.761,3977,4.761,3978,4.761,3979,4.761,3980,4.761,3981,6.433,3982,4.761,3983,4.222,3984,4.222]],["title/dependencies.html",[1004,1.47,3985,3.777]],["body/dependencies.html",[9,3.373,19,0.008,27,0.295,39,0.007,40,0.007,71,4.501,226,2.001,231,1.807,232,2.322,327,2.795,341,2.251,554,3.837,671,2.727,770,4.134,789,5.537,1004,1.882,1059,1.844,1105,4.983,1120,2.086,1181,3.837,1443,3.276,2559,6.207,2613,5.685,3131,4.983,3149,5.294,3150,5.294,3986,7.001,3987,9.425,3988,7.001,3989,7.001,3990,7.001,3991,7.001,3992,7.001,3993,7.001,3994,7.001,3995,7.001,3996,8.207,3997,7.001,3998,7.001,3999,7.001,4000,7.001]],["title/index.html",[11,0.527,166,1.339,3890,3.067]],["body/index.html",[3,0.038,4,0.043,5,0.047,8,2.464,10,2.343,11,0.582,19,0.006,20,0.485,25,0.118,28,1.296,32,2.461,39,0.005,40,0.005,49,1.844,50,5.204,51,2.167,52,1.515,54,3.417,56,2.461,63,3.61,66,1.445,68,2.828,71,3.773,77,2.305,79,0.819,82,2.035,96,1.489,101,2.112,104,1.681,105,1.12,111,2.368,115,1.845,118,0.79,129,2.812,130,1.445,148,3.384,151,2.303,158,2.024,163,1.207,164,2.812,166,1.478,174,1.324,176,1.577,179,2.564,180,1.455,183,1.95,198,4.54,231,1.076,232,1.382,237,2.284,241,2.812,246,3.695,249,0.898,255,2.07,259,2.081,262,2.578,270,1.013,272,2.303,275,1.478,277,1.268,279,1.195,282,0.716,288,1.12,291,1.37,297,2.812,303,0.764,317,0.953,327,1.664,331,2.583,369,1.75,370,1.515,404,2.207,458,2.529,465,2.368,466,0.893,468,3.695,493,3.179,516,2.355,531,2.284,557,2.13,580,1.296,600,4.177,603,1.99,604,2.564,614,1.445,620,3.478,631,3.217,643,2.368,651,1.268,656,3.152,677,2.564,750,1.167,751,2.915,787,2.68,789,3.96,799,1.75,800,3.152,810,3.61,811,3.61,813,3.773,829,2.68,883,2.598,905,3.108,910,2.461,913,4.041,939,2.68,948,2.07,949,2.07,957,2.68,990,3.027,997,1.845,1004,1.12,1047,2.966,1059,2.123,1064,2.303,1080,1.512,1106,2.67,1133,3.695,1134,3.152,1139,1.324,1144,3.152,1181,2.284,1186,1.382,1188,3.384,1191,2.008,1197,3.152,1203,2.812,1224,2.136,1299,1.896,1304,2.68,1355,3.96,1379,3.695,1384,3.102,1410,4.177,1427,1.845,1457,2.18,1496,1.577,1568,2.812,1604,3.152,1622,3.108,1635,5.203,1641,5.589,1660,2.207,1662,8.484,1722,2.07,1744,2.136,1878,2.966,1881,3.773,1887,3.695,1897,2.68,1905,3.384,1957,2.207,1978,3.384,1985,4.438,2002,5.204,2098,3.008,2143,2.966,2154,3.695,2159,3.384,2167,3.384,2172,3.384,2185,3.695,2212,3.152,2233,3.384,2254,2.812,2313,5.204,2324,3.152,2326,3.152,2368,3.384,2513,5.137,2549,4.438,2553,3.695,2602,3.695,2668,3.96,2669,3.384,2705,3.152,2785,5.204,2787,3.695,2856,3.152,2857,3.695,2866,3.695,2888,3.384,2933,5.204,2994,3.695,2997,3.695,3040,3.152,3041,5.516,3113,8.531,3124,3.695,3125,3.695,3131,2.966,3218,2.68,3325,6.891,3328,3.695,3361,2.966,3529,5.204,3570,3.695,3606,3.384,3677,3.695,3687,3.695,3711,3.695,3740,4.766,3741,3.384,3748,3.384,3750,3.384,3752,4.766,3754,3.384,3755,5.516,3758,3.384,3759,4.766,3761,3.384,3765,3.384,3767,4.766,3841,5.204,3891,5.516,3893,3.695,3894,6.023,3898,7.624,3906,3.695,3916,3.384,3922,6.023,3926,3.695,3951,3.695,3964,6.023,3971,3.695,3983,3.695,3984,3.695,4001,5.869,4002,6.793,4003,5.869,4004,5.869,4005,5.869,4006,4.168,4007,4.168,4008,4.168,4009,4.168,4010,4.168,4011,4.168,4012,4.168,4013,4.168,4014,3.695,4015,6.793,4016,4.168,4017,4.168,4018,4.168,4019,4.168,4020,4.168,4021,4.168,4022,4.168,4023,6.793,4024,9.639,4025,4.168,4026,4.168,4027,4.168,4028,4.168,4029,4.168,4030,4.168,4031,4.168,4032,4.168,4033,4.168,4034,4.168,4035,4.168,4036,4.168,4037,4.168,4038,4.168,4039,4.168,4040,4.168,4041,4.168,4042,4.168,4043,4.168,4044,4.168,4045,4.168,4046,4.168,4047,4.168,4048,4.168,4049,4.168,4050,4.168,4051,4.168,4052,4.168,4053,4.168,4054,4.168,4055,4.168,4056,4.168,4057,4.168,4058,4.168,4059,4.168,4060,4.168,4061,4.168,4062,4.168,4063,6.793,4064,4.168,4065,4.168,4066,4.168,4067,4.168,4068,4.168,4069,4.168,4070,4.168,4071,4.168,4072,4.168,4073,4.168,4074,4.168,4075,4.168,4076,4.168,4077,4.168,4078,4.168,4079,4.168,4080,4.168,4081,4.168,4082,4.168,4083,6.793,4084,4.168,4085,5.869,4086,5.869,4087,4.168,4088,4.168,4089,4.168]],["title/license.html",[166,1.339,3890,3.067,4090,3.349]],["body/license.html",[4,0.039,5,0.039,19,0.007,39,0.007,40,0.007,70,1.554,114,6.548,279,1.307,282,0.828,368,4.368,379,5.44,750,1.351,813,4.368,893,3.007,910,5.252,1094,4.012,1148,5.077,1194,5.517,1199,5.138,1424,3.274,1641,4.584,1795,2.781,1846,5.517,2012,4.584,2053,4.368,2166,6.024,2186,6.024,2189,5.801,2221,6.548,2226,5.138,2325,5.138,2450,4.836,2513,5.138,3132,5.138,3247,5.517,3501,6.024,3916,5.517,4090,6.024,4091,6.794,4092,8.599,4093,9.48,4094,6.794,4095,8.064,4096,6.794,4097,6.794,4098,6.794,4099,6.794,4100,8.064,4101,6.794,4102,6.794,4103,6.794,4104,6.794,4105,6.794,4106,6.794,4107,6.794,4108,6.794,4109,8.064,4110,6.794,4111,8.064,4112,6.794,4113,6.794,4114,6.794,4115,6.794,4116,6.794,4117,6.794,4118,6.794,4119,6.794,4120,6.794,4121,6.794,4122,6.794,4123,6.794]],["title/modules.html",[1002,0.85]],["body/modules.html",[19,0.006,39,0.006,40,0.006,176,2.621,1002,0.851,1003,4.716,1012,4.438,1013,4.207,1014,3.302,1015,4.438,1016,4.438,1017,4.438,1018,4.207,1019,4.438,1020,4.438,1021,4.438,1022,4.207,1023,4.438,1024,4.009,1025,2.837,1026,3.836,1027,4.207,1028,4.438,1029,4.438,1030,4.438,1031,4.207,1032,4.438,1033,4.207,1034,4.438,1035,4.438,1036,4.438,1037,4.207,1038,4.207,1039,4.207,1040,4.438,1041,4.438,1042,3.682,1043,3.418,1078,4.438,1443,3.892,1700,4.716,4014,8.646,4124,9.751]],["title/overview.html",[3932,5.058]],["body/overview.html",[0,0.845,1,3.983,19,0.008,33,0.03,37,0.016,39,0.003,40,0.003,41,0.331,118,0.316,254,3.749,257,1.747,280,0.634,281,4.277,282,0.331,284,2.846,617,2.551,620,1.141,630,0.647,707,0.431,750,0.541,836,3.983,837,2.846,878,2.386,1002,0.583,1003,7.309,1004,0.731,1005,0.422,1006,0.777,1007,2.41,1008,2.41,1009,2.41,1010,2.41,1011,2.41,1012,6.055,1013,5.392,1014,4.609,1015,6.152,1016,5.998,1017,6.152,1018,5.392,1019,5.935,1020,5.935,1021,5.782,1022,5.558,1023,6.299,1024,5.361,1025,4.026,1026,5.417,1027,5.558,1028,5.782,1029,6.299,1030,5.58,1031,5.686,1032,5.782,1033,5.872,1034,5.935,1035,5.58,1036,5.935,1037,5.558,1038,5.626,1039,5.392,1040,6.629,1041,5.58,1042,4.924,1043,4.738,1044,3.988,1045,1.245,1078,6.106,1098,3.553,1114,2.41,1115,2.41,1117,2.41,1131,2.672,1158,2.41,1159,2.41,1160,2.41,1163,2.41,1164,2.41,1166,2.41,1167,2.551,1173,2.41,1174,2.41,1176,2.41,1177,2.672,1227,1.672,1350,2.611,1450,2.736,1452,2.736,1454,2.611,1456,1.956,1459,2.736,1461,2.672,1463,2.846,1466,2.611,1468,2.736,1469,2.736,1471,2.78,1473,2.672,1475,1.956,1477,2.672,1479,2.672,1482,2.672,1484,2.78,1488,2.611,1489,2.672,1491,2.672,1493,2.984,1495,2.439,1498,2.285,1500,2.846,1502,2.672,1504,2.736,1506,2.672,1508,2.598,1510,2.439,1512,2.551,1514,2.611,1516,2.598,1518,2.672,1520,2.598,1522,2.439,1523,2.78,1525,2.672,1528,2.78,1530,2.285,1532,2.611,1535,2.41,1536,2.41,1538,2.41,1700,5.441,1701,2.41,1702,2.41,1703,2.41,1704,2.41,1858,2.41,1859,2.41,1860,2.41,1861,2.41,1968,2.41,1969,2.41,1970,2.41,2058,2.41,2059,2.41,2061,2.41,2146,2.41,2147,2.41,2149,2.41,2152,5.12,2304,2.41,2305,2.41,2307,2.41,2331,2.056,2345,4.277,2373,2.41,2374,2.41,2375,2.41,2377,2.41,2402,2.41,2403,2.41,2404,2.41,2406,2.41,2407,2.41,2515,2.41,2516,2.41,2518,2.41,2571,2.41,2572,2.41,2573,2.41,2582,2.41,2583,2.41,2584,2.41,2586,2.41,2588,4.67,2607,2.41,2608,2.41,2610,2.41,2661,2.41,2662,2.41,2663,2.41,2730,2.41,2731,2.41,2733,2.41,2737,2.41,2738,2.41,2739,2.41,2740,2.41,2811,2.41,2812,2.41,2814,2.41,2848,2.41,2849,2.41,2851,2.41,2979,2.41,2980,2.41,2982,2.41,2985,2.41,2986,2.41,2987,2.41,2988,5.441,2989,5.441,2990,5.441,2991,5.441,3036,3.983,3090,2.41,3091,2.41,3092,2.41,3094,2.41,3193,2.41,3194,2.41,3195,2.41,3270,2.41,3271,2.41,3273,2.41,3276,2.41,3277,2.41,3278,2.41,3280,2.41,3281,4.67,3336,3.983,3514,2.41,3515,2.41,3516,2.41,3523,2.41,3524,2.41,3525,2.41,3666,2.41,3667,2.41,3668,2.41,3670,2.41,3703,2.41,3704,2.41,3705,2.41,3706,2.41,3723,2.41,3724,2.41,3725,2.41,3730,3.749,3803,2.41,3804,2.41,3805,2.41,3806,2.41,3932,2.207,4125,2.718,4126,2.718,4127,2.718,4128,2.718,4129,2.718]],["title/miscellaneous/typealiases.html",[4130,3.349,4131,5.47]],["body/miscellaneous/typealiases.html",[4,0.024,5,0.056,8,2.485,11,0.589,16,0.969,19,0.008,20,0.689,21,0.895,22,0.743,35,0.909,39,0.005,40,0.005,44,3.641,49,1.564,56,2.491,58,3.641,59,2.846,60,2.846,76,1.531,77,1.206,79,0.826,81,1.954,94,2.852,96,0.758,97,5.171,99,3.741,100,3.741,104,0.856,107,3.495,108,1.254,116,2.256,117,1.111,121,3.19,130,2.052,141,4.867,150,2.852,151,2.007,163,0.975,174,1.88,176,1.992,180,2.209,187,2.363,190,0.844,199,2.007,201,1.643,204,0.698,250,3.003,251,2.871,262,1.399,272,1.43,274,2.204,279,1.266,284,1.567,289,1.231,290,1.463,300,2.033,317,0.965,341,1.624,422,3.034,464,2.198,466,0.642,516,1.463,541,4.476,580,1.311,598,3.19,600,3.003,617,2.099,630,1.005,631,3.244,634,3.19,635,5.171,648,5.171,675,3.295,706,1.463,707,0.94,712,1.643,789,2.846,790,3.426,793,4.806,794,5.552,795,1.005,799,2.871,800,3.19,804,3.426,806,3.19,807,4.806,809,4.806,810,2.595,811,4.206,829,2.712,832,3.426,833,5.552,848,1.005,877,2.712,878,1.399,891,2.595,893,2.62,897,2.595,899,4.396,905,3.926,919,2.491,938,1.954,1059,1.111,1064,1.43,1081,3.003,1094,3.495,1095,2.162,1106,3.111,1107,3.026,1167,2.425,1186,1.399,1220,2.595,1227,2.595,1305,3.003,1349,3.426,1350,2.148,1352,3.741,1364,5.248,1371,3.741,1373,6.063,1387,2.712,1414,6.063,1415,3.741,1416,3.741,1417,3.741,1418,3.741,1419,3.741,1423,2.095,1424,2.852,1426,3.426,1427,1.867,1428,3.993,1429,3.003,1430,2.595,1433,2.94,1471,2.148,1484,1.531,1496,1.134,1502,1.567,1530,2.172,1532,1.531,1601,3.741,1615,2.94,1626,6.063,1632,3.741,1635,2.595,1660,3.621,1661,3.504,1665,3.244,1666,3.741,1667,3.741,1668,3.741,1669,3.741,1685,2.234,1711,2.397,1712,4.213,1717,2.397,1722,2.095,1723,2.234,1725,3.886,1728,3.364,1729,2.033,1730,2.397,1731,2.397,1732,2.312,1733,2.852,1734,2.397,1735,2.397,1736,2.397,1737,3.886,1738,2.397,1739,2.397,1740,2.397,1741,2.397,1742,2.397,1743,2.033,1744,3.034,1745,2.397,1746,2.397,1747,3.886,1748,3.886,1749,2.397,1750,2.397,1751,2.397,1752,2.312,1753,3.886,1754,2.397,1755,2.397,1756,2.871,1780,2.234,1782,2.312,1791,3.886,2152,3.003,2153,3.741,2157,6.063,2159,3.426,2167,3.426,2172,3.426,2211,3.19,2213,3.364,2254,2.846,2331,3.19,2399,3.426,2400,5.248,2498,5.171,2500,5.171,2520,3.741,2540,6.063,2564,3.426,2565,3.741,2668,3.993,2743,3.741,2757,6.063,2761,6.063,2763,6.063,2766,6.063,2790,4.396,3004,3.19,3005,4.806,3025,6.286,3035,5.552,3130,3.426,3151,6.02,3342,3.003,3345,2.595,3348,2.595,3349,2.712,3534,3.741,3710,3.741,3720,6.063,3859,3.741,3860,5.248,3861,6.063,4130,3.741,4132,4.219,4133,5.919,4134,4.219,4135,5.919,4136,5.919,4137,6.838,4138,4.219,4139,8.094,4140,4.219,4141,4.219,4142,5.919,4143,4.219,4144,6.838,4145,5.919,4146,6.838,4147,6.838,4148,4.219,4149,4.219,4150,4.219,4151,6.838,4152,4.219,4153,4.219,4154,4.219,4155,5.919,4156,4.219,4157,4.219,4158,4.219,4159,4.219,4160,4.219,4161,4.219,4162,4.219,4163,4.219,4164,4.219,4165,4.219,4166,4.219]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":81,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsLinkComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["0,000[.00",{"_index":805,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["000",{"_index":802,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["0000",{"_index":803,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["00000|00000",{"_index":808,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["02",{"_index":2170,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["02/08/2018",{"_index":2163,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["08t05:00:00.000z",{"_index":2171,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["1",{"_index":187,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["1);set",{"_index":2327,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["10",{"_index":267,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["10.0.0",{"_index":2187,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["100",{"_index":133,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsValidationMessageService.html":{}}}],["100`exampl",{"_index":140,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["100px",{"_index":3571,"title":{},"body":{"components/TsTableComponent.html":{}}}],["101",{"_index":2128,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["1024",{"_index":268,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["10mb",{"_index":265,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["12);use",{"_index":2332,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["12:00:00am",{"_index":2169,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["12rem",{"_index":3572,"title":{},"body":{"components/TsTableComponent.html":{}}}],["138",{"_index":3044,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["14",{"_index":4128,"title":{},"body":{"overview.html":{}}}],["16",{"_index":4127,"title":{},"body":{"overview.html":{}}}],["16:9",{"_index":1415,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["1:1",{"_index":1419,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["1:2",{"_index":427,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["1a237",{"_index":2096,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["1px",{"_index":2131,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["1}&per_page=${perpag",{"_index":3624,"title":{},"body":{"components/TsTableComponent.html":{}}}],["2",{"_index":422,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["2.0.0",{"_index":3993,"title":{},"body":{"dependencies.html":{}}}],["2.23.0",{"_index":3991,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1323,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["200",{"_index":138,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["2000",{"_index":1223,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["2018",{"_index":2166,"title":{},"body":{"pipes/TsDatePipe.html":{},"license.html":{}}}],["243",{"_index":2965,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["2;set",{"_index":2206,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["3",{"_index":2211,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["3.7.2",{"_index":3999,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":134,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["300x100",{"_index":136,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["300x50",{"_index":139,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["312",{"_index":3955,"title":{},"body":{"contributing.html":{}}}],["32",{"_index":4129,"title":{},"body":{"overview.html":{}}}],["33",{"_index":4126,"title":{},"body":{"overview.html":{}}}],["35",{"_index":4125,"title":{},"body":{"overview.html":{}}}],["3:2",{"_index":1417,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["3:4",{"_index":428,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{}}}],["4",{"_index":1220,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["400",{"_index":144,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["4:3",{"_index":1416,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["5",{"_index":2331,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"directives/TsVerticalSpacingDirective.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["5.0.1",{"_index":4000,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":137,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["500",{"_index":145,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["5:4",{"_index":1418,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["6",{"_index":1227,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["6.0.0",{"_index":3988,"title":{},"body":{"dependencies.html":{}}}],["6.0.7",{"_index":3987,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":3995,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":3996,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":146,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["72",{"_index":143,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["8",{"_index":2203,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["8.13.1",{"_index":3992,"title":{},"body":{"dependencies.html":{}}}],["800",{"_index":147,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["83",{"_index":3043,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["8th",{"_index":2165,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["9.]/g",{"_index":828,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["900",{"_index":801,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["9]/g",{"_index":826,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["9_",{"_index":3244,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["_",{"_index":3114,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["_acceptedtyp",{"_index":393,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_background",{"_index":2526,"title":{},"body":{"components/TsIconComponent.html":{}}}],["_border",{"_index":1360,"title":{},"body":{"components/TsCardComponent.html":{}}}],["_cdkcolumndef",{"_index":3465,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_columncount",{"_index":1245,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_columnhead",{"_index":1257,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_columnvalid",{"_index":1261,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_currentpageindex",{"_index":2905,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["_data",{"_index":3629,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["_debouncedelay",{"_index":711,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["_direct",{"_index":3379,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["_disableclear",{"_index":3383,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["_formatmodelvaluefn",{"_index":3065,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_formatuilabelfn",{"_index":3058,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_formatuisublabelfn",{"_index":3061,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_formcontrol",{"_index":398,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_handleclick",{"_index":3456,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_hidebutton",{"_index":409,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_id",{"_index":413,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["_initiald",{"_index":2363,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["_intl",{"_index":3464,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_intl.chang",{"_index":3468,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_intl.sortdescriptionlabel(id",{"_index":3498,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["_ischeck",{"_index":1918,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["_isdis",{"_index":3165,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_issort",{"_index":3455,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_isvisu",{"_index":3069,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_iszerobas",{"_index":2896,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["_maxdat",{"_index":2350,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["_maximumkilobytesperfil",{"_index":417,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_maxrow",{"_index":1240,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_mindat",{"_index":2351,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["_minimumcharact",{"_index":726,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["_multipl",{"_index":436,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_name",{"_index":3072,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_option",{"_index":3075,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_parent",{"_index":1546,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["_progress",{"_index":440,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_ratioconstraint",{"_index":433,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_renderchangessubscript",{"_index":3630,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["_renderdata",{"_index":3631,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["_rowcount",{"_index":1250,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_seedfil",{"_index":457,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_selectionscontrol",{"_index":738,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["_sizeconstraint",{"_index":463,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_small",{"_index":3078,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_sort",{"_index":3463,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_sort._statechang",{"_index":3467,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_sort.direct",{"_index":3499,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["_statechang",{"_index":3370,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["_svgicon",{"_index":2527,"title":{},"body":{"components/TsIconComponent.html":{}}}],["_theme",{"_index":1361,"title":{},"body":{"components/TsCardComponent.html":{}}}],["_totalrecord",{"_index":2913,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["_tssortheadermixinbas",{"_index":3447,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_tssortmixinbas",{"_index":3366,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["_uid",{"_index":320,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["_updatechangesubscript",{"_index":3633,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["_visual",{"_index":1611,"title":{},"body":{"components/TsChart2Component.html":{}}}],["abil",{"_index":1297,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"injectables/TsValidationMessageService.html":{}}}],["abov",{"_index":1094,"title":{},"body":{"modules/TerminusUIModule.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTooltipComponent.html":{},"contributing.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["absolut",{"_index":2126,"title":{},"body":{"components/TsCopyComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"contributing.html":{}}}],["abstract",{"_index":3040,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["abstractcontrol",{"_index":2230,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["accent",{"_index":2564,"title":{},"body":{"components/TsIconComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"miscellaneous/typealiases.html":{}}}],["accept",{"_index":94,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsTableDataSource.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["accept(valu",{"_index":385,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["acceptedtyp",{"_index":392,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["access",{"_index":275,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"index.html":{}}}],["accessor",{"_index":273,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["accident",{"_index":1303,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["accord",{"_index":1283,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["account",{"_index":2791,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["action",{"_index":893,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["actionnam",{"_index":2493,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["activ",{"_index":739,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["actual",{"_index":582,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["actual_compon",{"_index":1534,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["ad",{"_index":1198,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"directives/TsColumnDefDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"contributing.html":{}}}],["add",{"_index":370,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["add/remov",{"_index":2716,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["added(chip",{"_index":653,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["addheaders(headercount",{"_index":1344,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["addon",{"_index":3998,"title":{},"body":{"dependencies.html":{}}}],["addons/dist/createnumbermask",{"_index":824,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["address",{"_index":3740,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["addrows(rowcount",{"_index":1272,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["addseri",{"_index":1828,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["adher",{"_index":3962,"title":{},"body":{"contributing.html":{}}}],["admin",{"_index":884,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["advis",{"_index":3966,"title":{},"body":{"contributing.html":{}}}],["affect",{"_index":2534,"title":{},"body":{"components/TsIconComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["afteranim",{"_index":1834,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"directives/TsChartSeriesDirective.html":{}}}],["aftercontentinit",{"_index":207,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["afterprint",{"_index":1829,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["afterviewinit",{"_index":663,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["ag",{"_index":3546,"title":{},"body":{"components/TsTableComponent.html":{}}}],["again",{"_index":2337,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["ago.pip",{"_index":3001,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["ago.pipe.t",{"_index":3676,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["ago.pipe.ts:16",{"_index":3679,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["ago/tim",{"_index":3000,"title":{},"body":{"modules/TsPipesModule.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["alert",{"_index":2143,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"index.html":{}}}],["alia",{"_index":2633,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["alias",{"_index":4132,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":2536,"title":{},"body":{"components/TsIconComponent.html":{}}}],["allcolumn",{"_index":3553,"title":{},"body":{"components/TsTableComponent.html":{}}}],["allerror",{"_index":1232,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["allitem",{"_index":966,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["allow",{"_index":274,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"pipes/TsDatePipe.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["allowdecim",{"_index":815,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["allowedmaskshorcut",{"_index":835,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["allowedmaskshorcuts.indexof(valu",{"_index":853,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["allowsimag",{"_index":351,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["alon",{"_index":2797,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["along",{"_index":3645,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["alpha.7",{"_index":3994,"title":{},"body":{"dependencies.html":{}}}],["alpha.7glob",{"_index":4049,"title":{},"body":{"index.html":{}}}],["alreadi",{"_index":776,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCopyComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{}}}],["alter",{"_index":1383,"title":{},"body":{"components/TsCardComponent.html":{}}}],["altern",{"_index":3050,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["alway",{"_index":1652,"title":{},"body":{"components/TsChart2Component.html":{},"contributing.html":{}}}],["alwayshidden",{"_index":879,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["am4chart",{"_index":1645,"title":{},"body":{"components/TsChart2Component.html":{}}}],["am4charts.chart",{"_index":1659,"title":{},"body":{"components/TsChart2Component.html":{}}}],["am4cor",{"_index":1643,"title":{},"body":{"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{}}}],["am4core.usetheme(am4themes_anim",{"_index":1707,"title":{},"body":{"modules/TsChart2Module.html":{}}}],["am4map",{"_index":1647,"title":{},"body":{"components/TsChart2Component.html":{}}}],["am4themes_anim",{"_index":1649,"title":{},"body":{"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{}}}],["am4themes_materi",{"_index":1651,"title":{},"body":{"components/TsChart2Component.html":{}}}],["amchart",{"_index":1100,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{}}}],["amcharts.core.usetheme(them",{"_index":1113,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["amcharts.servic",{"_index":1671,"title":{},"body":{"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{}}}],["amcharts.them",{"_index":1111,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["amcharts.themes.length",{"_index":1112,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["amcharts/amcharts4/chart",{"_index":1646,"title":{},"body":{"components/TsChart2Component.html":{}}}],["amcharts/amcharts4/cor",{"_index":1644,"title":{},"body":{"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{}}}],["amcharts/amcharts4/map",{"_index":1648,"title":{},"body":{"components/TsChart2Component.html":{}}}],["amcharts/amcharts4/themes/anim",{"_index":1650,"title":{},"body":{"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{}}}],["amchartsfactori",{"_index":1653,"title":{},"body":{"components/TsChart2Component.html":{}}}],["amchartsservic",{"_index":1619,"title":{},"body":{"components/TsChart2Component.html":{}}}],["amount",{"_index":2888,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["and/or",{"_index":2325,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"license.html":{}}}],["angular",{"_index":1047,"title":{},"body":{"modules/TerminusUIModule.html":{},"interfaces/TsChartEventOptions.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{},"index.html":{}}}],["angular'",{"_index":1901,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["angular/anim",{"_index":3986,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/overlay",{"_index":2008,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"modules/TsConfirmationModule.html":{}}}],["angular/cdk/port",{"_index":2010,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["angular/cdk/t",{"_index":1575,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{}}}],["angular/common",{"_index":1120,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":3574,"title":{},"body":{"components/TsTableComponent.html":{}}}],["angular/cor",{"_index":27,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1181,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/form",{"_index":226,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsPaginatorModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"dependencies.html":{}}}],["angular/http",{"_index":3990,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplet",{"_index":667,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["angular/material/button",{"_index":1170,"title":{},"body":{"modules/TsButtonModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{}}}],["angular/material/checkbox",{"_index":1907,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{}}}],["angular/material/chip",{"_index":1125,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["angular/material/cor",{"_index":1541,"title":{},"body":{"modules/TsCardModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsRadioGroupModule.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["angular/material/datepick",{"_index":2232,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{}}}],["angular/material/icon",{"_index":2560,"title":{},"body":{"components/TsIconComponent.html":{},"modules/TsIconModule.html":{}}}],["angular/material/input",{"_index":1127,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsInputModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["angular/material/menu",{"_index":2803,"title":{},"body":{"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{}}}],["angular/material/progress",{"_index":1129,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsButtonModule.html":{},"modules/TsFileUploadModule.html":{}}}],["angular/material/radio",{"_index":3032,"title":{},"body":{"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{}}}],["angular/material/select",{"_index":3284,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["angular/material/slid",{"_index":3335,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{}}}],["angular/material/tooltip",{"_index":3728,"title":{},"body":{"modules/TsTooltipModule.html":{}}}],["angular/platform",{"_index":2559,"title":{},"body":{"components/TsIconComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":2613,"title":{},"body":{"modules/TsLinkModule.html":{},"modules/TsNavigationModule.html":{},"dependencies.html":{}}}],["anim",{"_index":1878,"title":{},"body":{"directives/TsChartSeriesDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{},"index.html":{}}}],["anoth",{"_index":990,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["answer",{"_index":3924,"title":{},"body":{"contributing.html":{}}}],["anyth",{"_index":757,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["anytim",{"_index":2260,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsTableComponent.html":{}}}],["api",{"_index":165,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["app",{"_index":1663,"title":{},"body":{"components/TsChart2Component.html":{},"components/TsLinkComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["appear",{"_index":106,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsConfirmationDirective.html":{},"contributing.html":{}}}],["appeas",{"_index":2421,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["append",{"_index":1773,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["appli",{"_index":1656,"title":{},"body":{"components/TsChart2Component.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["applic",{"_index":2785,"title":{},"body":{"components/TsMenuComponent.html":{},"index.html":{}}}],["applicationref",{"_index":2628,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["appref",{"_index":2627,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["appropri",{"_index":1685,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["area",{"_index":1722,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["argument",{"_index":1987,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["aria",{"_index":2497,"title":{},"body":{"components/TsIconButtonComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["ariadescribedbi",{"_index":3053,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["arialabel",{"_index":3046,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["arialabelledbi",{"_index":3051,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["aris",{"_index":1199,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsTableComponent.html":{},"license.html":{}}}],["around",{"_index":1409,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsCopyComponent.html":{},"components/TsMenuComponent.html":{}}}],["arr",{"_index":1313,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["arr.indexof(el",{"_index":1314,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["array",{"_index":116,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["array.from(item",{"_index":967,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["arraycontainsobject",{"_index":672,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["arraycontainsobject(select",{"_index":777,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["arrow",{"_index":3449,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["arrow_drop_down",{"_index":2775,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["arrowposit",{"_index":3462,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["asc",{"_index":3348,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/typealiases.html":{}}}],["ascend",{"_index":1800,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["ask",{"_index":2003,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["aspect",{"_index":1371,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["aspectratio",{"_index":1363,"title":{},"body":{"components/TsCardComponent.html":{}}}],["aspectratio(valu",{"_index":1431,"title":{},"body":{"components/TsCardComponent.html":{}}}],["aspectratiopad",{"_index":1362,"title":{},"body":{"components/TsCardComponent.html":{}}}],["assembl",{"_index":1865,"title":{},"body":{"modules/TsChartModule.html":{}}}],["asset",{"_index":4042,"title":{},"body":{"index.html":{}}}],["assign",{"_index":2114,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["assist",{"_index":4004,"title":{},"body":{"index.html":{}}}],["associ",{"_index":2226,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsValidationMessagesComponent.html":{},"contributing.html":{},"license.html":{}}}],["assumpt",{"_index":3555,"title":{},"body":{"components/TsTableComponent.html":{}}}],["async",{"_index":2621,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["asynchron",{"_index":3304,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["attach",{"_index":798,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCardComponent.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{}}}],["attachev",{"_index":1822,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["attempt",{"_index":1196,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["attr",{"_index":515,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["attribut",{"_index":568,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["author",{"_index":4116,"title":{},"body":{"license.html":{}}}],["auto",{"_index":616,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["autocomplet",{"_index":600,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["autocomplete'},{'nam",{"_index":1446,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["autocomplete.compon",{"_index":1130,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["autocomplete.component.html",{"_index":692,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["autocomplete.component.scss",{"_index":693,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["autocomplete/autocomplete.modul",{"_index":1049,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["autocompletetrigg",{"_index":705,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["autocompletetrigger(valu",{"_index":703,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["autofocu",{"_index":1133,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"index.html":{}}}],["autofocus.direct",{"_index":1162,"title":{},"body":{"modules/TsAutofocusModule.html":{}}}],["autofocus/autofocus.modul",{"_index":1050,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsInputModule.html":{}}}],["autom",{"_index":3161,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["automat",{"_index":3218,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{}}}],["autosubmit",{"_index":3210,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["avail",{"_index":77,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["availablespac",{"_index":914,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["avoid",{"_index":2175,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["axi",{"_index":1660,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["b",{"_index":606,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["back",{"_index":335,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{}}}],["backdropclass",{"_index":2027,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["background",{"_index":2528,"title":{},"body":{"components/TsIconComponent.html":{}}}],["background(valu",{"_index":2566,"title":{},"body":{"components/TsIconComponent.html":{}}}],["badg",{"_index":4026,"title":{},"body":{"index.html":{}}}],["band",{"_index":1719,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["bar",{"_index":300,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"modules/TsFileUploadModule.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["bar_valu",{"_index":3012,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["base",{"_index":277,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{}}}],["base.compon",{"_index":260,"title":{},"body":{"interfaces/ImageRatio.html":{},"modules/TerminusUIModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["base.component.t",{"_index":3100,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:26",{"_index":3106,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:31",{"_index":3107,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:36",{"_index":3108,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:42",{"_index":3101,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:47",{"_index":3112,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:53",{"_index":3110,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:61",{"_index":3102,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:69",{"_index":3103,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:77",{"_index":3104,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:85",{"_index":3105,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["basic",{"_index":53,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["baz",{"_index":3014,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["baz_valu",{"_index":3013,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["be",{"_index":2317,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"contributing.html":{}}}],["befor",{"_index":130,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["beforeprint",{"_index":1830,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["begin",{"_index":987,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{}}}],["behavior",{"_index":3343,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"contributing.html":{}}}],["behaviorsubject",{"_index":670,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSelectedFile.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{}}}],["behaviorsubject(initialdata",{"_index":3658,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["behaviorsubject(this.filerefer",{"_index":2424,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["behaviorsubject(undefin",{"_index":2245,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["believ",{"_index":4022,"title":{},"body":{"index.html":{}}}],["belong",{"_index":1885,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["below",{"_index":107,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["benjamin",{"_index":4059,"title":{},"body":{"index.html":{}}}],["best",{"_index":751,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"contributing.html":{},"index.html":{}}}],["beta.15",{"_index":4047,"title":{},"body":{"index.html":{}}}],["beta.16",{"_index":3989,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1790,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["between",{"_index":159,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{}}}],["bind",{"_index":1147,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"pipes/TsDatePipe.html":{},"classes/TsDatepickerInputEvent.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["bing",{"_index":3011,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["blob",{"_index":1192,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["blob([join",{"_index":1348,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["blobgener",{"_index":1263,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["block",{"_index":2558,"title":{},"body":{"components/TsIconComponent.html":{}}}],["blur",{"_index":839,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["bodi",{"_index":1214,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["bodyportalhost",{"_index":2622,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["boilerpl",{"_index":3364,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["book",{"_index":4039,"title":{},"body":{"index.html":{}}}],["bookmark",{"_index":2514,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["boolean",{"_index":84,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["bootstrap",{"_index":1006,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["border",{"_index":1364,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["border(valu",{"_index":1437,"title":{},"body":{"components/TsCardComponent.html":{}}}],["borderclass",{"_index":1405,"title":{},"body":{"components/TsCardComponent.html":{}}}],["both",{"_index":2254,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["bottom",{"_index":1429,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["bound",{"_index":2195,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["box",{"_index":3066,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["bracket",{"_index":816,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["branch",{"_index":3953,"title":{},"body":{"contributing.html":{}}}],["breadcrumb",{"_index":4027,"title":{},"body":{"index.html":{}}}],["break",{"_index":917,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["breakpoint",{"_index":957,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["breakwidth",{"_index":918,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["brian",{"_index":4069,"title":{},"body":{"index.html":{}}}],["brows",{"_index":4014,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browser",{"_index":1443,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"dependencies.html":{},"modules.html":{}}}],["budget",{"_index":2792,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["bug",{"_index":3904,"title":{},"body":{"contributing.html":{}}}],["built",{"_index":1262,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["bullet",{"_index":1749,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["button",{"_index":151,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["button'",{"_index":2001,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["button'},{'nam",{"_index":1447,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["button.compon",{"_index":1172,"title":{},"body":{"modules/TsButtonModule.html":{},"modules/TsIconButtonModule.html":{}}}],["button.component.html",{"_index":2492,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.scss",{"_index":2491,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.t",{"_index":2488,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:50",{"_index":2499,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:56",{"_index":2501,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:62",{"_index":2502,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:68",{"_index":2503,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:74",{"_index":2504,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:80",{"_index":2507,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:82",{"_index":2496,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.modul",{"_index":1066,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsFileUploadModule.html":{}}}],["button.module.t",{"_index":2519,"title":{},"body":{"modules/TsIconButtonModule.html":{}}}],["button/button.compon",{"_index":2014,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsMenuComponent.html":{}}}],["button/button.modul",{"_index":1051,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsFileUploadModule.html":{},"components/TsIconButtonComponent.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMenuModule.html":{},"modules/TsPaginatorModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{}}}],["button/icon",{"_index":1065,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsFileUploadModule.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{}}}],["buttonact",{"_index":3202,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["buttonmessag",{"_index":342,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["buttontyp",{"_index":2494,"title":{},"body":{"components/TsIconButtonComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["bypass",{"_index":2447,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["byte",{"_index":261,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["bytes_per_kb",{"_index":2415,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["c",{"_index":368,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"license.html":{}}}],["c.height.max",{"_index":375,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["c.height.max.tolocalestr",{"_index":381,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["c.height.min",{"_index":374,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["c.height.min.tolocalestr",{"_index":380,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["c.width.max",{"_index":377,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["c.width.max.tolocalestr",{"_index":383,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["c.width.min",{"_index":376,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["c.width.min.tolocalestr",{"_index":382,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["c.width.min.tolocalestring()}x${c.height.min.tolocalestr",{"_index":378,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["calcul",{"_index":2414,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["calendar",{"_index":2313,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"index.html":{}}}],["call",{"_index":492,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsTableDataSource.html":{}}}],["callback",{"_index":1743,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsToggleComponent.html":{},"miscellaneous/typealiases.html":{}}}],["can't",{"_index":3948,"title":{},"body":{"contributing.html":{}}}],["cancel",{"_index":1984,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{}}}],["candis",{"_index":3356,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["capabl",{"_index":4038,"title":{},"body":{"index.html":{}}}],["captur",{"_index":1566,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTableComponent.html":{}}}],["card",{"_index":1355,"title":{},"body":{"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["card'},{'nam",{"_index":1449,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["card.compon",{"_index":1542,"title":{},"body":{"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{}}}],["card.component.html",{"_index":1359,"title":{},"body":{"components/TsCardComponent.html":{}}}],["card.component.scss",{"_index":1358,"title":{},"body":{"components/TsCardComponent.html":{}}}],["card/card.modul",{"_index":1052,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["card__titl",{"_index":1554,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["case",{"_index":493,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{}}}],["case.pip",{"_index":2999,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["case.pipe.t",{"_index":3327,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["case.pipe.ts:11",{"_index":3329,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["case/sent",{"_index":2998,"title":{},"body":{"modules/TsPipesModule.html":{},"pipes/TsSentenceCasePipe.html":{}}}],["case/titl",{"_index":3002,"title":{},"body":{"modules/TsPipesModule.html":{},"pipes/TsTitleCasePipe.html":{}}}],["cast",{"_index":1587,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["catch",{"_index":2142,"title":{},"body":{"components/TsCopyComponent.html":{},"components/TsTableComponent.html":{}}}],["catcherror",{"_index":3580,"title":{},"body":{"components/TsTableComponent.html":{}}}],["categori",{"_index":1712,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["caus",{"_index":2112,"title":{},"body":{"components/TsCopyComponent.html":{},"contributing.html":{}}}],["cdk",{"_index":3470,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["cdk_row_templ",{"_index":2472,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdkcell",{"_index":1570,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["cdkcelldef",{"_index":1571,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["cdkcolumndef",{"_index":1572,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["cdkheadercel",{"_index":1573,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["cdkheadercelldef",{"_index":1574,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["cdkheaderrow",{"_index":2469,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdkheaderrowdef",{"_index":2473,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdkrow",{"_index":2474,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdkrowdef",{"_index":2475,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdktabl",{"_index":3450,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{}}}],["cdktablemodul",{"_index":3673,"title":{},"body":{"modules/TsTableModule.html":{}}}],["cell",{"_index":1204,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{}}}],["cell'",{"_index":1343,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["cell'},{'nam",{"_index":1511,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["center",{"_index":1375,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{}}}],["centeredcont",{"_index":1365,"title":{},"body":{"components/TsCardComponent.html":{}}}],["certain",{"_index":1203,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["chain",{"_index":1686,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["chanc",{"_index":3930,"title":{},"body":{"contributing.html":{}}}],["chang",{"_index":508,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"contributing.html":{}}}],["change(select",{"_index":658,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["changedetect",{"_index":311,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{}}}],["changedetectionstrategi",{"_index":208,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{}}}],["changedetectionstrategy.onpush",{"_index":312,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{}}}],["changedetectorref",{"_index":209,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{}}}],["changedetectorref.markforcheck",{"_index":3469,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["changelog",{"_index":4081,"title":{},"body":{"index.html":{}}}],["changepag",{"_index":2947,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["changes.hasownproperty('triggerformreset",{"_index":2723,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["changes.iszerobased.currentvalu",{"_index":2932,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["charact",{"_index":604,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["charg",{"_index":4099,"title":{},"body":{"license.html":{}}}],["charity&#x1f4bb",{"_index":4060,"title":{},"body":{"index.html":{}}}],["chart",{"_index":1106,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["chart'",{"_index":1734,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["chart'},{'nam",{"_index":1453,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["chart.compon",{"_index":1824,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"modules/TsChartModule.html":{}}}],["chart.ev",{"_index":1823,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"modules/TsChartModule.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{}}}],["chart.responsive.en",{"_index":1696,"title":{},"body":{"components/TsChart2Component.html":{}}}],["chart/chart.modul",{"_index":1053,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["chart/series/point",{"_index":1841,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["chart2",{"_index":1602,"title":{},"body":{"components/TsChart2Component.html":{}}}],["chart2'},{'nam",{"_index":1451,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["chart2.compon",{"_index":1706,"title":{},"body":{"modules/TsChart2Module.html":{}}}],["chart2.component.html",{"_index":1610,"title":{},"body":{"components/TsChart2Component.html":{}}}],["chart2.component.scss",{"_index":1609,"title":{},"body":{"components/TsChart2Component.html":{}}}],["chartcompon",{"_index":1842,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["chartcomponent[eventname].emit(new",{"_index":1850,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["chartdiv",{"_index":1612,"title":{},"body":{"components/TsChart2Component.html":{}}}],["chartev",{"_index":1827,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["chartevents.foreach((eventnam",{"_index":1847,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["chartiniti",{"_index":1616,"title":{},"body":{"components/TsChart2Component.html":{}}}],["chartobject",{"_index":1726,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["chart|series|point",{"_index":1810,"title":{},"body":{"classes/TsChartEvent.html":{}}}],["check",{"_index":991,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["checkbox",{"_index":1881,"title":{},"body":{"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"index.html":{}}}],["checkbox'},{'nam",{"_index":1455,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["checkbox.compon",{"_index":1973,"title":{},"body":{"modules/TsCheckboxModule.html":{}}}],["checkbox.component.html",{"_index":1909,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1910,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["checkbox/checkbox.compon",{"_index":2718,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["checkbox/checkbox.modul",{"_index":1054,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{}}}],["checkboxclick",{"_index":1835,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"directives/TsChartSeriesDirective.html":{}}}],["checkout",{"_index":3954,"title":{},"body":{"contributing.html":{}}}],["checkpar",{"_index":1547,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["child",{"_index":1376,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["chip",{"_index":656,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"index.html":{}}}],["chips/select",{"_index":697,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["choic",{"_index":2055,"title":{},"body":{"components/TsConfirmationModalComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["chord",{"_index":1669,"title":{},"body":{"components/TsChart2Component.html":{},"miscellaneous/typealiases.html":{}}}],["chose",{"_index":779,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["chosen",{"_index":2005,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["circus_t",{"_index":4040,"title":{},"body":{"index.html":{}}}],["claim",{"_index":4119,"title":{},"body":{"license.html":{}}}],["clariti",{"_index":890,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["class",{"_index":37,"title":{"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsChartEvent.html":{},"classes/TsCheckboxChange.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsImageDimensions.html":{},"classes/TsRadioChange.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"classes/TsSortHeaderBase.html":{},"classes/TsTableDataSource.html":{},"classes/Version.html":{}},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"classes/TsChartEvent.html":{},"modules/TsChartModule.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"overview.html":{}}}],["class.t",{"_index":2563,"title":{},"body":{"components/TsIconComponent.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["clean",{"_index":867,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsConfirmationDirective.html":{}}}],["cleanvalue(valu",{"_index":869,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["clear",{"_index":61,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"contributing.html":{}}}],["clearallrow",{"_index":1338,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["clearfile(id",{"_index":194,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["clearheadercel",{"_index":1340,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["cli",{"_index":4084,"title":{},"body":{"index.html":{}}}],["click",{"_index":149,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}}}],["click(ev",{"_index":1988,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["clickabl",{"_index":3026,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["clickev",{"_index":2495,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["client",{"_index":3628,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["clipboard",{"_index":2067,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["clone",{"_index":959,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["close",{"_index":1770,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsConfirmationDirective.html":{},"contributing.html":{}}}],["cluster_terminusuimodul",{"_index":1007,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_terminusuimodule_declar",{"_index":1008,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_terminusuimodule_export",{"_index":1010,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_terminusuimodule_import",{"_index":1009,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_terminusuimodule_provid",{"_index":1011,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_tsautocompletemodul",{"_index":1114,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"overview.html":{}}}],["cluster_tsautocompletemodule_declar",{"_index":1115,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"overview.html":{}}}],["cluster_tsautocompletemodule_export",{"_index":1117,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"overview.html":{}}}],["cluster_tsautocompletemodule_import",{"_index":1116,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["cluster_tsautofocusmodul",{"_index":1158,"title":{},"body":{"modules/TsAutofocusModule.html":{},"overview.html":{}}}],["cluster_tsautofocusmodule_declar",{"_index":1159,"title":{},"body":{"modules/TsAutofocusModule.html":{},"overview.html":{}}}],["cluster_tsautofocusmodule_export",{"_index":1160,"title":{},"body":{"modules/TsAutofocusModule.html":{},"overview.html":{}}}],["cluster_tsbuttonmodul",{"_index":1163,"title":{},"body":{"modules/TsButtonModule.html":{},"overview.html":{}}}],["cluster_tsbuttonmodule_declar",{"_index":1164,"title":{},"body":{"modules/TsButtonModule.html":{},"overview.html":{}}}],["cluster_tsbuttonmodule_export",{"_index":1166,"title":{},"body":{"modules/TsButtonModule.html":{},"overview.html":{}}}],["cluster_tsbuttonmodule_import",{"_index":1165,"title":{},"body":{"modules/TsButtonModule.html":{}}}],["cluster_tscardmodul",{"_index":1535,"title":{},"body":{"modules/TsCardModule.html":{},"overview.html":{}}}],["cluster_tscardmodule_declar",{"_index":1536,"title":{},"body":{"modules/TsCardModule.html":{},"overview.html":{}}}],["cluster_tscardmodule_export",{"_index":1538,"title":{},"body":{"modules/TsCardModule.html":{},"overview.html":{}}}],["cluster_tscardmodule_import",{"_index":1537,"title":{},"body":{"modules/TsCardModule.html":{}}}],["cluster_tschart2modul",{"_index":1701,"title":{},"body":{"modules/TsChart2Module.html":{},"overview.html":{}}}],["cluster_tschart2module_declar",{"_index":1702,"title":{},"body":{"modules/TsChart2Module.html":{},"overview.html":{}}}],["cluster_tschart2module_export",{"_index":1703,"title":{},"body":{"modules/TsChart2Module.html":{},"overview.html":{}}}],["cluster_tschart2module_provid",{"_index":1704,"title":{},"body":{"modules/TsChart2Module.html":{},"overview.html":{}}}],["cluster_tschartmodul",{"_index":1858,"title":{},"body":{"modules/TsChartModule.html":{},"overview.html":{}}}],["cluster_tschartmodule_declar",{"_index":1859,"title":{},"body":{"modules/TsChartModule.html":{},"overview.html":{}}}],["cluster_tschartmodule_export",{"_index":1860,"title":{},"body":{"modules/TsChartModule.html":{},"overview.html":{}}}],["cluster_tschartmodule_provid",{"_index":1861,"title":{},"body":{"modules/TsChartModule.html":{},"overview.html":{}}}],["cluster_tscheckboxmodul",{"_index":1968,"title":{},"body":{"modules/TsCheckboxModule.html":{},"overview.html":{}}}],["cluster_tscheckboxmodule_declar",{"_index":1969,"title":{},"body":{"modules/TsCheckboxModule.html":{},"overview.html":{}}}],["cluster_tscheckboxmodule_export",{"_index":1970,"title":{},"body":{"modules/TsCheckboxModule.html":{},"overview.html":{}}}],["cluster_tsconfirmationmodul",{"_index":2058,"title":{},"body":{"modules/TsConfirmationModule.html":{},"overview.html":{}}}],["cluster_tsconfirmationmodule_declar",{"_index":2059,"title":{},"body":{"modules/TsConfirmationModule.html":{},"overview.html":{}}}],["cluster_tsconfirmationmodule_export",{"_index":2061,"title":{},"body":{"modules/TsConfirmationModule.html":{},"overview.html":{}}}],["cluster_tsconfirmationmodule_import",{"_index":2060,"title":{},"body":{"modules/TsConfirmationModule.html":{}}}],["cluster_tscopymodul",{"_index":2146,"title":{},"body":{"modules/TsCopyModule.html":{},"overview.html":{}}}],["cluster_tscopymodule_declar",{"_index":2147,"title":{},"body":{"modules/TsCopyModule.html":{},"overview.html":{}}}],["cluster_tscopymodule_export",{"_index":2149,"title":{},"body":{"modules/TsCopyModule.html":{},"overview.html":{}}}],["cluster_tscopymodule_import",{"_index":2148,"title":{},"body":{"modules/TsCopyModule.html":{}}}],["cluster_tscsventrymodul",{"_index":1173,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"overview.html":{}}}],["cluster_tscsventrymodule_declar",{"_index":1174,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"overview.html":{}}}],["cluster_tscsventrymodule_export",{"_index":1176,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"overview.html":{}}}],["cluster_tscsventrymodule_import",{"_index":1175,"title":{},"body":{"modules/TsCSVEntryModule.html":{}}}],["cluster_tsdatepickermodul",{"_index":2373,"title":{},"body":{"modules/TsDatepickerModule.html":{},"overview.html":{}}}],["cluster_tsdatepickermodule_declar",{"_index":2374,"title":{},"body":{"modules/TsDatepickerModule.html":{},"overview.html":{}}}],["cluster_tsdatepickermodule_export",{"_index":2377,"title":{},"body":{"modules/TsDatepickerModule.html":{},"overview.html":{}}}],["cluster_tsdatepickermodule_import",{"_index":2376,"title":{},"body":{"modules/TsDatepickerModule.html":{}}}],["cluster_tsdatepickermodule_tsdatepickercomponent_provid",{"_index":2375,"title":{},"body":{"modules/TsDatepickerModule.html":{},"overview.html":{}}}],["cluster_tsdaterangemodul",{"_index":2304,"title":{},"body":{"modules/TsDateRangeModule.html":{},"overview.html":{}}}],["cluster_tsdaterangemodule_declar",{"_index":2305,"title":{},"body":{"modules/TsDateRangeModule.html":{},"overview.html":{}}}],["cluster_tsdaterangemodule_export",{"_index":2307,"title":{},"body":{"modules/TsDateRangeModule.html":{},"overview.html":{}}}],["cluster_tsdaterangemodule_import",{"_index":2306,"title":{},"body":{"modules/TsDateRangeModule.html":{}}}],["cluster_tsfileuploadmodul",{"_index":2402,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsfileuploadmodule_declar",{"_index":2403,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsfileuploadmodule_export",{"_index":2406,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsfileuploadmodule_import",{"_index":2405,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["cluster_tsfileuploadmodule_provid",{"_index":2407,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsfileuploadmodule_tsfileuploadcomponent_provid",{"_index":2404,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsiconbuttonmodul",{"_index":2515,"title":{},"body":{"modules/TsIconButtonModule.html":{},"overview.html":{}}}],["cluster_tsiconbuttonmodule_declar",{"_index":2516,"title":{},"body":{"modules/TsIconButtonModule.html":{},"overview.html":{}}}],["cluster_tsiconbuttonmodule_export",{"_index":2518,"title":{},"body":{"modules/TsIconButtonModule.html":{},"overview.html":{}}}],["cluster_tsiconbuttonmodule_import",{"_index":2517,"title":{},"body":{"modules/TsIconButtonModule.html":{}}}],["cluster_tsiconmodul",{"_index":2571,"title":{},"body":{"modules/TsIconModule.html":{},"overview.html":{}}}],["cluster_tsiconmodule_declar",{"_index":2572,"title":{},"body":{"modules/TsIconModule.html":{},"overview.html":{}}}],["cluster_tsiconmodule_export",{"_index":2573,"title":{},"body":{"modules/TsIconModule.html":{},"overview.html":{}}}],["cluster_tsinputmodul",{"_index":2582,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["cluster_tsinputmodule_declar",{"_index":2583,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["cluster_tsinputmodule_export",{"_index":2586,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["cluster_tsinputmodule_import",{"_index":2585,"title":{},"body":{"modules/TsInputModule.html":{}}}],["cluster_tsinputmodule_provid",{"_index":2587,"title":{},"body":{"modules/TsInputModule.html":{}}}],["cluster_tsinputmodule_tsinputcomponent_provid",{"_index":2584,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["cluster_tslinkmodul",{"_index":2607,"title":{},"body":{"modules/TsLinkModule.html":{},"overview.html":{}}}],["cluster_tslinkmodule_declar",{"_index":2608,"title":{},"body":{"modules/TsLinkModule.html":{},"overview.html":{}}}],["cluster_tslinkmodule_export",{"_index":2610,"title":{},"body":{"modules/TsLinkModule.html":{},"overview.html":{}}}],["cluster_tslinkmodule_import",{"_index":2609,"title":{},"body":{"modules/TsLinkModule.html":{}}}],["cluster_tsloadingoverlaymodul",{"_index":2661,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{},"overview.html":{}}}],["cluster_tsloadingoverlaymodule_declar",{"_index":2662,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{},"overview.html":{}}}],["cluster_tsloadingoverlaymodule_export",{"_index":2663,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{},"overview.html":{}}}],["cluster_tsloginformmodul",{"_index":2730,"title":{},"body":{"modules/TsLoginFormModule.html":{},"overview.html":{}}}],["cluster_tsloginformmodule_declar",{"_index":2731,"title":{},"body":{"modules/TsLoginFormModule.html":{},"overview.html":{}}}],["cluster_tsloginformmodule_export",{"_index":2733,"title":{},"body":{"modules/TsLoginFormModule.html":{},"overview.html":{}}}],["cluster_tsloginformmodule_import",{"_index":2732,"title":{},"body":{"modules/TsLoginFormModule.html":{}}}],["cluster_tsloginformmodule_provid",{"_index":2734,"title":{},"body":{"modules/TsLoginFormModule.html":{}}}],["cluster_tsmaskmodul",{"_index":2737,"title":{},"body":{"modules/TsMaskModule.html":{},"overview.html":{}}}],["cluster_tsmaskmodule_declar",{"_index":2738,"title":{},"body":{"modules/TsMaskModule.html":{},"overview.html":{}}}],["cluster_tsmaskmodule_export",{"_index":2740,"title":{},"body":{"modules/TsMaskModule.html":{},"overview.html":{}}}],["cluster_tsmaskmodule_tsmaskdirective_provid",{"_index":2739,"title":{},"body":{"modules/TsMaskModule.html":{},"overview.html":{}}}],["cluster_tsmenumodul",{"_index":2811,"title":{},"body":{"modules/TsMenuModule.html":{},"overview.html":{}}}],["cluster_tsmenumodule_declar",{"_index":2812,"title":{},"body":{"modules/TsMenuModule.html":{},"overview.html":{}}}],["cluster_tsmenumodule_export",{"_index":2814,"title":{},"body":{"modules/TsMenuModule.html":{},"overview.html":{}}}],["cluster_tsmenumodule_import",{"_index":2813,"title":{},"body":{"modules/TsMenuModule.html":{}}}],["cluster_tsnavigationmodul",{"_index":2848,"title":{},"body":{"modules/TsNavigationModule.html":{},"overview.html":{}}}],["cluster_tsnavigationmodule_declar",{"_index":2849,"title":{},"body":{"modules/TsNavigationModule.html":{},"overview.html":{}}}],["cluster_tsnavigationmodule_export",{"_index":2851,"title":{},"body":{"modules/TsNavigationModule.html":{},"overview.html":{}}}],["cluster_tsnavigationmodule_import",{"_index":2850,"title":{},"body":{"modules/TsNavigationModule.html":{}}}],["cluster_tspaginatormodul",{"_index":2979,"title":{},"body":{"modules/TsPaginatorModule.html":{},"overview.html":{}}}],["cluster_tspaginatormodule_declar",{"_index":2980,"title":{},"body":{"modules/TsPaginatorModule.html":{},"overview.html":{}}}],["cluster_tspaginatormodule_export",{"_index":2982,"title":{},"body":{"modules/TsPaginatorModule.html":{},"overview.html":{}}}],["cluster_tspaginatormodule_import",{"_index":2981,"title":{},"body":{"modules/TsPaginatorModule.html":{}}}],["cluster_tspipesmodul",{"_index":2985,"title":{},"body":{"modules/TsPipesModule.html":{},"overview.html":{}}}],["cluster_tspipesmodule_declar",{"_index":2986,"title":{},"body":{"modules/TsPipesModule.html":{},"overview.html":{}}}],["cluster_tspipesmodule_export",{"_index":2987,"title":{},"body":{"modules/TsPipesModule.html":{},"overview.html":{}}}],["cluster_tsradiogroupmodul",{"_index":3090,"title":{},"body":{"modules/TsRadioGroupModule.html":{},"overview.html":{}}}],["cluster_tsradiogroupmodule_declar",{"_index":3091,"title":{},"body":{"modules/TsRadioGroupModule.html":{},"overview.html":{}}}],["cluster_tsradiogroupmodule_export",{"_index":3094,"title":{},"body":{"modules/TsRadioGroupModule.html":{},"overview.html":{}}}],["cluster_tsradiogroupmodule_import",{"_index":3093,"title":{},"body":{"modules/TsRadioGroupModule.html":{}}}],["cluster_tsradiogroupmodule_tsradiogroupcomponent_provid",{"_index":3092,"title":{},"body":{"modules/TsRadioGroupModule.html":{},"overview.html":{}}}],["cluster_tsscrollbarsmodul",{"_index":3193,"title":{},"body":{"modules/TsScrollbarsModule.html":{},"overview.html":{}}}],["cluster_tsscrollbarsmodule_declar",{"_index":3194,"title":{},"body":{"modules/TsScrollbarsModule.html":{},"overview.html":{}}}],["cluster_tsscrollbarsmodule_export",{"_index":3195,"title":{},"body":{"modules/TsScrollbarsModule.html":{},"overview.html":{}}}],["cluster_tssearchmodul",{"_index":3270,"title":{},"body":{"modules/TsSearchModule.html":{},"overview.html":{}}}],["cluster_tssearchmodule_declar",{"_index":3271,"title":{},"body":{"modules/TsSearchModule.html":{},"overview.html":{}}}],["cluster_tssearchmodule_export",{"_index":3273,"title":{},"body":{"modules/TsSearchModule.html":{},"overview.html":{}}}],["cluster_tssearchmodule_import",{"_index":3272,"title":{},"body":{"modules/TsSearchModule.html":{}}}],["cluster_tsselectmodul",{"_index":3276,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["cluster_tsselectmodule_declar",{"_index":3277,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["cluster_tsselectmodule_export",{"_index":3280,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["cluster_tsselectmodule_import",{"_index":3279,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["cluster_tsselectmodule_tsselectcomponent_provid",{"_index":3278,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["cluster_tssortmodul",{"_index":3514,"title":{},"body":{"modules/TsSortModule.html":{},"overview.html":{}}}],["cluster_tssortmodule_declar",{"_index":3515,"title":{},"body":{"modules/TsSortModule.html":{},"overview.html":{}}}],["cluster_tssortmodule_export",{"_index":3516,"title":{},"body":{"modules/TsSortModule.html":{},"overview.html":{}}}],["cluster_tsspacingmodul",{"_index":3523,"title":{},"body":{"modules/TsSpacingModule.html":{},"overview.html":{}}}],["cluster_tsspacingmodule_declar",{"_index":3524,"title":{},"body":{"modules/TsSpacingModule.html":{},"overview.html":{}}}],["cluster_tsspacingmodule_export",{"_index":3525,"title":{},"body":{"modules/TsSpacingModule.html":{},"overview.html":{}}}],["cluster_tstablemodul",{"_index":3666,"title":{},"body":{"modules/TsTableModule.html":{},"overview.html":{}}}],["cluster_tstablemodule_declar",{"_index":3667,"title":{},"body":{"modules/TsTableModule.html":{},"overview.html":{}}}],["cluster_tstablemodule_export",{"_index":3670,"title":{},"body":{"modules/TsTableModule.html":{},"overview.html":{}}}],["cluster_tstablemodule_import",{"_index":3669,"title":{},"body":{"modules/TsTableModule.html":{}}}],["cluster_tstablemodule_tscelldefdirective_provid",{"_index":3668,"title":{},"body":{"modules/TsTableModule.html":{},"overview.html":{}}}],["cluster_tstogglemodul",{"_index":3703,"title":{},"body":{"modules/TsToggleModule.html":{},"overview.html":{}}}],["cluster_tstogglemodule_declar",{"_index":3704,"title":{},"body":{"modules/TsToggleModule.html":{},"overview.html":{}}}],["cluster_tstogglemodule_export",{"_index":3706,"title":{},"body":{"modules/TsToggleModule.html":{},"overview.html":{}}}],["cluster_tstogglemodule_tstogglecomponent_provid",{"_index":3705,"title":{},"body":{"modules/TsToggleModule.html":{},"overview.html":{}}}],["cluster_tstooltipmodul",{"_index":3723,"title":{},"body":{"modules/TsTooltipModule.html":{},"overview.html":{}}}],["cluster_tstooltipmodule_declar",{"_index":3724,"title":{},"body":{"modules/TsTooltipModule.html":{},"overview.html":{}}}],["cluster_tstooltipmodule_export",{"_index":3725,"title":{},"body":{"modules/TsTooltipModule.html":{},"overview.html":{}}}],["cluster_tsvalidationmessagesmodul",{"_index":3803,"title":{},"body":{"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["cluster_tsvalidationmessagesmodule_declar",{"_index":3804,"title":{},"body":{"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["cluster_tsvalidationmessagesmodule_export",{"_index":3805,"title":{},"body":{"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["cluster_tsvalidationmessagesmodule_provid",{"_index":3806,"title":{},"body":{"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["code",{"_index":829,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["codecov",{"_index":4088,"title":{},"body":{"index.html":{}}}],["coercearray",{"_index":233,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["coercearray(selections.slic",{"_index":742,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["coercearray(valu",{"_index":388,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["coercebooleanproperti",{"_index":234,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["coercebooleanproperty(shouldproce",{"_index":2046,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["coercebooleanproperty(v",{"_index":1916,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["coercebooleanproperty(valu",{"_index":407,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsAutofocusDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["coercenumberproperti",{"_index":235,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(a.valu",{"_index":2977,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(b.valu",{"_index":2978,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(pag",{"_index":2903,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(page.valu",{"_index":2943,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(pagescount",{"_index":2960,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(record",{"_index":2911,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(valu",{"_index":439,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["coercion/i",{"_index":245,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["collaps",{"_index":4160,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["collect",{"_index":68,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["collectfilesfromevent(ev",{"_index":542,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["color",{"_index":1427,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["color(acc",{"_index":2556,"title":{},"body":{"components/TsIconComponent.html":{}}}],["color(pur",{"_index":2511,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["column",{"_index":1186,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsMenuComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["column'",{"_index":1567,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{}}}],["column.minwidth",{"_index":1590,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["column.nowrap",{"_index":1588,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["columncount",{"_index":1244,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["columncount(valu",{"_index":1241,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["columndef",{"_index":1583,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["columndef.cssclassfriendlynam",{"_index":1581,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["columnhead",{"_index":1256,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["columnheaders(valu",{"_index":1251,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["columns[i",{"_index":2795,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["columnvalid",{"_index":1260,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["columnvalidators(valu",{"_index":1258,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["come",{"_index":164,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCopyComponent.html":{},"index.html":{}}}],["comma",{"_index":371,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["comment",{"_index":3585,"title":{},"body":{"components/TsTableComponent.html":{}}}],["commit",{"_index":3951,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["commitizen",{"_index":4083,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":1119,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["compar",{"_index":634,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"miscellaneous/typealiases.html":{}}}],["comparatorfn",{"_index":730,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["comparedd",{"_index":3678,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["comparison",{"_index":844,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["compat",{"_index":3997,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":962,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}}}],["complient",{"_index":1606,"title":{},"body":{"components/TsChart2Component.html":{}}}],["compon",{"_index":118,"title":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":1445,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["componentfactoryresolv",{"_index":2626,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["componentport",{"_index":2009,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["componentportal(tsconfirmationmodalcompon",{"_index":2039,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["componentportal(tsloadingoverlaycompon",{"_index":2655,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["compos",{"_index":346,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["composeev",{"_index":1845,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["compress",{"_index":3569,"title":{},"body":{"components/TsTableComponent.html":{}}}],["concis",{"_index":3968,"title":{},"body":{"contributing.html":{}}}],["concret",{"_index":1664,"title":{},"body":{"components/TsChart2Component.html":{}}}],["condit",{"_index":4108,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":3896,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":1797,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCopyComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["config.imagedimens",{"_index":3778,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["config.imageratio",{"_index":3780,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["config.maxd",{"_index":3773,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["config.mind",{"_index":3776,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["config[validatornam",{"_index":3781,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["confirm",{"_index":1457,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["confirmation.direct",{"_index":2065,"title":{},"body":{"modules/TsConfirmationModule.html":{}}}],["confirmation/confirmation.modul",{"_index":1055,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["conform",{"_index":1370,"title":{},"body":{"components/TsCardComponent.html":{}}}],["connect",{"_index":1846,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"classes/TsTableDataSource.html":{},"license.html":{}}}],["connectedpositionstrategi",{"_index":2006,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["consid",{"_index":2864,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["consist",{"_index":2549,"title":{},"body":{"components/TsIconComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{}}}],["console.error",{"_index":1680,"title":{},"body":{"components/TsChart2Component.html":{}}}],["console.error(`tschart2compon",{"_index":1698,"title":{},"body":{"components/TsChart2Component.html":{}}}],["console.log('demo",{"_index":3602,"title":{},"body":{"components/TsTableComponent.html":{}}}],["console.log('select",{"_index":654,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["console.log('set",{"_index":735,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["console.warn('github",{"_index":3608,"title":{},"body":{"components/TsTableComponent.html":{}}}],["const",{"_index":34,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartEventOptions.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{}}}],["constant",{"_index":4001,"title":{},"body":{"index.html":{}}}],["constrain",{"_index":3309,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["constraint",{"_index":60,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{}}}],["constraint.height.min",{"_index":2453,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["constraint.width.min",{"_index":2454,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["constraints.length",{"_index":2452,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["constraints.map((r",{"_index":2455,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["constraints.t",{"_index":2400,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"miscellaneous/typealiases.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"classes/TsChartEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{}}}],["constructor(_intl",{"_index":3482,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["constructor(amchart",{"_index":1101,"title":{},"body":{"injectables/TsAmChartsService.html":{}}}],["constructor(changedetectorref",{"_index":1932,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsNavigationComponent.html":{}}}],["constructor(columndef",{"_index":1578,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["constructor(documentservic",{"_index":2078,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["constructor(elementref",{"_index":1140,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["constructor(ev",{"_index":1813,"title":{},"body":{"classes/TsChartEvent.html":{}}}],["constructor(fil",{"_index":3290,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["constructor(formbuild",{"_index":2686,"title":{},"body":{"components/TsLoginFormComponent.html":{},"components/TsSearchComponent.html":{}}}],["constructor(ful",{"_index":3877,"title":{},"body":{"classes/Version.html":{}}}],["constructor(highchart",{"_index":15,"title":{},"body":{"injectables/HighchartsService.html":{}}}],["constructor(initialdata",{"_index":3635,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["constructor(maticonregistri",{"_index":2530,"title":{},"body":{"components/TsIconComponent.html":{}}}],["constructor(par",{"_index":1549,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["constructor(priv",{"_index":3616,"title":{},"body":{"components/TsTableComponent.html":{}}}],["constructor(publ",{"_index":3882,"title":{},"body":{"classes/Version.html":{}}}],["constructor(validationmessageservic",{"_index":3786,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["constructor(width",{"_index":2578,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["constructor(windowservic",{"_index":2385,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["constructor(zon",{"_index":1617,"title":{},"body":{"components/TsChart2Component.html":{}}}],["consum",{"_index":30,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"injectables/TsValidationMessageService.html":{}}}],["contain",{"_index":291,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsColumnDefDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["content",{"_index":52,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"index.html":{}}}],["content.row",{"_index":1292,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["content.rows.length",{"_index":1291,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["content_copi",{"_index":2094,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["contentchild",{"_index":1891,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["contentchild(tschartpointdirect",{"_index":1893,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["context",{"_index":1811,"title":{},"body":{"classes/TsChartEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["continu",{"_index":2044,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["contract",{"_index":4122,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":3891,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contributor",{"_index":3894,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["control",{"_index":115,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["control'",{"_index":3841,"title":{},"body":{"injectables/TsValidatorsService.html":{},"index.html":{}}}],["control.setvalid",{"_index":2338,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["control.updatevalueandvalid",{"_index":2341,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["controlvalueaccessor",{"_index":820,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["convent",{"_index":3961,"title":{},"body":{"contributing.html":{}}}],["convert",{"_index":2368,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"pipes/TsTimeAgoPipe.html":{},"index.html":{}}}],["cooki",{"_index":2720,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["coordin",{"_index":3919,"title":{},"body":{"contributing.html":{}}}],["copi",{"_index":910,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{},"license.html":{}}}],["copy'},{'nam",{"_index":1460,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["copy.compon",{"_index":2151,"title":{},"body":{"modules/TsCopyModule.html":{}}}],["copy.component.html",{"_index":2070,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["copy.component.scss",{"_index":2069,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["copy/copy.modul",{"_index":1056,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["copyright",{"_index":4092,"title":{},"body":{"license.html":{}}}],["copytoclipboard",{"_index":2073,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["copytoclipboard(text",{"_index":2083,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["core",{"_index":1105,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"dependencies.html":{}}}],["core/dist/textmaskcor",{"_index":822,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["coreyterminator&#x1f4bb",{"_index":4066,"title":{},"body":{"index.html":{}}}],["corner",{"_index":1425,"title":{},"body":{"components/TsCardComponent.html":{}}}],["correct",{"_index":193,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"injectables/TsValidationMessageService.html":{}}}],["correctli",{"_index":2557,"title":{},"body":{"components/TsIconComponent.html":{}}}],["count",{"_index":171,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["counter",{"_index":167,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["coverag",{"_index":4089,"title":{},"body":{"index.html":{}}}],["craft",{"_index":3921,"title":{},"body":{"contributing.html":{}}}],["creat",{"_index":28,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartSeriesDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{}}}],["created_at",{"_index":3614,"title":{},"body":{"components/TsTableComponent.html":{}}}],["createdrow",{"_index":1279,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["createfileinput",{"_index":537,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["createnumbermask",{"_index":823,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["createoverlay",{"_index":1982,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["createpagesarray(tot",{"_index":2968,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["createtextmaskinputel",{"_index":821,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["createtextmaskinputelement(maskopt",{"_index":866,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["credit",{"_index":3741,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["creditcard",{"_index":3748,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["creditcardmessag",{"_index":3742,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["creditcardvalid",{"_index":3810,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["css",{"_index":288,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["csv",{"_index":82,"title":{},"body":{"interfaces/ImageRatio.html":{},"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["csv_icon",{"_index":2561,"title":{},"body":{"components/TsIconComponent.html":{}}}],["csvs)file",{"_index":93,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["ctr",{"_index":2228,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["ctrl",{"_index":397,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsDateRange.html":{}}}],["ctrl+c",{"_index":2145,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ctrl.enabl",{"_index":2229,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["currenc",{"_index":804,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["currency|number|percentag",{"_index":814,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["current",{"_index":174,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["currenthidden",{"_index":993,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["currenthidden.shift",{"_index":994,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["currentmask",{"_index":842,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["currentpag",{"_index":2946,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentpagechanged(pag",{"_index":2942,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentpageindex",{"_index":2904,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentpageindex(pag",{"_index":2901,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentpagelabel",{"_index":2887,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentqueri",{"_index":3253,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["currentvis",{"_index":981,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["currentvisible.pop",{"_index":984,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["cursor",{"_index":468,"title":{},"body":{"interfaces/ImageRatio.html":{},"index.html":{}}}],["custom",{"_index":272,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSlideToggleChange.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["custom_checkbox_control_value_accessor",{"_index":1908,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["custom_datepicker_control_value_accessor",{"_index":2345,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"overview.html":{}}}],["custom_file_upload_input_control_value_accessor",{"_index":281,"title":{},"body":{"interfaces/ImageRatio.html":{},"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["custom_input_control_value_accessor",{"_index":2588,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["custom_radio_control_value_accessor",{"_index":3036,"title":{},"body":{"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"overview.html":{}}}],["custom_select_control_value_accessor",{"_index":3281,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["custom_toggle_control_value_accessor",{"_index":3336,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"overview.html":{}}}],["cycl",{"_index":769,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["d",{"_index":2319,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"contributing.html":{}}}],["d.getday",{"_index":2320,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["damag",{"_index":4120,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2512,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["data",{"_index":938,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"pipes/TsDatePipe.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"pipes/TsSentenceCasePipe.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["data(data",{"_index":3654,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["data.item",{"_index":3605,"title":{},"body":{"components/TsTableComponent.html":{}}}],["data.total_count",{"_index":3604,"title":{},"body":{"components/TsTableComponent.html":{}}}],["databas",{"_index":3615,"title":{},"body":{"components/TsTableComponent.html":{}}}],["datalabel",{"_index":1783,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["datasourc",{"_index":3541,"title":{},"body":{"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["datatorend",{"_index":3540,"title":{},"body":{"components/TsTableComponent.html":{}}}],["datatorender;dynam",{"_index":3552,"title":{},"body":{"components/TsTableComponent.html":{}}}],["date",{"_index":1059,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["date(2017",{"_index":2201,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["date(compareddate).toisostr",{"_index":3684,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["date(d",{"_index":2372,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["date(value).toisostr",{"_index":3683,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["date/date.pip",{"_index":2993,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["date1",{"_index":2209,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["date2",{"_index":2210,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["date:shortd",{"_index":3568,"title":{},"body":{"components/TsTableComponent.html":{}}}],["datefilt",{"_index":2353,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["dateformgroup",{"_index":2219,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["datepick",{"_index":2233,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"index.html":{}}}],["datepicker'},{'nam",{"_index":1464,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["datepicker.compon",{"_index":2381,"title":{},"body":{"modules/TsDatepickerModule.html":{}}}],["datepicker.component.html",{"_index":2347,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["datepicker.component.scss",{"_index":2348,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["datepicker/datepicker.modul",{"_index":1062,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsDateRangeModule.html":{}}}],["datepickerev",{"_index":2277,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["datepickerevent.valu",{"_index":2280,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["daterang",{"_index":2216,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["dateselect",{"_index":2194,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["datetim",{"_index":1728,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["david",{"_index":4071,"title":{},"body":{"index.html":{}}}],["day",{"_index":1732,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsDatepickerInputEvent.html":{},"miscellaneous/typealiases.html":{}}}],["de",{"_index":611,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["deal",{"_index":379,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"pipes/TsTimeAgoPipe.html":{},"license.html":{}}}],["dealt",{"_index":3931,"title":{},"body":{"contributing.html":{}}}],["dean",{"_index":4077,"title":{},"body":{"index.html":{}}}],["debounc",{"_index":610,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["debounce(this.emitsubmit",{"_index":3236,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["debouncedelay",{"_index":633,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["debouncedelay(valu",{"_index":709,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["debouncedemit",{"_index":3203,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["debouncetim",{"_index":668,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["debouncetime(1",{"_index":1268,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["debouncetime(this.debouncedelay",{"_index":764,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["decid",{"_index":403,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["decim",{"_index":796,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["decis",{"_index":4015,"title":{},"body":{"index.html":{}}}],["declar",{"_index":280,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"classes/TsSlideToggleChange.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["decor",{"_index":23,"title":{},"body":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"components/TsChart2Component.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSortHeaderComponent.html":{}}}],["default",{"_index":108,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["default_high_record_messag",{"_index":2874,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["default_max_prefered_record",{"_index":2872,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["default_per_pag",{"_index":2871,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["default_records_per_page_opt",{"_index":2873,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["defaultcolumncount",{"_index":1221,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["defaultmaxrow",{"_index":1222,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["defaultopen",{"_index":2751,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["defaultrowcount",{"_index":1219,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["defin",{"_index":16,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"miscellaneous/typealiases.html":{}}}],["definit",{"_index":791,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{}}}],["delay",{"_index":632,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["delet",{"_index":1215,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"contributing.html":{}}}],["delete_forev",{"_index":2489,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["delete_foreverthem",{"_index":2509,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["deleterow(index",{"_index":1333,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["demo",{"_index":1662,"title":{},"body":{"components/TsChart2Component.html":{},"index.html":{}}}],["demonstr",{"_index":2620,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["dep",{"_index":3512,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["depend",{"_index":1004,"title":{"dependencies.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deprec",{"_index":2185,"title":{},"body":{"interfaces/TsDateRange.html":{},"index.html":{}}}],["deregist",{"_index":3415,"title":{},"body":{"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["deregister(sort",{"_index":3393,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["desc",{"_index":3349,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/typealiases.html":{}}}],["descend",{"_index":3477,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["describ",{"_index":2482,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["describedbi",{"_index":3052,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["descript",{"_index":7,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{}}}],["deselect",{"_index":785,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["deselectoption(opt",{"_index":786,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["design",{"_index":3529,"title":{},"body":{"components/TsTableComponent.html":{},"index.html":{}}}],["desir",{"_index":1413,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["destin",{"_index":892,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLinkComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["destination.indexof('http",{"_index":1001,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["destinationisvalid",{"_index":2948,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["destinationpag",{"_index":2945,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["destroy",{"_index":521,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChart2Component.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{}}}],["destroychart",{"_index":1613,"title":{},"body":{"components/TsChart2Component.html":{}}}],["detail",{"_index":3981,"title":{},"body":{"contributing.html":{}}}],["detect",{"_index":768,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["detector",{"_index":3080,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["determin",{"_index":199,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsFileValidations.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["determineimagedimens",{"_index":3286,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["determineimagedimensions(callback",{"_index":3301,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["determineposit",{"_index":2624,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["determineposition(posit",{"_index":2635,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["determinepostalmask(valu",{"_index":872,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["develop",{"_index":3984,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["deviat",{"_index":4017,"title":{},"body":{"index.html":{}}}],["devon",{"_index":4075,"title":{},"body":{"index.html":{}}}],["diagnos",{"_index":3911,"title":{},"body":{"contributing.html":{}}}],["dialog",{"_index":4029,"title":{},"body":{"index.html":{}}}],["differ",{"_index":390,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsMenuComponent.html":{}}}],["dimens",{"_index":58,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/typealiases.html":{}}}],["dimension/ratio",{"_index":2446,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["dimensionconstraint",{"_index":462,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["dimensionconstraints(valu",{"_index":460,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["dimensions.t",{"_index":2577,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["dimensions.ts:10",{"_index":2580,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["dimensions.ts:7",{"_index":2579,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["dimensions.ts:9",{"_index":2581,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["dir",{"_index":1310,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["direct",{"_index":707,"title":{"directives/TsAutofocusDirective.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"directives/TsHeaderRowDefDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"directives/TsRowDefDirective.html":{},"directives/TsSortDirective.html":{},"directives/TsVerticalSpacingDirective.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["direction(direct",{"_index":3376,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["directli",{"_index":652,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsDateRange.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{},"contributing.html":{}}}],["disabl",{"_index":795,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["disableclear",{"_index":3353,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["disableclear(v",{"_index":3381,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["disableinitialselect",{"_index":2076,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["disallow",{"_index":2352,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["disconnect",{"_index":3634,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["discuss",{"_index":3918,"title":{},"body":{"contributing.html":{}}}],["dismiss",{"_index":1993,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["dismissoverlay",{"_index":1983,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["display",{"_index":135,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{}}}],["displayedcolumn",{"_index":3554,"title":{},"body":{"components/TsTableComponent.html":{}}}],["displaywith",{"_index":647,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["displaywith(valu",{"_index":714,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["distanc",{"_index":1776,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["distinctuntilchang",{"_index":669,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["distribut",{"_index":4103,"title":{},"body":{"license.html":{}}}],["div",{"_index":904,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["divid",{"_index":4030,"title":{},"body":{"index.html":{}}}],["divyameher&#x1f41b",{"_index":4074,"title":{},"body":{"index.html":{}}}],["doc",{"_index":3113,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{},"index.html":{}}}],["doctoc",{"_index":4087,"title":{},"body":{"index.html":{}}}],["document",{"_index":1641,"title":{},"body":{"components/TsChart2Component.html":{},"components/TsCopyComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["documentservic",{"_index":486,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCopyComponent.html":{}}}],["doesn't",{"_index":1586,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["dom",{"_index":336,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["domportalhost",{"_index":2640,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["domsanit",{"_index":2532,"title":{},"body":{"components/TsIconComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["don't",{"_index":1677,"title":{},"body":{"components/TsChart2Component.html":{},"contributing.html":{}}}],["done",{"_index":4013,"title":{},"body":{"index.html":{}}}],["dot",{"_index":3717,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["down",{"_index":731,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["drag",{"_index":246,"title":{},"body":{"interfaces/ImageRatio.html":{},"index.html":{}}}],["dragev",{"_index":474,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["draginprogress",{"_index":324,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["drilldown",{"_index":1793,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["drillup",{"_index":1831,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["driven",{"_index":602,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["drop",{"_index":255,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["dropdown",{"_index":605,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["dropprotectionservic",{"_index":487,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["dual",{"_index":4028,"title":{},"body":{"index.html":{}}}],["due",{"_index":755,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"contributing.html":{}}}],["dummi",{"_index":1486,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["dupe",{"_index":612,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["duplic",{"_index":637,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"contributing.html":{}}}],["dure",{"_index":2177,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"pipes/TsSentenceCasePipe.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["dynam",{"_index":770,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"dependencies.html":{}}}],["e",{"_index":2390,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["e.filecont",{"_index":73,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["e.map((f",{"_index":189,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["e.preventdefault",{"_index":2398,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["each",{"_index":270,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["edg",{"_index":1306,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["effect",{"_index":812,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["effort",{"_index":3920,"title":{},"body":{"contributing.html":{}}}],["el",{"_index":1155,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["el.focu",{"_index":1156,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["element",{"_index":249,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["element'",{"_index":3049,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["element.posit",{"_index":3556,"title":{},"body":{"components/TsTableComponent.html":{}}}],["elementref",{"_index":210,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["elementref.nativeelement.classlist.add(`t",{"_index":1580,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["elemetn",{"_index":2508,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["email",{"_index":2668,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["email/password",{"_index":4033,"title":{},"body":{"index.html":{}}}],["emailmessag",{"_index":3739,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["emailvalid",{"_index":3812,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["emit",{"_index":154,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"classes/TsChartEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["emitsubmit",{"_index":3208,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["emitt",{"_index":747,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartEventOptions.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{}}}],["emoji",{"_index":4058,"title":{},"body":{"index.html":{}}}],["empti",{"_index":292,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["enabl",{"_index":64,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{}}}],["enableditem",{"_index":931,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["enablemousetrack",{"_index":1785,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["enablequickcopi",{"_index":2077,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["encapsul",{"_index":313,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["encourag",{"_index":2863,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["end",{"_index":997,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["endblur(d",{"_index":2302,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endcontrol",{"_index":2269,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endcontrol.valu",{"_index":2273,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enddat",{"_index":2218,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["enddate1",{"_index":2204,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enddate2",{"_index":2205,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enddatecontrol",{"_index":2239,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enddateselected(datepickerev",{"_index":2292,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endinitiald",{"_index":2208,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endmaxd",{"_index":2196,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endmind",{"_index":2197,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endplacehold",{"_index":2246,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endselect",{"_index":2193,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endvalu",{"_index":2272,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enforc",{"_index":3983,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["engin",{"_index":4005,"title":{},"body":{"index.html":{}}}],["enough",{"_index":978,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["ensur",{"_index":3960,"title":{},"body":{"contributing.html":{}}}],["enter",{"_index":237,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"index.html":{}}}],["entir",{"_index":2798,"title":{},"body":{"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["entri",{"_index":1188,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"index.html":{}}}],["entry'},{'nam",{"_index":1448,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["entry.compon",{"_index":1182,"title":{},"body":{"modules/TsCSVEntryModule.html":{}}}],["entry.component.html",{"_index":1216,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["entry.component.scss",{"_index":1217,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["entry.component.t",{"_index":1184,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["entry.modul",{"_index":1058,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["entry.module.t",{"_index":1179,"title":{},"body":{"modules/TsCSVEntryModule.html":{}}}],["entry/csv",{"_index":1057,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["entrycompon",{"_index":2063,"title":{},"body":{"modules/TsConfirmationModule.html":{},"modules/TsLoadingOverlayModule.html":{}}}],["equal",{"_index":3755,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["equaltocontrol",{"_index":3765,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["equaltocontrolvalid",{"_index":3814,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["error",{"_index":578,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{}}}],["error('an",{"_index":426,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["error(`'${comparedd",{"_index":3682,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["error(`'${valu",{"_index":2179,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["error(`th",{"_index":1564,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["error(`tsautocompletecompon",{"_index":717,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["error(`tsautofocusdirect",{"_index":1157,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["error(`tsradiogroupcompon",{"_index":3057,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["error.actu",{"_index":1327,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["error.actual.length",{"_index":1325,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["error.actual.slice(0",{"_index":1326,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["error.rowid",{"_index":1321,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["erroritem",{"_index":1324,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["errorobj",{"_index":1317,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["errorobj.control",{"_index":1318,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["errorobj[nam",{"_index":1319,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["errors[key].filter((el",{"_index":1312,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["esc",{"_index":2033,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["escap",{"_index":2011,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["etc",{"_index":1622,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsTableComponent.html":{},"index.html":{}}}],["europ",{"_index":1738,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["even",{"_index":3262,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"contributing.html":{}}}],["event",{"_index":70,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"modules/TsChartModule.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"license.html":{}}}],["event.datatransfer.fil",{"_index":545,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["event.deltax",{"_index":1311,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["event.keycod",{"_index":528,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsConfirmationDirective.html":{}}}],["event.option.valu",{"_index":774,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["event.preventdefault",{"_index":566,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["event.stoppropag",{"_index":567,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["event.target",{"_index":546,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["event.target.fil",{"_index":548,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["eventemitt",{"_index":211,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["events.t",{"_index":1821,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["everyon",{"_index":4016,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":132,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsChartEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{}}}],["exampledatabas",{"_index":3587,"title":{},"body":{"components/TsTableComponent.html":{}}}],["examplehttpdao",{"_index":3588,"title":{},"body":{"components/TsTableComponent.html":{}}}],["examplehttpdao(this.http",{"_index":3592,"title":{},"body":{"components/TsTableComponent.html":{}}}],["exce",{"_index":113,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["except",{"_index":1152,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["exist",{"_index":294,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartSeriesDirective.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["exit",{"_index":470,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["expans",{"_index":4031,"title":{},"body":{"index.html":{}}}],["expect",{"_index":900,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["experi",{"_index":4007,"title":{},"body":{"index.html":{}}}],["explain",{"_index":3937,"title":{},"body":{"contributing.html":{}}}],["explan",{"_index":2700,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["export",{"_index":33,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"overview.html":{}}}],["exporta",{"_index":315,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["expos",{"_index":8,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["express",{"_index":3247,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"license.html":{}}}],["extend",{"_index":317,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"pipes/TsDatePipe.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["extern",{"_index":894,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLinkComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["externalicon",{"_index":2595,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["f",{"_index":191,"title":{},"body":{"interfaces/ImageRatio.html":{},"contributing.html":{}}}],["fab",{"_index":2768,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["factori",{"_index":1642,"title":{},"body":{"components/TsChart2Component.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["fail",{"_index":2222,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["fake",{"_index":168,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["fall",{"_index":2138,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["fallback",{"_index":2247,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["fallbackenddatecontrol",{"_index":2248,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["fallbackstartdatecontrol",{"_index":2249,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["fals",{"_index":204,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"miscellaneous/typealiases.html":{}}}],["far",{"_index":3945,"title":{},"body":{"contributing.html":{}}}],["favor",{"_index":2258,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["featur",{"_index":3898,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["februari",{"_index":2164,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["feel",{"_index":1411,"title":{},"body":{"components/TsCardComponent.html":{}}}],["fetch",{"_index":3559,"title":{},"body":{"components/TsTableComponent.html":{}}}],["few",{"_index":2789,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ff",{"_index":3977,"title":{},"body":{"contributing.html":{}}}],["field",{"_index":469,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["figur",{"_index":749,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"injectables/TsValidationMessageService.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["file${this.multipl",{"_index":344,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.dimens",{"_index":586,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.filecont",{"_index":78,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.height",{"_index":80,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.iscsv",{"_index":83,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.isimag",{"_index":85,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.isvalid",{"_index":86,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.mimetyp",{"_index":87,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.nam",{"_index":88,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.s",{"_index":89,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.t",{"_index":2412,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["file.ts:104",{"_index":3313,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:113",{"_index":3316,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:122",{"_index":3319,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:131",{"_index":3322,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:140",{"_index":3324,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:150",{"_index":3302,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:201",{"_index":3306,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:228",{"_index":3308,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:251",{"_index":3305,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:36",{"_index":3297,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:37",{"_index":3296,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:38",{"_index":3292,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:39",{"_index":3298,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:40",{"_index":3299,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:41",{"_index":3300,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:47",{"_index":3294,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:52",{"_index":3295,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:57",{"_index":3291,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:61",{"_index":3293,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:95",{"_index":3311,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.valid",{"_index":90,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.width",{"_index":92,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["filecont",{"_index":3320,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["fileexists(id",{"_index":202,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["filelist",{"_index":543,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["fileload",{"_index":2422,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["filenam",{"_index":153,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["fileread",{"_index":2420,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["filerefer",{"_index":2423,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["files",{"_index":581,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["files.length",{"_index":549,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["filesarray[0",{"_index":551,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["filetyp",{"_index":583,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["filewasclear",{"_index":156,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["fill",{"_index":1780,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["fillcolor",{"_index":1781,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["filter",{"_index":239,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{}}}],["filter((ev",{"_index":2035,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["filter((t",{"_index":449,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["filter((v",{"_index":761,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["filtereddata",{"_index":3632,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["find",{"_index":787,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"contributing.html":{},"index.html":{}}}],["findpage(pag",{"_index":2962,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["finish",{"_index":1877,"title":{},"body":{"directives/TsChartSeriesDirective.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["fire",{"_index":509,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["first",{"_index":369,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{},"index.html":{}}}],["first_pag",{"_index":2879,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["firstpageicon",{"_index":2878,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["firstpageindex",{"_index":2921,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["firstpagetooltip",{"_index":2897,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["fit",{"_index":2450,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"license.html":{}}}],["fix",{"_index":126,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"contributing.html":{}}}],["fixm",{"_index":718,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["flag",{"_index":321,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["flat",{"_index":1366,"title":{},"body":{"components/TsCardComponent.html":{}}}],["flexbox",{"_index":326,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["flexlayoutmodul",{"_index":1180,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{}}}],["flow",{"_index":775,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{}}}],["flush",{"_index":3550,"title":{},"body":{"components/TsTableComponent.html":{}}}],["fn",{"_index":554,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/TsChartEventOptions.html":{},"components/TsCheckboxComponent.html":{},"pipes/TsDatePipe.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"dependencies.html":{}}}],["fns@2.0.0",{"_index":4048,"title":{},"body":{"index.html":{}}}],["focu",{"_index":1144,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"index.html":{}}}],["focus",{"_index":1134,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"index.html":{}}}],["follow",{"_index":813,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsChartPointDirective.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["foo",{"_index":3009,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["foo_valu",{"_index":3010,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["forc",{"_index":491,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"contributing.html":{}}}],["forgot",{"_index":2670,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["forgotpasswordlink",{"_index":2680,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["forgotpasswordtext",{"_index":2681,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["fork",{"_index":3969,"title":{},"body":{"contributing.html":{}}}],["form",{"_index":259,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["form'},{'nam",{"_index":1478,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["form.compon",{"_index":2736,"title":{},"body":{"modules/TsLoginFormModule.html":{}}}],["form.component.html",{"_index":2673,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["form.component.scss",{"_index":2672,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["form.component.t",{"_index":2667,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["form.component.ts:106",{"_index":2713,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:111",{"_index":2712,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:116",{"_index":2715,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:122",{"_index":2710,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:128",{"_index":2706,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:134",{"_index":2689,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:140",{"_index":2690,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:146",{"_index":2691,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:152",{"_index":2695,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:158",{"_index":2696,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:164",{"_index":2697,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:170",{"_index":2688,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:188",{"_index":2699,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:205",{"_index":2701,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:84",{"_index":2709,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.modul",{"_index":1073,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["form.module.t",{"_index":2735,"title":{},"body":{"modules/TsLoginFormModule.html":{}}}],["form/login",{"_index":1072,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["form_group",{"_index":2674,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["formarray",{"_index":1207,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["format",{"_index":799,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"pipes/TsDatePipe.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["format(validatorvalue.maxd",{"_index":3774,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["format(validatorvalue.mind",{"_index":3777,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["formatd",{"_index":2162,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["formatdist",{"_index":3680,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["formatdistance(date1",{"_index":3685,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["formatmodelvaluefn",{"_index":3064,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatmodelvaluefn(valu",{"_index":3062,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatt",{"_index":675,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["formatter(opt",{"_index":3084,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatuilabelfn",{"_index":3029,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatuilabelfn(valu",{"_index":3055,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatuisublabelfn",{"_index":3021,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatuisublabelfn(valu",{"_index":3059,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formbuild",{"_index":1208,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["formbuilder.group",{"_index":2220,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["formcontrol",{"_index":225,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["formcontrol(ctrl",{"_index":395,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["formgroup",{"_index":1209,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["formgroup.get('endd",{"_index":2267,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["formgroup.get('startd",{"_index":2266,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["formsmodul",{"_index":1121,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSelectModule.html":{},"modules/TsToggleModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["forum",{"_index":2510,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["forwardref",{"_index":222,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["found",{"_index":109,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{}}}],["foundpag",{"_index":2950,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["foundpage.nam",{"_index":2964,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["free",{"_index":4098,"title":{},"body":{"license.html":{}}}],["freeli",{"_index":965,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["full",{"_index":712,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"classes/Version.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["full.split('.').slice(2).join",{"_index":3888,"title":{},"body":{"classes/Version.html":{}}}],["full.split('.')[0",{"_index":3884,"title":{},"body":{"classes/Version.html":{}}}],["full.split('.')[1",{"_index":3886,"title":{},"body":{"classes/Version.html":{}}}],["fullnam",{"_index":889,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["function",{"_index":180,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["function(thi",{"_index":1849,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["furnish",{"_index":4107,"title":{},"body":{"license.html":{}}}],["futur",{"_index":178,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["gap",{"_index":328,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsConfirmationModalComponent.html":{}}}],["gemotr",{"_index":3152,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["gener",{"_index":331,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsReactiveFormBaseComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{},"index.html":{}}}],["generatebreakwidth",{"_index":950,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["geometri",{"_index":3147,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["get",{"_index":3890,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["getavailablespac",{"_index":2839,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["getbackground",{"_index":2542,"title":{},"body":{"components/TsIconComponent.html":{}}}],["getbord",{"_index":1396,"title":{},"body":{"components/TsCardComponent.html":{}}}],["getborderclass",{"_index":1406,"title":{},"body":{"components/TsCardComponent.html":{}}}],["getcolumns(row",{"_index":1281,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["getcomputedstyle(this.elementref.nativeelement).getpropertyvalue('posit",{"_index":2656,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["getcurrentqueri",{"_index":3254,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["getdata",{"_index":3650,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["getdirect",{"_index":3434,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["getdisableclear",{"_index":3437,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["getfilecont",{"_index":3321,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["getheadercellname(index",{"_index":1300,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["getheight",{"_index":3312,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["gethostel",{"_index":2506,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["getid",{"_index":1399,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsCheckboxComponent.html":{}}}],["getischeck",{"_index":1964,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["getiscsv",{"_index":3315,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["getisimag",{"_index":3318,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["getisutilitymenu",{"_index":2781,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["getisvalid",{"_index":3323,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["getnextsortdirect",{"_index":3416,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["getnextsortdirection(sort",{"_index":3402,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getrepoissues(sort",{"_index":3617,"title":{},"body":{"components/TsTableComponent.html":{}}}],["getsortdirectioncycle(sortable.start",{"_index":3406,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortdirectioncycle(start",{"_index":3411,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortduplicatesortableiderror",{"_index":3359,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortduplicatesortableiderror(sortable.id",{"_index":3390,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortheadermissingiderror",{"_index":3360,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortheadernotcontainedwithinsorterror",{"_index":3445,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["getsortinvaliddirectionerror",{"_index":3358,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortinvaliddirectionerror(direct",{"_index":3377,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsvgicon",{"_index":2545,"title":{},"body":{"components/TsIconComponent.html":{}}}],["getter",{"_index":912,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsUser.html":{}}}],["gettextcont",{"_index":2103,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["getthem",{"_index":1402,"title":{},"body":{"components/TsCardComponent.html":{}}}],["getusersfullnam",{"_index":2841,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["getvalidationmessag",{"_index":3791,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["getvalidatorerrormessag",{"_index":3734,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["getvalidatorerrormessage(validatornam",{"_index":3735,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["getvalu",{"_index":3109,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["getvisibleitemslength",{"_index":2843,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["getvisu",{"_index":1638,"title":{},"body":{"components/TsChart2Component.html":{}}}],["getwidth",{"_index":3310,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["git",{"_index":3952,"title":{},"body":{"contributing.html":{}}}],["github",{"_index":3606,"title":{},"body":{"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{}}}],["githubapi",{"_index":3611,"title":{},"body":{"components/TsTableComponent.html":{}}}],["githubissu",{"_index":3612,"title":{},"body":{"components/TsTableComponent.html":{}}}],["given",{"_index":1729,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["global",{"_index":3041,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"index.html":{}}}],["go",{"_index":3561,"title":{},"body":{"components/TsTableComponent.html":{}}}],["goe",{"_index":4055,"title":{},"body":{"index.html":{}}}],["good",{"_index":2702,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["grant",{"_index":4097,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1887,"title":{},"body":{"directives/TsChartSeriesDirective.html":{},"index.html":{}}}],["greater",{"_index":3752,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["greaterthan",{"_index":3750,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["greaterthanorequ",{"_index":3754,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["greaterthanorequalvalid",{"_index":3818,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["greaterthanvalid",{"_index":3816,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["gridcel",{"_index":1582,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["group",{"_index":948,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["group'},{'nam",{"_index":1485,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["group.compon",{"_index":3097,"title":{},"body":{"modules/TsRadioGroupModule.html":{}}}],["group.component.html",{"_index":3037,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["group.component.scss",{"_index":3038,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["group.component.t",{"_index":3005,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["group.component.ts:31",{"_index":3098,"title":{},"body":{"interfaces/TsRadioOption.html":{}}}],["group.modul",{"_index":1082,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["group.module.t",{"_index":3095,"title":{},"body":{"modules/TsRadioGroupModule.html":{}}}],["group/radio",{"_index":1081,"title":{},"body":{"modules/TerminusUIModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["groupbi",{"_index":887,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["groupby(allitem",{"_index":970,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["guess",{"_index":752,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["guid",{"_index":849,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["guidelin",{"_index":3895,"title":{},"body":{"contributing.html":{}}}],["hack",{"_index":442,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["hammer",{"_index":4023,"title":{},"body":{"index.html":{}}}],["handl",{"_index":67,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["handleclick",{"_index":484,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["handledragleave(ev",{"_index":478,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["handledragover(ev",{"_index":473,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["handledrop(ev",{"_index":481,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["handlefile(",{"_index":72,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["handlekeydown($ev",{"_index":310,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["handlekeydown(ev",{"_index":526,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hankey",{"_index":4025,"title":{},"body":{"index.html":{}}}],["happen",{"_index":3347,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["hard",{"_index":264,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["harkness&#x1f4bb",{"_index":4072,"title":{},"body":{"index.html":{}}}],["hasbackdrop",{"_index":2026,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["hasinnertext",{"_index":2106,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["hasmultipleset",{"_index":570,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hasn't",{"_index":3925,"title":{},"body":{"contributing.html":{}}}],["hasprotect",{"_index":2384,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["hasrequiredcontrol",{"_index":3033,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["hasrequiredcontrol(this.formcontrol",{"_index":3079,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["hasselect",{"_index":2071,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["hasunderlin",{"_index":3714,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["header",{"_index":1190,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["header.compon",{"_index":3522,"title":{},"body":{"modules/TsSortModule.html":{}}}],["header.component.html",{"_index":3453,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["header.component.scss",{"_index":3454,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["header.component.t",{"_index":3442,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:101",{"_index":3483,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:108",{"_index":3494,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:110",{"_index":3495,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:111",{"_index":3493,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:131",{"_index":3492,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:143",{"_index":3491,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:151",{"_index":3488,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:161",{"_index":3490,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:170",{"_index":3489,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:76",{"_index":3487,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:83",{"_index":3484,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:89",{"_index":3486,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:95",{"_index":3485,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:98",{"_index":3496,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header]'},{'nam",{"_index":1497,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["headercel",{"_index":1233,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["headercount",{"_index":1342,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["heavili",{"_index":4019,"title":{},"body":{"index.html":{}}}],["height",{"_index":122,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{}}}],["heightratio",{"_index":47,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["help",{"_index":2522,"title":{},"body":{"components/TsIconComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{}}}],["helper",{"_index":198,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"index.html":{}}}],["here",{"_index":183,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsSortHeaderIntl.html":{},"contributing.html":{},"index.html":{}}}],["here'",{"_index":3533,"title":{},"body":{"components/TsTableComponent.html":{}}}],["herebi",{"_index":4096,"title":{},"body":{"license.html":{}}}],["hi",{"_index":3030,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["hidden",{"_index":919,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["hiddenitem",{"_index":920,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["hide",{"_index":200,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartSeriesDirective.html":{}}}],["hidebutton",{"_index":408,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hidebutton(valu",{"_index":405,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hierarchi",{"_index":2802,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["high",{"_index":2857,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["highchart",{"_index":9,"title":{},"body":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"dependencies.html":{}}}],["highcharts.servic",{"_index":1863,"title":{},"body":{"modules/TsChartModule.html":{}}}],["highchartsservic",{"_index":1,"title":{"injectables/HighchartsService.html":{}},"body":{"injectables/HighchartsService.html":{},"modules/TsChartModule.html":{},"overview.html":{}}}],["higher",{"_index":2801,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["highli",{"_index":3519,"title":{},"body":{"modules/TsSortModule.html":{},"modules/TsTableModule.html":{}}}],["hint",{"_index":299,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["hint=\"begin",{"_index":681,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["hints.push(`must",{"_index":356,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hit",{"_index":623,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["hold",{"_index":3361,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"index.html":{}}}],["holder",{"_index":4117,"title":{},"body":{"license.html":{}}}],["hollow",{"_index":4159,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["home",{"_index":2521,"title":{},"body":{"components/TsIconComponent.html":{}}}],["homeif",{"_index":2548,"title":{},"body":{"components/TsIconComponent.html":{}}}],["hope",{"_index":4010,"title":{},"body":{"index.html":{}}}],["horizont",{"_index":1803,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["host",{"_index":308,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["hostbind",{"_index":212,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["hostbinding('attr.id",{"_index":337,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hostbinding('class",{"_index":1560,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["hostbinding('style.posit",{"_index":2649,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["hostel",{"_index":2505,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["hostlisten",{"_index":213,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["hostlistener('click",{"_index":483,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsConfirmationDirective.html":{}}}],["hostlistener('dragleav",{"_index":477,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hostlistener('dragov",{"_index":472,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hostlistener('drop",{"_index":480,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hostlistener('window:res",{"_index":946,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["hour",{"_index":1731,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["hover",{"_index":1382,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["href",{"_index":3618,"title":{},"body":{"components/TsTableComponent.html":{}}}],["href}?q=repo:getterminus/terminu",{"_index":3621,"title":{},"body":{"components/TsTableComponent.html":{}}}],["html",{"_index":248,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["htmlinputel",{"_index":334,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["http",{"_index":999,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["httpclient",{"_index":3573,"title":{},"body":{"components/TsTableComponent.html":{}}}],["https://api.github.com/search/issu",{"_index":3619,"title":{},"body":{"components/TsTableComponent.html":{}}}],["https://github.com/angular/material2/tree/master/src/lib/sort",{"_index":3521,"title":{},"body":{"modules/TsSortModule.html":{}}}],["https://github.com/angular/material2/tree/master/src/lib/t",{"_index":3672,"title":{},"body":{"modules/TsTableModule.html":{}}}],["https://github.com/getterminus/terminu",{"_index":3744,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["https://goo.gl/ieupag",{"_index":301,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["https://material.io/icon",{"_index":2553,"title":{},"body":{"components/TsIconComponent.html":{},"index.html":{}}}],["https://www.amcharts.com/docs/v4",{"_index":1670,"title":{},"body":{"components/TsChart2Component.html":{}}}],["human",{"_index":4041,"title":{},"body":{"index.html":{}}}],["i.",{"_index":4034,"title":{},"body":{"index.html":{}}}],["icon",{"_index":1064,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"modules/TsFileUploadModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["icon'},{'nam",{"_index":1470,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["icon.compon",{"_index":2576,"title":{},"body":{"modules/TsIconModule.html":{}}}],["icon.component.html",{"_index":2525,"title":{},"body":{"components/TsIconComponent.html":{}}}],["icon.component.scss",{"_index":2524,"title":{},"body":{"components/TsIconComponent.html":{}}}],["icon/icon.modul",{"_index":1067,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsCopyModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsRadioGroupModule.html":{}}}],["icons/csv",{"_index":2562,"title":{},"body":{"components/TsIconComponent.html":{}}}],["id",{"_index":185,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["id(valu",{"_index":410,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["idea",{"_index":3893,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["identifi",{"_index":3344,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["ifram",{"_index":1150,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsSearchComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["ignor",{"_index":365,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["imag",{"_index":57,"title":{},"body":{"interfaces/ImageRatio.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["image/jpeg",{"_index":4162,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["image/jpg",{"_index":100,"title":{},"body":{"interfaces/ImageRatio.html":{},"miscellaneous/typealiases.html":{}}}],["image/png",{"_index":99,"title":{},"body":{"interfaces/ImageRatio.html":{},"miscellaneous/typealiases.html":{}}}],["imagedimens",{"_index":585,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["imagedimensionconstraint",{"_index":2416,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["imageratio",{"_index":42,"title":{"interfaces/ImageRatio.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["img",{"_index":2435,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["img.naturalheight",{"_index":2441,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["img.onload",{"_index":2438,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["img.src",{"_index":2436,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["immedi",{"_index":1879,"title":{},"body":{"directives/TsChartSeriesDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["immediatelyoronchang",{"_index":3797,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["implement",{"_index":318,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["impli",{"_index":4112,"title":{},"body":{"license.html":{}}}],["implicit",{"_index":2892,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["import",{"_index":25,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{}}}],["imput",{"_index":507,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["includ",{"_index":1148,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsIconComponent.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"classes/TsTableDataSource.html":{},"contributing.html":{},"license.html":{}}}],["inclus",{"_index":3902,"title":{},"body":{"contributing.html":{}}}],["incorrect",{"_index":102,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["increas",{"_index":3929,"title":{},"body":{"contributing.html":{}}}],["indetermin",{"_index":1919,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["indeterminatechang",{"_index":1924,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["indic",{"_index":601,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{}}}],["individu",{"_index":678,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["indiviu",{"_index":2401,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{}}}],["info",{"_index":2,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{}}}],["inform",{"_index":3167,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/Version.html":{},"contributing.html":{}}}],["inherit",{"_index":1942,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["init",{"_index":1614,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["init(typ",{"_index":1625,"title":{},"body":{"components/TsChart2Component.html":{}}}],["initi",{"_index":641,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["initiald",{"_index":2328,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["initialdata",{"_index":3638,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["initialdate(valu",{"_index":2360,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["initialselect",{"_index":642,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["initialselections(select",{"_index":740,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["initialvalu",{"_index":3211,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inject",{"_index":0,"title":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"injectables/TsDropProtectionService.html":{},"injectables/TsSortHeaderIntl.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{}},"body":{"injectables/HighchartsService.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"overview.html":{}}}],["inject(highchart",{"_index":38,"title":{},"body":{"injectables/HighchartsService.html":{}}}],["inject(ts_amcharts_token",{"_index":1110,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["injectiontoken",{"_index":26,"title":{},"body":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["injectiontoken('amchart",{"_index":1109,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["injectiontoken('highchart",{"_index":36,"title":{},"body":{"injectables/HighchartsService.html":{}}}],["injector",{"_index":2629,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["inlin",{"_index":1589,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{}}}],["inner",{"_index":496,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["innervalu",{"_index":1925,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["inprogress",{"_index":2682,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["input",{"_index":96,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["input'",{"_index":514,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["input'},{'nam",{"_index":1472,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["input('aria",{"_index":3045,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["input('t",{"_index":3461,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["input('tscolumndef",{"_index":1596,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["input('tssortact",{"_index":3372,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["input('tssortdirect",{"_index":3375,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["input('tssortdisableclear",{"_index":3380,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["input('tssortstart",{"_index":3374,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["input.compon",{"_index":2590,"title":{},"body":{"modules/TsInputModule.html":{}}}],["input.hasattribute('multipl",{"_index":571,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["input.setattribute('typ",{"_index":539,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["input.style.display",{"_index":540,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["input/input.compon",{"_index":2717,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["input/input.modul",{"_index":1068,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsSearchModule.html":{}}}],["input_debounce_tim",{"_index":3204,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inputblur",{"_index":2365,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["inputchang",{"_index":1923,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["inputcompon",{"_index":2675,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["inputel",{"_index":843,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["inputhaschang",{"_index":227,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChart2Component.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["inputhaschanged(chang",{"_index":518,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChart2Component.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["inputhint",{"_index":3212,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inputlabel",{"_index":3213,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inputpatternregex",{"_index":3205,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inputplacehold",{"_index":2354,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["insid",{"_index":1556,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{}}}],["instal",{"_index":4002,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":74,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{}}}],["instanceof",{"_index":1563,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["instead",{"_index":1715,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsDateRange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["interact",{"_index":531,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["intercept",{"_index":1997,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{}}}],["interfac",{"_index":41,"title":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsAmChartsToken.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"overview.html":{}}}],["intern",{"_index":1957,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsLinkComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"components/TsToggleComponent.html":{},"index.html":{}}}],["interv",{"_index":1724,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["intl",{"_index":3444,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{}}}],["intl.t",{"_index":3500,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["intl.ts:21",{"_index":3504,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["intl.ts:26",{"_index":3506,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["intl.ts:33",{"_index":3507,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["invalid",{"_index":2312,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"injectables/TsValidationMessageService.html":{}}}],["invert",{"_index":1805,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["ischeck",{"_index":1899,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["ischecked(v",{"_index":1914,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["ischecked(valu",{"_index":3339,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["iscsv",{"_index":3314,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["isdevmod",{"_index":221,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"pipes/TsDatePipe.html":{},"components/TsIconComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"pipes/TsTimeAgoPipe.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["isdis",{"_index":880,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["isdisabled(valu",{"_index":3163,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["isdragev",{"_index":243,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["isdragevent(ev",{"_index":544,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["isextern",{"_index":2596,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["isexternallink",{"_index":2818,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["isexternallink(destin",{"_index":1000,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["isfirstpage(pag",{"_index":2952,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["isfocus",{"_index":3214,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["isforadmin",{"_index":881,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["isfunct",{"_index":673,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["isfunction(v",{"_index":728,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["isfunction(valu",{"_index":715,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["ishtmlinputel",{"_index":247,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["ishtmlinputelement(event.target",{"_index":547,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["isimag",{"_index":3317,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["isindetermin",{"_index":1920,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["islastpage(pag",{"_index":2953,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["isn't",{"_index":650,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsReactiveFormBaseComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["isnumb",{"_index":230,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["isnumber(v[0",{"_index":423,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["isnumber(v[1",{"_index":424,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["iso",{"_index":2369,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["isredirect",{"_index":2683,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["isrequir",{"_index":1921,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["issam",{"_index":3287,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["issame(number1",{"_index":2464,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["issu",{"_index":2176,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"contributing.html":{}}}],["issubmit",{"_index":3215,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["istanbul",{"_index":364,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["isutilitymenu",{"_index":2780,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["isvalid",{"_index":2161,"title":{},"body":{"pipes/TsDatePipe.html":{},"classes/TsSelectedFile.html":{},"pipes/TsTimeAgoPipe.html":{},"injectables/TsValidatorsService.html":{}}}],["isvalid(comparedd",{"_index":3681,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["isvalid(valu",{"_index":2178,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["isvisu",{"_index":3027,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["isvisual(valu",{"_index":3067,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["iszerobas",{"_index":2862,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["iszerobased(v",{"_index":2894,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["it'",{"_index":753,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["item",{"_index":76,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["item.ag",{"_index":3547,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.com",{"_index":3586,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.created_at",{"_index":3567,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.isdis",{"_index":933,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["item.nam",{"_index":2846,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["item.nativeelement.offsetwidth",{"_index":956,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["item.numb",{"_index":3582,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.st",{"_index":3584,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.titl",{"_index":3583,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.usernam",{"_index":3535,"title":{},"body":{"components/TsTableComponent.html":{}}}],["items(valu",{"_index":930,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["items.length",{"_index":660,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["itemtomov",{"_index":983,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["itself",{"_index":2212,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsTableComponent.html":{},"index.html":{}}}],["javascript",{"_index":1758,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["jest",{"_index":3844,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["join",{"_index":350,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"pipes/TsTitleCasePipe.html":{}}}],["joinbi",{"_index":1787,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["jones&#x1f4bb",{"_index":4078,"title":{},"body":{"index.html":{}}}],["kal93&#x1f41b",{"_index":4073,"title":{},"body":{"index.html":{}}}],["keep",{"_index":3565,"title":{},"body":{"components/TsTableComponent.html":{},"contributing.html":{}}}],["key",{"_index":580,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["keyboard",{"_index":525,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["keyboard_arrow_down",{"_index":2847,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["keyboard_arrow_left",{"_index":2881,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["keyboard_arrow_right",{"_index":2883,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["keyboardev",{"_index":527,"title":{"interfaces/KeyboardEvent.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["keydown",{"_index":309,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["keyup",{"_index":3209,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["kilobyt",{"_index":112,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["kind",{"_index":3916,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["know",{"_index":778,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsTableDataSource.html":{}}}],["label",{"_index":722,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsIconButtonComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["label=\"select",{"_index":682,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["labelclick(opt",{"_index":3085,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["labelledbi",{"_index":3047,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["labelposit",{"_index":3340,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["languag",{"_index":4009,"title":{},"body":{"index.html":{}}}],["larg",{"_index":3025,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["larger",{"_index":2800,"title":{},"body":{"components/TsMenuComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["last",{"_index":372,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["last_pag",{"_index":2885,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lastpageicon",{"_index":2884,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lastpageindex",{"_index":2926,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lastpagetooltip",{"_index":2900,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lastvalu",{"_index":845,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["later",{"_index":1961,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["latest",{"_index":3976,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":327,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"components/TsIconComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"dependencies.html":{},"index.html":{}}}],["layout@6.0.0",{"_index":4046,"title":{},"body":{"index.html":{}}}],["layoutgap",{"_index":329,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["learn",{"_index":2867,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["leav",{"_index":1868,"title":{},"body":{"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsLinkComponent.html":{}}}],["left",{"_index":1428,"title":{},"body":{"components/TsCardComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["legend",{"_index":1005,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"components/TsNavigationComponent.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["legenditemclick",{"_index":1836,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"directives/TsChartSeriesDirective.html":{}}}],["length",{"_index":2714,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidationMessageService.html":{}}}],["less",{"_index":3759,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["lessthan",{"_index":3758,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["lessthanorequ",{"_index":3761,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["lessthanorequalvalid",{"_index":3822,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["lessthanvalid",{"_index":3820,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["let",{"_index":2728,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["letter",{"_index":3221,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidationMessageService.html":{}}}],["liabil",{"_index":4121,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":4118,"title":{},"body":{"license.html":{}}}],["librari",{"_index":1635,"title":{},"body":{"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["licens",{"_index":4090,"title":{"license.html":{}},"body":{"license.html":{}}}],["lift",{"_index":3518,"title":{},"body":{"modules/TsSortModule.html":{},"modules/TsTableModule.html":{}}}],["limit",{"_index":114,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsTableComponent.html":{},"license.html":{}}}],["line",{"_index":1095,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["linear",{"_index":1735,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["link",{"_index":466,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["link'",{"_index":2597,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["link'},{'nam",{"_index":1474,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["link.compon",{"_index":2614,"title":{},"body":{"modules/TsLinkModule.html":{}}}],["link.component.html",{"_index":2594,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["link.component.scss",{"_index":2593,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["link/link.modul",{"_index":1069,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{}}}],["linkextern",{"_index":2603,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["linter",{"_index":3957,"title":{},"body":{"contributing.html":{}}}],["list",{"_index":679,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["listen",{"_index":520,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"directives/TsConfirmationDirective.html":{},"injectables/TsDropProtectionService.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["liter",{"_index":1716,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsNavigationActionItem.html":{},"interfaces/TsNavigationPayload.html":{}}}],["live",{"_index":3941,"title":{},"body":{"contributing.html":{}}}],["llc",{"_index":4094,"title":{},"body":{"license.html":{}}}],["load",{"_index":101,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartEventOptions.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["loadingoverlayport",{"_index":2623,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["local",{"_index":607,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{}}}],["locat",{"_index":895,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["lock",{"_index":1356,"title":{},"body":{"components/TsCardComponent.html":{}}}],["lock_outlin",{"_index":1442,"title":{},"body":{"components/TsCardComponent.html":{}}}],["log",{"_index":2693,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["logarithm",{"_index":1736,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["login",{"_index":614,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["logincta",{"_index":2684,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["loginform",{"_index":2676,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["long",{"_index":1598,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["longer",{"_index":3020,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["loop",{"_index":639,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["lot",{"_index":2876,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lowercas",{"_index":3767,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["lowercasevalid",{"_index":3824,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["m/d/yyyi",{"_index":3775,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["made",{"_index":655,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["main",{"_index":1802,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"contributing.html":{}}}],["maintain",{"_index":4006,"title":{},"body":{"index.html":{}}}],["major",{"_index":3874,"title":{},"body":{"classes/Version.html":{},"contributing.html":{}}}],["make",{"_index":1410,"title":{},"body":{"components/TsCardComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"contributing.html":{},"index.html":{}}}],["malinconico&#x1f41b",{"_index":4070,"title":{},"body":{"index.html":{}}}],["manag",{"_index":394,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["mani",{"_index":1224,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["manual",{"_index":1197,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["map",{"_index":1107,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["map((respons",{"_index":628,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["map((word",{"_index":3689,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["map(data",{"_index":3601,"title":{},"body":{"components/TsTableComponent.html":{}}}],["mapbubbl",{"_index":1750,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["mapdata",{"_index":1786,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["mapnavig",{"_index":1794,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["mark",{"_index":1723,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"miscellaneous/typealiases.html":{}}}],["mask",{"_index":789,"title":{"interfaces/Mask.html":{}},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["mask.direct",{"_index":2742,"title":{},"body":{"modules/TsMaskModule.html":{}}}],["mask/mask.modul",{"_index":1074,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["maskcollect",{"_index":831,"title":{"interfaces/MaskCollection.html":{}},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["masked_input_value_accessor",{"_index":836,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"modules/TsMaskModule.html":{},"overview.html":{}}}],["maskfunct",{"_index":794,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["masknam",{"_index":846,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["maskopt",{"_index":862,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["maskshortcutopt",{"_index":833,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["master",{"_index":3956,"title":{},"body":{"contributing.html":{}}}],["matautocomplet",{"_index":664,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["matautocompletemodul",{"_index":1123,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["matautocompleteselectedev",{"_index":665,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["matautocompletetrigg",{"_index":666,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["matbuttonmodul",{"_index":1169,"title":{},"body":{"modules/TsButtonModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{}}}],["match",{"_index":40,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["matcheckbox",{"_index":1906,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["matcheckboxchang",{"_index":1896,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["matcheckboxcompon",{"_index":1912,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["matcheckboxmodul",{"_index":1972,"title":{},"body":{"modules/TsCheckboxModule.html":{}}}],["matchipsmodul",{"_index":1124,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["matdatepickerinputev",{"_index":2231,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["matdatepickermodul",{"_index":2379,"title":{},"body":{"modules/TsDatepickerModule.html":{}}}],["materi",{"_index":2098,"title":{},"body":{"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"modules/TsSortModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"index.html":{}}}],["math.abs((number1",{"_index":2465,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["math.ceil(this.file.s",{"_index":2428,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["maticonmodul",{"_index":2575,"title":{},"body":{"modules/TsIconModule.html":{}}}],["maticonregistri",{"_index":2531,"title":{},"body":{"components/TsIconComponent.html":{}}}],["matinputmodul",{"_index":1126,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsInputModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["matmenumodul",{"_index":2816,"title":{},"body":{"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{}}}],["matmenutrigg",{"_index":2773,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["matnativedatemodul",{"_index":2380,"title":{},"body":{"modules/TsDatepickerModule.html":{}}}],["matprogressbarmodul",{"_index":2409,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["matprogressspinnermodul",{"_index":1128,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsButtonModule.html":{}}}],["matradiochang",{"_index":3006,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["matradiomodul",{"_index":3096,"title":{},"body":{"modules/TsRadioGroupModule.html":{}}}],["matripplemodul",{"_index":1540,"title":{},"body":{"modules/TsCardModule.html":{},"modules/TsCopyModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsRadioGroupModule.html":{}}}],["matselectmodul",{"_index":3283,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["matslidetogglechang",{"_index":3334,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["matslidetogglemodul",{"_index":3708,"title":{},"body":{"modules/TsToggleModule.html":{}}}],["mattooltipmodul",{"_index":3727,"title":{},"body":{"modules/TsTooltipModule.html":{}}}],["max",{"_index":124,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["max/min",{"_index":2188,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["maxdat",{"_index":2326,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["maxdate(valu",{"_index":2355,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["maxdatevalid",{"_index":3826,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["maxim",{"_index":3927,"title":{},"body":{"contributing.html":{}}}],["maximum",{"_index":111,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["maximum_kilobytes_per_fil",{"_index":266,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["maximumkilobytesperfil",{"_index":416,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["maximumkilobytesperfile(valu",{"_index":414,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["maximumvalidationmessag",{"_index":1226,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["maxitemlength",{"_index":1322,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["maxlength",{"_index":3747,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["maxpreferredrecord",{"_index":2865,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["maxrow",{"_index":1239,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["maxrows(valu",{"_index":1236,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["maxsiz",{"_index":2418,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["medium",{"_index":2167,"title":{},"body":{"pipes/TsDatePipe.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["meet",{"_index":148,"title":{},"body":{"interfaces/ImageRatio.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["menu",{"_index":905,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["menu'},{'nam",{"_index":1480,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["menu.compon",{"_index":2817,"title":{},"body":{"modules/TsMenuModule.html":{}}}],["menu.component.html",{"_index":2746,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["menu.component.scss",{"_index":2745,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["menu/menu.modul",{"_index":1075,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsPaginatorModule.html":{}}}],["menuisdisabled(pagescount",{"_index":2959,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["menuitemstempl",{"_index":2752,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["menuloc",{"_index":2907,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["menupositioni",{"_index":2754,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["menupositionx",{"_index":2753,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["merchant",{"_index":4113,"title":{},"body":{"license.html":{}}}],["merg",{"_index":2012,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"license.html":{}}}],["merge(_sort.sortchang",{"_index":3466,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["merge(this.overlayref.backdropclick",{"_index":2036,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["merge(this.sort.sortchang",{"_index":3594,"title":{},"body":{"components/TsTableComponent.html":{}}}],["messag",{"_index":105,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{}}}],["message.length",{"_index":2955,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["message.servic",{"_index":3793,"title":{},"body":{"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{}}}],["message.service.t",{"_index":3732,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["message.service.ts:40",{"_index":3737,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["messages.compon",{"_index":3808,"title":{},"body":{"modules/TsValidationMessagesModule.html":{}}}],["messages.component.html",{"_index":3784,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.scss",{"_index":3783,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.t",{"_index":3782,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:38",{"_index":3792,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:63",{"_index":3789,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:69",{"_index":3790,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:75",{"_index":3787,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.length",{"_index":1330,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["messages.modul",{"_index":1092,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSelectModule.html":{}}}],["messages.module.t",{"_index":3807,"title":{},"body":{"modules/TsValidationMessagesModule.html":{}}}],["messages.push(`and",{"_index":1332,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["messages.push(messag",{"_index":1328,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["messages/valid",{"_index":1091,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSelectModule.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{}}}],["metadata",{"_index":1136,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"pipes/TsSentenceCasePipe.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["method",{"_index":1139,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{},"index.html":{}}}],["methods/variables/mixin",{"_index":4053,"title":{},"body":{"index.html":{}}}],["millisecond",{"_index":1730,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["mime",{"_index":250,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/typealiases.html":{}}}],["mime/typ",{"_index":103,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["mimetyp",{"_index":2419,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["min",{"_index":123,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsTableComponent.html":{}}}],["mind",{"_index":3979,"title":{},"body":{"contributing.html":{}}}],["mindat",{"_index":2324,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["mindate(valu",{"_index":2358,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["mindatevalid",{"_index":3828,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["minifi",{"_index":3934,"title":{},"body":{"contributing.html":{}}}],["minim",{"_index":2858,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["minimum",{"_index":458,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["minimumcharact",{"_index":725,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["minimumcharacters(valu",{"_index":723,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["minlength",{"_index":3263,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidationMessageService.html":{}}}],["minor",{"_index":3875,"title":{},"body":{"classes/Version.html":{}}}],["minwidth",{"_index":1592,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsTableComponent.html":{}}}],["miscellan",{"_index":4130,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["mistak",{"_index":3905,"title":{},"body":{"contributing.html":{}}}],["mit",{"_index":4091,"title":{},"body":{"license.html":{}}}],["mixin",{"_index":3365,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["mixindis",{"_index":3357,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["mixindisabled(tssortbas",{"_index":3367,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["mixindisabled(tssortheaderbas",{"_index":3448,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["mock",{"_index":3838,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["modal",{"_index":1999,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{}}}],["modal'},{'nam",{"_index":1458,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["modal.compon",{"_index":2013,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"modules/TsConfirmationModule.html":{}}}],["modal.component.html",{"_index":2052,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modal.component.scss",{"_index":2051,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modal.component.t",{"_index":2050,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modal.component.ts:29",{"_index":2054,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modal.component.ts:34",{"_index":2057,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modalinst",{"_index":1980,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["mode",{"_index":3008,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["model",{"_index":817,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["modelformatt",{"_index":3018,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["modifi",{"_index":3501,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{},"license.html":{}}}],["modul",{"_index":1002,"title":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"modules.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":2256,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["more",{"_index":992,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCopyComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["more_vert",{"_index":2777,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["motiv",{"_index":3936,"title":{},"body":{"contributing.html":{}}}],["mous",{"_index":902,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}}}],["mouseev",{"_index":674,"title":{"interfaces/MouseEvent.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["mouseout",{"_index":1837,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{}}}],["mouseov",{"_index":1838,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{}}}],["move",{"_index":974,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"interfaces/TsUser.html":{}}}],["movement",{"_index":323,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["much",{"_index":1789,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{}}}],["multi",{"_index":285,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["multipl",{"_index":65,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsIconComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["multiple(v",{"_index":727,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["multiple(valu",{"_index":434,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["multiple=\"(v",{"_index":683,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["mychangefunc(v",{"_index":2860,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["myclass",{"_index":2555,"title":{},"body":{"components/TsIconComponent.html":{}}}],["mycompon",{"_index":3839,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["mycontrol.valu",{"_index":1900,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["mydat",{"_index":2329,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["mydatasource.data",{"_index":3549,"title":{},"body":{"components/TsTableComponent.html":{}}}],["mydimensionconstraint",{"_index":142,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["myfilt",{"_index":2318,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["myform",{"_index":2214,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsValidatorsService.html":{}}}],["myform.get('daterang",{"_index":2223,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["myform.get('daterange');en",{"_index":2225,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["myform.get('daterange');exampl",{"_index":2333,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["myfunc(blob",{"_index":1193,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["mymimetyp",{"_index":98,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["myprogress",{"_index":160,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["myradiogroup",{"_index":3015,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["myselectfunc(v",{"_index":2859,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["mystr",{"_index":363,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["mystring.length",{"_index":373,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["mytableitem",{"_index":3544,"title":{},"body":{"components/TsTableComponent.html":{}}}],["myupdat",{"_index":3134,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["myvalid",{"_index":1200,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["myvalu",{"_index":1902,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsTableComponent.html":{}}}],["name",{"_index":20,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["name(valu",{"_index":3070,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["name=\"product",{"_index":684,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["nameexist",{"_index":923,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["nativ",{"_index":175,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"classes/TsTableDataSource.html":{}}}],["natur",{"_index":3943,"title":{},"body":{"contributing.html":{}}}],["nav",{"_index":903,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["nav_width_buff",{"_index":915,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["navig",{"_index":883,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["navigation'},{'nam",{"_index":1481,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["navigation.compon",{"_index":2853,"title":{},"body":{"modules/TsNavigationModule.html":{}}}],["navigation.component.html",{"_index":906,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["navigation.component.scss",{"_index":907,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["navigation/navigation.modul",{"_index":1076,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["navigationitembas",{"_index":876,"title":{"interfaces/NavigationItemBase.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["nb",{"_index":1093,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["nbsp",{"_index":3497,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["necessari",{"_index":3963,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":651,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["nest",{"_index":1551,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{}}}],["never",{"_index":2362,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["new",{"_index":35,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"classes/Version.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["newfil",{"_index":445,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["newfile.fileloaded$.pip",{"_index":448,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["next",{"_index":152,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["nextdirectionindex",{"_index":3407,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["nextpageicon",{"_index":2882,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["nextpageindex",{"_index":2923,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["nextpagetooltip",{"_index":2899,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["nextuniqueid",{"_index":271,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["ng_value_accessor",{"_index":224,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["ngaftercontentinit",{"_index":510,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["ngafterviewinit",{"_index":758,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["ngif=\"fileexists(v.id",{"_index":205,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["nginx",{"_index":263,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["ngmodel",{"_index":1898,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsTableComponent.html":{}}}],["ngmodel(v",{"_index":1922,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["ngmodul",{"_index":1048,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["ngonchang",{"_index":1548,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"components/TsLoginFormComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["ngonchanges(chang",{"_index":517,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChart2Component.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["ngondestroy",{"_index":522,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["ngoninit",{"_index":501,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{}}}],["ngx",{"_index":3149,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"dependencies.html":{}}}],["ngzone",{"_index":1618,"title":{},"body":{"components/TsChart2Component.html":{}}}],["node",{"_index":2115,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["node_modules/perfect",{"_index":3156,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["non",{"_index":3451,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"contributing.html":{}}}],["none",{"_index":541,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["noninfring",{"_index":4115,"title":{},"body":{"license.html":{}}}],["noop",{"_index":1958,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["noresult",{"_index":3764,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["normal",{"_index":1754,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["northamerica",{"_index":1739,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["note",{"_index":262,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["note(b",{"_index":1584,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["noth",{"_index":3867,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["notic",{"_index":2221,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"license.html":{}}}],["notifi",{"_index":659,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["notuniqu",{"_index":3763,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["now",{"_index":756,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{}}}],["nowrap",{"_index":1585,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["nowrap=\"tru",{"_index":3564,"title":{},"body":{"components/TsTableComponent.html":{}}}],["npm",{"_index":4080,"title":{},"body":{"index.html":{}}}],["null",{"_index":848,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsConfirmationDirective.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":49,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["number(r.split(':')[0",{"_index":591,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["number(r.split(':')[1",{"_index":592,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["number.pip",{"_index":2996,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["number.pipe.t",{"_index":3123,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["number.pipe.ts:12",{"_index":3126,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["number/round",{"_index":2995,"title":{},"body":{"modules/TsPipesModule.html":{},"pipes/TsRoundNumberPipe.html":{}}}],["number1",{"_index":2462,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["number2",{"_index":2463,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["number_only_regex",{"_index":825,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["number_with_decimal_regex",{"_index":827,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["numberofmissingcolumn",{"_index":1285,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["numbers/currency/percentag",{"_index":851,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["numbersvalid",{"_index":3830,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["obj.id",{"_index":197,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["object",{"_index":713,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{}}}],["object.assign({inputel",{"_index":863,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["object.keys(file.valid",{"_index":587,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["observ",{"_index":1995,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["obtain",{"_index":4101,"title":{},"body":{"license.html":{}}}],["occur",{"_index":155,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsTableDataSource.html":{},"components/TsValidationMessagesComponent.html":{}}}],["offer",{"_index":3733,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["offest",{"_index":3179,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["offset",{"_index":3177,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["old",{"_index":3551,"title":{},"body":{"components/TsTableComponent.html":{}}}],["on",{"_index":201,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["onblur",{"_index":1928,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["onc",{"_index":401,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{}}}],["onchang",{"_index":214,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["onchangecallback",{"_index":1926,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["onclick(ev",{"_index":2015,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ondestroy",{"_index":215,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["oninit",{"_index":216,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{}}}],["oninput($event.target.valu",{"_index":838,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["onres",{"_index":947,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["onscroll(ev",{"_index":1308,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["onto",{"_index":2634,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["ontouch",{"_index":840,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["ontouchedcallback",{"_index":1927,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["onvirtualinputelementchange(ev",{"_index":561,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["op",{"_index":3649,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["opac",{"_index":1422,"title":{},"body":{"components/TsCardComponent.html":{}}}],["open",{"_index":297,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{},"index.html":{}}}],["open/clos",{"_index":3923,"title":{},"body":{"contributing.html":{}}}],["open_in_new",{"_index":2552,"title":{},"body":{"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{}}}],["opento",{"_index":2330,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["oper",{"_index":3938,"title":{},"body":{"contributing.html":{}}}],["option",{"_index":22,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"miscellaneous/typealiases.html":{}}}],["option.dis",{"_index":3087,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["optionremov",{"_index":746,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["optionremoved)=\"myremoved($ev",{"_index":689,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["options(valu",{"_index":3073,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["options.chart.events[eventnam",{"_index":1848,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["options.interfac",{"_index":1816,"title":{},"body":{"classes/TsChartEvent.html":{},"modules/TsChartModule.html":{}}}],["options.plotoptions.series.events[eventnam",{"_index":1853,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["options.plotoptions.series.point.events[eventnam",{"_index":1856,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["optionselect",{"_index":745,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["optionselected)=\"myselected($ev",{"_index":688,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["optiontyp",{"_index":613,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["order",{"_index":1657,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"injectables/TsDropProtectionService.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["origin",{"_index":2004,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{}}}],["originalev",{"_index":1812,"title":{},"body":{"classes/TsChartEvent.html":{}}}],["origini",{"_index":2023,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["originx",{"_index":2022,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["other",{"_index":4011,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":3132,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"injectables/TsSortHeaderIntl.html":{},"license.html":{}}}],["out",{"_index":750,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"modules/TsValidationMessagesModule.html":{},"contributing.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":2468,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["outlin",{"_index":3917,"title":{},"body":{"contributing.html":{}}}],["output",{"_index":217,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["output('tssortchang",{"_index":3384,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["over",{"_index":1760,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["overlap",{"_index":720,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{}}}],["overlay",{"_index":1985,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"index.html":{}}}],["overlay'},{'nam",{"_index":1476,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["overlay.compon",{"_index":2644,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{}}}],["overlay.component.scss",{"_index":2618,"title":{},"body":{"components/TsLoadingOverlayComponent.html":{}}}],["overlay.component.t",{"_index":2616,"title":{},"body":{"components/TsLoadingOverlayComponent.html":{}}}],["overlay.direct",{"_index":2665,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{}}}],["overlay.directive.t",{"_index":2619,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:101",{"_index":2637,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:114",{"_index":2636,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:35",{"_index":2642,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:40",{"_index":2641,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:46",{"_index":2632,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:59",{"_index":2630,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:88",{"_index":2639,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.modul",{"_index":1071,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["overlay.module.t",{"_index":2664,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{}}}],["overlay/load",{"_index":1070,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{}}}],["overlay__panel",{"_index":2029,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overlayconfig",{"_index":2007,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overlayi",{"_index":2025,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overlaymodul",{"_index":2064,"title":{},"body":{"modules/TsConfirmationModule.html":{}}}],["overlayref",{"_index":1981,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overlayx",{"_index":2024,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overrid",{"_index":31,"title":{},"body":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["overridden",{"_index":662,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["overriden",{"_index":1708,"title":{},"body":{"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["overview",{"_index":3932,"title":{"overview.html":{}},"body":{"contributing.html":{},"overview.html":{}}}],["overwrit",{"_index":1654,"title":{},"body":{"components/TsChart2Component.html":{}}}],["packag",{"_index":3985,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1304,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsLinkComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"index.html":{}}}],["page.valu",{"_index":2949,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagenumb",{"_index":2972,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pages.find((pag",{"_index":2961,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagesarray",{"_index":2886,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagescount",{"_index":2958,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pageselect",{"_index":2919,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagevalu",{"_index":2973,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagin",{"_index":2856,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"index.html":{}}}],["paginator'},{'nam",{"_index":1483,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["paginator.compon",{"_index":2984,"title":{},"body":{"modules/TsPaginatorModule.html":{}}}],["paginator.component.html",{"_index":2868,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginator.component.scss",{"_index":2869,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginator/paginator.modul",{"_index":1077,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsTableModule.html":{}}}],["paginatorarray",{"_index":2969,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginatorarray.push",{"_index":2975,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginatorarray.sort((a",{"_index":2976,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginatormessagetempl",{"_index":2908,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["panelclass",{"_index":2028,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["param",{"_index":497,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["paramet",{"_index":18,"title":{},"body":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"classes/TsChartEvent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{}}}],["parent",{"_index":1553,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"components/TsIconButtonComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["parentintl",{"_index":3510,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["pars",{"_index":593,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["parsedimageratio",{"_index":588,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["parsedimageratio.push",{"_index":590,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["parsedratio",{"_index":595,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["parsedratio.push(r.widthratio.tostr",{"_index":596,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["parseint(value.split",{"_index":3868,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["parseint(value.split(':')[0",{"_index":1432,"title":{},"body":{"components/TsCardComponent.html":{}}}],["parseint(value.split(':')[1",{"_index":1434,"title":{},"body":{"components/TsCardComponent.html":{}}}],["parseratiotostring(ratio",{"_index":594,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["part",{"_index":2799,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["partial",{"_index":2974,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["particular",{"_index":4114,"title":{},"body":{"license.html":{}}}],["pass",{"_index":117,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["password",{"_index":811,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["password_minlength",{"_index":2677,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["passwordmessag",{"_index":3743,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["passwordvalid",{"_index":3832,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["past",{"_index":1195,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsTableComponent.html":{}}}],["pastedcolumncount",{"_index":1286,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["pastedrowid",{"_index":1293,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["patch",{"_index":3876,"title":{},"body":{"classes/Version.html":{},"contributing.html":{}}}],["path",{"_index":3120,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["pattern",{"_index":3749,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["peet&#x1f3a8",{"_index":4076,"title":{},"body":{"index.html":{}}}],["peopl",{"_index":4057,"title":{},"body":{"index.html":{}}}],["per",{"_index":1769,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["percent",{"_index":1755,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["percentag",{"_index":806,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["percentage.tofixed(2",{"_index":1436,"title":{},"body":{"components/TsCardComponent.html":{}}}],["perfect",{"_index":3150,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"dependencies.html":{}}}],["perfectscrollbardirect",{"_index":3148,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["perfectscrollbarmodul",{"_index":3197,"title":{},"body":{"modules/TsScrollbarsModule.html":{}}}],["perform",{"_index":1788,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["perhap",{"_index":3950,"title":{},"body":{"contributing.html":{}}}],["permiss",{"_index":4095,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4106,"title":{},"body":{"license.html":{}}}],["perpag",{"_index":2967,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["person",{"_index":4100,"title":{},"body":{"license.html":{}}}],["phone",{"_index":800,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["pick",{"_index":2346,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"components/TsReactiveFormBaseComponent.html":{}}}],["picker",{"_index":298,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["pie",{"_index":1665,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["pipe",{"_index":620,"title":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"pipes/TsDatePipe.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"index.html":{},"overview.html":{}}}],["pipes/pipes.modul",{"_index":1079,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["pipetransform",{"_index":2160,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["pixel",{"_index":459,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["place",{"_index":289,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"miscellaneous/typealiases.html":{}}}],["placehold",{"_index":1960,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{},"classes/Version.html":{}}}],["placeholder/label",{"_index":721,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["plan",{"_index":177,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["pleas",{"_index":3903,"title":{},"body":{"contributing.html":{}}}],["plot",{"_index":1721,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["plotband",{"_index":1713,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["plotopt",{"_index":1798,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["plugin",{"_index":4086,"title":{},"body":{"index.html":{}}}],["point",{"_index":1733,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["point'},{'nam",{"_index":1513,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["point.direct",{"_index":1826,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"modules/TsChartModule.html":{},"directives/TsChartSeriesDirective.html":{}}}],["pointdirect",{"_index":1844,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["pointdirective[eventname].emit(new",{"_index":1857,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["pointev",{"_index":1839,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["pointevents.foreach((eventnam",{"_index":1855,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["pointformatt",{"_index":1768,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["pointstart",{"_index":1799,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["pop",{"_index":2002,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"index.html":{}}}],["portal",{"_index":2638,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["portion",{"_index":2186,"title":{},"body":{"interfaces/TsDateRange.html":{},"license.html":{}}}],["posit",{"_index":1756,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["positionstrategi",{"_index":2019,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["possibl",{"_index":1430,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["postal",{"_index":807,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["potenti",{"_index":719,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["pr",{"_index":3900,"title":{},"body":{"contributing.html":{}}}],["pray",{"_index":3913,"title":{},"body":{"contributing.html":{}}}],["preced",{"_index":3048,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["precis",{"_index":3125,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{},"index.html":{}}}],["predic",{"_index":2481,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["prefix",{"_index":1347,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"contributing.html":{}}}],["prepend",{"_index":1771,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["present",{"_index":1353,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsMenuComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsValidationMessagesComponent.html":{}}}],["preservewhitespac",{"_index":2471,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["prevent",{"_index":2321,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"contributing.html":{}}}],["prevent(",{"_index":2388,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["preventandstopeventpropagation(ev",{"_index":565,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["preview",{"_index":295,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["previou",{"_index":765,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["previouspageicon",{"_index":2880,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["previouspagetooltip",{"_index":2898,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["primari",{"_index":290,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsToggleComponent.html":{},"miscellaneous/typealiases.html":{}}}],["pristin",{"_index":909,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["pristineitem",{"_index":911,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["privat",{"_index":332,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["problem",{"_index":3897,"title":{},"body":{"contributing.html":{}}}],["process",{"_index":2184,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsTableDataSource.html":{}}}],["programmat",{"_index":1872,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["progress",{"_index":63,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"index.html":{}}}],["progress(valu",{"_index":437,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["prohibit",{"_index":2314,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["project",{"_index":3922,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["prompt",{"_index":296,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCopyComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["promptforfil",{"_index":532,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["properti",{"_index":12,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"classes/Version.html":{}}}],["propertynam",{"_index":3796,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["propog",{"_index":564,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["propos",{"_index":3914,"title":{},"body":{"contributing.html":{}}}],["protect",{"_index":319,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"injectables/TsDropProtectionService.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsToggleComponent.html":{}}}],["protection.servic",{"_index":256,"title":{},"body":{"interfaces/ImageRatio.html":{},"modules/TsFileUploadModule.html":{}}}],["protection.service.t",{"_index":2383,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["protection.service.ts:18",{"_index":2387,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["protection.service.ts:30",{"_index":2391,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["protection.service.ts:46",{"_index":2389,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["protection.service.ts:7",{"_index":2386,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["provid",{"_index":282,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"contributing.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["proxi",{"_index":2786,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["public",{"_index":13,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{}}}],["publicid",{"_index":338,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["publish",{"_index":4102,"title":{},"body":{"license.html":{}}}],["pull",{"_index":980,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["purpos",{"_index":2513,"title":{},"body":{"components/TsIconButtonComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"license.html":{}}}],["push",{"_index":971,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["px",{"_index":3178,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["qa",{"_index":287,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["queri",{"_index":608,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{}}}],["query)=\"myquery($ev",{"_index":691,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["querylist",{"_index":885,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["queryminlength",{"_index":3206,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["querystr",{"_index":3176,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["querysubject",{"_index":695,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["question",{"_index":3892,"title":{},"body":{"contributing.html":{}}}],["quick",{"_index":2238,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["quickli",{"_index":3910,"title":{},"body":{"contributing.html":{}}}],["r",{"_index":2458,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["r.heightratio",{"_index":2457,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["r.heightratio.tostr",{"_index":597,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["r.split('\\t",{"_index":1334,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["r.widthratio",{"_index":2456,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["r\\n",{"_index":1346,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["radar",{"_index":1666,"title":{},"body":{"components/TsChart2Component.html":{},"miscellaneous/typealiases.html":{}}}],["radio",{"_index":1080,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["rail",{"_index":2861,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["rang",{"_index":129,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["range'},{'nam",{"_index":1462,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["range.compon",{"_index":2309,"title":{},"body":{"modules/TsDateRangeModule.html":{}}}],["range.component.html",{"_index":2234,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["range.component.scss",{"_index":2235,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["range.component.t",{"_index":2183,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["range.modul",{"_index":1061,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["range.module.t",{"_index":2308,"title":{},"body":{"modules/TsDateRangeModule.html":{}}}],["range.selectnodecont",{"_index":2113,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["range.selectnodecontents(el",{"_index":2117,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["range/d",{"_index":1060,"title":{},"body":{"modules/TerminusUIModule.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{}}}],["rangeendchange(ev",{"_index":2342,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["rangestartchange(ev",{"_index":2335,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["rare",{"_index":1904,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["rate",{"_index":3183,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{}}}],["ratio",{"_index":59,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/typealiases.html":{}}}],["ratioconstraint",{"_index":431,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["ratioconstraints(valu",{"_index":418,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["ratios.map((r",{"_index":589,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["re",{"_index":2703,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["reach",{"_index":3607,"title":{},"body":{"components/TsTableComponent.html":{}}}],["reactiv",{"_index":1897,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsReactiveFormBaseComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["reactiveformsmodul",{"_index":1122,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsInputModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{}}}],["read",{"_index":2448,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"contributing.html":{}}}],["readabl",{"_index":3570,"title":{},"body":{"components/TsTableComponent.html":{},"index.html":{}}}],["readm",{"_index":43,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["readonli",{"_index":1205,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/Version.html":{}}}],["real",{"_index":161,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["reason",{"_index":3965,"title":{},"body":{"contributing.html":{}}}],["rebas",{"_index":3967,"title":{},"body":{"contributing.html":{}}}],["receiv",{"_index":2278,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["recent",{"_index":3371,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["recommend",{"_index":3520,"title":{},"body":{"modules/TsSortModule.html":{},"modules/TsTableModule.html":{}}}],["record",{"_index":1212,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["recordcounttoohighmessag",{"_index":2914,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordid",{"_index":1187,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["recordsform",{"_index":1228,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["recordsperpag",{"_index":2889,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsperpagechang",{"_index":2920,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsperpagechoic",{"_index":2915,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsperpageupdated(select",{"_index":2956,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsremain",{"_index":2970,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsselectlabel",{"_index":2917,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recreat",{"_index":2334,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["redirect",{"_index":2694,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["redraw",{"_index":1832,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["refer",{"_index":184,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartSeriesDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["refin",{"_index":2877,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["reflect",{"_index":157,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["regard",{"_index":2866,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["regardless",{"_index":3566,"title":{},"body":{"components/TsTableComponent.html":{}}}],["regex",{"_index":868,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"injectables/TsValidationMessageService.html":{}}}],["regexp",{"_index":793,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["regexp(regex",{"_index":871,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["regexp|str",{"_index":830,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["regist",{"_index":553,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["register(sort",{"_index":3387,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["registeronchang",{"_index":1929,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["registeronchange(fn",{"_index":855,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["registeronchangefn(fn",{"_index":555,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["registerontouch",{"_index":1930,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["registerontouched(fn",{"_index":857,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["regular",{"_index":3246,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["reiniti",{"_index":1629,"title":{},"body":{"components/TsChart2Component.html":{}}}],["rel",{"_index":2660,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["relat",{"_index":3946,"title":{},"body":{"contributing.html":{}}}],["releas",{"_index":3964,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["reli",{"_index":1905,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"index.html":{}}}],["remain",{"_index":2966,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["rememb",{"_index":2669,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"index.html":{}}}],["rememberm",{"_index":2708,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["remot",{"_index":3973,"title":{},"body":{"contributing.html":{}}}],["remov",{"_index":192,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"injectables/TsDropProtectionService.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["removed(chip",{"_index":657,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["removefile(ev",{"_index":534,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["renam",{"_index":1594,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["render",{"_index":1354,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsMenuComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsValidationMessagesComponent.html":{}}}],["renderer.setelementstyle(elementref.nativeel",{"_index":1591,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["renderer2",{"_index":819,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["report",{"_index":3926,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["repositori",{"_index":3906,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["repres",{"_index":322,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{}}}],["reproduc",{"_index":3940,"title":{},"body":{"contributing.html":{}}}],["reproduct",{"_index":3907,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":3899,"title":{},"body":{"contributing.html":{}}}],["requestparam",{"_index":3622,"title":{},"body":{"components/TsTableComponent.html":{}}}],["requesturl",{"_index":3620,"title":{},"body":{"components/TsTableComponent.html":{}}}],["requir",{"_index":603,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{}}}],["requiredspac",{"_index":976,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["reset",{"_index":630,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resetform",{"_index":2679,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["resetselect",{"_index":2074,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["resetvalu",{"_index":2367,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["resiz",{"_index":945,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["resourc",{"_index":2933,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["respond",{"_index":1412,"title":{},"body":{"components/TsCardComponent.html":{}}}],["respons",{"_index":579,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{}}}],["response['item",{"_index":629,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["rest",{"_index":2554,"title":{},"body":{"components/TsIconComponent.html":{}}}],["restrict",{"_index":1194,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"license.html":{}}}],["result",{"_index":39,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["result.row",{"_index":1335,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["resultsarray",{"_index":1315,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["resultslength",{"_index":3589,"title":{},"body":{"components/TsTableComponent.html":{}}}],["retriev",{"_index":3054,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{}}}],["retrievevalue(opt",{"_index":3083,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["return",{"_index":190,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["revers",{"_index":3350,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["revert",{"_index":2289,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["rgba(0",{"_index":3042,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["right",{"_index":1424,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTooltipComponent.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["rippl",{"_index":2099,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["ripplecolor",{"_index":2072,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["roger",{"_index":2783,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["role",{"_index":1577,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["round",{"_index":2994,"title":{},"body":{"modules/TsPipesModule.html":{},"index.html":{}}}],["roundnumb",{"_index":3127,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["roundnumber(valu",{"_index":3128,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["routerlink",{"_index":896,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["routermodul",{"_index":2612,"title":{},"body":{"modules/TsLinkModule.html":{},"modules/TsNavigationModule.html":{}}}],["row",{"_index":1185,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{}}}],["row${rowsthatdontfit",{"_index":1277,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["row'",{"_index":2476,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTableComponent.html":{}}}],["row'},{'nam",{"_index":1467,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["row.get('column",{"_index":1282,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["row/column",{"_index":1213,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rowcount",{"_index":1249,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rowcount(valu",{"_index":1246,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rows.length).map((r",{"_index":1337,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rows.slice(0",{"_index":1336,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rowsthatdontfit",{"_index":1275,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rule",{"_index":2479,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"contributing.html":{}}}],["run",{"_index":3958,"title":{},"body":{"contributing.html":{}}}],["rxj",{"_index":671,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":240,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{}}}],["rxjs/operators/catcherror",{"_index":3581,"title":{},"body":{"components/TsTableComponent.html":{}}}],["rxjs/operators/map",{"_index":3577,"title":{},"body":{"components/TsTableComponent.html":{}}}],["rxjs/operators/startwith",{"_index":3576,"title":{},"body":{"components/TsTableComponent.html":{}}}],["rxjs/operators/switchmap",{"_index":3579,"title":{},"body":{"components/TsTableComponent.html":{}}}],["s",{"_index":345,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["safe",{"_index":2290,"title":{},"body":{"interfaces/TsDateRange.html":{},"contributing.html":{}}}],["same",{"_index":127,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{}}}],["sanit",{"_index":797,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["sanitizevalu",{"_index":818,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["sankey",{"_index":1668,"title":{},"body":{"components/TsChart2Component.html":{},"miscellaneous/typealiases.html":{}}}],["sat/sun",{"_index":2316,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["saturday",{"_index":2322,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["save",{"_index":732,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChart2Component.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["scatter",{"_index":1751,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["scenario",{"_index":162,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["scratch",{"_index":1745,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["screenread",{"_index":3508,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["screenshot",{"_index":3912,"title":{},"body":{"contributing.html":{}}}],["scrict",{"_index":1605,"title":{},"body":{"components/TsChart2Component.html":{}}}],["scroll",{"_index":1305,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["scrollabl",{"_index":3171,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollable(direct",{"_index":3172,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollar",{"_index":4037,"title":{},"body":{"index.html":{}}}],["scrollbar",{"_index":3131,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"dependencies.html":{},"index.html":{}}}],["scrollbar.css",{"_index":3158,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollbar/css/perfect",{"_index":3157,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollbars'},{'nam",{"_index":1490,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["scrollbars.compon",{"_index":3198,"title":{},"body":{"modules/TsScrollbarsModule.html":{}}}],["scrollbars.component.html",{"_index":3154,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollbars.component.scss",{"_index":3155,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollbars/scrollbars.modul",{"_index":1083,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["scrolldown",{"_index":3137,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolli",{"_index":3142,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollleft",{"_index":3138,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollright",{"_index":3139,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollspe",{"_index":3162,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollto(x",{"_index":3174,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolltobottom(spe",{"_index":3184,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolltoelement(querystr",{"_index":3180,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolltoleft(spe",{"_index":3186,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolltoright(spe",{"_index":3188,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolltotop(spe",{"_index":3190,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollup",{"_index":3140,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollx",{"_index":3141,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scss",{"_index":4003,"title":{},"body":{"index.html":{}}}],["search",{"_index":631,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsIconComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["search'},{'nam",{"_index":1492,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["search.compon",{"_index":3275,"title":{},"body":{"modules/TsSearchModule.html":{}}}],["search.component.html",{"_index":3201,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["search.component.scss",{"_index":3200,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["search/search.modul",{"_index":1084,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["searchform",{"_index":3207,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["searchqueri",{"_index":696,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["second",{"_index":1202,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["secondari",{"_index":882,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["see",{"_index":465,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["seed",{"_index":441,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{}}}],["seeddaterang",{"_index":2264,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["seedfil",{"_index":456,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["seedfile(fil",{"_index":443,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["seedfile]=\"v.fil",{"_index":206,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["seedwithformvalues(formgroup",{"_index":2265,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["seem",{"_index":2243,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsReactiveFormBaseComponent.html":{}}}],["select",{"_index":66,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["select'},{'nam",{"_index":1494,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["select.compon",{"_index":3285,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["select/select.modul",{"_index":1085,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsPaginatorModule.html":{}}}],["selectablechip",{"_index":698,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selectal",{"_index":3643,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["selectedd",{"_index":2259,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["selectedmultipl",{"_index":471,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["selectedmultiple(",{"_index":186,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["selectedopt",{"_index":699,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selection)=\"myselection($ev",{"_index":690,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selection.addrange(rang",{"_index":2119,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["selection.removeallrang",{"_index":2118,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["selectionscontrol",{"_index":736,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selectionscontrol(valu",{"_index":733,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selectionscontrol=\"myform.get('mycontrol",{"_index":685,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selectoption(ev",{"_index":773,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selector",{"_index":302,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["selector'},{'nam",{"_index":1487,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["selecttext",{"_index":2075,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["selecttext(el",{"_index":2086,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["sell",{"_index":4105,"title":{},"body":{"license.html":{}}}],["semant",{"_index":4079,"title":{},"body":{"index.html":{}}}],["send",{"_index":3646,"title":{},"body":{"classes/TsTableDataSource.html":{},"contributing.html":{}}}],["sens",{"_index":4018,"title":{},"body":{"index.html":{}}}],["sent",{"_index":624,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["sentenc",{"_index":2997,"title":{},"body":{"modules/TsPipesModule.html":{},"index.html":{}}}],["separ",{"_index":968,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["seri",{"_index":1661,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["series'},{'nam",{"_index":1515,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["series.direct",{"_index":1825,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"modules/TsChartModule.html":{}}}],["seriesdirect",{"_index":1843,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["seriesdirective[eventname].emit(new",{"_index":1854,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["seriesev",{"_index":1833,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["seriesevents.foreach((eventnam",{"_index":1852,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["servic",{"_index":10,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsCopyComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{}}}],["set",{"_index":95,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{}}}],["setaspectratio(valu",{"_index":1395,"title":{},"body":{"components/TsCardComponent.html":{}}}],["setbackground(valu",{"_index":2544,"title":{},"body":{"components/TsIconComponent.html":{}}}],["setborder(valu",{"_index":1398,"title":{},"body":{"components/TsCardComponent.html":{}}}],["setdata(data",{"_index":3652,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["setdirection(direct",{"_index":3436,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["setdisableclear(v",{"_index":3439,"title":{},"body":{"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{}}}],["setid(valu",{"_index":1401,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsCheckboxComponent.html":{}}}],["setinterv",{"_index":172,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["setischecked(v",{"_index":1966,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["setischecked(valu",{"_index":3702,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["setitems(valu",{"_index":2845,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["setngmodel(v",{"_index":1967,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["setsvgicon(valu",{"_index":2547,"title":{},"body":{"components/TsIconComponent.html":{}}}],["setter",{"_index":389,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsLoadingOverlayDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["settheme(valu",{"_index":1404,"title":{},"body":{"components/TsCardComponent.html":{}}}],["settimeout",{"_index":2729,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["settl",{"_index":1267,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["settsautofocus(valu",{"_index":1146,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["settsloadingoverlay(valu",{"_index":2643,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["settsverticalspacing(valu",{"_index":3864,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["setup",{"_index":929,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["setupchart(chart",{"_index":1658,"title":{},"body":{"components/TsChart2Component.html":{}}}],["setupinitialarray",{"_index":2819,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["setupinitialarrays(item",{"_index":963,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["setupmask(cr",{"_index":859,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["setupnewfile(fil",{"_index":558,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["setvalidationmessages(fil",{"_index":577,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["setvalue(v",{"_index":3111,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["setvisualization(valu",{"_index":1640,"title":{},"body":{"components/TsChart2Component.html":{}}}],["sever",{"_index":75,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["shadow",{"_index":1379,"title":{},"body":{"components/TsCardComponent.html":{},"index.html":{}}}],["shall",{"_index":4109,"title":{},"body":{"license.html":{}}}],["shell",{"_index":3975,"title":{},"body":{"contributing.html":{}}}],["short",{"_index":2159,"title":{},"body":{"pipes/TsDatePipe.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["shortcut",{"_index":832,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["shouldfocu",{"_index":1138,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["shouldoverlaptrigg",{"_index":2747,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["shouldset",{"_index":2646,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["shouldshowrecordsmessage(messag",{"_index":2954,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["show",{"_index":62,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{}}}],["show/hid",{"_index":2631,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["showcolumn",{"_index":2793,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["showform",{"_index":2678,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["shown",{"_index":293,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsTooltipComponent.html":{}}}],["showprogress",{"_index":644,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["showprogress]=\"inprogress",{"_index":686,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["showrecordsperpageselector",{"_index":2918,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["side",{"_index":1426,"title":{},"body":{"components/TsCardComponent.html":{},"classes/TsTableDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["signatur",{"_index":636,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["signifi",{"_index":2604,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["similar",{"_index":2788,"title":{},"body":{"components/TsMenuComponent.html":{},"contributing.html":{}}}],["simpl",{"_index":2767,"title":{},"body":{"components/TsMenuComponent.html":{},"components/TsTableComponent.html":{}}}],["simplechang",{"_index":218,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsChart2Component.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["simpli",{"_index":1421,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["singl",{"_index":119,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}}}],["site",{"_index":2605,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["size",{"_index":56,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["skipself",{"_index":1559,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["small",{"_index":2790,"title":{},"body":{"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["small(valu",{"_index":3076,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["smaller",{"_index":3771,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["smallest",{"_index":1775,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["softwar",{"_index":4093,"title":{},"body":{"license.html":{}}}],["solut",{"_index":4012,"title":{},"body":{"index.html":{}}}],["somehow",{"_index":748,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["someth",{"_index":754,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["sometim",{"_index":3562,"title":{},"body":{"components/TsTableComponent.html":{}}}],["sort",{"_index":1496,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["sort(sort",{"_index":3395,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sort.direct",{"_index":3443,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{}}}],["sort/sort.modul",{"_index":1086,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsTableModule.html":{}}}],["sort=${sort}&order=${order}&page=${pag",{"_index":3623,"title":{},"body":{"components/TsTableComponent.html":{}}}],["sortabl",{"_index":3369,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortable.disableclear",{"_index":3403,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortable.id",{"_index":3388,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortable.start",{"_index":3398,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortbuttonlabel",{"_index":3502,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["sortchang",{"_index":3346,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["sortdescriptionlabel",{"_index":3503,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["sortdirectioncycl",{"_index":3405,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortdirectioncycle.indexof(this.direct",{"_index":3408,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortdirectioncycle.length",{"_index":3409,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortdirectioncycle[nextdirectionindex",{"_index":3410,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortord",{"_index":3412,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortorder.push",{"_index":3414,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortorder.revers",{"_index":3413,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{}}}],["source.t",{"_index":3627,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:19",{"_index":3639,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:24",{"_index":3641,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:30",{"_index":3640,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:38",{"_index":3642,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:43",{"_index":3653,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:46",{"_index":3651,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:48",{"_index":3636,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:65",{"_index":3644,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:80",{"_index":3647,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:86",{"_index":3648,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["space",{"_index":913,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsIconComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{}}}],["spacing.const",{"_index":3865,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["spacing.direct",{"_index":3527,"title":{},"body":{"modules/TsSpacingModule.html":{}}}],["spacing.directive.t",{"_index":3860,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["spacing.directive.ts:58",{"_index":3863,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["spacing.directive.ts:85",{"_index":3862,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["spacing/spacing.const",{"_index":242,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsConfirmationModalComponent.html":{}}}],["spacing/spacing.modul",{"_index":1087,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{}}}],["span",{"_index":3711,"title":{},"body":{"components/TsTooltipComponent.html":{},"index.html":{}}}],["spawn",{"_index":1990,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["spec",{"_index":3980,"title":{},"body":{"contributing.html":{}}}],["specif",{"_index":516,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["specifi",{"_index":494,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["speed",{"_index":3160,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["spend",{"_index":3928,"title":{},"body":{"contributing.html":{}}}],["spinner",{"_index":677,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsButtonModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"index.html":{}}}],["split",{"_index":960,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["splitarray",{"_index":969,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["stack",{"_index":1752,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["stackblitz",{"_index":3908,"title":{},"body":{"contributing.html":{}}}],["stand",{"_index":2796,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["standard",{"_index":2606,"title":{},"body":{"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsValidationMessageService.html":{}}}],["start",{"_index":166,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"index.html":{}}}],["startblur(d",{"_index":2300,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startcontrol",{"_index":2268,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startcontrol.valu",{"_index":2271,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startdat",{"_index":2217,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["startdate1",{"_index":2200,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startdate2",{"_index":2202,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startdatecontrol",{"_index":2250,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startdateselected(datepickerev",{"_index":2279,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["starter",{"_index":3909,"title":{},"body":{"contributing.html":{}}}],["startingview",{"_index":2255,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["startinitiald",{"_index":2207,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startmaxd",{"_index":2198,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startmind",{"_index":2199,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startplacehold",{"_index":2253,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startprogress",{"_index":169,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["startselect",{"_index":2192,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startvalu",{"_index":2270,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startwith",{"_index":3575,"title":{},"body":{"components/TsTableComponent.html":{}}}],["startwith(nul",{"_index":621,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["state",{"_index":1903,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{}}}],["static",{"_index":1189,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["statu",{"_index":3325,"title":{},"body":{"classes/TsSelectedFile.html":{},"index.html":{}}}],["step",{"_index":1978,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"contributing.html":{},"index.html":{}}}],["stepper",{"_index":4035,"title":{},"body":{"index.html":{}}}],["still",{"_index":1206,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"contributing.html":{}}}],["stop",{"_index":563,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["store",{"_index":182,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsImageDimensions.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{}}}],["stream",{"_index":609,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsConfirmationModalComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"classes/TsTableDataSource.html":{}}}],["stretch",{"_index":1720,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["stricter",{"_index":3543,"title":{},"body":{"components/TsTableComponent.html":{}}}],["string",{"_index":79,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stringifi",{"_index":2370,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["string|dat",{"_index":2173,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["structur",{"_index":120,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSelectedFile.html":{}}}],["style",{"_index":1384,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{}}}],["style.posit",{"_index":2625,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["stylesheet",{"_index":4050,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":306,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["sub",{"_index":3007,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["subject",{"_index":2053,"title":{},"body":{"components/TsConfirmationModalComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"license.html":{}}}],["sublicens",{"_index":4104,"title":{},"body":{"license.html":{}}}],["submiss",{"_index":2698,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"contributing.html":{}}}],["submit",{"_index":2213,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["subscrib",{"_index":505,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["subscribe((data",{"_index":3663,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["subscribe((f",{"_index":452,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["subscribe((queri",{"_index":766,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["subscribe((v",{"_index":1269,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["subscribe((valu",{"_index":772,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["subscribe(data",{"_index":3609,"title":{},"body":{"components/TsTableComponent.html":{}}}],["subscript",{"_index":3637,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["substanti",{"_index":4110,"title":{},"body":{"license.html":{}}}],["subtitl",{"_index":1801,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["success",{"_index":2089,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["successfulli",{"_index":2692,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"contributing.html":{}}}],["such",{"_index":2477,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsTableDataSource.html":{}}}],["suggest",{"_index":3947,"title":{},"body":{"contributing.html":{}}}],["suit",{"_index":3959,"title":{},"body":{"contributing.html":{}}}],["sunday",{"_index":2323,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["super",{"_index":488,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["super(columndef",{"_index":1579,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["support",{"_index":176,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["supportedimagedimens",{"_index":362,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["supportsinteract",{"_index":1367,"title":{},"body":{"components/TsCardComponent.html":{}}}],["sure",{"_index":3915,"title":{},"body":{"contributing.html":{}}}],["svg",{"_index":4124,"title":{},"body":{"modules.html":{}}}],["svgicon",{"_index":2529,"title":{},"body":{"components/TsIconComponent.html":{}}}],["svgicon(valu",{"_index":2568,"title":{},"body":{"components/TsIconComponent.html":{}}}],["switchmap",{"_index":3578,"title":{},"body":{"components/TsTableComponent.html":{}}}],["switchmap((term",{"_index":622,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["system",{"_index":3939,"title":{},"body":{"contributing.html":{}}}],["t",{"_index":450,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsTableDataSource.html":{}}}],["tab",{"_index":2602,"title":{},"body":{"components/TsLinkComponent.html":{},"index.html":{}}}],["tabindex",{"_index":1151,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsLinkComponent.html":{}}}],["tabl",{"_index":51,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{}}}],["table'",{"_index":3532,"title":{},"body":{"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["table'},{'nam",{"_index":1499,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["table.compon",{"_index":3674,"title":{},"body":{"modules/TsTableModule.html":{}}}],["table.component.scss",{"_index":3531,"title":{},"body":{"components/TsTableComponent.html":{}}}],["table/table.modul",{"_index":1088,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["tablecompon",{"_index":3557,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tag",{"_index":4082,"title":{},"body":{"index.html":{}}}],["take",{"_index":759,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["talli",{"_index":954,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["target",{"_index":2121,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{}}}],["target.classnam",{"_index":2123,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.focu",{"_index":2135,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.remov",{"_index":2141,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.setselectionrange(0",{"_index":2136,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.height",{"_index":2132,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.left",{"_index":2127,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.posit",{"_index":2125,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.top",{"_index":2129,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.width",{"_index":2130,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.textcont",{"_index":2133,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.value.length",{"_index":2137,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["targetel",{"_index":2124,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["task",{"_index":2941,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["tasti",{"_index":2784,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["tbd",{"_index":3982,"title":{},"body":{"contributing.html":{}}}],["team",{"_index":2705,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"contributing.html":{},"index.html":{}}}],["tel",{"_index":809,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["tell",{"_index":2340,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["templat",{"_index":347,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["templatecontext",{"_index":2891,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["templateref",{"_index":1388,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["templateurl",{"_index":304,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["term",{"_index":625,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["terminu",{"_index":5,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["terminus/ngx",{"_index":231,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsButtonModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"dependencies.html":{},"index.html":{}}}],["terminus/ui",{"_index":71,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChart2Component.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{}}}],["terminus/ui/helpers'contribut",{"_index":4054,"title":{},"body":{"index.html":{}}}],["terminus/ui/terminu",{"_index":4051,"title":{},"body":{"index.html":{}}}],["terminusuimodul",{"_index":1003,"title":{"modules/TerminusUIModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules.html":{},"overview.html":{}}}],["ternari",{"_index":1687,"title":{},"body":{"components/TsChart2Component.html":{}}}],["test",{"_index":3842,"title":{},"body":{"injectables/TsValidatorsService.html":{},"contributing.html":{}}}],["text",{"_index":341,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["text/csv",{"_index":1349,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"miscellaneous/typealiases.html":{}}}],["textarea",{"_index":1149,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCopyComponent.html":{}}}],["textcont",{"_index":2102,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["textmaskconfig",{"_index":847,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["textmaskinputel",{"_index":850,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["thank",{"_index":3971,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["that'",{"_index":3536,"title":{},"body":{"components/TsTableComponent.html":{},"contributing.html":{}}}],["that\\'",{"_index":2875,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["theme",{"_index":464,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/typealiases.html":{}}}],["theme(valu",{"_index":1439,"title":{},"body":{"components/TsCardComponent.html":{}}}],["theme.typ",{"_index":253,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["theme.types.t",{"_index":4155,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["theme=\"primari",{"_index":687,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["themselv",{"_index":2971,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["thing",{"_index":3031,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._acceptedtyp",{"_index":386,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._background",{"_index":2567,"title":{},"body":{"components/TsIconComponent.html":{}}}],["this._bord",{"_index":1438,"title":{},"body":{"components/TsCardComponent.html":{}}}],["this._cdkcolumndef",{"_index":3471,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._cdkcolumndef.nam",{"_index":3472,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._columncount",{"_index":1242,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._columnhead",{"_index":1252,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._columnvalid",{"_index":1259,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._currentpageindex",{"_index":2902,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this._data",{"_index":3657,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._data.next(data",{"_index":3655,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._data.valu",{"_index":3656,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._debouncedelay",{"_index":710,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this._direct",{"_index":3378,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this._disableclear",{"_index":3382,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this._formatmodelvaluefn",{"_index":3063,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._formatuilabelfn",{"_index":3056,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._formatuisublabelfn",{"_index":3060,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._formcontrol",{"_index":396,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._hidebutton",{"_index":406,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._id",{"_index":411,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this._initiald",{"_index":2361,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this._ischeck",{"_index":1915,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["this._isdis",{"_index":3164,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._isvisu",{"_index":3068,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._iszerobas",{"_index":2895,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this._maxd",{"_index":2356,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this._maximumkilobytesperfil",{"_index":415,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._maxrow",{"_index":1237,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._mind",{"_index":2359,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this._minimumcharact",{"_index":724,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this._multipl",{"_index":435,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._nam",{"_index":3071,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._opt",{"_index":3074,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._par",{"_index":1561,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["this._progress",{"_index":438,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._ratioconstraint",{"_index":429,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._renderchangessubscript",{"_index":3660,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._renderchangessubscription.unsubscrib",{"_index":3661,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._renderdata",{"_index":3665,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._renderdata.next(data",{"_index":3664,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._rowcount",{"_index":1247,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._seedfil",{"_index":444,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._selectionscontrol",{"_index":734,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this._sizeconstraint",{"_index":461,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._smal",{"_index":3077,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._sort.act",{"_index":3478,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.deregister(thi",{"_index":3475,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.direct",{"_index":3479,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.dis",{"_index":3480,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.register(thi",{"_index":3473,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.sort(thi",{"_index":3476,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._statechanges.complet",{"_index":3386,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this._statechanges.next",{"_index":3385,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this._them",{"_index":1440,"title":{},"body":{"components/TsCardComponent.html":{}}}],["this._totalrecord",{"_index":2910,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this._uid",{"_index":412,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this._updatechangesubscript",{"_index":3659,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._visu",{"_index":1674,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.acceptedtyp",{"_index":446,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.acceptedtypes.indexof('image/jpeg",{"_index":353,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.acceptedtypes.indexof('image/jpg",{"_index":354,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.acceptedtypes.indexof('image/png",{"_index":352,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.acceptedtypes.join",{"_index":584,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.acceptedtypes.slice().map((v",{"_index":348,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.acceptedtypes.tostr",{"_index":576,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.act",{"_index":3396,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.addcolumnstorows(this.row",{"_index":1287,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.addheaders(this.columncount",{"_index":1254,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.addrows(neededrow",{"_index":1290,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.addrows(this.rowcount",{"_index":1264,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.allerror",{"_index":1295,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.amchart",{"_index":1675,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amcharts.charts.chorddiagram",{"_index":1695,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amcharts.charts.piechart",{"_index":1690,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amcharts.charts.radarchart",{"_index":1692,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amcharts.charts.sankeydiagram",{"_index":1694,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amcharts.charts.treemap",{"_index":1693,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amcharts.charts.xychart",{"_index":1689,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amcharts.core.create(this.chartdiv.nativeel",{"_index":1688,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amcharts.maps.mapchart",{"_index":1691,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.amchartsservice.amchart",{"_index":1676,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.appref",{"_index":2652,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.aspectratiopad",{"_index":1435,"title":{},"body":{"components/TsCardComponent.html":{}}}],["this.auto",{"_index":619,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.autosubmit",{"_index":3264,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.availablespac",{"_index":979,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.blobgenerated.emit(blob",{"_index":1271,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.bodyportalhost",{"_index":2650,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.bodyportalhost.attach(this.loadingoverlayport",{"_index":2647,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.bodyportalhost.detach",{"_index":2648,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.bodyportalhost.dispos",{"_index":2659,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.bord",{"_index":1441,"title":{},"body":{"components/TsCardComponent.html":{}}}],["this.breakwidths.length",{"_index":952,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.breakwidths.push(totalspac",{"_index":958,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.breakwidths[this.visibleitemslength",{"_index":977,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.cancelled.emit(tru",{"_index":2037,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.change.emit(this.daterang",{"_index":2286,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.changed.emit(this.currentqueri",{"_index":3261,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.changedetectorref.detectchang",{"_index":500,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["this.changedetectorref.markforcheck",{"_index":560,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.changepage(this.currentpageindex",{"_index":2940,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.chart",{"_index":1683,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.chart.dispos",{"_index":1684,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.chartinitialized.emit(chart",{"_index":1697,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.checkbox.check",{"_index":1917,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["this.checkpar",{"_index":1562,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["this.cleared.emit(tru",{"_index":536,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.clearheadercel",{"_index":1253,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.clearvalidationmessag",{"_index":535,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.collecterror",{"_index":1296,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.collectfilesfromevent(ev",{"_index":482,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.columncount",{"_index":1265,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.columnhead",{"_index":1255,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.comparatorfn",{"_index":729,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.componentfactoryresolv",{"_index":2651,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.cont",{"_index":2107,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.content.nativeel",{"_index":2108,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.content.nativeelement.innertext",{"_index":2109,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.context",{"_index":1818,"title":{},"body":{"classes/TsChartEvent.html":{}}}],["this.control",{"_index":3794,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.control.error",{"_index":3795,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.control.errors[propertynam",{"_index":3801,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.control.touch",{"_index":3800,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.createcurrentpagelabel(this.currentpageindex",{"_index":2938,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.createfileinput",{"_index":490,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.createoverlay",{"_index":2016,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.createpagesarray(this.totalrecord",{"_index":2935,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.currentpagechanged(foundpag",{"_index":2951,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.currentpageindex",{"_index":2924,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.currentpagelabel",{"_index":2937,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.currentqueri",{"_index":3269,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.currentquery.length",{"_index":3266,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.datasource.data",{"_index":3610,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.dateformgroup",{"_index":2240,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.dateformgroup.get('endd",{"_index":2241,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.dateformgroup.get('startd",{"_index":2251,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.debouncedemit(thi",{"_index":3267,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.default_high_record_messag",{"_index":2893,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.default_max_prefered_record",{"_index":2906,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.default_per_pag",{"_index":2890,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.default_records_per_page_opt",{"_index":2916,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.defaultcolumncount",{"_index":1243,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.defaultmaxrow",{"_index":1238,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.defaultopen",{"_index":2809,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.defaultrowcount",{"_index":1248,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.deleterow(pastedrowid",{"_index":1289,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.destroychart",{"_index":1681,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.determineimagedimens",{"_index":2431,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.determineposition(posit",{"_index":2658,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.dimens",{"_index":2439,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.dimensionconstraint",{"_index":366,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.dimensionconstraints.slic",{"_index":367,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.direct",{"_index":3397,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.dis",{"_index":3481,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this.disableclear",{"_index":3404,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.dismissoverlay",{"_index":2018,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.document.body.appendchild(target",{"_index":2134,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.document.createelement('textarea",{"_index":2122,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.document.createrang",{"_index":2116,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.document.execcommand('copi",{"_index":2140,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.documentservice.docu",{"_index":2091,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.documentservice.document.createelement('input",{"_index":538,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.draginprogress",{"_index":343,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.dropprotectionservice.add",{"_index":502,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.dropprotectionservice.remov",{"_index":524,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.elementref",{"_index":2021,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.elementref.nativeel",{"_index":861,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsAutofocusDirective.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["this.elementref.nativeelement.blur",{"_index":529,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.endd",{"_index":2237,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.enddatecontrol",{"_index":2294,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.enddatecontrol.setvalue(datepickerevent.valu",{"_index":2295,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endinitiald",{"_index":2262,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmind",{"_index":2287,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(d",{"_index":2301,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(datepickerevent.valu",{"_index":2281,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(startvalu",{"_index":2275,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(this.endmind",{"_index":2288,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(undefin",{"_index":2291,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endselected.emit(datepickerevent.valu",{"_index":2296,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.enter.emit(tru",{"_index":476,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.exampledatabas",{"_index":3591,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.exampledatabase.getrepoissu",{"_index":3597,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.exit.emit(tru",{"_index":479,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.fallbackenddatecontrol",{"_index":2242,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.fallbackstartdatecontrol",{"_index":2252,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.fil",{"_index":188,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.file.nam",{"_index":2430,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.file.typ",{"_index":2426,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.filereader.readasdataurl(this.fil",{"_index":2449,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.filereader.result",{"_index":2437,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.files.length",{"_index":196,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.firstpageindex",{"_index":2925,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.formatmodelvaluefn",{"_index":3089,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.formbuilder.array",{"_index":1230,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.formbuilder.array([tru",{"_index":2794,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.formbuilder.group",{"_index":1229,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["this.formbuilder.group(this.form_group",{"_index":2711,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["this.formcontrol",{"_index":503,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.formcontrol.registeronchange(fn",{"_index":556,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.formcontrol.setvalue(f.fil",{"_index":453,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.formcontrol.valuechang",{"_index":3081,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.formcontrol.valuechanges.pip",{"_index":504,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.formtwo.get('endd",{"_index":2336,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.formtwo.get('startd",{"_index":2343,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.generateblob(v",{"_index":1270,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.generatebreakwidth",{"_index":936,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.getnextsortdirection(sort",{"_index":3400,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.hasprotect",{"_index":2392,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.hasselect",{"_index":2120,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.headercel",{"_index":1288,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.headercells.controls[index",{"_index":1301,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.headercells.controls[index].valu",{"_index":1302,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.height",{"_index":2460,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.hiddenitems.getvalu",{"_index":986,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.hiddenitems.next(splitarrays.tru",{"_index":973,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.hiddenitems.next(updatedhiddenarray",{"_index":989,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.host.clickevent.emit(this.host.originalclickev",{"_index":2047,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.host.interceptclick",{"_index":2017,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.host.showprogress",{"_index":2043,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.http.get(`${github_api_endpoint}/search/users?q=${term",{"_index":627,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.http.get(`${requesturl}${requestparam",{"_index":3625,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.i",{"_index":1767,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["this.id",{"_index":339,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this.init(this.visu",{"_index":1679,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.initi",{"_index":2928,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.initiald",{"_index":2366,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.initialvalu",{"_index":3259,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.injector",{"_index":2653,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.innervalu",{"_index":3116,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["this.inprogress",{"_index":626,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.input_debounce_tim",{"_index":3237,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.inputel",{"_index":860,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["this.isdis",{"_index":3086,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.isinprogress",{"_index":645,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.issame(r",{"_index":2461,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.iszerobas",{"_index":2922,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.loadingoverlayport",{"_index":2654,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.loginform",{"_index":2726,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["this.major",{"_index":3883,"title":{},"body":{"classes/Version.html":{}}}],["this.maximumkilobytesperfil",{"_index":447,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.maximumkilobytesperfile.tolocalestring()}kb",{"_index":359,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.maximumvalidationmessag",{"_index":1331,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.maxrow",{"_index":1274,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.mimetyp",{"_index":2425,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.minimumcharact",{"_index":763,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.minor",{"_index":3885,"title":{},"body":{"classes/Version.html":{}}}],["this.modalinst",{"_index":2040,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.modalinstance.confirm.subscribe((shouldproce",{"_index":2045,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.multipl",{"_index":572,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.mydatasourc",{"_index":3538,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.mydatasource.data",{"_index":3539,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.myform.get('daterange.startd",{"_index":2227,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.myprogress",{"_index":170,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.nam",{"_index":2429,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.onchang",{"_index":856,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["this.onchangecallback",{"_index":3119,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["this.onchangecallback(v",{"_index":3117,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["this.ontouch",{"_index":858,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["this.ontouchedcallback",{"_index":3118,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["this.onvirtualinputelementchange.bind(thi",{"_index":512,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.optionselected.emit(event.option.valu",{"_index":783,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.originalev",{"_index":1817,"title":{},"body":{"classes/TsChartEvent.html":{}}}],["this.overlay.create(overlayconfig",{"_index":2031,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlay.position().connectedto",{"_index":2020,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlayref",{"_index":2030,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlayref._keydownevents.pip",{"_index":2034,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlayref.attach(userprofileportal).inst",{"_index":2041,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlayref.dispos",{"_index":2048,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.pagesarray",{"_index":2934,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.pagesarray.length",{"_index":2927,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.pageselect.emit(pag",{"_index":2944,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.paginator.currentpageindex",{"_index":3593,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.paginator.pageselect",{"_index":3595,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.paginator.recordsperpag",{"_index":3600,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.paginator.recordsperpagechang",{"_index":3596,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.parseratiostringtoobject(valu",{"_index":430,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.parseratiotostring(this._ratioconstraint",{"_index":432,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.patch",{"_index":3887,"title":{},"body":{"classes/Version.html":{}}}],["this.percentag",{"_index":1762,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["this.percentage|point|series|total|x|i",{"_index":1746,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["this.point",{"_index":1763,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["this.posit",{"_index":2657,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.prev",{"_index":2394,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.preventandstopeventpropagation(ev",{"_index":475,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.pristineitem",{"_index":934,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.promptforfil",{"_index":485,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.query.next(queri",{"_index":767,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.querysubject.pip",{"_index":760,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.ratioconstraint",{"_index":360,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.ratioconstraints.join",{"_index":361,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.recordcounttoohighmessag",{"_index":2930,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.recordsform.get('head",{"_index":1234,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsform.get('record",{"_index":1235,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsform.setcontrol('head",{"_index":1341,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsform.setcontrol('record",{"_index":1339,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsform.valuechanges.pip",{"_index":1266,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsperpag",{"_index":2936,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.recordsperpagechange.emit(select",{"_index":2957,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.registeronchangefn(this.updateinnervalu",{"_index":519,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.resetform",{"_index":2724,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["this.resetsearch",{"_index":782,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.resultslength",{"_index":3603,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.retrievevalue(opt",{"_index":3088,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.rows.insert(indextoinjectat",{"_index":1278,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.rows.length",{"_index":1273,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.rows.push(createdrow",{"_index":1280,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.scrollbar",{"_index":3168,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.geometry('scrol",{"_index":3169,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.posit",{"_index":3170,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrollable(direct",{"_index":3173,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrollto(x",{"_index":3175,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrolltobottom(offset",{"_index":3185,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrolltoelement(querystr",{"_index":3182,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrolltoleft(offset",{"_index":3187,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrolltoright(offset",{"_index":3189,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrolltotop(offset",{"_index":3191,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.upd",{"_index":3192,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbars.upd",{"_index":3136,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollspe",{"_index":3181,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.searchform.patchvalu",{"_index":3260,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.searchform.valid",{"_index":3265,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.searchform.value.queri",{"_index":3257,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.searchform.value.query.trim",{"_index":3258,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.seeddaterange(this.startinitiald",{"_index":2261,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.seedwithformvalues(this.dateformgroup",{"_index":2263,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.selected.emit(f",{"_index":454,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.selecteddate.emit(this.daterang",{"_index":2285,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.selectedmultiple.emit(filesarray",{"_index":550,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.selectedopt",{"_index":741,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectedoptions.indexof(opt",{"_index":788,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectedoptions.push(select",{"_index":781,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selection.emit(this.selectedopt",{"_index":784,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectionscontrol",{"_index":737,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectionscontrol.setvalu",{"_index":743,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectionscontrol.setvalue(this.selectedopt",{"_index":744,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectionscontrol.valuechanges.pip",{"_index":771,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.seri",{"_index":1764,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["this.setduplicateerror(this.selectionscontrol",{"_index":780,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.setupinitialarrays(this.pristineitem",{"_index":935,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.setupnewfile(f",{"_index":455,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.setvalidationmessages(fil",{"_index":559,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.shouldfocu",{"_index":1154,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["this.showform",{"_index":2725,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["this.siz",{"_index":2427,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.sort.act",{"_index":3598,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.sort.direct",{"_index":3599,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.sort.sortchange.subscrib",{"_index":3560,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.sortables.delete(sortable.id",{"_index":3394,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.sortables.has(sortable.id",{"_index":3389,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.sortables.set(sortable.id",{"_index":3391,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.sortchange.next({act",{"_index":3401,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.start",{"_index":3399,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.startd",{"_index":2236,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startdatecontrol",{"_index":2282,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startdatecontrol.setvalue(datepickerevent.valu",{"_index":2283,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startinitiald",{"_index":2274,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxd",{"_index":2297,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(d",{"_index":2303,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(datepickerevent.valu",{"_index":2293,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(endvalu",{"_index":2276,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(this.startmaxd",{"_index":2298,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(undefin",{"_index":2299,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startselected.emit(datepickerevent.valu",{"_index":2284,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.submitted.emit({queri",{"_index":3268,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.supportedimagedimens",{"_index":357,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.supportedimagedimensions.length",{"_index":355,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.templatecontext.$implicit",{"_index":2929,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.textmaskconfig",{"_index":864,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["this.textmaskinputel",{"_index":865,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["this.toomanyrowsmessag",{"_index":1276,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.tot",{"_index":1765,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["this.totalrecord",{"_index":2939,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.trigg",{"_index":704,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.trigger.openmenu",{"_index":2810,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.trigger_icon_default",{"_index":2807,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.trigger_icon_util",{"_index":2808,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.triggericon",{"_index":2806,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.triggertyp",{"_index":2804,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.typeconstraint",{"_index":2432,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.typeconstraint.indexof(this.file.typ",{"_index":2433,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.uiformatfn",{"_index":716,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.updateallrowid",{"_index":1294,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.updatelist",{"_index":937,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.updatescrollcont",{"_index":3135,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.updatevirtualfileinputattrs(this.virtualfileinput",{"_index":513,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.us",{"_index":618,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.user.fullnam",{"_index":925,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.user.fullname.length",{"_index":924,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.validateimagedimensions(this.imagedimensionconstraint",{"_index":2443,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.validateimageratio(this.ratioconstraint",{"_index":2445,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.validateimmedi",{"_index":3798,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.validateonchang",{"_index":3799,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.validationmessageservice.getvalidatorerrormessage(propertynam",{"_index":3802,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.validations.filetyp",{"_index":2434,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.validations.imagedimens",{"_index":2442,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.validations.imageratio",{"_index":2444,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.validatorsservice.email",{"_index":2707,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["this.validatorsservice.greaterthan(10",{"_index":3840,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["this.validatorsservice.maxdate(event.valu",{"_index":2344,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.validatorsservice.mindate(event.valu",{"_index":2339,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.validatorsservice.url",{"_index":1201,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.valu",{"_index":499,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["this.verifyisdateobject(valu",{"_index":2357,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["this.virtualfileinput",{"_index":489,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.virtualfileinput.addeventlistener('chang",{"_index":511,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.virtualfileinput.click",{"_index":533,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.virtualfileinput.removeattribute('multipl",{"_index":574,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.virtualfileinput.removeeventlistener('chang",{"_index":523,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.virtualfileinput.setattribute('accept",{"_index":575,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.virtualfileinput.setattribute('multipl",{"_index":573,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.virtualfileinput.valu",{"_index":562,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.visibleitems.getvalu",{"_index":982,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visibleitems.getvalue().length",{"_index":928,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visibleitems.next(splitarrays.fals",{"_index":972,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visibleitems.next(updatedvisiblearray",{"_index":998,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visibleitemslist.nativeelement.offsetwidth",{"_index":916,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visiblelinkelement.foreach((item",{"_index":953,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visu",{"_index":1699,"title":{},"body":{"components/TsChart2Component.html":{}}}],["this.width",{"_index":2459,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.window.getselect",{"_index":2111,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.window.prompt('copi",{"_index":2144,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.windowservice.nativewindow",{"_index":2100,"title":{},"body":{"components/TsCopyComponent.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["this.windowservice.nativewindow.addeventlistener('dragov",{"_index":2393,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.windowservice.nativewindow.addeventlistener('drop",{"_index":2395,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.windowservice.nativewindow.removeeventlistener('dragov",{"_index":2396,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.windowservice.nativewindow.removeeventlistener('drop",{"_index":2397,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.writevalue(v",{"_index":3082,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.x",{"_index":1766,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["this.zone.runoutsideangular",{"_index":1682,"title":{},"body":{"components/TsChart2Component.html":{}}}],["though",{"_index":1804,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["thought",{"_index":4020,"title":{},"body":{"index.html":{}}}],["three",{"_index":2190,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["through",{"_index":640,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsChartPointDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["throughout",{"_index":3978,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":425,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"directives/TsCardTitleDirective.html":{},"pipes/TsDatePipe.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["thrown",{"_index":3933,"title":{},"body":{"contributing.html":{}}}],["thursday",{"_index":2168,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["tick",{"_index":1717,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["tie",{"_index":2191,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["time",{"_index":1191,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPipesModule.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"index.html":{}}}],["timeout",{"_index":2727,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["timestamp",{"_index":2172,"title":{},"body":{"pipes/TsDatePipe.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["titl",{"_index":1299,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsMenuComponent.html":{},"modules/TsPipesModule.html":{},"components/TsTableComponent.html":{},"index.html":{}}}],["title.direct",{"_index":1543,"title":{},"body":{"modules/TsCardModule.html":{}}}],["title.directive.t",{"_index":1545,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["title.directive.ts:21",{"_index":1558,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["title.directive.ts:27",{"_index":1550,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["title.directive.ts:42",{"_index":1557,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["title.directive.ts:50",{"_index":1555,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["todo",{"_index":400,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{}}}],["toggl",{"_index":643,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"index.html":{}}}],["toggle'},{'nam",{"_index":1501,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["toggle.compon",{"_index":3709,"title":{},"body":{"modules/TsToggleModule.html":{}}}],["toggle.component.html",{"_index":3337,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["toggle.component.scss",{"_index":3338,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["toggle/toggle.modul",{"_index":1089,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["token",{"_index":29,"title":{},"body":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{}}}],["tool",{"_index":232,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsButtonModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{},"dependencies.html":{},"index.html":{}}}],["tools/coercion",{"_index":236,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["tools/keycod",{"_index":238,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsConfirmationDirective.html":{}}}],["tooltip",{"_index":1744,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTooltipComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["tooltip'},{'nam",{"_index":1503,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tooltip.compon",{"_index":3729,"title":{},"body":{"modules/TsTooltipModule.html":{}}}],["tooltip.component.html",{"_index":3713,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["tooltip.component.scss",{"_index":3712,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["tooltip/tooltip.modul",{"_index":1090,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCopyModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsPaginatorModule.html":{}}}],["tooltipposit",{"_index":3715,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["tooltipvalu",{"_index":3716,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["toomanyrowsmessag",{"_index":1225,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["top",{"_index":1423,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["tort",{"_index":4123,"title":{},"body":{"license.html":{}}}],["total",{"_index":955,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["total_count",{"_index":3613,"title":{},"body":{"components/TsTableComponent.html":{}}}],["totalrecord",{"_index":2912,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["totalrecords(record",{"_index":2909,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["totalspac",{"_index":951,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["touch",{"_index":1946,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["trace",{"_index":3935,"title":{},"body":{"contributing.html":{}}}],["track",{"_index":1784,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCopyComponent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["trackbi",{"_index":638,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["transform",{"_index":2155,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["transform(valu",{"_index":2156,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["tree",{"_index":1351,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["treemap",{"_index":1667,"title":{},"body":{"components/TsChart2Component.html":{},"miscellaneous/typealiases.html":{}}}],["tri",{"_index":2139,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["triag",{"_index":3944,"title":{},"body":{"contributing.html":{}}}],["trigger",{"_index":706,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["trigger_icon_default",{"_index":2748,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["trigger_icon_util",{"_index":2749,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["triggerformreset",{"_index":2685,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["triggericon",{"_index":2750,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["triggertyp",{"_index":2755,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["trim",{"_index":128,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["true",{"_index":173,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["true;custom",{"_index":646,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["truncat",{"_index":1329,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["truthi",{"_index":1135,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ts",{"_index":303,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["ts_accepted_mime_typ",{"_index":110,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["ts_accepted_mime_types.slic",{"_index":387,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["ts_amcharts_token",{"_index":1108,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{}}}],["ts_custom_icon",{"_index":2540,"title":{},"body":{"components/TsIconComponent.html":{},"miscellaneous/typealiases.html":{}}}],["ts_custom_icons.indexof(valu",{"_index":2570,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ts_sort_header_intl_provid",{"_index":3511,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{}}}],["ts_sort_header_intl_provider_factori",{"_index":3513,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["ts_sort_header_intl_provider_factory(parentintl",{"_index":3509,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["ts_space",{"_index":241,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsConfirmationModalComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{}}}],["ts_spacing.large[0",{"_index":2056,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["ts_spacing.small[0",{"_index":330,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["ts_spacing[typ",{"_index":3871,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["ts_spacing[type].length",{"_index":3872,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["tsamchartsservic",{"_index":1098,"title":{"injectables/TsAmChartsService.html":{}},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"overview.html":{}}}],["tsamchartstoken",{"_index":1102,"title":{"interfaces/TsAmChartsToken.html":{}},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChart2Component.html":{}}}],["tsaspectratiotyp",{"_index":1414,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsautocomplet",{"_index":694,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["tsautocompletecomparatorfn",{"_index":635,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"miscellaneous/typealiases.html":{}}}],["tsautocompletecompon",{"_index":617,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsautocompleteformatterfn",{"_index":648,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"miscellaneous/typealiases.html":{}}}],["tsautocompletemodul",{"_index":1012,"title":{"modules/TsAutocompleteModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules.html":{},"overview.html":{}}}],["tsautocompleteselectedev",{"_index":676,"title":{"classes/TsAutocompleteSelectedEvent.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["tsautofocu",{"_index":1137,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["tsautofocus(valu",{"_index":1153,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["tsautofocus]'},{'nam",{"_index":1505,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsautofocusdirect",{"_index":1131,"title":{"directives/TsAutofocusDirective.html":{}},"body":{"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsautofocusmodul",{"_index":1013,"title":{"modules/TsAutofocusModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsInputModule.html":{},"modules.html":{},"overview.html":{}}}],["tsbutton",{"_index":2042,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["tsbuttonactiontyp",{"_index":2498,"title":{},"body":{"components/TsIconButtonComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"miscellaneous/typealiases.html":{}}}],["tsbuttoncompon",{"_index":1167,"title":{},"body":{"modules/TsButtonModule.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsbuttonformattyp",{"_index":2757,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsbuttonfunctiontyp",{"_index":2500,"title":{},"body":{"components/TsIconButtonComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"miscellaneous/typealiases.html":{}}}],["tsbuttonmodul",{"_index":1014,"title":{"modules/TsButtonModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMenuModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["tscard",{"_index":1357,"title":{},"body":{"components/TsCardComponent.html":{}}}],["tscardborderopt",{"_index":1373,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tscardcompon",{"_index":1350,"title":{"components/TsCardComponent.html":{}},"body":{"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tscardmodul",{"_index":1016,"title":{"modules/TsCardModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCardModule.html":{},"modules.html":{},"overview.html":{}}}],["tscardtitl",{"_index":1420,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{}}}],["tscardtitle]'},{'nam",{"_index":1507,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tscardtitledirect",{"_index":1506,"title":{"directives/TsCardTitleDirective.html":{}},"body":{"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tscelldef",{"_index":1569,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["tscelldef]'},{'nam",{"_index":1509,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tscelldefdirect",{"_index":1508,"title":{"directives/TsCellDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tscelldirect",{"_index":1510,"title":{"directives/TsCellDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tschart2",{"_index":1608,"title":{},"body":{"components/TsChart2Component.html":{}}}],["tschart2compon",{"_index":1450,"title":{"components/TsChart2Component.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"modules/TsChart2Module.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tschart2modul",{"_index":1700,"title":{"modules/TsChart2Module.html":{}},"body":{"modules/TsChart2Module.html":{},"modules.html":{},"overview.html":{}}}],["tschart2visualizationopt",{"_index":1626,"title":{},"body":{"components/TsChart2Component.html":{},"miscellaneous/typealiases.html":{}}}],["tschartaxi",{"_index":1710,"title":{"interfaces/TsChartAxis.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["tschartaxisplotband",{"_index":1718,"title":{"interfaces/TsChartAxisPlotBand.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["tschartaxistyp",{"_index":1725,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["tschartcompon",{"_index":1452,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartEventOptions.html":{},"modules/TsChartModule.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tschartdata",{"_index":1791,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["tschartdataitem",{"_index":1782,"title":{"interfaces/TsChartDataItem.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["tschartev",{"_index":1808,"title":{"classes/TsChartEvent.html":{}},"body":{"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{}}}],["tschartevent(ev",{"_index":1851,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["tscharteventopt",{"_index":1819,"title":{"interfaces/TsChartEventOptions.html":{}},"body":{"interfaces/TsChartEventOptions.html":{}}}],["tschartlabelformatterfn",{"_index":1747,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["tschartmaptooltip",{"_index":1778,"title":{"interfaces/TsChartMapTooltip.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["tschartmaptyp",{"_index":1737,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["tschartmodul",{"_index":1017,"title":{"modules/TsChartModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsChartModule.html":{},"modules.html":{},"overview.html":{}}}],["tschartobject",{"_index":1727,"title":{"interfaces/TsChartObject.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["tschartopt",{"_index":1792,"title":{"interfaces/TsChartOptions.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["tschartpointdirect",{"_index":1512,"title":{"directives/TsChartPointDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartEventOptions.html":{},"modules/TsChartModule.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tschartseriesdirect",{"_index":1514,"title":{"directives/TsChartSeriesDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartEventOptions.html":{},"modules/TsChartModule.html":{},"directives/TsChartSeriesDirective.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tschartstack",{"_index":1753,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["tscharttitl",{"_index":1759,"title":{"interfaces/TsChartTitle.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["tscharttooltip",{"_index":1761,"title":{"interfaces/TsChartTooltip.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["tschartvisualizationopt",{"_index":1748,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["tschartzon",{"_index":1779,"title":{"interfaces/TsChartZone.html":{}},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["tscheckbox",{"_index":1911,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["tscheckboxchang",{"_index":1894,"title":{"classes/TsCheckboxChange.html":{}},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["tscheckboxcompon",{"_index":1454,"title":{"components/TsCheckboxComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tscheckboxmodul",{"_index":1018,"title":{"modules/TsCheckboxModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsLoginFormModule.html":{},"modules.html":{},"overview.html":{}}}],["tscolumndef",{"_index":1593,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["tscolumndef]'},{'nam",{"_index":1517,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tscolumndefdirect",{"_index":1516,"title":{"directives/TsColumnDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsconfig.skiplibcheck",{"_index":1607,"title":{},"body":{"components/TsChart2Component.html":{}}}],["tsconfirm",{"_index":1979,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{}}}],["tsconfirmation]'},{'nam",{"_index":1519,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsconfirmationdirect",{"_index":1518,"title":{"directives/TsConfirmationDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsconfirmationmodalcompon",{"_index":1456,"title":{"components/TsConfirmationModalComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsconfirmationmodul",{"_index":1019,"title":{"modules/TsConfirmationModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsConfirmationModule.html":{},"modules.html":{},"overview.html":{}}}],["tscopi",{"_index":2068,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["tscopycompon",{"_index":1459,"title":{"components/TsCopyComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tscopymodul",{"_index":1020,"title":{"modules/TsCopyModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCopyModule.html":{},"modules.html":{},"overview.html":{}}}],["tscsventri",{"_index":1218,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["tscsventrycompon",{"_index":1177,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tscsventrymodul",{"_index":1015,"title":{"modules/TsCSVEntryModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules.html":{},"overview.html":{}}}],["tscsventryrecord",{"_index":1183,"title":{"interfaces/TsCSVEntryRecord.html":{}},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["tscsvformcont",{"_index":1211,"title":{"interfaces/TsCSVFormContents.html":{}},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["tsdate",{"_index":2154,"title":{},"body":{"pipes/TsDatePipe.html":{},"index.html":{}}}],["tsdatepick",{"_index":2349,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["tsdatepickercompon",{"_index":1463,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsdatepickerinputev",{"_index":2310,"title":{"classes/TsDatepickerInputEvent.html":{}},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["tsdatepickermodul",{"_index":1022,"title":{"modules/TsDatepickerModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules.html":{},"overview.html":{}}}],["tsdatepip",{"_index":2152,"title":{"pipes/TsDatePipe.html":{}},"body":{"pipes/TsDatePipe.html":{},"modules/TsPipesModule.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsdaterang",{"_index":2181,"title":{"interfaces/TsDateRange.html":{}},"body":{"interfaces/TsDateRange.html":{}}}],["tsdaterangecompon",{"_index":1461,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsdaterangemodul",{"_index":1021,"title":{"modules/TsDateRangeModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsDateRangeModule.html":{},"modules.html":{},"overview.html":{}}}],["tsdatetyp",{"_index":2157,"title":{},"body":{"pipes/TsDatePipe.html":{},"miscellaneous/typealiases.html":{}}}],["tsdocumentservic",{"_index":228,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCopyComponent.html":{},"modules/TsFileUploadModule.html":{}}}],["tsdropprotectionservic",{"_index":254,"title":{"injectables/TsDropProtectionService.html":{}},"body":{"interfaces/ImageRatio.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["tsfileacceptedmimetyp",{"_index":97,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{}}}],["tsfileimagedimensionconstraint",{"_index":141,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{}}}],["tsfileimagedimensioncontraint",{"_index":121,"title":{"interfaces/TsFileImageDimensionContraint.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"miscellaneous/typealiases.html":{}}}],["tsfileupload",{"_index":316,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["tsfileuploadcompon",{"_index":284,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"modules/TsFileUploadModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsfileuploadmodul",{"_index":1023,"title":{"modules/TsFileUploadModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsFileUploadModule.html":{},"modules.html":{},"overview.html":{}}}],["tsfilevalid",{"_index":91,"title":{"interfaces/TsFileValidations.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["tsheadercelldef",{"_index":1576,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["tsheadercelldef]'},{'nam",{"_index":1521,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsheadercelldefdirect",{"_index":1520,"title":{"directives/TsHeaderCellDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsheadercelldirect",{"_index":1522,"title":{"directives/TsHeaderCellDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsheaderrow",{"_index":2470,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsheaderrowcompon",{"_index":1466,"title":{"components/TsHeaderRowComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsheaderrowdef",{"_index":2478,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsheaderrowdef]'},{'nam",{"_index":1524,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsheaderrowdefdirect",{"_index":1523,"title":{"directives/TsHeaderRowDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsicon",{"_index":2523,"title":{},"body":{"components/TsIconComponent.html":{}}}],["tsiconbutton",{"_index":2490,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["tsiconbuttoncompon",{"_index":1468,"title":{"components/TsIconButtonComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsiconbuttonmodul",{"_index":1024,"title":{"modules/TsIconButtonModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["tsiconcompon",{"_index":1469,"title":{"components/TsIconComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsiconmodul",{"_index":1025,"title":{"modules/TsIconModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsCopyModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsRadioGroupModule.html":{},"modules.html":{},"overview.html":{}}}],["tsimagedimens",{"_index":2413,"title":{"classes/TsImageDimensions.html":{}},"body":{"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{}}}],["tsimagedimensions(img.naturalwidth",{"_index":2440,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["tsinputautocompletetyp",{"_index":4144,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tsinputcompon",{"_index":1471,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsinputmodul",{"_index":1026,"title":{"modules/TsInputModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsInputModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["tsinputtyp",{"_index":4146,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tslink",{"_index":2592,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["tslinkcompon",{"_index":1473,"title":{"components/TsLinkComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tslinkmodul",{"_index":1027,"title":{"modules/TsLinkModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoginFormModule.html":{},"modules.html":{},"overview.html":{}}}],["tslint",{"_index":286,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["tslint:dis",{"_index":1595,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tslint:disable:no",{"_index":278,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["tslint:en",{"_index":1597,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tsloadingoverlay",{"_index":2617,"title":{},"body":{"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["tsloadingoverlay(valu",{"_index":2645,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["tsloadingoverlay]'},{'nam",{"_index":1526,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsloadingoverlaycompon",{"_index":1475,"title":{"components/TsLoadingOverlayComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsloadingoverlaydirect",{"_index":1525,"title":{"directives/TsLoadingOverlayDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsloadingoverlaymodul",{"_index":1028,"title":{"modules/TsLoadingOverlayModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules.html":{},"overview.html":{}}}],["tsloginform",{"_index":2671,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["tsloginformcompon",{"_index":1477,"title":{"components/TsLoginFormComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsloginformmodul",{"_index":1029,"title":{"modules/TsLoginFormModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{},"modules.html":{},"overview.html":{}}}],["tsloginformrespons",{"_index":2719,"title":{"interfaces/TsLoginFormResponse.html":{}},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["tsmask",{"_index":841,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["tsmask(valu",{"_index":852,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["tsmask]'},{'nam",{"_index":1527,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsmaskdirect",{"_index":837,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"modules/TsMaskModule.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsmaskmodul",{"_index":1030,"title":{"modules/TsMaskModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsMaskModule.html":{},"modules.html":{},"overview.html":{}}}],["tsmenu",{"_index":2744,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["tsmenucompon",{"_index":1479,"title":{"components/TsMenuComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsmenumodul",{"_index":1031,"title":{"modules/TsMenuModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsMenuModule.html":{},"modules/TsPaginatorModule.html":{},"modules.html":{},"overview.html":{}}}],["tsmenupositiontypesi",{"_index":2763,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsmenupositiontypesx",{"_index":2761,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsmenutriggertyp",{"_index":2766,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavig",{"_index":908,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["tsnavigationactionitem",{"_index":897,"title":{"interfaces/TsNavigationActionItem.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationcompon",{"_index":878,"title":{"components/TsNavigationComponent.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationitem",{"_index":899,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationlinkitem",{"_index":891,"title":{"interfaces/TsNavigationLinkItem.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationmodul",{"_index":1032,"title":{"modules/TsNavigationModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsNavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["tsnavigationpayload",{"_index":901,"title":{"interfaces/TsNavigationPayload.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["tspagin",{"_index":2870,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["tspaginatorcompon",{"_index":1482,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tspaginatormenuitem",{"_index":2854,"title":{"interfaces/TsPaginatorMenuItem.html":{}},"body":{"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["tspaginatormodul",{"_index":1033,"title":{"modules/TsPaginatorModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tspipesmodul",{"_index":1078,"title":{"modules/TsPipesModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsPipesModule.html":{},"modules.html":{},"overview.html":{}}}],["tsradiochang",{"_index":3003,"title":{"classes/TsRadioChange.html":{}},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["tsradiocompon",{"_index":3034,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["tsradioformatfn",{"_index":3035,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["tsradiogroup",{"_index":3039,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["tsradiogroupcompon",{"_index":1484,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsradiogroupmodul",{"_index":1034,"title":{"modules/TsRadioGroupModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsRadioGroupModule.html":{},"modules.html":{},"overview.html":{}}}],["tsradioopt",{"_index":3028,"title":{"interfaces/TsRadioOption.html":{}},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["tsreactiveformbasecompon",{"_index":257,"title":{"components/TsReactiveFormBaseComponent.html":{}},"body":{"interfaces/ImageRatio.html":{},"modules/TerminusUIModule.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsreactiveformbasecomponent:26",{"_index":1956,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:31",{"_index":1959,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:36",{"_index":1962,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:42",{"_index":1943,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:61",{"_index":1945,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:69",{"_index":1947,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:77",{"_index":1948,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:85",{"_index":1950,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsroundnumb",{"_index":3124,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{},"index.html":{}}}],["tsroundnumberpip",{"_index":2988,"title":{"pipes/TsRoundNumberPipe.html":{}},"body":{"modules/TsPipesModule.html":{},"pipes/TsRoundNumberPipe.html":{},"overview.html":{}}}],["tsrow",{"_index":2486,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsrowcompon",{"_index":1488,"title":{"components/TsRowComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsrowdef",{"_index":2483,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTableComponent.html":{}}}],["tsrowdef]'},{'nam",{"_index":1529,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsrowdefcolumn",{"_index":2484,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsrowdefdirect",{"_index":1528,"title":{"directives/TsRowDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsrowdefwhen",{"_index":2485,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsscrollbar",{"_index":3159,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["tsscrollbarposit",{"_index":3129,"title":{"classes/TsScrollbarPosition.html":{}},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["tsscrollbarscompon",{"_index":1489,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsscrollbarsgeometri",{"_index":3153,"title":{"classes/TsScrollbarsGeometry.html":{}},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["tsscrollbarsmodul",{"_index":1035,"title":{"modules/TsScrollbarsModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsScrollbarsModule.html":{},"modules.html":{},"overview.html":{}}}],["tsscrollbarsscrolldirect",{"_index":3151,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["tssearchcompon",{"_index":1491,"title":{"components/TsSearchComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tssearchmodul",{"_index":1036,"title":{"modules/TsSearchModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["tssearchrespons",{"_index":3256,"title":{"interfaces/TsSearchResponse.html":{}},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["tsselectcompon",{"_index":1493,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"modules/TsSelectModule.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsselectedfil",{"_index":55,"title":{"classes/TsSelectedFile.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["tsselectformatfn",{"_index":4151,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tsselectmodul",{"_index":1037,"title":{"modules/TsSelectModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsSelectModule.html":{},"modules.html":{},"overview.html":{}}}],["tssentencecas",{"_index":3328,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{},"index.html":{}}}],["tssentencecasepip",{"_index":2989,"title":{"pipes/TsSentenceCasePipe.html":{}},"body":{"modules/TsPipesModule.html":{},"pipes/TsSentenceCasePipe.html":{},"overview.html":{}}}],["tsslidetogglechang",{"_index":3332,"title":{"classes/TsSlideToggleChange.html":{}},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["tssort",{"_index":3345,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tssort]'},{'nam",{"_index":1531,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tssortabl",{"_index":3368,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortable'",{"_index":3373,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortableitem",{"_index":3362,"title":{"interfaces/TsSortableItem.html":{}},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortact",{"_index":3417,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["tssortanim",{"_index":3446,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortanimations.ind",{"_index":3457,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortanimations.indicatortoggl",{"_index":3460,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortanimations.leftpoint",{"_index":3458,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortanimations.rightpoint",{"_index":3459,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortbas",{"_index":3341,"title":{"classes/TsSortBase.html":{}},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortchang",{"_index":3418,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["tssortdirect",{"_index":1530,"title":{"directives/TsSortDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tssortdis",{"_index":3354,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortdisableclear",{"_index":3352,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssorthead",{"_index":3452,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortheaderbas",{"_index":3440,"title":{"classes/TsSortHeaderBase.html":{}},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortheadercompon",{"_index":1495,"title":{"components/TsSortHeaderComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tssortheaderintl",{"_index":3355,"title":{"injectables/TsSortHeaderIntl.html":{}},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortmodul",{"_index":1038,"title":{"modules/TsSortModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tssortstart",{"_index":3351,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortstat",{"_index":3363,"title":{"interfaces/TsSortState.html":{}},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tsspacingmodul",{"_index":1039,"title":{"modules/TsSpacingModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsSpacingModule.html":{},"modules.html":{},"overview.html":{}}}],["tsstylethemetyp",{"_index":251,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tstabl",{"_index":3530,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tstablecompon",{"_index":1498,"title":{"components/TsTableComponent.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tstabledatasourc",{"_index":3537,"title":{"classes/TsTableDataSource.html":{}},"body":{"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["tstabledatasource();simpli",{"_index":3548,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tstabledatasource(initial_data)4",{"_index":3545,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tstabledatasource(initial_data);an",{"_index":3542,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tstablemodul",{"_index":1040,"title":{"modules/TsTableModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tstimeago",{"_index":3677,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{},"index.html":{}}}],["tstimeagopip",{"_index":2990,"title":{"pipes/TsTimeAgoPipe.html":{}},"body":{"modules/TsPipesModule.html":{},"pipes/TsTimeAgoPipe.html":{},"overview.html":{}}}],["tstitlecas",{"_index":3687,"title":{},"body":{"pipes/TsTitleCasePipe.html":{},"index.html":{}}}],["tstitlecasepip",{"_index":2991,"title":{"pipes/TsTitleCasePipe.html":{}},"body":{"modules/TsPipesModule.html":{},"pipes/TsTitleCasePipe.html":{},"overview.html":{}}}],["tstogglecompon",{"_index":1500,"title":{"components/TsToggleComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tstogglemodul",{"_index":1041,"title":{"modules/TsToggleModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsToggleModule.html":{},"modules.html":{},"overview.html":{}}}],["tstooltipcompon",{"_index":1502,"title":{"components/TsTooltipComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tstooltipmodul",{"_index":1042,"title":{"modules/TsTooltipModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCopyModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsTooltipModule.html":{},"modules.html":{},"overview.html":{}}}],["tstooltippositiontyp",{"_index":3720,"title":{},"body":{"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsuser",{"_index":888,"title":{"interfaces/TsUser.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["tsvalidationmessagescompon",{"_index":1504,"title":{"components/TsValidationMessagesComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["tsvalidationmessageservic",{"_index":3730,"title":{"injectables/TsValidationMessageService.html":{}},"body":{"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["tsvalidationmessagesmodul",{"_index":1043,"title":{"modules/TsValidationMessagesModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSelectModule.html":{},"modules/TsValidationMessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["tsvalidatorsservic",{"_index":1044,"title":{"injectables/TsValidatorsService.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsInputModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidatorsService.html":{},"overview.html":{}}}],["tsvalidatorsservicemock",{"_index":3843,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["tsverticalspac",{"_index":1533,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["tsverticalspacing(valu",{"_index":3866,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["tsverticalspacingdirect",{"_index":1532,"title":{"directives/TsVerticalSpacingDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsverticalspacingtyp",{"_index":3861,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["tswindowservic",{"_index":1171,"title":{},"body":{"modules/TsButtonModule.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["two",{"_index":661,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{}}}],["type",{"_index":21,"title":{},"body":{"injectables/HighchartsService.html":{},"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":4131,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeconstraint",{"_index":2417,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["typeisinvalid",{"_index":3870,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["typeof",{"_index":762,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["types.t",{"_index":4142,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":1604,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"index.html":{}}}],["typographi",{"_index":4043,"title":{},"body":{"index.html":{}}}],["ui",{"_index":158,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"index.html":{}}}],["ui.css'scss",{"_index":4052,"title":{},"body":{"index.html":{}}}],["ui/.../autocomplete.component.t",{"_index":4136,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../button.component.t",{"_index":4137,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../card.component.t",{"_index":4135,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../chart2.component.t",{"_index":4138,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../date.pipe.t",{"_index":4140,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../icon.component.t",{"_index":4134,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../imag",{"_index":4143,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../input.component.t",{"_index":4145,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../mask.directive.t",{"_index":4133,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../menu.component.t",{"_index":4147,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../mim",{"_index":4141,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../navigation.component.t",{"_index":4148,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../options.interface.t",{"_index":4139,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../radio",{"_index":4149,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../scrollbars.component.t",{"_index":4150,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../select.component.t",{"_index":4152,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../sort.directive.t",{"_index":4153,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../styl",{"_index":4154,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../tooltip.component.t",{"_index":4156,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../vert",{"_index":4157,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/issues/403",{"_index":3745,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["ui/src/autocomplete/autocomplete.component.t",{"_index":598,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/autocomplete/autocomplete.component.ts:39",{"_index":599,"title":{},"body":{"interfaces/KeyboardEvent.html":{}}}],["ui/src/autocomplete/autocomplete.component.ts:43",{"_index":875,"title":{},"body":{"interfaces/MouseEvent.html":{}}}],["ui/src/autocomplete/autocomplete.module.t",{"_index":1118,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["ui/src/autofocus/autofocus.directive.t",{"_index":1132,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.directive.ts:29",{"_index":1145,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.directive.ts:35",{"_index":1142,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.directive.ts:37",{"_index":1141,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.directive.ts:48",{"_index":1143,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.module.t",{"_index":1161,"title":{},"body":{"modules/TsAutofocusModule.html":{}}}],["ui/src/button/button.component.t",{"_index":4158,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/src/button/button.module.t",{"_index":1168,"title":{},"body":{"modules/TsButtonModule.html":{}}}],["ui/src/card/card",{"_index":1544,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["ui/src/card/card.component.t",{"_index":1352,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/card/card.component.ts:104",{"_index":1374,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:111",{"_index":1397,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:114",{"_index":1390,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:120",{"_index":1377,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:126",{"_index":1378,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:132",{"_index":1380,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:138",{"_index":1381,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:141",{"_index":1400,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:144",{"_index":1391,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:152",{"_index":1385,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:158",{"_index":1386,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:165",{"_index":1403,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:168",{"_index":1392,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:174",{"_index":1389,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:179",{"_index":1407,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:181",{"_index":1369,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:79",{"_index":1393,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:84",{"_index":1394,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:92",{"_index":1372,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.module.t",{"_index":1539,"title":{},"body":{"modules/TsCardModule.html":{}}}],["ui/src/chart/chart.event.t",{"_index":1809,"title":{},"body":{"classes/TsChartEvent.html":{}}}],["ui/src/chart/chart.event.ts:11",{"_index":1815,"title":{},"body":{"classes/TsChartEvent.html":{}}}],["ui/src/chart/chart.event.ts:12",{"_index":1814,"title":{},"body":{"classes/TsChartEvent.html":{}}}],["ui/src/chart/chart.module.t",{"_index":1862,"title":{},"body":{"modules/TsChartModule.html":{}}}],["ui/src/chart/highcharts.service.t",{"_index":6,"title":{},"body":{"injectables/HighchartsService.html":{}}}],["ui/src/chart/highcharts.service.ts:18",{"_index":17,"title":{},"body":{"injectables/HighchartsService.html":{}}}],["ui/src/chart/highcharts.service.ts:21",{"_index":24,"title":{},"body":{"injectables/HighchartsService.html":{}}}],["ui/src/chart/options.interface.t",{"_index":1711,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/chart/point.directive.t",{"_index":1866,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["ui/src/chart/point.directive.ts:22",{"_index":1867,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["ui/src/chart/point.directive.ts:28",{"_index":1869,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["ui/src/chart/point.directive.ts:34",{"_index":1870,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["ui/src/chart/point.directive.ts:40",{"_index":1871,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["ui/src/chart/point.directive.ts:46",{"_index":1873,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["ui/src/chart/point.directive.ts:52",{"_index":1874,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["ui/src/chart/point.directive.ts:58",{"_index":1875,"title":{},"body":{"directives/TsChartPointDirective.html":{}}}],["ui/src/chart/series.directive.t",{"_index":1876,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:24",{"_index":1892,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:31",{"_index":1880,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:37",{"_index":1882,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:43",{"_index":1883,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:50",{"_index":1884,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:56",{"_index":1886,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:62",{"_index":1888,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:68",{"_index":1889,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/series.directive.ts:74",{"_index":1890,"title":{},"body":{"directives/TsChartSeriesDirective.html":{}}}],["ui/src/chart/utilities/compos",{"_index":1820,"title":{},"body":{"interfaces/TsChartEventOptions.html":{}}}],["ui/src/chart2/amcharts.service.t",{"_index":1099,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["ui/src/chart2/amcharts.service.ts:25",{"_index":1103,"title":{},"body":{"injectables/TsAmChartsService.html":{}}}],["ui/src/chart2/amcharts.service.ts:28",{"_index":1104,"title":{},"body":{"injectables/TsAmChartsService.html":{}}}],["ui/src/chart2/chart2.component.t",{"_index":1601,"title":{},"body":{"components/TsChart2Component.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/chart2/chart2.component.ts:102",{"_index":1620,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:116",{"_index":1631,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:131",{"_index":1628,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:143",{"_index":1630,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:151",{"_index":1624,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:164",{"_index":1627,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:67",{"_index":1636,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:72",{"_index":1634,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:78",{"_index":1637,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:86",{"_index":1623,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:93",{"_index":1639,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.component.ts:96",{"_index":1633,"title":{},"body":{"components/TsChart2Component.html":{}}}],["ui/src/chart2/chart2.module.t",{"_index":1705,"title":{},"body":{"modules/TsChart2Module.html":{}}}],["ui/src/checkbox/checkbox.component.t",{"_index":1895,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:101",{"_index":1952,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:107",{"_index":1935,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:113",{"_index":1965,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:116",{"_index":1953,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:122",{"_index":1936,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:128",{"_index":1937,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:134",{"_index":1938,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:140",{"_index":1939,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:148",{"_index":1940,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:154",{"_index":1941,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:160",{"_index":1944,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:166",{"_index":1933,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:83",{"_index":1954,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:89",{"_index":1955,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:95",{"_index":1934,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:98",{"_index":1963,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.module.t",{"_index":1971,"title":{},"body":{"modules/TsCheckboxModule.html":{}}}],["ui/src/confirmation/confirm",{"_index":2049,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["ui/src/confirmation/confirmation.directive.t",{"_index":1977,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:155",{"_index":1992,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:46",{"_index":1998,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:51",{"_index":2000,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:57",{"_index":1986,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:74",{"_index":1989,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:82",{"_index":1996,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:90",{"_index":1994,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:99",{"_index":1991,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.module.t",{"_index":2062,"title":{},"body":{"modules/TsConfirmationModule.html":{}}}],["ui/src/copy/copy.component.t",{"_index":2066,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:109",{"_index":2104,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:129",{"_index":2087,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:154",{"_index":2085,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:164",{"_index":2084,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:47",{"_index":2092,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:52",{"_index":2093,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:57",{"_index":2095,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:63",{"_index":2097,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:68",{"_index":2101,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:74",{"_index":2090,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:80",{"_index":2081,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:86",{"_index":2082,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:92",{"_index":2080,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.module.t",{"_index":2150,"title":{},"body":{"modules/TsCopyModule.html":{}}}],["ui/src/csv",{"_index":1178,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["ui/src/dat",{"_index":2182,"title":{},"body":{"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{}}}],["ui/src/datepicker/datepicker.component.t",{"_index":2311,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["ui/src/datepicker/datepicker.module.t",{"_index":2378,"title":{},"body":{"modules/TsDatepickerModule.html":{}}}],["ui/src/fil",{"_index":44,"title":{},"body":{"interfaces/ImageRatio.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/icon",{"_index":2487,"title":{},"body":{"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{}}}],["ui/src/icon/icon.component.t",{"_index":2520,"title":{},"body":{"components/TsIconComponent.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/icon/icon.component.ts:100",{"_index":2541,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:106",{"_index":2533,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:69",{"_index":2535,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:72",{"_index":2543,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:75",{"_index":2539,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:81",{"_index":2537,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:87",{"_index":2538,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:97",{"_index":2546,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.module.t",{"_index":2574,"title":{},"body":{"modules/TsIconModule.html":{}}}],["ui/src/input/input.component.t",{"_index":4163,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/src/input/input.module.t",{"_index":2589,"title":{},"body":{"modules/TsInputModule.html":{}}}],["ui/src/link/link.component.t",{"_index":2591,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.component.ts:47",{"_index":2601,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.component.ts:53",{"_index":2598,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.component.ts:59",{"_index":2599,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.component.ts:65",{"_index":2600,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.module.t",{"_index":2611,"title":{},"body":{"modules/TsLinkModule.html":{}}}],["ui/src/load",{"_index":2615,"title":{},"body":{"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{}}}],["ui/src/login",{"_index":2666,"title":{},"body":{"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["ui/src/mask/mask.directive.t",{"_index":790,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/mask/mask.directive.ts:38",{"_index":874,"title":{},"body":{"interfaces/MaskCollection.html":{}}}],["ui/src/mask/mask.module.t",{"_index":2741,"title":{},"body":{"modules/TsMaskModule.html":{}}}],["ui/src/menu/menu.component.t",{"_index":2743,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/menu/menu.component.ts:103",{"_index":2779,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:109",{"_index":2774,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:115",{"_index":2756,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:121",{"_index":2759,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:127",{"_index":2760,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:133",{"_index":2762,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:139",{"_index":2764,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:145",{"_index":2765,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:151",{"_index":2758,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:160",{"_index":2769,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:166",{"_index":2771,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:175",{"_index":2770,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:81",{"_index":2776,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:86",{"_index":2778,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:91",{"_index":2782,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:98",{"_index":2772,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.module.t",{"_index":2815,"title":{},"body":{"modules/TsMenuModule.html":{}}}],["ui/src/module.t",{"_index":1046,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["ui/src/navigation/navigation.component.t",{"_index":877,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/navigation/navigation.component.ts:149",{"_index":2835,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:156",{"_index":2840,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:165",{"_index":2833,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:170",{"_index":2834,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:177",{"_index":2842,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:187",{"_index":2836,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:194",{"_index":2844,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:202",{"_index":2822,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:218",{"_index":2823,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:224",{"_index":2824,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:230",{"_index":2837,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:236",{"_index":2838,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:242",{"_index":2825,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:248",{"_index":2826,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:250",{"_index":2821,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:264",{"_index":2830,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:272",{"_index":2829,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:282",{"_index":2827,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:302",{"_index":2831,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:319",{"_index":2832,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:368",{"_index":2828,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.module.t",{"_index":2852,"title":{},"body":{"modules/TsNavigationModule.html":{}}}],["ui/src/paginator/paginator.component.t",{"_index":2855,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["ui/src/paginator/paginator.module.t",{"_index":2983,"title":{},"body":{"modules/TsPaginatorModule.html":{}}}],["ui/src/pipes/date/date.pipe.t",{"_index":2153,"title":{},"body":{"pipes/TsDatePipe.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/pipes/date/date.pipe.ts:31",{"_index":2158,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["ui/src/pipes/pipes.module.t",{"_index":2992,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["ui/src/pipes/round",{"_index":3122,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["ui/src/pipes/sent",{"_index":3326,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{}}}],["ui/src/pipes/tim",{"_index":3675,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["ui/src/pipes/titl",{"_index":3686,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["ui/src/radio",{"_index":3004,"title":{},"body":{"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/scrollbars/scrollbars.component.t",{"_index":3130,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/scrollbars/scrollbars.module.t",{"_index":3196,"title":{},"body":{"modules/TsScrollbarsModule.html":{}}}],["ui/src/search/search.component.t",{"_index":3199,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["ui/src/search/search.component.ts:101",{"_index":3239,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:106",{"_index":3245,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:111",{"_index":3249,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:116",{"_index":3252,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:129",{"_index":3248,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:135",{"_index":3219,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:141",{"_index":3220,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:147",{"_index":3222,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:153",{"_index":3223,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:159",{"_index":3224,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:165",{"_index":3225,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:171",{"_index":3226,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:177",{"_index":3227,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:183",{"_index":3228,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:189",{"_index":3230,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:195",{"_index":3229,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:201",{"_index":3217,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:215",{"_index":3233,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:228",{"_index":3232,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:244",{"_index":3231,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:74",{"_index":3240,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:79",{"_index":3234,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:84",{"_index":3235,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:89",{"_index":3255,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:96",{"_index":3238,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.module.t",{"_index":3274,"title":{},"body":{"modules/TsSearchModule.html":{}}}],["ui/src/select/select.component.t",{"_index":4165,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/src/select/select.module.t",{"_index":3282,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["ui/src/sort/sort",{"_index":3441,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["ui/src/sort/sort.directive.t",{"_index":3342,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/sort/sort.directive.ts:106",{"_index":3422,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:112",{"_index":3420,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:118",{"_index":3435,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:121",{"_index":3430,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:129",{"_index":3421,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:132",{"_index":3438,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:135",{"_index":3431,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:141",{"_index":3423,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:147",{"_index":3426,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:155",{"_index":3427,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:164",{"_index":3428,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:181",{"_index":3424,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:189",{"_index":3429,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:204",{"_index":3425,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:87",{"_index":3433,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:92",{"_index":3432,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:98",{"_index":3419,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.module.t",{"_index":3517,"title":{},"body":{"modules/TsSortModule.html":{}}}],["ui/src/spacing/spacing.module.t",{"_index":3526,"title":{},"body":{"modules/TsSpacingModule.html":{}}}],["ui/src/spacing/vert",{"_index":3859,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/table/cell.t",{"_index":1565,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["ui/src/table/cell.ts:116",{"_index":1976,"title":{},"body":{"directives/TsColumnDefDirective.html":{}}}],["ui/src/table/cell.ts:123",{"_index":1975,"title":{},"body":{"directives/TsColumnDefDirective.html":{}}}],["ui/src/table/cell.ts:129",{"_index":1974,"title":{},"body":{"directives/TsColumnDefDirective.html":{}}}],["ui/src/table/cell.ts:54",{"_index":2466,"title":{},"body":{"directives/TsHeaderCellDirective.html":{}}}],["ui/src/table/cell.ts:72",{"_index":1599,"title":{},"body":{"directives/TsCellDirective.html":{}}}],["ui/src/table/cell.ts:76",{"_index":1600,"title":{},"body":{"directives/TsCellDirective.html":{}}}],["ui/src/table/row.t",{"_index":2467,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["ui/src/table/t",{"_index":3626,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["ui/src/table/table.component.t",{"_index":3528,"title":{},"body":{"components/TsTableComponent.html":{}}}],["ui/src/table/table.module.t",{"_index":3671,"title":{},"body":{"modules/TsTableModule.html":{}}}],["ui/src/toggle/toggle.component.t",{"_index":3333,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:104",{"_index":3696,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:110",{"_index":3697,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:116",{"_index":3698,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:122",{"_index":3699,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:73",{"_index":3692,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:79",{"_index":3693,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:83",{"_index":3701,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:86",{"_index":3700,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:92",{"_index":3694,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:98",{"_index":3695,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.module.t",{"_index":3707,"title":{},"body":{"modules/TsToggleModule.html":{}}}],["ui/src/tooltip/tooltip.component.t",{"_index":3710,"title":{},"body":{"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/tooltip/tooltip.component.ts:53",{"_index":3721,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["ui/src/tooltip/tooltip.component.ts:59",{"_index":3722,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["ui/src/tooltip/tooltip.component.ts:65",{"_index":3719,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["ui/src/tooltip/tooltip.module.t",{"_index":3726,"title":{},"body":{"modules/TsTooltipModule.html":{}}}],["ui/src/utilities/react",{"_index":3099,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["ui/src/utilities/types/styl",{"_index":4166,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/src/utilities/version/version.t",{"_index":3873,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/utilities/version/version.ts:5",{"_index":3880,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/utilities/version/version.ts:6",{"_index":3881,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/utilities/version/version.ts:7",{"_index":3878,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/utilities/version/version.ts:9",{"_index":3879,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/valid",{"_index":3731,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{}}}],["ui/src/validators/validators.service.t",{"_index":3809,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:24",{"_index":3811,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:25",{"_index":3813,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:26",{"_index":3815,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:27",{"_index":3817,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:28",{"_index":3819,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:29",{"_index":3821,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:30",{"_index":3823,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:31",{"_index":3827,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:32",{"_index":3829,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:33",{"_index":3833,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:34",{"_index":3837,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:35",{"_index":3825,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:36",{"_index":3835,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:37",{"_index":3831,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui:mast",{"_index":3970,"title":{},"body":{"contributing.html":{}}}],["uiformatfn",{"_index":700,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["uiformatt",{"_index":3016,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["uisubformatt",{"_index":3022,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["unambigu",{"_index":3942,"title":{},"body":{"contributing.html":{}}}],["undefin",{"_index":325,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsColumnDefDirective.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["under",{"_index":358,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["underli",{"_index":276,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["underlin",{"_index":3718,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["underscor",{"_index":2551,"title":{},"body":{"components/TsIconComponent.html":{}}}],["unifi",{"_index":4008,"title":{},"body":{"index.html":{}}}],["union",{"_index":2244,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["uniqu",{"_index":269,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{}}}],["unit",{"_index":1757,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"contributing.html":{}}}],["unmaskregex",{"_index":792,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["unreach",{"_index":552,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["unregist",{"_index":3392,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["unselect",{"_index":1840,"title":{},"body":{"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{}}}],["unsubscrib",{"_index":3474,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["unsupport",{"_index":2569,"title":{},"body":{"components/TsIconComponent.html":{}}}],["unsur",{"_index":2480,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["untest",{"_index":3121,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["until",{"_index":2110,"title":{},"body":{"components/TsCopyComponent.html":{},"components/TsTableComponent.html":{}}}],["untilcomponentdestroy",{"_index":229,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["untilcomponentdestroyed(thi",{"_index":451,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["up",{"_index":557,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/NavigationItemBase.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["updat",{"_index":495,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsChartEventOptions.html":{},"directives/TsChartPointDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["updateallrowid",{"_index":1284,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["updatedhiddenarray",{"_index":985,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updatedhiddenarray.unshift(itemtomov",{"_index":988,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updatedvisiblearray",{"_index":995,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updatedvisiblearray.push(itemtomov",{"_index":996,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updateerror",{"_index":1298,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["updateinnervalu",{"_index":498,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["updatelist",{"_index":975,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updatevirtualfileinputattrs(input",{"_index":569,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["upload",{"_index":50,"title":{},"body":{"interfaces/ImageRatio.html":{},"index.html":{}}}],["upload'},{'nam",{"_index":1465,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["upload.compon",{"_index":2410,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["upload.component.html",{"_index":305,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["upload.component.scss",{"_index":307,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["upload.component.t",{"_index":46,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["upload.modul",{"_index":1063,"title":{},"body":{"modules/TerminusUIModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["upload.module.t",{"_index":2408,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["upload/drop",{"_index":2382,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["upload/fil",{"_index":45,"title":{},"body":{"interfaces/ImageRatio.html":{},"modules/TerminusUIModule.html":{},"modules/TsFileUploadModule.html":{}}}],["upload/imag",{"_index":2399,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"classes/TsImageDimensions.html":{},"miscellaneous/typealiases.html":{}}}],["upload/mim",{"_index":4161,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["upload/select",{"_index":2411,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["upon",{"_index":898,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["uppercas",{"_index":3769,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{}}}],["uppercasevalid",{"_index":3834,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["upstream",{"_index":3972,"title":{},"body":{"contributing.html":{}}}],["url",{"_index":810,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["urlvalid",{"_index":3836,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["us",{"_index":279,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"directives/TsChartPointDirective.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["usa",{"_index":1740,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["usabl",{"_index":4021,"title":{},"body":{"index.html":{}}}],["usag",{"_index":54,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["useexist",{"_index":283,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["usefactori",{"_index":1655,"title":{},"body":{"components/TsChart2Component.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["user",{"_index":131,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"modules/TsChart2Module.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"modules/TsChartModule.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{}}}],["user'",{"_index":467,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["usercanclear",{"_index":3216,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["userexist",{"_index":922,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["usernam",{"_index":3534,"title":{},"body":{"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["userprofileport",{"_index":2038,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["usersfullnam",{"_index":921,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["usevalu",{"_index":1709,"title":{},"body":{"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{}}}],["usual",{"_index":2215,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["util",{"_index":1387,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{}}}],["utilities/compos",{"_index":1864,"title":{},"body":{"modules/TsChartModule.html":{}}}],["utilities/react",{"_index":258,"title":{},"body":{"interfaces/ImageRatio.html":{},"modules/TerminusUIModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["utilities/typ",{"_index":244,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["utilities/types/styl",{"_index":252,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["utilitymenutempl",{"_index":1368,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ux/product",{"_index":402,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["v",{"_index":419,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSelectedFile.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{}}}],["v.bar",{"_index":3017,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["v.bing",{"_index":3023,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["v.columns.join('\\t')).join('\\r\\n",{"_index":1345,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["v.foo",{"_index":3019,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["v.foo;ev",{"_index":3024,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["v.id",{"_index":203,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["v.length",{"_index":421,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["v.login",{"_index":649,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["v.name",{"_index":680,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["v.split('/')[1",{"_index":349,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["v4",{"_index":1603,"title":{},"body":{"components/TsChart2Component.html":{}}}],["valid",{"_index":104,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["validateimagedimens",{"_index":3288,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["validateimagedimensions(constraint",{"_index":2451,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["validateimageratio",{"_index":3289,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["validateimageratio(constraint",{"_index":3307,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["validateimmedi",{"_index":3785,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["validateonchang",{"_index":2364,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["validationerror",{"_index":223,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["validationmessag",{"_index":1231,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsValidationMessagesComponent.html":{}}}],["validationmessageservic",{"_index":3788,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["validationmessagesservic",{"_index":1316,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["validatorfn",{"_index":1210,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["validatornam",{"_index":3738,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validators.minlength(this.queryminlength",{"_index":3250,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["validators.pattern(this.inputpatternregex",{"_index":3251,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["validators.requir",{"_index":2224,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["validators/creditcard/creditcard",{"_index":3845,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/email/email",{"_index":3846,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/equaltocontrol/equaltocontrol",{"_index":3847,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/greaterthan/greaterthan",{"_index":3849,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/greaterthanorequal/greaterthanorequ",{"_index":3848,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/lessthan/lessthan",{"_index":3851,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/lessthanorequal/lessthanorequ",{"_index":3850,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/lowercase/lowercas",{"_index":3852,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/maxdate/maxd",{"_index":3854,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/mindate/mind",{"_index":3855,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/numbers/numb",{"_index":3853,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/password/password",{"_index":3856,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/uppercase/uppercas",{"_index":3858,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/url/url",{"_index":3857,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/validators.servic",{"_index":1097,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsInputModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["validatorsservic",{"_index":2687,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["validatorvalu",{"_index":3736,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.actu",{"_index":3751,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.actual.width}x${validatorvalue.actual.height",{"_index":3779,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.comparevalu",{"_index":3766,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.greaterthan",{"_index":3753,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.greaterthanorequ",{"_index":3756,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.lessthan",{"_index":3760,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.lessthanorequ",{"_index":3762,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.lowercas",{"_index":3768,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.max}kb",{"_index":3772,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.numb",{"_index":3757,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.requiredlength",{"_index":3746,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.uppercas",{"_index":3770,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validformat",{"_index":2174,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["validformats.indexof(format",{"_index":2180,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["valu",{"_index":163,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["value(v",{"_index":3115,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["value.charat(0).touppercas",{"_index":3330,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{}}}],["value.filter((item",{"_index":932,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["value.length",{"_index":873,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["value.replace(new",{"_index":870,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["value.slice(1).tolowercas",{"_index":3331,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{}}}],["value.split",{"_index":420,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["value.tolowercase().split",{"_index":3688,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["valuechangeaccessor",{"_index":854,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{}}}],["valueisnon",{"_index":3869,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["valueprefix",{"_index":1772,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["valuesuffix",{"_index":1774,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["var",{"_index":1444,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["variabl",{"_index":2963,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["variat",{"_index":4164,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["veri",{"_index":2787,"title":{},"body":{"components/TsMenuComponent.html":{},"index.html":{}}}],["verifi",{"_index":834,"title":{},"body":{"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{}}}],["verifyisdateobject(d",{"_index":2371,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["version",{"_index":32,"title":{"classes/Version.html":{}},"body":{"injectables/HighchartsService.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsValidatorsService.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{}}}],["version('0.0.0",{"_index":3889,"title":{},"body":{"classes/Version.html":{}}}],["vertic",{"_index":1806,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"modules/TsSpacingModule.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["via",{"_index":69,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"interfaces/TsChartEventOptions.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"contributing.html":{}}}],["view",{"_index":949,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["viewchild",{"_index":219,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["viewchild('auto",{"_index":615,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["viewchild('autocomplet",{"_index":701,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["viewchild('autocompletetrigg",{"_index":702,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["viewchild('chartdiv",{"_index":1672,"title":{},"body":{"components/TsChart2Component.html":{}}}],["viewchild('cont",{"_index":2105,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["viewchild('input",{"_index":708,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["viewchild('preview",{"_index":340,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["viewchild('visibleitemslist",{"_index":941,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["viewchild(forwardref",{"_index":3166,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["viewchild(matcheckbox",{"_index":1913,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["viewchild(matmenutrigg",{"_index":2805,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["viewchild(tscheckboxcompon",{"_index":2722,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["viewchild(tspaginatorcompon",{"_index":3590,"title":{},"body":{"components/TsTableComponent.html":{}}}],["viewchild(tsscrollbarscompon",{"_index":3133,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["viewchild(tssortdirect",{"_index":3558,"title":{},"body":{"components/TsTableComponent.html":{}}}],["viewchildren",{"_index":886,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["viewchildren('visiblelinkel",{"_index":943,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["viewchildren(tsinputcompon",{"_index":2721,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["viewencapsul",{"_index":220,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["viewencapsulation.non",{"_index":314,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChart2Component.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["viewport",{"_index":3563,"title":{},"body":{"components/TsTableComponent.html":{}}}],["virtual",{"_index":506,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["virtualfileinput",{"_index":333,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["visibl",{"_index":399,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsUser.html":{}}}],["visible/hidden",{"_index":961,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visibleitem",{"_index":926,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visibleitemslength",{"_index":927,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visibleitemslist",{"_index":942,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visiblelinkel",{"_index":944,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visual",{"_index":1615,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["visualization(valu",{"_index":1673,"title":{},"body":{"components/TsChart2Component.html":{}}}],["void",{"_index":195,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/Mask.html":{},"interfaces/MaskCollection.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChart2Component.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["vs",{"_index":391,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["vscode",{"_index":4085,"title":{},"body":{"index.html":{}}}],["wait",{"_index":3241,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["want",{"_index":404,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsChartPointDirective.html":{},"directives/TsChartSeriesDirective.html":{},"classes/TsDatepickerInputEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"contributing.html":{},"index.html":{}}}],["warn",{"_index":2565,"title":{},"body":{"components/TsIconComponent.html":{},"miscellaneous/typealiases.html":{}}}],["warranti",{"_index":4111,"title":{},"body":{"license.html":{}}}],["wasn't",{"_index":1678,"title":{},"body":{"components/TsChart2Component.html":{}}}],["watch",{"_index":3662,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["way",{"_index":179,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{},"index.html":{}}}],["we'll",{"_index":181,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["web",{"_index":3974,"title":{},"body":{"contributing.html":{}}}],["weekend",{"_index":2315,"title":{},"body":{"classes/TsDatepickerInputEvent.html":{}}}],["welcom",{"_index":939,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["welcomemessag",{"_index":940,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["well",{"_index":1568,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"index.html":{}}}],["wendy&#x1f41b",{"_index":4067,"title":{},"body":{"index.html":{}}}],["wheel",{"_index":1307,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["wheelev",{"_index":1309,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["whenev",{"_index":3505,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["whether",{"_index":1795,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"interfaces/TsFileValidations.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTooltipComponent.html":{},"license.html":{}}}],["white_check_mark",{"_index":4024,"title":{},"body":{"index.html":{}}}],["whose",{"_index":2088,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["width",{"_index":125,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsImageDimensions.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["widthratio",{"_index":48,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["width}x${height",{"_index":384,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["window",{"_index":530,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["window:res",{"_index":2820,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["windowservic",{"_index":2079,"title":{},"body":{"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["wire",{"_index":2032,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["within",{"_index":1552,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTooltipComponent.html":{}}}],["without",{"_index":2189,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsReactiveFormBaseComponent.html":{},"license.html":{}}}],["wizard",{"_index":4036,"title":{},"body":{"index.html":{}}}],["won't",{"_index":2704,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["wonder",{"_index":4056,"title":{},"body":{"index.html":{}}}],["word",{"_index":2550,"title":{},"body":{"components/TsIconComponent.html":{}}}],["word.charat(0).touppercas",{"_index":3690,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["word.slice(1",{"_index":3691,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["work",{"_index":964,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["workflow",{"_index":3901,"title":{},"body":{"contributing.html":{}}}],["world",{"_index":1742,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["worldcontin",{"_index":1741,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"miscellaneous/typealiases.html":{}}}],["wrap",{"_index":1408,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLinkComponent.html":{},"components/TsTableComponent.html":{}}}],["wrapper",{"_index":1796,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"classes/TsChartEvent.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsCopyComponent.html":{},"classes/TsDatepickerInputEvent.html":{},"components/TsMenuComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{}}}],["write",{"_index":1951,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["writevalu",{"_index":1931,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["writevalue(valu",{"_index":1949,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["x",{"_index":150,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsMenuComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["x1f3a8",{"_index":4062,"title":{},"body":{"index.html":{}}}],["x1f440",{"_index":4064,"title":{},"body":{"index.html":{}}}],["x1f4bb",{"_index":4068,"title":{},"body":{"index.html":{}}}],["x1f4d6",{"_index":4061,"title":{},"body":{"index.html":{}}}],["x1f527",{"_index":4065,"title":{},"body":{"index.html":{}}}],["x1f914",{"_index":4063,"title":{},"body":{"index.html":{}}}],["xaxi",{"_index":1714,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["xdateformat",{"_index":1777,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["xreachend",{"_index":3143,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["xreachstart",{"_index":3144,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["xy",{"_index":1632,"title":{},"body":{"components/TsChart2Component.html":{},"miscellaneous/typealiases.html":{}}}],["y",{"_index":1433,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{},"components/TsMenuComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["yarn",{"_index":4045,"title":{},"body":{"index.html":{}}}],["yaxi",{"_index":1807,"title":{},"body":{"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartEventOptions.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["ye",{"_index":3303,"title":{},"body":{"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["year",{"_index":2257,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsDatepickerInputEvent.html":{}}}],["yeoman",{"_index":1096,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["yourself",{"_index":3949,"title":{},"body":{"contributing.html":{}}}],["yreachend",{"_index":3145,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["yreachstart",{"_index":3146,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["z",{"_index":4044,"title":{},"body":{"index.html":{}}}],["z0",{"_index":3243,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["za",{"_index":3242,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["zero",{"_index":1320,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["zerobas",{"_index":2931,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["zip",{"_index":4032,"title":{},"body":{"index.html":{}}}],["zone",{"_index":1621,"title":{},"body":{"components/TsChart2Component.html":{},"interfaces/TsChartAxis.html":{},"interfaces/TsChartAxisPlotBand.html":{},"interfaces/TsChartDataItem.html":{},"interfaces/TsChartMapTooltip.html":{},"interfaces/TsChartObject.html":{},"interfaces/TsChartOptions.html":{},"interfaces/TsChartTitle.html":{},"interfaces/TsChartTooltip.html":{},"interfaces/TsChartZone.html":{}}}],["zoom",{"_index":1045,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChart2Module.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsDatepickerModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMaskModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/HighchartsService.html":{"url":"injectables/HighchartsService.html","title":"injectable - HighchartsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HighchartsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/highcharts.service.ts\n        \n\n            \n                Description\n            \n            \n                Expose Highcharts as a service\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                highcharts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(highcharts: any)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/chart/highcharts.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        highcharts\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            highcharts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        highcharts:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/highcharts.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InjectionToken,\n} from '@angular/core';\n\n\n/**\n * Create an injection token that the consumer can override with their version of Highcharts\n */\nexport const HIGHCHARTS = new InjectionToken('Highcharts');\n\n\n/**\n * Expose Highcharts as a service\n */\n@Injectable()\nexport class HighchartsService {\n\n  constructor(\n    @Inject(HIGHCHARTS) public highcharts: any,\n  ) {}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageRatio.html":{"url":"interfaces/ImageRatio.html","title":"interface - ImageRatio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageRatio\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/file-upload.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        heightRatio\n                                \n                                \n                                        widthRatio\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        heightRatio\n                                    \n                                \n                                \n                                    \n                                        heightRatio:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthRatio\n                                    \n                                \n                                \n                                    \n                                        widthRatio:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        File Upload\n\n\n\n\nTable of Contents\n\nBasic usage\nTsSelectedFile\n\n\nFile types\nFile size\nImage dimensions\nImage ratio constraints\nClearing a file\nShowing upload progress\nEnable multiple file selection\nHandle multiple files\n\n\nBasic usage\nCollect the selected file via the selected event:\n\n@import { TsSelectedFile } from '@terminus/ui';\n\n...\n\n  handleFile(e: TsSelectedFile) {\n    // e.fileContents is the selected file\n  }TsSelectedFile\nThe TsSelectedFile instance will have several items available:\nfile.fileContents // string\nfile.height       // number (will be 0 for CSVs)\nfile.isCSV        // boolean\nfile.isImage      // boolean\nfile.isValid      // boolean\nfile.mimeType     // string\nfile.name         // string\nfile.size         // number\nfile.validations  // TsFileValidations\nfile.width        // number (will be 0 for CSVs)File types\nAccepted file types can be set by the accept input:\n@import { TsFileAcceptedMimeTypes } from '@terminus/ui';\n\n...\n\n  myMimeTypes: TsFileAcceptedMimeTypes = ['image/png', 'image/jpg'];\nIf a file is loaded with the incorrect MIME/type, a validation message will appear below the file input.\nThe default types can be found by importing TS_ACCEPTED_MIME_TYPES;\nFile size\nSet a maximum size for files in kilobytes:\n\nIf a file is loaded that exceeds the size limit, a validation message will appear below the file input.\nImage dimensions\nImage dimension validation is controlled by an array of constraints passed to the component.\nA single constraint has this structure:\ninterface TsFileImageDimensionContraint {\n  height: {\n    min: number;\n    max: number;\n  };\n  width: {\n    min: number;\n    max: number;\n  };\n}For fixed image dimensions set the min and max to the same number. The component will trim ranges before exposing to the user:\n// Example:\n{\n  height: {\n    min: 100;\n    max: 100;\n  };\n  width: {\n    min: 300;\n    max: 300;\n  };\n}\n// Will be displayed as: `300x100`\n\n{\n  height: {\n    min: 50;\n    max: 100;\n  };\n  width: {\n    min: 200;\n    max: 300;\n  };\n}\n// Will be displayed as: `200-300x50-100`Example:\n@import { TsFileImageDimensionConstraints } from '@terminus/ui';\n\n...\n\n  myDimensionConstraints: TsFileImageDimensionConstraints = [\n    {\n      height: {\n        min: 72,\n        max: 72,\n      },\n      width: {\n        min: 72,\n        max: 72,\n      },\n    },\n    {\n      height: {\n        min: 400,\n        max: 500,\n      },\n      width: {\n        min: 700,\n        max: 800,\n      },\n    },\n  ];\nIf an image is selected that does not meet the dimension constraints, a validation message will appear below the file input.\nImage ratio constraints\nImage ratio validation is controlled by an array of constraints passed to the component.\n\nIf a file is loaded that do not meet any ratio constraints, a validation message will appear below the file input.\nClearing a file\nThe user can clear the selected file by clicking the X button next to the filename. An event will be emitted when this occurs:\n...\n\n  fileWasCleared() {\n    ...\n  }\nShowing upload progress\nThe progress of an upload can be reflected in the UI by passing a number between 0 and 100 to the progress input:\n...\n  myProgress = 0;\n\n  // For example only. In a real scenario the progress value would be coming from the API.\n  // Start a counter to fake the upload progress value\n  startProgress() {\n    this.myProgress = 0;\n    const counting = setInterval(() => {\n      if (this.myProgress \nEnable multiple file selection\nSet multiple to true:\n\nHandle multiple files\nCurrently this component does not natively handle multiple file uploads (this support is planned for the future). There are ways to 'fake'\nthat functionality in a way.\nAn example:\n...\n\n  // We'll store the selected files here for reference:\n  files: {id: number; file: File}[] = [];\n\n  // Collect the selected files from the event and store them for reference:\n  selectedMultiple(e: File[]) {\n    let index = -1;\n\n    this.files = e.map((f) => {\n      index = index + 1;\n      return {\n        id: index,\n        file: f,\n      };\n    });\n  }\n\n  // Remove the correct file when the user clicks the clear button\n  clearFile(id: number): void {\n    if (!this.files || this.files.length  {\n      return obj.id !== id;\n    });\n  }\n\n  // Helper function to determine when to hide one of the file upload components:\n  public fileExists(id: number): boolean {\n    if (!this.files || this.files.length  {\n      return v.id === id;\n    });\n\n    return found ? true : false;\n  }\n\n\n\n\n  \n    *ngIf=\"fileExists(v.id)\"\n    \n    [seedFile]=\"v.file\"\n  >\n\n    \n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n  isDevMode,\n  forwardRef,\n} from '@angular/core';\nimport {\n  ValidationErrors,\n  NG_VALUE_ACCESSOR,\n  FormControl,\n} from '@angular/forms';\nimport {\n  inputHasChanged,\n  TsDocumentService,\n  untilComponentDestroyed,\n  isNumber,\n} from '@terminus/ngx-tools';\nimport {\n  coerceArray,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport { ENTER } from '@terminus/ngx-tools/keycodes';\nimport { filter } from 'rxjs/operators';\n\nimport { TS_SPACING } from './../spacing/spacing.constant';\nimport { isDragEvent } from './../utilities/type-coercion/is-drag-event';\nimport { isHTMLInputElement } from './../utilities/type-coercion/is-html-input-element';\nimport { TsSelectedFile } from './selected-file';\nimport { TsFileAcceptedMimeTypes, TS_ACCEPTED_MIME_TYPES } from './mime-types';\nimport { TsFileImageDimensionConstraints } from './image-dimension-constraints';\nimport { TsStyleThemeTypes } from '../utilities/types/style-theme.types';\nimport { TsDropProtectionService } from './drop-protection.service';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\nexport interface ImageRatio {\n  widthRatio: number;\n  heightRatio: number;\n}\n\n/**\n * The maximum file size in bytes\n *\n * NOTE: Currently nginx has a hard limit of 10mb\n */\nconst MAXIMUM_KILOBYTES_PER_FILE = 10 * 1024;\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n/**\n * Custom control value accessor for our component.\n * This allows our custom components to access the underlying form validation via our base class\n */\n/* tslint:disable:no-use-before-declare */\nconst CUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsFileUploadComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n/**\n * This is the file-upload UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-file-upload`: Placed on the primary container\n * - `qa-file-upload-empty`: Placed on the container shown when no file exists\n * - `qa-file-upload-preview`: The file preview container\n * - `qa-file-upload-name`: The filename container\n * - `qa-file-upload-remove`: The button to remove a loaded file\n * - `qa-file-upload-prompt`: The button to open the native file picker\n * - `qa-file-upload-validation-messages`: The container for validation messages\n * - `qa-file-upload-hints`: The container for input hints\n * - `qa-file-upload-progress`: The upload progress bar\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss'],\n  host: {\n    class: 'ts-file-upload',\n    '(keydown)': 'handleKeydown($event)',\n  },\n  providers: [CUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsFileUpload',\n})\nexport class TsFileUploadComponent extends TsReactiveFormBaseComponent implements OnInit , OnChanges, OnDestroy, AfterContentInit {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-file-upload-${nextUniqueId++}`;\n\n  /**\n   * A flag that represents an in-progress drag movement\n   */\n  public dragInProgress: boolean = false;\n\n  /**\n   * Store the selected file\n   */\n  public file: TsSelectedFile | undefined;\n\n  /**\n   * Define the flexbox layout gap\n   */\n  public layoutGap: string = TS_SPACING.small[0];\n\n  /**\n   * Store reference to the generated file input\n   */\n  private virtualFileInput: HTMLInputElement;\n\n  /**\n   * Reflect the ID back to the DOM\n   */\n  @HostBinding('attr.id')\n  public publicID: string = this.id;\n\n  /**\n   * Provide access to the file preview element\n   */\n  @ViewChild('preview')\n  public preview!: ElementRef;\n\n  /**\n   * Get the file select button text\n   */\n  public get buttonMessage(): string {\n    if (this.dragInProgress) {\n      return `Drop File${this.multiple ? 's' : ''}`;\n    } else {\n      return `Select File${this.multiple ? 's' : ''}`;\n    }\n  }\n\n  /**\n   * Compose and expose all hints to the template\n   *\n   * @return An array of hints\n   */\n  public get hints(): string[] {\n    const hints: string[] = [];\n    const types: string = this.acceptedTypes.slice().map((v) => {\n      return v.split('/')[1];\n    }).join(', ');\n    const allowsImage =\n      (this.acceptedTypes.indexOf('image/png') >= 0) ||\n      (this.acceptedTypes.indexOf('image/jpeg') >= 0) ||\n      (this.acceptedTypes.indexOf('image/jpg') >= 0);\n\n    if (allowsImage && this.supportedImageDimensions.length > 0) {\n      hints.push(`Must be a valid dimension: ${this.supportedImageDimensions}`);\n    }\n\n    hints.push(`Must be ${types}`);\n    hints.push(`Must be under ${this.maximumKilobytesPerFile.toLocaleString()}kb`);\n    if (this.ratioConstraints) {\n      hints.push(`Must have valid image ratio of ${this.ratioConstraints.join(' or ')} `);\n    }\n\n    return hints;\n  }\n\n  /**\n   * Compose supported image dimensions as a string\n   *\n   * @return A string containing all allowed image dimensions\n   */\n  private get supportedImageDimensions(): string {\n    let myString = '';\n\n    // istanbul ignore else\n    if (this.dimensionConstraints) {\n      const constraints = this.dimensionConstraints.slice();\n\n      for (const c of constraints) {\n        // If not the first item, add a comma between the last item and the new\n        if (myString.length > 0) {\n          myString += ', ';\n        }\n\n        // If a fixed size\n        if ((c.height.min === c.height.max) && (c.width.min === c.width.max)) {\n          myString += `${c.width.min.toLocaleString()}x${c.height.min.toLocaleString()}`;\n        } else {\n          // Dealing with a size range\n          const height = (c.height.min === c.height.max)\n            ? c.height.min.toLocaleString()\n            : `${c.height.min.toLocaleString()}-${c.height.max.toLocaleString()}`;\n          const width = (c.width.min === c.width.max)\n            ? c.width.min.toLocaleString()\n            : `${c.width.min.toLocaleString()}-${c.width.max.toLocaleString()}`;\n          const range = `${width}x${height}`;\n          myString += range;\n        }\n      }\n    }\n\n    return myString;\n  }\n\n  /**\n   * Define the accepted mime types\n   */\n  @Input()\n  public set accept(value: TsFileAcceptedMimeTypes | TsFileAcceptedMimeTypes[] | undefined) {\n    if (!value) {\n      this._acceptedTypes = TS_ACCEPTED_MIME_TYPES.slice();\n    } else {\n      this._acceptedTypes = coerceArray(value);\n    }\n  }\n  // NOTE: Setter name is different to allow different types passed in vs returned\n  public get acceptedTypes(): TsFileAcceptedMimeTypes[] {\n    return this._acceptedTypes;\n  }\n  private _acceptedTypes: TsFileAcceptedMimeTypes[] = TS_ACCEPTED_MIME_TYPES.slice();\n\n  /**\n   * Create a form control to manage validation messages\n   */\n  @Input()\n  public set formControl(ctrl: FormControl) {\n    this._formControl = ctrl ? ctrl : new FormControl();\n  }\n  public get formControl(): FormControl {\n    return this._formControl;\n  }\n  private _formControl: FormControl = new FormControl();\n\n  /**\n   * Define if the 'select files' button should be visible. DO NOT USE.\n   *\n   * TODO: This should be removed once UX/Product decide if they want the button.\n   */\n  @Input()\n  public set hideButton(value: boolean) {\n    this._hideButton = coerceBooleanProperty(value);\n  }\n  public get hideButton(): boolean {\n    return this._hideButton;\n  }\n  private _hideButton: boolean = false;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id!: string;\n\n  /**\n   * Define the maximum file size in kilobytes\n   */\n  @Input()\n  public set maximumKilobytesPerFile(value: number) {\n    if (!value) {\n      return;\n    }\n\n    this._maximumKilobytesPerFile = value;\n  }\n  public get maximumKilobytesPerFile(): number {\n    return this._maximumKilobytesPerFile;\n  }\n  private _maximumKilobytesPerFile: number = MAXIMUM_KILOBYTES_PER_FILE;\n\n  /**\n   * Define supported ratio for images\n   */\n\n  @Input()\n  public set ratioConstraints(values: Array | undefined) {\n    if (values) {\n      for (const value of values) {\n        const v = value.split(':');\n        if ((v.length !== 2) || (!isNumber(v[0]) && !isNumber(v[1]))) {\n          throw new Error('An array of image ratio should be as [\"1:2\", \"3:4\"]');\n        }\n      }\n    }\n    this._ratioConstraints = this.parseRatioStringToObject(values);\n  }\n  public get ratioConstraints(): Array | undefined {\n    return this.parseRatioToString(this._ratioConstraints);\n  }\n  private _ratioConstraints: Array | undefined;\n\n\n  /**\n   * Define if multiple files may be uploaded\n   */\n  @Input()\n  public set multiple(value: boolean) {\n    this._multiple = coerceBooleanProperty(value);\n  }\n  public get multiple(): boolean {\n    return this._multiple;\n  }\n  private _multiple: boolean = false;\n\n  /**\n   * Define the upload progress\n   */\n  @Input()\n  public set progress(value: number) {\n    this._progress = coerceNumberProperty(value);\n  }\n  public get progress(): number {\n    return this._progress;\n  }\n  private _progress: number = 0;\n\n  /**\n   * Seed an existing file (used for multiple upload hack)\n   */\n  @Input()\n  public set seedFile(file: File | undefined) {\n    this._seedFile = file;\n\n    if (file) {\n      const newFile = new TsSelectedFile(\n        file,\n        this.dimensionConstraints,\n        this.acceptedTypes,\n        this.maximumKilobytesPerFile,\n        this._ratioConstraints,\n      );\n\n      newFile.fileLoaded$.pipe(\n        filter((t: TsSelectedFile | undefined): t is TsSelectedFile => t !== undefined),\n        untilComponentDestroyed(this),\n      ).subscribe((f) => {\n        this.formControl.setValue(f.file);\n        this.selected.emit(f);\n        this.setUpNewFile(f);\n      });\n    }\n\n  }\n  public get seedFile(): File | undefined {\n    return this._seedFile;\n  }\n  private _seedFile: File | undefined;\n\n  /**\n   * Define maximum and minimum pixel dimensions for images\n   */\n  @Input()\n  public set dimensionConstraints(value: TsFileImageDimensionConstraints | undefined) {\n    this._sizeConstraints = value;\n  }\n  public get dimensionConstraints(): TsFileImageDimensionConstraints | undefined {\n    return this._sizeConstraints;\n  }\n  private _sizeConstraints: TsFileImageDimensionConstraints | undefined;\n\n  /**\n   * Define the theme. See {@link TsStyleThemeTypes}.\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Event emitted when the user's cursor enters the field while dragging a file\n   */\n  @Output()\n  public enter: EventEmitter = new EventEmitter();\n\n  /**\n   * Event emitted when the user's cursor exits the field while dragging a file\n   */\n  @Output()\n  public exit: EventEmitter = new EventEmitter();\n\n  /**\n   * Event emitted when the user drops or selects a file\n   */\n  @Output()\n  public selected: EventEmitter = new EventEmitter();\n\n  /**\n   * Event emitted when the user drops or selects multiple files\n   */\n  @Output()\n  public selectedMultiple: EventEmitter = new EventEmitter();\n\n  /**\n   * Event emitted when the user clears a loaded file\n   */\n  @Output()\n  public cleared: EventEmitter = new EventEmitter();\n\n  /**\n   * HostListeners\n   */\n  @HostListener('dragover', ['$event'])\n  public handleDragover(event: DragEvent) {\n    this.preventAndStopEventPropagation(event);\n    this.enter.emit(true);\n    this.dragInProgress = true;\n  }\n\n  @HostListener('dragleave', ['$event'])\n  public handleDragleave(event: DragEvent) {\n    this.preventAndStopEventPropagation(event);\n    this.exit.emit(true);\n    this.dragInProgress = false;\n  }\n\n  @HostListener('drop', ['$event'])\n  public handleDrop(event: DragEvent) {\n    this.preventAndStopEventPropagation(event);\n    this.dragInProgress = false;\n    this.collectFilesFromEvent(event);\n  }\n\n  @HostListener('click')\n  public handleClick() {\n    this.promptForFiles();\n  }\n\n\n  constructor(\n    private documentService: TsDocumentService,\n    private elementRef: ElementRef,\n    private changeDetectorRef: ChangeDetectorRef,\n    private dropProtectionService: TsDropProtectionService,\n  ) {\n    super();\n    this.virtualFileInput = this.createFileInput();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n  /**\n   * Update the inner value when the formControl value is updated\n   *\n   * @param value - The value to set\n   */\n  public updateInnerValue = (value: string): void => {\n    this.value = value;\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Enable drop protection\n   */\n  public ngOnInit(): void {\n    this.dropProtectionService.add();\n    if (this.formControl) {\n      this.formControl.valueChanges.pipe(\n        untilComponentDestroyed(this),\n      ).subscribe(() => {\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n\n  /**\n   * Update the virtual file imput when the change event is fired\n   */\n  public ngAfterContentInit(): void {\n    this.virtualFileInput.addEventListener('change', this.onVirtualInputElementChange.bind(this));\n    this.updateVirtualFileInputAttrs(this.virtualFileInput);\n  }\n\n\n  /**\n   * Update the virtual file input's attrs when specific inputs change\n   *\n   * @param changes - The changed inputs\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    // istanbul ignore else\n    if (inputHasChanged(changes, 'multiple') || inputHasChanged(changes, 'accept')) {\n      this.updateVirtualFileInputAttrs(this.virtualFileInput);\n      this.registerOnChangeFn(this.updateInnerValue);\n    }\n  }\n\n\n  /**\n   * Remove event listener when the component is destroyed\n   */\n  public ngOnDestroy(): void {\n    // istanbul ignore else\n    if (this.virtualFileInput) {\n      this.virtualFileInput.removeEventListener('change', this.onVirtualInputElementChange.bind(this));\n    }\n    this.dropProtectionService.remove();\n  }\n\n\n  /**\n   * Handle the 'enter' keydown event\n   *\n   * @param event - The keyboard event\n   */\n  public handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ENTER) {\n      this.promptForFiles();\n      this.elementRef.nativeElement.blur();\n    }\n  }\n\n\n  /**\n   * Open the file selection window when the user interacts\n   */\n  public promptForFiles(): void {\n    this.virtualFileInput.click();\n  }\n\n\n  /**\n   * Remove a loaded file, clear validation and emit event\n   *\n   * @param event - The event\n   */\n  public removeFile(event?: Event): void {\n    if (event) {\n      this.preventAndStopEventPropagation(event);\n    }\n    this.file = undefined;\n    this.clearValidationMessages();\n    this.cleared.emit(true);\n  }\n\n\n  /**\n   * Create a virtual file input\n   *\n   * @return The HTMLInputElement for file collection\n   */\n  private createFileInput(): HTMLInputElement {\n    const input: HTMLInputElement = this.documentService.document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.style.display = 'none';\n    return input;\n  }\n\n\n  /**\n   * Get all selected files from an event\n   *\n   * @param event - The event\n   */\n  private collectFilesFromEvent(event: DragEvent | Event): void {\n    let files: FileList | undefined;\n\n    if (isDragEvent(event)) {\n      files = event.dataTransfer.files;\n    }\n\n    if (event.target && isHTMLInputElement(event.target)) {\n      files = event.target.files ? event.target.files : undefined;\n    }\n\n    if ((!files || files.length  1) {\n      this.selectedMultiple.emit(filesArray);\n      return;\n    }\n\n    const file = filesArray[0] ? filesArray[0] /* istanbul ignore next - Unreachable */ : undefined;\n\n    // istanbul ignore else\n    if (file) {\n      const newFile = new TsSelectedFile(\n        file,\n        this.dimensionConstraints,\n        this.acceptedTypes,\n        this.maximumKilobytesPerFile,\n        this._ratioConstraints);\n\n      newFile.fileLoaded$.pipe(\n        filter((t: TsSelectedFile | undefined): t is TsSelectedFile => !!t),\n        untilComponentDestroyed(this),\n      ).subscribe((f) => {\n        this.formControl.setValue(f.file);\n        this.selected.emit(f);\n        this.setUpNewFile(f);\n      });\n    }\n  }\n\n  /**\n   * Register our custom onChange function\n   *\n   * @param fn - The onChange function\n   */\n  private registerOnChangeFn(fn: Function): void {\n    // istanbul ignore else\n    if (this.formControl) {\n      this.formControl.registerOnChange(fn);\n    }\n  }\n\n\n  /**\n   * Set file and set up preview and validations\n   *\n   * @param file - The file\n   */\n  private setUpNewFile(file: TsSelectedFile): void {\n    if (!file) {\n      return;\n    }\n    this.file = file;\n    this.setValidationMessages(file);\n    this.changeDetectorRef.markForCheck();\n  }\n\n\n  /**\n   * Listen for changes to the virtual input\n   *\n   * @param event - The event\n   */\n  private onVirtualInputElementChange(event: Event): void {\n    this.collectFilesFromEvent(event);\n    this.virtualFileInput.value = '';\n  }\n\n\n  /*\n   * Stops event propogation\n   */\n  private preventAndStopEventPropagation(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n\n  /**\n   * Update the attributes of the virtual file input based on @Inputs\n   *\n   * @param input - The HTML input element\n   */\n  private updateVirtualFileInputAttrs(input: HTMLInputElement): void {\n    const hasMultipleSetting: boolean = input.hasAttribute('multiple');\n\n    // Should set multiple\n    // istanbul ignore else\n    if (this.multiple && !hasMultipleSetting) {\n      this.virtualFileInput.setAttribute('multiple', 'true');\n    }\n\n    // Should remove multiple\n    // istanbul ignore else\n    if (!this.multiple && hasMultipleSetting) {\n      this.virtualFileInput.removeAttribute('multiple');\n    }\n\n    // Should set accept\n    // istanbul ignore else\n    if (this.acceptedTypes) {\n      this.virtualFileInput.setAttribute('accept', this.acceptedTypes.toString());\n    }\n  }\n\n\n  /**\n   * Set validation messages\n   *\n   * @param file - The file\n   */\n  private setValidationMessages(file: TsSelectedFile | undefined): void {\n    if (!file) {\n      return;\n    }\n\n    const errors: ValidationErrors = {};\n    const responses: {[key: string]: ValidationErrors} = {\n      fileSize: {\n        valid: false,\n        actual: file.size,\n        max: this.maximumKilobytesPerFile,\n      },\n      fileType: {\n        valid: false,\n        actual: file.mimeType,\n        accepted: this.acceptedTypes.join(', '),\n      },\n      imageDimensions: {\n        valid: false,\n        actual: file.dimensions,\n      },\n      imageRatio: {\n        valid: false,\n        actual: file.width / file.height,\n      },\n    };\n\n    const validations = Object.keys(file.validations);\n\n    for (let i = 0; i  | undefined): Array | undefined {\n    if (!ratios) {\n      return;\n    }\n    const parsedImageRatio: Array = [];\n    ratios.map((r) => parsedImageRatio.push({\n      widthRatio: Number(r.split(':')[0]),\n      heightRatio: Number(r.split(':')[1]),\n    }));\n    return parsedImageRatio;\n  }\n\n  /**\n   * Parse ratio from Array of ImageRatio to Array of string\n   * @param ratios - Array of ImageRatio\n   * @return - Array of string\n   */\n\n  private parseRatioToString(ratios: Array | undefined): Array | undefined {\n    if (!ratios) {\n      return;\n    }\n    const parsedRatio: Array = [];\n    ratios.map((r) => parsedRatio.push(r.widthRatio.toString() + ':' + r.heightRatio.toString()));\n    return parsedRatio;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KeyboardEvent.html":{"url":"interfaces/KeyboardEvent.html","title":"interface - KeyboardEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  KeyboardEvent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/autocomplete/autocomplete.component.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/autocomplete/autocomplete.component.ts:39\n                            \n                        \n            \n        \n\n\n    \n\n    \n        Autocomplete\n\n\n\n\nTable of Contents\n\nBasic usage with a FormControl\nAllow multiple selections\nSeed selected values\nShow the progress indicator\nCustomize how the selected value is displayed\nEvent driven\nShow a 'no results' validation error\nMinimum required character count\n\n\nBasic usage with a FormControl\na) Pass an array of available options in. These are the options displayed to the user in the\n   dropdown.\nb) Create a local reference to the autocomplete component.\n\nc) Subscribe to the query events coming from the autocomplete. This is a stream of query strings\nentered by the user. This stream is debounced and de-duped by default.\ninterface OptionType {\n  id: string;\n  login: string;\n  [key: string]: any;\n}\n\n// Create a reference to the autocomplete and pass in a typing for the options\n@ViewChild('auto')\npublic auto: TsAutocompleteComponent;\n\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      // Only hit the API if a query was sent in\n      if (term) {\n        // Start the progress indicator\n        this.inProgress = true;\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              // Stop the progress indicator\n              this.inProgress = false;\n              return response['items'];\n            }),\n          )\n      } else {\n        // If no query was passed in, reset the search results and stop the progress indicator\n        this.inProgress = false;\n        return of([]);\n      }\n    }),\n  )\n;\nChange the debounce delay by setting debounceDelay.\n\nAllow multiple selections\nTo allow multiple selections, pass in a comparator function. This function should match the type {@link TsAutocompleteComparatorFn} which has the basic signature of (v: any) => string.\nThis comparator function will be used by the autocomplete to determine if a selection is a\nduplicate. It is also used as the trackBy function when looping through options.\nSeed selected values\nTo seed initial values, pass the array of selections to initialSelections:\nShow the progress indicator\nShow a progress indicator by toggling the showProgress value:\nthis.isInProgress = true;Customize how the selected value is displayed\nThe UI display of selected options can be changed by passing in a custom displayWith function.\nThis function should match {@link TsAutocompleteFormatterFn} which has the signature of (v) =>\nstring;\n\n v.login\"\n>Event driven\nIf a FormControl isn't needed, you can subscribe to events directly:\nadded(chip) {\n  console.log('Selection made!', chip);\n}\n\nremoved(chip) {\n  console.log('Selection removed!', chip);\n}\n\nchange(selections) {\n  console.log('Selection was changed!', selections);\n}Show a 'no results' validation error\nIf no results are found, set a validation error on the FormControl:\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      if (term) {\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              const items = response['items'];\n\n              // If no results are found, notify the user via a validation message\n              if (items.length Minimum required character count\nBy default, two characters must be entered before a query is emitted. This value can be overridden:\n\n    \n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  MatAutocomplete,\n  MatAutocompleteSelectedEvent,\n  MatAutocompleteTrigger,\n} from '@angular/material/autocomplete';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  coerceArray,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  arrayContainsObject,\n  isFunction,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\nexport interface KeyboardEvent {\n  [key: string]: any;\n}\n\nexport interface MouseEvent {\n  [key: string]: any;\n}\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} formatter function\n */\nexport type TsAutocompleteFormatterFn = (value: any) => string;\n\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} comparator function\n */\nexport type TsAutocompleteComparatorFn = (value: any) => string;\n\n\nexport class TsAutocompleteSelectedEvent extends MatAutocompleteSelectedEvent {}\n\n\n/**\n * The autocomplete UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-autocomplete`: The primary container\n * - `qa-autocomplete-input`: The input element\n * - `qa-autocomplete-spinner`: The progress indicator\n * - `qa-autocomplete-chip`: An individual selection 'chip'\n * - `qa-autocomplete-options`: The container for the list of options\n * - `qa-autocomplete-option`: An individual option from the list\n * - `qa-autocomplete-hint`: The input hint\n * - `qa-autocomplete-validation-messages`: The container for validation messages\n *\n * @example\n *  v.name\"\n *              hint=\"Begin typing to search..\"\n *              label=\"Select options:\"\n *              multiple=\"(v) => v.id\"\n *              name=\"product selections\"\n *              options=\"[{}, {}, ...]\"\n *              selectionsControl=\"myForm.get('myControl')\"\n *              [showProgress]=\"inProgress\"\n *              theme=\"primary\"\n *              initialSelections=\"[{}]\"\n *              (optionSelected)=\"mySelected($event)\"\n *              (optionRemoved)=\"myRemoved($event)\"\n *              (selection)=\"mySelection($event)\"\n *              (query)=\"myQuery($event)\"\n * >\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  host: {\n    class: 'ts-autocomplete',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsAutocomplete',\n})\nexport class TsAutocompleteComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Management of the query string\n   */\n  public querySubject: BehaviorSubject = new BehaviorSubject('');\n\n  /**\n   * Store the search query\n   */\n  public searchQuery!: string;\n\n  /**\n   * Define if the chips/selections should be selectable\n   */\n  public selectableChips: boolean = false;\n\n  /**\n   * Store the selected options\n   */\n  public selectedOptions: OptionType[] = [];\n\n  /**\n   * Store the formatter function for the UI display\n   */\n  private uiFormatFn!: (value: OptionType) => string;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocomplete')\n  public autocomplete!: MatAutocomplete;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocompleteTrigger')\n  set autocompleteTrigger(value: MatAutocompleteTrigger) {\n    this.trigger = value;\n  }\n  get autocompleteTrigger(): MatAutocompleteTrigger {\n    return this.trigger;\n  }\n  private trigger!: MatAutocompleteTrigger;\n\n  /**\n   * Provide direct access to the input\n   */\n  @ViewChild('input')\n  public input!: ElementRef;\n\n  /**\n   * Define a debounce delay for the query\n   */\n  @Input()\n  public set debounceDelay(value: number) {\n    this._debounceDelay = coerceNumberProperty(value);\n  }\n  public get debounceDelay(): number {\n    return this._debounceDelay;\n  }\n  private _debounceDelay: number = 200;\n\n  /**\n   * A function to output the UI text from the selected item\n   *\n   * When undefined the full selection object will be used as the display value\n   */\n  @Input()\n  public set displayWith(value: TsAutocompleteFormatterFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this.uiFormatFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'displayWith' must be passed a function.`);\n      }\n    }\n  }\n  public get displayWith(): TsAutocompleteFormatterFn {\n    return this.uiFormatFn;\n  }\n\n  /**\n   * Define a hint for the input\n   */\n  // FIXME: Fix potential overlap of hint and error messages\n  @Input()\n  public hint: string | undefined;\n\n  /**\n   * Define the placeholder/label\n   */\n  @Input()\n  public label: string | undefined;\n\n  /**\n   * Define a minimum character count for queries\n   */\n  @Input()\n  public set minimumCharacters(value: number) {\n    this._minimumCharacters = coerceNumberProperty(value);\n  }\n  public get minimumCharacters(): number {\n    return this._minimumCharacters;\n  }\n  private _minimumCharacters: number = 2;\n\n  /**\n   * Define if multiple selections are allowed by passing in a comparator function\n   */\n  @Input()\n  public set multiple(v: TsAutocompleteComparatorFn) {\n    if (!v) {\n      return;\n    }\n\n    if (isFunction(v)) {\n      this.comparatorFn = v;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'multiple' must be passed a 'TsAutocompleteComparatorFn' function.`);\n      }\n    }\n  }\n  public get multiple(): TsAutocompleteComparatorFn {\n    return this.comparatorFn;\n  }\n  private comparatorFn!: TsAutocompleteComparatorFn;\n\n  /**\n   * Define the name attribute value\n   */\n  @Input()\n  public name: string | undefined;\n\n  /**\n   * The list of options to display in the drop down\n   */\n  @Input()\n  public options!: OptionType[];\n\n  /**\n   * Define the form control to save selections to\n   */\n  @Input()\n  public set selectionsControl(value: FormControl) {\n    if (!value) {\n      return;\n    }\n\n    this._selectionsControl = value;\n    /*\n     *console.log('set selectionsControl: ', this.selectionsControl);\n     */\n  }\n  public get selectionsControl(): FormControl {\n    return this._selectionsControl;\n  }\n  private _selectionsControl: FormControl = new FormControl();\n\n  /**\n   * Define if the progress spinner should be active\n   */\n  @Input()\n  public showProgress: boolean = false;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define items that should be selected when the component loads\n   */\n  @Input()\n  public set initialSelections(selections: OptionType[]) {\n    // istanbul ignore else\n    if (selections) {\n      // Seed the array\n      this.selectedOptions = coerceArray(selections.slice());\n\n      // istanbul ignore else\n      if (this.selectionsControl && this.selectionsControl.setValue) {\n        // Seed the formControl\n        this.selectionsControl.setValue(this.selectedOptions);\n      }\n    }\n  }\n\n  /**\n   * Emit the selected chip\n   */\n  @Output()\n  public optionSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the removed chip\n   */\n  @Output()\n  public optionRemoved: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the current selection\n   */\n  @Output()\n  public selection: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the query string\n   */\n  @Output()\n  public query: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Subscribe to the querySubject and pass values to the query emitter\n   *\n   * NOTE: When an option is selected, the full selected value is piped through this stream\n   * somehow. Have not figured out why. Best guess is it's something due to the `matAutocomplete`\n   * directive. For now, we are filtering out anything that is not a string.\n   */\n  public ngAfterViewInit(): void {\n    // Take a stream of query changes\n    this.querySubject.pipe(\n      untilComponentDestroyed(this),\n      filter((v) => (typeof v === 'string') && v.length >= this.minimumCharacters),\n      // Debounce the query changes\n      debounceTime(this.debounceDelay),\n      // Only allow a query through if it is different from the previous query\n      distinctUntilChanged(),\n    ).subscribe((query: string) => {\n      this.query.next(query);\n    });\n\n    // Trigger a change detection cycle if the formControl value was changed dynamically\n    // istanbul ignore else\n    if (this.selectionsControl) {\n      this.selectionsControl.valueChanges.pipe(\n        untilComponentDestroyed(this),\n      ).subscribe((value: OptionType[]) => {\n        this.selectedOptions = value;\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Select an option\n   *\n   * @param event - The selection event from the underlying MatAutocomplete\n   */\n  public selectOption(event: TsAutocompleteSelectedEvent): void {\n    // The selected option\n    const selection: OptionType = event.option.value;\n\n    // Stop the flow if the selection already exists in the array\n    if (arrayContainsObject(selection, this.selectedOptions, this.comparatorFn)) {\n      // Set an error on the control to let the user know they chose a duplicate option\n      // istanbul ignore else\n      if (this.selectionsControl) {\n        this.setDuplicateError(this.selectionsControl, selection, this.uiFormatFn);\n      }\n\n      return;\n    }\n\n\n    // Add to the displayed selection chips\n    this.selectedOptions.push(selection);\n\n    // If supporting multiple selections, reset the input text value\n    if (this.multiple) {\n      this.resetSearch();\n    }\n\n    // Update the form control\n    // istanbul ignore else\n    if (this.selectionsControl && this.selectionsControl.setValue) {\n      this.selectionsControl.setValue(this.selectedOptions);\n    }\n\n    // Notify consumers about changes\n    this.optionSelected.emit(event.option.value);\n    this.selection.emit(this.selectedOptions);\n  }\n\n\n  /**\n   * Deselect an option\n   *\n   * @param option - The option to deselect\n   */\n  public deselectOption(option: OptionType): void {\n    // Find the key of the selection in the selectedOptions array\n    const index = this.selectedOptions.indexOf(option);\n\n    // If not found\n    if (index \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mask.html":{"url":"interfaces/Mask.html","title":"interface - Mask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mask\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/mask/mask.directive.ts\n        \n\n            \n                Description\n            \n            \n                An individual mask definition\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mask\n                                \n                                \n                                            Optional\n                                        unmaskRegex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mask\n                                    \n                                \n                                \n                                    \n                                        mask:     (RegExp | string)[] | MaskFunction | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (RegExp | string)[] | MaskFunction | \"undefined\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unmaskRegex\n                                    \n                                \n                                \n                                    \n                                        unmaskRegex:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Mask\n\n\n\n\nTable of Contents\n\nBasic usage\nSupported input types\nDisable decimal support\nDisable sanitation\n\n\nBasic usage\nAttach the directive to an input and pass in a mask type:\n\nAvailable mask types:\n\n\n\nName\nExample format\n\n\n\n\nphone\n(900) 000-0000\n\n\ncurrency\n$0,000[.00]\n\n\nnumber\n0,000[.00]\n\n\npercentage\n0,000[.00]%\n\n\npostal\n00000|00000-0000\n\n\n\nSupported input types\n\ntext\ntel\nurl\npassword\nsearch\n\nDisable decimal support\n\nThis only effects the following masks: currency|number|percentage. By default, these masks\nsupport decimals.\n\nSet the allowDecimal flag to false:\n\nNOTE: You must use brackets [] for the allowDecimal flag.\n\nDisable sanitation\nBy default, the mask is removed from the string before it is saved to the model. To save the\nformatted value, set the sanitizeValue flag to false:\n\n    \n\n    \n        import {\n  Directive,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  isDevMode,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor,\n} from '@angular/forms';\nimport { createTextMaskInputElement } from 'text-mask-core/dist/textMaskCore';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\n\n\nconst NUMBER_ONLY_REGEX: RegExp = /[^0-9]/g;\nconst NUMBER_WITH_DECIMAL_REGEX: RegExp = /[^0-9.]/g;\n\n/**\n * A function that returns an array of RegExp (used to determine postal code RegExp)\n */\nexport type MaskFunction = (value: string) => (RegExp|string)[];\n\n/**\n * An individual mask definition\n */\nexport interface Mask {\n  mask: (RegExp|string)[] | MaskFunction | false;\n  unmaskRegex?: RegExp;\n}\n\n/**\n * The collection of masks\n */\nexport interface MaskCollection {\n  [key: string]: Mask;\n}\n\n/**\n * Define the allowed mask shortcut option\n */\nexport type MaskShortcutOptions\n  = 'phone'\n  | 'currency'\n  | 'number'\n  | 'percentage'\n  | 'postal'\n  | 'default' // matches all characters\n;\n\n/**\n * Create an array used to verify the passed in shortcut is valid\n */\nconst allowedMaskShorcuts: MaskShortcutOptions[] = [\n  'phone',\n  'currency',\n  'number',\n  'percentage',\n  'postal',\n  'default',\n];\n\n/**\n * Value accessor implementation to provide to the directive\n */\n/* tslint:disable:no-use-before-declare */\nexport const MASKED_INPUT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsMaskDirective),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n@Directive({\n  host: {\n    '(input)': 'onInput($event.target.value)',\n    '(blur)': 'onTouched()',\n  },\n  selector: '[tsMask]',\n  exportAs: 'tsMask',\n  providers: [MASKED_INPUT_VALUE_ACCESSOR],\n})\nexport class TsMaskDirective implements ControlValueAccessor, OnChanges {\n  /**\n   * Store the current mask\n   */\n  private currentMask!: Mask;\n\n  /**\n   * Store a reference to the input element\n   */\n  private inputElement!: HTMLInputElement;\n\n  /**\n   * Store the last value for comparison\n   */\n  private lastValue!: string;\n\n  /**\n   * Store the selected mask name\n   */\n  private maskName!: MaskShortcutOptions;\n\n  /**\n   * Base settings for the mask\n   */\n  private textMaskConfig: any = {\n    mask: null,\n    guide: false,\n  };\n\n  /**\n   * Store the mask instance\n   */\n  private textMaskInputElement: any;\n\n  /**\n   * Define if decimals are allowed in numbers/currency/percentage\n   */\n  @Input()\n  public allowDecimal: boolean = true;\n\n  /**\n   * Define if the value should be sanitized before saving to the model\n   */\n  @Input()\n  public sanitizeValue: boolean = true;\n\n  /**\n   * Define a mask\n   */\n  @Input()\n  set tsMask(value: MaskShortcutOptions) {\n    if (!value) {\n      return;\n    }\n\n    // Verify value is allowed\n    if (isDevMode() && (allowedMaskShorcuts.indexOf(value)  any = (value: any) => {};\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public onTouched: (value: any) => any = (value: any) => {};\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public registerOnChange(fn: (value: any) => any): void {\n    this.onChange = fn;\n  }\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public registerOnTouched(fn: () => any): void {\n    this.onTouched = fn;\n  }\n\n\n  /**\n   * Create the mask\n   *\n   * @param create - If the mask should be created\n   */\n  private setupMask(create?: boolean): void {\n    // istanbul ignore else\n    if (!this.inputElement) {\n      this.inputElement = this.elementRef.nativeElement;\n    }\n\n    // istanbul ignore else\n    if (this.inputElement && create) {\n      const maskOptions = Object.assign({inputElement: this.inputElement}, this.textMaskConfig);\n      // Initialize the mask\n      this.textMaskInputElement = createTextMaskInputElement(maskOptions);\n    }\n  }\n\n\n  /**\n   * Remove the mask if needed\n   *\n   * @param value - The value to clean\n   * @param regex - The RegExp to use to clean the value\n   * @return The clean value\n   */\n  private cleanValue(value: string, regex?: RegExp): string {\n    return regex ? value.replace(new RegExp(regex), '') : value;\n  }\n\n\n  /**\n   * Helper to determine the correct postal code match\n   *\n   * @param value - The current postal code value\n   * @return The correct mask\n   */\n  private determinePostalMask(value: string): (RegExp|string)[] {\n    if (value.length \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MaskCollection.html":{"url":"interfaces/MaskCollection.html","title":"interface - MaskCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MaskCollection\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/mask/mask.directive.ts\n        \n\n            \n                Description\n            \n            \n                The collection of masks\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    Mask\n\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/mask/mask.directive.ts:38\n                            \n                        \n            \n        \n\n\n    \n\n    \n        Mask\n\n\n\n\nTable of Contents\n\nBasic usage\nSupported input types\nDisable decimal support\nDisable sanitation\n\n\nBasic usage\nAttach the directive to an input and pass in a mask type:\n\nAvailable mask types:\n\n\n\nName\nExample format\n\n\n\n\nphone\n(900) 000-0000\n\n\ncurrency\n$0,000[.00]\n\n\nnumber\n0,000[.00]\n\n\npercentage\n0,000[.00]%\n\n\npostal\n00000|00000-0000\n\n\n\nSupported input types\n\ntext\ntel\nurl\npassword\nsearch\n\nDisable decimal support\n\nThis only effects the following masks: currency|number|percentage. By default, these masks\nsupport decimals.\n\nSet the allowDecimal flag to false:\n\nNOTE: You must use brackets [] for the allowDecimal flag.\n\nDisable sanitation\nBy default, the mask is removed from the string before it is saved to the model. To save the\nformatted value, set the sanitizeValue flag to false:\n\n    \n\n    \n        import {\n  Directive,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  isDevMode,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor,\n} from '@angular/forms';\nimport { createTextMaskInputElement } from 'text-mask-core/dist/textMaskCore';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\n\n\nconst NUMBER_ONLY_REGEX: RegExp = /[^0-9]/g;\nconst NUMBER_WITH_DECIMAL_REGEX: RegExp = /[^0-9.]/g;\n\n/**\n * A function that returns an array of RegExp (used to determine postal code RegExp)\n */\nexport type MaskFunction = (value: string) => (RegExp|string)[];\n\n/**\n * An individual mask definition\n */\nexport interface Mask {\n  mask: (RegExp|string)[] | MaskFunction | false;\n  unmaskRegex?: RegExp;\n}\n\n/**\n * The collection of masks\n */\nexport interface MaskCollection {\n  [key: string]: Mask;\n}\n\n/**\n * Define the allowed mask shortcut option\n */\nexport type MaskShortcutOptions\n  = 'phone'\n  | 'currency'\n  | 'number'\n  | 'percentage'\n  | 'postal'\n  | 'default' // matches all characters\n;\n\n/**\n * Create an array used to verify the passed in shortcut is valid\n */\nconst allowedMaskShorcuts: MaskShortcutOptions[] = [\n  'phone',\n  'currency',\n  'number',\n  'percentage',\n  'postal',\n  'default',\n];\n\n/**\n * Value accessor implementation to provide to the directive\n */\n/* tslint:disable:no-use-before-declare */\nexport const MASKED_INPUT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsMaskDirective),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n@Directive({\n  host: {\n    '(input)': 'onInput($event.target.value)',\n    '(blur)': 'onTouched()',\n  },\n  selector: '[tsMask]',\n  exportAs: 'tsMask',\n  providers: [MASKED_INPUT_VALUE_ACCESSOR],\n})\nexport class TsMaskDirective implements ControlValueAccessor, OnChanges {\n  /**\n   * Store the current mask\n   */\n  private currentMask!: Mask;\n\n  /**\n   * Store a reference to the input element\n   */\n  private inputElement!: HTMLInputElement;\n\n  /**\n   * Store the last value for comparison\n   */\n  private lastValue!: string;\n\n  /**\n   * Store the selected mask name\n   */\n  private maskName!: MaskShortcutOptions;\n\n  /**\n   * Base settings for the mask\n   */\n  private textMaskConfig: any = {\n    mask: null,\n    guide: false,\n  };\n\n  /**\n   * Store the mask instance\n   */\n  private textMaskInputElement: any;\n\n  /**\n   * Define if decimals are allowed in numbers/currency/percentage\n   */\n  @Input()\n  public allowDecimal: boolean = true;\n\n  /**\n   * Define if the value should be sanitized before saving to the model\n   */\n  @Input()\n  public sanitizeValue: boolean = true;\n\n  /**\n   * Define a mask\n   */\n  @Input()\n  set tsMask(value: MaskShortcutOptions) {\n    if (!value) {\n      return;\n    }\n\n    // Verify value is allowed\n    if (isDevMode() && (allowedMaskShorcuts.indexOf(value)  any = (value: any) => {};\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public onTouched: (value: any) => any = (value: any) => {};\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public registerOnChange(fn: (value: any) => any): void {\n    this.onChange = fn;\n  }\n\n\n  /**\n   * Set up for ValueChangeAccessor\n   */\n  public registerOnTouched(fn: () => any): void {\n    this.onTouched = fn;\n  }\n\n\n  /**\n   * Create the mask\n   *\n   * @param create - If the mask should be created\n   */\n  private setupMask(create?: boolean): void {\n    // istanbul ignore else\n    if (!this.inputElement) {\n      this.inputElement = this.elementRef.nativeElement;\n    }\n\n    // istanbul ignore else\n    if (this.inputElement && create) {\n      const maskOptions = Object.assign({inputElement: this.inputElement}, this.textMaskConfig);\n      // Initialize the mask\n      this.textMaskInputElement = createTextMaskInputElement(maskOptions);\n    }\n  }\n\n\n  /**\n   * Remove the mask if needed\n   *\n   * @param value - The value to clean\n   * @param regex - The RegExp to use to clean the value\n   * @return The clean value\n   */\n  private cleanValue(value: string, regex?: RegExp): string {\n    return regex ? value.replace(new RegExp(regex), '') : value;\n  }\n\n\n  /**\n   * Helper to determine the correct postal code match\n   *\n   * @param value - The current postal code value\n   * @return The correct mask\n   */\n  private determinePostalMask(value: string): (RegExp|string)[] {\n    if (value.length \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseEvent.html":{"url":"interfaces/MouseEvent.html","title":"interface - MouseEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseEvent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/autocomplete/autocomplete.component.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/autocomplete/autocomplete.component.ts:43\n                            \n                        \n            \n        \n\n\n    \n\n    \n        Autocomplete\n\n\n\n\nTable of Contents\n\nBasic usage with a FormControl\nAllow multiple selections\nSeed selected values\nShow the progress indicator\nCustomize how the selected value is displayed\nEvent driven\nShow a 'no results' validation error\nMinimum required character count\n\n\nBasic usage with a FormControl\na) Pass an array of available options in. These are the options displayed to the user in the\n   dropdown.\nb) Create a local reference to the autocomplete component.\n\nc) Subscribe to the query events coming from the autocomplete. This is a stream of query strings\nentered by the user. This stream is debounced and de-duped by default.\ninterface OptionType {\n  id: string;\n  login: string;\n  [key: string]: any;\n}\n\n// Create a reference to the autocomplete and pass in a typing for the options\n@ViewChild('auto')\npublic auto: TsAutocompleteComponent;\n\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      // Only hit the API if a query was sent in\n      if (term) {\n        // Start the progress indicator\n        this.inProgress = true;\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              // Stop the progress indicator\n              this.inProgress = false;\n              return response['items'];\n            }),\n          )\n      } else {\n        // If no query was passed in, reset the search results and stop the progress indicator\n        this.inProgress = false;\n        return of([]);\n      }\n    }),\n  )\n;\nChange the debounce delay by setting debounceDelay.\n\nAllow multiple selections\nTo allow multiple selections, pass in a comparator function. This function should match the type {@link TsAutocompleteComparatorFn} which has the basic signature of (v: any) => string.\nThis comparator function will be used by the autocomplete to determine if a selection is a\nduplicate. It is also used as the trackBy function when looping through options.\nSeed selected values\nTo seed initial values, pass the array of selections to initialSelections:\nShow the progress indicator\nShow a progress indicator by toggling the showProgress value:\nthis.isInProgress = true;Customize how the selected value is displayed\nThe UI display of selected options can be changed by passing in a custom displayWith function.\nThis function should match {@link TsAutocompleteFormatterFn} which has the signature of (v) =>\nstring;\n\n v.login\"\n>Event driven\nIf a FormControl isn't needed, you can subscribe to events directly:\nadded(chip) {\n  console.log('Selection made!', chip);\n}\n\nremoved(chip) {\n  console.log('Selection removed!', chip);\n}\n\nchange(selections) {\n  console.log('Selection was changed!', selections);\n}Show a 'no results' validation error\nIf no results are found, set a validation error on the FormControl:\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      if (term) {\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              const items = response['items'];\n\n              // If no results are found, notify the user via a validation message\n              if (items.length Minimum required character count\nBy default, two characters must be entered before a query is emitted. This value can be overridden:\n\n    \n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  MatAutocomplete,\n  MatAutocompleteSelectedEvent,\n  MatAutocompleteTrigger,\n} from '@angular/material/autocomplete';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  coerceArray,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  arrayContainsObject,\n  isFunction,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\nexport interface KeyboardEvent {\n  [key: string]: any;\n}\n\nexport interface MouseEvent {\n  [key: string]: any;\n}\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} formatter function\n */\nexport type TsAutocompleteFormatterFn = (value: any) => string;\n\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} comparator function\n */\nexport type TsAutocompleteComparatorFn = (value: any) => string;\n\n\nexport class TsAutocompleteSelectedEvent extends MatAutocompleteSelectedEvent {}\n\n\n/**\n * The autocomplete UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-autocomplete`: The primary container\n * - `qa-autocomplete-input`: The input element\n * - `qa-autocomplete-spinner`: The progress indicator\n * - `qa-autocomplete-chip`: An individual selection 'chip'\n * - `qa-autocomplete-options`: The container for the list of options\n * - `qa-autocomplete-option`: An individual option from the list\n * - `qa-autocomplete-hint`: The input hint\n * - `qa-autocomplete-validation-messages`: The container for validation messages\n *\n * @example\n *  v.name\"\n *              hint=\"Begin typing to search..\"\n *              label=\"Select options:\"\n *              multiple=\"(v) => v.id\"\n *              name=\"product selections\"\n *              options=\"[{}, {}, ...]\"\n *              selectionsControl=\"myForm.get('myControl')\"\n *              [showProgress]=\"inProgress\"\n *              theme=\"primary\"\n *              initialSelections=\"[{}]\"\n *              (optionSelected)=\"mySelected($event)\"\n *              (optionRemoved)=\"myRemoved($event)\"\n *              (selection)=\"mySelection($event)\"\n *              (query)=\"myQuery($event)\"\n * >\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  host: {\n    class: 'ts-autocomplete',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsAutocomplete',\n})\nexport class TsAutocompleteComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Management of the query string\n   */\n  public querySubject: BehaviorSubject = new BehaviorSubject('');\n\n  /**\n   * Store the search query\n   */\n  public searchQuery!: string;\n\n  /**\n   * Define if the chips/selections should be selectable\n   */\n  public selectableChips: boolean = false;\n\n  /**\n   * Store the selected options\n   */\n  public selectedOptions: OptionType[] = [];\n\n  /**\n   * Store the formatter function for the UI display\n   */\n  private uiFormatFn!: (value: OptionType) => string;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocomplete')\n  public autocomplete!: MatAutocomplete;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocompleteTrigger')\n  set autocompleteTrigger(value: MatAutocompleteTrigger) {\n    this.trigger = value;\n  }\n  get autocompleteTrigger(): MatAutocompleteTrigger {\n    return this.trigger;\n  }\n  private trigger!: MatAutocompleteTrigger;\n\n  /**\n   * Provide direct access to the input\n   */\n  @ViewChild('input')\n  public input!: ElementRef;\n\n  /**\n   * Define a debounce delay for the query\n   */\n  @Input()\n  public set debounceDelay(value: number) {\n    this._debounceDelay = coerceNumberProperty(value);\n  }\n  public get debounceDelay(): number {\n    return this._debounceDelay;\n  }\n  private _debounceDelay: number = 200;\n\n  /**\n   * A function to output the UI text from the selected item\n   *\n   * When undefined the full selection object will be used as the display value\n   */\n  @Input()\n  public set displayWith(value: TsAutocompleteFormatterFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this.uiFormatFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'displayWith' must be passed a function.`);\n      }\n    }\n  }\n  public get displayWith(): TsAutocompleteFormatterFn {\n    return this.uiFormatFn;\n  }\n\n  /**\n   * Define a hint for the input\n   */\n  // FIXME: Fix potential overlap of hint and error messages\n  @Input()\n  public hint: string | undefined;\n\n  /**\n   * Define the placeholder/label\n   */\n  @Input()\n  public label: string | undefined;\n\n  /**\n   * Define a minimum character count for queries\n   */\n  @Input()\n  public set minimumCharacters(value: number) {\n    this._minimumCharacters = coerceNumberProperty(value);\n  }\n  public get minimumCharacters(): number {\n    return this._minimumCharacters;\n  }\n  private _minimumCharacters: number = 2;\n\n  /**\n   * Define if multiple selections are allowed by passing in a comparator function\n   */\n  @Input()\n  public set multiple(v: TsAutocompleteComparatorFn) {\n    if (!v) {\n      return;\n    }\n\n    if (isFunction(v)) {\n      this.comparatorFn = v;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'multiple' must be passed a 'TsAutocompleteComparatorFn' function.`);\n      }\n    }\n  }\n  public get multiple(): TsAutocompleteComparatorFn {\n    return this.comparatorFn;\n  }\n  private comparatorFn!: TsAutocompleteComparatorFn;\n\n  /**\n   * Define the name attribute value\n   */\n  @Input()\n  public name: string | undefined;\n\n  /**\n   * The list of options to display in the drop down\n   */\n  @Input()\n  public options!: OptionType[];\n\n  /**\n   * Define the form control to save selections to\n   */\n  @Input()\n  public set selectionsControl(value: FormControl) {\n    if (!value) {\n      return;\n    }\n\n    this._selectionsControl = value;\n    /*\n     *console.log('set selectionsControl: ', this.selectionsControl);\n     */\n  }\n  public get selectionsControl(): FormControl {\n    return this._selectionsControl;\n  }\n  private _selectionsControl: FormControl = new FormControl();\n\n  /**\n   * Define if the progress spinner should be active\n   */\n  @Input()\n  public showProgress: boolean = false;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define items that should be selected when the component loads\n   */\n  @Input()\n  public set initialSelections(selections: OptionType[]) {\n    // istanbul ignore else\n    if (selections) {\n      // Seed the array\n      this.selectedOptions = coerceArray(selections.slice());\n\n      // istanbul ignore else\n      if (this.selectionsControl && this.selectionsControl.setValue) {\n        // Seed the formControl\n        this.selectionsControl.setValue(this.selectedOptions);\n      }\n    }\n  }\n\n  /**\n   * Emit the selected chip\n   */\n  @Output()\n  public optionSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the removed chip\n   */\n  @Output()\n  public optionRemoved: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the current selection\n   */\n  @Output()\n  public selection: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the query string\n   */\n  @Output()\n  public query: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Subscribe to the querySubject and pass values to the query emitter\n   *\n   * NOTE: When an option is selected, the full selected value is piped through this stream\n   * somehow. Have not figured out why. Best guess is it's something due to the `matAutocomplete`\n   * directive. For now, we are filtering out anything that is not a string.\n   */\n  public ngAfterViewInit(): void {\n    // Take a stream of query changes\n    this.querySubject.pipe(\n      untilComponentDestroyed(this),\n      filter((v) => (typeof v === 'string') && v.length >= this.minimumCharacters),\n      // Debounce the query changes\n      debounceTime(this.debounceDelay),\n      // Only allow a query through if it is different from the previous query\n      distinctUntilChanged(),\n    ).subscribe((query: string) => {\n      this.query.next(query);\n    });\n\n    // Trigger a change detection cycle if the formControl value was changed dynamically\n    // istanbul ignore else\n    if (this.selectionsControl) {\n      this.selectionsControl.valueChanges.pipe(\n        untilComponentDestroyed(this),\n      ).subscribe((value: OptionType[]) => {\n        this.selectedOptions = value;\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Select an option\n   *\n   * @param event - The selection event from the underlying MatAutocomplete\n   */\n  public selectOption(event: TsAutocompleteSelectedEvent): void {\n    // The selected option\n    const selection: OptionType = event.option.value;\n\n    // Stop the flow if the selection already exists in the array\n    if (arrayContainsObject(selection, this.selectedOptions, this.comparatorFn)) {\n      // Set an error on the control to let the user know they chose a duplicate option\n      // istanbul ignore else\n      if (this.selectionsControl) {\n        this.setDuplicateError(this.selectionsControl, selection, this.uiFormatFn);\n      }\n\n      return;\n    }\n\n\n    // Add to the displayed selection chips\n    this.selectedOptions.push(selection);\n\n    // If supporting multiple selections, reset the input text value\n    if (this.multiple) {\n      this.resetSearch();\n    }\n\n    // Update the form control\n    // istanbul ignore else\n    if (this.selectionsControl && this.selectionsControl.setValue) {\n      this.selectionsControl.setValue(this.selectedOptions);\n    }\n\n    // Notify consumers about changes\n    this.optionSelected.emit(event.option.value);\n    this.selection.emit(this.selectedOptions);\n  }\n\n\n  /**\n   * Deselect an option\n   *\n   * @param option - The option to deselect\n   */\n  public deselectOption(option: OptionType): void {\n    // Find the key of the selection in the selectedOptions array\n    const index = this.selectedOptions.indexOf(option);\n\n    // If not found\n    if (index \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NavigationItemBase.html":{"url":"interfaces/NavigationItemBase.html","title":"interface - NavigationItemBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NavigationItemBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Base allowed keys for an item passed to the TsNavigationComponent\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alwaysHidden\n                                \n                                \n                                            Optional\n                                        isDisabled\n                                \n                                \n                                            Optional\n                                        isForAdmin\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysHidden\n                                    \n                                \n                                \n                                    \n                                        alwaysHidden:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Define if the item should only be allowed in the secondary navigation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDisabled\n                                    \n                                \n                                \n                                    \n                                        isDisabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define if the item is disabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isForAdmin\n                                    \n                                \n                                \n                                    \n                                        isForAdmin:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define if the item is for admin functionality only\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value to use as the item text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TerminusUIModule.html":{"url":"modules/TerminusUIModule.html","title":"module - TerminusUIModule","body":"\n                   \n\n\n\n\n  Modules\n  TerminusUIModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TerminusUIModule\n\n\n\ncluster_TerminusUIModule_declarations\n\n\n\ncluster_TerminusUIModule_imports\n\n\n\ncluster_TerminusUIModule_exports\n\n\n\ncluster_TerminusUIModule_providers\n\n\n\n\nTsReactiveFormBaseComponent\n\nTsReactiveFormBaseComponent\n\n\n\nTerminusUIModule\n\nTerminusUIModule\n\nTerminusUIModule -->\n\nTsReactiveFormBaseComponent->TerminusUIModule\n\n\n\n\n\nTsAutocompleteModule \n\nTsAutocompleteModule \n\nTsAutocompleteModule  -->\n\nTerminusUIModule->TsAutocompleteModule \n\n\n\n\n\nTsAutofocusModule \n\nTsAutofocusModule \n\nTsAutofocusModule  -->\n\nTerminusUIModule->TsAutofocusModule \n\n\n\n\n\nTsButtonModule \n\nTsButtonModule \n\nTsButtonModule  -->\n\nTerminusUIModule->TsButtonModule \n\n\n\n\n\nTsCSVEntryModule \n\nTsCSVEntryModule \n\nTsCSVEntryModule  -->\n\nTerminusUIModule->TsCSVEntryModule \n\n\n\n\n\nTsCardModule \n\nTsCardModule \n\nTsCardModule  -->\n\nTerminusUIModule->TsCardModule \n\n\n\n\n\nTsChartModule \n\nTsChartModule \n\nTsChartModule  -->\n\nTerminusUIModule->TsChartModule \n\n\n\n\n\nTsCheckboxModule \n\nTsCheckboxModule \n\nTsCheckboxModule  -->\n\nTerminusUIModule->TsCheckboxModule \n\n\n\n\n\nTsConfirmationModule \n\nTsConfirmationModule \n\nTsConfirmationModule  -->\n\nTerminusUIModule->TsConfirmationModule \n\n\n\n\n\nTsCopyModule \n\nTsCopyModule \n\nTsCopyModule  -->\n\nTerminusUIModule->TsCopyModule \n\n\n\n\n\nTsDateRangeModule \n\nTsDateRangeModule \n\nTsDateRangeModule  -->\n\nTerminusUIModule->TsDateRangeModule \n\n\n\n\n\nTsDatepickerModule \n\nTsDatepickerModule \n\nTsDatepickerModule  -->\n\nTerminusUIModule->TsDatepickerModule \n\n\n\n\n\nTsFileUploadModule \n\nTsFileUploadModule \n\nTsFileUploadModule  -->\n\nTerminusUIModule->TsFileUploadModule \n\n\n\n\n\nTsIconButtonModule \n\nTsIconButtonModule \n\nTsIconButtonModule  -->\n\nTerminusUIModule->TsIconButtonModule \n\n\n\n\n\nTsIconModule \n\nTsIconModule \n\nTsIconModule  -->\n\nTerminusUIModule->TsIconModule \n\n\n\n\n\nTsInputModule \n\nTsInputModule \n\nTsInputModule  -->\n\nTerminusUIModule->TsInputModule \n\n\n\n\n\nTsLinkModule \n\nTsLinkModule \n\nTsLinkModule  -->\n\nTerminusUIModule->TsLinkModule \n\n\n\n\n\nTsLoadingOverlayModule \n\nTsLoadingOverlayModule \n\nTsLoadingOverlayModule  -->\n\nTerminusUIModule->TsLoadingOverlayModule \n\n\n\n\n\nTsLoginFormModule \n\nTsLoginFormModule \n\nTsLoginFormModule  -->\n\nTerminusUIModule->TsLoginFormModule \n\n\n\n\n\nTsMaskModule \n\nTsMaskModule \n\nTsMaskModule  -->\n\nTerminusUIModule->TsMaskModule \n\n\n\n\n\nTsMenuModule \n\nTsMenuModule \n\nTsMenuModule  -->\n\nTerminusUIModule->TsMenuModule \n\n\n\n\n\nTsNavigationModule \n\nTsNavigationModule \n\nTsNavigationModule  -->\n\nTerminusUIModule->TsNavigationModule \n\n\n\n\n\nTsPaginatorModule \n\nTsPaginatorModule \n\nTsPaginatorModule  -->\n\nTerminusUIModule->TsPaginatorModule \n\n\n\n\n\nTsRadioGroupModule \n\nTsRadioGroupModule \n\nTsRadioGroupModule  -->\n\nTerminusUIModule->TsRadioGroupModule \n\n\n\n\n\nTsScrollbarsModule \n\nTsScrollbarsModule \n\nTsScrollbarsModule  -->\n\nTerminusUIModule->TsScrollbarsModule \n\n\n\n\n\nTsSearchModule \n\nTsSearchModule \n\nTsSearchModule  -->\n\nTerminusUIModule->TsSearchModule \n\n\n\n\n\nTsSelectModule \n\nTsSelectModule \n\nTsSelectModule  -->\n\nTerminusUIModule->TsSelectModule \n\n\n\n\n\nTsSortModule \n\nTsSortModule \n\nTsSortModule  -->\n\nTerminusUIModule->TsSortModule \n\n\n\n\n\nTsSpacingModule \n\nTsSpacingModule \n\nTsSpacingModule  -->\n\nTerminusUIModule->TsSpacingModule \n\n\n\n\n\nTsTableModule \n\nTsTableModule \n\nTsTableModule  -->\n\nTerminusUIModule->TsTableModule \n\n\n\n\n\nTsToggleModule \n\nTsToggleModule \n\nTsToggleModule  -->\n\nTerminusUIModule->TsToggleModule \n\n\n\n\n\nTsTooltipModule \n\nTsTooltipModule \n\nTsTooltipModule  -->\n\nTerminusUIModule->TsTooltipModule \n\n\n\n\n\nTsValidationMessagesModule \n\nTsValidationMessagesModule \n\nTsValidationMessagesModule  -->\n\nTerminusUIModule->TsValidationMessagesModule \n\n\n\n\n\nTsAutocompleteModule\n\nTsAutocompleteModule\n\nTerminusUIModule -->\n\nTsAutocompleteModule->TerminusUIModule\n\n\n\n\n\nTsAutofocusModule\n\nTsAutofocusModule\n\nTerminusUIModule -->\n\nTsAutofocusModule->TerminusUIModule\n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTerminusUIModule -->\n\nTsButtonModule->TerminusUIModule\n\n\n\n\n\nTsCSVEntryModule\n\nTsCSVEntryModule\n\nTerminusUIModule -->\n\nTsCSVEntryModule->TerminusUIModule\n\n\n\n\n\nTsCardModule\n\nTsCardModule\n\nTerminusUIModule -->\n\nTsCardModule->TerminusUIModule\n\n\n\n\n\nTsChartModule\n\nTsChartModule\n\nTerminusUIModule -->\n\nTsChartModule->TerminusUIModule\n\n\n\n\n\nTsCheckboxModule\n\nTsCheckboxModule\n\nTerminusUIModule -->\n\nTsCheckboxModule->TerminusUIModule\n\n\n\n\n\nTsConfirmationModule\n\nTsConfirmationModule\n\nTerminusUIModule -->\n\nTsConfirmationModule->TerminusUIModule\n\n\n\n\n\nTsCopyModule\n\nTsCopyModule\n\nTerminusUIModule -->\n\nTsCopyModule->TerminusUIModule\n\n\n\n\n\nTsDateRangeModule\n\nTsDateRangeModule\n\nTerminusUIModule -->\n\nTsDateRangeModule->TerminusUIModule\n\n\n\n\n\nTsDatepickerModule\n\nTsDatepickerModule\n\nTerminusUIModule -->\n\nTsDatepickerModule->TerminusUIModule\n\n\n\n\n\nTsFileUploadModule\n\nTsFileUploadModule\n\nTerminusUIModule -->\n\nTsFileUploadModule->TerminusUIModule\n\n\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTerminusUIModule -->\n\nTsIconButtonModule->TerminusUIModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTerminusUIModule -->\n\nTsIconModule->TerminusUIModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTerminusUIModule -->\n\nTsInputModule->TerminusUIModule\n\n\n\n\n\nTsLinkModule\n\nTsLinkModule\n\nTerminusUIModule -->\n\nTsLinkModule->TerminusUIModule\n\n\n\n\n\nTsLoadingOverlayModule\n\nTsLoadingOverlayModule\n\nTerminusUIModule -->\n\nTsLoadingOverlayModule->TerminusUIModule\n\n\n\n\n\nTsLoginFormModule\n\nTsLoginFormModule\n\nTerminusUIModule -->\n\nTsLoginFormModule->TerminusUIModule\n\n\n\n\n\nTsMaskModule\n\nTsMaskModule\n\nTerminusUIModule -->\n\nTsMaskModule->TerminusUIModule\n\n\n\n\n\nTsMenuModule\n\nTsMenuModule\n\nTerminusUIModule -->\n\nTsMenuModule->TerminusUIModule\n\n\n\n\n\nTsNavigationModule\n\nTsNavigationModule\n\nTerminusUIModule -->\n\nTsNavigationModule->TerminusUIModule\n\n\n\n\n\nTsPaginatorModule\n\nTsPaginatorModule\n\nTerminusUIModule -->\n\nTsPaginatorModule->TerminusUIModule\n\n\n\n\n\nTsRadioGroupModule\n\nTsRadioGroupModule\n\nTerminusUIModule -->\n\nTsRadioGroupModule->TerminusUIModule\n\n\n\n\n\nTsScrollbarsModule\n\nTsScrollbarsModule\n\nTerminusUIModule -->\n\nTsScrollbarsModule->TerminusUIModule\n\n\n\n\n\nTsSearchModule\n\nTsSearchModule\n\nTerminusUIModule -->\n\nTsSearchModule->TerminusUIModule\n\n\n\n\n\nTsSelectModule\n\nTsSelectModule\n\nTerminusUIModule -->\n\nTsSelectModule->TerminusUIModule\n\n\n\n\n\nTsSortModule\n\nTsSortModule\n\nTerminusUIModule -->\n\nTsSortModule->TerminusUIModule\n\n\n\n\n\nTsSpacingModule\n\nTsSpacingModule\n\nTerminusUIModule -->\n\nTsSpacingModule->TerminusUIModule\n\n\n\n\n\nTsTableModule\n\nTsTableModule\n\nTerminusUIModule -->\n\nTsTableModule->TerminusUIModule\n\n\n\n\n\nTsToggleModule\n\nTsToggleModule\n\nTerminusUIModule -->\n\nTsToggleModule->TerminusUIModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTerminusUIModule -->\n\nTsTooltipModule->TerminusUIModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTerminusUIModule -->\n\nTsValidationMessagesModule->TerminusUIModule\n\n\n\n\n\nTsValidatorsService\n\nTsValidatorsService\n\nTerminusUIModule -->\n\nTsValidatorsService->TerminusUIModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsReactiveFormBaseComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsValidatorsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsAutocompleteModule\n                            \n                            \n                                    TsAutofocusModule\n                            \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsCSVEntryModule\n                            \n                            \n                                    TsCardModule\n                            \n                            \n                                    TsChartModule\n                            \n                            \n                                    TsCheckboxModule\n                            \n                            \n                                    TsConfirmationModule\n                            \n                            \n                                    TsCopyModule\n                            \n                            \n                                    TsDateRangeModule\n                            \n                            \n                                    TsDatepickerModule\n                            \n                            \n                                    TsFileUploadModule\n                            \n                            \n                                    TsIconButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsInputModule\n                            \n                            \n                                    TsLinkModule\n                            \n                            \n                                    TsLoadingOverlayModule\n                            \n                            \n                                    TsLoginFormModule\n                            \n                            \n                                    TsMaskModule\n                            \n                            \n                                    TsMenuModule\n                            \n                            \n                                    TsNavigationModule\n                            \n                            \n                                    TsPaginatorModule\n                            \n                            \n                                    TsRadioGroupModule\n                            \n                            \n                                    TsScrollbarsModule\n                            \n                            \n                                    TsSearchModule\n                            \n                            \n                                    TsSelectModule\n                            \n                            \n                                    TsSortModule\n                            \n                            \n                                    TsSpacingModule\n                            \n                            \n                                    TsTableModule\n                            \n                            \n                                    TsToggleModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsAutocompleteModule\n                            \n                            \n                                    TsAutofocusModule\n                            \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsCSVEntryModule\n                            \n                            \n                                    TsCardModule\n                            \n                            \n                                    TsChartModule\n                            \n                            \n                                    TsCheckboxModule\n                            \n                            \n                                    TsConfirmationModule\n                            \n                            \n                                    TsCopyModule\n                            \n                            \n                                    TsDateRangeModule\n                            \n                            \n                                    TsDatepickerModule\n                            \n                            \n                                    TsFileUploadModule\n                            \n                            \n                                    TsIconButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsInputModule\n                            \n                            \n                                    TsLinkModule\n                            \n                            \n                                    TsLoadingOverlayModule\n                            \n                            \n                                    TsLoginFormModule\n                            \n                            \n                                    TsMaskModule\n                            \n                            \n                                    TsMenuModule\n                            \n                            \n                                    TsNavigationModule\n                            \n                            \n                                    TsPaginatorModule\n                            \n                            \n                                    TsRadioGroupModule\n                            \n                            \n                                    TsScrollbarsModule\n                            \n                            \n                                    TsSearchModule\n                            \n                            \n                                    TsSelectModule\n                            \n                            \n                                    TsSortModule\n                            \n                            \n                                    TsSpacingModule\n                            \n                            \n                                    TsTableModule\n                            \n                            \n                                    TsToggleModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // Angular imports\nimport { NgModule } from '@angular/core';\n\n// Components\nimport { TsAutocompleteModule } from './autocomplete/autocomplete.module';\nimport { TsAutofocusModule } from './autofocus/autofocus.module';\nimport { TsButtonModule } from './button/button.module';\nimport { TsCardModule } from './card/card.module';\nimport { TsChartModule } from './chart/chart.module';\nimport { TsCheckboxModule } from './checkbox/checkbox.module';\nimport { TsConfirmationModule } from './confirmation/confirmation.module';\nimport { TsCopyModule } from './copy/copy.module';\nimport { TsCSVEntryModule } from './csv-entry/csv-entry.module';\nimport { TsDateRangeModule } from './date-range/date-range.module';\nimport { TsDatepickerModule } from './datepicker/datepicker.module';\nimport { TsFileUploadModule } from './file-upload/file-upload.module';\nimport { TsIconButtonModule } from './icon-button/icon-button.module';\nimport { TsIconModule } from './icon/icon.module';\nimport { TsInputModule } from './input/input.module';\nimport { TsLinkModule } from './link/link.module';\nimport { TsLoadingOverlayModule } from './loading-overlay/loading-overlay.module';\nimport { TsLoginFormModule } from './login-form/login-form.module';\nimport { TsMaskModule } from './mask/mask.module';\nimport { TsMenuModule } from './menu/menu.module';\nimport { TsNavigationModule } from './navigation/navigation.module';\nimport { TsPaginatorModule } from './paginator/paginator.module';\nimport { TsPipesModule } from './pipes/pipes.module';\nimport { TsRadioGroupModule } from './radio-group/radio-group.module';\nimport { TsScrollbarsModule } from './scrollbars/scrollbars.module';\nimport { TsSearchModule } from './search/search.module';\nimport { TsSelectModule } from './select/select.module';\nimport { TsSortModule } from './sort/sort.module';\nimport { TsSpacingModule } from './spacing/spacing.module';\nimport { TsTableModule } from './table/table.module';\nimport { TsToggleModule } from './toggle/toggle.module';\nimport { TsTooltipModule } from './tooltip/tooltip.module';\nimport { TsValidationMessagesModule } from './validation-messages/validation-messages.module';\n// INJECT: UI component to UI module\n// NB! The above line is required for our yeoman generator and should not be changed.\n\nimport { TsValidatorsService } from './validators/validators.service';\nimport { TsReactiveFormBaseComponent } from './utilities/reactive-form-base.component';\n\n@NgModule({\n  imports: [\n    TsAutocompleteModule,\n    TsAutofocusModule,\n    TsButtonModule,\n    TsCardModule,\n    TsChartModule,\n    TsCheckboxModule,\n    TsConfirmationModule,\n    TsCopyModule,\n    TsCSVEntryModule,\n    TsDateRangeModule,\n    TsDatepickerModule,\n    TsFileUploadModule,\n    TsIconButtonModule,\n    TsIconModule,\n    TsInputModule,\n    TsLinkModule,\n    TsLoadingOverlayModule,\n    TsLoginFormModule,\n    TsMaskModule,\n    TsMenuModule,\n    TsNavigationModule,\n    TsPaginatorModule,\n    TsPipesModule,\n    TsRadioGroupModule,\n    TsScrollbarsModule,\n    TsSearchModule,\n    TsSelectModule,\n    TsSortModule,\n    TsSpacingModule,\n    TsTableModule,\n    TsToggleModule,\n    TsTooltipModule,\n    TsValidationMessagesModule,\n    // INJECT: Add UI component module to imports\n    // NB! The above line is required for our yeoman generator and should not be changed.\n  ],\n  declarations: [\n    TsReactiveFormBaseComponent,\n  ],\n  providers: [\n    TsValidatorsService,\n  ],\n  exports: [\n    TsAutocompleteModule,\n    TsAutofocusModule,\n    TsButtonModule,\n    TsCardModule,\n    TsChartModule,\n    TsCheckboxModule,\n    TsConfirmationModule,\n    TsCopyModule,\n    TsCSVEntryModule,\n    TsDateRangeModule,\n    TsDatepickerModule,\n    TsFileUploadModule,\n    TsIconButtonModule,\n    TsIconModule,\n    TsInputModule,\n    TsLinkModule,\n    TsLoadingOverlayModule,\n    TsLoginFormModule,\n    TsMaskModule,\n    TsMenuModule,\n    TsNavigationModule,\n    TsPaginatorModule,\n    TsPipesModule,\n    TsRadioGroupModule,\n    TsScrollbarsModule,\n    TsSearchModule,\n    TsSelectModule,\n    TsSortModule,\n    TsSpacingModule,\n    TsTableModule,\n    TsToggleModule,\n    TsTooltipModule,\n    TsValidationMessagesModule,\n    // INJECT: Add UI component to module exports\n    // NB! The above line is required for our yeoman generator and should not be changed.\n  ],\n})\nexport class TerminusUIModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsAmChartsService.html":{"url":"injectables/TsAmChartsService.html","title":"injectable - TsAmChartsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsAmChartsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart2/amcharts.service.ts\n        \n\n            \n                Description\n            \n            \n                Expose amCharts via a service\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                amCharts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amCharts: TsAmChartsToken)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/chart2/amcharts.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amCharts\n                                                  \n                                                        \n                                                                    TsAmChartsToken\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            amCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        amCharts:     TsAmChartsToken\n\n                    \n                \n                    \n                        \n                            Type :     TsAmChartsToken\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart2/amcharts.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InjectionToken,\n} from '@angular/core';\n\n\nexport interface TsAmChartsToken {\n  core: any;\n  charts: any;\n  maps?: any;\n  themes?: any[];\n}\n\n/**\n * Create an injection token that the consumer can override with their version of Highcharts\n */\nexport const TS_AMCHARTS_TOKEN: InjectionToken = new InjectionToken('amCharts');\n\n\n/**\n * Expose amCharts via a service\n */\n@Injectable()\nexport class TsAmChartsService {\n\n  constructor(\n    @Inject(TS_AMCHARTS_TOKEN) public amCharts: TsAmChartsToken,\n  ) {\n    if (amCharts && amCharts.themes && amCharts.themes.length > 0) {\n      for (const theme of amCharts.themes) {\n        // istanbul ignore else\n        if (theme) {\n          amCharts.core.useTheme(theme);\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsAmChartsToken.html":{"url":"interfaces/TsAmChartsToken.html","title":"interface - TsAmChartsToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsAmChartsToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart2/amcharts.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        charts\n                                \n                                \n                                        core\n                                \n                                \n                                            Optional\n                                        maps\n                                \n                                \n                                            Optional\n                                        themes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        charts\n                                    \n                                \n                                \n                                    \n                                        charts:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        core\n                                    \n                                \n                                \n                                    \n                                        core:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maps\n                                    \n                                \n                                \n                                    \n                                        maps:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InjectionToken,\n} from '@angular/core';\n\n\nexport interface TsAmChartsToken {\n  core: any;\n  charts: any;\n  maps?: any;\n  themes?: any[];\n}\n\n/**\n * Create an injection token that the consumer can override with their version of Highcharts\n */\nexport const TS_AMCHARTS_TOKEN: InjectionToken = new InjectionToken('amCharts');\n\n\n/**\n * Expose amCharts via a service\n */\n@Injectable()\nexport class TsAmChartsService {\n\n  constructor(\n    @Inject(TS_AMCHARTS_TOKEN) public amCharts: TsAmChartsToken,\n  ) {\n    if (amCharts && amCharts.themes && amCharts.themes.length > 0) {\n      for (const theme of amCharts.themes) {\n        // istanbul ignore else\n        if (theme) {\n          amCharts.core.useTheme(theme);\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsAutocompleteModule.html":{"url":"modules/TsAutocompleteModule.html","title":"module - TsAutocompleteModule","body":"\n                   \n\n\n\n\n  Modules\n  TsAutocompleteModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsAutocompleteModule\n\n\n\ncluster_TsAutocompleteModule_declarations\n\n\n\ncluster_TsAutocompleteModule_imports\n\n\n\ncluster_TsAutocompleteModule_exports\n\n\n\n\nTsAutocompleteComponent\n\nTsAutocompleteComponent\n\n\n\nTsAutocompleteModule\n\nTsAutocompleteModule\n\nTsAutocompleteModule -->\n\nTsAutocompleteComponent->TsAutocompleteModule\n\n\n\n\n\nTsAutocompleteComponent \n\nTsAutocompleteComponent \n\nTsAutocompleteComponent  -->\n\nTsAutocompleteModule->TsAutocompleteComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsAutocompleteModule -->\n\nTsIconModule->TsAutocompleteModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsAutocompleteModule -->\n\nTsInputModule->TsAutocompleteModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsAutocompleteModule -->\n\nTsValidationMessagesModule->TsAutocompleteModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/autocomplete/autocomplete.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsAutocompleteComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsInputModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsAutocompleteComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsInputModule } from './../input/input.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsAutocompleteComponent } from './autocomplete.component';\n\nexport * from './autocomplete.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatChipsModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    TsIconModule,\n    TsValidationMessagesModule,\n    TsInputModule,\n  ],\n  declarations: [\n    TsAutocompleteComponent,\n  ],\n  exports: [\n    TsAutocompleteComponent,\n  ],\n})\nexport class TsAutocompleteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsAutocompleteSelectedEvent.html":{"url":"classes/TsAutocompleteSelectedEvent.html","title":"class - TsAutocompleteSelectedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsAutocompleteSelectedEvent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/autocomplete/autocomplete.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MatAutocompleteSelectedEvent\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        Autocomplete\n\n\n\n\nTable of Contents\n\nBasic usage with a FormControl\nAllow multiple selections\nSeed selected values\nShow the progress indicator\nCustomize how the selected value is displayed\nEvent driven\nShow a 'no results' validation error\nMinimum required character count\n\n\nBasic usage with a FormControl\na) Pass an array of available options in. These are the options displayed to the user in the\n   dropdown.\nb) Create a local reference to the autocomplete component.\n\nc) Subscribe to the query events coming from the autocomplete. This is a stream of query strings\nentered by the user. This stream is debounced and de-duped by default.\ninterface OptionType {\n  id: string;\n  login: string;\n  [key: string]: any;\n}\n\n// Create a reference to the autocomplete and pass in a typing for the options\n@ViewChild('auto')\npublic auto: TsAutocompleteComponent;\n\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      // Only hit the API if a query was sent in\n      if (term) {\n        // Start the progress indicator\n        this.inProgress = true;\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              // Stop the progress indicator\n              this.inProgress = false;\n              return response['items'];\n            }),\n          )\n      } else {\n        // If no query was passed in, reset the search results and stop the progress indicator\n        this.inProgress = false;\n        return of([]);\n      }\n    }),\n  )\n;\nChange the debounce delay by setting debounceDelay.\n\nAllow multiple selections\nTo allow multiple selections, pass in a comparator function. This function should match the type {@link TsAutocompleteComparatorFn} which has the basic signature of (v: any) => string.\nThis comparator function will be used by the autocomplete to determine if a selection is a\nduplicate. It is also used as the trackBy function when looping through options.\nSeed selected values\nTo seed initial values, pass the array of selections to initialSelections:\nShow the progress indicator\nShow a progress indicator by toggling the showProgress value:\nthis.isInProgress = true;Customize how the selected value is displayed\nThe UI display of selected options can be changed by passing in a custom displayWith function.\nThis function should match {@link TsAutocompleteFormatterFn} which has the signature of (v) =>\nstring;\n\n v.login\"\n>Event driven\nIf a FormControl isn't needed, you can subscribe to events directly:\nadded(chip) {\n  console.log('Selection made!', chip);\n}\n\nremoved(chip) {\n  console.log('Selection removed!', chip);\n}\n\nchange(selections) {\n  console.log('Selection was changed!', selections);\n}Show a 'no results' validation error\nIf no results are found, set a validation error on the FormControl:\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      if (term) {\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              const items = response['items'];\n\n              // If no results are found, notify the user via a validation message\n              if (items.length Minimum required character count\nBy default, two characters must be entered before a query is emitted. This value can be overridden:\n\n    \n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  MatAutocomplete,\n  MatAutocompleteSelectedEvent,\n  MatAutocompleteTrigger,\n} from '@angular/material/autocomplete';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  coerceArray,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  arrayContainsObject,\n  isFunction,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\nexport interface KeyboardEvent {\n  [key: string]: any;\n}\n\nexport interface MouseEvent {\n  [key: string]: any;\n}\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} formatter function\n */\nexport type TsAutocompleteFormatterFn = (value: any) => string;\n\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} comparator function\n */\nexport type TsAutocompleteComparatorFn = (value: any) => string;\n\n\nexport class TsAutocompleteSelectedEvent extends MatAutocompleteSelectedEvent {}\n\n\n/**\n * The autocomplete UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-autocomplete`: The primary container\n * - `qa-autocomplete-input`: The input element\n * - `qa-autocomplete-spinner`: The progress indicator\n * - `qa-autocomplete-chip`: An individual selection 'chip'\n * - `qa-autocomplete-options`: The container for the list of options\n * - `qa-autocomplete-option`: An individual option from the list\n * - `qa-autocomplete-hint`: The input hint\n * - `qa-autocomplete-validation-messages`: The container for validation messages\n *\n * @example\n *  v.name\"\n *              hint=\"Begin typing to search..\"\n *              label=\"Select options:\"\n *              multiple=\"(v) => v.id\"\n *              name=\"product selections\"\n *              options=\"[{}, {}, ...]\"\n *              selectionsControl=\"myForm.get('myControl')\"\n *              [showProgress]=\"inProgress\"\n *              theme=\"primary\"\n *              initialSelections=\"[{}]\"\n *              (optionSelected)=\"mySelected($event)\"\n *              (optionRemoved)=\"myRemoved($event)\"\n *              (selection)=\"mySelection($event)\"\n *              (query)=\"myQuery($event)\"\n * >\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  host: {\n    class: 'ts-autocomplete',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsAutocomplete',\n})\nexport class TsAutocompleteComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Management of the query string\n   */\n  public querySubject: BehaviorSubject = new BehaviorSubject('');\n\n  /**\n   * Store the search query\n   */\n  public searchQuery!: string;\n\n  /**\n   * Define if the chips/selections should be selectable\n   */\n  public selectableChips: boolean = false;\n\n  /**\n   * Store the selected options\n   */\n  public selectedOptions: OptionType[] = [];\n\n  /**\n   * Store the formatter function for the UI display\n   */\n  private uiFormatFn!: (value: OptionType) => string;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocomplete')\n  public autocomplete!: MatAutocomplete;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocompleteTrigger')\n  set autocompleteTrigger(value: MatAutocompleteTrigger) {\n    this.trigger = value;\n  }\n  get autocompleteTrigger(): MatAutocompleteTrigger {\n    return this.trigger;\n  }\n  private trigger!: MatAutocompleteTrigger;\n\n  /**\n   * Provide direct access to the input\n   */\n  @ViewChild('input')\n  public input!: ElementRef;\n\n  /**\n   * Define a debounce delay for the query\n   */\n  @Input()\n  public set debounceDelay(value: number) {\n    this._debounceDelay = coerceNumberProperty(value);\n  }\n  public get debounceDelay(): number {\n    return this._debounceDelay;\n  }\n  private _debounceDelay: number = 200;\n\n  /**\n   * A function to output the UI text from the selected item\n   *\n   * When undefined the full selection object will be used as the display value\n   */\n  @Input()\n  public set displayWith(value: TsAutocompleteFormatterFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this.uiFormatFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'displayWith' must be passed a function.`);\n      }\n    }\n  }\n  public get displayWith(): TsAutocompleteFormatterFn {\n    return this.uiFormatFn;\n  }\n\n  /**\n   * Define a hint for the input\n   */\n  // FIXME: Fix potential overlap of hint and error messages\n  @Input()\n  public hint: string | undefined;\n\n  /**\n   * Define the placeholder/label\n   */\n  @Input()\n  public label: string | undefined;\n\n  /**\n   * Define a minimum character count for queries\n   */\n  @Input()\n  public set minimumCharacters(value: number) {\n    this._minimumCharacters = coerceNumberProperty(value);\n  }\n  public get minimumCharacters(): number {\n    return this._minimumCharacters;\n  }\n  private _minimumCharacters: number = 2;\n\n  /**\n   * Define if multiple selections are allowed by passing in a comparator function\n   */\n  @Input()\n  public set multiple(v: TsAutocompleteComparatorFn) {\n    if (!v) {\n      return;\n    }\n\n    if (isFunction(v)) {\n      this.comparatorFn = v;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'multiple' must be passed a 'TsAutocompleteComparatorFn' function.`);\n      }\n    }\n  }\n  public get multiple(): TsAutocompleteComparatorFn {\n    return this.comparatorFn;\n  }\n  private comparatorFn!: TsAutocompleteComparatorFn;\n\n  /**\n   * Define the name attribute value\n   */\n  @Input()\n  public name: string | undefined;\n\n  /**\n   * The list of options to display in the drop down\n   */\n  @Input()\n  public options!: OptionType[];\n\n  /**\n   * Define the form control to save selections to\n   */\n  @Input()\n  public set selectionsControl(value: FormControl) {\n    if (!value) {\n      return;\n    }\n\n    this._selectionsControl = value;\n    /*\n     *console.log('set selectionsControl: ', this.selectionsControl);\n     */\n  }\n  public get selectionsControl(): FormControl {\n    return this._selectionsControl;\n  }\n  private _selectionsControl: FormControl = new FormControl();\n\n  /**\n   * Define if the progress spinner should be active\n   */\n  @Input()\n  public showProgress: boolean = false;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define items that should be selected when the component loads\n   */\n  @Input()\n  public set initialSelections(selections: OptionType[]) {\n    // istanbul ignore else\n    if (selections) {\n      // Seed the array\n      this.selectedOptions = coerceArray(selections.slice());\n\n      // istanbul ignore else\n      if (this.selectionsControl && this.selectionsControl.setValue) {\n        // Seed the formControl\n        this.selectionsControl.setValue(this.selectedOptions);\n      }\n    }\n  }\n\n  /**\n   * Emit the selected chip\n   */\n  @Output()\n  public optionSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the removed chip\n   */\n  @Output()\n  public optionRemoved: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the current selection\n   */\n  @Output()\n  public selection: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the query string\n   */\n  @Output()\n  public query: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Subscribe to the querySubject and pass values to the query emitter\n   *\n   * NOTE: When an option is selected, the full selected value is piped through this stream\n   * somehow. Have not figured out why. Best guess is it's something due to the `matAutocomplete`\n   * directive. For now, we are filtering out anything that is not a string.\n   */\n  public ngAfterViewInit(): void {\n    // Take a stream of query changes\n    this.querySubject.pipe(\n      untilComponentDestroyed(this),\n      filter((v) => (typeof v === 'string') && v.length >= this.minimumCharacters),\n      // Debounce the query changes\n      debounceTime(this.debounceDelay),\n      // Only allow a query through if it is different from the previous query\n      distinctUntilChanged(),\n    ).subscribe((query: string) => {\n      this.query.next(query);\n    });\n\n    // Trigger a change detection cycle if the formControl value was changed dynamically\n    // istanbul ignore else\n    if (this.selectionsControl) {\n      this.selectionsControl.valueChanges.pipe(\n        untilComponentDestroyed(this),\n      ).subscribe((value: OptionType[]) => {\n        this.selectedOptions = value;\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Select an option\n   *\n   * @param event - The selection event from the underlying MatAutocomplete\n   */\n  public selectOption(event: TsAutocompleteSelectedEvent): void {\n    // The selected option\n    const selection: OptionType = event.option.value;\n\n    // Stop the flow if the selection already exists in the array\n    if (arrayContainsObject(selection, this.selectedOptions, this.comparatorFn)) {\n      // Set an error on the control to let the user know they chose a duplicate option\n      // istanbul ignore else\n      if (this.selectionsControl) {\n        this.setDuplicateError(this.selectionsControl, selection, this.uiFormatFn);\n      }\n\n      return;\n    }\n\n\n    // Add to the displayed selection chips\n    this.selectedOptions.push(selection);\n\n    // If supporting multiple selections, reset the input text value\n    if (this.multiple) {\n      this.resetSearch();\n    }\n\n    // Update the form control\n    // istanbul ignore else\n    if (this.selectionsControl && this.selectionsControl.setValue) {\n      this.selectionsControl.setValue(this.selectedOptions);\n    }\n\n    // Notify consumers about changes\n    this.optionSelected.emit(event.option.value);\n    this.selection.emit(this.selectedOptions);\n  }\n\n\n  /**\n   * Deselect an option\n   *\n   * @param option - The option to deselect\n   */\n  public deselectOption(option: OptionType): void {\n    // Find the key of the selection in the selectedOptions array\n    const index = this.selectedOptions.indexOf(option);\n\n    // If not found\n    if (index \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsAutofocusDirective.html":{"url":"directives/TsAutofocusDirective.html","title":"directive - TsAutofocusDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsAutofocusDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/autofocus/autofocus.directive.ts\n        \n\n            \n                Description\n            \n            \n                Autofocus any focusable element on-load.\nPassing any truthy value OR an empty string will enable the autofocus.\n\n            \n\n            \n                Implements\n            \n            \n                        AfterViewInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \nClick Me\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsAutofocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                shouldFocus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsAutofocus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/autofocus/autofocus.directive.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tsAutofocus\n                    \n                    \n                        Define if the element should be focused after initialization\n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/autofocus/autofocus.directive.ts:35\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/autofocus/autofocus.directive.ts:48\n                            \n                        \n\n\n                \n                    \n                            Focus the input after the view has initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shouldFocus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shouldFocus:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/autofocus/autofocus.directive.ts:29\n                            \n                        \n\n                \n                    \n                        Store the shouldFocus value\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tsAutofocus\n                    \n                \n\n\n                \n                    \n                        settsAutofocus(value: any)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/autofocus/autofocus.directive.ts:35\n                                \n                            \n                    \n                        \n                                Define if the element should be focused after initialization\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n    \n        \n\nTable of Contents\n\nBasic usage\nBinding\n\n\nBasic usage\nThe tsAutofocus directive can be used on any element that has a .focus() method. This includes\ninputs, select menus, textarea, buttons, links, iframes and any element with a defined tabindex\nabove -1.\nAdd the directive to a focusable element:\nBinding\nPassing in any value except false, 'false', null, or undefined will enable the directive.\n\n\n\n\n\n\n\n\n    \n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  AfterViewInit,\n  isDevMode,\n  ChangeDetectorRef,\n} from '@angular/core';\n\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\n\n/**\n * Autofocus any focusable element on-load.\n *\n * Passing any truthy value OR an empty string will enable the autofocus.\n *\n * @example\n * \n * Click Me\n */\n@Directive({\n  selector: '[tsAutofocus]',\n})\nexport class TsAutofocusDirective implements AfterViewInit {\n  /**\n   * Store the shouldFocus value\n   */\n  private shouldFocus!: boolean;\n\n  /**\n   * Define if the element should be focused after initialization\n   */\n  @Input()\n  public set tsAutofocus(value: any) {\n    this.shouldFocus = coerceBooleanProperty(value);\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Focus the input after the view has initialized\n   */\n  public ngAfterViewInit(): void {\n    if (this.shouldFocus) {\n      const el = this.elementRef.nativeElement;\n\n      if (el.focus) {\n        el.focus();\n        this.changeDetectorRef.detectChanges();\n      } else {\n        // istanbul ignore else\n        if (isDevMode()) {\n          throw Error(`TsAutofocusDirective must be used on an element that has a .focus() method.`);\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsAutofocusModule.html":{"url":"modules/TsAutofocusModule.html","title":"module - TsAutofocusModule","body":"\n                   \n\n\n\n\n  Modules\n  TsAutofocusModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsAutofocusModule\n\n\n\ncluster_TsAutofocusModule_declarations\n\n\n\ncluster_TsAutofocusModule_exports\n\n\n\n\nTsAutofocusDirective\n\nTsAutofocusDirective\n\n\n\nTsAutofocusModule\n\nTsAutofocusModule\n\nTsAutofocusModule -->\n\nTsAutofocusDirective->TsAutofocusModule\n\n\n\n\n\nTsAutofocusDirective \n\nTsAutofocusDirective \n\nTsAutofocusDirective  -->\n\nTsAutofocusModule->TsAutofocusDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/autofocus/autofocus.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsAutofocusDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsAutofocusDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsAutofocusDirective } from './autofocus.directive';\n\nexport * from './autofocus.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TsAutofocusDirective,\n  ],\n  exports: [\n    TsAutofocusDirective,\n  ],\n})\nexport class TsAutofocusModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsButtonModule.html":{"url":"modules/TsButtonModule.html","title":"module - TsButtonModule","body":"\n                   \n\n\n\n\n  Modules\n  TsButtonModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsButtonModule\n\n\n\ncluster_TsButtonModule_declarations\n\n\n\ncluster_TsButtonModule_imports\n\n\n\ncluster_TsButtonModule_exports\n\n\n\n\nTsButtonComponent\n\nTsButtonComponent\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsButtonModule -->\n\nTsButtonComponent->TsButtonModule\n\n\n\n\n\nTsButtonComponent \n\nTsButtonComponent \n\nTsButtonComponent  -->\n\nTsButtonModule->TsButtonComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsButtonModule -->\n\nTsIconModule->TsButtonModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/button/button.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsButtonComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsButtonComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { TsWindowService } from '@terminus/ngx-tools';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsButtonComponent } from './button.component';\n\nexport * from './button.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    TsIconModule,\n  ],\n  providers: [\n    TsWindowService,\n  ],\n  exports: [\n    TsButtonComponent,\n  ],\n  declarations: [\n    TsButtonComponent,\n  ],\n})\nexport class TsButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsCSVEntryModule.html":{"url":"modules/TsCSVEntryModule.html","title":"module - TsCSVEntryModule","body":"\n                   \n\n\n\n\n  Modules\n  TsCSVEntryModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsCSVEntryModule\n\n\n\ncluster_TsCSVEntryModule_declarations\n\n\n\ncluster_TsCSVEntryModule_imports\n\n\n\ncluster_TsCSVEntryModule_exports\n\n\n\n\nTsCSVEntryComponent\n\nTsCSVEntryComponent\n\n\n\nTsCSVEntryModule\n\nTsCSVEntryModule\n\nTsCSVEntryModule -->\n\nTsCSVEntryComponent->TsCSVEntryModule\n\n\n\n\n\nTsCSVEntryComponent \n\nTsCSVEntryComponent \n\nTsCSVEntryComponent  -->\n\nTsCSVEntryModule->TsCSVEntryComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsCSVEntryModule -->\n\nTsButtonModule->TsCSVEntryModule\n\n\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTsCSVEntryModule -->\n\nTsIconButtonModule->TsCSVEntryModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsCSVEntryModule -->\n\nTsIconModule->TsCSVEntryModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsCSVEntryModule -->\n\nTsTooltipModule->TsCSVEntryModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/csv-entry/csv-entry.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCSVEntryComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsIconButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCSVEntryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { TsButtonModule } from './../button/button.module';\nimport { TsCSVEntryComponent } from './csv-entry.component';\nimport { TsIconButtonModule } from './../icon-button/icon-button.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsTooltipModule } from './../tooltip/tooltip.module';\n\nexport * from './csv-entry.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    TsButtonModule,\n    TsIconButtonModule,\n    TsIconModule,\n    TsTooltipModule,\n  ],\n  declarations: [\n    TsCSVEntryComponent,\n  ],\n  exports: [\n    TsCSVEntryComponent,\n  ],\n})\nexport class TsCSVEntryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsCSVEntryRecord.html":{"url":"interfaces/TsCSVEntryRecord.html","title":"interface - TsCSVEntryRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsCSVEntryRecord\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/csv-entry/csv-entry.component.ts\n        \n\n            \n                Description\n            \n            \n                The structure for an individual row\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        columns\n                                \n                                \n                                        recordId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                    \n                                \n                                \n                                    \n                                        columns:     (string | null)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (string | null)[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recordId\n                                    \n                                \n                                \n                                    \n                                        recordId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        csv-entry\n\n\n\n\nTable of Contents\n\nBasic usage\nColumn Count\nRow count\nMax rows\n\n\nColumn validation\nStatic Column Headers\n\n\nBasic usage\nThe most basic implementation only needs the HTML and a single method. Each time the CSV table is updated, a new File Blob is generated and\nemitted.\n\nmyFunc(blob: Blob) {\n  ...\n}Column Count\nControl the default column count via an Input:\n\n  \n\nNOTE: Column count does not restrict what is pasted into the table.\n\nRow count\nControl the default number of rows via an Input:\n\n  \n\nNOTE: Row count does not restrict what is pasted into the table.\n\nMax rows\nControl the maximum number of rows a table will allow\n\nIf the user attempts to paste or manually add more rows than are allowed, a validation message will appear below the table.\nColumn validation\n\nNOTE: Currently, custom validation messaging is only supported for the URL validator. More will be added as needs arise.\n\nPass in an array of validators matching the column count.\nmyValidators = [null, this.validatorsService.url(), null, null];\nThis example would add the URL validation to the second column only.\nStatic Column Headers\nIf there are certain headers that must be available, these can be set via an input:\n\nSetting static column headers will set the header cells to readonly. This will still allow keyboard navigation but will not allow the user\nto change the contents of the set header cells.\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  untilComponentDestroyed,\n  TsDocumentService,\n} from '@terminus/ngx-tools';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n} from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TS_SPACING } from './../spacing/spacing.constant';\n\n\n\n/**\n * The structure for an individual row\n */\nexport interface TsCSVEntryRecord {\n  recordId: number;\n  columns: (string | null)[];\n}\n\n/**\n * The structure for the form\n */\nexport interface TsCSVFormContents {\n  headers: string[];\n  records: TsCSVEntryRecord[];\n}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * This is the csv-entry UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-csv-entry`: The primary container\n * - `qa-csv-entry-info`: Container for row/column count\n * - `qa-csv-entry-row`: A row\n * - `qa-csv-entry-cell`: A body cell\n * - `qa-csv-entry-header-cell`: A header cell\n * - `qa-csv-entry-header-row`: Container for a header row\n * - `qa-csv-entry-delete`: A delete button\n * - `qa-csv-entry`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-csv-entry',\n  templateUrl: './csv-entry.component.html',\n  styleUrls: ['./csv-entry.component.scss'],\n  host: {\n    class: 'ts-csv-entry',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCSVEntry',\n})\nexport class TsCSVEntryComponent implements OnInit, OnDestroy {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-csv-entry-${nextUniqueId++}`;\n\n  /**\n   * Define the default number of rows\n   */\n  public defaultRowCount = 4;\n\n  /**\n   * Define the default number of columns\n   */\n  public defaultColumnCount = 2;\n\n  /**\n   * Define the default for the maximum allowed rows\n   */\n  public defaultMaxRows = 2000;\n\n  /**\n   * Expose the flexbox layout gap\n   */\n  public layoutGap: string = TS_SPACING.small[0];\n\n  /**\n   * Expose a validation message if too many rows are added\n   */\n  public tooManyRowsMessage: string | null = null;\n\n  /**\n   * Define the number of validation messages that can be shown at once\n   */\n  public maximumValidationMessages = 6;\n\n  /**\n   * Store records (rows)\n   */\n  public records: TsCSVEntryRecord[] = [];\n\n  /**\n   * Initialize the records form with an empty array\n   */\n  public recordsForm: FormGroup = this.formBuilder.group({\n    headers: this.formBuilder.array([]),\n    records: this.formBuilder.array([]),\n  });\n\n  /*\n   *public validationMessages: string[] | undefined;\n   */\n  public allErrors: {[key: string]: any}[] | null = null;\n\n  /**\n   * Get header cells as a form array\n   */\n  public get headerCells(): FormArray {\n    return this.recordsForm.get('headers') as FormArray;\n  }\n\n  /**\n   * Get rows as a form array\n   */\n  public get rows(): FormArray {\n    return this.recordsForm.get('records') as FormArray;\n  }\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  public set id(value: string) {\n    this._id = value || this._uid;\n  }\n  public get id(): string {\n    return this._id;\n  }\n  protected _id!: string;\n\n  /**\n   * Set the maximum number of allowed rows\n   */\n  @Input()\n  public set maxRows(value: number) {\n    this._maxRows = coerceNumberProperty(value, this.defaultMaxRows);\n  }\n  public get maxRows(): number {\n    return this._maxRows;\n  }\n  private _maxRows: number = this.defaultMaxRows;\n\n  /**\n   * Set the number of columns\n   */\n  @Input()\n  public set columnCount(value: number) {\n    this._columnCount = coerceNumberProperty(value, this.defaultColumnCount);\n  }\n  public get columnCount(): number {\n    return this._columnCount;\n  }\n  private _columnCount: number = this.defaultColumnCount;\n\n  /**\n   * Define the number of rows\n   */\n  @Input()\n  public set rowCount(value: number) {\n    this._rowCount = coerceNumberProperty(value, this.defaultRowCount);\n  }\n  public get rowCount(): number {\n    return this._rowCount;\n  }\n  private _rowCount: number = this.defaultRowCount;\n\n  /**\n   * Allow static headers to be set\n   */\n  @Input()\n  public set columnHeaders(value: string[] | undefined) {\n    this._columnHeaders = value;\n    this.clearHeaderCells();\n    this.addHeaders(this.columnCount, this.columnHeaders);\n  }\n  public get columnHeaders(): string[] | undefined {\n    return this._columnHeaders;\n  }\n  private _columnHeaders: string[] | undefined;\n\n  /**\n   * Define any column validators\n   */\n  @Input()\n  public set columnValidators(value: ValidatorFn | null[]) {\n    if (!value) {\n      return;\n    }\n\n    this._columnValidators = value;\n  }\n  public get columnValidators(): ValidatorFn | null[] {\n    return this._columnValidators;\n  }\n  private _columnValidators: ValidatorFn | null[] = [];\n\n  /**\n   * Emit the built file blob\n   */\n  @Output()\n  public blobGenerated: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private changeDetectorRef: ChangeDetectorRef,\n    private documentService: TsDocumentService,\n  ) {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Initialize empty rows\n   */\n  public ngOnInit(): void {\n    this.addRows(this.rowCount, this.columnCount);\n    this.addHeaders(this.columnCount, this.columnHeaders);\n\n    this.recordsForm.valueChanges.pipe(\n      // Let the form values 'settle' before we emit anything\n      debounceTime(1),\n      untilComponentDestroyed(this),\n    ).subscribe((v) => {\n      const blob = this.generateBlob(v);\n      this.blobGenerated.emit(blob);\n    });\n  }\n\n\n  /**\n   * Needed for `untilComponentDestroyed`\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Add rows to the form\n   *\n   * @param rowCount - The number of rows to add\n   * @param columnCount - The number of columns each row should have\n   * @param content - The column content\n   */\n  public addRows(rowCount = 1, columnCount: number = this.columnCount, content?: string[][], index?: number): void {\n    if ((this.rows.length + rowCount) > this.maxRows) {\n      const rowsThatDontFit = (rowCount === 1 ? 2 : rowCount) - ((this.rows.length + rowCount) - this.maxRows);\n      this.tooManyRowsMessage =\n        `Adding ${rowsThatDontFit} row${rowsThatDontFit > 1 ? 's' : ''} would exceed the maximum rows allowed (${this.maxRows}).`;\n      return;\n    }\n\n    if (this.tooManyRowsMessage) {\n      this.tooManyRowsMessage = null;\n    }\n\n    for (let i = 0; i = 0)) {\n        this.rows.insert(indexToInjectAt, createdRow);\n      } else {\n        this.rows.push(createdRow);\n      }\n    }\n  }\n\n\n  /**\n   * Get the columns of a row\n   *\n   * @param row - The row\n   * @return The array of columns\n   */\n  public getColumns(row: FormGroup): FormArray {\n    return row.get('columns') as FormArray;\n  }\n\n\n  /**\n   * Update the form control for recordId on each row according to index.\n   */\n  public updateAllRowIds(): void {\n    for (let i = 0; i  this.columnCount) {\n        const numberOfMissingColumns = pastedColumnCount - this.columnCount;\n        this.addColumnsToRows(this.rows, this.headerCells, numberOfMissingColumns);\n        this.columnCount = pastedColumnCount;\n      }\n      this.deleteRow(pastedRowId);\n      this.addRows(neededRows, content.rows.length, content.rows, pastedRowId);\n    }\n\n    this.updateAllRowIds();\n    this.allErrors = this.collectErrors();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Expose ability to trigger error updates from the DOM\n   */\n  public updateErrors(): void {\n    this.allErrors = this.collectErrors();\n  }\n\n\n  /**\n   * Helper to get the name (content) of a header cell for the title attribute\n   *\n   * @param index - The column index\n   * @return The header cell content\n   */\n  public getHeaderCellName(index: number): string {\n    if (!this.headerCells || !this.headerCells.controls[index]) {\n      return '';\n    }\n    return this.headerCells.controls[index].value;\n  }\n\n\n  /**\n   * Stop accidental page navigation when scrolling to the edges of the CSV form\n   *\n   * @param event - The scroll wheel event\n   */\n  public onScroll(event: WheelEvent): void {\n    if (!event) {\n      return;\n    }\n    const dir: string = (event.deltaX  {\n          return {\n            control: key,\n            // De-duplicate the errors array\n            [key]: errors[key].filter((el, i, arr) => arr.indexOf(el) === i),\n          };\n        });\n\n        return resultsArray;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Get all validation messages\n   *\n   * NOTE: Currently this only supports a custom error message for URL validation. Other messages can be added when the need arises.\n   * FIXME: Find a way to use the existing ValidationMessagesService\n   *\n   * @return The array of validation messages\n   */\n  public get validationMessages(): string[] | undefined {\n    if (!this.allErrors) {\n      return;\n    }\n    const messages: string[] = [];\n\n    for (const errorObj of this.allErrors) {\n      const name: string = errorObj.control;\n\n      for (const error of errorObj[name]) {\n        let message = '';\n        // The ID is zero-based\n        message += `Row ${error.rowId + 1}: `;\n        // istanbul ignore else\n        if (name === 'url') {\n          const maxItemLength = 20;\n          const errorItem = (error.actual.length > maxItemLength) ? error.actual.slice(0, maxItemLength) + '...' : error.actual;\n          message += `\"${errorItem}\" is not a valid URL.`;\n        }\n        // istanbul ignore else\n        if (name === 'required') {\n          message += `Content is required.`;\n        }\n        messages.push(message);\n      }\n    }\n\n    // If more messages than allowed exist, truncate the list with a message\n    if (messages.length > this.maximumValidationMessages) {\n      const count = messages.length - this.maximumValidationMessages;\n      messages.length = this.maximumValidationMessages;\n      messages.push(`and ${count} more errors...`);\n    }\n\n    return messages.length > 0 ? messages : undefined;\n  }\n\n\n  /**\n   * Delete a row\n   *\n   * @param index - The index of the row to delete\n   */\n  public deleteRow(index: number): void {\n    if (index === undefined || index === null || index  r.split('\\t'));\n    } else {\n      result.rows = rows.slice(0, rows.length).map((r) => r.split('\\t'));\n    }\n\n    return result;\n  }\n\n\n  /**\n   * Clear all rows\n   */\n  private clearAllRows(): void {\n    this.recordsForm.setControl('records', this.formBuilder.array([]));\n  }\n\n\n  /**\n   * Clear header cells\n   */\n  private clearHeaderCells(): void {\n    this.recordsForm.setControl('headers', this.formBuilder.array([]));\n  }\n\n\n  /**\n   * Add header content to the form\n   *\n   * @param headerCount - The number of header cells\n   * @param content - The cell's content\n   */\n  private addHeaders(headerCount: number, content?: string[]): void {\n    for (let i = 0; i  v.columns.join('\\t')).join('\\r\\n') + '\\r\\n';\n    const joined: string = prefix + headers + rows;\n    return new Blob([joined], {type: 'text/csv'});\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsCSVFormContents.html":{"url":"interfaces/TsCSVFormContents.html","title":"interface - TsCSVFormContents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsCSVFormContents\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/csv-entry/csv-entry.component.ts\n        \n\n            \n                Description\n            \n            \n                The structure for the form\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        headers\n                                \n                                \n                                        records\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        records\n                                    \n                                \n                                \n                                    \n                                        records:     TsCSVEntryRecord[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsCSVEntryRecord[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        csv-entry\n\n\n\n\nTable of Contents\n\nBasic usage\nColumn Count\nRow count\nMax rows\n\n\nColumn validation\nStatic Column Headers\n\n\nBasic usage\nThe most basic implementation only needs the HTML and a single method. Each time the CSV table is updated, a new File Blob is generated and\nemitted.\n\nmyFunc(blob: Blob) {\n  ...\n}Column Count\nControl the default column count via an Input:\n\n  \n\nNOTE: Column count does not restrict what is pasted into the table.\n\nRow count\nControl the default number of rows via an Input:\n\n  \n\nNOTE: Row count does not restrict what is pasted into the table.\n\nMax rows\nControl the maximum number of rows a table will allow\n\nIf the user attempts to paste or manually add more rows than are allowed, a validation message will appear below the table.\nColumn validation\n\nNOTE: Currently, custom validation messaging is only supported for the URL validator. More will be added as needs arise.\n\nPass in an array of validators matching the column count.\nmyValidators = [null, this.validatorsService.url(), null, null];\nThis example would add the URL validation to the second column only.\nStatic Column Headers\nIf there are certain headers that must be available, these can be set via an input:\n\nSetting static column headers will set the header cells to readonly. This will still allow keyboard navigation but will not allow the user\nto change the contents of the set header cells.\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  untilComponentDestroyed,\n  TsDocumentService,\n} from '@terminus/ngx-tools';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n} from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TS_SPACING } from './../spacing/spacing.constant';\n\n\n\n/**\n * The structure for an individual row\n */\nexport interface TsCSVEntryRecord {\n  recordId: number;\n  columns: (string | null)[];\n}\n\n/**\n * The structure for the form\n */\nexport interface TsCSVFormContents {\n  headers: string[];\n  records: TsCSVEntryRecord[];\n}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * This is the csv-entry UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-csv-entry`: The primary container\n * - `qa-csv-entry-info`: Container for row/column count\n * - `qa-csv-entry-row`: A row\n * - `qa-csv-entry-cell`: A body cell\n * - `qa-csv-entry-header-cell`: A header cell\n * - `qa-csv-entry-header-row`: Container for a header row\n * - `qa-csv-entry-delete`: A delete button\n * - `qa-csv-entry`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-csv-entry',\n  templateUrl: './csv-entry.component.html',\n  styleUrls: ['./csv-entry.component.scss'],\n  host: {\n    class: 'ts-csv-entry',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCSVEntry',\n})\nexport class TsCSVEntryComponent implements OnInit, OnDestroy {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-csv-entry-${nextUniqueId++}`;\n\n  /**\n   * Define the default number of rows\n   */\n  public defaultRowCount = 4;\n\n  /**\n   * Define the default number of columns\n   */\n  public defaultColumnCount = 2;\n\n  /**\n   * Define the default for the maximum allowed rows\n   */\n  public defaultMaxRows = 2000;\n\n  /**\n   * Expose the flexbox layout gap\n   */\n  public layoutGap: string = TS_SPACING.small[0];\n\n  /**\n   * Expose a validation message if too many rows are added\n   */\n  public tooManyRowsMessage: string | null = null;\n\n  /**\n   * Define the number of validation messages that can be shown at once\n   */\n  public maximumValidationMessages = 6;\n\n  /**\n   * Store records (rows)\n   */\n  public records: TsCSVEntryRecord[] = [];\n\n  /**\n   * Initialize the records form with an empty array\n   */\n  public recordsForm: FormGroup = this.formBuilder.group({\n    headers: this.formBuilder.array([]),\n    records: this.formBuilder.array([]),\n  });\n\n  /*\n   *public validationMessages: string[] | undefined;\n   */\n  public allErrors: {[key: string]: any}[] | null = null;\n\n  /**\n   * Get header cells as a form array\n   */\n  public get headerCells(): FormArray {\n    return this.recordsForm.get('headers') as FormArray;\n  }\n\n  /**\n   * Get rows as a form array\n   */\n  public get rows(): FormArray {\n    return this.recordsForm.get('records') as FormArray;\n  }\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  public set id(value: string) {\n    this._id = value || this._uid;\n  }\n  public get id(): string {\n    return this._id;\n  }\n  protected _id!: string;\n\n  /**\n   * Set the maximum number of allowed rows\n   */\n  @Input()\n  public set maxRows(value: number) {\n    this._maxRows = coerceNumberProperty(value, this.defaultMaxRows);\n  }\n  public get maxRows(): number {\n    return this._maxRows;\n  }\n  private _maxRows: number = this.defaultMaxRows;\n\n  /**\n   * Set the number of columns\n   */\n  @Input()\n  public set columnCount(value: number) {\n    this._columnCount = coerceNumberProperty(value, this.defaultColumnCount);\n  }\n  public get columnCount(): number {\n    return this._columnCount;\n  }\n  private _columnCount: number = this.defaultColumnCount;\n\n  /**\n   * Define the number of rows\n   */\n  @Input()\n  public set rowCount(value: number) {\n    this._rowCount = coerceNumberProperty(value, this.defaultRowCount);\n  }\n  public get rowCount(): number {\n    return this._rowCount;\n  }\n  private _rowCount: number = this.defaultRowCount;\n\n  /**\n   * Allow static headers to be set\n   */\n  @Input()\n  public set columnHeaders(value: string[] | undefined) {\n    this._columnHeaders = value;\n    this.clearHeaderCells();\n    this.addHeaders(this.columnCount, this.columnHeaders);\n  }\n  public get columnHeaders(): string[] | undefined {\n    return this._columnHeaders;\n  }\n  private _columnHeaders: string[] | undefined;\n\n  /**\n   * Define any column validators\n   */\n  @Input()\n  public set columnValidators(value: ValidatorFn | null[]) {\n    if (!value) {\n      return;\n    }\n\n    this._columnValidators = value;\n  }\n  public get columnValidators(): ValidatorFn | null[] {\n    return this._columnValidators;\n  }\n  private _columnValidators: ValidatorFn | null[] = [];\n\n  /**\n   * Emit the built file blob\n   */\n  @Output()\n  public blobGenerated: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private changeDetectorRef: ChangeDetectorRef,\n    private documentService: TsDocumentService,\n  ) {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Initialize empty rows\n   */\n  public ngOnInit(): void {\n    this.addRows(this.rowCount, this.columnCount);\n    this.addHeaders(this.columnCount, this.columnHeaders);\n\n    this.recordsForm.valueChanges.pipe(\n      // Let the form values 'settle' before we emit anything\n      debounceTime(1),\n      untilComponentDestroyed(this),\n    ).subscribe((v) => {\n      const blob = this.generateBlob(v);\n      this.blobGenerated.emit(blob);\n    });\n  }\n\n\n  /**\n   * Needed for `untilComponentDestroyed`\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Add rows to the form\n   *\n   * @param rowCount - The number of rows to add\n   * @param columnCount - The number of columns each row should have\n   * @param content - The column content\n   */\n  public addRows(rowCount = 1, columnCount: number = this.columnCount, content?: string[][], index?: number): void {\n    if ((this.rows.length + rowCount) > this.maxRows) {\n      const rowsThatDontFit = (rowCount === 1 ? 2 : rowCount) - ((this.rows.length + rowCount) - this.maxRows);\n      this.tooManyRowsMessage =\n        `Adding ${rowsThatDontFit} row${rowsThatDontFit > 1 ? 's' : ''} would exceed the maximum rows allowed (${this.maxRows}).`;\n      return;\n    }\n\n    if (this.tooManyRowsMessage) {\n      this.tooManyRowsMessage = null;\n    }\n\n    for (let i = 0; i = 0)) {\n        this.rows.insert(indexToInjectAt, createdRow);\n      } else {\n        this.rows.push(createdRow);\n      }\n    }\n  }\n\n\n  /**\n   * Get the columns of a row\n   *\n   * @param row - The row\n   * @return The array of columns\n   */\n  public getColumns(row: FormGroup): FormArray {\n    return row.get('columns') as FormArray;\n  }\n\n\n  /**\n   * Update the form control for recordId on each row according to index.\n   */\n  public updateAllRowIds(): void {\n    for (let i = 0; i  this.columnCount) {\n        const numberOfMissingColumns = pastedColumnCount - this.columnCount;\n        this.addColumnsToRows(this.rows, this.headerCells, numberOfMissingColumns);\n        this.columnCount = pastedColumnCount;\n      }\n      this.deleteRow(pastedRowId);\n      this.addRows(neededRows, content.rows.length, content.rows, pastedRowId);\n    }\n\n    this.updateAllRowIds();\n    this.allErrors = this.collectErrors();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Expose ability to trigger error updates from the DOM\n   */\n  public updateErrors(): void {\n    this.allErrors = this.collectErrors();\n  }\n\n\n  /**\n   * Helper to get the name (content) of a header cell for the title attribute\n   *\n   * @param index - The column index\n   * @return The header cell content\n   */\n  public getHeaderCellName(index: number): string {\n    if (!this.headerCells || !this.headerCells.controls[index]) {\n      return '';\n    }\n    return this.headerCells.controls[index].value;\n  }\n\n\n  /**\n   * Stop accidental page navigation when scrolling to the edges of the CSV form\n   *\n   * @param event - The scroll wheel event\n   */\n  public onScroll(event: WheelEvent): void {\n    if (!event) {\n      return;\n    }\n    const dir: string = (event.deltaX  {\n          return {\n            control: key,\n            // De-duplicate the errors array\n            [key]: errors[key].filter((el, i, arr) => arr.indexOf(el) === i),\n          };\n        });\n\n        return resultsArray;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Get all validation messages\n   *\n   * NOTE: Currently this only supports a custom error message for URL validation. Other messages can be added when the need arises.\n   * FIXME: Find a way to use the existing ValidationMessagesService\n   *\n   * @return The array of validation messages\n   */\n  public get validationMessages(): string[] | undefined {\n    if (!this.allErrors) {\n      return;\n    }\n    const messages: string[] = [];\n\n    for (const errorObj of this.allErrors) {\n      const name: string = errorObj.control;\n\n      for (const error of errorObj[name]) {\n        let message = '';\n        // The ID is zero-based\n        message += `Row ${error.rowId + 1}: `;\n        // istanbul ignore else\n        if (name === 'url') {\n          const maxItemLength = 20;\n          const errorItem = (error.actual.length > maxItemLength) ? error.actual.slice(0, maxItemLength) + '...' : error.actual;\n          message += `\"${errorItem}\" is not a valid URL.`;\n        }\n        // istanbul ignore else\n        if (name === 'required') {\n          message += `Content is required.`;\n        }\n        messages.push(message);\n      }\n    }\n\n    // If more messages than allowed exist, truncate the list with a message\n    if (messages.length > this.maximumValidationMessages) {\n      const count = messages.length - this.maximumValidationMessages;\n      messages.length = this.maximumValidationMessages;\n      messages.push(`and ${count} more errors...`);\n    }\n\n    return messages.length > 0 ? messages : undefined;\n  }\n\n\n  /**\n   * Delete a row\n   *\n   * @param index - The index of the row to delete\n   */\n  public deleteRow(index: number): void {\n    if (index === undefined || index === null || index  r.split('\\t'));\n    } else {\n      result.rows = rows.slice(0, rows.length).map((r) => r.split('\\t'));\n    }\n\n    return result;\n  }\n\n\n  /**\n   * Clear all rows\n   */\n  private clearAllRows(): void {\n    this.recordsForm.setControl('records', this.formBuilder.array([]));\n  }\n\n\n  /**\n   * Clear header cells\n   */\n  private clearHeaderCells(): void {\n    this.recordsForm.setControl('headers', this.formBuilder.array([]));\n  }\n\n\n  /**\n   * Add header content to the form\n   *\n   * @param headerCount - The number of header cells\n   * @param content - The cell's content\n   */\n  private addHeaders(headerCount: number, content?: string[]): void {\n    for (let i = 0; i  v.columns.join('\\t')).join('\\r\\n') + '\\r\\n';\n    const joined: string = prefix + headers + rows;\n    return new Blob([joined], {type: 'text/csv'});\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsCardComponent.html":{"url":"components/TsCardComponent.html","title":"component - TsCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsCardComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/card/card.component.ts\n\n\n    \n        Description\n    \n    \n        A presentational component to render a card\nQA CSS CLASSES\n\nqa-card: Placed on the primary element\nqa-card-lock: Placed on the lock icon for disabled cards\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    Here is my card!\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsCard\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-card\n            \n\n            \n                styleUrls\n                card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _border\n                            \n                            \n                                    Protected\n                                _id\n                            \n                            \n                                    Private\n                                _theme\n                            \n                            \n                                    Protected\n                                _uid\n                            \n                            \n                                    Public\n                                aspectRatioPadding\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aspectRatio\n                            \n                            \n                                border\n                            \n                            \n                                centeredContent\n                            \n                            \n                                disabled\n                            \n                            \n                                flat\n                            \n                            \n                                id\n                            \n                            \n                                supportsInteraction\n                            \n                            \n                                theme\n                            \n                            \n                                utilityMenuTemplate\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/card/card.component.ts:181\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aspectRatio\n                    \n                    \n                        Define if the card should conform to a fixed aspect ratio\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:92\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        border\n                    \n                    \n                        Define if a border should be present on the card. TsCardBorderOptions\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:104\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centeredContent\n                    \n                    \n                        Define if the card should center child content\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:120\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                    \n                        Define if the card is disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:126\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        flat\n                    \n                    \n                        Define if the card should not have a drop shadow\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:132\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                    \n                        Define an ID for the component\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:138\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        supportsInteraction\n                    \n                    \n                        Define if the card should support interaction (via hover)\nNOTE: This only alters style; not functionality\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:152\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the card theme\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:158\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        utilityMenuTemplate\n                    \n                    \n                        Allow a custom utility menu to be added\n\n                            \n                            Type:    TemplateRef | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:174\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _border\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _border:     TsCardBorderOptions\n\n                    \n                \n                    \n                        \n                            Type :     TsCardBorderOptions\n\n                        \n                    \n                    \n                        \n                            Default value : 'none'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : this._uid\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:144\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _theme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _theme:     TsStyleThemeTypes\n\n                    \n                \n                    \n                        \n                            Type :     TsStyleThemeTypes\n\n                        \n                    \n                    \n                        \n                            Default value : 'primary'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:168\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _uid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _uid:     \n\n                    \n                \n                    \n                        \n                            Default value : `ts-card-${nextUniqueId++}`\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:79\n                            \n                        \n\n                \n                    \n                        Define the default component ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            aspectRatioPadding\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        aspectRatioPadding:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:84\n                            \n                        \n\n                \n                    \n                        Expose the aspect ratio as a percentage\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        aspectRatio\n                    \n                \n\n\n                \n                    \n                        setaspectRatio(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:92\n                                \n                            \n                    \n                        \n                                Define if the card should conform to a fixed aspect ratio\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                            \n                                                                    \nThe aspect ratio. See {\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        border\n                    \n                \n\n                \n                    \n                        getborder()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:111\n                                \n                            \n\n                \n                    \n                        setborder(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:104\n                                \n                            \n                    \n                        \n                                Define if a border should be present on the card. TsCardBorderOptions\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:141\n                                \n                            \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:138\n                                \n                            \n                    \n                        \n                                Define an ID for the component\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n\n                \n                    \n                        gettheme()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:165\n                                \n                            \n\n                \n                    \n                        settheme(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:158\n                                \n                            \n                    \n                        \n                                Define the card theme\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        borderClass\n                    \n                \n\n                \n                    \n                        getborderClass()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:179\n                                \n                            \n                    \n                        \n                                Getter to return a border class if the border is set\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n    \n        \n\nTable of Contents\n\nBasic usage\nInteractivity\nCentered content\nAspect ratio\nUtility menu\nCard with a Title\nDisabled Card\n\n\nBasic usage\nWrap the card component around your content:\n\n  Here is my content!\nInteractivity\nTo make the card feel interactive, pass true to the supportsInteraction input.\n\n  Now my card responds to hover and click!\nCentered content\nTo center the content, pass true to the centeredContent input.\n\n  Now my content is centered!\nAspect ratio\nPass your desired aspect ratio in the format 3:4 to the aspectRatio input.\n\n  Here is a card with a fixed aspect ratio!\n\nType: TsAspectRatioTypes.\nAllowed ratios: 16:9, 4:3, 3:2, 5:4, 1:1,\n\nUtility menu\nTo include a utility menu, pass a template which includes the menu trigger and the menu contents.\n\n\n  Here is a card with a utility menu!\n\n\n\n  \n  \n  \n\n\n  \n  \n    \n      My link\n    \n  \nCard with a Title\nAttach the tsCardTitle directive to your title element. This directive simply adds a class to the\nelement which provides the needed styles.\n\n  My Title\nDisabled Card\nThis will push the opacity of the card contents back and add a lock icon in the top right corner.\n\n  My card\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  TemplateRef,\n  ElementRef,\n} from '@angular/core';\nimport { TsStyleThemeTypes } from '../utilities/types/style-theme.types';\n\n\n/**\n * Define the allowed aspect ratios. Used in {@link TsCardComponent}\n */\nexport type TsAspectRatioTypes\n  = '16:9'\n  | '4:3'\n  | '3:2'\n  | '5:4'\n  | '1:1'\n;\n\n\n/**\n * Define allowed border sides. Used in {@link TsCardComponent}. Border color determined by the theme.\n */\nexport type TsCardBorderOptions\n  = 'none'\n  | 'left'\n  | 'right'\n  | 'top'\n  | 'bottom'\n;\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * A presentational component to render a card\n *\n * #### QA CSS CLASSES\n * - `qa-card`: Placed on the primary element\n * - `qa-card-lock`: Placed on the lock icon for disabled cards\n *\n * @example\n * Here is my card!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n  host: {\n    class: 'ts-card',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCard',\n})\nexport class TsCardComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-card-${nextUniqueId++}`;\n\n  /**\n   * Expose the aspect ratio as a percentage\n   */\n  public aspectRatioPadding!: string;\n\n  /**\n   * Define if the card should conform to a fixed aspect ratio\n   *\n   * @param value - The aspect ratio. See {@link TsAspectRatioTypes} for possible values.\n   */\n  @Input()\n  public set aspectRatio(value: TsAspectRatioTypes) {\n    const x: number = parseInt(value.split(':')[0], 10);\n    const y: number = parseInt(value.split(':')[1], 10);\n    const percentage: number = ((y / x) * 100);\n\n    this.aspectRatioPadding = `${percentage.toFixed(2)}%`;\n  }\n\n  /**\n   * Define if a border should be present on the card. {@link TsCardBorderOptions}\n   */\n  @Input()\n  public set border(value: TsCardBorderOptions) {\n    if (!value) {\n      return;\n    }\n\n    this._border = value;\n  }\n  public get border(): TsCardBorderOptions {\n    return this._border;\n  }\n  private _border: TsCardBorderOptions = 'none';\n\n  /**\n   * Define if the card should center child content\n   */\n  @Input()\n  public centeredContent: boolean = false;\n\n  /**\n   * Define if the card is disabled\n   */\n  @Input()\n  public disabled: boolean = false;\n\n  /**\n   * Define if the card should not have a drop shadow\n   */\n  @Input()\n  public flat: boolean = false;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the card should support interaction (via hover)\n   *\n   * NOTE: This only alters style; not functionality\n   */\n  @Input()\n  public supportsInteraction: boolean = false;\n\n  /**\n   * Define the card theme\n   */\n  @Input()\n  public set theme(value: TsStyleThemeTypes) {\n    if (!value) {\n      return;\n    }\n\n    this._theme = value;\n  }\n  public get theme(): TsStyleThemeTypes {\n    return this._theme;\n  }\n  private _theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Allow a custom utility menu to be added\n   */\n  @Input()\n  public utilityMenuTemplate: TemplateRef | undefined;\n\n  /**\n   * Getter to return a border class if the border is set\n   */\n  public get borderClass(): string {\n    return (!this.border || this.border === 'none') ? '' : `c-card--border-${this.border}` ;\n  }\n\n\n  constructor() {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n  lock_outline\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            lock_outline'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsCardModule.html":{"url":"modules/TsCardModule.html","title":"module - TsCardModule","body":"\n                   \n\n\n\n\n  Modules\n  TsCardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsCardModule\n\n\n\ncluster_TsCardModule_declarations\n\n\n\ncluster_TsCardModule_imports\n\n\n\ncluster_TsCardModule_exports\n\n\n\n\nTsCardComponent\n\nTsCardComponent\n\n\n\nTsCardModule\n\nTsCardModule\n\nTsCardModule -->\n\nTsCardComponent->TsCardModule\n\n\n\n\n\nTsCardTitleDirective\n\nTsCardTitleDirective\n\nTsCardModule -->\n\nTsCardTitleDirective->TsCardModule\n\n\n\n\n\nTsCardComponent \n\nTsCardComponent \n\nTsCardComponent  -->\n\nTsCardModule->TsCardComponent \n\n\n\n\n\nTsCardTitleDirective \n\nTsCardTitleDirective \n\nTsCardTitleDirective  -->\n\nTsCardModule->TsCardTitleDirective \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsCardModule -->\n\nTsIconModule->TsCardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/card/card.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCardComponent\n                            \n                            \n                                TsCardTitleDirective\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCardComponent\n                            \n                            \n                                    TsCardTitleDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsCardComponent } from './card.component';\nimport { TsCardTitleDirective } from './card-title.directive';\n\nexport * from './card.component';\nexport * from './card-title.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRippleModule,\n    TsIconModule,\n  ],\n  declarations: [\n    TsCardComponent,\n    TsCardTitleDirective,\n  ],\n  exports: [\n    TsCardComponent,\n    TsCardTitleDirective,\n  ],\n})\nexport class TsCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsCardTitleDirective.html":{"url":"directives/TsCardTitleDirective.html","title":"directive - TsCardTitleDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsCardTitleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/card/card-title.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsCardTitle]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkParent\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: TsCardComponent)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/card/card-title.directive.ts:27\n                            \n                        \n\n                \n                    \n                            Verify the directive is nested within a TsCardComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    TsCardComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     \n\n                    \n                \n                    \n                        \n                            Default value : 'c-card__title'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card-title.directive.ts:27\n                            \n                        \n\n                \n                    \n                        Set the card title class\n\n                    \n                \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkParent\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckParent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/card/card-title.directive.ts:50\n                            \n                        \n\n\n                \n                    \n                            Verify the directive is nested inside of a TsCardComponent\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/card/card-title.directive.ts:42\n                            \n                        \n\n\n                \n                    \n                            Verify correct nesting on all changes\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _parent:     TsCardComponent\n\n                    \n                \n                    \n                        \n                            Type :     TsCardComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card-title.directive.ts:21\n                            \n                        \n\n                \n                    \n                        Store a reference to the parent component\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  HostBinding,\n  Optional,\n  Host,\n  SkipSelf,\n  OnChanges,\n  isDevMode,\n} from '@angular/core';\n\nimport { TsCardComponent } from './card.component';\n\n\n@Directive({\n  selector: '[tsCardTitle]',\n})\nexport class TsCardTitleDirective implements OnChanges {\n  /**\n   * Store a reference to the parent component\n   */\n  private _parent: TsCardComponent;\n\n  /**\n   * Set the card title class\n   */\n  @HostBinding('class')\n  tsCardTitle = 'c-card__title';\n\n  /**\n   * Verify the directive is nested within a {@link TsCardComponent}\n   */\n  constructor(\n    @Optional() @Host() @SkipSelf() parent: TsCardComponent,\n  ) {\n    this._parent = parent;\n  }\n\n\n  /**\n   * Verify correct nesting on all changes\n   */\n  ngOnChanges() {\n    this.checkParent();\n  }\n\n\n  /**\n   * Verify the directive is nested inside of a {@link TsCardComponent}\n   */\n  checkParent() {\n    // istanbul ignore else\n    if (!(this._parent instanceof TsCardComponent) && isDevMode()) {\n      throw Error(`The 'tsCardTitle' directive must be inside a  component.`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsCellDefDirective.html":{"url":"directives/TsCellDefDirective.html","title":"directive - TsCellDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsCellDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Cell definition for the TsTableComponent.\nCaptures the template of a column's data row cell as well as cell-specific properties.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsCellDef]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsCellDirective.html":{"url":"directives/TsCellDirective.html","title":"directive - TsCellDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsCellDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Cell template container that adds the right classes and role.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ts-cell\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(columnDef: CdkColumnDef, elementRef: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/table/cell.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        columnDef\n                                                  \n                                                        \n                                                                    CdkColumnDef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            renderer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderer:     Renderer\n\n                    \n                \n                    \n                        \n                            Type :     Renderer\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/cell.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsChart2Component.html":{"url":"components/TsChart2Component.html","title":"component - TsChart2Component","body":"\n                   \n\n\n\n\n\n  Components\n  TsChart2Component\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/chart2/chart2.component.ts\n\n\n    \n        Description\n    \n    \n        This is the chart2 UI Component\nFIXME: Once amCharts v4 is TypeScript scrict complient, we should set the tsconfig.skipLibCheck to true.\nQA CSS CLASSES\n\nqa-chart2: Placed on the primary container\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                OnDestroy\n    \n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsChart2\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-chart2\n            \n\n            \n                styleUrls\n                chart2.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chart2.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _visualization\n                            \n                            \n                                    Private\n                                amCharts\n                            \n                            \n                                    Public\n                                chart\n                            \n                            \n                                    Private\n                                chartDiv\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroyChart\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visualization\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                chartInitialized\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, amChartsService: TsAmChartsService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/chart2/chart2.component.ts:102\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        amChartsService\n                                                  \n                                                        \n                                                                    TsAmChartsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visualization\n                    \n                    \n                        Define the chart visualization format (bar, line, etc)\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:86\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        chartInitialized\n                    \n                    \n                        Emit an event containing the chart each time it is initialized\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:102\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroyChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        destroyChart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            Destroy the chart\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init(type: TsChart2VisualizationOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:164\n                            \n                        \n\n\n                \n                    \n                            Initialize a chart\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    TsChart2VisualizationOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Reinitialize the chart if the visualization type has changed\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Destroy the chart when the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Initialize the chart if amCharts exists\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _visualization\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _visualization:     TsChart2VisualizationOptions\n\n                    \n                \n                    \n                        \n                            Type :     TsChart2VisualizationOptions\n\n                        \n                    \n                    \n                        \n                            Default value : 'xy'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            amCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        amCharts:     TsAmChartsToken\n\n                    \n                \n                    \n                        \n                            Type :     TsAmChartsToken\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:72\n                            \n                        \n\n                \n                    \n                        Save a reference to the underlying amCharts library\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:67\n                            \n                        \n\n                \n                    \n                        Store the initialized chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            chartDiv\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartDiv:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:78\n                            \n                        \n\n                \n                    \n                        Get access to the chart container\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        visualization\n                    \n                \n\n                \n                    \n                        getvisualization()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:93\n                                \n                            \n\n                \n                    \n                        setvisualization(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/chart2/chart2.component.ts:86\n                                \n                            \n                    \n                        \n                                Define the chart visualization format (bar, line, etc)\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                            \n                                                                    \nThe visualization type. {\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        TsChart2\n\n\n\n\nTable of Contents\n\nBasic usage\nInject the needed libraries\nSet up the chart\n\n\nSupported chart types\nFull documentation\n\n\nBasic usage\nInject the needed libraries\nCreate a factory function to inject the needed libraries:\nimport { TS_AMCHARTS_TOKEN, TsAmChartsToken } from '@terminus/ui';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport am4themes_material from '@amcharts/amcharts4/themes/animated';\n\n// `core` and `charts` are always required.\n// `maps` is required if using any map visualizations.\nexport function amChartsFactory(): TsAmChartsToken {\n  return {\n    core: am4core,\n    charts: am4charts,\n    maps: am4maps,\n    themes: [am4themes_animated, am4themes_material],\n  };\n}\n\n@NgModule({\n  ...\n  providers: [\n    // Use the factory function to overwrite the `TS_AMCHARTS_TOKEN` injectable:\n    {\n      provide: TS_AMCHARTS_TOKEN,\n      useFactory: amChartsFactory,\n    },\n  ],\n  ...\nNOTE: Themes will be applied in the order they are provided.\n\nSet up the chart\nAdd the component and set up access to the generated chart:\n\nsetUpChart(chart: am4charts.Chart) {\n  // Add axis' and series' etc...\n}\nSee the demo app for concrete examples of the supported chart types.\n\nSupported chart types\nInitial support:\n\nxy\npie\nmap\nradar\ntreemap\nsankey\nchord\n\nSee TsChart2VisualizationOptions for all supported types.\nFull documentation\nSee https://www.amcharts.com/docs/v4/ for full documentation.\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n  isDevMode,\n} from '@angular/core';\n\nimport { TsAmChartsService, TsAmChartsToken } from './amcharts.service';\nimport { inputHasChanged } from '@terminus/ngx-tools';\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChart2VisualizationOptions\n  = 'pie'\n  | 'xy'\n  | 'map'\n  | 'radar'\n  | 'treemap'\n  | 'sankey'\n  | 'chord'\n;\n\n\n/**\n * This is the chart2 UI Component\n *\n * FIXME: Once amCharts v4 is TypeScript scrict complient, we should set the `tsconfig.skipLibCheck` to true.\n *\n * #### QA CSS CLASSES\n * - `qa-chart2`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-chart2',\n  templateUrl: './chart2.component.html',\n  styleUrls: ['./chart2.component.scss'],\n  host: {\n    class: 'ts-chart2',\n  },\n  exportAs: 'tsChart2',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsChart2Component implements OnInit, OnChanges, OnDestroy {\n  /**\n   * Store the initialized chart\n   */\n  public chart: any;\n\n  /**\n   * Save a reference to the underlying amCharts library\n   */\n  private amCharts: TsAmChartsToken;\n\n  /**\n   * Get access to the chart container\n   */\n  @ViewChild('chartDiv')\n  private chartDiv!: ElementRef;\n\n  /**\n   * Define the chart visualization format (bar, line, etc)\n   *\n   * @param value - The visualization type. {@link TsChart2VisualizationOptions}\n   */\n  @Input()\n  public set visualization(value: TsChart2VisualizationOptions) {\n    if (!value) {\n      return;\n    }\n\n    this._visualization = value;\n  }\n  public get visualization(): TsChart2VisualizationOptions {\n    return this._visualization;\n  }\n  private _visualization: TsChart2VisualizationOptions = 'xy';\n\n  /**\n   * Emit an event containing the chart each time it is initialized\n   */\n  @Output()\n  public chartInitialized: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private zone: NgZone,\n    private amChartsService: TsAmChartsService,\n  ) {\n    this.amCharts = this.amChartsService.amCharts;\n  }\n\n\n  /**\n   * Initialize the chart if amCharts exists\n   */\n  public ngOnInit(): void {\n    // Don't initialize a chart if the Highcharts library wasn't passed in.\n    if (this.amCharts) {\n      this.init(this.visualization);\n    } else if (isDevMode()) {\n      console.error(\n        'TsChart2Component: The amCharts library was not provided via injection token!',\n      );\n    }\n  }\n\n\n  /**\n   * Reinitialize the chart if the visualization type has changed\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    // istanbul ignore else\n    if (inputHasChanged(changes, 'visualization')) {\n      this.destroyChart();\n      this.init(this.visualization);\n    }\n  }\n\n\n  /**\n   * Destroy the chart when the component is destroyed\n   */\n  public ngOnDestroy(): void {\n    this.destroyChart();\n  }\n\n\n  /**\n   * Destroy the chart\n   */\n  private destroyChart(): void {\n    this.zone.runOutsideAngular(() => {\n      // istanbul ignore else\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n\n\n  /**\n   * Initialize a chart\n   */\n  private init(type: TsChart2VisualizationOptions): void {\n    this.zone.runOutsideAngular(() => {\n      // Create the appropriate chart using a chained ternary\n      const chart: any =\n        type === 'xy'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.XYChart)\n        : type === 'pie'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.PieChart)\n        : type === 'map'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.maps.MapChart)\n        : type === 'radar'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.RadarChart)\n        : type === 'treemap'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.TreeMap)\n        : type === 'sankey'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.SankeyDiagram)\n        : type === 'chord'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.ChordDiagram)\n        : undefined\n      ;\n\n      if (chart) {\n        chart.responsive.enabled = true;\n        this.chart = chart;\n        this.chartInitialized.emit(chart);\n      } else {\n        console.error(`TsChart2Component: ${this.visualization} is not a supported chart type. See TsChart2VisualizationOptions.`);\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsChart2Component'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsChart2Module.html":{"url":"modules/TsChart2Module.html","title":"module - TsChart2Module","body":"\n                   \n\n\n\n\n  Modules\n  TsChart2Module\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsChart2Module\n\n\n\ncluster_TsChart2Module_declarations\n\n\n\ncluster_TsChart2Module_exports\n\n\n\ncluster_TsChart2Module_providers\n\n\n\n\nTsChart2Component\n\nTsChart2Component\n\n\n\nTsChart2Module\n\nTsChart2Module\n\nTsChart2Module -->\n\nTsChart2Component->TsChart2Module\n\n\n\n\n\nTsChart2Component \n\nTsChart2Component \n\nTsChart2Component  -->\n\nTsChart2Module->TsChart2Component \n\n\n\n\n\nTsAmChartsService\n\nTsAmChartsService\n\nTsChart2Module -->\n\nTsAmChartsService->TsChart2Module\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/chart2/chart2.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsChart2Component\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsAmChartsService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsChart2Component\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/*\n *import * as am4core from '@amcharts/amcharts4/core';\n *import am4themes_animated from '@amcharts/amcharts4/themes/animated';\n */\n\nimport { TsChart2Component } from './chart2.component';\nimport { TsAmChartsService, TS_AMCHARTS_TOKEN } from './amcharts.service';\n\nexport * from './chart2.component';\nexport * from './amcharts.service';\n\n\n// Set amCharts theme\n/*\n *am4core.useTheme(am4themes_animated);\n */\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    TsAmChartsService,\n    {\n      // This injection token will be overriden by the user.\n      // It will provide the amCharts core library and chart library\n      provide: TS_AMCHARTS_TOKEN,\n      useValue: null,\n    },\n  ],\n  declarations: [\n    TsChart2Component,\n  ],\n  exports: [\n    TsChart2Component,\n  ],\n})\nexport class TsChart2Module {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartAxis.html":{"url":"interfaces/TsChartAxis.html","title":"interface - TsChartAxis","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartAxis\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        categories\n                                \n                                \n                                            Optional\n                                        labels\n                                \n                                \n                                            Optional\n                                        plotBands\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If categories are present for the xAxis, names are used instead of numbers for that axis.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The axis labels show the number or category for each tick.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plotBands\n                                    \n                                \n                                \n                                    \n                                        plotBands:     TsChartAxisPlotBand[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartAxisPlotBand[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An array of colored bands stretching across the plot area marking an interval on the axis.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The axis title, showing next to the axis line.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     TsChartAxisType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartAxisType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of axis. TsChartAxisType\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartAxisPlotBand.html":{"url":"interfaces/TsChartAxisPlotBand.html","title":"interface - TsChartAxisPlotBand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartAxisPlotBand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n            \n                Description\n            \n            \n                A band stretching across the plot area marking an interval on the axis.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        color\n                                \n                                \n                                        from\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     null | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The color of the plot band.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:     null | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The start position of the plot band in axis units.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Text label for the plot band\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:     null | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The end position of the plot band in axis units.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartDataItem.html":{"url":"interfaces/TsChartDataItem.html","title":"interface - TsChartDataItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartDataItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n            \n                Description\n            \n            \n                Individual data item for a chart.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        dataLabels\n                                \n                                \n                                            Optional\n                                        enableMouseTracking\n                                \n                                \n                                            Optional\n                                        joinBy\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        zones\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An array of data points for the series.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataLabels\n                                    \n                                \n                                \n                                    \n                                        dataLabels:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Individual data label for each point.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableMouseTracking\n                                    \n                                \n                                \n                                    \n                                        enableMouseTracking:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Enable or disable the mouse tracking for a specific series.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        joinBy\n                                    \n                                \n                                \n                                    \n                                        joinBy:     null | string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | string | string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    What property to join the mapData to the value data.\nThe joinBy option can also be an array of two values, where the first points to a key in the\nmapData, and the second points to another key in the data.\nWhen joinBy is null, the map items are joined by their position in the array, which performs\nmuch better in maps with many data points.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the point as shown in the legend, tooltip, dataLabel etc.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     TsChartVisualizationOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartVisualizationOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The visualization to use\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zones\n                                    \n                                \n                                \n                                    \n                                        zones:     TsChartZone[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartZone[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An array defining zones within a series.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsChartEvent.html":{"url":"classes/TsChartEvent.html","title":"class - TsChartEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsChartEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/chart.event.ts\n        \n\n            \n                Description\n            \n            \n                A class wrapper for the event emitted by a chart|series|point\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                            \n                                originalEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(event: Event, context: TsChartObject)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/chart/chart.event.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    Event\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    TsChartObject\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     TsChartObject\n\n                    \n                \n                    \n                        \n                            Type :     TsChartObject\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.event.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            originalEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        originalEvent:     Event\n\n                    \n                \n                    \n                        \n                            Type :     Event\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.event.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TsChartObject } from './options.interface';\n\n\n/**\n * A class wrapper for the event emitted by a chart|series|point\n *\n * @param event - The event object\n * @param context - The 'this' context of {@link TsChartObject}\n */\nexport class TsChartEvent {\n  originalEvent: Event;\n  context: TsChartObject;\n\n  constructor(\n    event: Event,\n    context: TsChartObject,\n  ) {\n    this.originalEvent = event;\n    this.context = context;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartEventOptions.html":{"url":"interfaces/TsChartEventOptions.html","title":"interface - TsChartEventOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartEventOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/utilities/compose-events.ts\n        \n\n            \n                Description\n            \n            \n                The structure for the event-only options object created by {@link attachEvents}\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        chart\n                                \n                                \n                                        plotOptions\n                                \n                                \n                                            Optional\n                                        xAxis\n                                \n                                \n                                            Optional\n                                        yAxis\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chart\n                                    \n                                \n                                \n                                    \n                                        chart:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plotOptions\n                                    \n                                \n                                \n                                    \n                                        plotOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxis\n                                    \n                                \n                                \n                                    \n                                        xAxis:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxis\n                                    \n                                \n                                \n                                    \n                                        yAxis:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TsChartEvent } from './../chart.event';\nimport { TsChartComponent } from './../chart.component';\nimport { TsChartSeriesDirective } from './../series.directive';\nimport { TsChartPointDirective } from './../point.directive';\n\n\nconst chartEvents: string[] = [\n  // NOTE: 'click', works by default via Angular (click)\n  'addSeries',\n  'afterPrint',\n  'beforePrint',\n  'drilldown',\n  'drillup',\n  'load',\n  'redraw',\n  'render',\n  'selection',\n];\n\nconst seriesEvents: string[] = [\n  'afterAnimate',\n  'checkboxClick',\n  'click',\n  'hide',\n  'legendItemClick',\n  'mouseOut',\n  'mouseOver',\n  'show',\n];\n\nconst pointEvents: string[] = [\n  'click',\n  'mouseOut',\n  'mouseOver',\n  'remove',\n  'select',\n  'unselect',\n  'update',\n];\n\n\n/**\n * The structure for the event-only options object created by {@link attachEvents}\n */\nexport interface TsChartEventOptions {\n  chart: {\n    events: {\n      [key: string]: Function;\n    };\n  };\n  plotOptions: {\n    series: {\n      events: {\n        [key: string]: Function;\n      };\n      point: {\n        events: {\n          [key: string]: Function;\n        };\n      };\n    };\n  };\n  xAxis?: {\n    events: {\n      [key: string]: Function;\n    };\n  };\n  yAxis?: {\n    events: {\n      [key: string]: Function;\n    };\n  };\n}\n\n\n/**\n * Return an options object with all chart/series/point events attached.\n *\n * @param chartComponent - The {@link TsChartComponent}\n * @param seriesDirective - The {@link TsChartSeriesDirective}\n * @param pointDirective - The {@link TsChartPointDirective}\n * @return The options object\n */\nexport function composeEvents(\n  chartComponent: TsChartComponent,\n  seriesDirective?: TsChartSeriesDirective,\n  pointDirective?: TsChartPointDirective,\n): TsChartEventOptions {\n  const options: TsChartEventOptions = {\n    chart: {\n      events: {},\n    },\n    plotOptions: {\n      series: {\n        events: {},\n        point: {\n          events: {},\n        },\n      },\n    },\n  };\n\n  // Connect Chart events to Emitters\n  chartEvents.forEach((eventName: string) => {\n    options.chart.events[eventName] = options.chart.events[eventName] || function(this: any, event: any) {\n      chartComponent[eventName].emit(new TsChartEvent(event, this));\n    };\n  });\n\n  // Connect Series events to Emitters\n  if (seriesDirective) {\n    seriesEvents.forEach((eventName: string) => {\n      const fn: Function = options.plotOptions.series.events[eventName] || function(this: any, event: any) {\n        seriesDirective[eventName].emit(new TsChartEvent(event, this));\n      };\n      options.plotOptions.series.events[eventName] = fn;\n    });\n  }\n\n  // Connect Point events to Emitters\n  if (pointDirective) {\n    pointEvents.forEach((eventName: string) => {\n      const fn: Function = options.plotOptions.series.point.events[eventName] || function(this: any, event: any) {\n        pointDirective[eventName].emit(new TsChartEvent(event, this));\n      };\n\n      options.plotOptions.series.point.events[eventName] = fn;\n    });\n  }\n\n  return options;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartMapTooltip.html":{"url":"interfaces/TsChartMapTooltip.html","title":"interface - TsChartMapTooltip","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartMapTooltip\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The tooltip that appears when the user hovers over a series or point.\nThe only difference between this and TsChartMapTooltip is the name of the formatter\nfunction.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        formatter\n                                \n                                \n                                            Optional\n                                        split\n                                \n                                \n                                            Optional\n                                        valuePrefix\n                                \n                                \n                                            Optional\n                                        valueSuffix\n                                \n                                \n                                            Optional\n                                        xDateFormat\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        formatter\n                                    \n                                \n                                \n                                    \n                                        formatter:     TsChartLabelFormatterFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartLabelFormatterFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A callback function for formatting the HTML output for a single point in the tooltip.\nAvailable data:\n\nthis.percentage\nthis.point\nthis.points\nthis.series\nthis.total\nthis.x\nthis.y\n\nTsChartLabelFormatterFn\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        split\n                                    \n                                \n                                \n                                    \n                                        split:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Split the tooltip into one label per series, with the header close to the axis.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valuePrefix\n                                    \n                                \n                                \n                                    \n                                        valuePrefix:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A string to prepend to each series' y value.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueSuffix\n                                    \n                                \n                                \n                                    \n                                        valueSuffix:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A string to append to each series' y value.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xDateFormat\n                                    \n                                \n                                \n                                    \n                                        xDateFormat:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The format for the date in the tooltip header if the X axis is a datetime axis. The default is\na best guess based on the smallest distance between points in the chart.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsChartModule.html":{"url":"modules/TsChartModule.html","title":"module - TsChartModule","body":"\n                   \n\n\n\n\n  Modules\n  TsChartModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsChartModule\n\n\n\ncluster_TsChartModule_declarations\n\n\n\ncluster_TsChartModule_exports\n\n\n\ncluster_TsChartModule_providers\n\n\n\n\nTsChartComponent\n\nTsChartComponent\n\n\n\nTsChartModule\n\nTsChartModule\n\nTsChartModule -->\n\nTsChartComponent->TsChartModule\n\n\n\n\n\nTsChartPointDirective\n\nTsChartPointDirective\n\nTsChartModule -->\n\nTsChartPointDirective->TsChartModule\n\n\n\n\n\nTsChartSeriesDirective\n\nTsChartSeriesDirective\n\nTsChartModule -->\n\nTsChartSeriesDirective->TsChartModule\n\n\n\n\n\nTsChartComponent \n\nTsChartComponent \n\nTsChartComponent  -->\n\nTsChartModule->TsChartComponent \n\n\n\n\n\nTsChartPointDirective \n\nTsChartPointDirective \n\nTsChartPointDirective  -->\n\nTsChartModule->TsChartPointDirective \n\n\n\n\n\nTsChartSeriesDirective \n\nTsChartSeriesDirective \n\nTsChartSeriesDirective  -->\n\nTsChartModule->TsChartSeriesDirective \n\n\n\n\n\nHighchartsService\n\nHighchartsService\n\nTsChartModule -->\n\nHighchartsService->TsChartModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/chart/chart.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsChartComponent\n                            \n                            \n                                TsChartPointDirective\n                            \n                            \n                                TsChartSeriesDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     HighchartsService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsChartComponent\n                            \n                            \n                                    TsChartPointDirective\n                            \n                            \n                                    TsChartSeriesDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  HighchartsService,\n  HIGHCHARTS,\n} from './highcharts.service';\nimport { TsChartComponent } from './chart.component';\nimport { TsChartSeriesDirective } from './series.directive';\nimport { TsChartPointDirective } from './point.directive';\n\nexport * from './chart.component';\nexport * from './options.interface';\nexport * from './highcharts.service';\nexport * from './chart.event';\nexport * from './series.directive';\nexport * from './point.directive';\nexport * from './utilities/compose-events';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    HighchartsService,\n    {\n      // This injection token will be overriden by the user.\n      // It will provide the user-assembled Highcharts library.\n      provide: HIGHCHARTS,\n      useValue: null,\n    },\n  ],\n  declarations: [\n    TsChartComponent,\n    TsChartSeriesDirective,\n    TsChartPointDirective,\n  ],\n  exports: [\n    TsChartComponent,\n    TsChartSeriesDirective,\n    TsChartPointDirective,\n  ],\n})\nexport class TsChartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartObject.html":{"url":"interfaces/TsChartObject.html","title":"interface - TsChartObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ChartObject\n            \n\n\n\n\n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartOptions.html":{"url":"interfaces/TsChartOptions.html","title":"interface - TsChartOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface for options that the consumer can set\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        drilldown\n                                \n                                \n                                            Optional\n                                        legend\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        mapNavigation\n                                \n                                \n                                            Optional\n                                        plotOptions\n                                \n                                \n                                            Optional\n                                        subtitle\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        tooltip\n                                \n                                \n                                            Optional\n                                        xAxis\n                                \n                                \n                                            Optional\n                                        yAxis\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drilldown\n                                    \n                                \n                                \n                                    \n                                        drilldown:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legend\n                                    \n                                \n                                \n                                    \n                                        legend:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapNavigation\n                                    \n                                \n                                \n                                    \n                                        mapNavigation:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plotOptions\n                                    \n                                \n                                \n                                    \n                                        plotOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Wrapper object for config objects for each series type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtitle\n                                    \n                                \n                                \n                                    \n                                        subtitle:     TsChartTitle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartTitle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The chart's subtitle. TsChartTitle\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     TsChartTitle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartTitle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The chart's main title. TsChartTitle\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                    \n                                \n                                \n                                    \n                                        tooltip:     TsChartTooltip | TsChartMapTooltip\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartTooltip | TsChartMapTooltip\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Options for the tooltip that appears when the user hovers over a series or point.\nTsChartTooltip TsChartMapTooltip\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxis\n                                    \n                                \n                                \n                                    \n                                        xAxis:     TsChartAxis\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartAxis\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The X axis or category axis. Normally this is the horizontal axis, though if the chart is\ninverted this is the vertical axis.\nTsChartAxis\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxis\n                                    \n                                \n                                \n                                    \n                                        yAxis:     TsChartAxis\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartAxis\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\nthis is the horizontal axis.\nTsChartAxis\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsChartPointDirective.html":{"url":"directives/TsChartPointDirective.html","title":"directive - TsChartPointDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsChartPointDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/point.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ts-point\n                    \n\n                \n            \n        \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                    \n                        Fires when a point is clicked.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/point.directive.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                    \n                        Fires when the mouse leaves the area close to the point.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/point.directive.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                    \n                        Fires when the mouse enters the area close to the point.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/point.directive.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        remove\n                    \n                    \n                        Fires when the point is removed using the .remove() method.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/point.directive.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        select\n                    \n                    \n                        Fires when the point is selected either programmatically or following a click on the point.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/point.directive.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        unselect\n                    \n                    \n                        Fires when the point is unselected either programmatically or following a click on the point.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/point.directive.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        update\n                    \n                    \n                        Fires when the point is updated programmatically through the .update() method.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/point.directive.ts:58\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  Output,\n  EventEmitter,\n} from '@angular/core';\n\nimport { TsChartEvent } from './chart.event';\n\n\n// NOTE: We are attaching only functionality (no DOM) but we still want the consumer to be able to\n// add a component selector to the DOM rather than adding another dummy DOM element to attach event\n// listeners to.\n// tslint:disable: directive-selector\n@Directive({\n  selector: 'ts-point',\n})\nexport class TsChartPointDirective {\n  /**\n   * Fires when a point is clicked.\n   */\n  @Output()\n  public click: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the mouse leaves the area close to the point.\n   */\n  @Output()\n  public mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the mouse enters the area close to the point.\n   */\n  @Output()\n  public mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the point is removed using the .remove() method.\n   */\n  @Output()\n  public remove: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the point is selected either programmatically or following a click on the point.\n   */\n  @Output()\n  public select: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the point is unselected either programmatically or following a click on the point.\n   */\n  @Output()\n  public unselect: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the point is updated programmatically through the .update() method.\n   */\n  @Output()\n  public update: EventEmitter = new EventEmitter();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsChartSeriesDirective.html":{"url":"directives/TsChartSeriesDirective.html","title":"directive - TsChartSeriesDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsChartSeriesDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/series.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ts-series\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                point\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                afterAnimate\n                            \n                            \n                                checkboxClick\n                            \n                            \n                                click\n                            \n                            \n                                hide\n                            \n                            \n                                legendItemClick\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        afterAnimate\n                    \n                    \n                        Fires after the series has finished its initial animation, or in case animation is disabled,\nimmediately as the series is displayed.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        checkboxClick\n                    \n                    \n                        Fires when the checkbox next to the series' name in the legend is clicked.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        click\n                    \n                    \n                        Fires when the series is clicked.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hide\n                    \n                    \n                        Fires when the series is hidden after chart generation time, either by clicking the legend item\nor by calling .hide().\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        legendItemClick\n                    \n                    \n                        Fires when the legend item belonging to the series is clicked.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                    \n                        Fires when the mouse leaves the graph.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                    \n                        Fires when the mouse enters the graph.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        show\n                    \n                    \n                        Fires when the series is shown after chart generation time, either by clicking the legend item or by calling .show().\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:74\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            point\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        point:     TsChartPointDirective\n\n                    \n                \n                    \n                        \n                            Type :     TsChartPointDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/series.directive.ts:24\n                            \n                        \n\n                \n                    \n                        Create a reference to the child TsChartPointDirective if one exists.\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ContentChild,\n  EventEmitter,\n  Output,\n} from '@angular/core';\n\nimport { TsChartEvent } from './chart.event';\nimport { TsChartPointDirective } from './point.directive';\n\n\n// NOTE: We are attaching only functionality (no DOM) but we still want the consumer to be able to\n// add a component selector to the DOM rather than adding another dummy DOM element to attach event\n// listeners to.\n// tslint:disable: directive-selector\n@Directive({\n  selector: 'ts-series',\n})\nexport class TsChartSeriesDirective {\n  /**\n   * Create a reference to the child {@link TsChartPointDirective} if one exists.\n   */\n  @ContentChild(TsChartPointDirective)\n  point!: TsChartPointDirective;\n\n  /**\n   * Fires after the series has finished its initial animation, or in case animation is disabled,\n   * immediately as the series is displayed.\n   */\n  @Output()\n  public afterAnimate: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the checkbox next to the series' name in the legend is clicked.\n   */\n  @Output()\n  public checkboxClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the series is clicked.\n   */\n  @Output()\n  public click: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the series is hidden after chart generation time, either by clicking the legend item\n   * or by calling .hide().\n   */\n  @Output()\n  public hide: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the legend item belonging to the series is clicked.\n   */\n  @Output()\n  public legendItemClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the mouse leaves the graph.\n   */\n  @Output()\n  public mouseOut: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the mouse enters the graph.\n   */\n  @Output()\n  public mouseOver: EventEmitter = new EventEmitter();\n\n  /**\n   * Fires when the series is shown after chart generation time, either by clicking the legend item or by calling .show().\n   */\n  @Output()\n  public show: EventEmitter = new EventEmitter();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartTitle.html":{"url":"interfaces/TsChartTitle.html","title":"interface - TsChartTitle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartTitle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The axis title, showing next to the axis line.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The actual text of the axis title.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartTooltip.html":{"url":"interfaces/TsChartTooltip.html","title":"interface - TsChartTooltip","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartTooltip\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The tooltip that appears when the user hovers over a series or point.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        pointFormatter\n                                \n                                \n                                            Optional\n                                        split\n                                \n                                \n                                            Optional\n                                        valuePrefix\n                                \n                                \n                                            Optional\n                                        valueSuffix\n                                \n                                \n                                            Optional\n                                        xDateFormat\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pointFormatter\n                                    \n                                \n                                \n                                    \n                                        pointFormatter:     TsChartLabelFormatterFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsChartLabelFormatterFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A callback function for formatting the HTML output for a single point in the tooltip.\nAvailable data:\n\nthis.percentage\nthis.point\nthis.points\nthis.series\nthis.total\nthis.x\nthis.y\n\nTsChartLabelFormatterFn\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        split\n                                    \n                                \n                                \n                                    \n                                        split:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Split the tooltip into one label per series, with the header close to the axis.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valuePrefix\n                                    \n                                \n                                \n                                    \n                                        valuePrefix:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A string to prepend to each series' y value.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueSuffix\n                                    \n                                \n                                \n                                    \n                                        valueSuffix:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A string to append to each series' y value.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xDateFormat\n                                    \n                                \n                                \n                                    \n                                        xDateFormat:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The format for the date in the tooltip header if the X axis is a datetime axis. The default is\na best guess based on the smallest distance between points in the chart.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsChartZone.html":{"url":"interfaces/TsChartZone.html","title":"interface - TsChartZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsChartZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/options.interface.ts\n        \n\n            \n                Description\n            \n            \n                A zone within a series.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        fillColor\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines the color of the series.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                    \n                                \n                                \n                                    \n                                        fillColor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines the fill color for the series (in area type series).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The value up to where the zone extends, if undefined the zones stretches to the last value in\nthe series.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartObject } from 'highcharts';\n\n\n// tslint:disable: no-empty-interface\nexport interface TsChartObject extends ChartObject {}\n// tslint:enable: no-empty-interface\n\n\n/**\n * The type of axis.\n *\n * In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\n * appropriate values like full hours or days. In a category axis, the point names of the chart's\n * series are used for categories, if not a categories array is defined.\n */\nexport type TsChartAxisType\n  = 'category'\n  | 'datetime'\n  | 'linear'\n  | 'logarithmic'\n;\n\n\n/**\n * The allowed map types\n */\nexport type TsChartMapTypes\n  = 'europe'\n  | 'northAmerica'\n  | 'usa'\n  | 'worldContinents'\n  | 'world'\n;\n\n\n/**\n * Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\n * for a specific point on series.\n *\n * Available data: `this.percentage|point|series|total|x|y`\n */\nexport type TsChartLabelFormatterFn = () => false | string;\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'area'\n  | 'bar'\n  | 'bullet'\n  | 'column'\n  | 'line'\n  | 'map'\n  | 'mapbubble'\n  | 'pie'\n  | 'scatter'\n;\n\n\n/**\n * Define how chart data should stack\n */\nexport type TsChartStacking\n  = null\n  | 'normal'\n  | 'percent'\n;\n\n\n/**\n * A band stretching across the plot area marking an interval on the axis.\n */\nexport interface TsChartAxisPlotBand {\n  /**\n   * The color of the plot band.\n   */\n  color: null | string;\n  /**\n   * The start position of the plot band in axis units.\n   */\n  from: null | number;\n  /**\n   * Text label for the plot band\n   */\n  label?: {\n    text: string;\n  };\n  /**\n   * The end position of the plot band in axis units.\n   */\n  to: null | number;\n}\n\n\n/*\n * The allowed options for a chart axis\n */\nexport interface TsChartAxis {\n  /**\n   * If categories are present for the xAxis, names are used instead of numbers for that axis.\n   */\n  categories?: string[];\n  /**\n   * The axis labels show the number or category for each tick.\n   */\n  labels?: {\n    /**\n     * Callback JavaScript function to format the label.\n     */\n    formatter: TsChartLabelFormatterFn;\n  };\n  /**\n   * An array of colored bands stretching across the plot area marking an interval on the axis.\n   */\n  plotBands?: TsChartAxisPlotBand[];\n  /**\n   * The axis title, showing next to the axis line.\n   */\n  title?: {\n    /**\n     * The actual text of the axis title.\n     */\n    text: string;\n  };\n  /**\n   * The type of axis. {@link TsChartAxisType}\n   */\n  type?: TsChartAxisType;\n}\n\n\n/**\n * The axis title, showing next to the axis line.\n */\nexport interface TsChartTitle {\n  /**\n   * The actual text of the axis title.\n   */\n  text: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n */\nexport interface TsChartTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  pointFormatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * The tooltip that appears when the user hovers over a series or point.\n *\n * The only difference between this and {@link TsChartMapTooltip} is the name of the formatter\n * function.\n */\nexport interface TsChartMapTooltip {\n  /**\n   * A callback function for formatting the HTML output for a single point in the tooltip.\n   *\n   * Available data:\n   * - this.percentage\n   * - this.point\n   * - this.points\n   * - this.series\n   * - this.total\n   * - this.x\n   * - this.y\n   *\n   * {@link TsChartLabelFormatterFn}\n   */\n  formatter?: TsChartLabelFormatterFn;\n  /**\n   * Split the tooltip into one label per series, with the header close to the axis.\n   */\n  split?: boolean;\n  /**\n   * A string to prepend to each series' y value.\n   */\n  valuePrefix?: string;\n  /**\n   * A string to append to each series' y value.\n   */\n  valueSuffix?: string;\n  /**\n   * The format for the date in the tooltip header if the X axis is a datetime axis. The default is\n   * a best guess based on the smallest distance between points in the chart.\n   */\n  xDateFormat?: string;\n}\n\n\n/**\n * A zone within a series.\n */\nexport interface TsChartZone {\n  /**\n   * Defines the color of the series.\n   */\n  color?: string;\n  /**\n   * Defines the fill color for the series (in area type series).\n   */\n  fillColor?: string;\n  /**\n   * The value up to where the zone extends, if undefined the zones stretches to the last value in\n   * the series.\n   */\n  value?: number;\n}\n\n\n/**\n * Individual data item for a chart.\n */\nexport interface TsChartDataItem {\n  /**\n   * An array of data points for the series.\n   */\n  data?: any[];\n  /**\n   * Individual data label for each point.\n   */\n  dataLabels?: {\n    /**\n     * Enable or disable the data labels.\n     */\n    enabled?: boolean;\n    /**\n     * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n     *\n     * Available data:\n     * - this.percentage\n     * - this.point\n     * - this.series\n     * - this.total\n     * - this.x\n     * - this.y\n     */\n    formatter?: TsChartLabelFormatterFn;\n  };\n  /**\n   * Enable or disable the mouse tracking for a specific series.\n   */\n  enableMouseTracking?: boolean;\n  /**\n   * What property to join the mapData to the value data.\n   *\n   * The joinBy option can also be an array of two values, where the first points to a key in the\n   * mapData, and the second points to another key in the data.\n   *\n   * When joinBy is null, the map items are joined by their position in the array, which performs\n   * much better in maps with many data points.\n   */\n  joinBy?: null | string | string[];\n  /**\n   * The name of the point as shown in the legend, tooltip, dataLabel etc.\n   */\n  name?: string;\n  /**\n   * The visualization to use\n   */\n  type?: TsChartVisualizationOptions;\n  /**\n   * An array defining zones within a series.\n   */\n  zones?: TsChartZone[];\n}\n\n\n/**\n * An array of data series'.\n */\nexport type TsChartData = TsChartDataItem[];\n\n\n/**\n * Interface for options that the consumer can set\n */\nexport interface TsChartOptions {\n  drilldown?: {\n    series: TsChartData;\n  };\n  legend?: {\n    /**\n     * Enable or disable the legend.\n     */\n    enabled: boolean;\n  };\n  map?: {\n    /**\n     * What property to join the mapData to the value data with.\n     */\n    joinBy: null | string | string[];\n  };\n  mapNavigation?: {\n    /**\n     * Whether to enable map navigation.\n     */\n    enabled: boolean;\n  };\n  /**\n   * Wrapper object for config objects for each series type.\n   */\n  plotOptions?: {\n    area?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    bar?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    column?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n      /**\n       * Whether to stack the values of each series on top of each other.\n       *\n       * When stacking is enabled, data must be sorted in ascending X order.\n       */\n      stacking?: TsChartStacking;\n    };\n    line?: {\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    pie?: {\n      /*\n       * Options for the series data labels, appearing next to each data point.\n       */\n      dataLabels?: {\n        /**\n         * Formatter function for the data label. {@link TsChartLabelFormatterFn}\n         */\n        formatter: TsChartLabelFormatterFn;\n      };\n      /**\n       * If no x values are given for the points in a series, pointStart defines on what value to\n       * start.\n       */\n      pointStart?: number;\n    };\n    /**\n     * General options for all series types.\n     */\n    series?: {\n      /**\n       * An array defining zones within a series.\n       */\n      zones?: TsChartZone[];\n    };\n  };\n  /**\n   * The chart's subtitle. {@link TsChartTitle}\n   */\n  subtitle?: TsChartTitle;\n  /**\n   * The chart's main title. {@link TsChartTitle}\n   */\n  title?: TsChartTitle;\n  /**\n   * Options for the tooltip that appears when the user hovers over a series or point.\n   *\n   * {@link TsChartTooltip} {@link TsChartMapTooltip}\n   */\n  tooltip?: TsChartTooltip | TsChartMapTooltip;\n  /**\n   * The X axis or category axis. Normally this is the horizontal axis, though if the chart is\n   * inverted this is the vertical axis.\n   *\n   * {@link TsChartAxis}\n   */\n  xAxis?: TsChartAxis;\n  /**\n   * The Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted\n   * this is the horizontal axis.\n   *\n   * {@link TsChartAxis}\n   */\n  yAxis?: TsChartAxis;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsCheckboxChange.html":{"url":"classes/TsCheckboxChange.html","title":"class - TsCheckboxChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsCheckboxChange\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/checkbox/checkbox.component.ts\n        \n\n            \n                Description\n            \n            \n                Expose the MatCheckboxChange event as TsCheckboxChange. Used by TsCheckboxComponent\n\n            \n\n            \n                Extends\n            \n            \n                    MatCheckboxChange\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n\nTable of Contents\n\nBasic usage\nReactive Forms\nngModel\nisChecked\n\n\nBasic usage\nWrap your label text inside the component:\n\n  My checkbox label\nReactive Forms\nTo use the checkbox with a reactive form, pass the formControl to the checkbox:\n\n  I will be checked if `myControl.value` is true.\nngModel\nTo use the checkbox with Angular's ngModel, just attach the directive to the checkbox:\n\n  I will be checked if `myValue` is true.\nisChecked\nTo seed the initial checked state use the isChecked property:\n\n  I will be checked by default!\n\nNOTE: This should rarely be used (if ever). We should be relying on a Reactive Form or ngModel.\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n} from '@angular/core';\nimport {\n  MatCheckbox,\n  MatCheckboxChange,\n} from '@angular/material/checkbox';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Expose the MatCheckboxChange event as TsCheckboxChange. Used by {@link TsCheckboxComponent}\n */\nexport class TsCheckboxChange extends MatCheckboxChange {}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsCheckboxComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the checkbox UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-checkbox`: The checkbox input element\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  host: {\n    class: 'ts-checkbox',\n  },\n  providers: [CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCheckbox',\n})\nexport class TsCheckboxComponent extends TsReactiveFormBaseComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-checkbox-${nextUniqueId++}`;\n\n  /**\n   * Provide access to the MatCheckboxComponent\n   */\n  @ViewChild(MatCheckbox)\n  checkbox!: MatCheckbox;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Toggle the underlying checkbox if the isChecked property changes\n   */\n  @Input()\n  public set isChecked(v: boolean) {\n    this._isChecked = coerceBooleanProperty(v);\n    this.value = this._isChecked;\n    this.checkbox.checked = this._isChecked;\n    this.changeDetectorRef.detectChanges();\n  }\n  public get isChecked(): boolean {\n    return this._isChecked;\n  }\n  private _isChecked: boolean = false;\n\n  /**\n   * Define if the checkbox is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the checkbox should be indeterminate\n   */\n  @Input()\n  public isIndeterminate: boolean = false;\n\n  /**\n   * Define if the checkbox is required\n   */\n  @Input()\n  public isRequired: boolean = false;\n\n  /**\n   * Toggle the underlying checkbox if the ngModel changes\n   */\n  @Input()\n  public set ngModel(v: boolean) {\n    this._isChecked = v;\n  }\n\n  /**\n   * Define the tabindex\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit an event on input change\n   */\n  @Output()\n  public inputChange: EventEmitter = new EventEmitter;\n\n  /**\n   * Emit a change when moving from the indeterminate state\n   */\n  @Output()\n  public indeterminateChange: EventEmitter = new EventEmitter;\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsCheckboxComponent.html":{"url":"components/TsCheckboxComponent.html","title":"component - TsCheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsCheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        This is the checkbox UI Component\nQA CSS CLASSES\n\nqa-checkbox: The checkbox input element\n\n\n    \n\n    \n        Extends\n    \n    \n            TsReactiveFormBaseComponent\n    \n\n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsCheckbox\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n            \n                providers\n                \n                            CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                ts-checkbox\n            \n\n            \n                styleUrls\n                checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _id\n                            \n                            \n                                    Private\n                                _isChecked\n                            \n                            \n                                    Protected\n                                _uid\n                            \n                            \n                                checkbox\n                            \n                            \n                                    Protected\n                                innerValue\n                            \n                            \n                                    Protected\n                                onChangeCallback\n                            \n                            \n                                    Protected\n                                onTouchedCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onBlur\n                            \n                            \n                                    Protected\n                                registerOnChange\n                            \n                            \n                                    Protected\n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                isChecked\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isIndeterminate\n                            \n                            \n                                isRequired\n                            \n                            \n                                ngModel\n                            \n                            \n                                tabIndex\n                            \n                            \n                                theme\n                            \n                            \n                                formControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                indeterminateChange\n                            \n                            \n                                inputChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/checkbox/checkbox.component.ts:166\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                    \n                        Define an ID for the component\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:95\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isChecked\n                    \n                    \n                        Toggle the underlying checkbox if the isChecked property changes\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:107\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the checkbox is disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:122\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isIndeterminate\n                    \n                    \n                        Define if the checkbox should be indeterminate\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:128\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                    \n                        Define if the checkbox is required\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:134\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ngModel\n                    \n                    \n                        Toggle the underlying checkbox if the ngModel changes\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:140\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                    \n                        Define the tabindex\n\n                            \n                            Type:    number\n\n                            \n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:148\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:154\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        Define the form control to get access to validators\n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        indeterminateChange\n                    \n                    \n                        Emit a change when moving from the indeterminate state\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:166\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputChange\n                    \n                    \n                        Emit an event on input change\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:160\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onBlur\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onBlur()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:61\n                            \n                        \n\n\n                \n                    \n                            Set touched on blur\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:69\n                            \n                        \n\n\n                \n                    \n                            Register onChange callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:77\n                            \n                        \n\n\n                \n                    \n                            Register onTouched callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:85\n                            \n                        \n\n\n                \n                    \n                            Write value to inner value (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : this._uid\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _isChecked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _isChecked:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _uid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _uid:     \n\n                    \n                \n                    \n                        \n                            Default value : `ts-checkbox-${nextUniqueId++}`\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:83\n                            \n                        \n\n                \n                    \n                        Define the default component ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkbox:     MatCheckbox\n\n                    \n                \n                    \n                        \n                            Type :     MatCheckbox\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:89\n                            \n                        \n\n                \n                    \n                        Provide access to the MatCheckboxComponent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            innerValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        innerValue:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:26\n                            \n                        \n\n                \n                    \n                        Define the internal data model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onChangeCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onChangeCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:31\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onTouchedCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onTouchedCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:36\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:98\n                                \n                            \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:95\n                                \n                            \n                    \n                        \n                                Define an ID for the component\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isChecked\n                    \n                \n\n                \n                    \n                        getisChecked()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:113\n                                \n                            \n\n                \n                    \n                        setisChecked(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:107\n                                \n                            \n                    \n                        \n                                Toggle the underlying checkbox if the isChecked property changes\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        ngModel\n                    \n                \n\n\n                \n                    \n                        setngModel(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:140\n                                \n                            \n                    \n                        \n                                Toggle the underlying checkbox if the ngModel changes\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        \n\nTable of Contents\n\nBasic usage\nReactive Forms\nngModel\nisChecked\n\n\nBasic usage\nWrap your label text inside the component:\n\n  My checkbox label\nReactive Forms\nTo use the checkbox with a reactive form, pass the formControl to the checkbox:\n\n  I will be checked if `myControl.value` is true.\nngModel\nTo use the checkbox with Angular's ngModel, just attach the directive to the checkbox:\n\n  I will be checked if `myValue` is true.\nisChecked\nTo seed the initial checked state use the isChecked property:\n\n  I will be checked by default!\n\nNOTE: This should rarely be used (if ever). We should be relying on a Reactive Form or ngModel.\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n} from '@angular/core';\nimport {\n  MatCheckbox,\n  MatCheckboxChange,\n} from '@angular/material/checkbox';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Expose the MatCheckboxChange event as TsCheckboxChange. Used by {@link TsCheckboxComponent}\n */\nexport class TsCheckboxChange extends MatCheckboxChange {}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsCheckboxComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the checkbox UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-checkbox`: The checkbox input element\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  host: {\n    class: 'ts-checkbox',\n  },\n  providers: [CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCheckbox',\n})\nexport class TsCheckboxComponent extends TsReactiveFormBaseComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-checkbox-${nextUniqueId++}`;\n\n  /**\n   * Provide access to the MatCheckboxComponent\n   */\n  @ViewChild(MatCheckbox)\n  checkbox!: MatCheckbox;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Toggle the underlying checkbox if the isChecked property changes\n   */\n  @Input()\n  public set isChecked(v: boolean) {\n    this._isChecked = coerceBooleanProperty(v);\n    this.value = this._isChecked;\n    this.checkbox.checked = this._isChecked;\n    this.changeDetectorRef.detectChanges();\n  }\n  public get isChecked(): boolean {\n    return this._isChecked;\n  }\n  private _isChecked: boolean = false;\n\n  /**\n   * Define if the checkbox is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the checkbox should be indeterminate\n   */\n  @Input()\n  public isIndeterminate: boolean = false;\n\n  /**\n   * Define if the checkbox is required\n   */\n  @Input()\n  public isRequired: boolean = false;\n\n  /**\n   * Toggle the underlying checkbox if the ngModel changes\n   */\n  @Input()\n  public set ngModel(v: boolean) {\n    this._isChecked = v;\n  }\n\n  /**\n   * Define the tabindex\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit an event on input change\n   */\n  @Output()\n  public inputChange: EventEmitter = new EventEmitter;\n\n  /**\n   * Emit a change when moving from the indeterminate state\n   */\n  @Output()\n  public indeterminateChange: EventEmitter = new EventEmitter;\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsCheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsCheckboxModule.html":{"url":"modules/TsCheckboxModule.html","title":"module - TsCheckboxModule","body":"\n                   \n\n\n\n\n  Modules\n  TsCheckboxModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsCheckboxModule\n\n\n\ncluster_TsCheckboxModule_declarations\n\n\n\ncluster_TsCheckboxModule_exports\n\n\n\n\nTsCheckboxComponent\n\nTsCheckboxComponent\n\n\n\nTsCheckboxModule\n\nTsCheckboxModule\n\nTsCheckboxModule -->\n\nTsCheckboxComponent->TsCheckboxModule\n\n\n\n\n\nTsCheckboxComponent \n\nTsCheckboxComponent \n\nTsCheckboxComponent  -->\n\nTsCheckboxModule->TsCheckboxComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/checkbox/checkbox.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCheckboxComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCheckboxComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { TsCheckboxComponent } from './checkbox.component';\n\nexport * from './checkbox.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatCheckboxModule,\n  ],\n  exports: [\n    TsCheckboxComponent,\n  ],\n  declarations: [\n    TsCheckboxComponent,\n  ],\n})\nexport class TsCheckboxModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsColumnDefDirective.html":{"url":"directives/TsColumnDefDirective.html","title":"directive - TsColumnDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsColumnDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Column definition for the TsTableComponent.\nDefines a set of cells available for a table column.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsColumnDef]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                minWidth\n                            \n                            \n                                noWrap\n                            \n                            \n                                tsColumnDef\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        minWidth\n                    \n                    \n                        Define a minimum width for the column\n\n                            \n                            Type:    string | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/table/cell.ts:129\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        noWrap\n                    \n                    \n                        Define if a column's contents should wrap when long\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/table/cell.ts:123\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tsColumnDef\n                    \n                    \n                        Define a unique name for this column\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/table/cell.ts:116\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsConfirmationDirective.html":{"url":"directives/TsConfirmationDirective.html","title":"directive - TsConfirmationDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsConfirmationDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/confirmation/confirmation.directive.ts\n        \n\n            \n                Description\n            \n            \n                A directive to inject a confirmation step into any button\n\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n                        OnInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \nClick me!\n\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsConfirmation]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modalInstance\n                            \n                            \n                                    Private\n                                overlayRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createOverlay\n                            \n                            \n                                    Private\n                                dismissOverlay\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelled\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, overlay: Overlay, host: TsButtonComponent, changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/confirmation/confirmation.directive.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    TsButtonComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelled\n                    \n                    \n                        An event emitted when the confirmation is cancelled\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:57\n                            \n                        \n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick(event: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:74\n                            \n                        \n\n\n                \n                    \n                            Spawn the confirmation overlay on click\n\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:99\n                            \n                        \n\n\n                \n                    \n                            Create and attach the confirmation overlay\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dismissOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dismissOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:155\n                            \n                        \n\n\n                \n                    \n                            Dismiss the overlay\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:90\n                            \n                        \n\n\n                \n                    \n                            Dismiss the overlay and clean up observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:82\n                            \n                        \n\n\n                \n                    \n                            Set a flag in the TsButtonComponent to intercept the click\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modalInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalInstance:     TsConfirmationModalComponent\n\n                    \n                \n                    \n                        \n                            Type :     TsConfirmationModalComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:46\n                            \n                        \n\n                \n                    \n                        Store a reference to the created confirmation modal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            overlayRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        overlayRef:     OverlayRef | null\n\n                    \n                \n                    \n                        \n                            Type :     OverlayRef | null\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:51\n                            \n                        \n\n                \n                    \n                        Store a reference to the modal overlay\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        Confirmation\n\nThis directive can be attached to any  to enable a confirmation step before triggering\nthe button's action.\nBasic flow:\n\nThe user clicks the button\nA pop-up appears asking user to cancel or confirm\nIf the user clicks 'confirm', the original ts-button click event is emitted\nIf the user clicks 'cancel' the pop-up is closed\n\n\n\nTable of Contents\n\nBasic usage\nCancelled event\n\n\nBasic usage\nAdd the directive to any ts-button:\n\n  Click me!\nCancelled event\nThis directive exposes a new event that can be used to determine when a user has chosen 'cancel'\nfrom the confirmation pop-up.\n\n  Click me!\n\n    \n\n    \n        import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  ConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n} from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ESCAPE } from '@terminus/ngx-tools/keycodes';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { untilComponentDestroyed } from '@terminus/ngx-tools';\nimport { filter, merge } from 'rxjs/operators';\n\nimport { TsConfirmationModalComponent } from './confirmation-modal.component';\nimport { TsButtonComponent } from './../button/button.component';\n\n\n/**\n * A directive to inject a confirmation step into any button\n *\n * @example\n *         \n *           Click me!\n *         \n */\n@Directive({\n  selector: '[tsConfirmation]',\n  host: {\n    class: 'ts-confirmation',\n  },\n  exportAs: 'tsConfirmation',\n})\nexport class TsConfirmationDirective implements OnDestroy, OnInit {\n  /**\n   * Store a reference to the created confirmation modal\n   */\n  private modalInstance!: TsConfirmationModalComponent;\n\n  /**\n   * Store a reference to the modal overlay\n   */\n  private overlayRef!: OverlayRef | null;\n\n  /**\n   * An event emitted when the confirmation is cancelled\n   */\n  @Output()\n  public cancelled: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private elementRef: ElementRef,\n    private overlay: Overlay,\n    private host: TsButtonComponent,\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Spawn the confirmation overlay on click\n   *\n   * @param event - The MouseEvent\n   */\n  @HostListener('click', ['$event'])\n  public onClick(event: Event): void {\n    this.createOverlay();\n  }\n\n\n  /**\n   * Set a flag in the {@link TsButtonComponent} to intercept the click\n   */\n  public ngOnInit(): void {\n    this.host.interceptClick = true;\n  }\n\n\n  /**\n   * Dismiss the overlay and clean up observables\n   */\n  public ngOnDestroy(): void {\n    this.dismissOverlay();\n    this.host.interceptClick = false;\n  }\n\n\n  /**\n   * Create and attach the confirmation overlay\n   */\n  private createOverlay(): void {\n    const positionStrategy: ConnectedPositionStrategy = this.overlay.position().connectedTo(\n      this.elementRef,\n      {\n        originX: 'center',\n        originY: 'bottom',\n      },\n      {\n        overlayX: 'center',\n        overlayY: 'top',\n      },\n    );\n\n    const overlayConfig: OverlayConfig = new OverlayConfig({\n      positionStrategy,\n      hasBackdrop: true,\n      backdropClass: 'ts-confirmation-overlay',\n      panelClass: ['qa-confirmation', 'ts-confirmation-overlay__panel'],\n    });\n\n    // Create the overlay\n    this.overlayRef = this.overlay.create(overlayConfig);\n\n    // Wire up listeners for overlay clicks and ESC key\n    this.overlayRef._keydownEvents.pipe(\n      filter((event) => event.keyCode === ESCAPE),\n      merge(this.overlayRef.backdropClick()),\n      untilComponentDestroyed(this),\n    ).subscribe(() => {\n      this.dismissOverlay();\n      this.cancelled.emit(true);\n    });\n\n    // Create and attach the modal\n    const userProfilePortal = new ComponentPortal(TsConfirmationModalComponent);\n    this.modalInstance = this.overlayRef.attach(userProfilePortal).instance;\n\n    // Start the progress indicator of the TsButton\n    this.host.showProgress = true;\n\n    // Subscribe to the continue event\n    this.modalInstance.confirm.subscribe((shouldProceed: boolean) => {\n      if (coerceBooleanProperty(shouldProceed)) {\n        this.host.clickEvent.emit(this.host.originalClickEvent);\n        this.dismissOverlay();\n      } else {\n        this.dismissOverlay();\n        this.cancelled.emit(true);\n      }\n    });\n  }\n\n\n  /**\n   * Dismiss the overlay\n   */\n  private dismissOverlay(): void {\n    // istanbul ignore else\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n    }\n    // Stop the progress indicator of the TsButton\n    this.host.showProgress = false;\n    this.changeDetectorRef.markForCheck();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsConfirmationModalComponent.html":{"url":"components/TsConfirmationModalComponent.html","title":"component - TsConfirmationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsConfirmationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/confirmation/confirmation-modal.component.ts\n\n\n    \n        Description\n    \n    \n        The confirmation modal used by TsConfirmationDirective\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsConfirmation\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-confirmation-modal\n            \n\n            \n                styleUrls\n                confirmation-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirmation-modal.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirm\n                            \n                            \n                                    Public\n                                gap\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirm:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation-modal.component.ts:29\n                            \n                        \n\n                \n                    \n                        Stream confirmation choices\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gap:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : TS_SPACING.large[0]\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation-modal.component.ts:34\n                            \n                        \n\n                \n                    \n                        Define the space between the buttons\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { TS_SPACING } from './../spacing/spacing.constant';\n\n\n/**\n * The confirmation modal used by {@link TsConfirmationDirective}\n */\n@Component({\n  selector: 'ts-confirmation-modal',\n  styleUrls: ['./confirmation-modal.component.scss'],\n  templateUrl: './confirmation-modal.component.html',\n  host: {\n    class: 'ts-confirmation',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsConfirmation',\n})\nexport class TsConfirmationModalComponent {\n  /**\n   * Stream confirmation choices\n   */\n  public confirm: Subject = new Subject();\n\n  /**\n   * Define the space between the buttons\n   */\n  public gap: string = TS_SPACING.large[0];\n}\n\n    \n\n    \n        \n  \n    Cancel\n  \n\n  \n    Confirm\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Cancel        Confirm  '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsConfirmationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsConfirmationModule.html":{"url":"modules/TsConfirmationModule.html","title":"module - TsConfirmationModule","body":"\n                   \n\n\n\n\n  Modules\n  TsConfirmationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsConfirmationModule\n\n\n\ncluster_TsConfirmationModule_declarations\n\n\n\ncluster_TsConfirmationModule_imports\n\n\n\ncluster_TsConfirmationModule_exports\n\n\n\n\nTsConfirmationDirective\n\nTsConfirmationDirective\n\n\n\nTsConfirmationModule\n\nTsConfirmationModule\n\nTsConfirmationModule -->\n\nTsConfirmationDirective->TsConfirmationModule\n\n\n\n\n\nTsConfirmationModalComponent\n\nTsConfirmationModalComponent\n\nTsConfirmationModule -->\n\nTsConfirmationModalComponent->TsConfirmationModule\n\n\n\n\n\nTsConfirmationDirective \n\nTsConfirmationDirective \n\nTsConfirmationDirective  -->\n\nTsConfirmationModule->TsConfirmationDirective \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsConfirmationModule -->\n\nTsButtonModule->TsConfirmationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/confirmation/confirmation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsConfirmationDirective\n                            \n                            \n                                TsConfirmationModalComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TsConfirmationModalComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsConfirmationDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TsButtonModule } from './../button/button.module';\nimport { TsConfirmationDirective } from './confirmation.directive';\nimport { TsConfirmationModalComponent } from './confirmation-modal.component';\n\nexport * from './confirmation.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    TsButtonModule,\n    FlexLayoutModule,\n  ],\n  declarations: [\n    TsConfirmationDirective,\n    TsConfirmationModalComponent,\n  ],\n  exports: [\n    TsConfirmationDirective,\n  ],\n  entryComponents: [\n    TsConfirmationModalComponent,\n  ],\n})\nexport class TsConfirmationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsCopyComponent.html":{"url":"components/TsCopyComponent.html","title":"component - TsCopyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsCopyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/copy/copy.component.ts\n\n\n    \n        Description\n    \n    \n        This is the TsCopyComponent UI Component\nQA CSS CLASSES\nqa-copy: Placed on the div element which contains this component\nqa-copy-content: Placed on a div element which contains the content which will be copied\nqa-copy-icon: Placed on the icon which copies the content to the clipboard when clicked\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    My text to copy!\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsCopy\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-copy\n            \n\n            \n                styleUrls\n                copy.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./copy.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Private\n                                document\n                            \n                            \n                                    Public\n                                hasSelected\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                rippleColor\n                            \n                            \n                                    Private\n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                copyToClipboard\n                            \n                            \n                                    Public\n                                resetSelection\n                            \n                            \n                                    Public\n                                selectText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableInitialSelection\n                            \n                            \n                                enableQuickCopy\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(documentService: TsDocumentService, windowService: TsWindowService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/copy/copy.component.ts:92\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        documentService\n                                                  \n                                                        \n                                                                    TsDocumentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        windowService\n                                                  \n                                                        \n                                                                    TsWindowService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableInitialSelection\n                    \n                    \n                        Define if the initial click should select the contents\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:80\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableQuickCopy\n                    \n                    \n                        Define if the copy to clipboard functionality is enabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the component theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:92\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            copyToClipboard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        copyToClipboard(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:164\n                            \n                        \n\n\n                \n                    \n                            Copy text to the user's clipboard\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe text to copy\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resetSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetSelection()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:154\n                            \n                        \n\n\n                \n                    \n                            Reset the text selection\nNOTE: The containing div must have a tabindex set or no blur event will be fired\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectText(element: ElementRef, hasSelected: boolean, disabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Select the text content of the passed in element\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    ElementRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe element whose text should be selected\n\n\n                                                        \n                                                \n                                                \n                                                        hasSelected\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe flag defining if the selection has already been made\n\n\n                                                        \n                                                \n                                                \n                                                        disabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe flag defining if the selection functionality should be disabled\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    The value representing if the copy was successful\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        content:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:74\n                            \n                        \n\n                \n                    \n                        Define access to the wrapper around the content to be copied\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            document\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        document:     Document\n\n                    \n                \n                    \n                        \n                            Type :     Document\n\n                        \n                    \n                    \n                        \n                            Default value : this.documentService.document\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:47\n                            \n                        \n\n                \n                    \n                        Store a reference to the document object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasSelected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:52\n                            \n                        \n\n                \n                    \n                        Internal flag to track if the contents have been selected\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'content_copy'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:57\n                            \n                        \n\n                \n                    \n                        Define the copy icon\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rippleColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rippleColor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '#1a237e'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:63\n                            \n                        \n\n                \n                    \n                        Define the color of the material ripple\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            window\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        window:     Window\n\n                    \n                \n                    \n                        \n                            Type :     Window\n\n                        \n                    \n                    \n                        \n                            Default value : this.windowService.nativeWindow\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:68\n                            \n                        \n\n                \n                    \n                        Store a reference to the window object\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        textContent\n                    \n                \n\n                \n                    \n                        gettextContent()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/copy/copy.component.ts:109\n                                \n                            \n                    \n                        \n                                Return the inner text content\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  TsWindowService,\n  TsDocumentService,\n} from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * This is the TsCopyComponent UI Component\n *\n * #### QA CSS CLASSES\n * `qa-copy`: Placed on the div element which contains this component\n * `qa-copy-content`: Placed on a div element which contains the content which will be copied\n * `qa-copy-icon`: Placed on the icon which copies the content to the clipboard when clicked\n *\n * @example\n * My text to copy!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-copy',\n  templateUrl: './copy.component.html',\n  styleUrls: ['./copy.component.scss'],\n  host: {\n    class: 'ts-copy',\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCopy',\n})\nexport class TsCopyComponent {\n  /**\n   * Store a reference to the document object\n   */\n  private document: Document = this.documentService.document;\n\n  /**\n   * Internal flag to track if the contents have been selected\n   */\n  public hasSelected: boolean = false;\n\n  /**\n   * Define the copy icon\n   */\n  public icon: string = 'content_copy';\n\n  /**\n   * Define the color of the material ripple\n   */\n  // FIXME: This color should be coming from a config\n  public rippleColor: string = '#1a237e';\n\n  /**\n   * Store a reference to the window object\n   */\n  private window: Window = this.windowService.nativeWindow;\n\n  /**\n   * Define access to the wrapper around the content to be copied\n   */\n  @ViewChild('content')\n  public content!: ElementRef;\n\n  /**\n   * Define if the initial click should select the contents\n   */\n  @Input()\n  public disableInitialSelection: boolean = false;\n\n  /**\n   * Define if the copy to clipboard functionality is enabled\n   */\n  @Input()\n  public enableQuickCopy: boolean = false;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private documentService: TsDocumentService,\n    private windowService: TsWindowService,\n  ) {}\n\n\n  /**\n   * Return the inner text content\n   *\n   * @return The text content of the inner \n   */\n  public get textContent(): string {\n    const hasInnerText =\n      this.content && this.content.nativeElement && this.content.nativeElement.innerText;\n\n    if (hasInnerText) {\n      return this.content.nativeElement.innerText;\n    } else {\n      return '';\n    }\n  }\n\n\n  /**\n   * Select the text content of the passed in element\n   *\n   * @param element - The element whose text should be selected\n   * @param hasSelected - The flag defining if the selection has already been made\n   * @param disabled - The flag defining if the selection functionality should be disabled\n   * @return The value representing if the copy was successful\n   */\n  public selectText(element: ElementRef, hasSelected: boolean, disabled: boolean): boolean {\n    // If this functionality is disabled OR the text has already been selected,\n    // do not intercept any more clicks until the focus is reset\n    if (disabled || hasSelected) {\n      return false;\n    }\n\n    const selection = this.window.getSelection();\n    // NOTE: Adding the type of 'Range' to this causes an error with `range.selectNodeContents`\n    // `Argument of type ElementRef is not assignable to type 'Node'`\n    const range = this.document.createRange();\n\n    range.selectNodeContents(element as any);\n    selection.removeAllRanges();\n    selection.addRange(range);\n\n    this.hasSelected = true;\n    return true;\n  }\n\n\n  /**\n   * Reset the text selection\n   * NOTE: The containing div must have a `tabindex` set or no blur event will be fired\n   */\n  public resetSelection(): void {\n    this.hasSelected = false;\n  }\n\n\n  /**\n   * Copy text to the user's clipboard\n   *\n   * @param text - The text to copy\n   */\n  public copyToClipboard(text: string): void {\n    // Create a hidden textarea to seed with text content\n    const target = this.document.createElement('textarea');\n    target.className = 'targetElement';\n    target.style.position = 'absolute';\n    target.style.left = '101%';\n    target.style.top = '0';\n    target.style.width = '1px';\n    target.style.height = '1px';\n    target.textContent = text;\n\n    // Add the textarea, focus and select the text\n    this.document.body.appendChild(target);\n    target.focus();\n    target.setSelectionRange(0, target.value.length);\n\n    // Copy the selection or fall back to prompt\n    try {\n      this.document.execCommand('copy');\n      target.remove();\n    } catch (error) {\n      // Fall back to the native alert\n      this.window.prompt('Copy to clipboard: Ctrl+C, Enter', text);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n        {{ icon }}\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ icon }}            '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsCopyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsCopyModule.html":{"url":"modules/TsCopyModule.html","title":"module - TsCopyModule","body":"\n                   \n\n\n\n\n  Modules\n  TsCopyModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsCopyModule\n\n\n\ncluster_TsCopyModule_declarations\n\n\n\ncluster_TsCopyModule_imports\n\n\n\ncluster_TsCopyModule_exports\n\n\n\n\nTsCopyComponent\n\nTsCopyComponent\n\n\n\nTsCopyModule\n\nTsCopyModule\n\nTsCopyModule -->\n\nTsCopyComponent->TsCopyModule\n\n\n\n\n\nTsCopyComponent \n\nTsCopyComponent \n\nTsCopyComponent  -->\n\nTsCopyModule->TsCopyComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsCopyModule -->\n\nTsIconModule->TsCopyModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsCopyModule -->\n\nTsTooltipModule->TsCopyModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/copy/copy.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCopyComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCopyComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { TsTooltipModule } from './../tooltip/tooltip.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsCopyComponent } from './copy.component';\n\nexport * from './copy.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    TsIconModule,\n    MatRippleModule,\n    TsTooltipModule,\n  ],\n  exports: [\n    TsCopyComponent,\n  ],\n  declarations: [\n    TsCopyComponent,\n  ],\n})\nexport class TsCopyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsDatePipe.html":{"url":"pipes/TsDatePipe.html","title":"pipe - TsDatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsDatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/date/date.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsDate\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string | Date, format: TsDateTypes)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/date/date.pipe.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string | Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        format\n                                                        \n                                                                    TsDateTypes\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'short'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n  isDevMode,\n} from '@angular/core';\nimport {\n  isValid,\n  format as formatDate,\n} from 'date-fns';\n\n\n/**\n * Define the allowed date formats for the {@link TsDatePipe}.\n */\nexport type TsDateTypes =\n  // 02/08/2018\n  'short'\n  // February 8th, 2018\n  | 'medium'\n  // Thursday, February 8th, 2018, 12:00:00am\n  | 'extended'\n  // 2018-02-08T05:00:00.000Z\n  | 'timestamp'\n;\n\n\n@Pipe({\n  name: 'tsDate',\n})\nexport class TsDatePipe implements PipeTransform {\n  transform(value: string|Date, format: TsDateTypes = 'short'): string | undefined {\n    const validFormats: TsDateTypes[] = [\n      'short',\n      'medium',\n      'extended',\n      'timestamp',\n    ];\n\n    // Check for null values to avoid issues during data-binding\n    if (!value) {\n      return;\n    }\n\n    // Check for date validity\n    if (!isValid(value) && isDevMode()) {\n      throw Error(`'${value}' is not a valid date.`);\n    }\n\n    // Check for format validity\n    if ((validFormats.indexOf(format) \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsDateRange.html":{"url":"interfaces/TsDateRange.html","title":"interface - TsDateRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsDateRange\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/date-range/date-range.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the structure of the date range object used by TsDateRangeComponent\nTODO: In the process of deprecating the null portion of this interface. It should be using\nundefined instead.\nDeprecation target: 10.0.0\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        end\n                                \n                                \n                                        start\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                    \n                                \n                                \n                                    \n                                        end:     Date | undefined | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | undefined | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The end date of the range\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:     Date | undefined | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | undefined | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The start date of the range\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        Date Range\n\n\n\nTable of Contents\n\nEvent driven\nSet max/min range\nSet the initial date without using Reactive Forms\nUse with Reactive Forms\nEnable or Disable controls\n\n\nEvent driven\nThere are three selection events that you can tie into:\n\nstartSelected is fired when a start date is selected\nendSelected is fired when an end date is selected\ndateSelected is fired when either date is selected\n\nSet max/min range\nTo define bounds for date selection, pass in a valid Date to each of these @Inputs:\n\nendMaxDate\nendMinDate\nstartMaxDate\nstartMinDate\n\nstartDate1 = new Date(2017, 1, 1);\nstartDate2 = new Date(2017, 8, 1);\nendDate1 = new Date(2017, 1, 2);\nendDate2 = new Date(2017, 8, 2;Set the initial date without using Reactive Forms\nPass in a Date to startInitialDate and endInitialDate:\ndate1 = new Date(2017, 1, 1);\ndate2 = new Date(2017, 3, 1);\nWhen using a Reactive Form, we can seed the initial values in the form itself\n\nUse with Reactive Forms\nPass in the form control:\n\n  \n\n  Submit\nmyForm: FormGroup = this.formBuilder.group({\n  // Showing a nested example since usually a date range would be nested in a group\n  dateRange: this.formBuilder.group({\n    startDate: [ // This MUST be the name of the range start control\n      new Date(2017, 4, 6),\n    ],\n    endDate: [ // This MUST be the name of the range end control\n      new Date(2017, 4, 8),\n    ],\n  }),\n});NOTE: The keys inside the formGroup passed to the dateFormGroup input must be named\nstartDate and endDate. (see example directly above)\nNOTE: If using a form with nested form groups, each group must be created with\nformBuilder.group for the form get control to work:\n// Notice the nested `dateRange` object without using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: {\n    startDate: [\n      new Date(2017, 4, 6),\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n    ],\n  },\n});\n\n// THIS WILL FAIL!\nconst range = myForm.get('dateRange');\n\n//////////////////////////////////////////////////\n\n// Notice the nested `dateRange` object IS using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: this.formBuilder.group({\n    startDate: [\n      new Date(2017, 4, 6),\n      [\n        Validators.required,\n      ],\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n      [\n        Validators.required,\n      ],\n    ],\n  }),\n});\n\n// Now there is a group for us to 'get'\nconst range = myForm.get('dateRange');Enable or Disable controls\nControls can be enabled or disabled via the associated form control:\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: this.formBuilder.group({\n    startDate: [\n      {\n        value: new Date(2017, 4, 6),\n        disabled: true,\n      },\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n    ],\n  }),\n});\n\n// Enable it at any time:\nconst ctrl = this.myForm.get('dateRange.startDate')\nif (ctr) {\n  ctrl.enable();\n}\n    \n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n} from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Define the structure of the date range object used by {@link TsDateRangeComponent}\n *\n * TODO: In the process of deprecating the `null` portion of this interface. It should be using\n * `undefined` instead.\n *\n * Deprecation target: 10.0.0\n */\nexport interface TsDateRange {\n  /**\n   * The start date of the range\n   */\n  start: Date | undefined | null;\n\n  /**\n   * The end date of the range\n   */\n  end: Date | undefined | null;\n}\n\n\n/**\n * This is the date-range UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-date-range`: The primary component container\n * - `qa-date-range-start-datepicker`: The start date {@link TsDatepickerComponent}\n * - `qa-date-range-end-datepicker`: The end date {@link TsDatepickerComponent}\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-date-range',\n  templateUrl: './date-range.component.html',\n  styleUrls: ['./date-range.component.scss'],\n  host: {\n    class: 'ts-date-range',\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsDateRange',\n})\nexport class TsDateRangeComponent implements OnInit {\n  /**\n   * Getter to return the date range as an object\n   *\n   * @return The current date range\n   */\n  private get dateRange(): TsDateRange {\n    return {\n      start: this.startDate || undefined,\n      end: this.endDate || undefined,\n    };\n  }\n\n  /**\n   * Store the selected end date\n   *\n   * Deprecated: `null` deprecation target 10.0.0\n   */\n  public endDate: Date | null | undefined;\n\n  /**\n   * Provide quick access to the endDate form control\n   */\n  public get endDateControl(): AbstractControl {\n    const ctrl: AbstractControl | null = this.dateFormGroup ? this.dateFormGroup.get('endDate') : null;\n\n    return ctrl ? ctrl : this.fallbackEndDateControl;\n  }\n\n  /**\n   * Expose the minimum date for the endDate\n   *\n   * NOTE: `any` is used since we cannot seem to use union types in a BehaviorSubject\n   */\n  public endMinDate$: BehaviorSubject = new BehaviorSubject(undefined);\n\n  /**\n   * Define the end date placeholder\n   */\n  public endPlaceholder: string = 'End date';\n\n  /**\n   * Define a fallback control in case one is not passed in\n   */\n  private fallbackEndDateControl: FormControl = new FormControl();\n\n  /**\n   * Define a fallback control in case one is not passed in\n   */\n  private fallbackStartDateControl: FormControl = new FormControl();\n\n  /**\n   * Define the separator between the two date inputs\n   */\n  public separator: string = '-';\n\n  /**\n   * Store the selected start date\n   *\n   * Deprecated: `null` deprecation target 10.0.0\n   */\n  public startDate: Date | undefined | null;\n\n  /**\n   * Provide quick access to the startDate form control\n   */\n  public get startDateControl(): AbstractControl {\n    const ctrl: AbstractControl | null = this.dateFormGroup ? this.dateFormGroup.get('startDate') : null;\n\n    return ctrl ? ctrl : this.fallbackStartDateControl;\n  }\n\n  /**\n   * Expose the maximum date for the startDate\n   *\n   * NOTE: `any` is used since we cannot seem to use union types in a BehaviorSubject\n   */\n  public startMaxDate$: BehaviorSubject = new BehaviorSubject(undefined);\n\n  /**\n   * Define the start date placeholder\n   */\n  public startPlaceholder: string = 'Start date';\n\n  /**\n   * Define the max date for the end date\n   */\n  @Input()\n  public endMaxDate: Date | undefined;\n\n  /**\n   * Define the min date for the end date\n   */\n  @Input()\n  public endMinDate: Date | undefined;\n\n  /**\n   * Define the initial date for the end date\n   */\n  @Input()\n  public endInitialDate: Date | undefined;\n\n  /**\n   * Define the starting view for both datepickers\n   */\n  @Input()\n  public startingView: 'month' | 'year' = 'month';\n\n  /**\n   * Define the max date for the starting date\n   */\n  @Input()\n  public startMaxDate: Date | undefined;\n\n  /**\n   * Define the min date for the starting date\n   */\n  @Input()\n  public startMinDate: Date | undefined;\n\n  /**\n   * Define the initial date for the starting date\n   */\n  @Input()\n  public startInitialDate: Date | undefined;\n\n  /**\n   * Define the form group to attach the date range to\n   */\n  @Input()\n  public dateFormGroup: FormGroup | AbstractControl | undefined;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Output the start date when selected\n   */\n  @Output()\n  public startSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Output the end date when selected\n   */\n  @Output()\n  public endSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Output the selected date range as {@link TsDateRange}\n   *\n   * Deprecated in favor of `change`. Target 10.0.0\n   */\n  @Output()\n  public selectedDate: EventEmitter = new EventEmitter();\n\n  /**\n   * Event emitted anytime the range is changed\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Seed initial date range values\n   */\n  public ngOnInit(): void {\n    // Seed values from @Inputs\n    this.seedDateRange(this.startInitialDate, this.endInitialDate);\n\n    // Seed values from a passed in form group\n    if (this.dateFormGroup) {\n      this.seedWithFormValues(this.dateFormGroup);\n    }\n  }\n\n\n  /**\n   * Seed the date range with initial values\n   *\n   * @param start - The initial start date\n   * @param end - The initial end date\n   */\n  private seedDateRange(\n    start: Date | null | undefined,\n    end: Date | null | undefined,\n  ): void {\n    this.startDate = start;\n    this.endDate = end;\n  }\n\n\n  /**\n   * Seed date values from a passed in form\n   *\n   * @param formGroup - The date form group\n   */\n  private seedWithFormValues(formGroup: FormGroup | AbstractControl): void {\n    if (!formGroup || !formGroup.get('startDate') || !formGroup.get('endDate')) {\n      return;\n    }\n    const startControl: AbstractControl | null = formGroup.get('startDate');\n    const endControl: AbstractControl | null = formGroup.get('endDate');\n    const startValue: Date | undefined = startControl ? startControl.value : undefined;\n    const endValue: Date | undefined = endControl ? endControl.value : undefined;\n\n    // istanbul ignore else\n    if (startValue) {\n      this.startInitialDate = startValue;\n      this.startDate = startValue;\n      this.endMinDate$.next(startValue);\n    }\n\n    // istanbul ignore else\n    if (endValue) {\n      this.endInitialDate = endValue;\n      this.endDate = endValue;\n      this.startMaxDate$.next(endValue);\n    }\n  }\n\n\n  /**\n   * Emit the selected start date and date range\n   *\n   * @param datepickerEvent - The event received from the range start event\n   * {@link TsDatepickerComponent}\n   */\n  public startDateSelected(datepickerEvent: MatDatepickerInputEvent): void {\n    if (datepickerEvent && datepickerEvent.value) {\n      this.endMinDate$.next(datepickerEvent.value);\n      this.startDate = datepickerEvent.value;\n\n      // Update the form value if a formGroup was passed in\n      // istanbul ignore else\n      if (this.dateFormGroup && this.startDateControl) {\n        this.startDateControl.setValue(datepickerEvent.value);\n      }\n\n      this.startSelected.emit(datepickerEvent.value);\n      this.selectedDate.emit(this.dateRange);\n      this.change.emit(this.dateRange);\n    } else {\n      // If no startDate was selected, reset to the original endMinDate\n      if (this.endMinDate) {\n        this.endMinDate$.next(this.endMinDate);\n      } else {\n        // If neither were set, revert to a safe date\n        this.endMinDate$.next(undefined);\n      }\n    }\n  }\n\n\n  /**\n   * Emit the selected end date and date range\n   *\n   * @param datepickerEvent - The event received from the range end event\n   * {@link TsDatepickerComponent}\n   */\n  public endDateSelected(datepickerEvent: MatDatepickerInputEvent): void {\n    if (datepickerEvent && datepickerEvent.value) {\n      this.startMaxDate$.next(datepickerEvent.value);\n      this.endDate = datepickerEvent.value;\n\n      // Update the form value if a formGroup was passed in\n      // istanbul ignore else\n      if (this.dateFormGroup && this.endDateControl) {\n        this.endDateControl.setValue(datepickerEvent.value);\n      }\n\n      this.endSelected.emit(datepickerEvent.value);\n      this.selectedDate.emit(this.dateRange);\n      this.change.emit(this.dateRange);\n    } else {\n      if (this.startMaxDate) {\n        // If no endDate was selected, reset to the original startMaxDate\n        this.startMaxDate$.next(this.startMaxDate);\n      } else {\n        // If neither were set, revert to a safe date\n        this.startMaxDate$.next(undefined);\n      }\n    }\n  }\n\n\n  /**\n   * Update dates when the start date input receives a blur event\n   *\n   * @param date - The date entered\n   */\n  public startBlur(date: Date | undefined): void {\n    this.startDate = date;\n    this.endMinDate$.next(date);\n  }\n\n\n  /**\n   * Update dates when the end date input receives a blur event\n   *\n   * @param date - The date entered\n   */\n  public endBlur(date: Date | undefined): void {\n    this.endDate = date;\n    this.startMaxDate$.next(date);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsDateRangeModule.html":{"url":"modules/TsDateRangeModule.html","title":"module - TsDateRangeModule","body":"\n                   \n\n\n\n\n  Modules\n  TsDateRangeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsDateRangeModule\n\n\n\ncluster_TsDateRangeModule_declarations\n\n\n\ncluster_TsDateRangeModule_imports\n\n\n\ncluster_TsDateRangeModule_exports\n\n\n\n\nTsDateRangeComponent\n\nTsDateRangeComponent\n\n\n\nTsDateRangeModule\n\nTsDateRangeModule\n\nTsDateRangeModule -->\n\nTsDateRangeComponent->TsDateRangeModule\n\n\n\n\n\nTsDateRangeComponent \n\nTsDateRangeComponent \n\nTsDateRangeComponent  -->\n\nTsDateRangeModule->TsDateRangeComponent \n\n\n\n\n\nTsDatepickerModule\n\nTsDatepickerModule\n\nTsDateRangeModule -->\n\nTsDatepickerModule->TsDateRangeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/date-range/date-range.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsDateRangeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsDatepickerModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsDateRangeComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TsDatepickerModule } from './../datepicker/datepicker.module';\nimport { TsDateRangeComponent } from './date-range.component';\n\nexport * from './date-range.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TsDatepickerModule,\n    FlexLayoutModule,\n  ],\n  exports: [\n    TsDateRangeComponent,\n  ],\n  declarations: [\n    TsDateRangeComponent,\n  ],\n})\nexport class TsDateRangeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsDatepickerInputEvent.html":{"url":"classes/TsDatepickerInputEvent.html","title":"class - TsDatepickerInputEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsDatepickerInputEvent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/datepicker/datepicker.component.ts\n        \n\n            \n                Description\n            \n            \n                Expose the MatDatepickerInputEvent event as TsDatepickerInputEvent. Used by TsDatepickerComponent\n\n            \n\n            \n                Extends\n            \n            \n                    MatDatepickerInputEvent\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n\nTable of Contents\n\nEvent driven\nFilter out invalid dates\nSet max/min range\nSet the initial date without using Reactive Forms\nDefine a date that the calendar should open to\nUse with Reactive Forms\nExample with dynamic validation\n\n\nEvent driven\nEach time a selection is made, the selected event is fired.\nFilter out invalid dates\nIf, for instance, you need to prohibit weekend days (sat/sun) from being selected you can pass in a\ncustom method to filter dates:\nmyFilter = (d: Date): boolean => {\n  const day = d.getDay();\n  // Prevent Saturday and Sunday from being selected.\n  return day !== 0 && day !== 6;\n}Set max/min range\nTo define bounds for date selection, pass in a valid Date to minDate and/or maxDate:\ndate1 = new Date(2017, 2, 1);\ndate2 = new Date(2017, 8, 1);Set the initial date without using Reactive Forms\nPass in a Date to initialDate:\nmyDate = new Date(2017, 1, 1);\nWhen using a Reactive Form, we can seed the initial value in the form itself\n\nDefine a date that the calendar should open to\nPass in a Date to openTo:\nmyDate = new Date(2017, 5, 12);Use with Reactive Forms\nPass in the form control:\n\n  \n\n  Submit\nmyForm = this.formBuilder.group({\n  date: [\n    null, // If you need a default value, change this `null` to your value\n    [\n      Validators.required,\n    ],\n  ],\n});NOTE: If using a form with nested form groups, each group must be created with\nformBuilder.group for the form get control to work:\n// Notice the nested `dateRange` object without using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: {\n    startDate: [\n      new Date(2017, 4, 6),\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n    ],\n  },\n});\n\n// THIS WILL FAIL!\nconst range = myForm.get('dateRange');\n\n//////////////////////////////////////////////////\n\n// Notice the nested `dateRange` object IS using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: this.formBuilder.group({\n    startDate: [\n      new Date(2017, 4, 6),\n      [\n        Validators.required,\n      ],\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n      [\n        Validators.required,\n      ],\n    ],\n  }),\n});\n\n// Now there is a group for us to 'get'\nconst range = myForm.get('dateRange');Example with dynamic validation\nWe can recreate a version of the {@link TsDateRangeComponent} using dynamic validation:\n\n  \n\n  \n\n  Submit\nmyForm = this.formBuilder.group({\n  startDate: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n  endDate: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n});\n\n// When the startDate changes, we want to set that date as the minDate for the endDate\nrangeStartChange(event: MatDatepickerInputEvent) {\n  if (event) {\n    // Get the from control\n    const control = this.formTwo.get('endDate');\n\n    // Set all validators.\n    // NOTE: setting validators will clear ALL existing validators, so we must add the required\n    // validator here again\n    control.setValidators([\n      Validators.required,\n      this.validatorsService.minDate(event.value),\n    ]);\n    // Tell the control to update according to the new validators\n    control.updateValueAndValidity();\n  }\n}\n\n// When the endDate changes, we want to set that date as the maxDate for the startDate\nrangeEndChange(event: MatDatepickerInputEvent) {\n  if (event) {\n    // Get the from control\n    const control = this.formTwo.get('startDate');\n\n    // Set all validators.\n    // NOTE: setting validators will clear ALL existing validators, so we must add the required\n    // validator here again\n    control.setValidators([\n      Validators.required,\n      this.validatorsService.maxDate(event.value),\n    ]);\n    // Tell the control to update according to the new validators\n    control.updateValueAndValidity();\n  }\n}\n    \n\n    \n        import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Expose the MatDatepickerInputEvent event as TsDatepickerInputEvent. Used by {@link TsDatepickerComponent}\n */\nexport class TsDatepickerInputEvent extends MatDatepickerInputEvent {}\n\n\n/**\n * Custom control value accessor for our component.\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsDatepickerComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the datepicker UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-datepicker`: The form-field wrapper which contains the input and button\n * - `qa-datepicker-input`: The input element which contains the chosen date\n * - `qa-datepicker-hint`: The hint element, if hint content is provided\n * - `qa-datepicker-toggle`: The button which displays the calendar when clicked\n * - `qa-datepicker-calendar`: The calendar control used for picking a date\n * - `qa-datepicker-validation-messages`: The validation messages container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  providers: [CUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR],\n  host: {\n    class: 'ts-datepicker',\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsDatepicker',\n})\nexport class TsDatepickerComponent extends TsReactiveFormBaseComponent implements OnInit {\n  /**\n   * Expose the max date to the template\n   */\n  public _maxDate: Date | undefined;\n\n  /**\n   * Expose the min date to the template\n   */\n  public _minDate: Date | undefined;\n\n  /**\n   * Store the value of the input\n   */\n  public value: any;\n\n  /**\n   * Define a date filter to disallow certain dates\n   */\n  @Input()\n  public dateFilter: any;\n\n  /**\n   * Define a hint for the datepicker\n   */\n  // FIXME: Fix potential overlap of hint and error messages\n  @Input()\n  public hint: string | undefined;\n\n  /**\n   * Define the placeholder\n   */\n  @Input()\n  public inputPlaceholder: string = 'Select a date';\n\n  /**\n   * Define if the input should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define the maximum date requirement and confirm it is a Date object\n   */\n  @Input()\n  public set maxDate(value: string | Date | undefined) {\n    this._maxDate = (value) ? this.verifyIsDateObject(value) : undefined;\n  }\n\n  /**\n   * Define the minimum date requirement and confirm it is a Date object\n   */\n  @Input()\n  public set minDate(value: string | Date | undefined) {\n    this._minDate = (value) ? this.verifyIsDateObject(value) : undefined;\n  }\n\n  /**\n   * Define a starting date for the datepicker\n   */\n  @Input()\n  public set initialDate(value: string | Date | undefined) {\n    if (!value) {\n      return;\n    }\n\n    this._initialDate = this.verifyIsDateObject(value);\n  }\n  // NOTE: This should never return a string but getter types are required to match setter types\n  public get initialDate(): string | Date | undefined {\n    return this._initialDate;\n  }\n  public _initialDate!: Date;\n\n  /**\n   * Define a date that the datepicker calendar should open to\n   */\n  @Input()\n  public openTo: Date | undefined;\n\n  /**\n   * Define the starting view of the datepicker\n   */\n  @Input()\n  public startingView: 'month' | 'year' = 'month';\n\n  /**\n   * Define the tabindex for the input\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define if validation messages should be shown immediately or on blur\n   *\n   * NOTE: Since the user may never focus the actual input, we should validate immediately\n   */\n  @Input()\n  public validateOnChange: boolean = true;\n\n  /**\n   * Define an event emitter to alert consumers that a date was selected\n   */\n  @Output()\n  public selected: EventEmitter> = new EventEmitter();\n\n  /**\n   * Define an event when the input receives a blur event\n   */\n  @Output()\n  public inputBlur: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Set the initial date if it exists\n   */\n  public ngOnInit() {\n    // istanbul ignore else\n    if (this.initialDate) {\n      this.value = this.initialDate;\n    }\n  }\n\n\n  /**\n   * Helper method to reset the input value\n   */\n  public resetValue(): void {\n    this.value = null;\n  }\n\n\n  /**\n   * Convert an valid date string to a Date if needed\n   *\n   * NOTE: When using 1 time bindings we are required to pass in ISO stringified dates. Adding this\n   * method to our setters adds support for either version\n   *\n   * @param date - The date\n   * @return The Date object\n   */\n  private verifyIsDateObject(date: string | Date): Date {\n    // If value is a valid date string, convert to a date\n    if (!(date instanceof Date)) {\n      return new Date(date);\n    } else {\n      return date;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsDatepickerModule.html":{"url":"modules/TsDatepickerModule.html","title":"module - TsDatepickerModule","body":"\n                   \n\n\n\n\n  Modules\n  TsDatepickerModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsDatepickerModule\n\n\n\ncluster_TsDatepickerModule_declarations\n\n\n\ncluster_TsDatepickerModule_TsDatepickerComponent_providers\n\n\n\ncluster_TsDatepickerModule_imports\n\n\n\ncluster_TsDatepickerModule_exports\n\n\n\n\nTsDatepickerComponent\n\nTsDatepickerComponent\n\n\n\nTsDatepickerModule\n\nTsDatepickerModule\n\nTsDatepickerModule -->\n\nTsDatepickerComponent->TsDatepickerModule\n\n\n\n\n\nTsDatepickerComponent \n\nTsDatepickerComponent \n\nTsDatepickerComponent  -->\n\nTsDatepickerModule->TsDatepickerComponent \n\n\n\n\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR\n\nTsDatepickerComponent -->\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR->TsDatepickerComponent\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsDatepickerModule -->\n\nTsValidationMessagesModule->TsDatepickerModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/datepicker/datepicker.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsDatepickerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsDatepickerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatNativeDateModule } from '@angular/material/core';\n\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsDatepickerComponent } from './datepicker.component';\n\nexport * from './datepicker.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatInputModule,\n    TsValidationMessagesModule,\n  ],\n  exports: [\n    TsDatepickerComponent,\n  ],\n  declarations: [\n    TsDatepickerComponent,\n  ],\n})\nexport class TsDatepickerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsDropProtectionService.html":{"url":"injectables/TsDropProtectionService.html","title":"injectable - TsDropProtectionService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsDropProtectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/drop-protection.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hasProtection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                prevent\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(windowService: TsWindowService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/file-upload/drop-protection.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        windowService\n                                                  \n                                                        \n                                                                    TsWindowService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/drop-protection.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Add drop protection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prevent\n                            \n                            \n                        \n                    \n                \n                \n                    \nprevent(e: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/drop-protection.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Prevent default\nNOTE: In order to remove an event listener we need a reference to a method that does not change.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/drop-protection.service.ts:30\n                            \n                        \n\n\n                \n                    \n                            Remove drop protection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hasProtection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasProtection:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/drop-protection.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TsWindowService } from '@terminus/ngx-tools';\n\n\n@Injectable()\nexport class TsDropProtectionService {\n  private hasProtection = false;\n\n\n  constructor(\n    private windowService: TsWindowService,\n  ) { }\n\n\n  /**\n   * Add drop protection\n   */\n  add(): void {\n    if (!this.hasProtection) {\n      this.windowService.nativeWindow.addEventListener('dragover', this.prevent, false);\n      this.windowService.nativeWindow.addEventListener('drop', this.prevent, false);\n      this.hasProtection = true;\n    }\n  }\n\n\n  /**\n   * Remove drop protection\n   */\n  remove(): void {\n    if (this.hasProtection) {\n      this.windowService.nativeWindow.removeEventListener('dragover', this.prevent, false);\n      this.windowService.nativeWindow.removeEventListener('drop', this.prevent, false);\n      this.hasProtection = false;\n    }\n  }\n\n\n  /**\n   * Prevent default\n   *\n   * NOTE: In order to remove an event listener we need a reference to a method that does not change.\n   *\n   * @param event - The event\n   */\n  prevent(e: Event): void {\n    e.preventDefault();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsFileImageDimensionContraint.html":{"url":"interfaces/TsFileImageDimensionContraint.html","title":"interface - TsFileImageDimensionContraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsFileImageDimensionContraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/image-dimension-constraints.ts\n        \n\n            \n                Description\n            \n            \n                An indiviual size constraint\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        height\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TsFileImageDimensionContraint {\n  height: {\n    min: number;\n    max: number;\n  };\n  width: {\n    min: number;\n    max: number;\n  };\n}\n\n/**\n * An array of file size constraints\n */\nexport type TsFileImageDimensionConstraints = TsFileImageDimensionContraint[];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsFileUploadModule.html":{"url":"modules/TsFileUploadModule.html","title":"module - TsFileUploadModule","body":"\n                   \n\n\n\n\n  Modules\n  TsFileUploadModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsFileUploadModule\n\n\n\ncluster_TsFileUploadModule_declarations\n\n\n\ncluster_TsFileUploadModule_TsFileUploadComponent_providers\n\n\n\ncluster_TsFileUploadModule_imports\n\n\n\ncluster_TsFileUploadModule_exports\n\n\n\ncluster_TsFileUploadModule_providers\n\n\n\n\nTsFileUploadComponent\n\nTsFileUploadComponent\n\n\n\nTsFileUploadModule\n\nTsFileUploadModule\n\nTsFileUploadModule -->\n\nTsFileUploadComponent->TsFileUploadModule\n\n\n\n\n\nTsFileUploadComponent \n\nTsFileUploadComponent \n\nTsFileUploadComponent  -->\n\nTsFileUploadModule->TsFileUploadComponent \n\n\n\n\n\nCUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR\n\nTsFileUploadComponent -->\n\nCUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR->TsFileUploadComponent\n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsFileUploadModule -->\n\nTsButtonModule->TsFileUploadModule\n\n\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTsFileUploadModule -->\n\nTsIconButtonModule->TsFileUploadModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsFileUploadModule -->\n\nTsIconModule->TsFileUploadModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsFileUploadModule -->\n\nTsTooltipModule->TsFileUploadModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsFileUploadModule -->\n\nTsValidationMessagesModule->TsFileUploadModule\n\n\n\n\n\nTsDropProtectionService\n\nTsDropProtectionService\n\nTsFileUploadModule -->\n\nTsDropProtectionService->TsFileUploadModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/file-upload/file-upload.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsFileUploadComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsDropProtectionService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsIconButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsFileUploadComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { TsDocumentService } from '@terminus/ngx-tools';\n\nimport { TsButtonModule } from './../button/button.module';\nimport { TsFileUploadComponent } from './file-upload.component';\nimport { TsIconButtonModule } from './../icon-button/icon-button.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsTooltipModule } from './../tooltip/tooltip.module';\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsDropProtectionService } from './drop-protection.service';\n\nexport * from './file-upload.component';\nexport * from './image-dimension-constraints';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    FormsModule,\n    MatProgressBarModule,\n    TsButtonModule,\n    TsIconButtonModule,\n    TsIconModule,\n    TsTooltipModule,\n    TsValidationMessagesModule,\n  ],\n  declarations: [\n    TsFileUploadComponent,\n  ],\n  providers: [\n    TsDropProtectionService,\n    TsDocumentService,\n  ],\n  exports: [\n    TsFileUploadComponent,\n  ],\n})\nexport class TsFileUploadModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsFileValidations.html":{"url":"interfaces/TsFileValidations.html","title":"interface - TsFileValidations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsFileValidations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/selected-file.ts\n        \n\n            \n                Description\n            \n            \n                The structure of the object to track file validations internally\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fileSize\n                                \n                                \n                                        fileType\n                                \n                                \n                                        imageDimensions\n                                \n                                \n                                        imageRatio\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileSize\n                                    \n                                \n                                \n                                    \n                                        fileSize:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileType\n                                    \n                                \n                                \n                                    \n                                        fileType:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageDimensions\n                                    \n                                \n                                \n                                    \n                                        imageDimensions:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageRatio\n                                    \n                                \n                                \n                                    \n                                        imageRatio:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BehaviorSubject } from 'rxjs';\n\nimport { TsFileImageDimensionConstraints } from './image-dimension-constraints';\nimport { TsImageDimensions } from './image-dimensions';\nimport { TsFileAcceptedMimeTypes } from './mime-types';\nimport { ImageRatio } from './file-upload.module';\n\n\n/**\n * The structure of the object to track file validations internally\n */\nexport interface TsFileValidations {\n  fileType: boolean;\n  fileSize: boolean;\n  imageDimensions: boolean;\n  imageRatio: boolean;\n}\n\n\n/**\n * The number of bytes per kilobyte (for calculations)\n */\nconst BYTES_PER_KB = 1024;\n\n\n/**\n * Manage a single selected file\n *\n * @param file - The selected file\n * @param imageDimensionConstraints - An array of image dimension constraints {@link TsFileImageDimensionConstraints}\n * @param typeConstraint - An array of allowed MIME types {@link TsFileAcceptedMimeTypes}\n * @param maxSize - The maximum size in kilobytes\n * @param ratioConstraint - An array of allowed image ratios in form of ImageRatio\n */\nexport class TsSelectedFile {\n  public name: string | undefined;\n  public mimeType: string;\n  public dimensions: TsImageDimensions | undefined;\n  public ratio: number | undefined;\n  public size: number;\n  public validations: TsFileValidations = {\n    fileType: false,\n    fileSize: false,\n    imageDimensions: false,\n    imageRatio: false,\n  };\n  private fileReader: FileReader = new FileReader();\n\n  /**\n   * Only needed to appease TypeScript when defining `fileLoaded$`\n   */\n  private fileReference?: TsSelectedFile;\n\n  /**\n   * BehaviorSubject to alert consumers when all calculations are complete\n   */\n  public fileLoaded$: BehaviorSubject = new BehaviorSubject(this.fileReference);\n\n\n  constructor(\n    public file: File,\n    private imageDimensionConstraints: TsFileImageDimensionConstraints | undefined,\n    private typeConstraint: TsFileAcceptedMimeTypes[] | undefined,\n    private maxSize: number,\n    private ratioConstraint: Array | undefined,\n  ) {\n    this.mimeType = this.file.type;\n    this.size = Math.ceil(this.file.size / BYTES_PER_KB);\n    this.name = this.file.name;\n\n    // Begin the validation chain by validating image dimensions\n    this.determineImageDimensions(() => {\n      // Validate mime-type\n      // istanbul ignore else\n      if (this.typeConstraint && this.typeConstraint.indexOf(this.file.type as TsFileAcceptedMimeTypes) >= 0) {\n        this.validations.fileType = true;\n      }\n\n      // Validate file size\n      // istanbul ignore else\n      if (this.size  {\n        // istanbul ignore else\n        if (img) {\n          img.src = this.fileReader.result;\n        }\n      };\n      img.onload = (v: Event) => {\n        // istanbul ignore else\n        if (img) {\n          this.dimensions = new TsImageDimensions(img.naturalWidth, img.naturalHeight);\n        }\n\n        // Validate dimensions and ratio\n        this.validations.imageDimensions = this.validateImageDimensions(this.imageDimensionConstraints);\n        this.validations.imageRatio = this.validateImageRatio(this.ratioConstraint);\n        // Call the callback if one exists\n        // istanbul ignore else\n        if (callback) {\n          callback();\n        }\n      };\n    } else {\n      // We are not dealing with an image:\n      // istanbul ignore else\n      if (callback) {\n        callback();\n      }\n\n      // Since this is not an image, set dimension/ratio validation to `true` to 'bypass'\n      this.validations.imageDimensions = true;\n      this.validations.imageRatio = true;\n    }\n\n    // Read the file (this triggers the FileReader load event)\n    this.fileReader.readAsDataURL(this.file);\n  }\n\n\n  /**\n   * Validate the image dimensions\n   *\n   * @param constraints - The constraints this the image dimensions must fit\n   * @return The validation result\n   */\n  private validateImageDimensions(constraints: TsFileImageDimensionConstraints | undefined): boolean {\n    if (!constraints || constraints.length = constraint.height.min && height = constraint.width.min && width  | undefined): boolean {\n    if (!constraints) {\n      return true;\n    }\n\n    const ratios = constraints.map((r) => r.widthRatio / r.heightRatio);\n    for (const r of ratios) {\n      const ratio = this.width / this.height;\n      if (this.isSame(r, ratio)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * A utility function to determine whether two numbers are the same\n   * @param number1 - one number\n   * @param number2 - another number\n   * @return Whether these two numbers are the same\n   */\n\n  private isSame(number1: number, number2: number) {\n    if (Math.abs((number1 - number2) / number1) \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsHeaderCellDefDirective.html":{"url":"directives/TsHeaderCellDefDirective.html","title":"directive - TsHeaderCellDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsHeaderCellDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Header cell definition for the TsTableComponent.\nCaptures the template of a column's header cell and as well as cell-specific properties.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsHeaderCellDef]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsHeaderCellDirective.html":{"url":"directives/TsHeaderCellDirective.html","title":"directive - TsHeaderCellDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsHeaderCellDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Header cell template container that adds the right classes and role.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ts-header-cell\n                    \n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(columnDef: CdkColumnDef, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/table/cell.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        columnDef\n                                                  \n                                                        \n                                                                    CdkColumnDef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsHeaderRowComponent.html":{"url":"components/TsHeaderRowComponent.html","title":"component - TsHeaderRowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsHeaderRowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/table/row.ts\n\n\n    \n        Description\n    \n    \n        Header template container that contains the cell outlet. Adds the right class and role.\n\n    \n\n    \n        Extends\n    \n    \n            CdkHeaderRow\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsHeaderRow\n            \n\n            \n                host\n                {}\n            \n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                ts-header-row\n            \n\n\n\n            \n                template\n                CDK_ROW_TEMPLATE\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Header row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[tsHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: TsHeaderRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why this type of input was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsHeaderRowDef'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n\n/**\n * Data row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[tsRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: TsRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why it was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsRowDefColumns', 'when: tsRowDefWhen'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsRowDefDirective extends CdkRowDef {}\n\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-header-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsHeaderRow',\n  preserveWhitespaces: false,\n})\nexport class TsHeaderRowComponent extends CdkHeaderRow {}\n\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRow',\n  preserveWhitespaces: false,\n})\nexport class TsRowComponent extends CdkRow {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'CDK_ROW_TEMPLATE'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsHeaderRowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsHeaderRowDefDirective.html":{"url":"directives/TsHeaderRowDefDirective.html","title":"directive - TsHeaderRowDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsHeaderRowDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/row.ts\n        \n\n            \n                Description\n            \n            \n                Header row definition for the TsTableComponent.\nCaptures the header row's template and other header properties such as the columns to display.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsHeaderRowDef]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Header row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[tsHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: TsHeaderRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why this type of input was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsHeaderRowDef'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n\n/**\n * Data row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[tsRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: TsRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why it was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsRowDefColumns', 'when: tsRowDefWhen'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsRowDefDirective extends CdkRowDef {}\n\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-header-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsHeaderRow',\n  preserveWhitespaces: false,\n})\nexport class TsHeaderRowComponent extends CdkHeaderRow {}\n\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRow',\n  preserveWhitespaces: false,\n})\nexport class TsRowComponent extends CdkRow {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsIconButtonComponent.html":{"url":"components/TsIconButtonComponent.html","title":"component - TsIconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsIconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/icon-button/icon-button.component.ts\n\n\n    \n        Description\n    \n    \n        This is the icon-button UI Component\nQA CSS CLASSES\n\nqa-icon-button: Placed on the primary container\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    delete_forever\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsIconButton\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-icon-button\n            \n\n            \n                styleUrls\n                icon-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./icon-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionName\n                            \n                            \n                                buttonType\n                            \n                            \n                                isDisabled\n                            \n                            \n                                tabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/icon-button/icon-button.component.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionName\n                    \n                    \n                        Define the action for the aria-label. TsButtonActionTypes\n\n                            \n                            Type:    TsButtonActionTypes\n\n                            \n                        \n                            Default value: 'Button'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                    \n                        Define the button type. TsButtonFunctionTypes\n\n                            \n                            Type:    TsButtonFunctionTypes\n\n                            \n                        \n                            Default value: 'button'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the button is disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                    \n                        Define the tabindex for the button\n\n                            \n                            Type:    number\n\n                            \n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:68\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                    \n                        Pass the click event through to the parent\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:74\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hostElement\n                    \n                \n\n                \n                    \n                        gethostElement()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:80\n                                \n                            \n                    \n                        \n                                Getter to return the native elemetn\n\n\n                                \n                                    Returns :     ElementRef\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n    \n        \n\nTable of Contents\n\nBasic usage\nTheme (color)\nAccessibility\n\n\nBasic usage\nPass a valid Material icon name as the content of the button:\ndelete_foreverTheme (color)\nUse the theme parameter to change the color.\n\nforum\n\n\nforum\n\n\nforum\nBy default the icon will use color(pure, dark)\n\nAccessibility\nFor accessibility purposes we should set the actionName and buttonType.\n\nactionName can be one of the TsButtonActionTypes and will be used for the aria-label.\nbuttonType can be one of the TsButtonFunctionTypes and will be used for the type attribute.\n\nbookmark\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  EventEmitter,\n  ElementRef,\n} from '@angular/core';\n\nimport {\n  TsButtonActionTypes,\n  TsButtonFunctionTypes,\n} from './../button/button.module';\n\n\n/**\n * This is the icon-button UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-icon-button`: Placed on the primary container\n *\n * @example\n * delete_forever\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-icon-button',\n  templateUrl: './icon-button.component.html',\n  styleUrls: ['./icon-button.component.scss'],\n  host: {\n    class: 'ts-icon-button',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsIconButton',\n})\nexport class TsIconButtonComponent {\n  /**\n   * Define the action for the aria-label. {@link TsButtonActionTypes}\n   */\n  @Input()\n  public actionName: TsButtonActionTypes = 'Button';\n\n  /**\n   * Define the button type. {@link TsButtonFunctionTypes}\n   */\n  @Input()\n  public buttonType: TsButtonFunctionTypes = 'button';\n\n  /**\n   * Define if the button is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define the tabindex for the button\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n  /**\n   * Pass the click event through to the parent\n   */\n  @Output()\n  public clickEvent: EventEmitter = new EventEmitter;\n\n\n  /**\n   * Getter to return the native elemetn\n   */\n  public get hostElement(): ElementRef {\n    return this.elementRef.nativeElement;\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n  ) {}\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsIconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsIconButtonModule.html":{"url":"modules/TsIconButtonModule.html","title":"module - TsIconButtonModule","body":"\n                   \n\n\n\n\n  Modules\n  TsIconButtonModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsIconButtonModule\n\n\n\ncluster_TsIconButtonModule_declarations\n\n\n\ncluster_TsIconButtonModule_imports\n\n\n\ncluster_TsIconButtonModule_exports\n\n\n\n\nTsIconButtonComponent\n\nTsIconButtonComponent\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTsIconButtonModule -->\n\nTsIconButtonComponent->TsIconButtonModule\n\n\n\n\n\nTsIconButtonComponent \n\nTsIconButtonComponent \n\nTsIconButtonComponent  -->\n\nTsIconButtonModule->TsIconButtonComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsIconButtonModule -->\n\nTsIconModule->TsIconButtonModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/icon-button/icon-button.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsIconButtonComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsIconButtonComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsIconButtonComponent } from './icon-button.component';\n\nexport * from './icon-button.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatRippleModule,\n    TsIconModule,\n  ],\n  declarations: [\n    TsIconButtonComponent,\n  ],\n  exports: [\n    TsIconButtonComponent,\n  ],\n})\nexport class TsIconButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsIconComponent.html":{"url":"components/TsIconComponent.html","title":"component - TsIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsIconComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/icon/icon.component.ts\n\n\n    \n        Description\n    \n    \n        This is the icon UI Component\nQA CSS CLASSES\n\nqa-icon: Placed on the primary container\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    home\nhelp\n\n\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsIcon\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-icon\n            \n\n            \n                styleUrls\n                icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _background\n                            \n                            \n                                    Private\n                                _svgIcon\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                            \n                                inline\n                            \n                            \n                                svgIcon\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/icon/icon.component.ts:106\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                    \n                        Define if the icon should have a colored background.\nNOTE: This will affect layout and style.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inline\n                    \n                    \n                        Define if the icon should be aligned inline with text\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:81\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgIcon\n                    \n                    \n                        Name of the custom icon\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:87\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the icon theme\n\n                            \n                            Type:    TsStyleThemeTypes | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:106\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _background\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _background:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _svgIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _svgIcon:     TS_CUSTOM_ICON | undefined\n\n                    \n                \n                    \n                        \n                            Type :     TS_CUSTOM_ICON | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:100\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n\n                \n                    \n                        getbackground()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon/icon.component.ts:72\n                                \n                            \n\n                \n                    \n                        setbackground(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon/icon.component.ts:69\n                                \n                            \n                    \n                        \n                                Define if the icon should have a colored background.\nNOTE: This will affect layout and style.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        svgIcon\n                    \n                \n\n                \n                    \n                        getsvgIcon()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon/icon.component.ts:97\n                                \n                            \n\n                \n                    \n                        setsvgIcon(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon/icon.component.ts:87\n                                \n                            \n                    \n                        \n                                Name of the custom icon\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Icons\n\n\n\n\nTable of Contents\n\nBasic usage\nTheming\nStyle with CSS\nUsage inline with text\nCustom Icons\nAvailable\n\n\n\n\nBasic usage\nInclude any valid Material icon name inside the component:\nhomeIf the icon name consists of multiple words, use underscores between the words:\nopen_in_new\nSee all valid icon possibilities: https://material.io/icons\n\nTheming\nIcons support the same themes as the rest of the components:\nSearch for TsStyleThemeTypes to see all allowed types.\nStyle with CSS\nTo style with CSS, simply target the fill inside the ts-icon class:\n.myClass {\n  .ts-icon {\n    fill: color(accent);\n  }\n}Usage inline with text\nTo size and space the icons correctly for use within a block of text:\nCustom Icons\nCustom icons are accessed via a ts-icon @Input:\n\nhome\n\n\nAvailable\n\n\n\nName\nDescription\n\n\n\n\ncsv\nA file with the text 'CSV'\n\n\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n  isDevMode,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { CSV_ICON } from './custom-icons/csv';\n\n\n/**\n * Currently supported custom icons\n */\nexport type TS_CUSTOM_ICON\n  = 'csv'\n;\n\n\n/**\n * An array of supported custom icons.\n */\nexport const TS_CUSTOM_ICONS: TS_CUSTOM_ICON[] = [\n  'csv',\n];\n\n\n/**\n * This is the icon UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-icon`: Placed on the primary container\n *\n * @example\n * home\n * help\n *\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n  host: {\n    class: 'ts-icon',\n    '[class.ts-icon--inline]': 'inline',\n    '[class.ts-icon--primary]': 'theme === \"primary\"',\n    '[class.ts-icon--accent]': 'theme === \"accent\"',\n    '[class.ts-icon--warn]': 'theme === \"warn\"',\n    '[class.ts-icon--background]': 'background',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsIcon',\n})\nexport class TsIconComponent {\n  /**\n   * Define if the icon should have a colored background.\n   *\n   * NOTE: This will affect layout and style.\n   */\n  @Input()\n  public set background(value: boolean) {\n    this._background = coerceBooleanProperty(value);\n  }\n  public get background(): boolean {\n    return this._background;\n  }\n  private _background: boolean = false;\n\n  /**\n   * Define if the icon should be aligned inline with text\n   */\n  @Input()\n  public inline: boolean = false;\n\n  /**\n   * Name of the custom icon\n   */\n  @Input()\n  public set svgIcon(value: TS_CUSTOM_ICON | undefined) {\n    // If an unsupported value is passed in\n    if (value && TS_CUSTOM_ICONS.indexOf(value) \n    \n\n    \n        \n  \n\n\n\n\n  \n\n\n\n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsIconModule.html":{"url":"modules/TsIconModule.html","title":"module - TsIconModule","body":"\n                   \n\n\n\n\n  Modules\n  TsIconModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsIconModule\n\n\n\ncluster_TsIconModule_declarations\n\n\n\ncluster_TsIconModule_exports\n\n\n\n\nTsIconComponent\n\nTsIconComponent\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsIconModule -->\n\nTsIconComponent->TsIconModule\n\n\n\n\n\nTsIconComponent \n\nTsIconComponent \n\nTsIconComponent  -->\n\nTsIconModule->TsIconComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/icon/icon.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsIconComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsIconComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TsIconComponent } from './icon.component';\n\nexport * from './icon.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TsIconComponent,\n  ],\n  exports: [\n    TsIconComponent,\n  ],\n})\nexport class TsIconModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsImageDimensions.html":{"url":"classes/TsImageDimensions.html","title":"class - TsImageDimensions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsImageDimensions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/image-dimensions.ts\n        \n\n            \n                Description\n            \n            \n                A class to store dimensions for an image\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                height\n                            \n                            \n                                    Public\n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(width: number, height: number)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/file-upload/image-dimensions.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        width\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        height\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/image-dimensions.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/image-dimensions.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TsImageDimensions {\n  constructor(\n    public width: number,\n    public height: number,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsInputModule.html":{"url":"modules/TsInputModule.html","title":"module - TsInputModule","body":"\n                   \n\n\n\n\n  Modules\n  TsInputModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsInputModule\n\n\n\ncluster_TsInputModule_declarations\n\n\n\ncluster_TsInputModule_TsInputComponent_providers\n\n\n\ncluster_TsInputModule_imports\n\n\n\ncluster_TsInputModule_exports\n\n\n\ncluster_TsInputModule_providers\n\n\n\n\nTsInputComponent\n\nTsInputComponent\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsInputModule -->\n\nTsInputComponent->TsInputModule\n\n\n\n\n\nTsInputComponent \n\nTsInputComponent \n\nTsInputComponent  -->\n\nTsInputModule->TsInputComponent \n\n\n\n\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n\nTsInputComponent -->\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR->TsInputComponent\n\n\n\n\n\nTsAutofocusModule\n\nTsAutofocusModule\n\nTsInputModule -->\n\nTsAutofocusModule->TsInputModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsInputModule -->\n\nTsIconModule->TsInputModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsInputModule -->\n\nTsValidationMessagesModule->TsInputModule\n\n\n\n\n\nTsValidatorsService\n\nTsValidatorsService\n\nTsInputModule -->\n\nTsValidatorsService->TsInputModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/input/input.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsInputComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsValidatorsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsAutofocusModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsInputComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material/input';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\n\nimport { TsAutofocusModule } from './../autofocus/autofocus.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsValidatorsService } from './../validators/validators.service';\nimport { TsInputComponent } from './input.component';\n\nexport * from './input.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    TsValidationMessagesModule,\n    TsIconModule,\n    TsAutofocusModule,\n  ],\n  providers: [\n    TsValidatorsService,\n  ],\n  exports: [\n    TsInputComponent,\n  ],\n  declarations: [\n    TsInputComponent,\n  ],\n})\nexport class TsInputModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsLinkComponent.html":{"url":"components/TsLinkComponent.html","title":"component - TsLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsLinkComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/link/link.component.ts\n\n\n    \n        Description\n    \n    \n        This is the link UI Component\nQA CSS CLASSES\n\nqa-link: Placed on the link element\nqa-link-internal: Placed on the link element if the link is internal\nqa-link-external: Placed on the link element if the link is external\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    My link\n\nMy link\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsLink\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-link\n            \n\n            \n                styleUrls\n                link.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./link.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                externalIcon\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                destination\n                            \n                            \n                                isExternal\n                            \n                            \n                                tabIndex\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        destination\n                    \n                    \n                        Define the link's destination\n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/link/link.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isExternal\n                    \n                    \n                        Define if the link is to an external page\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/link/link.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                    \n                        Define the tabindex\n\n                            \n                            Type:    number\n\n                            \n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/link/link.component.ts:65\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            externalIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        externalIcon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : `open_in_new`\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/link/link.component.ts:47\n                            \n                        \n\n                \n                    \n                        Define the icon for external links\n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Link\n\n\n\n\nTable of Contents\n\nBasic usage\nExternal links\nTab index\n\n\nBasic usage\nWrap your link text and define a destination:\nMy linkExternal links\nTo signify a link will leave the current app or site, set external to true:\nMy link\nNOTE: When external is set to true, the link should be a standard link in string form.\n\nTab index\nA custom tabindex can also be set:\nMy link\n    \n\n    \n        import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\n\n\n/**\n * This is the link UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-link`: Placed on the link element\n * - `qa-link-internal`: Placed on the link element if the link is internal\n * - `qa-link-external`: Placed on the link element if the link is external\n *\n * @example\n * My link\n *\n * My link\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-link',\n  templateUrl: './link.component.html',\n  styleUrls: ['./link.component.scss'],\n  host: {\n    class: 'ts-link',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsLink',\n})\nexport class TsLinkComponent {\n  /**\n   * Define the icon for external links\n   */\n  public externalIcon: string = `open_in_new`;\n\n  /**\n   * Define the link's destination\n   */\n  @Input()\n  public destination: any;\n\n  /**\n   * Define if the link is to an external page\n   */\n  @Input()\n  public isExternal: boolean = false;\n\n  /**\n   * Define the tabindex\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n\n  \n    open_in_new\n  \n\n\n\n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          open_in_new    '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsLinkModule.html":{"url":"modules/TsLinkModule.html","title":"module - TsLinkModule","body":"\n                   \n\n\n\n\n  Modules\n  TsLinkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsLinkModule\n\n\n\ncluster_TsLinkModule_declarations\n\n\n\ncluster_TsLinkModule_imports\n\n\n\ncluster_TsLinkModule_exports\n\n\n\n\nTsLinkComponent\n\nTsLinkComponent\n\n\n\nTsLinkModule\n\nTsLinkModule\n\nTsLinkModule -->\n\nTsLinkComponent->TsLinkModule\n\n\n\n\n\nTsLinkComponent \n\nTsLinkComponent \n\nTsLinkComponent  -->\n\nTsLinkModule->TsLinkComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsLinkModule -->\n\nTsIconModule->TsLinkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/link/link.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsLinkComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsLinkComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsLinkComponent } from './link.component';\n\nexport * from './link.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    TsIconModule,\n  ],\n  exports: [\n    TsLinkComponent,\n  ],\n  declarations: [\n    TsLinkComponent,\n  ],\n})\nexport class TsLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsLoadingOverlayComponent.html":{"url":"components/TsLoadingOverlayComponent.html","title":"component - TsLoadingOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsLoadingOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/loading-overlay/loading-overlay.component.ts\n\n\n    \n        Description\n    \n    \n        The loading overlay component. Implemented by TsLoadingOverlayDirective\nQA CSS CLASSES\n\nqa-loading-overlay: Placed on the div overlay containing the loading spinner\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    See {\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsLoadingOverlay\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-loading-overlay\n            \n\n            \n                styleUrls\n                loading-overlay.component.scss\n            \n\n\n            \n                template\n                \n  \n    \n  \n\n\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\n\n\n/**\n * The loading overlay component. Implemented by {@link TsLoadingOverlayDirective}\n *\n * #### QA CSS CLASSES\n * - `qa-loading-overlay`: Placed on the div overlay containing the loading spinner\n *\n * @example\n * See {@link TsLoadingOverlayDirective}\n */\n@Component({\n  selector: 'ts-loading-overlay',\n  styleUrls: ['./loading-overlay.component.scss'],\n  host: {\n    class: 'ts-loading-overlay',\n  },\n  template: `\n    \n      \n        \n      \n    \n  `,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsLoadingOverlay',\n})\nexport class TsLoadingOverlayComponent {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsLoadingOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsLoadingOverlayDirective.html":{"url":"directives/TsLoadingOverlayDirective.html","title":"directive - TsLoadingOverlayDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsLoadingOverlayDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/loading-overlay/loading-overlay.directive.ts\n        \n\n            \n                Description\n            \n            \n                The tsLoadingOverlay UI Directive.\nProvides a spinner overlay to demonstrate loading for async data.\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n            \n                Example\n            \n            \n                        \n                            \n\nhttps://goo.gl/ieUPaG\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsLoadingOverlay]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bodyPortalHost\n                            \n                            \n                                    Private\n                                loadingOverlayPortal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                determinePosition\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsLoadingOverlay\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.position\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, windowService: TsWindowService, componentFactoryResolver: ComponentFactoryResolver, appRef: ApplicationRef, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:59\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        windowService\n                                                  \n                                                        \n                                                                    TsWindowService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        appRef\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tsLoadingOverlay\n                    \n                    \n                        Define a setter to show/hide the loading overlay\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:46\n                            \n                        \n            \n        \n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            style.position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        style.position:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:59\n                            \n                        \n\n                \n                    \n                        Alias the position back onto the component as a style attribute\n\n                    \n                \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            determinePosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        determinePosition(position: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:114\n                            \n                        \n\n\n                \n                    \n                            Return the correct position\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        position\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The current position value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The correct position value\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:101\n                            \n                        \n\n\n                \n                    \n                            Destroy the portal host if it exists\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:88\n                            \n                        \n\n\n                \n                    \n                            Determine and set the needed position\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bodyPortalHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bodyPortalHost:     DomPortalHost\n\n                    \n                \n                    \n                        \n                            Type :     DomPortalHost\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:40\n                            \n                        \n\n                \n                    \n                        Reference to our portal host\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingOverlayPortal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingOverlayPortal:     ComponentPortal\n\n                    \n                \n                    \n                        \n                            Type :     ComponentPortal\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:35\n                            \n                        \n\n                \n                    \n                        A reference to the portal\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tsLoadingOverlay\n                    \n                \n\n\n                \n                    \n                        settsLoadingOverlay(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:46\n                                \n                            \n                    \n                        \n                                Define a setter to show/hide the loading overlay\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnDestroy,\n  HostBinding,\n  ComponentFactoryResolver,\n  ApplicationRef,\n  Injector,\n} from '@angular/core';\nimport { ComponentPortal, DomPortalHost } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { TsWindowService } from '@terminus/ngx-tools';\n\nimport { TsLoadingOverlayComponent } from './loading-overlay.component';\n\n\n/**\n * The tsLoadingOverlay UI Directive.\n * Provides a spinner overlay to demonstrate loading for async data.\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Directive({\n  selector: '[tsLoadingOverlay]',\n})\nexport class TsLoadingOverlayDirective implements OnInit, OnDestroy {\n  /**\n   * A reference to the portal\n   */\n  private loadingOverlayPortal: ComponentPortal;\n\n  /**\n   * Reference to our portal host\n   */\n  private bodyPortalHost: DomPortalHost;\n\n  /**\n   * Define a setter to show/hide the loading overlay\n   */\n  @Input()\n  public set tsLoadingOverlay(value: boolean) {\n    const shouldSet = coerceBooleanProperty(value);\n    if (shouldSet) {\n      this.bodyPortalHost.attach(this.loadingOverlayPortal);\n    } else {\n      this.bodyPortalHost.detach();\n    }\n  }\n\n  /**\n   * Alias the position back onto the component as a style attribute\n   */\n  @HostBinding('style.position')\n  public position!: string;\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private elementRef: ElementRef,\n    private windowService: TsWindowService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector,\n  ) {\n    // Create the body portal host\n    this.bodyPortalHost = new DomPortalHost(\n      this.elementRef.nativeElement,\n      this.componentFactoryResolver,\n      this.appRef,\n      this.injector,\n    );\n\n    // Create the component portal\n    this.loadingOverlayPortal = new ComponentPortal(TsLoadingOverlayComponent);\n  }\n\n\n  /**\n   * Determine and set the needed position\n   */\n  public ngOnInit(): void {\n    // Determine the CSS position of the element\n    const position = this.windowService.nativeWindow\n      .getComputedStyle(this.elementRef.nativeElement).getPropertyValue('position');\n\n    // Set the position\n    this.position = this.determinePosition(position);\n  }\n\n\n  /**\n   * Destroy the portal host if it exists\n   */\n  public ngOnDestroy(): void {\n    if (this.bodyPortalHost) {\n      this.bodyPortalHost.dispose();\n    }\n  }\n\n\n  /**\n   * Return the correct position\n   *\n   * @param position The current position value\n   * @return The correct position value\n   */\n  private determinePosition(position: string): string {\n    return (position === 'relative' || position === 'absolute') ? position : 'relative';\n  }\n\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsLoadingOverlayModule.html":{"url":"modules/TsLoadingOverlayModule.html","title":"module - TsLoadingOverlayModule","body":"\n                   \n\n\n\n\n  Modules\n  TsLoadingOverlayModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsLoadingOverlayModule\n\n\n\ncluster_TsLoadingOverlayModule_declarations\n\n\n\ncluster_TsLoadingOverlayModule_exports\n\n\n\n\nTsLoadingOverlayComponent\n\nTsLoadingOverlayComponent\n\n\n\nTsLoadingOverlayModule\n\nTsLoadingOverlayModule\n\nTsLoadingOverlayModule -->\n\nTsLoadingOverlayComponent->TsLoadingOverlayModule\n\n\n\n\n\nTsLoadingOverlayDirective\n\nTsLoadingOverlayDirective\n\nTsLoadingOverlayModule -->\n\nTsLoadingOverlayDirective->TsLoadingOverlayModule\n\n\n\n\n\nTsLoadingOverlayDirective \n\nTsLoadingOverlayDirective \n\nTsLoadingOverlayDirective  -->\n\nTsLoadingOverlayModule->TsLoadingOverlayDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/loading-overlay/loading-overlay.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsLoadingOverlayComponent\n                            \n                            \n                                TsLoadingOverlayDirective\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TsLoadingOverlayComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsLoadingOverlayDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsLoadingOverlayComponent } from './loading-overlay.component';\nimport { TsLoadingOverlayDirective } from './loading-overlay.directive';\n\nexport * from './loading-overlay.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TsLoadingOverlayDirective,\n    TsLoadingOverlayComponent,\n  ],\n  entryComponents: [\n    TsLoadingOverlayComponent,\n  ],\n  exports: [\n    TsLoadingOverlayDirective,\n  ],\n})\nexport class TsLoadingOverlayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsLoginFormComponent.html":{"url":"components/TsLoginFormComponent.html","title":"component - TsLoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsLoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        This is the login-form UI Component\nQA CSS CLASSES\n\nqa-login-form: Placed on the form element which contains this component\nqa-login-form-email: Placed on the TsInputComponent used for the \"email\" field\nqa-login-form-password: Placed on the TsInputComponent used for the \"password\" field\nqa-login-form-remember-me: Placed on the TsCheckboxComponent used for the \"remember\nme\" checkbox\nqa-login-form-forgot-password: Placed on the TsLinkComponent used for the \"forgot\npassword\" link\nqa-login-form-submit: Placed on the TsButtonComponent used for the submit button\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsLoginForm\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-login-form\n            \n\n            \n                styleUrls\n                login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkbox\n                            \n                            \n                                    Private\n                                FORM_GROUP\n                            \n                            \n                                inputComponents\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                PASSWORD_MINLENGTH\n                            \n                            \n                                    Public\n                                showForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Private\n                                resetForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                forgotPasswordLink\n                            \n                            \n                                forgotPasswordText\n                            \n                            \n                                inProgress\n                            \n                            \n                                isRedirecting\n                            \n                            \n                                loginCTA\n                            \n                            \n                                triggerFormReset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, validatorsService: TsValidatorsService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/login-form/login-form.component.ts:170\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        validatorsService\n                                                  \n                                                        \n                                                                    TsValidatorsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        forgotPasswordLink\n                    \n                    \n                        Define the link to the 'forgot password' view\n\n                            \n                            Type:    string[]\n\n                            \n                        \n                            Default value: ['/forgot']\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:134\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        forgotPasswordText\n                    \n                    \n                        Define the text for the 'forgot password' link\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Forgot your password?'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:140\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inProgress\n                    \n                    \n                        Define if the form button is showing progress\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:146\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRedirecting\n                    \n                    \n                        Define if the user has successfully logged in and is being redirected\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:152\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loginCTA\n                    \n                    \n                        Define the login call to action\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Log In'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:158\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        triggerFormReset\n                    \n                    \n                        Allow a consumer to reset the form via an input\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:164\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        submit\n                    \n                    \n                        Emit an event on form submission\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:170\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:188\n                            \n                        \n\n\n                \n                    \n                            Trigger a form reset if triggerFormReset is changed to TRUE\n(explanation at resetForm method)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe inputs that have changed\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resetForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:205\n                            \n                        \n\n\n                \n                    \n                            Reset the form\nThis is a hack. Currently there doesn't seem to be a good way to reset the form value and\nvalidations without simply re-initializing the form each time.\nHACK: The showForm value is a 'hack' to reset the input validation styles by removing the\nform from the dom and re-adding it. This method won't break if the Material team changes any\nvalidation classes but it may be more performant to simply remove the classes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkbox:     TsCheckboxComponent\n\n                    \n                \n                    \n                        \n                            Type :     TsCheckboxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:128\n                            \n                        \n\n                \n                    \n                        Provide access to the checkbox inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            FORM_GROUP\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FORM_GROUP:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    email: [\n      null,\n      [\n        Validators.required,\n        this.validatorsService.email(),\n      ],\n    ],\n    password: [\n      null,\n      [\n        Validators.required,\n      ],\n    ],\n    rememberMe: [\n      false,\n    ],\n  }\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:84\n                            \n                        \n\n                \n                    \n                        Define the form group for re-use\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputComponents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputComponents:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:122\n                            \n                        \n\n                \n                    \n                        Provide access to the text inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup | null\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup | null\n\n                        \n                    \n                    \n                        \n                            Default value : this.formBuilder.group(this.FORM_GROUP)\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:111\n                            \n                        \n\n                \n                    \n                        Initialize the login form\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            PASSWORD_MINLENGTH\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PASSWORD_MINLENGTH:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 8\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:106\n                            \n                        \n\n                \n                    \n                        Define the minimum length for a password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showForm:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:116\n                            \n                        \n\n                \n                    \n                        Define a flag to add/remove the form from the DOM\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\n\nimport { TsInputComponent } from './../input/input.component';\nimport { TsCheckboxComponent } from './../checkbox/checkbox.component';\nimport { TsValidatorsService } from './../validators/validators.service';\n\n\n/**\n * Define the structure of the login form response\n */\nexport interface TsLoginFormResponse {\n  /**\n   * User's email\n   */\n  email: string;\n\n  /**\n   * User's password\n   */\n  password: string;\n\n  /**\n   * Flag determining if a cookie should be set\n   */\n  rememberMe: boolean;\n}\n\n\n/**\n * This is the login-form UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-login-form`: Placed on the form element which contains this component\n * - `qa-login-form-email`: Placed on the {@link TsInputComponent} used for the \"email\" field\n * - `qa-login-form-password`: Placed on the {@link TsInputComponent} used for the \"password\" field\n * - `qa-login-form-remember-me`: Placed on the {@link TsCheckboxComponent} used for the \"remember\n * me\" checkbox\n * - `qa-login-form-forgot-password`: Placed on the {@link TsLinkComponent} used for the \"forgot\n * password\" link\n * - `qa-login-form-submit`: Placed on the {@link TsButtonComponent} used for the submit button\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n  host: {\n    class: 'ts-login-form',\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsLoginForm',\n})\nexport class TsLoginFormComponent implements OnChanges {\n  /**\n   * Define the form group for re-use\n   */\n  private FORM_GROUP = {\n    email: [\n      null,\n      [\n        Validators.required,\n        this.validatorsService.email(),\n      ],\n    ],\n    password: [\n      null,\n      [\n        Validators.required,\n      ],\n    ],\n    rememberMe: [\n      false,\n    ],\n  };\n\n  /**\n   * Define the minimum length for a password\n   */\n  public PASSWORD_MINLENGTH: number = 8;\n\n  /**\n   * Initialize the login form\n   */\n  public loginForm: FormGroup | null = this.formBuilder.group(this.FORM_GROUP);\n\n  /**\n   * Define a flag to add/remove the form from the DOM\n   */\n  public showForm: boolean = true;\n\n  /**\n   * Provide access to the text inputs\n   */\n  @ViewChildren(TsInputComponent)\n  inputComponents!: QueryList;\n\n  /**\n   * Provide access to the checkbox inputs\n   */\n  @ViewChild(TsCheckboxComponent)\n  checkbox!: TsCheckboxComponent;\n\n  /**\n   * Define the link to the 'forgot password' view\n   */\n  @Input()\n  public forgotPasswordLink: string[] = ['/forgot'];\n\n  /**\n   * Define the text for the 'forgot password' link\n   */\n  @Input()\n  public forgotPasswordText: string = 'Forgot your password?';\n\n  /**\n   * Define if the form button is showing progress\n   */\n  @Input()\n  public inProgress: boolean = false;\n\n  /**\n   * Define if the user has successfully logged in and is being redirected\n   */\n  @Input()\n  public isRedirecting: boolean = false;\n\n  /**\n   * Define the login call to action\n   */\n  @Input()\n  public loginCTA: string = 'Log In';\n\n  /**\n   * Allow a consumer to reset the form via an input\n   */\n  @Input()\n  public triggerFormReset: boolean = false;\n\n  /**\n   * Emit an event on form submission\n   */\n  @Output()\n  public submit: EventEmitter = new EventEmitter;\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private validatorsService: TsValidatorsService,\n  ) {}\n\n\n  /**\n   * Trigger a form reset if `triggerFormReset` is changed to TRUE\n   * (explanation at `resetForm` method)\n   *\n   * @param changes - The inputs that have changed\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('triggerFormReset')) {\n      this.resetForm();\n    }\n  }\n\n\n  /**\n   * Reset the form\n   *\n   * This is a hack. Currently there doesn't seem to be a good way to reset the form value and\n   * validations without simply re-initializing the form each time.\n   *\n   * HACK: The `showForm` value is a 'hack' to reset the input validation styles by removing the\n   * form from the dom and re-adding it. This method won't break if the Material team changes any\n   * validation classes but it may be more performant to simply remove the classes.\n   */\n  private resetForm(): void {\n    // Destroy the form\n    this.showForm = false;\n\n    // Clear out the form\n    this.loginForm = null;\n\n    // Re-initialize the form\n    this.loginForm = this.formBuilder.group(this.FORM_GROUP);\n\n    // This timeout lets one change detection cycle pass so that the form is actually removed from\n    // the DOM\n    setTimeout(() => {\n      // Add the form back to the DOM\n      this.showForm = true;\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n  \n\n  \n    Remember me\n  \n\n  {{ forgotPasswordText }}\n\n  \n    \n      {{ loginCTA }}\n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Remember me    {{ forgotPasswordText }}            {{ loginCTA }}      '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsLoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsLoginFormModule.html":{"url":"modules/TsLoginFormModule.html","title":"module - TsLoginFormModule","body":"\n                   \n\n\n\n\n  Modules\n  TsLoginFormModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsLoginFormModule\n\n\n\ncluster_TsLoginFormModule_declarations\n\n\n\ncluster_TsLoginFormModule_imports\n\n\n\ncluster_TsLoginFormModule_exports\n\n\n\ncluster_TsLoginFormModule_providers\n\n\n\n\nTsLoginFormComponent\n\nTsLoginFormComponent\n\n\n\nTsLoginFormModule\n\nTsLoginFormModule\n\nTsLoginFormModule -->\n\nTsLoginFormComponent->TsLoginFormModule\n\n\n\n\n\nTsLoginFormComponent \n\nTsLoginFormComponent \n\nTsLoginFormComponent  -->\n\nTsLoginFormModule->TsLoginFormComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsLoginFormModule -->\n\nTsButtonModule->TsLoginFormModule\n\n\n\n\n\nTsCheckboxModule\n\nTsCheckboxModule\n\nTsLoginFormModule -->\n\nTsCheckboxModule->TsLoginFormModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsLoginFormModule -->\n\nTsInputModule->TsLoginFormModule\n\n\n\n\n\nTsLinkModule\n\nTsLinkModule\n\nTsLoginFormModule -->\n\nTsLinkModule->TsLoginFormModule\n\n\n\n\n\nTsSpacingModule\n\nTsSpacingModule\n\nTsLoginFormModule -->\n\nTsSpacingModule->TsLoginFormModule\n\n\n\n\n\nTsValidatorsService\n\nTsValidatorsService\n\nTsLoginFormModule -->\n\nTsValidatorsService->TsLoginFormModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/login-form/login-form.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsLoginFormComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsValidatorsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsCheckboxModule\n                            \n                            \n                                    TsInputModule\n                            \n                            \n                                    TsLinkModule\n                            \n                            \n                                    TsSpacingModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsLoginFormComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TsValidatorsService } from './../validators/validators.service';\nimport { TsInputModule } from './../input/input.module';\nimport { TsCheckboxModule } from './../checkbox/checkbox.module';\nimport { TsButtonModule } from './../button/button.module';\nimport { TsSpacingModule } from './../spacing/spacing.module';\nimport { TsLinkModule } from './../link/link.module';\nimport { TsLoginFormComponent } from './login-form.component';\n\nexport * from './login-form.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    TsInputModule,\n    TsCheckboxModule,\n    TsSpacingModule,\n    TsButtonModule,\n    TsLinkModule,\n  ],\n  providers: [\n    TsValidatorsService,\n  ],\n  exports: [\n    TsLoginFormComponent,\n  ],\n  declarations: [\n    TsLoginFormComponent,\n  ],\n})\nexport class TsLoginFormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsLoginFormResponse.html":{"url":"interfaces/TsLoginFormResponse.html","title":"interface - TsLoginFormResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsLoginFormResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/login-form/login-form.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the structure of the login form response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                                \n                                        rememberMe\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rememberMe\n                                    \n                                \n                                \n                                    \n                                        rememberMe:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag determining if a cookie should be set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\n\nimport { TsInputComponent } from './../input/input.component';\nimport { TsCheckboxComponent } from './../checkbox/checkbox.component';\nimport { TsValidatorsService } from './../validators/validators.service';\n\n\n/**\n * Define the structure of the login form response\n */\nexport interface TsLoginFormResponse {\n  /**\n   * User's email\n   */\n  email: string;\n\n  /**\n   * User's password\n   */\n  password: string;\n\n  /**\n   * Flag determining if a cookie should be set\n   */\n  rememberMe: boolean;\n}\n\n\n/**\n * This is the login-form UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-login-form`: Placed on the form element which contains this component\n * - `qa-login-form-email`: Placed on the {@link TsInputComponent} used for the \"email\" field\n * - `qa-login-form-password`: Placed on the {@link TsInputComponent} used for the \"password\" field\n * - `qa-login-form-remember-me`: Placed on the {@link TsCheckboxComponent} used for the \"remember\n * me\" checkbox\n * - `qa-login-form-forgot-password`: Placed on the {@link TsLinkComponent} used for the \"forgot\n * password\" link\n * - `qa-login-form-submit`: Placed on the {@link TsButtonComponent} used for the submit button\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n  host: {\n    class: 'ts-login-form',\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsLoginForm',\n})\nexport class TsLoginFormComponent implements OnChanges {\n  /**\n   * Define the form group for re-use\n   */\n  private FORM_GROUP = {\n    email: [\n      null,\n      [\n        Validators.required,\n        this.validatorsService.email(),\n      ],\n    ],\n    password: [\n      null,\n      [\n        Validators.required,\n      ],\n    ],\n    rememberMe: [\n      false,\n    ],\n  };\n\n  /**\n   * Define the minimum length for a password\n   */\n  public PASSWORD_MINLENGTH: number = 8;\n\n  /**\n   * Initialize the login form\n   */\n  public loginForm: FormGroup | null = this.formBuilder.group(this.FORM_GROUP);\n\n  /**\n   * Define a flag to add/remove the form from the DOM\n   */\n  public showForm: boolean = true;\n\n  /**\n   * Provide access to the text inputs\n   */\n  @ViewChildren(TsInputComponent)\n  inputComponents!: QueryList;\n\n  /**\n   * Provide access to the checkbox inputs\n   */\n  @ViewChild(TsCheckboxComponent)\n  checkbox!: TsCheckboxComponent;\n\n  /**\n   * Define the link to the 'forgot password' view\n   */\n  @Input()\n  public forgotPasswordLink: string[] = ['/forgot'];\n\n  /**\n   * Define the text for the 'forgot password' link\n   */\n  @Input()\n  public forgotPasswordText: string = 'Forgot your password?';\n\n  /**\n   * Define if the form button is showing progress\n   */\n  @Input()\n  public inProgress: boolean = false;\n\n  /**\n   * Define if the user has successfully logged in and is being redirected\n   */\n  @Input()\n  public isRedirecting: boolean = false;\n\n  /**\n   * Define the login call to action\n   */\n  @Input()\n  public loginCTA: string = 'Log In';\n\n  /**\n   * Allow a consumer to reset the form via an input\n   */\n  @Input()\n  public triggerFormReset: boolean = false;\n\n  /**\n   * Emit an event on form submission\n   */\n  @Output()\n  public submit: EventEmitter = new EventEmitter;\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private validatorsService: TsValidatorsService,\n  ) {}\n\n\n  /**\n   * Trigger a form reset if `triggerFormReset` is changed to TRUE\n   * (explanation at `resetForm` method)\n   *\n   * @param changes - The inputs that have changed\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('triggerFormReset')) {\n      this.resetForm();\n    }\n  }\n\n\n  /**\n   * Reset the form\n   *\n   * This is a hack. Currently there doesn't seem to be a good way to reset the form value and\n   * validations without simply re-initializing the form each time.\n   *\n   * HACK: The `showForm` value is a 'hack' to reset the input validation styles by removing the\n   * form from the dom and re-adding it. This method won't break if the Material team changes any\n   * validation classes but it may be more performant to simply remove the classes.\n   */\n  private resetForm(): void {\n    // Destroy the form\n    this.showForm = false;\n\n    // Clear out the form\n    this.loginForm = null;\n\n    // Re-initialize the form\n    this.loginForm = this.formBuilder.group(this.FORM_GROUP);\n\n    // This timeout lets one change detection cycle pass so that the form is actually removed from\n    // the DOM\n    setTimeout(() => {\n      // Add the form back to the DOM\n      this.showForm = true;\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsMaskModule.html":{"url":"modules/TsMaskModule.html","title":"module - TsMaskModule","body":"\n                   \n\n\n\n\n  Modules\n  TsMaskModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsMaskModule\n\n\n\ncluster_TsMaskModule_declarations\n\n\n\ncluster_TsMaskModule_TsMaskDirective_providers\n\n\n\ncluster_TsMaskModule_exports\n\n\n\n\nTsMaskDirective\n\nTsMaskDirective\n\n\n\nTsMaskModule\n\nTsMaskModule\n\nTsMaskModule -->\n\nTsMaskDirective->TsMaskModule\n\n\n\n\n\nTsMaskDirective \n\nTsMaskDirective \n\nTsMaskDirective  -->\n\nTsMaskModule->TsMaskDirective \n\n\n\n\n\nMASKED_INPUT_VALUE_ACCESSOR\n\nMASKED_INPUT_VALUE_ACCESSOR\n\nTsMaskDirective -->\n\nMASKED_INPUT_VALUE_ACCESSOR->TsMaskDirective\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/mask/mask.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsMaskDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsMaskDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsMaskDirective } from './mask.directive';\n\nexport * from './mask.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TsMaskDirective,\n  ],\n  exports: [\n    TsMaskDirective,\n  ],\n})\nexport class TsMaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsMenuComponent.html":{"url":"components/TsMenuComponent.html","title":"component - TsMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsMenuComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/menu/menu.component.ts\n\n\n    \n        Description\n    \n    \n        A presentational component to render a dropdown menu.\nQA CSS CLASSES\n-qa-menu: Placed on the wrapper around the menu items\n-qa-menu-trigger: Placed on the menu trigger\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    Select Item\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsMenu\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-menu\n            \n\n            \n                styleUrls\n                menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                shouldOverlapTrigger\n                            \n                            \n                                    Public\n                                trigger\n                            \n                            \n                                    Private\n                                TRIGGER_ICON_DEFAULT\n                            \n                            \n                                    Private\n                                TRIGGER_ICON_UTILITY\n                            \n                            \n                                    Public\n                                triggerIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                defaultOpened\n                            \n                            \n                                format\n                            \n                            \n                                isDisabled\n                            \n                            \n                                menuItemsTemplate\n                            \n                            \n                                menuPositionX\n                            \n                            \n                                menuPositionY\n                            \n                            \n                                theme\n                            \n                            \n                                triggerType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        defaultOpened\n                    \n                    \n                        Define if the menu should be opened by default\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:115\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        format\n                    \n                    \n                        Define the button format\n\n                            \n                            Type:    TsButtonFormatTypes\n\n                            \n                        \n                            Default value: 'filled'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:151\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the menu should be disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:121\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuItemsTemplate\n                    \n                    \n                        Allow a custom template for menu items\n\n                            \n                            Type:    TemplateRef\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:127\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuPositionX\n                    \n                    \n                        Define the X menu position\n\n                            \n                            Type:    TsMenuPositionTypesX\n\n                            \n                        \n                            Default value: 'after'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:133\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuPositionY\n                    \n                    \n                        Define the Y menu position\n\n                            \n                            Type:    TsMenuPositionTypesY\n\n                            \n                        \n                            Default value: 'below'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:139\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the menu theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:145\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        triggerType\n                    \n                    \n                        Define the type of trigger TsMenuTriggerTypes\n\n'utility' will expose a simple fab trigger: ⋮\n'default' will expose a standard TsButtonComponent\n\n\n                            \n                            Type:    TsMenuTriggerTypes\n\n                            \n                        \n                            Default value: 'default'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:160\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:175\n                            \n                        \n\n\n                \n                    \n                            After the view has initialized, open the menu if it is defaulted to 'open'\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:166\n                            \n                        \n\n\n                \n                    \n                            Set the triggerIcon based on the triggerType\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldOverlapTrigger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shouldOverlapTrigger:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:98\n                            \n                        \n\n                \n                    \n                        Define if the menu should overlap the trigger\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trigger:     MatMenuTrigger\n\n                    \n                \n                    \n                        \n                            Type :     MatMenuTrigger\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:109\n                            \n                        \n\n                \n                    \n                        Provide access to the trigger\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            TRIGGER_ICON_DEFAULT\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TRIGGER_ICON_DEFAULT:     \n\n                    \n                \n                    \n                        \n                            Default value : 'arrow_drop_down'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:81\n                            \n                        \n\n                \n                    \n                        Define the default icon for the trigger button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            TRIGGER_ICON_UTILITY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TRIGGER_ICON_UTILITY:     \n\n                    \n                \n                    \n                        \n                            Default value : 'more_vert'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:86\n                            \n                        \n\n                \n                    \n                        Define the utility icon for the trigger button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            triggerIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        triggerIcon:     \"arrow_drop_down\" | \"more_vert\"\n\n                    \n                \n                    \n                        \n                            Type :     \"arrow_drop_down\" | \"more_vert\"\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:103\n                            \n                        \n\n                \n                    \n                        The icon to be used in the trigger button\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isUtilityMenu\n                    \n                \n\n                \n                    \n                        getisUtilityMenu()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/menu/menu.component.ts:91\n                                \n                            \n                    \n                        \n                                Return if the current menu is a utility menu\n\n\n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n    \n        \n\nTable of Contents\n\nBasic Usage\nCheckbox Menu\n\n\nBasic Usage\n\n\n  Select Item\n\n\n\n\n  \n    Roger, Roger.\n  \n\n  \n    A tasty link\n  \nThis allows all selection functionality to be handled by the consuming application rather than being\nproxied through event emitters.\n\nNOTE:  and  will be styled the same within a menu.\n\nCheckbox Menu\n\nThis is very similar to the basic usage example, with a few small, key differences.\n\nCreate the form and array of possible options:\n// The list of column names to show in the UI\ncolumns = [\n  'Title',\n  'Account',\n  'Budget',\n  'Enabled',\n];\n// We are creating a form array with 4 controls all defaulted to 'true'\nmyForm = this.formBuilder.group({\n  showColumns: this.formBuilder.array([true, true, true, true]),\n});Create the menu trigger and the dropdown contents:\n\n\n  Select Item\n\n\n\n\n  \n    \n    \n      \n      \n        \n        {{ columns[i] }}\n      \n    \n  \n\nNOTE: In this example, the form is stand-alone so the entire form is nested inside the menu\ntemplate. If this were part of a larger form, the form element would be higher in the DOM\nhierarchy.\n\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  ViewChild,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ElementRef,\n  TemplateRef,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsButtonFormatTypes } from '../button/button.component';\n\n\n/**\n * Define the allowed X positions for a menu\n */\nexport type TsMenuPositionTypesX =\n  'before'\n  | 'after'\n;\n\n\n/**\n * Define the allowed Y positions for a menu\n */\nexport type TsMenuPositionTypesY =\n  'above'\n  | 'below'\n;\n\n\n/**\n * Define the allowed trigger types for a menu\n */\nexport type TsMenuTriggerTypes\n  = 'default'\n  | 'utility'\n;\n\n\n/**\n * A presentational component to render a dropdown menu.\n *\n * #### QA CSS CLASSES\n * -`qa-menu`: Placed on the wrapper around the menu items\n * -`qa-menu-trigger`: Placed on the menu trigger\n *\n * @example\n * Select Item\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n  host: {\n    class: 'ts-menu',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsMenu',\n})\nexport class TsMenuComponent implements AfterViewInit, OnInit {\n  /**\n   * Define the default icon for the trigger button\n   */\n  private TRIGGER_ICON_DEFAULT: 'arrow_drop_down' = 'arrow_drop_down';\n\n  /**\n   * Define the utility icon for the trigger button\n   */\n  private TRIGGER_ICON_UTILITY: 'more_vert' = 'more_vert';\n\n  /**\n   * Return if the current menu is a utility menu\n   */\n  public get isUtilityMenu(): boolean {\n    return this.triggerType === 'utility';\n  }\n\n  /**\n   * Define if the menu should overlap the trigger\n   */\n  public shouldOverlapTrigger: boolean = false;\n\n  /**\n   * The icon to be used in the trigger button\n   */\n  public triggerIcon!: 'arrow_drop_down' | 'more_vert';\n\n  /**\n   * Provide access to the trigger\n   */\n  @ViewChild(MatMenuTrigger)\n  public trigger!: MatMenuTrigger;\n\n  /**\n   * Define if the menu should be opened by default\n   */\n  @Input()\n  public defaultOpened: boolean = false;\n\n  /**\n   * Define if the menu should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Allow a custom template for menu items\n   */\n  @Input()\n  public menuItemsTemplate!: TemplateRef;\n\n  /**\n   * Define the X menu position\n   */\n  @Input()\n  public menuPositionX: TsMenuPositionTypesX = 'after';\n\n  /**\n   * Define the Y menu position\n   */\n  @Input()\n  public menuPositionY: TsMenuPositionTypesY = 'below';\n\n  /**\n   * Define the menu theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define the button format\n   */\n  @Input()\n  public format: TsButtonFormatTypes = 'filled';\n\n  /**\n   * Define the type of trigger {@link TsMenuTriggerTypes}\n   *\n   * - 'utility' will expose a simple fab trigger: `⋮`\n   * - 'default' will expose a standard {@link TsButtonComponent}\n   */\n  @Input()\n  public triggerType: TsMenuTriggerTypes = 'default';\n\n\n  /**\n   * Set the triggerIcon based on the triggerType\n   */\n  ngOnInit(): void {\n    this.triggerIcon = (this.triggerType === 'default') ?\n      this.TRIGGER_ICON_DEFAULT : this.TRIGGER_ICON_UTILITY;\n  }\n\n\n  /**\n   * After the view has initialized, open the menu if it is defaulted to 'open'\n   */\n  public ngAfterViewInit(): void {\n    if (this.defaultOpened) {\n      this.trigger.openMenu();\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n\n    \n      {{ triggerIcon }}\n    \n  \n\n  \n    \n      {{ triggerIcon }}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ triggerIcon }}                  {{ triggerIcon }}      '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsMenuModule.html":{"url":"modules/TsMenuModule.html","title":"module - TsMenuModule","body":"\n                   \n\n\n\n\n  Modules\n  TsMenuModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsMenuModule\n\n\n\ncluster_TsMenuModule_declarations\n\n\n\ncluster_TsMenuModule_imports\n\n\n\ncluster_TsMenuModule_exports\n\n\n\n\nTsMenuComponent\n\nTsMenuComponent\n\n\n\nTsMenuModule\n\nTsMenuModule\n\nTsMenuModule -->\n\nTsMenuComponent->TsMenuModule\n\n\n\n\n\nTsMenuComponent \n\nTsMenuComponent \n\nTsMenuComponent  -->\n\nTsMenuModule->TsMenuComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsMenuModule -->\n\nTsButtonModule->TsMenuModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsMenuModule -->\n\nTsIconModule->TsMenuModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/menu/menu.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsMenuComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsMenuComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsButtonModule } from './../button/button.module';\nimport { TsMenuComponent } from './menu.component';\n\nexport * from './menu.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatMenuModule,\n    TsIconModule,\n    MatButtonModule,\n    TsButtonModule,\n  ],\n  exports: [\n    TsMenuComponent,\n  ],\n  declarations: [\n    TsMenuComponent,\n  ],\n})\nexport class TsMenuModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsNavigationActionItem.html":{"url":"interfaces/TsNavigationActionItem.html","title":"interface - TsNavigationActionItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsNavigationActionItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Action specific keys for an item passed to the TsNavigationComponent\n\n            \n\n            \n                Extends\n            \n            \n                    NavigationItemBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The action to emit upon interaction\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsNavigationComponent.html":{"url":"components/TsNavigationComponent.html","title":"component - TsNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/navigation/navigation.component.ts\n\n\n    \n        Description\n    \n    \n        This is the navigation UI Component\nQA CSS CLASSES\n\nqa-navigation: Placed on the nav element which contains this component\nqa-navigation-items: Placed on the div element which contains the navigation items\nqa-navigation-item: Placed on the button elements which represent each visible navigation\nitem\nqa-navigation-secondary-trigger: Placed on the button element which displays the drop down\ncontaining secondary links when clicked\nqa-navigation-secondary-items: Placed on the menu element which contains the secondary\nnavigation items\nqa-navigation-secondary-item: Placed on the button elements which represent each secondary\nnavigation item\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsNavigation\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-navigation\n            \n\n            \n                styleUrls\n                navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                breakWidths\n                            \n                            \n                                    Public\n                                hiddenItems\n                            \n                            \n                                    Private\n                                pristineItems\n                            \n                            \n                                    Public\n                                visibleItems\n                            \n                            \n                                    Public\n                                visibleItemsList\n                            \n                            \n                                    Public\n                                visibleLinkElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateBreakWidths\n                            \n                            \n                                    Public\n                                isExternalLink\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                setUpInitialArrays\n                            \n                            \n                                    Private\n                                updateLists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                user\n                            \n                            \n                                welcomeMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/navigation/navigation.component.ts:250\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        Accept the array of navigation items and trigger setup\n\n                            \n                            Type:    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:202\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                    \n                        Accept the user data\n\n                            \n                            Type:    TsUser\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:218\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        welcomeMessage\n                    \n                    \n                        Define the welcome message\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Welcome'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:224\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                    \n                        Emit the click event with the TsNavigationPayload\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:242\n                            \n                        \n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:resize\n                            \n                            \n                        \n                    \n                \n                \n                    \nwindow:resize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:248\n                            \n                        \n\n\n                \n                    \n                            Trigger a layout update when the window resizes\n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            generateBreakWidths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateBreakWidths()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:282\n                            \n                        \n\n\n                \n                    \n                            Generate the array of breakWidths\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isExternalLink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isExternalLink(destination: string | string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:368\n                            \n                        \n\n\n                \n                    \n                            If the destination is a string and begins with http\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        destination\n                                                        \n                                                                    string | string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe destination to check\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Boolean determining if the link is external\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:272\n                            \n                        \n\n\n                \n                    \n                            Trigger initial layout update after the view initializes\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:264\n                            \n                        \n\n\n                \n                    \n                            Set up initial link groups\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setUpInitialArrays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setUpInitialArrays(items: TsNavigationItem[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:302\n                            \n                        \n\n\n                \n                    \n                            Clone the nav items and split into the initially visible/hidden lists\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    TsNavigationItem[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe complete list of navigation items\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateLists\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateLists()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:319\n                            \n                        \n\n\n                \n                    \n                            Move items between the two lists as required by the available space\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            breakWidths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        breakWidths:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:165\n                            \n                        \n\n                \n                    \n                        Define an array of widths at which to break the navigation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hiddenItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hiddenItems:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([] as TsNavigationItem[])\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:170\n                            \n                        \n\n                \n                    \n                        Define the list of hidden items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pristineItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pristineItems:     TsNavigationItem[]\n\n                    \n                \n                    \n                        \n                            Type :     TsNavigationItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:149\n                            \n                        \n\n                \n                    \n                        Store a pristine copy of the navigation items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visibleItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibleItems:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([] as TsNavigationItem[])\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:187\n                            \n                        \n\n                \n                    \n                        The collection of visible navigation items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visibleItemsList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibleItemsList:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:230\n                            \n                        \n\n                \n                    \n                        Element reference for visible list items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visibleLinkElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibleLinkElement:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:236\n                            \n                        \n\n                \n                    \n                        Query list of all elements from the visible items list\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        availableSpace\n                    \n                \n\n                \n                    \n                        getavailableSpace()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:156\n                                \n                            \n                    \n                        \n                                Getter to return the available navigation width\n\n\n                                \n                                \n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        usersFullName\n                    \n                \n\n                \n                    \n                        getusersFullName()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:177\n                                \n                            \n                    \n                        \n                                Getter to return the user's full name if it exists\n\n\n                                \n                                \n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        visibleItemsLength\n                    \n                \n\n                \n                    \n                        getvisibleItemsLength()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:194\n                                \n                            \n                    \n                        \n                                Getter to return the count of visible items\n\n\n                                \n                                \n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n\n\n                \n                    \n                        setitems(value: [])\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:202\n                                \n                            \n                    \n                        \n                                Accept the array of navigation items and trigger setup\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n      \n        \n          {{ item.name }}\n        \n      \n\n      \n        \n          {{ item.name }}\n        \n      \n\n      \n        \n          {{ item.name }}\n        \n      \n    \n\n  \n\n\n  \n    \n      {{ welcomeMessage }}\n      ,\n    \n    \n    {{ usersFullName }}\n\n    \n      keyboard_arrow_down\n    \n  \n\n\n\n\n  \n\n    \n      \n        {{ item.name }}\n      \n\n      \n        {{ item.name }}\n      \n    \n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ item.name }}                                      {{ item.name }}                                      {{ item.name }}                                {{ welcomeMessage }}      ,            {{ usersFullName }}          keyboard_arrow_down                          {{ item.name }}                    {{ item.name }}            '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsNavigationLinkItem.html":{"url":"interfaces/TsNavigationLinkItem.html","title":"interface - TsNavigationLinkItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsNavigationLinkItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Link specific keys for an item passed to the TsNavigationComponent\n\n            \n\n            \n                Extends\n            \n            \n                    NavigationItemBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destination\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The destination for items with a 'navigate' action. Single strings are used for external\nlocations while an array of strings are used for routerLinks\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsNavigationModule.html":{"url":"modules/TsNavigationModule.html","title":"module - TsNavigationModule","body":"\n                   \n\n\n\n\n  Modules\n  TsNavigationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsNavigationModule\n\n\n\ncluster_TsNavigationModule_declarations\n\n\n\ncluster_TsNavigationModule_imports\n\n\n\ncluster_TsNavigationModule_exports\n\n\n\n\nTsNavigationComponent\n\nTsNavigationComponent\n\n\n\nTsNavigationModule\n\nTsNavigationModule\n\nTsNavigationModule -->\n\nTsNavigationComponent->TsNavigationModule\n\n\n\n\n\nTsNavigationComponent \n\nTsNavigationComponent \n\nTsNavigationComponent  -->\n\nTsNavigationModule->TsNavigationComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsNavigationModule -->\n\nTsIconModule->TsNavigationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsNavigationComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsNavigationComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsNavigationComponent } from './navigation.component';\n\nexport * from './navigation.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatMenuModule,\n    RouterModule,\n    TsIconModule,\n  ],\n  declarations: [\n    TsNavigationComponent,\n  ],\n  exports: [\n    TsNavigationComponent,\n  ],\n})\nexport class TsNavigationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsNavigationPayload.html":{"url":"interfaces/TsNavigationPayload.html","title":"interface - TsNavigationPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsNavigationPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the expected response from the TsNavigationComponent emitter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The selected item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:     MouseEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MouseEvent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The mouse click event\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsPaginatorMenuItem.html":{"url":"interfaces/TsPaginatorMenuItem.html","title":"interface - TsPaginatorMenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsPaginatorMenuItem\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/paginator/paginator.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the allowed keys and types for an item passed to the TsMenuComponent within a\nTsPaginatorComponent\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The menu item name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A value for the item\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        Paginator\n\n\n\n\nTable of Contents\n\nBasic usage\nEvents\nCurrent page\nZero or One based pagination\nRecord count too high\nMax records\nRecord count message\n\n\nRecords per page\n\n\nBasic usage\nFor the most minimal implementation, just pass in the total record count:\nEvents\nThe paginator will emit the current page each time the page is changed or the records-per-page count\nis changed:\nmySelectFunc(v: TsPaginatorMenuItem) {\n  // v:\n  // {\n  //   name: \"1 - 10\",\n  //   value: 1,\n  // }\n}\n\nmyChangeFunc(v: number) {\n  // v: 50\n}Current page\nSet the current page:\nZero or One based pagination\nBy default the paginator starts the pages array with a value of '0'. If your API starts it's\npagination at 1 (such as Rails) you can set isZeroBased to false:\n\n\n\n\nRecord count too high\nThe paginator will display a message if too many records are found. This is to encourage better\nfiltering rather than more time paging through results.\nMax records\nBy default, anything over 100 is considered too many. To change this value, pass in a number to\nmaxPreferredRecords:\nRecord count message\nA custom message may be defined:\nA custom message template can also be defined. This allows dynamic links to documentation, help or a\nbetter set of filters.\n\n\n\n\n  {{ message }}\nRecords per page\nDefine the choices for how many records can be displayed on a single 'page':\nThis menu can be disabled completely if desired:\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  AfterViewInit,\n  TemplateRef,\n  ElementRef,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {\n  coerceNumberProperty,\n  coerceBooleanProperty,\n} from '@terminus/ngx-tools/coercion';\nimport { inputHasChanged } from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsMenuComponent} within a\n * {@link TsPaginatorComponent}\n */\nexport interface TsPaginatorMenuItem {\n  /**\n   * The menu item name\n   */\n  name: string;\n\n  /**\n   * A value for the item\n   */\n  value?: number;\n}\n\n\n/**\n * A paginator component\n *\n * #### QA CSS CLASSES\n * - `qa-paginator`: Placed on the primary container\n * - `qa-paginator-per-page-select`: Placed on the results per page select menu\n * - `qa-paginator-first-page-button`: Placed on the 'first page' button\n * - `qa-paginator-previous-page-button`: Placed on the 'previous page' button\n * - `qa-paginator-current-page-menu`: Placed on the 'current page' menu dropdown\n * - `qa-paginator-next-page-button`: Placed on the 'next page' button\n * - `qa-paginator-last-page-button`: Placed on the the 'last page' button\n * - `qa-paginator-message`: Placed on the messaging regarding the record count being too high\n *\n * @example\n * \n *\n * \n *   {{ message }}\n *   Learn more\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-paginator',\n  templateUrl: './paginator.component.html',\n  styleUrls: ['./paginator.component.scss'],\n  host: {\n    class: 'ts-paginator',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsPaginator',\n})\nexport class TsPaginatorComponent implements OnChanges, AfterViewInit {\n  /**\n   * Define the default count of records per page\n   */\n  private DEFAULT_PER_PAGE: number = 10;\n\n  /**\n   * Default max records before message is shown\n   */\n  private DEFAULT_MAX_PREFERED_RECORDS: number = 100;\n\n  /**\n   * Define the default options for the records per page select menu\n   */\n  private DEFAULT_RECORDS_PER_PAGE_OPTIONS: number[] = [10, 20, 50];\n\n  /**\n   * Define the default message to show when too many records are returned\n   */\n  private DEFAULT_HIGH_RECORD_MESSAGE: string = 'That\\'s a lot of results! ' +\n    'Try refining your filters for better results.';\n\n  /**\n   * Define the icon for the 'first page' button\n   */\n  public firstPageIcon: string = 'first_page';\n\n  /**\n   * Define the icon for the 'previous page' button\n   */\n  public previousPageIcon: string = 'keyboard_arrow_left';\n\n  /**\n   * Define the icon for the 'next page' button\n   */\n  public nextPageIcon: string = 'keyboard_arrow_right';\n\n  /**\n   * Define the icon for the 'last page' button\n   */\n  public lastPageIcon: string = 'last_page';\n\n  /**\n   * Store the array of objects that represent pages of collections\n   */\n  public pagesArray!: TsPaginatorMenuItem[];\n\n  /**\n   * Store the label for the current page\n   */\n  public currentPageLabel!: string;\n\n  /**\n   * Define the amount of records show per page\n   */\n  public recordsPerPage: number = this.DEFAULT_PER_PAGE;\n\n  /**\n   * Define the template context for the record count message\n   */\n  public templateContext = {\n    $implicit: this.DEFAULT_HIGH_RECORD_MESSAGE,\n  };\n\n  /**\n   * Define if the paging is 0-based or 1-based\n   */\n  @Input()\n  public set isZeroBased(v: boolean) {\n    this._isZeroBased = coerceBooleanProperty(v);\n  }\n  public get isZeroBased(): boolean {\n    return this._isZeroBased;\n  }\n  private _isZeroBased: boolean = true;\n\n  /**\n   * Define the tooltip message for the first page tooltip\n   */\n  @Input()\n  public firstPageTooltip: string = 'View the first results';\n\n  /**\n   * Define the tooltip message for the previous page tooltip\n   */\n  @Input()\n  public previousPageTooltip: string = 'View the previous results';\n\n  /**\n   * Define the tooltip message for the next page tooltip\n   */\n  @Input()\n  public nextPageTooltip: string = 'View the next results';\n\n  /**\n   * Define the tooltip message for the last page tooltip\n   */\n  @Input()\n  public lastPageTooltip: string = 'View the last results';\n\n  /**\n   * Define the current page\n   */\n  @Input()\n  public set currentPageIndex(page: number) {\n    this._currentPageIndex = coerceNumberProperty(page);\n  }\n  public get currentPageIndex(): number {\n    return this._currentPageIndex;\n  }\n  private _currentPageIndex: number = 0;\n\n  /**\n   * Define how many pages exist to show a prompt about better filtering\n   */\n  @Input()\n  public maxPreferredRecords: number = this.DEFAULT_MAX_PREFERED_RECORDS;\n\n  /**\n   * Define the menu location (open up or open down)\n   */\n  @Input()\n  public menuLocation: 'above' | 'below' = 'above';\n\n  /**\n   * Allow a custom template to be used for the paginator message\n   */\n  @Input()\n  public paginatorMessageTemplate!: TemplateRef;\n\n  /**\n   * Define the color theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'accent';\n\n  /**\n   * Define the total number of records\n   */\n  @Input()\n  public set totalRecords(records: number) {\n    this._totalRecords = coerceNumberProperty(records);\n  }\n  public get totalRecords(): number {\n    return this._totalRecords;\n  }\n  private _totalRecords: number = 0;\n\n  /**\n   * Define the message to show when too many pages exist\n   */\n  @Input()\n  public recordCountTooHighMessage: string = this.DEFAULT_HIGH_RECORD_MESSAGE;\n\n  /**\n   * Define how many records are shown per page\n   */\n  @Input()\n  public recordsPerPageChoices: number[] = this.DEFAULT_RECORDS_PER_PAGE_OPTIONS;\n\n  /**\n   * Define the label for the records per page select\n   */\n  @Input()\n  public recordsSelectLabel: string = 'Per page';\n\n  /**\n   * Define if the records per page select menu should be visible\n   */\n  @Input()\n  public showRecordsPerPageSelector: boolean = true;\n\n  /**\n   * Emit a page selected event\n   */\n  @Output()\n  public pageSelect: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit a change event when the records per page changes\n   */\n  @Output()\n  public recordsPerPageChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Getter to return the index of the first page\n   */\n  public get firstPageIndex(): number {\n    return this.isZeroBased ? 0 : 1;\n  }\n\n  /**\n   * Getter to return the index of the next page\n   */\n  public get nextPageIndex(): number {\n    return this.currentPageIndex - this.firstPageIndex;\n  }\n\n  /**\n   * Getter to return the index of the last page\n   */\n  public get lastPageIndex(): number {\n    return this.isZeroBased ? (this.pagesArray.length - 1) : this.pagesArray.length ;\n  }\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Initialize on init\n   */\n  public ngAfterViewInit(): void {\n    this.initialize();\n  }\n\n\n  /**\n   * Initialize on any changes\n   *\n   * @param changes - The object containing all changes since last cycle\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    // If the record count changed, assign the new value to the template context\n    // istanbul ignore else\n    if (inputHasChanged(changes, 'recordCountTooHighMessage')) {\n      this.templateContext.$implicit = this.recordCountTooHighMessage;\n    }\n\n    // If the zeroBased input changes, update the current page index\n    if (inputHasChanged(changes, 'isZeroBased')) {\n      this.currentPageIndex = changes.isZeroBased.currentValue ? 0 : 1;\n    }\n\n    this.initialize();\n  }\n\n\n  /**\n   * Set up initial resources\n   */\n   private initialize(): void {\n     this.pagesArray =\n       this.createPagesArray(this.totalRecords, this.recordsPerPage, this.isZeroBased);\n     this.currentPageLabel =\n       this.createCurrentPageLabel(this.currentPageIndex, this.pagesArray, this.totalRecords);\n\n     // Change to the current page\n     // istanbul ignore else\n     if (this.totalRecords > 0) {\n       this.changePage(this.currentPageIndex, -1, this.pagesArray);\n     }\n   }\n\n\n  /**\n   * Perform tasks when the current page is changed\n   *\n   * @param page - The selected page\n   */\n  public currentPageChanged(page: TsPaginatorMenuItem): void {\n    // Set the current page\n    this.currentPageIndex = coerceNumberProperty(page.value);\n\n    // Create a new label for the menu\n    this.currentPageLabel =\n      this.createCurrentPageLabel(this.currentPageIndex, this.pagesArray, this.totalRecords);\n\n    // Emit an event\n    this.pageSelect.emit(page);\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Manually trigger a page change event from a number\n   *\n   * @param destinationPage - The selected page number\n   * @param currentPage - The current page number\n   * @param pages - The collection of pages\n   */\n  public changePage(\n    destinationPage: number,\n    currentPage: number,\n    pages: TsPaginatorMenuItem[],\n  ): void {\n    const destinationIsValid: boolean = destinationPage >= this.firstPageIndex && destinationPage  {\n        return page.value === destinationPage;\n      });\n\n      // istanbul ignore else\n      if (foundPage) {\n        this.currentPageChanged(foundPage);\n      }\n    }\n  }\n\n\n  /**\n   * Check if a page is the first page\n   *\n   * @param page - The number of the current page\n   * @return A boolean representing if this is the first page\n   */\n  public isFirstPage(page: number): boolean {\n    return coerceNumberProperty(page) === this.firstPageIndex;\n  }\n\n\n  /**\n   * Check if a page is the last page\n   *\n   * @param page - The number of the current page\n   * @return A boolean representing if this is the last page\n   */\n  public isLastPage(page: number): boolean {\n    if (this.pagesArray) {\n      return page === (this.pagesArray.length - (this.isZeroBased ? 1 : 0));\n    } else {\n      return false;\n    }\n  }\n\n\n  /**\n   * Determine if the string exists\n   *\n   * @param message - The help message when too many results are returned\n   * @param max - The max number of records before the message should be shown\n   * @param totalRecords - The number of records\n   * @return A boolean representing if the message should be shown\n   */\n  public shouldShowRecordsMessage(message: string, max: number, totalRecords: number): boolean {\n    if (totalRecords > max) {\n      return (message && message.length > 0) ? true : false;\n    } else {\n      return false;\n    }\n  }\n\n\n  /**\n   * Re-initialize the paginator when records per page changes\n   *\n   * @param selection - The selected records-per-page count\n   */\n  public recordsPerPageUpdated(selection: number): void {\n    this.recordsPerPage = selection;\n    this.currentPageIndex = this.firstPageIndex;\n    this.recordsPerPageChange.emit(selection);\n\n    this.initialize();\n  }\n\n\n  /**\n   * Determine if the page select menu should be disabled\n   *\n   * @param pagesCount - The number of pages\n   * @return A boolean representing if the menu should be disabled\n   */\n  public menuIsDisabled(pagesCount: number): boolean {\n    return coerceNumberProperty(pagesCount)  {\n      return pages.find((page: TsPaginatorMenuItem): boolean => {\n        return page.value === index;\n      });\n    };\n\n    let foundPage: TsPaginatorMenuItem | undefined = findPage(pages, currentPage);\n\n    // If no found page, try the previous page\n    if (!foundPage) {\n      foundPage = findPage(pages, currentPage - 1);\n\n      // istanbul ignore else\n      if (foundPage) {\n        // If we found the previous page,\n        // save the current page change back to the primary variable\n        this.currentPageIndex -= 1;\n      }\n    }\n\n    // This may be the case if there are no records\n    if (!foundPage || !foundPage.name) {\n      foundPage = {\n        name: '0',\n      };\n    }\n\n    // '1 - 10 of 243'\n    return `${foundPage.name} of ${totalRecords}`;\n  }\n\n\n  /**\n   * Create an array containing objects that represent each available page of records\n   *\n   * @param total - The total records remaining\n   * @param perPage - How many records are shown per page\n   * @param zeroBased - If the pages are based on a `0` index rather than `1`\n   * @return The array representing all possible pages of records\n   */\n  private createPagesArray(total: number, perPage: number, zeroBased: boolean): TsPaginatorMenuItem[] {\n    const paginatorArray: TsPaginatorMenuItem[] = [];\n    let recordsRemaining = total;\n    let page = zeroBased ? 0 : 1;\n\n    // If there are no records just return an empty array\n    if (!recordsRemaining || recordsRemaining = perPage) {\n      // We are creating the text for the range here so we are dealing with records based on 1\n      // (while the pages themselves may be based on 0 or 1)\n      const pageNumber = (page = perPage) {\n        page = pageValue + 1;\n      }\n\n    }\n\n    // If any records remain, add the partial group as the last page in the array\n    if (recordsRemaining > 0) {\n      let name;\n      let value;\n      const pageNumber = (page  0) {\n        name = `${pageNumber * perPage + 1} - ${pageNumber * perPage + recordsRemaining}`;\n        value = (pageValue - (zeroBased ? 1 : 0));\n      } else {\n        name = `${pageNumber} - ${recordsRemaining}`;\n        value = (pageValue - (zeroBased ? 1 : 0));\n      }\n\n      paginatorArray.push({\n        name: name,\n        value: value,\n      });\n    }\n\n    return paginatorArray.sort((a: TsPaginatorMenuItem, b: TsPaginatorMenuItem): number => {\n      const first: number = coerceNumberProperty(a.value);\n      const second: number = coerceNumberProperty(b.value);\n\n      return (first \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsPaginatorModule.html":{"url":"modules/TsPaginatorModule.html","title":"module - TsPaginatorModule","body":"\n                   \n\n\n\n\n  Modules\n  TsPaginatorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsPaginatorModule\n\n\n\ncluster_TsPaginatorModule_declarations\n\n\n\ncluster_TsPaginatorModule_imports\n\n\n\ncluster_TsPaginatorModule_exports\n\n\n\n\nTsPaginatorComponent\n\nTsPaginatorComponent\n\n\n\nTsPaginatorModule\n\nTsPaginatorModule\n\nTsPaginatorModule -->\n\nTsPaginatorComponent->TsPaginatorModule\n\n\n\n\n\nTsPaginatorComponent \n\nTsPaginatorComponent \n\nTsPaginatorComponent  -->\n\nTsPaginatorModule->TsPaginatorComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsPaginatorModule -->\n\nTsButtonModule->TsPaginatorModule\n\n\n\n\n\nTsMenuModule\n\nTsMenuModule\n\nTsPaginatorModule -->\n\nTsMenuModule->TsPaginatorModule\n\n\n\n\n\nTsSelectModule\n\nTsSelectModule\n\nTsPaginatorModule -->\n\nTsSelectModule->TsPaginatorModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsPaginatorModule -->\n\nTsTooltipModule->TsPaginatorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/paginator/paginator.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsPaginatorComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsMenuModule\n                            \n                            \n                                    TsSelectModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsPaginatorComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TsButtonModule } from './../button/button.module';\nimport { TsSelectModule } from './../select/select.module';\nimport { TsMenuModule } from './../menu/menu.module';\nimport { TsTooltipModule } from './../tooltip/tooltip.module';\nimport { TsPaginatorComponent } from './paginator.component';\n\nexport * from './paginator.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    TsButtonModule,\n    TsSelectModule,\n    TsMenuModule,\n    TsTooltipModule,\n  ],\n  exports: [\n    TsPaginatorComponent,\n  ],\n  declarations: [\n    TsPaginatorComponent,\n  ],\n})\nexport class TsPaginatorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsPipesModule.html":{"url":"modules/TsPipesModule.html","title":"module - TsPipesModule","body":"\n                   \n\n\n\n\n  Modules\n  TsPipesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsPipesModule\n\n\n\ncluster_TsPipesModule_declarations\n\n\n\ncluster_TsPipesModule_exports\n\n\n\n\nTsDatePipe\n\nTsDatePipe\n\n\n\nTsPipesModule\n\nTsPipesModule\n\nTsPipesModule -->\n\nTsDatePipe->TsPipesModule\n\n\n\n\n\nTsRoundNumberPipe\n\nTsRoundNumberPipe\n\nTsPipesModule -->\n\nTsRoundNumberPipe->TsPipesModule\n\n\n\n\n\nTsSentenceCasePipe\n\nTsSentenceCasePipe\n\nTsPipesModule -->\n\nTsSentenceCasePipe->TsPipesModule\n\n\n\n\n\nTsTimeAgoPipe\n\nTsTimeAgoPipe\n\nTsPipesModule -->\n\nTsTimeAgoPipe->TsPipesModule\n\n\n\n\n\nTsTitleCasePipe\n\nTsTitleCasePipe\n\nTsPipesModule -->\n\nTsTitleCasePipe->TsPipesModule\n\n\n\n\n\nTsDatePipe \n\nTsDatePipe \n\nTsDatePipe  -->\n\nTsPipesModule->TsDatePipe \n\n\n\n\n\nTsRoundNumberPipe \n\nTsRoundNumberPipe \n\nTsRoundNumberPipe  -->\n\nTsPipesModule->TsRoundNumberPipe \n\n\n\n\n\nTsSentenceCasePipe \n\nTsSentenceCasePipe \n\nTsSentenceCasePipe  -->\n\nTsPipesModule->TsSentenceCasePipe \n\n\n\n\n\nTsTimeAgoPipe \n\nTsTimeAgoPipe \n\nTsTimeAgoPipe  -->\n\nTsPipesModule->TsTimeAgoPipe \n\n\n\n\n\nTsTitleCasePipe \n\nTsTitleCasePipe \n\nTsTitleCasePipe  -->\n\nTsPipesModule->TsTitleCasePipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/pipes.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsDatePipe\n                            \n                            \n                                TsRoundNumberPipe\n                            \n                            \n                                TsSentenceCasePipe\n                            \n                            \n                                TsTimeAgoPipe\n                            \n                            \n                                TsTitleCasePipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsDatePipe\n                            \n                            \n                                    TsRoundNumberPipe\n                            \n                            \n                                    TsSentenceCasePipe\n                            \n                            \n                                    TsTimeAgoPipe\n                            \n                            \n                                    TsTitleCasePipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsDatePipe } from './date/date.pipe';\nimport { TsRoundNumberPipe } from './round-number/round-number.pipe';\nimport { TsSentenceCasePipe } from './sentence-case/sentence-case.pipe';\nimport { TsTimeAgoPipe } from './time-ago/time-ago.pipe';\nimport { TsTitleCasePipe } from './title-case/title-case.pipe';\n\nexport * from './date/date.pipe';\nexport * from './round-number/round-number.pipe';\nexport * from './sentence-case/sentence-case.pipe';\nexport * from './time-ago/time-ago.pipe';\nexport * from './title-case/title-case.pipe';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    TsDatePipe,\n    TsRoundNumberPipe,\n    TsSentenceCasePipe,\n    TsTimeAgoPipe,\n    TsTitleCasePipe,\n  ],\n  providers: [\n    TsDatePipe,\n    TsRoundNumberPipe,\n    TsSentenceCasePipe,\n    TsTimeAgoPipe,\n    TsTitleCasePipe,\n  ],\n  declarations: [\n    TsDatePipe,\n    TsRoundNumberPipe,\n    TsSentenceCasePipe,\n    TsTimeAgoPipe,\n    TsTitleCasePipe,\n  ],\n})\nexport class TsPipesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsRadioChange.html":{"url":"classes/TsRadioChange.html","title":"class - TsRadioChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsRadioChange\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/radio-group/radio-group.component.ts\n        \n\n            \n                Description\n            \n            \n                Expose the MatRadioChange event as TsRadioChange. Used by TsRadioGroupComponent\n\n            \n\n            \n                Extends\n            \n            \n                    MatRadioChange\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        Radio Group\n\n\n\n\nTable of Contents\n\nBasic usage\nSub-labels\nEvent driven\nRequired\nDisabled\nDisabled option\n\n\nVisual mode\nCustom content\n\n\n\n\nBasic usage\nPass in:\n\nan array of items\na form control\na formatter function to determine the UI display value\na formatter function to determine the model value\n\n\n  \n\n  Submit\n// Define items to be passed to the radio group\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n    bing: 'Some helper text for my item',\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    bing: 'Some helper text for my item',\n    disabled: true,\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n    bing: 'Some helper text for my item',\n  },\n]);\n\n// Create a form\nmyForm = this.formBuilder.group({\n  myRadioGroup: [null],\n});\n\n// Use the 'bar' value as the UI display\nuiFormatter = (v) => v.bar;\n// use the 'foo' value to save to the model\nmodelFormatter = (v) => v.foo;\nNOTE: Since we can set the default value in the form control, we no longer need to add the\nchecked property to any or our items.\n\nSub-labels\nPassing a formatter function to formatUISubLabelFn will enable sub-label support:\n// Use the 'bing' value as a sub-label\nuiSubFormatter = (v) => v.bing;\n// Use the 'bar' value as the UI display\nuiFormatter = (v) => v.bar;\n// use the 'foo' value to save to the model\nmodelFormatter = (v) => v.foo;Event driven\nListen for change events:\nRequired\nTo define the radio group as 'required', set the required validator on the form group:\nmyForm = this.formBuilder.group({\n  myRadioGroup: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n});Disabled\nTo disable the entire radio group, set isDisabled to true:\nDisabled option\nTo disabled only a single option, define the disabled key on the item object:\n// Define items to be passed to the radio group\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    disabled: true, // This radio option will be disabled\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n  },\n]);Visual mode\nVisual mode displays radio options as large clickable areas containing content.\nEnable by setting the isVisual flag:\nCustom content\nTsRadioOption now accepts an optional template key with a string template:\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n    template: `My link!`\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    // if no template is defined, it will fall back to `formatUILabelFn` for the display value\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n    template: `Hi! Here is a thing!`\n  },\n]);\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatRadioChange } from '@angular/material/radio';\nimport {\n  isFunction,\n  hasRequiredControl,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Define the allowed keys for an item passed to the {@link TsRadioComponent}\n */\nexport interface TsRadioOption {\n  [key: string]: any;\n\n  /**\n   * Define if the item is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Define the template for the content (used if type is visual)\n   */\n  template?: string;\n}\n\n\n/**\n * Expose the MatRadioChange event as TsRadioChange. Used by {@link TsRadioGroupComponent}\n */\nexport class TsRadioChange extends MatRadioChange {}\n\n\n/**\n * Expose the formatter function type used by {@link TsRadioGroupComponent}\n */\nexport type TsRadioFormatFn = (v: any) => string;\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsRadioGroupComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the radio UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-radio-group`: The primary container\n * - `qa-radio-control`: An individual radio control\n * - `qa-radio-validation-messages`: The validation messages container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-radio-group',\n  templateUrl: './radio-group.component.html',\n  styleUrls: ['./radio-group.component.scss'],\n  host: {\n    class: 'ts-radio-group',\n  },\n  providers: [CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRadioGroup',\n})\nexport class TsRadioGroupComponent extends TsReactiveFormBaseComponent implements OnInit, OnDestroy {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-radio-group-${nextUniqueId++}`;\n\n  /**\n   * Define the ripple color.\n   * TODO: abstract out to a service or utility function or set as a global default for ripples\n   */\n  public rippleColor: string = 'rgba(0, 83, 138, .1)';\n\n  // NOTE: Since we are matching standard HTML attributes, we will rename for internal use.\n  // tslint:disable: no-input-rename\n  /**\n   * Used to set the 'aria-label' attribute on the underlying input element.\n   */\n  @Input('aria-label')\n  public ariaLabel: string | undefined;\n\n  /**\n   * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n   */\n  @Input('aria-labelledby')\n  public ariaLabelledby: string | undefined;\n\n  /**\n   * The 'aria-describedby' attribute is read after the element's label and field type.\n   */\n  @Input('aria-describedby')\n  public ariaDescribedby: string | undefined;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatUILabelFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatUILabelFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatUILabelFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatUILabelFn(): TsRadioFormatFn {\n    return this._formatUILabelFn;\n  }\n  private _formatUILabelFn!: TsRadioFormatFn;\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatUISubLabelFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatUISubLabelFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatUISubLabelFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatUISubLabelFn(): TsRadioFormatFn {\n    return this._formatUISubLabelFn;\n  }\n  private _formatUISubLabelFn!: TsRadioFormatFn;\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatModelValueFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatModelValueFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatModelValueFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatModelValueFn(): TsRadioFormatFn {\n    return this._formatModelValueFn;\n  }\n  private _formatModelValueFn!: TsRadioFormatFn;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the radio group is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the radio group is visual (boxes) or standard (text)\n   */\n  @Input()\n  public set isVisual(value: boolean) {\n    this._isVisual = coerceBooleanProperty(value);\n  }\n  public get isVisual(): boolean {\n    return this._isVisual;\n  }\n  private _isVisual: boolean = false;\n\n  /**\n   * Define a label for the radio group\n   */\n  @Input()\n  public label!: string;\n\n  /**\n   * The HTML name attribute applied to radio buttons in this group.\n   */\n  @Input()\n  public set name(value: string) {\n    this._name = value ? value : this._uid;\n  }\n  public get name(): string {\n    return this._name;\n  }\n  private _name: string = this._uid;\n\n  /**\n   * Accept an array of radio options in the {@link TsRadioOption} format\n   */\n  @Input()\n  public set options(value: TsRadioOption[]) {\n    if (!value) {\n      return;\n    }\n\n    this._options = value;\n  }\n  public get options(): TsRadioOption[] {\n    return this._options;\n  }\n  private _options!: TsRadioOption[];\n\n  /**\n   * Define if the visual style should be large or small\n   */\n  @Input()\n  public set small(value: boolean) {\n    this._small = coerceBooleanProperty(value);\n  }\n  public get small(): boolean {\n    return this._small;\n  }\n  private _small: boolean = false;\n\n  /**\n   * Define the theme. {@link TsStyleThemeTypes}\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit event when a selection occurs. {@link TsRadioChange}\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n\n  /**\n   * Getter to determine if the group is required\n   */\n  get isRequired(): boolean {\n    return hasRequiredControl(this.formControl);\n  }\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    public domSanitizer: DomSanitizer,\n  ) {\n    super();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Update the change detector if the control value changes\n   */\n  public ngOnInit(): void {\n    // istanbul ignore else\n    if (this.formControl) {\n      this.formControl.valueChanges\n        .pipe(\n          untilComponentDestroyed(this),\n        )\n        .subscribe((v: any) => {\n          this.writeValue(v);\n          this.changeDetectorRef.markForCheck();\n        });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Retrieve a value determined by the passed in formatter\n   *\n   * @param option - The radio option\n   * @param formatter - The formatter function used to retrieve the value\n   * @return The retrieved value\n   */\n  public retrieveValue(option: TsRadioOption, formatter?: TsRadioFormatFn): TsRadioOption | string {\n    return (formatter && formatter(option)) ? formatter(option) : option;\n  }\n\n\n  /**\n   * Handle clicks on labels\n   *\n   * @param option - The selected option\n   */\n  public labelClick(option: TsRadioOption): void {\n    if (this.isDisabled || (option && option.disabled)) {\n      return;\n    }\n    const value = this.retrieveValue(option, this.formatModelValueFn);\n    this.value = value;\n    this.changeDetectorRef.markForCheck();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsRadioGroupModule.html":{"url":"modules/TsRadioGroupModule.html","title":"module - TsRadioGroupModule","body":"\n                   \n\n\n\n\n  Modules\n  TsRadioGroupModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsRadioGroupModule\n\n\n\ncluster_TsRadioGroupModule_declarations\n\n\n\ncluster_TsRadioGroupModule_TsRadioGroupComponent_providers\n\n\n\ncluster_TsRadioGroupModule_imports\n\n\n\ncluster_TsRadioGroupModule_exports\n\n\n\n\nTsRadioGroupComponent\n\nTsRadioGroupComponent\n\n\n\nTsRadioGroupModule\n\nTsRadioGroupModule\n\nTsRadioGroupModule -->\n\nTsRadioGroupComponent->TsRadioGroupModule\n\n\n\n\n\nTsRadioGroupComponent \n\nTsRadioGroupComponent \n\nTsRadioGroupComponent  -->\n\nTsRadioGroupModule->TsRadioGroupComponent \n\n\n\n\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n\nTsRadioGroupComponent -->\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR->TsRadioGroupComponent\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsRadioGroupModule -->\n\nTsIconModule->TsRadioGroupModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsRadioGroupModule -->\n\nTsValidationMessagesModule->TsRadioGroupModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/radio-group/radio-group.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsRadioGroupComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsRadioGroupComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsRadioGroupComponent } from './radio-group.component';\n\nexport * from './radio-group.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatRadioModule,\n    FlexLayoutModule,\n    TsValidationMessagesModule,\n    MatRippleModule,\n    TsIconModule,\n  ],\n  exports: [\n    TsRadioGroupComponent,\n  ],\n  declarations: [\n    TsRadioGroupComponent,\n  ],\n})\nexport class TsRadioGroupModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsRadioOption.html":{"url":"interfaces/TsRadioOption.html","title":"interface - TsRadioOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsRadioOption\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/radio-group/radio-group.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the allowed keys for an item passed to the {@link TsRadioComponent}\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        template\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/radio-group/radio-group.component.ts:31\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define if the item is disabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                    \n                                \n                                \n                                    \n                                        template:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define the template for the content (used if type is visual)\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        Radio Group\n\n\n\n\nTable of Contents\n\nBasic usage\nSub-labels\nEvent driven\nRequired\nDisabled\nDisabled option\n\n\nVisual mode\nCustom content\n\n\n\n\nBasic usage\nPass in:\n\nan array of items\na form control\na formatter function to determine the UI display value\na formatter function to determine the model value\n\n\n  \n\n  Submit\n// Define items to be passed to the radio group\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n    bing: 'Some helper text for my item',\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    bing: 'Some helper text for my item',\n    disabled: true,\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n    bing: 'Some helper text for my item',\n  },\n]);\n\n// Create a form\nmyForm = this.formBuilder.group({\n  myRadioGroup: [null],\n});\n\n// Use the 'bar' value as the UI display\nuiFormatter = (v) => v.bar;\n// use the 'foo' value to save to the model\nmodelFormatter = (v) => v.foo;\nNOTE: Since we can set the default value in the form control, we no longer need to add the\nchecked property to any or our items.\n\nSub-labels\nPassing a formatter function to formatUISubLabelFn will enable sub-label support:\n// Use the 'bing' value as a sub-label\nuiSubFormatter = (v) => v.bing;\n// Use the 'bar' value as the UI display\nuiFormatter = (v) => v.bar;\n// use the 'foo' value to save to the model\nmodelFormatter = (v) => v.foo;Event driven\nListen for change events:\nRequired\nTo define the radio group as 'required', set the required validator on the form group:\nmyForm = this.formBuilder.group({\n  myRadioGroup: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n});Disabled\nTo disable the entire radio group, set isDisabled to true:\nDisabled option\nTo disabled only a single option, define the disabled key on the item object:\n// Define items to be passed to the radio group\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    disabled: true, // This radio option will be disabled\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n  },\n]);Visual mode\nVisual mode displays radio options as large clickable areas containing content.\nEnable by setting the isVisual flag:\nCustom content\nTsRadioOption now accepts an optional template key with a string template:\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n    template: `My link!`\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    // if no template is defined, it will fall back to `formatUILabelFn` for the display value\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n    template: `Hi! Here is a thing!`\n  },\n]);\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatRadioChange } from '@angular/material/radio';\nimport {\n  isFunction,\n  hasRequiredControl,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Define the allowed keys for an item passed to the {@link TsRadioComponent}\n */\nexport interface TsRadioOption {\n  [key: string]: any;\n\n  /**\n   * Define if the item is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Define the template for the content (used if type is visual)\n   */\n  template?: string;\n}\n\n\n/**\n * Expose the MatRadioChange event as TsRadioChange. Used by {@link TsRadioGroupComponent}\n */\nexport class TsRadioChange extends MatRadioChange {}\n\n\n/**\n * Expose the formatter function type used by {@link TsRadioGroupComponent}\n */\nexport type TsRadioFormatFn = (v: any) => string;\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsRadioGroupComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the radio UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-radio-group`: The primary container\n * - `qa-radio-control`: An individual radio control\n * - `qa-radio-validation-messages`: The validation messages container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-radio-group',\n  templateUrl: './radio-group.component.html',\n  styleUrls: ['./radio-group.component.scss'],\n  host: {\n    class: 'ts-radio-group',\n  },\n  providers: [CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRadioGroup',\n})\nexport class TsRadioGroupComponent extends TsReactiveFormBaseComponent implements OnInit, OnDestroy {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-radio-group-${nextUniqueId++}`;\n\n  /**\n   * Define the ripple color.\n   * TODO: abstract out to a service or utility function or set as a global default for ripples\n   */\n  public rippleColor: string = 'rgba(0, 83, 138, .1)';\n\n  // NOTE: Since we are matching standard HTML attributes, we will rename for internal use.\n  // tslint:disable: no-input-rename\n  /**\n   * Used to set the 'aria-label' attribute on the underlying input element.\n   */\n  @Input('aria-label')\n  public ariaLabel: string | undefined;\n\n  /**\n   * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n   */\n  @Input('aria-labelledby')\n  public ariaLabelledby: string | undefined;\n\n  /**\n   * The 'aria-describedby' attribute is read after the element's label and field type.\n   */\n  @Input('aria-describedby')\n  public ariaDescribedby: string | undefined;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatUILabelFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatUILabelFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatUILabelFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatUILabelFn(): TsRadioFormatFn {\n    return this._formatUILabelFn;\n  }\n  private _formatUILabelFn!: TsRadioFormatFn;\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatUISubLabelFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatUISubLabelFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatUISubLabelFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatUISubLabelFn(): TsRadioFormatFn {\n    return this._formatUISubLabelFn;\n  }\n  private _formatUISubLabelFn!: TsRadioFormatFn;\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatModelValueFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatModelValueFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatModelValueFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatModelValueFn(): TsRadioFormatFn {\n    return this._formatModelValueFn;\n  }\n  private _formatModelValueFn!: TsRadioFormatFn;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the radio group is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the radio group is visual (boxes) or standard (text)\n   */\n  @Input()\n  public set isVisual(value: boolean) {\n    this._isVisual = coerceBooleanProperty(value);\n  }\n  public get isVisual(): boolean {\n    return this._isVisual;\n  }\n  private _isVisual: boolean = false;\n\n  /**\n   * Define a label for the radio group\n   */\n  @Input()\n  public label!: string;\n\n  /**\n   * The HTML name attribute applied to radio buttons in this group.\n   */\n  @Input()\n  public set name(value: string) {\n    this._name = value ? value : this._uid;\n  }\n  public get name(): string {\n    return this._name;\n  }\n  private _name: string = this._uid;\n\n  /**\n   * Accept an array of radio options in the {@link TsRadioOption} format\n   */\n  @Input()\n  public set options(value: TsRadioOption[]) {\n    if (!value) {\n      return;\n    }\n\n    this._options = value;\n  }\n  public get options(): TsRadioOption[] {\n    return this._options;\n  }\n  private _options!: TsRadioOption[];\n\n  /**\n   * Define if the visual style should be large or small\n   */\n  @Input()\n  public set small(value: boolean) {\n    this._small = coerceBooleanProperty(value);\n  }\n  public get small(): boolean {\n    return this._small;\n  }\n  private _small: boolean = false;\n\n  /**\n   * Define the theme. {@link TsStyleThemeTypes}\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit event when a selection occurs. {@link TsRadioChange}\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n\n  /**\n   * Getter to determine if the group is required\n   */\n  get isRequired(): boolean {\n    return hasRequiredControl(this.formControl);\n  }\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    public domSanitizer: DomSanitizer,\n  ) {\n    super();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Update the change detector if the control value changes\n   */\n  public ngOnInit(): void {\n    // istanbul ignore else\n    if (this.formControl) {\n      this.formControl.valueChanges\n        .pipe(\n          untilComponentDestroyed(this),\n        )\n        .subscribe((v: any) => {\n          this.writeValue(v);\n          this.changeDetectorRef.markForCheck();\n        });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Retrieve a value determined by the passed in formatter\n   *\n   * @param option - The radio option\n   * @param formatter - The formatter function used to retrieve the value\n   * @return The retrieved value\n   */\n  public retrieveValue(option: TsRadioOption, formatter?: TsRadioFormatFn): TsRadioOption | string {\n    return (formatter && formatter(option)) ? formatter(option) : option;\n  }\n\n\n  /**\n   * Handle clicks on labels\n   *\n   * @param option - The selected option\n   */\n  public labelClick(option: TsRadioOption): void {\n    if (this.isDisabled || (option && option.disabled)) {\n      return;\n    }\n    const value = this.retrieveValue(option, this.formatModelValueFn);\n    this.value = value;\n    this.changeDetectorRef.markForCheck();\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsReactiveFormBaseComponent.html":{"url":"components/TsReactiveFormBaseComponent.html","title":"component - TsReactiveFormBaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsReactiveFormBaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/utilities/reactive-form-base.component.ts\n\n\n    \n        Description\n    \n    \n        This is the base class for all custom reactive form elements.\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    export class TsInputComponent extends TsReactiveFormBaseComponent {}\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ts-dummy-selector\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                innerValue\n                            \n                            \n                                    Protected\n                                onChangeCallback\n                            \n                            \n                                    Protected\n                                onTouchedCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onBlur\n                            \n                            \n                                    Protected\n                                registerOnChange\n                            \n                            \n                                    Protected\n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        Define the form control to get access to validators\n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:42\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onBlur\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onBlur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Set touched on blur\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Register onChange callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Register onTouched callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Write value to inner value (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            innerValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        innerValue:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:26\n                            \n                        \n\n                \n                    \n                        Define the internal data model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onChangeCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onChangeCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:31\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onTouchedCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onTouchedCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:36\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:53\n                                \n                            \n\n                \n                    \n                        setvalue(v: any)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:47\n                                \n                            \n                    \n                        \n                                Set the accessor and call the onchange callback\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { noop } from '@terminus/ngx-tools';\n\n\n/**\n * This is the base class for all custom reactive form elements.\n *\n * @example\n * export class TsInputComponent extends TsReactiveFormBaseComponent {}\n */\n@Component({\n  /*\n   * NOTE: Without this dummy selector, this class isn't picked up by the docs generator\n   */\n  selector: `ts-dummy-selector`,\n  template: ``,\n})\nexport class TsReactiveFormBaseComponent {\n  /**\n   * Define the internal data model\n   */\n  protected innerValue: any = '';\n\n  /**\n   * Define placeholder for callback (provided later by the control value accessor)\n   */\n  protected onChangeCallback: (_: any) => void = noop;\n\n  /**\n   * Define placeholder for callback (provided later by the control value accessor)\n   */\n  protected onTouchedCallback: () => void = noop;\n\n  /**\n   * Define the form control to get access to validators\n   */\n  @Input()\n  public formControl: FormControl = new FormControl();\n\n  /**\n   * Set the accessor and call the onchange callback\n   */\n  public set value(v: any) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n  public get value(): any {\n    return this.innerValue;\n  }\n\n\n  /**\n   * Set touched on blur\n   */\n  public onBlur() {\n    this.onTouchedCallback();\n  }\n\n\n  /**\n   * Register onChange callback (from ControlValueAccessor interface)\n   */\n  protected registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n\n  /**\n   * Register onTouched callback (from ControlValueAccessor interface)\n   */\n  protected registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n\n  /**\n   * Write value to inner value (from ControlValueAccessor interface)\n   */\n  protected writeValue(value: any) {\n    // NOTE: Currently, this 'else' path seems untestable\n    // istanbul ignore else\n    if (value !== this.innerValue) {\n      this.innerValue = value;\n    }\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsReactiveFormBaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsRoundNumberPipe.html":{"url":"pipes/TsRoundNumberPipe.html","title":"pipe - TsRoundNumberPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsRoundNumberPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/round-number/round-number.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsRoundNumber\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: number, precision: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/round-number/round-number.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        precision\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\nimport { roundNumber } from '@terminus/ngx-tools';\n\n\n@Pipe({\n  name: 'tsRoundNumber',\n})\nexport class TsRoundNumberPipe implements PipeTransform {\n  transform(value: number, precision = 0): number | undefined {\n    // Check for null values to avoid issues during data-binding\n    if (!value) {\n      return;\n    }\n\n    return roundNumber(value, precision);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsRowComponent.html":{"url":"components/TsRowComponent.html","title":"component - TsRowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsRowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/table/row.ts\n\n\n    \n        Description\n    \n    \n        Data row template container that contains the cell outlet. Adds the right class and role.\n\n    \n\n    \n        Extends\n    \n    \n            CdkRow\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsRow\n            \n\n            \n                host\n                {}\n            \n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                ts-row\n            \n\n\n\n            \n                template\n                CDK_ROW_TEMPLATE\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Header row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[tsHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: TsHeaderRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why this type of input was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsHeaderRowDef'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n\n/**\n * Data row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[tsRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: TsRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why it was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsRowDefColumns', 'when: tsRowDefWhen'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsRowDefDirective extends CdkRowDef {}\n\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-header-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsHeaderRow',\n  preserveWhitespaces: false,\n})\nexport class TsHeaderRowComponent extends CdkHeaderRow {}\n\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRow',\n  preserveWhitespaces: false,\n})\nexport class TsRowComponent extends CdkRow {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'CDK_ROW_TEMPLATE'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsRowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsRowDefDirective.html":{"url":"directives/TsRowDefDirective.html","title":"directive - TsRowDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsRowDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/row.ts\n        \n\n            \n                Description\n            \n            \n                Data row definition for the TsTableComponent.\nCaptures the header row's template and other row properties such as the columns to display and\na when predicate that describes when this row should be used.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsRowDef]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Header row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[tsHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: TsHeaderRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why this type of input was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsHeaderRowDef'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n\n/**\n * Data row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[tsRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: TsRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why it was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsRowDefColumns', 'when: tsRowDefWhen'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsRowDefDirective extends CdkRowDef {}\n\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-header-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsHeaderRow',\n  preserveWhitespaces: false,\n})\nexport class TsHeaderRowComponent extends CdkHeaderRow {}\n\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRow',\n  preserveWhitespaces: false,\n})\nexport class TsRowComponent extends CdkRow {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsScrollbarPosition.html":{"url":"classes/TsScrollbarPosition.html","title":"class - TsScrollbarPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsScrollbarPosition\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/scrollbars/scrollbars.component.ts\n        \n\n            \n                Description\n            \n            \n                A class that represents the current scrollbar positions\n\n            \n\n            \n                Extends\n            \n            \n                    Position\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        Scrollbars\n\n\n\n\nTable of Contents\n\nBasic usage\nDisable\nUpdate\n\n\nEvents\n\n\nBasic usage\nYou must set a fixed height and/or width to enable scrollbars (otherwise the browser will just continue making the container larger to fit\nthe content).\n\n  ...\nDisable\nThe scrollbars can be disabled dynamically if needed:\n\n  ...\nUpdate\nIf the scrollbars content is dynamically updated, you will need to update the scrollbars instance:\n\n\n  ...\n  ...\n\n  @ViewChild(TsScrollbarsComponent)\n  public scrollbars!: TsScrollbarsComponent;\n\n\n  myUpdate() {\n    // Update the content\n    this.updateScrollContent();\n\n    // Update the scrollbars\n    this.scrollbars.update();\n  }Events\n\n  ...\n\n\n\nAvailable events\n\n\n\n\nscrollDown\n\n\nscrollLeft\n\n\nscrollRight\n\n\nscrollUp\n\n\nscrollX\n\n\nscrollY\n\n\nxReachEnd\n\n\nxReachStart\n\n\nyReachEnd\n\n\nyReachStart\n\n\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n} from '@angular/core';\nimport {\n  Geometry,\n  PerfectScrollbarDirective,\n  Position,\n} from 'ngx-perfect-scrollbar';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\n\n/**\n * Define possible scroll directions for {@link TsScrollbarsScrollDirections}.\n */\nexport type TsScrollbarsScrollDirections\n  = 'any'\n  | 'both'\n  | 'x'\n  | 'y'\n;\n\n\n/**\n * A class that represents the current gemotric state of scrolling.\n */\nexport class TsScrollbarsGeometry extends Geometry {}\n\n\n/**\n * A class that represents the current scrollbar positions\n */\nexport class TsScrollbarPosition extends Position {}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * The scrollbars UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-scrollbars`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-scrollbars',\n  templateUrl: './scrollbars.component.html',\n  styleUrls: [\n    './scrollbars.component.scss',\n    './../../../node_modules/perfect-scrollbar/css/perfect-scrollbar.css',\n  ],\n  host: {\n    class: 'ts-scrollbars',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsScrollbars',\n})\nexport class TsScrollbarsComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-scrollbars-${nextUniqueId++}`;\n\n  /**\n   * Define the speed at which to scroll during automated movements\n   */\n  protected scrollSpeed = 400;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the scrollbars are disabled\n   */\n  @Input()\n  public set isDisabled(value: boolean) {\n    this._isDisabled = coerceBooleanProperty(value);\n  }\n  public get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n  private _isDisabled: boolean = false;\n\n  /**\n   * Access underlying scrollbar directive\n   */\n  @ViewChild(forwardRef(() => PerfectScrollbarDirective))\n  public scrollbar!: PerfectScrollbarDirective;\n\n  /**\n   * Event Emitters:\n   */\n  @Output()\n  public scrollDown: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollLeft: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollRight: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollUp: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollX: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollY: EventEmitter = new EventEmitter();\n\n  @Output()\n  public xReachEnd: EventEmitter = new EventEmitter();\n\n  @Output()\n  public xReachStart: EventEmitter = new EventEmitter();\n\n  @Output()\n  public yReachEnd: EventEmitter = new EventEmitter();\n\n  @Output()\n  public yReachStart: EventEmitter = new EventEmitter();\n\n\n  constructor() {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Return an object containing scrollbar geometry.\n   *\n   * @return An object with all geometry information\n   */\n  public get geometry(): TsScrollbarsGeometry | null {\n    if (this.scrollbar) {\n      return this.scrollbar.geometry('scroll') as TsScrollbarsGeometry;\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Return the current scrollbar position.\n   *\n   * @return The current scrollbar position\n   */\n  public get position(): TsScrollbarPosition | null {\n    if (this.scrollbar) {\n      return this.scrollbar.position() as TsScrollbarPosition;\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Determine if a direction is scrollable. See {@link TsScrollbarsScrollDirections} for all possible options.\n   *\n   * @param direction - The scroll direction to check\n   * @return Whether the direction is currently scrollable\n   */\n  public scrollable(direction: TsScrollbarsScrollDirections = 'any'): boolean | null {\n    if (this.scrollbar) {\n      return this.scrollbar.scrollable(direction);\n    } else {\n      return null;\n    }\n  }\n\n\n  public scrollTo(x: number, y?: number, speed?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollTo(x, y, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to element\n   *\n   * @param queryString - The string to query the DOM for\n   * @param speed - The speed to move at\n   * @param offset - A px offest\n   */\n  public scrollToElement(queryString: string, speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToElement(queryString, offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the bottom\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToBottom(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToBottom(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the left\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToLeft(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToLeft(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the right\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToRight(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToRight(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the top\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToTop(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToTop(offset, speed);\n    }\n  }\n\n\n  /**\n   * Trigger an update on the underlying scrollbar library instance.\n   */\n  public update(): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.update();\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsScrollbarsGeometry.html":{"url":"classes/TsScrollbarsGeometry.html","title":"class - TsScrollbarsGeometry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsScrollbarsGeometry\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/scrollbars/scrollbars.component.ts\n        \n\n            \n                Description\n            \n            \n                A class that represents the current gemotric state of scrolling.\n\n            \n\n            \n                Extends\n            \n            \n                    Geometry\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        Scrollbars\n\n\n\n\nTable of Contents\n\nBasic usage\nDisable\nUpdate\n\n\nEvents\n\n\nBasic usage\nYou must set a fixed height and/or width to enable scrollbars (otherwise the browser will just continue making the container larger to fit\nthe content).\n\n  ...\nDisable\nThe scrollbars can be disabled dynamically if needed:\n\n  ...\nUpdate\nIf the scrollbars content is dynamically updated, you will need to update the scrollbars instance:\n\n\n  ...\n  ...\n\n  @ViewChild(TsScrollbarsComponent)\n  public scrollbars!: TsScrollbarsComponent;\n\n\n  myUpdate() {\n    // Update the content\n    this.updateScrollContent();\n\n    // Update the scrollbars\n    this.scrollbars.update();\n  }Events\n\n  ...\n\n\n\nAvailable events\n\n\n\n\nscrollDown\n\n\nscrollLeft\n\n\nscrollRight\n\n\nscrollUp\n\n\nscrollX\n\n\nscrollY\n\n\nxReachEnd\n\n\nxReachStart\n\n\nyReachEnd\n\n\nyReachStart\n\n\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n} from '@angular/core';\nimport {\n  Geometry,\n  PerfectScrollbarDirective,\n  Position,\n} from 'ngx-perfect-scrollbar';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\n\n/**\n * Define possible scroll directions for {@link TsScrollbarsScrollDirections}.\n */\nexport type TsScrollbarsScrollDirections\n  = 'any'\n  | 'both'\n  | 'x'\n  | 'y'\n;\n\n\n/**\n * A class that represents the current gemotric state of scrolling.\n */\nexport class TsScrollbarsGeometry extends Geometry {}\n\n\n/**\n * A class that represents the current scrollbar positions\n */\nexport class TsScrollbarPosition extends Position {}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * The scrollbars UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-scrollbars`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-scrollbars',\n  templateUrl: './scrollbars.component.html',\n  styleUrls: [\n    './scrollbars.component.scss',\n    './../../../node_modules/perfect-scrollbar/css/perfect-scrollbar.css',\n  ],\n  host: {\n    class: 'ts-scrollbars',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsScrollbars',\n})\nexport class TsScrollbarsComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-scrollbars-${nextUniqueId++}`;\n\n  /**\n   * Define the speed at which to scroll during automated movements\n   */\n  protected scrollSpeed = 400;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the scrollbars are disabled\n   */\n  @Input()\n  public set isDisabled(value: boolean) {\n    this._isDisabled = coerceBooleanProperty(value);\n  }\n  public get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n  private _isDisabled: boolean = false;\n\n  /**\n   * Access underlying scrollbar directive\n   */\n  @ViewChild(forwardRef(() => PerfectScrollbarDirective))\n  public scrollbar!: PerfectScrollbarDirective;\n\n  /**\n   * Event Emitters:\n   */\n  @Output()\n  public scrollDown: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollLeft: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollRight: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollUp: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollX: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollY: EventEmitter = new EventEmitter();\n\n  @Output()\n  public xReachEnd: EventEmitter = new EventEmitter();\n\n  @Output()\n  public xReachStart: EventEmitter = new EventEmitter();\n\n  @Output()\n  public yReachEnd: EventEmitter = new EventEmitter();\n\n  @Output()\n  public yReachStart: EventEmitter = new EventEmitter();\n\n\n  constructor() {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Return an object containing scrollbar geometry.\n   *\n   * @return An object with all geometry information\n   */\n  public get geometry(): TsScrollbarsGeometry | null {\n    if (this.scrollbar) {\n      return this.scrollbar.geometry('scroll') as TsScrollbarsGeometry;\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Return the current scrollbar position.\n   *\n   * @return The current scrollbar position\n   */\n  public get position(): TsScrollbarPosition | null {\n    if (this.scrollbar) {\n      return this.scrollbar.position() as TsScrollbarPosition;\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Determine if a direction is scrollable. See {@link TsScrollbarsScrollDirections} for all possible options.\n   *\n   * @param direction - The scroll direction to check\n   * @return Whether the direction is currently scrollable\n   */\n  public scrollable(direction: TsScrollbarsScrollDirections = 'any'): boolean | null {\n    if (this.scrollbar) {\n      return this.scrollbar.scrollable(direction);\n    } else {\n      return null;\n    }\n  }\n\n\n  public scrollTo(x: number, y?: number, speed?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollTo(x, y, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to element\n   *\n   * @param queryString - The string to query the DOM for\n   * @param speed - The speed to move at\n   * @param offset - A px offest\n   */\n  public scrollToElement(queryString: string, speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToElement(queryString, offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the bottom\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToBottom(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToBottom(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the left\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToLeft(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToLeft(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the right\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToRight(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToRight(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the top\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToTop(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToTop(offset, speed);\n    }\n  }\n\n\n  /**\n   * Trigger an update on the underlying scrollbar library instance.\n   */\n  public update(): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.update();\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsScrollbarsModule.html":{"url":"modules/TsScrollbarsModule.html","title":"module - TsScrollbarsModule","body":"\n                   \n\n\n\n\n  Modules\n  TsScrollbarsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsScrollbarsModule\n\n\n\ncluster_TsScrollbarsModule_declarations\n\n\n\ncluster_TsScrollbarsModule_exports\n\n\n\n\nTsScrollbarsComponent\n\nTsScrollbarsComponent\n\n\n\nTsScrollbarsModule\n\nTsScrollbarsModule\n\nTsScrollbarsModule -->\n\nTsScrollbarsComponent->TsScrollbarsModule\n\n\n\n\n\nTsScrollbarsComponent \n\nTsScrollbarsComponent \n\nTsScrollbarsComponent  -->\n\nTsScrollbarsModule->TsScrollbarsComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/scrollbars/scrollbars.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsScrollbarsComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsScrollbarsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\nimport { TsScrollbarsComponent } from './scrollbars.component';\n\n\nexport * from './scrollbars.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PerfectScrollbarModule,\n  ],\n  declarations: [\n    TsScrollbarsComponent,\n  ],\n  exports: [\n    TsScrollbarsComponent,\n  ],\n})\nexport class TsScrollbarsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsSearchComponent.html":{"url":"components/TsSearchComponent.html","title":"component - TsSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/search/search.component.ts\n\n\n    \n        Description\n    \n    \n        A presentational component to render a search form\nQA CSS CLASSES\n\nqa-search: Placed on the form element which contains this component\nqa-search-input: Placed on the TsInputComponent used for the search text input\nqa-search-button: Placed on the TsButtonComponent used for the submit button\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-search\n            \n\n            \n                styleUrls\n                search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buttonAction\n                            \n                            \n                                    Public\n                                buttonType\n                            \n                            \n                                    Public\n                                debouncedEmit\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Private\n                                INPUT_DEBOUNCE_TIME\n                            \n                            \n                                    Public\n                                inputPatternRegex\n                            \n                            \n                                    Public\n                                query\n                            \n                            \n                                    Public\n                                queryMinLength\n                            \n                            \n                                    Public\n                                searchForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitSubmit\n                            \n                            \n                                    Public\n                                keyup\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoSubmit\n                            \n                            \n                                initialValue\n                            \n                            \n                                inputHint\n                            \n                            \n                                inputLabel\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isFocused\n                            \n                            \n                                isSubmitting\n                            \n                            \n                                theme\n                            \n                            \n                                userCanClear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                cleared\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/search/search.component.ts:201\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoSubmit\n                    \n                    \n                        Define if the input should automatically submit values as typed\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:135\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialValue\n                    \n                    \n                        Define an initial value for the search input\n\n                            \n                            Type:    string | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:141\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputHint\n                    \n                    \n                        Define the hint text below the input\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Enter at least two letters.'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:147\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputLabel\n                    \n                    \n                        Define the primary label for the input\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Search'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:153\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the search should be disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:159\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isFocused\n                    \n                    \n                        Define if the search input should be focused initially\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:165\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSubmitting\n                    \n                    \n                        Define if the search is currently submitting a query\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:171\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:177\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userCanClear\n                    \n                    \n                        Define if the user can clear the search input\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:183\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        The event to emit when the internal input value is changed\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:195\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cleared\n                    \n                    \n                        The event to emit when the internal input value is cleared\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:201\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitted\n                    \n                    \n                        The event to emit when the form is submitted\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:189\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        emitSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:244\n                            \n                        \n\n\n                \n                    \n                            Emit the submitted event\nNOTE: This wrapper is needed so that we can pass the query value to the emitter\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keyup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        keyup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:228\n                            \n                        \n\n\n                \n                    \n                            Fire events as needed after keyup events\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:215\n                            \n                        \n\n\n                \n                    \n                            Seed the value if needed on initialization\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buttonAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonAction:     TsButtonActionTypes\n\n                    \n                \n                    \n                        \n                            Type :     TsButtonActionTypes\n\n                        \n                    \n                    \n                        \n                            Default value : 'Submit'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:79\n                            \n                        \n\n                \n                    \n                        Define the button action label\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buttonType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonType:     TsButtonFunctionTypes\n\n                    \n                \n                    \n                        \n                            Type :     TsButtonFunctionTypes\n\n                        \n                    \n                    \n                        \n                            Default value : 'search'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:84\n                            \n                        \n\n                \n                    \n                        Define the button type\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            debouncedEmit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debouncedEmit:     \n\n                    \n                \n                    \n                        \n                            Default value : debounce(this.emitSubmit, this.INPUT_DEBOUNCE_TIME)\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:96\n                            \n                        \n\n                \n                    \n                        Define a debounced method to emit the submission event\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'search'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:101\n                            \n                        \n\n                \n                    \n                        Define the icon name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            INPUT_DEBOUNCE_TIME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        INPUT_DEBOUNCE_TIME:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:74\n                            \n                        \n\n                \n                    \n                        Define the time to wait for user interaction to stop before auto-submitting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputPatternRegex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputPatternRegex:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[a-zA-Z0-9_ ]*'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:106\n                            \n                        \n\n                \n                    \n                        Define the regular expression to validate the query\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:129\n                            \n                        \n\n                \n                    \n                        Store the search query\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryMinLength\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queryMinLength:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:111\n                            \n                        \n\n                \n                    \n                        Define the minimum length of a valid query\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : this.formBuilder.group({\n    query: [\n      null,\n      [\n        Validators.minLength(this.queryMinLength),\n        Validators.pattern(this.inputPatternRegex),\n      ],\n    ],\n  })\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:116\n                            \n                        \n\n                \n                    \n                        Initialize the form\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentQuery\n                    \n                \n\n                \n                    \n                        getcurrentQuery()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/search/search.component.ts:89\n                                \n                            \n                    \n                        \n                                Define a helper to return the current query string\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { debounce } from '@terminus/ngx-tools';\n\nimport {\n  TsButtonActionTypes,\n  TsButtonFunctionTypes,\n} from './../button/button.module';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsSearchResponse {\n  /**\n   * The search query\n   */\n  query: string;\n}\n\n\n/**\n * A presentational component to render a search form\n *\n * #### QA CSS CLASSES\n * - `qa-search`: Placed on the form element which contains this component\n * - `qa-search-input`: Placed on the {@link TsInputComponent} used for the search text input\n * - `qa-search-button`: Placed on the {@link TsButtonComponent} used for the submit button\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  host: {\n    class: 'ts-search',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsSearchComponent implements OnInit {\n  /**\n   * Define the time to wait for user interaction to stop before auto-submitting\n   */\n  private INPUT_DEBOUNCE_TIME: number = 200;\n\n  /**\n   * Define the button action label\n   */\n  public buttonAction: TsButtonActionTypes = 'Submit';\n\n  /**\n   * Define the button type\n   */\n  public buttonType: TsButtonFunctionTypes = 'search';\n\n  /**\n   * Define a helper to return the current query string\n   */\n  public get currentQuery(): string {\n    return this.searchForm.value.query ? this.searchForm.value.query.trim() : '';\n  }\n\n  /**\n   * Define a debounced method to emit the submission event\n   */\n  public debouncedEmit = debounce(this.emitSubmit, this.INPUT_DEBOUNCE_TIME);\n\n  /**\n   * Define the icon name\n   */\n  public icon: string = 'search';\n\n  /**\n   * Define the regular expression to validate the query\n   */\n  public inputPatternRegex: string = '[a-zA-Z0-9_ ]*';\n\n  /**\n   * Define the minimum length of a valid query\n   */\n  public queryMinLength: number = 2;\n\n  /**\n   * Initialize the form\n   */\n  public searchForm: FormGroup = this.formBuilder.group({\n    query: [\n      null,\n      [\n        Validators.minLength(this.queryMinLength),\n        Validators.pattern(this.inputPatternRegex),\n      ],\n    ],\n  });\n\n  /**\n   * Store the search query\n   */\n  public query: string = '';\n\n  /**\n   * Define if the input should automatically submit values as typed\n   */\n  @Input()\n  public autoSubmit: boolean = false;\n\n  /**\n   * Define an initial value for the search input\n   */\n  @Input()\n  public initialValue: string | undefined;\n\n  /**\n   * Define the hint text below the input\n   */\n  @Input()\n  public inputHint: string = 'Enter at least two letters.';\n\n  /**\n   * Define the primary label for the input\n   */\n  @Input()\n  public inputLabel: string = 'Search';\n\n  /**\n   * Define if the search should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the search input should be focused initially\n   */\n  @Input()\n  public isFocused: boolean = false;\n\n  /**\n   * Define if the search is currently submitting a query\n   */\n  @Input()\n  public isSubmitting: boolean = false;\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define if the user can clear the search input\n   */\n  @Input()\n  public userCanClear: boolean = true;\n\n  /**\n   * The event to emit when the form is submitted\n   */\n  @Output()\n  public submitted: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the internal input value is changed\n   */\n  @Output()\n  public changed: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the internal input value is cleared\n   */\n  @Output()\n  public cleared: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n  ) {}\n\n\n  /**\n   * Seed the value if needed on initialization\n   */\n  public ngOnInit(): void {\n    // istanbul ignore else\n    if (this.initialValue) {\n      this.searchForm.patchValue({\n        query: this.initialValue,\n      });\n    }\n  }\n\n\n  /**\n   * Fire events as needed after keyup events\n   */\n  public keyup(): void {\n    this.changed.emit(this.currentQuery);\n\n    // NOTE: We need to check for a valid query length here even though we are using a minLength\n    // validator. When the length is 0 the minLength validator returns valid.\n    if (this.autoSubmit && this.searchForm.valid && this.currentQuery.length > 0) {\n      this.debouncedEmit(this);\n    }\n  }\n\n\n  /**\n   * Emit the submitted event\n   *\n   * NOTE: This wrapper is needed so that we can pass the query value to the emitter\n   */\n  private emitSubmit(): void {\n    this.submitted.emit({query: this.currentQuery});\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n  Search\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Search'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsSearchModule.html":{"url":"modules/TsSearchModule.html","title":"module - TsSearchModule","body":"\n                   \n\n\n\n\n  Modules\n  TsSearchModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsSearchModule\n\n\n\ncluster_TsSearchModule_declarations\n\n\n\ncluster_TsSearchModule_imports\n\n\n\ncluster_TsSearchModule_exports\n\n\n\n\nTsSearchComponent\n\nTsSearchComponent\n\n\n\nTsSearchModule\n\nTsSearchModule\n\nTsSearchModule -->\n\nTsSearchComponent->TsSearchModule\n\n\n\n\n\nTsSearchComponent \n\nTsSearchComponent \n\nTsSearchComponent  -->\n\nTsSearchModule->TsSearchComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsSearchModule -->\n\nTsButtonModule->TsSearchModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsSearchModule -->\n\nTsInputModule->TsSearchModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/search/search.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsSearchComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsInputModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsSearchComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TsInputModule } from './../input/input.module';\nimport { TsButtonModule } from './../button/button.module';\nimport { TsSearchComponent } from './search.component';\n\nexport * from './search.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    TsInputModule,\n    TsButtonModule,\n  ],\n  exports: [\n    TsSearchComponent,\n  ],\n  declarations: [\n    TsSearchComponent,\n  ],\n})\nexport class TsSearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsSearchResponse.html":{"url":"interfaces/TsSearchResponse.html","title":"interface - TsSearchResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsSearchResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/search/search.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the user object interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        query\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The search query\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { debounce } from '@terminus/ngx-tools';\n\nimport {\n  TsButtonActionTypes,\n  TsButtonFunctionTypes,\n} from './../button/button.module';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsSearchResponse {\n  /**\n   * The search query\n   */\n  query: string;\n}\n\n\n/**\n * A presentational component to render a search form\n *\n * #### QA CSS CLASSES\n * - `qa-search`: Placed on the form element which contains this component\n * - `qa-search-input`: Placed on the {@link TsInputComponent} used for the search text input\n * - `qa-search-button`: Placed on the {@link TsButtonComponent} used for the submit button\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  host: {\n    class: 'ts-search',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsSearchComponent implements OnInit {\n  /**\n   * Define the time to wait for user interaction to stop before auto-submitting\n   */\n  private INPUT_DEBOUNCE_TIME: number = 200;\n\n  /**\n   * Define the button action label\n   */\n  public buttonAction: TsButtonActionTypes = 'Submit';\n\n  /**\n   * Define the button type\n   */\n  public buttonType: TsButtonFunctionTypes = 'search';\n\n  /**\n   * Define a helper to return the current query string\n   */\n  public get currentQuery(): string {\n    return this.searchForm.value.query ? this.searchForm.value.query.trim() : '';\n  }\n\n  /**\n   * Define a debounced method to emit the submission event\n   */\n  public debouncedEmit = debounce(this.emitSubmit, this.INPUT_DEBOUNCE_TIME);\n\n  /**\n   * Define the icon name\n   */\n  public icon: string = 'search';\n\n  /**\n   * Define the regular expression to validate the query\n   */\n  public inputPatternRegex: string = '[a-zA-Z0-9_ ]*';\n\n  /**\n   * Define the minimum length of a valid query\n   */\n  public queryMinLength: number = 2;\n\n  /**\n   * Initialize the form\n   */\n  public searchForm: FormGroup = this.formBuilder.group({\n    query: [\n      null,\n      [\n        Validators.minLength(this.queryMinLength),\n        Validators.pattern(this.inputPatternRegex),\n      ],\n    ],\n  });\n\n  /**\n   * Store the search query\n   */\n  public query: string = '';\n\n  /**\n   * Define if the input should automatically submit values as typed\n   */\n  @Input()\n  public autoSubmit: boolean = false;\n\n  /**\n   * Define an initial value for the search input\n   */\n  @Input()\n  public initialValue: string | undefined;\n\n  /**\n   * Define the hint text below the input\n   */\n  @Input()\n  public inputHint: string = 'Enter at least two letters.';\n\n  /**\n   * Define the primary label for the input\n   */\n  @Input()\n  public inputLabel: string = 'Search';\n\n  /**\n   * Define if the search should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the search input should be focused initially\n   */\n  @Input()\n  public isFocused: boolean = false;\n\n  /**\n   * Define if the search is currently submitting a query\n   */\n  @Input()\n  public isSubmitting: boolean = false;\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define if the user can clear the search input\n   */\n  @Input()\n  public userCanClear: boolean = true;\n\n  /**\n   * The event to emit when the form is submitted\n   */\n  @Output()\n  public submitted: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the internal input value is changed\n   */\n  @Output()\n  public changed: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the internal input value is cleared\n   */\n  @Output()\n  public cleared: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n  ) {}\n\n\n  /**\n   * Seed the value if needed on initialization\n   */\n  public ngOnInit(): void {\n    // istanbul ignore else\n    if (this.initialValue) {\n      this.searchForm.patchValue({\n        query: this.initialValue,\n      });\n    }\n  }\n\n\n  /**\n   * Fire events as needed after keyup events\n   */\n  public keyup(): void {\n    this.changed.emit(this.currentQuery);\n\n    // NOTE: We need to check for a valid query length here even though we are using a minLength\n    // validator. When the length is 0 the minLength validator returns valid.\n    if (this.autoSubmit && this.searchForm.valid && this.currentQuery.length > 0) {\n      this.debouncedEmit(this);\n    }\n  }\n\n\n  /**\n   * Emit the submitted event\n   *\n   * NOTE: This wrapper is needed so that we can pass the query value to the emitter\n   */\n  private emitSubmit(): void {\n    this.submitted.emit({query: this.currentQuery});\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsSelectModule.html":{"url":"modules/TsSelectModule.html","title":"module - TsSelectModule","body":"\n                   \n\n\n\n\n  Modules\n  TsSelectModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsSelectModule\n\n\n\ncluster_TsSelectModule_declarations\n\n\n\ncluster_TsSelectModule_TsSelectComponent_providers\n\n\n\ncluster_TsSelectModule_imports\n\n\n\ncluster_TsSelectModule_exports\n\n\n\n\nTsSelectComponent\n\nTsSelectComponent\n\n\n\nTsSelectModule\n\nTsSelectModule\n\nTsSelectModule -->\n\nTsSelectComponent->TsSelectModule\n\n\n\n\n\nTsSelectComponent \n\nTsSelectComponent \n\nTsSelectComponent  -->\n\nTsSelectModule->TsSelectComponent \n\n\n\n\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n\nTsSelectComponent -->\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR->TsSelectComponent\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsSelectModule -->\n\nTsValidationMessagesModule->TsSelectModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/select/select.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsSelectComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsSelectComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsSelectComponent } from './select.component';\n\nexport * from './select.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSelectModule,\n    TsValidationMessagesModule,\n  ],\n  exports: [\n    TsSelectComponent,\n  ],\n  declarations: [\n    TsSelectComponent,\n  ],\n})\nexport class TsSelectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsSelectedFile.html":{"url":"classes/TsSelectedFile.html","title":"class - TsSelectedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsSelectedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/selected-file.ts\n        \n\n            \n                Description\n            \n            \n                Manage a single selected file\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dimensions\n                            \n                            \n                                    Public\n                                file\n                            \n                            \n                                    Public\n                                fileLoaded$\n                            \n                            \n                                    Private\n                                fileReader\n                            \n                            \n                                    Private\n                                    Optional\n                                fileReference\n                            \n                            \n                                    Public\n                                mimeType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                ratio\n                            \n                            \n                                    Public\n                                size\n                            \n                            \n                                    Public\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                determineImageDimensions\n                            \n                            \n                                    Private\n                                isSame\n                            \n                            \n                                    Private\n                                validateImageDimensions\n                            \n                            \n                                    Private\n                                validateImageRatio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(file: File, imageDimensionConstraints: TsFileImageDimensionConstraints | undefined, typeConstraint: TsFileAcceptedMimeTypes[] | undefined, maxSize: number, ratioConstraint: Array | undefined)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/file-upload/selected-file.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                  \n                                                        \n                                                                    File\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageDimensionConstraints\n                                                  \n                                                        \n                                                                    TsFileImageDimensionConstraints | undefined\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConstraint\n                                                  \n                                                        \n                                                                    TsFileAcceptedMimeTypes[] | undefined\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxSize\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ratioConstraint\n                                                  \n                                                        \n                                                                    Array | undefined\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dimensions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dimensions:     TsImageDimensions | undefined\n\n                    \n                \n                    \n                        \n                            Type :     TsImageDimensions | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            file\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        file:     File\n\n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileLoaded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileLoaded$:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this.fileReference)\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:57\n                            \n                        \n\n                \n                    \n                        BehaviorSubject to alert consumers when all calculations are complete\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fileReader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileReader:     FileReader\n\n                    \n                \n                    \n                        \n                            Type :     FileReader\n\n                        \n                    \n                    \n                        \n                            Default value : new FileReader()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            fileReference\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileReference:     TsSelectedFile\n\n                    \n                \n                    \n                        \n                            Type :     TsSelectedFile\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:52\n                            \n                        \n\n                \n                    \n                        Only needed to appease TypeScript when defining fileLoaded$\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mimeType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mimeType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ratio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ratio:     number | undefined\n\n                    \n                \n                    \n                        \n                            Type :     number | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            size\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        size:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            validations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validations:     TsFileValidations\n\n                    \n                \n                    \n                        \n                            Type :     TsFileValidations\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    fileType: false,\n    fileSize: false,\n    imageDimensions: false,\n    imageRatio: false,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:41\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            determineImageDimensions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        determineImageDimensions(callback?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:150\n                            \n                        \n\n\n                \n                    \n                            Determine the dimensions and ratio of an image\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                \nA function to call after the dimensions have been calculated (asynchronously)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isSame\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isSame(number1: number, number2: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:251\n                            \n                        \n\n\n                \n                    \n                            A utility function to determine whether two numbers are the same\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        number1\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \none number\n\n\n                                                        \n                                                \n                                                \n                                                        number2\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nanother number\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether these two numbers are the same\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateImageDimensions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        validateImageDimensions(constraints: TsFileImageDimensionConstraints | undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:201\n                            \n                        \n\n\n                \n                    \n                            Validate the image dimensions\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        constraints\n                                                        \n                                                                    TsFileImageDimensionConstraints | undefined\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe constraints this the image dimensions must fit\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    The validation result\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateImageRatio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        validateImageRatio(constraints: Array | undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:228\n                            \n                        \n\n\n                \n                    \n                            Validate the image ratios\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        constraints\n                                                        \n                                                                    Array | undefined\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe constrains that the image ratio must fit\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    The validation result\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:95\n                                \n                            \n                    \n                        \n                                Get the image width\n\n\n                                \n                                \n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:104\n                                \n                            \n                    \n                        \n                                Get the image height\n\n\n                                \n                                \n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isCSV\n                    \n                \n\n                \n                    \n                        getisCSV()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:113\n                                \n                            \n                    \n                        \n                                Get a boolean representing if the file is a CSV\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isImage\n                    \n                \n\n                \n                    \n                        getisImage()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:122\n                                \n                            \n                    \n                        \n                                Get a boolean representing if the file is an image\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fileContents\n                    \n                \n\n                \n                    \n                        getfileContents()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:131\n                                \n                            \n                    \n                        \n                                Get the file contents\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:140\n                                \n                            \n                    \n                        \n                                Get the validation status\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject } from 'rxjs';\n\nimport { TsFileImageDimensionConstraints } from './image-dimension-constraints';\nimport { TsImageDimensions } from './image-dimensions';\nimport { TsFileAcceptedMimeTypes } from './mime-types';\nimport { ImageRatio } from './file-upload.module';\n\n\n/**\n * The structure of the object to track file validations internally\n */\nexport interface TsFileValidations {\n  fileType: boolean;\n  fileSize: boolean;\n  imageDimensions: boolean;\n  imageRatio: boolean;\n}\n\n\n/**\n * The number of bytes per kilobyte (for calculations)\n */\nconst BYTES_PER_KB = 1024;\n\n\n/**\n * Manage a single selected file\n *\n * @param file - The selected file\n * @param imageDimensionConstraints - An array of image dimension constraints {@link TsFileImageDimensionConstraints}\n * @param typeConstraint - An array of allowed MIME types {@link TsFileAcceptedMimeTypes}\n * @param maxSize - The maximum size in kilobytes\n * @param ratioConstraint - An array of allowed image ratios in form of ImageRatio\n */\nexport class TsSelectedFile {\n  public name: string | undefined;\n  public mimeType: string;\n  public dimensions: TsImageDimensions | undefined;\n  public ratio: number | undefined;\n  public size: number;\n  public validations: TsFileValidations = {\n    fileType: false,\n    fileSize: false,\n    imageDimensions: false,\n    imageRatio: false,\n  };\n  private fileReader: FileReader = new FileReader();\n\n  /**\n   * Only needed to appease TypeScript when defining `fileLoaded$`\n   */\n  private fileReference?: TsSelectedFile;\n\n  /**\n   * BehaviorSubject to alert consumers when all calculations are complete\n   */\n  public fileLoaded$: BehaviorSubject = new BehaviorSubject(this.fileReference);\n\n\n  constructor(\n    public file: File,\n    private imageDimensionConstraints: TsFileImageDimensionConstraints | undefined,\n    private typeConstraint: TsFileAcceptedMimeTypes[] | undefined,\n    private maxSize: number,\n    private ratioConstraint: Array | undefined,\n  ) {\n    this.mimeType = this.file.type;\n    this.size = Math.ceil(this.file.size / BYTES_PER_KB);\n    this.name = this.file.name;\n\n    // Begin the validation chain by validating image dimensions\n    this.determineImageDimensions(() => {\n      // Validate mime-type\n      // istanbul ignore else\n      if (this.typeConstraint && this.typeConstraint.indexOf(this.file.type as TsFileAcceptedMimeTypes) >= 0) {\n        this.validations.fileType = true;\n      }\n\n      // Validate file size\n      // istanbul ignore else\n      if (this.size  {\n        // istanbul ignore else\n        if (img) {\n          img.src = this.fileReader.result;\n        }\n      };\n      img.onload = (v: Event) => {\n        // istanbul ignore else\n        if (img) {\n          this.dimensions = new TsImageDimensions(img.naturalWidth, img.naturalHeight);\n        }\n\n        // Validate dimensions and ratio\n        this.validations.imageDimensions = this.validateImageDimensions(this.imageDimensionConstraints);\n        this.validations.imageRatio = this.validateImageRatio(this.ratioConstraint);\n        // Call the callback if one exists\n        // istanbul ignore else\n        if (callback) {\n          callback();\n        }\n      };\n    } else {\n      // We are not dealing with an image:\n      // istanbul ignore else\n      if (callback) {\n        callback();\n      }\n\n      // Since this is not an image, set dimension/ratio validation to `true` to 'bypass'\n      this.validations.imageDimensions = true;\n      this.validations.imageRatio = true;\n    }\n\n    // Read the file (this triggers the FileReader load event)\n    this.fileReader.readAsDataURL(this.file);\n  }\n\n\n  /**\n   * Validate the image dimensions\n   *\n   * @param constraints - The constraints this the image dimensions must fit\n   * @return The validation result\n   */\n  private validateImageDimensions(constraints: TsFileImageDimensionConstraints | undefined): boolean {\n    if (!constraints || constraints.length = constraint.height.min && height = constraint.width.min && width  | undefined): boolean {\n    if (!constraints) {\n      return true;\n    }\n\n    const ratios = constraints.map((r) => r.widthRatio / r.heightRatio);\n    for (const r of ratios) {\n      const ratio = this.width / this.height;\n      if (this.isSame(r, ratio)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * A utility function to determine whether two numbers are the same\n   * @param number1 - one number\n   * @param number2 - another number\n   * @return Whether these two numbers are the same\n   */\n\n  private isSame(number1: number, number2: number) {\n    if (Math.abs((number1 - number2) / number1) \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsSentenceCasePipe.html":{"url":"pipes/TsSentenceCasePipe.html","title":"pipe - TsSentenceCasePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsSentenceCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/sentence-case/sentence-case.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsSentenceCase\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/sentence-case/sentence-case.pipe.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\n\n\n@Pipe({\n  name: 'tsSentenceCase',\n})\nexport class TsSentenceCasePipe implements PipeTransform {\n  transform(value: string): string | undefined {\n    // Check for null values to avoid issues during data-binding\n    if (!value) {\n      return;\n    }\n\n    return value.charAt(0).toUpperCase() + value.slice(1).toLowerCase();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsSlideToggleChange.html":{"url":"classes/TsSlideToggleChange.html","title":"class - TsSlideToggleChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsSlideToggleChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/toggle/toggle.component.ts\n        \n\n            \n                Description\n            \n            \n                Expose the MatSlideToggleChange event as TsSlideToggleChange. Used by TsToggleComponent\n\n            \n\n            \n                Extends\n            \n            \n                    MatSlideToggleChange\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Expose the MatSlideToggleChange event as TsSlideToggleChange. Used by {@link TsToggleComponent}\n */\nexport class TsSlideToggleChange extends MatSlideToggleChange {}\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via our base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsToggleComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * The is a toggle component\n *\n * #### QA CSS CLASSES\n * - `qa-toggle`: The toggle element\n *\n * @example\n * My Toggle!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss'],\n  host: {\n    class: 'ts-toggle',\n  },\n  providers: [CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsToggleComponent extends TsReactiveFormBaseComponent {\n  /**\n   * Define the aria label\n   */\n  @Input()\n  public ariaLabel: string | undefined;\n\n  /**\n   * Allow the checked state to be set\n   */\n  @Input()\n  public set isChecked(value: boolean) {\n    this._isChecked = coerceBooleanProperty(value);\n    this.value = this._isChecked;\n  }\n  public get isChecked(): boolean {\n    return this._isChecked;\n  }\n  private _isChecked: boolean = false;\n\n  /**\n   * Define if the toggle should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the toggle is required\n   */\n  @Input()\n  public isRequired: boolean = true;\n\n  /**\n   * Define the position of the label\n   */\n  @Input()\n  public labelPosition: 'before' | 'after' = 'after';\n\n  /**\n   * Define the input name for the toggle\n   */\n  @Input()\n  public name: string = 'toggle';\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit an event each time the toggle value changes\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsSortBase.html":{"url":"classes/TsSortBase.html","title":"class - TsSortBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsSortBase\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.directive.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n\nTable of Contents\n\nAdding sort to table headers\nChanging the sort order\nDisabling sorting\nUsing sort with the ts-table\nAccessibility\n\n\nAdding sort to table headers\nTo add sorting behavior and styling to a set of table headers, add ts-sort-header to each header\nand provide an id that will identify it. These headers should be contained within a parent element\nwith the tsSort directive, which will emit a sortChange event when the user triggers sorting\non the header.\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\ntsSort will emit an sortChange event that contains the ID of the header triggered and the\ndirection to sort (asc or desc).\nChanging the sort order\nBy default, a sort header starts its sorting at asc and then desc. Triggering the sort header\nafter desc will remove sorting.\nTo reverse the sort order for all headers, set the tsSortStart to desc on the tsSort\ndirective. To reverse the order only for a specific header, set the start input only on the header\ninstead.\nTo prevent the user from clearing the sort sort state from an already sorted column, set\ntsSortDisableClear to true on the tsSort to affect all headers, or set disableClear to true on\na specific header.\nDisabling sorting\nIf you want to prevent the user from changing the sorting order of any column, you can use the\ntsSortDisabled binding on the ts-sort, or the disabled on an single ts-sort-header.\nUsing sort with the ts-table\nWhen used on an ts-table header, it is not required to set an ts-sort-header id on because by\ndefault it will use the id of the column.\nAccessibility\nThe aria-label for the sort button can be set in TsSortHeaderIntl.\n\n    \n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n} from './sort-errors';\n\n\n/**\n * Define the allowed sort directions for {@link TsSort}\n */\nexport type TsSortDirection\n  = 'asc'\n  | 'desc'\n  | ''\n;\n\n\n/**\n * Interface for a directive that holds sorting state consumed by `TsSortHeaderComponent`\n */\nexport interface TsSortableItem {\n  /**\n   * The id of the column being sorted\n   */\n  id: string;\n\n  /**\n   * Starting sort direction\n   */\n  start: 'asc' | 'desc';\n\n  /**\n   * Whether to disable clearing the sorting state\n   */\n  disableClear: boolean;\n}\n\n\n/**\n * The current sort state\n */\nexport interface TsSortState {\n  /**\n   * The id of the column being sorted\n   */\n  active: string;\n\n  /**\n   * The sort direction\n   */\n  direction: TsSortDirection;\n}\n\n\n// Boilerplate for applying mixins to TsSort.\nexport class TsSortBase {}\nexport const _TsSortMixinBase = mixinDisabled(TsSortBase);\n\n\n/**\n * Container for TsSortables to manage the sort state and provide default sort parameters\n */\n@Directive({\n  selector: '[tsSort]',\n  exportAs: 'tsSort',\n  inputs: ['disabled: tsSortDisabled'],\n})\nexport class TsSortDirective extends _TsSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /**\n   * Collection of all registered sortables that this directive manages\n   */\n  private sortables = new Map();\n\n  /**\n   * Used to notify any child components listening to state changes\n   */\n  public _stateChanges = new Subject();\n\n  /**\n   * The id of the most recently sorted TsSortable\n   */\n  @Input('tsSortActive')\n  public active!: string;\n\n  /**\n   * The direction to set when an TsSortable is initially sorted.\n   *\n   * May be overriden by the TsSortable's sort start.\n   */\n  @Input('tsSortStart')\n  public start: 'asc' | 'desc' = 'asc';\n\n  /**\n   * The sort direction of the currently active TsSortable\n   */\n  @Input('tsSortDirection')\n  public set direction(direction: TsSortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  public get direction(): TsSortDirection {\n    return this._direction;\n  }\n  private _direction: TsSortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   *\n   * May be overriden by the TsSortable's disable clear input.\n   */\n  @Input('tsSortDisableClear')\n  public set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  public get disableClear() {\n    return this._disableClear;\n  }\n  private _disableClear: boolean = false;\n\n  /**\n   * Event emitted when the user changes either the active sort or sort direction\n   */\n  @Output('tsSortChange')\n  readonly sortChange = new EventEmitter();\n\n\n  /**\n   * Trigger next on all changes\n   */\n  public ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n\n  /**\n   * Complete the observable on destroy\n   */\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n\n  /**\n   * Register function to be used by the contained TsSortables. Adds the TsSortable to the\n   * collection of TsSortables.\n   */\n  register(sortable: TsSortableItem): void {\n    if (!sortable.id && isDevMode()) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id) && isDevMode()) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n\n  /**\n   * Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\n   * collection of contained TsSortables.\n   */\n  deregister(sortable: TsSortableItem): void {\n    this.sortables.delete(sortable.id);\n  }\n\n\n  /**\n   * Sets the active sort id and determines the new sort direction\n   */\n  sort(sortable: TsSortableItem): void {\n    if (this.active !== sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n\n  /**\n   * Returns the next sort direction of the active sortable, checking for potential overrides\n   */\n  getNextSortDirection(sortable: TsSortableItem): TsSortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    const sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n}\n\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): TsSortDirection[] {\n  const sortOrder: TsSortDirection[] = ['asc', 'desc'];\n\n  if (start === 'desc') {\n    sortOrder.reverse();\n  }\n\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n\n  return sortOrder;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsSortDirective.html":{"url":"directives/TsSortDirective.html","title":"directive - TsSortDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsSortDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.directive.ts\n        \n\n            \n                Description\n            \n            \n                Container for TsSortables to manage the sort state and provide default sort parameters\n\n            \n\n            \n                Implements\n            \n            \n                        CanDisable\n                        OnChanges\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsSort]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _direction\n                            \n                            \n                                    Private\n                                _disableClear\n                            \n                            \n                                    Public\n                                _stateChanges\n                            \n                            \n                                    Private\n                                sortables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregister\n                            \n                            \n                                getNextSortDirection\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                register\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsSortActive\n                            \n                            \n                                tsSortDirection\n                            \n                            \n                                tsSortDisableClear\n                            \n                            \n                                tsSortStart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsSortChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tsSortActive\n                    \n                    \n                        The id of the most recently sorted TsSortable\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:98\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tsSortDirection\n                    \n                    \n                        The sort direction of the currently active TsSortable\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:112\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tsSortDisableClear\n                    \n                    \n                        Whether to disable the user from clearing the sort by finishing the sort direction cycle.\nMay be overriden by the TsSortable's disable clear input.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:129\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tsSortStart\n                    \n                    \n                        The direction to set when an TsSortable is initially sorted.\nMay be overriden by the TsSortable's sort start.\n\n                            \n                            Type:    \"asc\" | \"desc\"\n\n                            \n                        \n                            Default value: 'asc'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:106\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        tsSortChange\n                    \n                    \n                        Event emitted when the user changes either the active sort or sort direction\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:141\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deregister\n                            \n                            \n                        \n                    \n                \n                \n                    \nderegister(sortable: TsSortableItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:181\n                            \n                        \n\n\n                \n                    \n                            Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\ncollection of contained TsSortables.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sortable\n                                                        \n                                                                    TsSortableItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNextSortDirection\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNextSortDirection(sortable: TsSortableItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:204\n                            \n                        \n\n\n                \n                    \n                            Returns the next sort direction of the active sortable, checking for potential overrides\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sortable\n                                                        \n                                                                    TsSortableItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TsSortDirection\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:147\n                            \n                        \n\n\n                \n                    \n                            Trigger next on all changes\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:155\n                            \n                        \n\n\n                \n                    \n                            Complete the observable on destroy\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \nregister(sortable: TsSortableItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:164\n                            \n                        \n\n\n                \n                    \n                            Register function to be used by the contained TsSortables. Adds the TsSortable to the\ncollection of TsSortables.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sortable\n                                                        \n                                                                    TsSortableItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \nsort(sortable: TsSortableItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:189\n                            \n                        \n\n\n                \n                    \n                            Sets the active sort id and determines the new sort direction\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sortable\n                                                        \n                                                                    TsSortableItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _direction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _direction:     TsSortDirection\n\n                    \n                \n                    \n                        \n                            Type :     TsSortDirection\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disableClear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disableClear:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:135\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _stateChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _stateChanges:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:92\n                            \n                        \n\n                \n                    \n                        Used to notify any child components listening to state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sortables\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortables:     \n\n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:87\n                            \n                        \n\n                \n                    \n                        Collection of all registered sortables that this directive manages\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        direction\n                    \n                \n\n                \n                    \n                        getdirection()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:118\n                                \n                            \n\n                \n                    \n                        setdirection(direction: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:112\n                                \n                            \n                    \n                        \n                                The sort direction of the currently active TsSortable\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            direction\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disableClear\n                    \n                \n\n                \n                    \n                        getdisableClear()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:132\n                                \n                            \n\n                \n                    \n                        setdisableClear(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:129\n                                \n                            \n                    \n                        \n                                Whether to disable the user from clearing the sort by finishing the sort direction cycle.\nMay be overriden by the TsSortable's disable clear input.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n    \n        \n\nTable of Contents\n\nAdding sort to table headers\nChanging the sort order\nDisabling sorting\nUsing sort with the ts-table\nAccessibility\n\n\nAdding sort to table headers\nTo add sorting behavior and styling to a set of table headers, add ts-sort-header to each header\nand provide an id that will identify it. These headers should be contained within a parent element\nwith the tsSort directive, which will emit a sortChange event when the user triggers sorting\non the header.\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\ntsSort will emit an sortChange event that contains the ID of the header triggered and the\ndirection to sort (asc or desc).\nChanging the sort order\nBy default, a sort header starts its sorting at asc and then desc. Triggering the sort header\nafter desc will remove sorting.\nTo reverse the sort order for all headers, set the tsSortStart to desc on the tsSort\ndirective. To reverse the order only for a specific header, set the start input only on the header\ninstead.\nTo prevent the user from clearing the sort sort state from an already sorted column, set\ntsSortDisableClear to true on the tsSort to affect all headers, or set disableClear to true on\na specific header.\nDisabling sorting\nIf you want to prevent the user from changing the sorting order of any column, you can use the\ntsSortDisabled binding on the ts-sort, or the disabled on an single ts-sort-header.\nUsing sort with the ts-table\nWhen used on an ts-table header, it is not required to set an ts-sort-header id on because by\ndefault it will use the id of the column.\nAccessibility\nThe aria-label for the sort button can be set in TsSortHeaderIntl.\n\n    \n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n} from './sort-errors';\n\n\n/**\n * Define the allowed sort directions for {@link TsSort}\n */\nexport type TsSortDirection\n  = 'asc'\n  | 'desc'\n  | ''\n;\n\n\n/**\n * Interface for a directive that holds sorting state consumed by `TsSortHeaderComponent`\n */\nexport interface TsSortableItem {\n  /**\n   * The id of the column being sorted\n   */\n  id: string;\n\n  /**\n   * Starting sort direction\n   */\n  start: 'asc' | 'desc';\n\n  /**\n   * Whether to disable clearing the sorting state\n   */\n  disableClear: boolean;\n}\n\n\n/**\n * The current sort state\n */\nexport interface TsSortState {\n  /**\n   * The id of the column being sorted\n   */\n  active: string;\n\n  /**\n   * The sort direction\n   */\n  direction: TsSortDirection;\n}\n\n\n// Boilerplate for applying mixins to TsSort.\nexport class TsSortBase {}\nexport const _TsSortMixinBase = mixinDisabled(TsSortBase);\n\n\n/**\n * Container for TsSortables to manage the sort state and provide default sort parameters\n */\n@Directive({\n  selector: '[tsSort]',\n  exportAs: 'tsSort',\n  inputs: ['disabled: tsSortDisabled'],\n})\nexport class TsSortDirective extends _TsSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /**\n   * Collection of all registered sortables that this directive manages\n   */\n  private sortables = new Map();\n\n  /**\n   * Used to notify any child components listening to state changes\n   */\n  public _stateChanges = new Subject();\n\n  /**\n   * The id of the most recently sorted TsSortable\n   */\n  @Input('tsSortActive')\n  public active!: string;\n\n  /**\n   * The direction to set when an TsSortable is initially sorted.\n   *\n   * May be overriden by the TsSortable's sort start.\n   */\n  @Input('tsSortStart')\n  public start: 'asc' | 'desc' = 'asc';\n\n  /**\n   * The sort direction of the currently active TsSortable\n   */\n  @Input('tsSortDirection')\n  public set direction(direction: TsSortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  public get direction(): TsSortDirection {\n    return this._direction;\n  }\n  private _direction: TsSortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   *\n   * May be overriden by the TsSortable's disable clear input.\n   */\n  @Input('tsSortDisableClear')\n  public set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  public get disableClear() {\n    return this._disableClear;\n  }\n  private _disableClear: boolean = false;\n\n  /**\n   * Event emitted when the user changes either the active sort or sort direction\n   */\n  @Output('tsSortChange')\n  readonly sortChange = new EventEmitter();\n\n\n  /**\n   * Trigger next on all changes\n   */\n  public ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n\n  /**\n   * Complete the observable on destroy\n   */\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n\n  /**\n   * Register function to be used by the contained TsSortables. Adds the TsSortable to the\n   * collection of TsSortables.\n   */\n  register(sortable: TsSortableItem): void {\n    if (!sortable.id && isDevMode()) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id) && isDevMode()) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n\n  /**\n   * Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\n   * collection of contained TsSortables.\n   */\n  deregister(sortable: TsSortableItem): void {\n    this.sortables.delete(sortable.id);\n  }\n\n\n  /**\n   * Sets the active sort id and determines the new sort direction\n   */\n  sort(sortable: TsSortableItem): void {\n    if (this.active !== sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n\n  /**\n   * Returns the next sort direction of the active sortable, checking for potential overrides\n   */\n  getNextSortDirection(sortable: TsSortableItem): TsSortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    const sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n}\n\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): TsSortDirection[] {\n  const sortOrder: TsSortDirection[] = ['asc', 'desc'];\n\n  if (start === 'desc') {\n    sortOrder.reverse();\n  }\n\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n\n  return sortOrder;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsSortHeaderBase.html":{"url":"classes/TsSortHeaderBase.html","title":"class - TsSortHeaderBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsSortHeaderBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort-header.component.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { untilComponentDestroyed } from '@terminus/ngx-tools';\nimport { CdkColumnDef } from '@angular/cdk/table';\nimport {\n  merge,\n} from 'rxjs';\n\nimport { TsSortDirective } from './sort.directive';\nimport { TsSortableItem } from './sort.directive';\nimport { TsSortHeaderIntl } from './sort-header-intl';\nimport { getSortHeaderNotContainedWithinSortError } from './sort-errors';\nimport { tsSortAnimations } from './sort-animations';\n\n\n// Boilerplate for applying mixins to the sort header.\nexport class TsSortHeaderBase {}\nexport const _TsSortHeaderMixinBase = mixinDisabled(TsSortHeaderBase);\n\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent TsSortDirective.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\n@Component({\n  // NOTE(B$): This component needs to be added to another component so we need a non-element\n  // selector\n  // tslint:disable: component-selector\n  selector: '[ts-sort-header]',\n  // tslint:enable: component-selector\n  exportAs: 'tsSortHeader',\n  templateUrl: './sort-header.component.html',\n  styleUrls: ['./sort-header.component.scss'],\n  host: {\n    class: 'ts-sortable',\n    '[class.ts-sort-header-sorted]': '_isSorted()',\n    '[class.ts-sort-header-disabled]': '_isDisabled()',\n    '(click)': '_handleClick()',\n  },\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  animations: [\n    tsSortAnimations.indicator,\n    tsSortAnimations.leftPointer,\n    tsSortAnimations.rightPointer,\n    tsSortAnimations.indicatorToggle,\n  ],\n})\nexport class TsSortHeaderComponent extends _TsSortHeaderMixinBase implements TsSortableItem, CanDisable, OnInit, OnDestroy  {\n  /**\n   * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n   * the column's name.\n   */\n  // NOTE(B$): Renaming input so that we can pull a value from the primary directive\n  // tslint:disable: no-input-rename\n  @Input('ts-sort-header')\n  id!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Sets the position of the arrow that displays when sorted\n   */\n  @Input()\n  arrowPosition: 'before' | 'after' = 'after';\n\n  /**\n   * Overrides the sort start value of the containing TsSort for this TsSortable\n   */\n  @Input()\n  start!: 'asc' | 'desc';\n\n  /**\n   * Overrides the disable clear value of the containing TsSort for this TsSortable\n   */\n  @Input()\n  get disableClear(): boolean {\n    return this._disableClear;\n  }\n  set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  private _disableClear!: boolean;\n\n\n  /**\n   * Check for _sort and set up auto-change-detection\n   */\n  constructor(\n    public _intl: TsSortHeaderIntl,\n    changeDetectorRef: ChangeDetectorRef,\n    @Optional() public _sort: TsSortDirective,\n    @Optional() public _cdkColumnDef: CdkColumnDef,\n  ) {\n    super();\n\n    if (!_sort && isDevMode()) {\n      throw getSortHeaderNotContainedWithinSortError();\n    }\n\n    // Mark directive for change detection after any of these changes\n    merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n      .pipe(\n        untilComponentDestroyed(this),\n      )\n      .subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n\n  /**\n   * Default to cdk column name\n   */\n  public ngOnInit(): void {\n    if (!this.id && this._cdkColumnDef) {\n      this.id = this._cdkColumnDef.name;\n    }\n\n    this._sort.register(this);\n  }\n\n\n  /**\n   * Deregister sort and unsubscribe from observables\n   */\n  public ngOnDestroy(): void {\n    this._sort.deregister(this);\n  }\n\n\n  /**\n   * Handles click events on the header\n   */\n  public _handleClick() {\n    if (!this._isDisabled()) {\n      this._sort.sort(this);\n    }\n  }\n\n\n  /**\n   * Whether this TsSortHeader is currently sorted in either ascending or descending order\n   */\n  public _isSorted() {\n    return this._sort.active == this.id &&\n        (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n  }\n\n\n  /**\n   * Whether this TsSortHeader is disabled\n   */\n  public _isDisabled() {\n    return this._sort.disabled || this.disabled;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsSortHeaderComponent.html":{"url":"components/TsSortHeaderComponent.html","title":"component - TsSortHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsSortHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/sort/sort-header.component.ts\n\n\n    \n        Description\n    \n    \n        Applies sorting behavior (click to change sort) and styles to an element, including an\narrow to display the current sort direction.\nMust be provided with an id and contained within a parent TsSortDirective.\nIf used on header cells in a CdkTable, it will automatically default its id from its containing\ncolumn definition.\n\n    \n\n    \n        Extends\n    \n    \n            _TsSortHeaderMixinBase\n    \n\n    \n        Implements\n    \n    \n                TsSortableItem\n                CanDisable\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsSortHeader\n            \n\n            \n                host\n                {}\n            \n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                [ts-sort-header]\n            \n\n            \n                styleUrls\n                sort-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sort-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _cdkColumnDef\n                            \n                            \n                                    Private\n                                _disableClear\n                            \n                            \n                                    Public\n                                _intl\n                            \n                            \n                                    Public\n                                _sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _handleClick\n                            \n                            \n                                    Public\n                                _isDisabled\n                            \n                            \n                                    Public\n                                _isSorted\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                arrowPosition\n                            \n                            \n                                disableClear\n                            \n                            \n                                start\n                            \n                            \n                                ts-sort-header\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_intl: TsSortHeaderIntl, changeDetectorRef: ChangeDetectorRef, _sort: TsSortDirective, _cdkColumnDef: CdkColumnDef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/sort/sort-header.component.ts:101\n                            \n                        \n\n                \n                    \n                            Check for _sort and set up auto-change-detection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _intl\n                                                  \n                                                        \n                                                                    TsSortHeaderIntl\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _sort\n                                                  \n                                                        \n                                                                    TsSortDirective\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _cdkColumnDef\n                                                  \n                                                        \n                                                                    CdkColumnDef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        arrowPosition\n                    \n                    \n                        Sets the position of the arrow that displays when sorted\n\n                            \n                            Type:    \"before\" | \"after\"\n\n                            \n                        \n                            Default value: 'after'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableClear\n                    \n                    \n                        Overrides the disable clear value of the containing TsSort for this TsSortable\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:95\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        start\n                    \n                    \n                        Overrides the sort start value of the containing TsSort for this TsSortable\n\n                            \n                            Type:    \"asc\" | \"desc\"\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:89\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ts-sort-header\n                    \n                    \n                        ID of this sort header. If used within the context of a CdkColumnDef, this will default to\nthe column's name.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:76\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _handleClick\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _handleClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            Handles click events on the header\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _isDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:170\n                            \n                        \n\n\n                \n                    \n                            Whether this TsSortHeader is disabled\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _isSorted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _isSorted()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:161\n                            \n                        \n\n\n                \n                    \n                            Whether this TsSortHeader is currently sorted in either ascending or descending order\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Deregister sort and unsubscribe from observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Default to cdk column name\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _cdkColumnDef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _cdkColumnDef:     CdkColumnDef\n\n                    \n                \n                    \n                        \n                            Type :     CdkColumnDef\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disableClear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disableClear:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _intl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _intl:     TsSortHeaderIntl\n\n                    \n                \n                    \n                        \n                            Type :     TsSortHeaderIntl\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _sort:     TsSortDirective\n\n                    \n                \n                    \n                        \n                            Type :     TsSortDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:110\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disableClear\n                    \n                \n\n\n                \n                    \n                        setdisableClear(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:98\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { untilComponentDestroyed } from '@terminus/ngx-tools';\nimport { CdkColumnDef } from '@angular/cdk/table';\nimport {\n  merge,\n} from 'rxjs';\n\nimport { TsSortDirective } from './sort.directive';\nimport { TsSortableItem } from './sort.directive';\nimport { TsSortHeaderIntl } from './sort-header-intl';\nimport { getSortHeaderNotContainedWithinSortError } from './sort-errors';\nimport { tsSortAnimations } from './sort-animations';\n\n\n// Boilerplate for applying mixins to the sort header.\nexport class TsSortHeaderBase {}\nexport const _TsSortHeaderMixinBase = mixinDisabled(TsSortHeaderBase);\n\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent TsSortDirective.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\n@Component({\n  // NOTE(B$): This component needs to be added to another component so we need a non-element\n  // selector\n  // tslint:disable: component-selector\n  selector: '[ts-sort-header]',\n  // tslint:enable: component-selector\n  exportAs: 'tsSortHeader',\n  templateUrl: './sort-header.component.html',\n  styleUrls: ['./sort-header.component.scss'],\n  host: {\n    class: 'ts-sortable',\n    '[class.ts-sort-header-sorted]': '_isSorted()',\n    '[class.ts-sort-header-disabled]': '_isDisabled()',\n    '(click)': '_handleClick()',\n  },\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  animations: [\n    tsSortAnimations.indicator,\n    tsSortAnimations.leftPointer,\n    tsSortAnimations.rightPointer,\n    tsSortAnimations.indicatorToggle,\n  ],\n})\nexport class TsSortHeaderComponent extends _TsSortHeaderMixinBase implements TsSortableItem, CanDisable, OnInit, OnDestroy  {\n  /**\n   * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n   * the column's name.\n   */\n  // NOTE(B$): Renaming input so that we can pull a value from the primary directive\n  // tslint:disable: no-input-rename\n  @Input('ts-sort-header')\n  id!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Sets the position of the arrow that displays when sorted\n   */\n  @Input()\n  arrowPosition: 'before' | 'after' = 'after';\n\n  /**\n   * Overrides the sort start value of the containing TsSort for this TsSortable\n   */\n  @Input()\n  start!: 'asc' | 'desc';\n\n  /**\n   * Overrides the disable clear value of the containing TsSort for this TsSortable\n   */\n  @Input()\n  get disableClear(): boolean {\n    return this._disableClear;\n  }\n  set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  private _disableClear!: boolean;\n\n\n  /**\n   * Check for _sort and set up auto-change-detection\n   */\n  constructor(\n    public _intl: TsSortHeaderIntl,\n    changeDetectorRef: ChangeDetectorRef,\n    @Optional() public _sort: TsSortDirective,\n    @Optional() public _cdkColumnDef: CdkColumnDef,\n  ) {\n    super();\n\n    if (!_sort && isDevMode()) {\n      throw getSortHeaderNotContainedWithinSortError();\n    }\n\n    // Mark directive for change detection after any of these changes\n    merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n      .pipe(\n        untilComponentDestroyed(this),\n      )\n      .subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n\n  /**\n   * Default to cdk column name\n   */\n  public ngOnInit(): void {\n    if (!this.id && this._cdkColumnDef) {\n      this.id = this._cdkColumnDef.name;\n    }\n\n    this._sort.register(this);\n  }\n\n\n  /**\n   * Deregister sort and unsubscribe from observables\n   */\n  public ngOnDestroy(): void {\n    this._sort.deregister(this);\n  }\n\n\n  /**\n   * Handles click events on the header\n   */\n  public _handleClick() {\n    if (!this._isDisabled()) {\n      this._sort.sort(this);\n    }\n  }\n\n\n  /**\n   * Whether this TsSortHeader is currently sorted in either ascending or descending order\n   */\n  public _isSorted() {\n    return this._sort.active == this.id &&\n        (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n  }\n\n\n  /**\n   * Whether this TsSortHeader is disabled\n   */\n  public _isDisabled() {\n    return this._sort.disabled || this.disabled;\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n\n      \n        \n        \n        \n      \n    \n  \n\n\n\n  &nbsp;{{ _intl.sortDescriptionLabel(id, _sort.direction) }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                             {{ _intl.sortDescriptionLabel(id, _sort.direction) }}'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsSortHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsSortHeaderIntl.html":{"url":"injectables/TsSortHeaderIntl.html","title":"injectable - TsSortHeaderIntl","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsSortHeaderIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort-header-intl.ts\n        \n\n            \n                Description\n            \n            \n                To modify the labels and text displayed, create a new instance of TsSortHeaderIntl and\ninclude it in a custom provider.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changes\n                            \n                            \n                                sortButtonLabel\n                            \n                            \n                                sortDescriptionLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changes:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header-intl.ts:21\n                            \n                        \n\n                \n                    \n                        Stream that emits whenever the labels here are changed. Use this to notify\ncomponents if the labels have changed after initialization.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortButtonLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortButtonLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : (id: string) => {\n    return `Change sorting for ${id}`;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header-intl.ts:26\n                            \n                        \n\n                \n                    \n                        ARIA label for the sorting button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortDescriptionLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortDescriptionLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : (id: string, direction: TsSortDirection) => {\n    return `Sorted by ${id} ${direction === 'asc' ? 'ascending' : 'descending'}`;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header-intl.ts:33\n                            \n                        \n\n                \n                    \n                        A label to describe the current sort (visible only to screenreaders)\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { TsSortDirection } from './sort.directive';\n\n\n/**\n * To modify the labels and text displayed, create a new instance of TsSortHeaderIntl and\n * include it in a custom provider.\n */\n@Injectable()\nexport class TsSortHeaderIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  changes: Subject = new Subject();\n\n  /**\n   * ARIA label for the sorting button\n   */\n  sortButtonLabel = (id: string) => {\n    return `Change sorting for ${id}`;\n  }\n\n  /**\n   * A label to describe the current sort (visible only to screenreaders)\n   */\n  sortDescriptionLabel = (id: string, direction: TsSortDirection) => {\n    return `Sorted by ${id} ${direction === 'asc' ? 'ascending' : 'descending'}`;\n  }\n}\n\n\n/**\n * Factory to return an instance of TsSortHeaderIntl\n */\nexport function TS_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl: TsSortHeaderIntl) {\n  return parentIntl || new TsSortHeaderIntl();\n}\n\n\n/**\n * TsSortHeaderIntl provider declaration\n */\nexport const TS_SORT_HEADER_INTL_PROVIDER = {\n  // If there is already an TsSortHeaderIntl available, use that. Otherwise, provide a new one.\n  provide: TsSortHeaderIntl,\n  deps: [[new Optional(), new SkipSelf(), TsSortHeaderIntl]],\n  useFactory: TS_SORT_HEADER_INTL_PROVIDER_FACTORY,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsSortModule.html":{"url":"modules/TsSortModule.html","title":"module - TsSortModule","body":"\n                   \n\n\n\n\n  Modules\n  TsSortModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsSortModule\n\n\n\ncluster_TsSortModule_declarations\n\n\n\ncluster_TsSortModule_exports\n\n\n\n\nTsSortDirective\n\nTsSortDirective\n\n\n\nTsSortModule\n\nTsSortModule\n\nTsSortModule -->\n\nTsSortDirective->TsSortModule\n\n\n\n\n\nTsSortHeaderComponent\n\nTsSortHeaderComponent\n\nTsSortModule -->\n\nTsSortHeaderComponent->TsSortModule\n\n\n\n\n\nTsSortDirective \n\nTsSortDirective \n\nTsSortDirective  -->\n\nTsSortModule->TsSortDirective \n\n\n\n\n\nTsSortHeaderComponent \n\nTsSortHeaderComponent \n\nTsSortHeaderComponent  -->\n\nTsSortModule->TsSortHeaderComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Much of this was lifted directly from Angular Material. I highly recommend checking out their\nsource code: https://github.com/angular/material2/tree/master/src/lib/sort\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsSortDirective\n                            \n                            \n                                TsSortHeaderComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsSortDirective\n                            \n                            \n                                    TsSortHeaderComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsSortHeaderComponent } from './sort-header.component';\nimport { TS_SORT_HEADER_INTL_PROVIDER } from './sort-header-intl';\nimport { TsSortDirective } from './sort.directive';\n\nexport * from './sort-animations';\nexport * from './sort-header-intl';\nexport * from './sort-header.component';\nexport * from './sort.directive';\n\n\n/**\n * Much of this was lifted directly from Angular Material. I highly recommend checking out their\n * source code: https://github.com/angular/material2/tree/master/src/lib/sort\n */\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    TS_SORT_HEADER_INTL_PROVIDER,\n  ],\n  declarations: [\n    TsSortDirective,\n    TsSortHeaderComponent,\n  ],\n  exports: [\n    TsSortDirective,\n    TsSortHeaderComponent,\n  ],\n})\nexport class TsSortModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsSortState.html":{"url":"interfaces/TsSortState.html","title":"interface - TsSortState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsSortState\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.directive.ts\n        \n\n            \n                Description\n            \n            \n                The current sort state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        direction\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the column being sorted\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:     TsSortDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsSortDirection\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sort direction\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        \n\nTable of Contents\n\nAdding sort to table headers\nChanging the sort order\nDisabling sorting\nUsing sort with the ts-table\nAccessibility\n\n\nAdding sort to table headers\nTo add sorting behavior and styling to a set of table headers, add ts-sort-header to each header\nand provide an id that will identify it. These headers should be contained within a parent element\nwith the tsSort directive, which will emit a sortChange event when the user triggers sorting\non the header.\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\ntsSort will emit an sortChange event that contains the ID of the header triggered and the\ndirection to sort (asc or desc).\nChanging the sort order\nBy default, a sort header starts its sorting at asc and then desc. Triggering the sort header\nafter desc will remove sorting.\nTo reverse the sort order for all headers, set the tsSortStart to desc on the tsSort\ndirective. To reverse the order only for a specific header, set the start input only on the header\ninstead.\nTo prevent the user from clearing the sort sort state from an already sorted column, set\ntsSortDisableClear to true on the tsSort to affect all headers, or set disableClear to true on\na specific header.\nDisabling sorting\nIf you want to prevent the user from changing the sorting order of any column, you can use the\ntsSortDisabled binding on the ts-sort, or the disabled on an single ts-sort-header.\nUsing sort with the ts-table\nWhen used on an ts-table header, it is not required to set an ts-sort-header id on because by\ndefault it will use the id of the column.\nAccessibility\nThe aria-label for the sort button can be set in TsSortHeaderIntl.\n\n    \n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n} from './sort-errors';\n\n\n/**\n * Define the allowed sort directions for {@link TsSort}\n */\nexport type TsSortDirection\n  = 'asc'\n  | 'desc'\n  | ''\n;\n\n\n/**\n * Interface for a directive that holds sorting state consumed by `TsSortHeaderComponent`\n */\nexport interface TsSortableItem {\n  /**\n   * The id of the column being sorted\n   */\n  id: string;\n\n  /**\n   * Starting sort direction\n   */\n  start: 'asc' | 'desc';\n\n  /**\n   * Whether to disable clearing the sorting state\n   */\n  disableClear: boolean;\n}\n\n\n/**\n * The current sort state\n */\nexport interface TsSortState {\n  /**\n   * The id of the column being sorted\n   */\n  active: string;\n\n  /**\n   * The sort direction\n   */\n  direction: TsSortDirection;\n}\n\n\n// Boilerplate for applying mixins to TsSort.\nexport class TsSortBase {}\nexport const _TsSortMixinBase = mixinDisabled(TsSortBase);\n\n\n/**\n * Container for TsSortables to manage the sort state and provide default sort parameters\n */\n@Directive({\n  selector: '[tsSort]',\n  exportAs: 'tsSort',\n  inputs: ['disabled: tsSortDisabled'],\n})\nexport class TsSortDirective extends _TsSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /**\n   * Collection of all registered sortables that this directive manages\n   */\n  private sortables = new Map();\n\n  /**\n   * Used to notify any child components listening to state changes\n   */\n  public _stateChanges = new Subject();\n\n  /**\n   * The id of the most recently sorted TsSortable\n   */\n  @Input('tsSortActive')\n  public active!: string;\n\n  /**\n   * The direction to set when an TsSortable is initially sorted.\n   *\n   * May be overriden by the TsSortable's sort start.\n   */\n  @Input('tsSortStart')\n  public start: 'asc' | 'desc' = 'asc';\n\n  /**\n   * The sort direction of the currently active TsSortable\n   */\n  @Input('tsSortDirection')\n  public set direction(direction: TsSortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  public get direction(): TsSortDirection {\n    return this._direction;\n  }\n  private _direction: TsSortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   *\n   * May be overriden by the TsSortable's disable clear input.\n   */\n  @Input('tsSortDisableClear')\n  public set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  public get disableClear() {\n    return this._disableClear;\n  }\n  private _disableClear: boolean = false;\n\n  /**\n   * Event emitted when the user changes either the active sort or sort direction\n   */\n  @Output('tsSortChange')\n  readonly sortChange = new EventEmitter();\n\n\n  /**\n   * Trigger next on all changes\n   */\n  public ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n\n  /**\n   * Complete the observable on destroy\n   */\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n\n  /**\n   * Register function to be used by the contained TsSortables. Adds the TsSortable to the\n   * collection of TsSortables.\n   */\n  register(sortable: TsSortableItem): void {\n    if (!sortable.id && isDevMode()) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id) && isDevMode()) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n\n  /**\n   * Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\n   * collection of contained TsSortables.\n   */\n  deregister(sortable: TsSortableItem): void {\n    this.sortables.delete(sortable.id);\n  }\n\n\n  /**\n   * Sets the active sort id and determines the new sort direction\n   */\n  sort(sortable: TsSortableItem): void {\n    if (this.active !== sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n\n  /**\n   * Returns the next sort direction of the active sortable, checking for potential overrides\n   */\n  getNextSortDirection(sortable: TsSortableItem): TsSortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    const sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n}\n\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): TsSortDirection[] {\n  const sortOrder: TsSortDirection[] = ['asc', 'desc'];\n\n  if (start === 'desc') {\n    sortOrder.reverse();\n  }\n\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n\n  return sortOrder;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsSortableItem.html":{"url":"interfaces/TsSortableItem.html","title":"interface - TsSortableItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsSortableItem\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.directive.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a directive that holds sorting state consumed by TsSortHeaderComponent\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        disableClear\n                                \n                                \n                                        id\n                                \n                                \n                                        start\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableClear\n                                    \n                                \n                                \n                                    \n                                        disableClear:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to disable clearing the sorting state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the column being sorted\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:     \"asc\" | \"desc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"asc\" | \"desc\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Starting sort direction\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        \n\nTable of Contents\n\nAdding sort to table headers\nChanging the sort order\nDisabling sorting\nUsing sort with the ts-table\nAccessibility\n\n\nAdding sort to table headers\nTo add sorting behavior and styling to a set of table headers, add ts-sort-header to each header\nand provide an id that will identify it. These headers should be contained within a parent element\nwith the tsSort directive, which will emit a sortChange event when the user triggers sorting\non the header.\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\ntsSort will emit an sortChange event that contains the ID of the header triggered and the\ndirection to sort (asc or desc).\nChanging the sort order\nBy default, a sort header starts its sorting at asc and then desc. Triggering the sort header\nafter desc will remove sorting.\nTo reverse the sort order for all headers, set the tsSortStart to desc on the tsSort\ndirective. To reverse the order only for a specific header, set the start input only on the header\ninstead.\nTo prevent the user from clearing the sort sort state from an already sorted column, set\ntsSortDisableClear to true on the tsSort to affect all headers, or set disableClear to true on\na specific header.\nDisabling sorting\nIf you want to prevent the user from changing the sorting order of any column, you can use the\ntsSortDisabled binding on the ts-sort, or the disabled on an single ts-sort-header.\nUsing sort with the ts-table\nWhen used on an ts-table header, it is not required to set an ts-sort-header id on because by\ndefault it will use the id of the column.\nAccessibility\nThe aria-label for the sort button can be set in TsSortHeaderIntl.\n\n    \n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n} from './sort-errors';\n\n\n/**\n * Define the allowed sort directions for {@link TsSort}\n */\nexport type TsSortDirection\n  = 'asc'\n  | 'desc'\n  | ''\n;\n\n\n/**\n * Interface for a directive that holds sorting state consumed by `TsSortHeaderComponent`\n */\nexport interface TsSortableItem {\n  /**\n   * The id of the column being sorted\n   */\n  id: string;\n\n  /**\n   * Starting sort direction\n   */\n  start: 'asc' | 'desc';\n\n  /**\n   * Whether to disable clearing the sorting state\n   */\n  disableClear: boolean;\n}\n\n\n/**\n * The current sort state\n */\nexport interface TsSortState {\n  /**\n   * The id of the column being sorted\n   */\n  active: string;\n\n  /**\n   * The sort direction\n   */\n  direction: TsSortDirection;\n}\n\n\n// Boilerplate for applying mixins to TsSort.\nexport class TsSortBase {}\nexport const _TsSortMixinBase = mixinDisabled(TsSortBase);\n\n\n/**\n * Container for TsSortables to manage the sort state and provide default sort parameters\n */\n@Directive({\n  selector: '[tsSort]',\n  exportAs: 'tsSort',\n  inputs: ['disabled: tsSortDisabled'],\n})\nexport class TsSortDirective extends _TsSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /**\n   * Collection of all registered sortables that this directive manages\n   */\n  private sortables = new Map();\n\n  /**\n   * Used to notify any child components listening to state changes\n   */\n  public _stateChanges = new Subject();\n\n  /**\n   * The id of the most recently sorted TsSortable\n   */\n  @Input('tsSortActive')\n  public active!: string;\n\n  /**\n   * The direction to set when an TsSortable is initially sorted.\n   *\n   * May be overriden by the TsSortable's sort start.\n   */\n  @Input('tsSortStart')\n  public start: 'asc' | 'desc' = 'asc';\n\n  /**\n   * The sort direction of the currently active TsSortable\n   */\n  @Input('tsSortDirection')\n  public set direction(direction: TsSortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  public get direction(): TsSortDirection {\n    return this._direction;\n  }\n  private _direction: TsSortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   *\n   * May be overriden by the TsSortable's disable clear input.\n   */\n  @Input('tsSortDisableClear')\n  public set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  public get disableClear() {\n    return this._disableClear;\n  }\n  private _disableClear: boolean = false;\n\n  /**\n   * Event emitted when the user changes either the active sort or sort direction\n   */\n  @Output('tsSortChange')\n  readonly sortChange = new EventEmitter();\n\n\n  /**\n   * Trigger next on all changes\n   */\n  public ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n\n  /**\n   * Complete the observable on destroy\n   */\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n\n  /**\n   * Register function to be used by the contained TsSortables. Adds the TsSortable to the\n   * collection of TsSortables.\n   */\n  register(sortable: TsSortableItem): void {\n    if (!sortable.id && isDevMode()) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id) && isDevMode()) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n\n  /**\n   * Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\n   * collection of contained TsSortables.\n   */\n  deregister(sortable: TsSortableItem): void {\n    this.sortables.delete(sortable.id);\n  }\n\n\n  /**\n   * Sets the active sort id and determines the new sort direction\n   */\n  sort(sortable: TsSortableItem): void {\n    if (this.active !== sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n\n  /**\n   * Returns the next sort direction of the active sortable, checking for potential overrides\n   */\n  getNextSortDirection(sortable: TsSortableItem): TsSortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    const sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n}\n\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): TsSortDirection[] {\n  const sortOrder: TsSortDirection[] = ['asc', 'desc'];\n\n  if (start === 'desc') {\n    sortOrder.reverse();\n  }\n\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n\n  return sortOrder;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsSpacingModule.html":{"url":"modules/TsSpacingModule.html","title":"module - TsSpacingModule","body":"\n                   \n\n\n\n\n  Modules\n  TsSpacingModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsSpacingModule\n\n\n\ncluster_TsSpacingModule_declarations\n\n\n\ncluster_TsSpacingModule_exports\n\n\n\n\nTsVerticalSpacingDirective\n\nTsVerticalSpacingDirective\n\n\n\nTsSpacingModule\n\nTsSpacingModule\n\nTsSpacingModule -->\n\nTsVerticalSpacingDirective->TsSpacingModule\n\n\n\n\n\nTsVerticalSpacingDirective \n\nTsVerticalSpacingDirective \n\nTsVerticalSpacingDirective  -->\n\nTsSpacingModule->TsVerticalSpacingDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/spacing/spacing.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsVerticalSpacingDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsVerticalSpacingDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsVerticalSpacingDirective } from './vertical-spacing.directive';\n\nexport * from './vertical-spacing.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TsVerticalSpacingDirective,\n  ],\n  exports: [\n    TsVerticalSpacingDirective,\n  ],\n})\nexport class TsSpacingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsTableComponent.html":{"url":"components/TsTableComponent.html","title":"component - TsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsTableComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/table/table.component.ts\n\n\n    \n        Description\n    \n    \n        Wrapper for the CdkTable with Material design styles.\n\n    \n\n    \n        Extends\n    \n    \n            CdkTable\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsTable\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-table\n            \n\n            \n                styleUrls\n                table.component.scss\n            \n\n\n            \n                template\n                \n  \n    \n    \n    \n  \n\n\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n\nTable of Contents\n\nBasic usage\n1. Define the table's columns\n2. Define the table's rows\n3. Provide data\n4. Full HTML example\n\n\nDynamically update table data\nDynamic columns\nSorting by column\nRow selection\nNo-wrap for a column\nMin-width for a column\nFull example with pagination, sorting and dynamic columns\n\n\nBasic usage\n1. Define the table's columns\nDefine the table's columns. Each column definition should be given a unique name and contain the\ncontent for its header and row cells.\nHere's a simple column definition with the name userName. The header cell contains the text Username\nand the row cell will render the name property of each row's data.\n\n  \n    Username\n  \n\n  \n    {{ item.username }}\n  \n2. Define the table's rows\nAfter defining your columns, provide the header and data row templates that will be rendered out by\nthe table. Each row needs to be given a list of the columns that it should contain. The order of the\nnames will define the order of the cells rendered.\nIt is not required to provide a list of all the defined column names, but only the ones that you\nwant to have rendered.\n\n\n\n\n\n3. Provide data\nThe column and row definitions now capture how data will render - all that's left is to provide the\ndata itself.\nCreate an instance of TsTableDataSource and set the items to be displayed to the data property.\nthis.myDataSource = new TsTableDataSource();\nthis.myDataSource.data = dataToRender;\n  ...\nThe DataSource can be seeded with initial data:\nthis.myDataSource = new TsTableDataSource(INITIAL_DATA);An interface for your table item can be passed to TsTableDataSource for stricter typing:\nexport interface MyTableItem {\n  name: string;\n  id: number;\n}\n\nthis.myDataSource: TsTableDataSource = new TsTableDataSource(INITIAL_DATA)4. Full HTML example\n\n\n\n  \n  \n    \n      Username\n    \n\n    \n      {{ item.username }}\n    \n  \n\n  \n  \n    \n      Age\n    \n\n    \n      {{ item.age }}\n    \n  \n\n  \n  \n  \n\n  \n  \n  \n\nDynamically update table data\nYour data source was created during the bootstraping of your component:\nthis.myDataSource = new TsTableDataSource();Simply assign the new data to myDataSource.data. The table will flush the old data and display the\nnew data:\nthis.myDataSource.data = dataToRender;Dynamic columns\nEnable dynamic columns using a TsSelectComponent:\n// Define a data source\nthis.myDataSource = new TsTableDataSource();\n\n// Define all available columns (`TsSelectComponent` requires an array of objects)\nallColumns = [\n  {\n    name: 'Username',\n    myValue: 'username',\n  },\n  {\n    name: 'Age',\n    myValue: 'age',\n  },\n];Both the TsSelectComponent and the tsRowDef columns input should reference the same ngModel\n(displayedColumns in this example).\n\n\n\n  \n\n  \n  \n  \n\n  \n  \n  \n\nSorting by column\nTo add sorting behavior to the table, add the tsSort directive to the  and add\nts-sort-header to each column header cell that should trigger sorting. Provide the\nTsSortDirective directive to the TsTableDataSource and it will automatically listen for sorting\nchanges and change the order of data rendered by the table.\nBy default, the TsTableDataSource sorts with the assumption that the sorted column's name matches\nthe data property name that the column displays. For example, the following column definition is\nnamed position, which matches the name of the property displayed in the row cell.\n\n\n\n  \n  \n    \n    \n      Position\n    \n\n    \n      \n      {{ element.position }}\n    \n  \n\nIn your class, get a reference to the TsSortDirective using @ViewChild:\nimport { AfterViewInit } from '@angular/core';\nimport { TsSortDirective } from '@terminus/ui';\n\nexport class TableComponent implements AfterViewInit {\n  // Get a reference to the TsSortDirective instance\n  @ViewChild(TsSortDirective) sort: TsSortDirective;\n\n  public ngAfterViewInit(): void {\n    // Subscribe to the sortChange event to reset pagination, fetch new data, etc\n    this.sort.sortChange.subscribe(() => {\n      // Table was sorted - go get new data!\n    });\n  }\n}Row selection\nPossible but not implemented until a valid use-case arises.\nNo-wrap for a column\nSometimes a column's content should not wrap even at small viewport sizes. Adding the directive\nnoWrap=\"true\" to the column will keep then contents from wrapping regardless of the viewport\nwidth.\n\n\n  \n    Created\n  \n  \n    {{ item.created_at | date:shortDate }}\n  \nMin-width for a column\nDefining a minimum width for specific columns can help the layout not compress certain columns past\na readable point. Add the directive minWidth and pass it any valid CSS min-width value (100px,\n10%, 12rem, etc..).\n\n\n  \n    Created\n  \n  \n    {{ item.created_at | date:shortDate }}\n  \n\nFull example with pagination, sorting and dynamic columns\nimport {\n  Component,\n  ViewChild,\n  AfterViewInit,\n} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { merge, Observable, of } from 'rxjs';\nimport { startWith } from 'rxjs/operators/startWith';\nimport { map } from 'rxjs/operators/map';\nimport { switchMap } from 'rxjs/operators/switchMap';\nimport { catchError } from 'rxjs/operators/catchError';\n\nimport {\n  TsTableDataSource,\n  TsSortDirective,\n  TsPaginatorComponent,\n  TsPaginatorMenuItem,\n} from '@terminus/ui';\n\n\n@Component({\n  selector: 'my-component',\n  template: `\n    \n    \n      \n    \n\n\n    \n\n      \n        \n          Created\n        \n        \n          {{ item.created_at | date:shortDate }}\n        \n      \n\n      \n        \n          Number\n        \n        \n          {{ item.number }}\n        \n      \n\n      \n        \n          Title\n        \n        \n          {{ item.title }}\n        \n      \n\n      \n        \n          State\n        \n        \n          {{ item.state }}\n        \n      \n\n      \n        \n          Comments\n        \n        \n          {{ item.comments }}\n        \n      \n\n      \n      \n\n      \n      \n\n    \n\n\n    \n    \n      \n    \n  `,\n})\nexport class TableComponent implements AfterViewInit {\n  allColumns: any[] = [\n    {\n      name: 'Created',\n      value: 'created',\n    },\n    {\n      name: 'Title',\n      value: 'title',\n    },\n    {\n      name: 'Comments',\n      value: 'comments',\n    },\n    {\n      name: 'State',\n      value: 'state',\n    },\n    {\n      name: 'Number',\n      value: 'number',\n    },\n  ];\n  displayedColumns: string[] = [\n    'created',\n    'number',\n    'title',\n    'state',\n    'comments',\n  ];\n  exampleDatabase: ExampleHttpDao | null;\n  dataSource: TsTableDataSource = new TsTableDataSource();\n  resultsLength: number = 0;\n\n  @ViewChild(TsSortDirective)\n  sort: TsSortDirective;\n\n  @ViewChild(TsPaginatorComponent)\n  paginator: TsPaginatorComponent;\n\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.exampleDatabase = new ExampleHttpDao(this.http);\n\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => {\n      this.paginator.currentPageIndex = 0;\n    });\n\n    // Fetch new data anytime the sort is changed, the page is changed, or the records shown per\n    // page is changed\n    merge(this.sort.sortChange, this.paginator.pageSelect, this.paginator.recordsPerPageChange)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          return this.exampleDatabase.getRepoIssues(\n            this.sort.active,\n            this.sort.direction,\n            this.paginator.currentPageIndex,\n            this.paginator.recordsPerPage,\n          );\n        }),\n        map(data => {\n          console.log('Demo: fetched data: ', data)\n          this.resultsLength = data.total_count;\n\n          return data.items;\n        }),\n        catchError(() => {\n          // Catch if the GitHub API has reached its rate limit. Return empty data.\n          console.warn('GitHub API rate limit has been reached!')\n          return of([]);\n        })\n      ).subscribe(data => {\n        this.dataSource.data = data;\n      });\n  }\n}\n\n\nexport interface GithubApi {\n  items: GithubIssue[];\n  total_count: number;\n}\n\nexport interface GithubIssue {\n  created_at: string;\n  number: string;\n  state: string;\n  title: string;\n}\n\n/**\n * An example database that this example uses to retrieve data for the table.\n */\nexport class ExampleHttpDao {\n  constructor(private http: HttpClient) {}\n\n  getRepoIssues(sort: string, order: string, page: number, perPage: number): Observable {\n    const href = 'https://api.github.com/search/issues';\n    const requestUrl = `${href}?q=repo:GetTerminus/terminus-ui`;\n    const requestParams = `&sort=${sort}&order=${order}&page=${page + 1}&per_page=${perPage}`;\n\n    return this.http.get(`${requestUrl}${requestParams}`);\n  }\n}\n    \n\n    \n        import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CdkTable,\n} from '@angular/cdk/table';\n\n\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\n@Component({\n  selector: 'ts-table',\n  template: `\n    \n      \n        \n        \n        \n      \n    \n  `,\n  styleUrls: ['./table.component.scss'],\n  host: {\n    class: 'ts-table',\n  },\n  exportAs: 'tsTable',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TsTableComponent extends CdkTable { }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsTableDataSource.html":{"url":"classes/TsTableDataSource.html","title":"class - TsTableDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsTableDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/table-data-source.ts\n        \n\n            \n                Description\n            \n            \n                Data source that accepts a client-side data array and includes native support of filtering,\nsorting (using TsSortDirective), and paginator (using TsPaginatorComponent).\n\n            \n\n\n            \n                Implements\n            \n            \n                        DataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _data\n                            \n                            \n                                _renderChangesSubscription\n                            \n                            \n                                    Private\n                                _renderData\n                            \n                            \n                                filteredData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _updateChangeSubscription\n                            \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialData: T[])\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/table/table-data-source.ts:48\n                            \n                        \n\n                \n                    \n                            Set up data and change subscriptions\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialData\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _data:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:19\n                            \n                        \n\n                \n                    \n                        Stream that emits when a new data array is set on the data source.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _renderChangesSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _renderChangesSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:30\n                            \n                        \n\n                \n                    \n                        Subscription to the changes that should trigger an update to the table's rendered rows, such\nas filtering, sorting, pagination, or base data changes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _renderData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _renderData:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:24\n                            \n                        \n\n                \n                    \n                        Stream emitting render data to the table (depends on ordered data changes).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filteredData:     T[]\n\n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:38\n                            \n                        \n\n                \n                    \n                        The filtered set of data that has been matched by the filter string, or all the data if there\nis no filter. Useful for knowing the set of data the table represents.\nFor example, a 'selectAll()' function would likely want to select the set of filtered data\nshown to the user rather than all the data.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _updateChangeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n_updateChangeSubscription()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:65\n                            \n                        \n\n\n                \n                    \n                            Subscribe to changes that should trigger an update to the table's rendered rows. When the\nchanges occur, process the current state of the filter, sort, and pagination along with the\nprovided base data and send it to the table for rendering.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connect\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:80\n                            \n                        \n\n\n                \n                    \n                            Used by the TsTableComponent. Called when it connects to the data source.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:86\n                            \n                        \n\n\n                \n                    \n                            Used by the TsTableComponent. Called when it is destroyed. No-op.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/table/table-data-source.ts:46\n                                \n                            \n\n                \n                    \n                        setdata(data: [])\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/table/table-data-source.ts:43\n                                \n                            \n                    \n                        \n                                Array of data that should be rendered by the table, where each object represents one row.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { DataSource } from '@angular/cdk/table';\nimport {\n  BehaviorSubject,\n  Subscription,\n} from 'rxjs';\n\n\n\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using {@link TsSortDirective}), and paginator (using {@link TsPaginatorComponent}).\n */\nexport class TsTableDataSource implements DataSource {\n  /**\n   * Stream that emits when a new data array is set on the data source.\n   */\n  private _data: BehaviorSubject;\n\n  /**\n   * Stream emitting render data to the table (depends on ordered data changes).\n   */\n  private _renderData = new BehaviorSubject([]);\n\n  /**\n   * Subscription to the changes that should trigger an update to the table's rendered rows, such\n   * as filtering, sorting, pagination, or base data changes.\n   */\n  _renderChangesSubscription!: Subscription;\n\n  /**\n   * The filtered set of data that has been matched by the filter string, or all the data if there\n   * is no filter. Useful for knowing the set of data the table represents.\n   * For example, a 'selectAll()' function would likely want to select the set of filtered data\n   * shown to the user rather than all the data.\n   */\n  filteredData!: T[];\n\n  /**\n   * Array of data that should be rendered by the table, where each object represents one row.\n   */\n  set data(data: T[]) {\n    this._data.next(data);\n  }\n  get data() {\n    return this._data.value;\n  }\n\n\n  /**\n   * Set up data and change subscriptions\n   */\n  constructor(initialData: T[] = []) {\n    this._data = new BehaviorSubject(initialData);\n    this._updateChangeSubscription();\n  }\n\n\n  /**\n   * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n   * changes occur, process the current state of the filter, sort, and pagination along with the\n   * provided base data and send it to the table for rendering.\n   */\n  _updateChangeSubscription(): void {\n    if (this._renderChangesSubscription) {\n      this._renderChangesSubscription.unsubscribe();\n    }\n\n    // Watch for base data or filter changes to provide a filtered set of data.\n    this._renderChangesSubscription = this._data\n    // Watched for paged data changes and send the result to the table to render.\n    .subscribe((data) => this._renderData.next(data));\n  }\n\n\n  /**\n   * Used by the {@link TsTableComponent}. Called when it connects to the data source.\n   */\n  connect() { return this._renderData; }\n\n\n  /**\n   * Used by the {@link TsTableComponent}. Called when it is destroyed. No-op.\n   */\n  disconnect() {}\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsTableModule.html":{"url":"modules/TsTableModule.html","title":"module - TsTableModule","body":"\n                   \n\n\n\n\n  Modules\n  TsTableModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsTableModule\n\n\n\ncluster_TsTableModule_declarations\n\n\n\ncluster_TsTableModule_TsCellDefDirective_providers\n\n\n\ncluster_TsTableModule_imports\n\n\n\ncluster_TsTableModule_exports\n\n\n\n\nTsCellDefDirective\n\nTsCellDefDirective\n\n\n\nTsTableModule\n\nTsTableModule\n\nTsTableModule -->\n\nTsCellDefDirective->TsTableModule\n\n\n\n\n\nTsCellDirective\n\nTsCellDirective\n\nTsTableModule -->\n\nTsCellDirective->TsTableModule\n\n\n\n\n\nTsColumnDefDirective\n\nTsColumnDefDirective\n\nTsTableModule -->\n\nTsColumnDefDirective->TsTableModule\n\n\n\n\n\nTsHeaderCellDefDirective\n\nTsHeaderCellDefDirective\n\nTsTableModule -->\n\nTsHeaderCellDefDirective->TsTableModule\n\n\n\n\n\nTsHeaderCellDirective\n\nTsHeaderCellDirective\n\nTsTableModule -->\n\nTsHeaderCellDirective->TsTableModule\n\n\n\n\n\nTsHeaderRowComponent\n\nTsHeaderRowComponent\n\nTsTableModule -->\n\nTsHeaderRowComponent->TsTableModule\n\n\n\n\n\nTsHeaderRowDefDirective\n\nTsHeaderRowDefDirective\n\nTsTableModule -->\n\nTsHeaderRowDefDirective->TsTableModule\n\n\n\n\n\nTsRowComponent\n\nTsRowComponent\n\nTsTableModule -->\n\nTsRowComponent->TsTableModule\n\n\n\n\n\nTsRowDefDirective\n\nTsRowDefDirective\n\nTsTableModule -->\n\nTsRowDefDirective->TsTableModule\n\n\n\n\n\nTsTableComponent\n\nTsTableComponent\n\nTsTableModule -->\n\nTsTableComponent->TsTableModule\n\n\n\n\n\nTsCellDefDirective \n\nTsCellDefDirective \n\nTsCellDefDirective  -->\n\nTsTableModule->TsCellDefDirective \n\n\n\n\n\nTsCellDirective \n\nTsCellDirective \n\nTsCellDirective  -->\n\nTsTableModule->TsCellDirective \n\n\n\n\n\nTsColumnDefDirective \n\nTsColumnDefDirective \n\nTsColumnDefDirective  -->\n\nTsTableModule->TsColumnDefDirective \n\n\n\n\n\nTsHeaderCellDefDirective \n\nTsHeaderCellDefDirective \n\nTsHeaderCellDefDirective  -->\n\nTsTableModule->TsHeaderCellDefDirective \n\n\n\n\n\nTsHeaderCellDirective \n\nTsHeaderCellDirective \n\nTsHeaderCellDirective  -->\n\nTsTableModule->TsHeaderCellDirective \n\n\n\n\n\nTsHeaderRowComponent \n\nTsHeaderRowComponent \n\nTsHeaderRowComponent  -->\n\nTsTableModule->TsHeaderRowComponent \n\n\n\n\n\nTsHeaderRowDefDirective \n\nTsHeaderRowDefDirective \n\nTsHeaderRowDefDirective  -->\n\nTsTableModule->TsHeaderRowDefDirective \n\n\n\n\n\nTsRowComponent \n\nTsRowComponent \n\nTsRowComponent  -->\n\nTsTableModule->TsRowComponent \n\n\n\n\n\nTsRowDefDirective \n\nTsRowDefDirective \n\nTsRowDefDirective  -->\n\nTsTableModule->TsRowDefDirective \n\n\n\n\n\nTsTableComponent \n\nTsTableComponent \n\nTsTableComponent  -->\n\nTsTableModule->TsTableComponent \n\n\n\n\n\n{ : , :  }\n\n{ : , :  }\n\nTsCellDefDirective -->\n\n{ : , :  }->TsCellDefDirective\n\n\n\nTsColumnDefDirective -->\n\n{ : , :  }->TsColumnDefDirective\n\n\n\nTsHeaderCellDefDirective -->\n\n{ : , :  }->TsHeaderCellDefDirective\n\n\n\nTsHeaderRowDefDirective -->\n\n{ : , :  }->TsHeaderRowDefDirective\n\n\n\nTsRowDefDirective -->\n\n{ : , :  }->TsRowDefDirective\n\n\n\n\n\nTsPaginatorModule\n\nTsPaginatorModule\n\nTsTableModule -->\n\nTsPaginatorModule->TsTableModule\n\n\n\n\n\nTsSortModule\n\nTsSortModule\n\nTsTableModule -->\n\nTsSortModule->TsTableModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/table/table.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Much of this was lifted directly from Angular Material. I highly recommend checking out their\nsource code: https://github.com/angular/material2/tree/master/src/lib/table\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCellDefDirective\n                            \n                            \n                                TsCellDirective\n                            \n                            \n                                TsColumnDefDirective\n                            \n                            \n                                TsHeaderCellDefDirective\n                            \n                            \n                                TsHeaderCellDirective\n                            \n                            \n                                TsHeaderRowComponent\n                            \n                            \n                                TsHeaderRowDefDirective\n                            \n                            \n                                TsRowComponent\n                            \n                            \n                                TsRowDefDirective\n                            \n                            \n                                TsTableComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsPaginatorModule\n                            \n                            \n                                    TsSortModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCellDefDirective\n                            \n                            \n                                    TsCellDirective\n                            \n                            \n                                    TsColumnDefDirective\n                            \n                            \n                                    TsHeaderCellDefDirective\n                            \n                            \n                                    TsHeaderCellDirective\n                            \n                            \n                                    TsHeaderRowComponent\n                            \n                            \n                                    TsHeaderRowDefDirective\n                            \n                            \n                                    TsRowComponent\n                            \n                            \n                                    TsRowDefDirective\n                            \n                            \n                                    TsTableComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { TsSortModule } from './../sort/sort.module';\nimport { TsPaginatorModule } from './../paginator/paginator.module';\nimport {\n  TsCellDirective,\n  TsCellDefDirective,\n  TsColumnDefDirective,\n  TsHeaderCellDirective,\n  TsHeaderCellDefDirective,\n} from './cell';\nimport {\n  TsHeaderRowComponent,\n  TsHeaderRowDefDirective,\n  TsRowComponent,\n  TsRowDefDirective,\n} from './row';\nimport { TsTableComponent } from './table.component';\n\nexport * from './table-data-source';\nexport * from './cell';\nexport * from './row';\nexport * from './table.component';\nexport * from './../sort/sort.module';\n\n\n/**\n * Much of this was lifted directly from Angular Material. I highly recommend checking out their\n * source code: https://github.com/angular/material2/tree/master/src/lib/table\n */\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CdkTableModule,\n    TsSortModule,\n    TsPaginatorModule,\n  ],\n  declarations: [\n    TsCellDefDirective,\n    TsCellDirective,\n    TsColumnDefDirective,\n    TsHeaderCellDefDirective,\n    TsHeaderCellDirective,\n    TsHeaderRowComponent,\n    TsHeaderRowDefDirective,\n    TsRowComponent,\n    TsRowDefDirective,\n    TsTableComponent,\n  ],\n  exports: [\n    TsCellDefDirective,\n    TsCellDirective,\n    TsColumnDefDirective,\n    TsHeaderCellDefDirective,\n    TsHeaderCellDirective,\n    TsHeaderRowComponent,\n    TsHeaderRowDefDirective,\n    TsRowComponent,\n    TsRowDefDirective,\n    TsTableComponent,\n  ],\n})\nexport class TsTableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsTimeAgoPipe.html":{"url":"pipes/TsTimeAgoPipe.html","title":"pipe - TsTimeAgoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsTimeAgoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/time-ago/time-ago.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsTimeAgo\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string | Date, comparedDate: string | Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/time-ago/time-ago.pipe.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string | Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        comparedDate\n                                                        \n                                                                    string | Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n  isDevMode,\n} from '@angular/core';\nimport {\n  isValid,\n  formatDistance,\n} from 'date-fns';\n\n\n@Pipe({\n  name: 'tsTimeAgo',\n})\nexport class TsTimeAgoPipe implements PipeTransform {\n  transform(value: string | Date, comparedDate: string | Date): string | undefined {\n    // Check for null values to avoid issues during data-binding\n    if (value == null || value === '') {\n      return;\n    }\n\n    // Check for date validity\n    if (!isValid(value) && isDevMode()) {\n      throw Error(`'${value}' is not a valid date.`);\n    }\n    if (!isValid(comparedDate) && isDevMode()) {\n      throw Error(`'${comparedDate}' is not a valid date.`);\n    }\n\n    // If dealing with a date objects, convert to strings\n    const date1: string = (typeof value === 'string') ? value : new Date(value).toISOString();\n    const date2: string =\n      (typeof comparedDate === 'string') ? comparedDate : new Date(comparedDate).toISOString();\n\n    return formatDistance(date1, date2);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsTitleCasePipe.html":{"url":"pipes/TsTitleCasePipe.html","title":"pipe - TsTitleCasePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsTitleCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/title-case/title-case.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsTitleCase\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/title-case/title-case.pipe.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\n\n\n@Pipe({\n  name: 'tsTitleCase',\n})\nexport class TsTitleCasePipe implements PipeTransform {\n  transform(value: string): string | undefined {\n    // Check for null values to avoid issues during data-binding\n    if (value == null || value === '') {\n      return;\n    }\n\n    return value.toLowerCase().split(' ').map((word) => {\n      return (word.charAt(0).toUpperCase() + word.slice(1));\n    }).join(' ');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsToggleComponent.html":{"url":"components/TsToggleComponent.html","title":"component - TsToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/toggle/toggle.component.ts\n\n\n    \n        Description\n    \n    \n        The is a toggle component\nQA CSS CLASSES\n\nqa-toggle: The toggle element\n\n\n    \n\n    \n        Extends\n    \n    \n            TsReactiveFormBaseComponent\n    \n\n\n    \n        Example\n    \n    \n                \n                    My Toggle!\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                ts-toggle\n            \n\n            \n                styleUrls\n                toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isChecked\n                            \n                            \n                                    Protected\n                                innerValue\n                            \n                            \n                                    Protected\n                                onChangeCallback\n                            \n                            \n                                    Protected\n                                onTouchedCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onBlur\n                            \n                            \n                                    Protected\n                                registerOnChange\n                            \n                            \n                                    Protected\n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                isChecked\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isRequired\n                            \n                            \n                                labelPosition\n                            \n                            \n                                name\n                            \n                            \n                                theme\n                            \n                            \n                                formControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                    \n                        Define the aria label\n\n                            \n                            Type:    string | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:73\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isChecked\n                    \n                    \n                        Allow the checked state to be set\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:79\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the toggle should be disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:92\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                    \n                        Define if the toggle is required\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:98\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                    \n                        Define the position of the label\n\n                            \n                            Type:    \"before\" | \"after\"\n\n                            \n                        \n                            Default value: 'after'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:104\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        Define the input name for the toggle\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'toggle'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:110\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:116\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        Define the form control to get access to validators\n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        Emit an event each time the toggle value changes\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:122\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onBlur\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onBlur()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:61\n                            \n                        \n\n\n                \n                    \n                            Set touched on blur\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:69\n                            \n                        \n\n\n                \n                    \n                            Register onChange callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:77\n                            \n                        \n\n\n                \n                    \n                            Register onTouched callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:85\n                            \n                        \n\n\n                \n                    \n                            Write value to inner value (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _isChecked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _isChecked:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            innerValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        innerValue:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:26\n                            \n                        \n\n                \n                    \n                        Define the internal data model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onChangeCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onChangeCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:31\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onTouchedCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onTouchedCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:36\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isChecked\n                    \n                \n\n                \n                    \n                        getisChecked()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:83\n                                \n                            \n\n                \n                    \n                        setisChecked(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:79\n                                \n                            \n                    \n                        \n                                Allow the checked state to be set\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Expose the MatSlideToggleChange event as TsSlideToggleChange. Used by {@link TsToggleComponent}\n */\nexport class TsSlideToggleChange extends MatSlideToggleChange {}\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via our base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsToggleComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * The is a toggle component\n *\n * #### QA CSS CLASSES\n * - `qa-toggle`: The toggle element\n *\n * @example\n * My Toggle!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss'],\n  host: {\n    class: 'ts-toggle',\n  },\n  providers: [CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsToggleComponent extends TsReactiveFormBaseComponent {\n  /**\n   * Define the aria label\n   */\n  @Input()\n  public ariaLabel: string | undefined;\n\n  /**\n   * Allow the checked state to be set\n   */\n  @Input()\n  public set isChecked(value: boolean) {\n    this._isChecked = coerceBooleanProperty(value);\n    this.value = this._isChecked;\n  }\n  public get isChecked(): boolean {\n    return this._isChecked;\n  }\n  private _isChecked: boolean = false;\n\n  /**\n   * Define if the toggle should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the toggle is required\n   */\n  @Input()\n  public isRequired: boolean = true;\n\n  /**\n   * Define the position of the label\n   */\n  @Input()\n  public labelPosition: 'before' | 'after' = 'after';\n\n  /**\n   * Define the input name for the toggle\n   */\n  @Input()\n  public name: string = 'toggle';\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit an event each time the toggle value changes\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsToggleModule.html":{"url":"modules/TsToggleModule.html","title":"module - TsToggleModule","body":"\n                   \n\n\n\n\n  Modules\n  TsToggleModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsToggleModule\n\n\n\ncluster_TsToggleModule_declarations\n\n\n\ncluster_TsToggleModule_TsToggleComponent_providers\n\n\n\ncluster_TsToggleModule_exports\n\n\n\n\nTsToggleComponent\n\nTsToggleComponent\n\n\n\nTsToggleModule\n\nTsToggleModule\n\nTsToggleModule -->\n\nTsToggleComponent->TsToggleModule\n\n\n\n\n\nTsToggleComponent \n\nTsToggleComponent \n\nTsToggleComponent  -->\n\nTsToggleModule->TsToggleComponent \n\n\n\n\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n\nTsToggleComponent -->\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR->TsToggleComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/toggle/toggle.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsToggleComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsToggleComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { TsToggleComponent } from './toggle.component';\n\nexport * from './toggle.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSlideToggleModule,\n  ],\n  exports: [\n    TsToggleComponent,\n  ],\n  declarations: [\n    TsToggleComponent,\n  ],\n})\nexport class TsToggleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsTooltipComponent.html":{"url":"components/TsTooltipComponent.html","title":"component - TsTooltipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsTooltipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/tooltip/tooltip.component.ts\n\n\n    \n        Description\n    \n    \n        This is the tooltip UI Component\nQA CSS CLASSES\n\nqa-tooltip : Placed on the span element used for this component\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    My Tooltip!\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-tooltip\n            \n\n            \n                styleUrls\n                tooltip.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tooltip.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasUnderline\n                            \n                            \n                                tooltipPosition\n                            \n                            \n                                tooltipValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hasUnderline\n                    \n                    \n                        Define whether there is a dotted underline shown on the text\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/tooltip/tooltip.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipPosition\n                    \n                    \n                        Define the position of the tooltip\n\n                            \n                            Type:    TsTooltipPositionTypes\n\n                            \n                        \n                            Default value: 'below'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/tooltip/tooltip.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipValue\n                    \n                    \n                        Define the content to display within the tooltip\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/tooltip/tooltip.component.ts:59\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\n\n\n/**\n * Define the accepted string values for the {@link TsTooltipComponent} position\n */\nexport type TsTooltipPositionTypes =\n  'left' |\n  'right' |\n  'above' |\n  'below' |\n  'before' |\n  'after'\n;\n\n\n/**\n * This is the tooltip UI Component\n *\n * #### QA CSS CLASSES\n *\n * - qa-tooltip : Placed on the span element used for this component\n *\n * @example\n * My Tooltip!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-tooltip',\n  templateUrl: './tooltip.component.html',\n  styleUrls: ['./tooltip.component.scss'],\n  host: {\n    class: 'ts-tooltip',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsTooltipComponent {\n  /**\n   * Define the position of the tooltip\n   */\n  @Input()\n  public tooltipPosition: TsTooltipPositionTypes = 'below';\n\n  /**\n   * Define the content to display within the tooltip\n   */\n  @Input()\n  public tooltipValue!: string;\n\n  /**\n   * Define whether there is a dotted underline shown on the text\n   */\n  @Input()\n  public hasUnderline: boolean = false;\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsTooltipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsTooltipModule.html":{"url":"modules/TsTooltipModule.html","title":"module - TsTooltipModule","body":"\n                   \n\n\n\n\n  Modules\n  TsTooltipModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsTooltipModule\n\n\n\ncluster_TsTooltipModule_declarations\n\n\n\ncluster_TsTooltipModule_exports\n\n\n\n\nTsTooltipComponent\n\nTsTooltipComponent\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsTooltipModule -->\n\nTsTooltipComponent->TsTooltipModule\n\n\n\n\n\nTsTooltipComponent \n\nTsTooltipComponent \n\nTsTooltipComponent  -->\n\nTsTooltipModule->TsTooltipComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/tooltip/tooltip.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsTooltipComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsTooltipComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { TsTooltipComponent } from './tooltip.component';\n\nexport * from './tooltip.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTooltipModule,\n  ],\n  exports: [\n    TsTooltipComponent,\n  ],\n  declarations: [\n    TsTooltipComponent,\n  ],\n})\nexport class TsTooltipModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsUser.html":{"url":"interfaces/TsUser.html","title":"interface - TsUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the user object interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fullName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                    \n                                \n                                \n                                    \n                                        fullName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's full name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsValidationMessageService.html":{"url":"injectables/TsValidationMessageService.html","title":"injectable - TsValidationMessageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsValidationMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/validation-messages/validation-message.service.ts\n        \n\n            \n                Description\n            \n            \n                Define a service that offers custom validators\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getValidatorErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getValidatorErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValidatorErrorMessage(validatorName: string, validatorValue?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-message.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Return the correct error message for a validator\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        validatorName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe name of the validator\n\n\n                                                        \n                                                \n                                                \n                                                        validatorValue\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe value of the validator\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The error message\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { format } from 'date-fns';\n\n\n/**\n * Define the error message for an invalid email\n */\nconst emailMessage = `Invalid email address.`;\n\n/**\n * Define the error message for an invalid credit card\n */\nconst creditCardMessage = `Invalid credit card number.`;\n\n/**\n * Define the error message for an invalid password\n */\nconst passwordMessage = `Password must be between 6 and 100 characters, and contain a number.`;\n\n\n/*\n * TODO: The consuming app will need a way to pass in the error messages config object so that\n * localization is supported. See https://github.com/GetTerminus/terminus-ui/issues/403\n */\n\n\n/**\n * Define a service that offers custom validators\n */\n@Injectable()\nexport class TsValidationMessageService {\n\n  /**\n   * Return the correct error message for a validator\n   *\n   * @param validatorName - The name of the validator\n   * @param validatorValue - The value of the validator\n   * @return The error message\n   */\n  public getValidatorErrorMessage(validatorName: string, validatorValue?: any): string {\n    const config: {[key: string]: string} = {\n      // Standard responses:\n      required: `Required`,\n      minlength: `Minimum length ${validatorValue.requiredLength}`,\n      maxlength: `Maximum length ${validatorValue.requiredLength}`,\n      // Custom responses:\n      creditCard: creditCardMessage,\n      email: emailMessage,\n      password: passwordMessage,\n      // TODO: Figure out how to abstract pattern messages out so they can be customized per\n      // pattern. (showing a regex pattern to an end user isn't helpful) and we need the ability to\n      // support multiple patterns\n      pattern: `Must contain only letters, numbers or spaces`,\n      maxDate: '',\n      minDate: '',\n      greaterThan: `${validatorValue.actual} is not greater than ${validatorValue.greaterThan}`,\n      greaterThanOrEqual: `${validatorValue.actual} is not greater than or equal to ${validatorValue.greaterThanOrEqual}`,\n      numbers: `Must contain at least ${validatorValue.numbers} numbers`,\n      lessThan: `${validatorValue.actual} must be less than ${validatorValue.lessThan}`,\n      lessThanOrEqual: `${validatorValue.actual} must be less than or equal to ${validatorValue.lessThanOrEqual}`,\n      notUnique: `${validatorValue.actual} has already been selected.`,\n      noResults: `No results found.`,\n      url: `'${validatorValue.actual}' must be a valid URL.`,\n      equalToControl: `'${validatorValue.actual}' must be equal to '${validatorValue.compareValue}'`,\n      lowercase: `Must contain at least ${validatorValue.lowercase} lowercase letters`,\n      uppercase: `Must contain at least ${validatorValue.uppercase} uppercase letters`,\n      fileSize: `Must be smaller than ${validatorValue.max}kb`,\n      fileType: `${validatorValue.actual} is not an accepted MIME type.`,\n      imageDimensions: ``,\n      imageRatio: ``,\n    };\n\n    if (validatorName === 'maxDate') {\n      const message = `Date must be before`;\n      config.maxDate = `${message} ${format(validatorValue.maxDate, 'M/D/YYYY')}`;\n    }\n\n    if (validatorName === 'minDate') {\n      const message = `Date must be after`;\n      config.minDate = `${message} ${format(validatorValue.minDate, 'M/D/YYYY')}`;\n    }\n\n    if (validatorName === 'imageDimensions') {\n      config.imageDimensions = `${validatorValue.actual.width}x${validatorValue.actual.height} is not an allowed image dimension.`;\n    }\n\n    if (validatorName === 'imageRatio') {\n      config.imageRatio = `${validatorValue.actual} is not an allowed image ratio.`;\n    }\n\n    return config[validatorName];\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsValidationMessagesComponent.html":{"url":"components/TsValidationMessagesComponent.html","title":"component - TsValidationMessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsValidationMessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/validation-messages/validation-messages.component.ts\n\n\n    \n        Description\n    \n    \n        A presentational component to render validation messages\nQA CSS CLASSES\n\nqa-validation-message: Placed on the error element used for this component\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-validation-messages\n            \n\n            \n                styleUrls\n                validation-messages.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./validation-messages.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                validateImmediately\n                            \n                            \n                                validateOnChange\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(validationMessageService: TsValidationMessageService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:75\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationMessageService\n                                                  \n                                                        \n                                                                    TsValidationMessageService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                        Define the associated form control\n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validateImmediately\n                    \n                    \n                        Define if the validation should be immediate\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:75\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validateOnChange\n                    \n                    \n                        Define if validation should occur on blur or immediately\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:69\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        validationMessage\n                    \n                \n\n                \n                    \n                        getvalidationMessage()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:38\n                                \n                            \n                    \n                        \n                                Define the error message\n\n\n                                \n                                \n                                \n                                    Returns :     string | null | undefined\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { TsValidationMessageService } from './validation-message.service';\n\n\n/**\n * A presentational component to render validation messages\n *\n * #### QA CSS CLASSES\n * - `qa-validation-message`: Placed on the error element used for this component\n *\n * @example\n * \n */\n@Component({\n  selector: 'ts-validation-messages',\n  templateUrl: './validation-messages.component.html',\n  styleUrls: ['./validation-messages.component.scss'],\n  host: {\n    class: 'ts-validation-messages',\n  },\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsValidationMessagesComponent {\n  /**\n   * Define the error message\n   *\n   * @return The error message or null if no error\n   */\n  public get validationMessage(): string | null | undefined {\n    if (this.control && this.control.errors) {\n      for (const propertyName in this.control.errors) {\n\n        // istanbul ignore else\n        if (propertyName) {\n          // Only show after 'touched' if we are NOT validating on every change\n          const immediatelyOrOnChange = this.validateImmediately || this.validateOnChange;\n          if (immediatelyOrOnChange || (!this.validateOnChange && this.control.touched)) {\n            const errors = this.control.errors[propertyName];\n\n            return this.validationMessageService.getValidatorErrorMessage(propertyName, errors);\n          }\n        }\n\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Define the associated form control\n   */\n  @Input()\n  public control!: FormControl;\n\n  /**\n   * Define if validation should occur on blur or immediately\n   */\n  @Input()\n  public validateOnChange: boolean = false;\n\n  /**\n   * Define if the validation should be immediate\n   */\n  @Input()\n  public validateImmediately: boolean = false;\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private validationMessageService: TsValidationMessageService,\n  ) {}\n\n}\n\n    \n\n    \n        \n  {{ validationMessage }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ validationMessage }}'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChart2Component', 'selector': 'ts-chart2'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsDatepickerComponent', 'selector': 'ts-datepicker'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsChartPointDirective', 'selector': 'ts-point'},{'name': 'TsChartSeriesDirective', 'selector': 'ts-series'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsMaskDirective', 'selector': '[tsMask]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsValidationMessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsValidationMessagesModule.html":{"url":"modules/TsValidationMessagesModule.html","title":"module - TsValidationMessagesModule","body":"\n                   \n\n\n\n\n  Modules\n  TsValidationMessagesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsValidationMessagesModule\n\n\n\ncluster_TsValidationMessagesModule_declarations\n\n\n\ncluster_TsValidationMessagesModule_exports\n\n\n\ncluster_TsValidationMessagesModule_providers\n\n\n\n\nTsValidationMessagesComponent\n\nTsValidationMessagesComponent\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule -->\n\nTsValidationMessagesComponent->TsValidationMessagesModule\n\n\n\n\n\nTsValidationMessagesComponent \n\nTsValidationMessagesComponent \n\nTsValidationMessagesComponent  -->\n\nTsValidationMessagesModule->TsValidationMessagesComponent \n\n\n\n\n\nTsValidationMessageService\n\nTsValidationMessageService\n\nTsValidationMessagesModule -->\n\nTsValidationMessageService->TsValidationMessagesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/validation-messages/validation-messages.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsValidationMessagesComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsValidationMessageService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsValidationMessagesComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { TsValidationMessageService } from './validation-message.service';\nimport { TsValidationMessagesComponent } from './validation-messages.component';\n\nexport * from './validation-message.service';\nexport * from './validation-messages.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatInputModule,\n  ],\n  providers: [\n    TsValidationMessageService,\n  ],\n  exports: [\n    TsValidationMessagesComponent,\n  ],\n  declarations: [\n    TsValidationMessagesComponent,\n  ],\n})\nexport class TsValidationMessagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsValidatorsService.html":{"url":"injectables/TsValidatorsService.html","title":"injectable - TsValidatorsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsValidatorsService\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/validators/validators.service.ts\n        \n\n            \n                Description\n            \n            \n                Define a service that exposes custom form validators for use with reactive forms.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creditCard\n                            \n                            \n                                email\n                            \n                            \n                                equalToControl\n                            \n                            \n                                greaterThan\n                            \n                            \n                                greaterThanOrEqual\n                            \n                            \n                                lessThan\n                            \n                            \n                                lessThanOrEqual\n                            \n                            \n                                lowercase\n                            \n                            \n                                maxDate\n                            \n                            \n                                minDate\n                            \n                            \n                                numbers\n                            \n                            \n                                password\n                            \n                            \n                                uppercase\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creditCard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creditCard:     \n\n                    \n                \n                    \n                        \n                            Default value : creditCardValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     \n\n                    \n                \n                    \n                        \n                            Default value : emailValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            equalToControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        equalToControl:     \n\n                    \n                \n                    \n                        \n                            Default value : equalToControlValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            greaterThan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        greaterThan:     \n\n                    \n                \n                    \n                        \n                            Default value : greaterThanValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            greaterThanOrEqual\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        greaterThanOrEqual:     \n\n                    \n                \n                    \n                        \n                            Default value : greaterThanOrEqualValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lessThan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lessThan:     \n\n                    \n                \n                    \n                        \n                            Default value : lessThanValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lessThanOrEqual\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lessThanOrEqual:     \n\n                    \n                \n                    \n                        \n                            Default value : lessThanOrEqualValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lowercase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lowercase:     \n\n                    \n                \n                    \n                        \n                            Default value : lowercaseValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxDate:     \n\n                    \n                \n                    \n                        \n                            Default value : maxDateValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minDate:     \n\n                    \n                \n                    \n                        \n                            Default value : minDateValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numbers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numbers:     \n\n                    \n                \n                    \n                        \n                            Default value : numbersValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     \n\n                    \n                \n                    \n                        \n                            Default value : passwordValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uppercase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uppercase:     \n\n                    \n                \n                    \n                        \n                            Default value : uppercaseValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     \n\n                    \n                \n                    \n                        \n                            Default value : urlValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:34\n                            \n                        \n\n\n            \n        \n\n\n    \n\n    \n        Validators\n\n\n\n\nTable of Contents\n\nBasic usage\nAvailable validators\nMocking\n\n\nBasic usage\nimport {\n  FormBuilder,\n  FormGroup,\n} from '@angular/forms';\nimport { TsValidatorsService } from '@terminus/ui';\n\n\n@Component({\n  ...\n})\nexport class MyComponent {\n  // Create a form\n  myForm: FormGroup = this.formBuilder.group({\n    email: [\n      null,\n      [\n        // Basic validator\n        this.validatorsService.email(),\n      ],\n    ],\n    greaterThan: [\n      null,\n      [\n        // Validator with a required argument\n        this.validatorsService.greaterThan(10),\n      ],\n    ],\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private validatorsService: TsValidatorsService,\n  ) {}\n\n}Available validators\n\n\n\nValidator\nPurpose\n\n\n\n\ncreditCard\nA credit card number must be valid\n\n\nemail\nAn email address must be valid\n\n\nequalToControl\nA control's value must be equal to another control's value\n\n\ngreaterThan\nA number must be greater than another value\n\n\ngreaterThanOrEqual\nA number must be greater than or equal to another value\n\n\nlessThan\nA number must be less than another value\n\n\nlessThanOrEqual\nA number must be less than or equal to another value\n\n\nlowercase\nA value must contain a minimum amount of lowercase characters\n\n\nmaxDate\nA date must be before a maximum date\n\n\nminDate\nA date must be after a minimum date\n\n\nnumbers\nA minimum amount of numbers must be found\n\n\npassword\nA password must meet certain requirements\n\n\nuppercase\nA value must contain a minimum amount of uppercase characters\n\n\nurl\nA URL must be valid\n\n\n\nMocking\nA mocked version of the service is available for testing as TsValidatorsServiceMock.\nThe mocks consist of Jest mock functions. Based on the class value isValid the validator mock will\nreturn an error message or null.\n\n    \n\n    \n        import { Injectable } from '@angular/core';\n\nimport { creditCardValidator } from './validators/creditCard/creditCard';\nimport { emailValidator } from './validators/email/email';\nimport { equalToControlValidator } from './validators/equalToControl/equalToControl';\nimport { greaterThanOrEqualValidator } from './validators/greaterThanOrEqual/greaterThanOrEqual';\nimport { greaterThanValidator } from './validators/greaterThan/greaterThan';\nimport { lessThanOrEqualValidator } from './validators/lessThanOrEqual/lessThanOrEqual';\nimport { lessThanValidator } from './validators/lessThan/lessThan';\nimport { lowercaseValidator } from './validators/lowercase/lowercase';\nimport { numbersValidator } from './validators/numbers/numbers';\nimport { maxDateValidator } from './validators/maxDate/maxDate';\nimport { minDateValidator } from './validators/minDate/minDate';\nimport { passwordValidator } from './validators/password/password';\nimport { urlValidator } from './validators/url/url';\nimport { uppercaseValidator } from './validators/uppercase/uppercase';\n\n\n/**\n * Define a service that exposes custom form validators for use with reactive forms.\n */\n@Injectable()\nexport class TsValidatorsService {\n  creditCard = creditCardValidator;\n  email = emailValidator;\n  equalToControl = equalToControlValidator;\n  greaterThan = greaterThanValidator;\n  greaterThanOrEqual = greaterThanOrEqualValidator;\n  lessThan = lessThanValidator;\n  lessThanOrEqual = lessThanOrEqualValidator;\n  maxDate = maxDateValidator;\n  minDate = minDateValidator;\n  password = passwordValidator;\n  url = urlValidator;\n  lowercase = lowercaseValidator;\n  uppercase = uppercaseValidator;\n  numbers = numbersValidator;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsVerticalSpacingDirective.html":{"url":"directives/TsVerticalSpacingDirective.html","title":"directive - TsVerticalSpacingDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsVerticalSpacingDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/spacing/vertical-spacing.directive.ts\n        \n\n            \n                Description\n            \n            \n                This is the vertical spacing UI directive. Accepts TsVerticalSpacingTypes\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            \nMy content!\n\n\n\nMy content!\n\n\n\nMy content!\n\n\nhttps://goo.gl/ieUPaG\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsVerticalSpacing]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsVerticalSpacing\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/spacing/vertical-spacing.directive.ts:85\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tsVerticalSpacing\n                    \n                    \n                        Set a spacing class based on the passed in value\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/spacing/vertical-spacing.directive.ts:58\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tsVerticalSpacing\n                    \n                \n\n\n                \n                    \n                        settsVerticalSpacing(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/spacing/vertical-spacing.directive.ts:58\n                                \n                            \n                    \n                        \n                                Set a spacing class based on the passed in value\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                            \n                                                                    \nThe spacing value passed in.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  isDevMode,\n} from '@angular/core';\n\nimport { TS_SPACING } from './spacing.constant';\n\n\n/**\n * Define the accepted string values for {@link TsVerticalSpacingDirective}\n */\nexport type TsVerticalSpacingTypes =\n  'small--2' |\n  'small--1' |\n  'small--0' |\n  'none' |\n  'default--0' |\n  'large--0' |\n  'large--1' |\n  'large--2' |\n  'large--3' |\n  'large--4' |\n  'large--5' |\n  'large--6'\n;\n\n\n/**\n * This is the vertical spacing UI directive. Accepts {@link TsVerticalSpacingTypes}\n *\n * @example\n * \n *   My content!\n * \n *\n * \n *   My content!\n * \n *\n * \n *   My content!\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Directive({\n  selector: '[tsVerticalSpacing]',\n})\nexport class TsVerticalSpacingDirective {\n  /**\n   * Set a spacing class based on the passed in value\n   *\n   * @param value - The spacing value passed in.\n   */\n  @Input()\n  public set tsVerticalSpacing(value: TsVerticalSpacingTypes) {\n    // Set a default value if nothing was passed in\n    if (!value) {\n      value = 'default--0';\n    }\n\n    // Split the string to get the type and size\n    const type: string = value.split('--')[0];\n    const size: number = parseInt(value.split('--')[1], 10);\n    const valueIsNone: boolean = value === 'none';\n\n    // Verify type and size are valid options\n    const typeIsInvalid: boolean = !!(!TS_SPACING[type] || TS_SPACING[type].length \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Version.html":{"url":"classes/Version.html","title":"class - Version","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Version\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/utilities/version/version.ts\n        \n\n            \n                Description\n            \n            \n                Create version information from a version string\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                full\n                            \n                            \n                                    Public\n                                    Readonly\n                                major\n                            \n                            \n                                    Public\n                                    Readonly\n                                minor\n                            \n                            \n                                    Public\n                                    Readonly\n                                patch\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(full: string)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/utilities/version/version.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        full\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            full\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        full:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/version/version.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            major\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        major:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/version/version.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            minor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/version/version.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            patch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        patch:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/version/version.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Version {\n  public readonly major: string;\n  public readonly minor: string;\n  public readonly patch: string;\n\n  constructor(public full: string) {\n    this.major = full.split('.')[0];\n    this.minor = full.split('.')[1];\n    this.patch = full.split('.').slice(2).join('.');\n  }\n}\n\nexport const VERSION = new Version('0.0.0-PLACEHOLDER');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\n\n Contributing to Terminus/UI\n\nWe are always open questions, ideas and code contributions. As a contributor, here are the\nguidelines we would like you to follow.\n\n\nTable of Contents\n\nCode of Conduct\nQuestion or Problem?\nWant a Feature?\nSubmitting an Issue\nSubmitting a Pull Request (PR)\nAfter your pull request is merged\nCoding Rules & Workflow\n\n\n\n\n\n\nCode of Conduct\nHelp us keep Terminus open and inclusive. Please read and follow our Code of Conduct.\nQuestion or Problem?\nIf you find a bug in the source code or a mistake in the documentation, you can help us by\nsubmitting an issue to our GitHub repository. Including an issue\nreproduction (via our StackBlitz starter) is the absolute best way to help the team quickly\ndiagnose the problem. Screenshots are also helpful.\nYou can help the team even more and submit a Pull Request with a fix! :pray:\nWant a Feature?\nYou can request a new feature by submitting an issue to our GitHub\nrepository. If you would like to implement a new feature, please submit an issue with a\nproposal for your work first, to be sure that we can use it.  Please consider what kind of change it\nis:\n\nFor a Major Feature, first open an issue and outline your proposal so that it can be\ndiscussed. This will also allow us to better coordinate our efforts, prevent duplication of work,\nand help you to craft the change so that it is successfully accepted into the project.\nSmall Features can be crafted and directly submitted as a Pull Request.\n\nSubmitting an Issue\nBefore you submit an issue, search existing open/closed issues, as your question may have\nalready been answered.\nIf your issue appears to be a bug, and hasn't been reported, open a new issue.\nHelp us to maximize the effort we can spend fixing issues and adding new\nfeatures by not reporting duplicate issues.  Providing the following information will increase the\nchances of your issue being dealt with quickly:\n\nOverview of the Issue - if an error is being thrown a non-minified stack trace helps\nMotivation for or Use Case - explain what are you trying to do and why the current behavior\n  is a bug for you\nBrowsers and Operating System - is this a problem with all browsers?\nReproduce the Error - provide a live example using our StackBlitz starter or a\n  unambiguous set of steps\nScreenshots - Due to the visual nature of this library, screenshots can help the team triage\n  issues far more quickly than a text description.\nRelated Issues - has a similar issue been reported before?\nSuggest a Fix - if you can't fix the bug yourself, perhaps you can point to what might be\n  causing the problem (line of code or commit)\n\nYou can file new issues by providing the above information here.\nSubmitting a Pull Request (PR)\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\nSearch GitHub for an open or closed PR that relates to your submission. You don't want to\nduplicate effort.\nMake your changes in a new git branch:\ngit checkout -b 312-my-fix-branch master\nNote: You should prefix your branch name with the associated issue number.\n\n\nCreate your patch, including appropriate test cases.\nFollow our coding rules (by verifying all linters pass).\nRun the full test suite and ensure that all tests pass.\nCommit your changes using a descriptive commit message that follows our\ncommit message conventions. Adherence to these conventions is necessary because release notes are\nautomatically generated from these messages. (for this reason it is often advisable to rebase your\nfeature branch to ensure clear, concise commits)\nPush your branch to GitHub:\ngit push my-fork 312-my-fix-branch\n\n\nIn GitHub, send a pull request to terminus-ui:master.\nIf we suggest changes then:\nMake the required updates.\nRe-run all test suites to ensure tests are still passing.\nRe-run all linters.\nRebase your branch and force push to your GitHub repository (this will update your Pull Request):\ngit rebase master -i\ngit push -f\n\n\n\n\n\nThat's it! Thank you for your contribution! :pray:\nAfter your pull request is merged\nAfter your pull request is merged, you can safely delete your branch and pull the changes from the\nmain (upstream) repository:\n\nDelete the remote branch on GitHub either through the GitHub web UI or your local shell:\ngit push my-fork --delete 312-my-fix-branch\n\n\nCheck out the master branch:\ngit checkout master -f\n\n\nDelete the local branch:\ngit branch -D 312-my-fix-branch\n\n\nUpdate your master with the latest upstream version:\ngit pull --ff upstream master\n\n\n\nCoding Rules & Workflow\nTo ensure consistency throughout the source code, keep these rules in mind as you are working:\n\nAll features or bug fixes must be tested by one or more specs (unit-tests).\nAll public API methods must be documented. (Details TBD).\nMost coding styles are enforced via linters\nReference our development documentation for more details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.7\n        \n            @angular/common : ^6.0.7\n        \n            @angular/core : ^6.0.7\n        \n            @angular/flex-layout : 6.0.0-beta.16\n        \n            @angular/forms : ^6.0.7\n        \n            @angular/http : ^6.0.7\n        \n            @angular/platform-browser : ^6.0.7\n        \n            @angular/platform-browser-dynamic : ^6.0.7\n        \n            @angular/router : ^6.0.7\n        \n            @terminus/ngx-tools : ^2.23.0\n        \n            @terminus/ui : ^8.13.1\n        \n            date-fns : 2.0.0-alpha.7\n        \n            highcharts : ^6.1.1\n        \n            ngx-perfect-scrollbar : ^6.2.1\n        \n            rxjs-compat : ^6.2.1\n        \n            text-mask-addons : ^3.7.2\n        \n            text-mask-core : ^5.0.1\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTerminus UI Library\nThe library of UI components used for Terminus applications.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable of Contents\n\nLibrary Purpose\nDocumentation\nAvailable Features\nComponents\nPipes\nServices\nAvailable Validators\n\n\nConstants\nStyle Helpers\n\n\nInstallation\nGlobal Styles\nSCSS Helpers\nContributing\nContributors\nProject Resources\n\n\nLibrary Purpose\nThis library was created to assist Terminus engineers in maintaining a consistent experience across\napplications while following a unified design language.\nThe library is open source with the hopes that others may find solutions and ideas here, as we have\ndone while browsing so many other repositories. While we want to make decisions that are best for\neveryone, in the end, the needs of the Terminus engineering team must come first.\nIf a deviation makes sense for the feature itself, but not for Terminus, we support (and will assist\nin) abstracting the functionality out for generalization.\nThis library is heavily based on Material Design currently. This provides us a way to rely on very\nwell thought out usability and accessibility decisions for areas we have not yet addressed\ninternally. While we hold Material in high regard, we do not believe that all of their decisions are\nbest for the Terminus UI specifically.\nDocumentation\nThe available features table contains links for functional and usage documentation\nfor each feature.\nAvailable Features\n\n\n:hammer: started\n:white_check_mark: available\n:hankey: deprecated\n\n\nComponents\n\n\n\nFeature\nNotes\nStatus\nDemo\nDocs\nUsage\n\n\n\n\nalert\n\n\n\n\n\n\n\nautocomplete\nInput with autocomplete\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nautofocus\nFocus a focusable element on load\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nbadge\n\n\n\n\n\n\n\nbutton\n\n:white_check_mark:\nDemo\nDocs\n\n\n\nbreadcrumbs\n\n\n\n\n\n\n\ncard\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nchart\nCharts, graphs etc\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nchip\n\n\n\n\n\n\n\ncheckbox\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nconfirmation\nAdd a confirmation step to any ts-button\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ncopy\n\n:white_check_mark:\nDemo\nDocs\n\n\n\ncsv entry\nManually enter CSV values\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ndatepicker\nInput with calendar pop-up\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ndate-range\nDual inputs with calendar pop-ups\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ndialog\n\n\n\n\n\n\n\ndivider\n\n\n\n\n\n\n\nexpansion\n\n\n\n\n\n\n\nfile-upload\nFile upload with drag and drop\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ninput mask\nCustom masks for inputs (phone, zip, etc)\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nicon\nSupported icons: https://material.io/icons\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nicon-button\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ninput\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nlink\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nloading overlay\nOverlay with loading spinner\n:white_check_mark:\nDemo\nDocs\n\n\n\nlogin form\nEmail/password with 'remember me' checkbox\n:white_check_mark:\nDemo\nDocs\n\n\n\nmenu\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nnavigation\nGlobal navigation menu\n:white_check_mark:\nDemo\nDocs\n\n\n\npaginator\nPaging controls for collections\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\npipes\nA collection of pipes for Angular\n:white_check_mark:\nDemo\nDocs\n\n\n\nprogress\n\n\n\n\n\n\n\nprogression\ni.e. Stepper, wizard\n\n\n\n\n\n\nradio-group\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nscrollbars\nCustom scrollars for both axis'\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nsearch\ninput with search capabilities\n:white_check_mark:\nDemo\nDocs\n\n\n\nselect\n\n:white_check_mark:\nDemo\nDocs\n\n\n\nspacing\nHelpers for consistent spacing\n:white_check_mark:\nDemo\nDocs\n\n\n\nsort\nUsed by table for column sorting\n:white_check_mark:\n(see table demo)\nDocs\nUsage\n\n\ntable\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ntabs\n\n\n\n\n\n\n\ntoggle\n\n:white_check_mark:\nDemo\nDocs\n\n\n\ntooltip\n\n:white_check_mark:\nDemo\nDocs\n\n\n\nPipes\n:books: Pipes Documentation\n\n:circus_tent: Pipes Demo\n\n\n\nPipe\nNotes\nStatus\n\n\n\n\ntsDate\nshort, medium, extended, timestamp\n:white_check_mark:\n\n\ntsRoundNumber\nRound a number to a specific precision\n:white_check_mark:\n\n\ntsSentenceCase\nConvert string casing to sentence-case\n:white_check_mark:\n\n\ntsTimeAgo\nHuman-readable time span\n:white_check_mark:\n\n\ntsTitleCase\nTitle Case A String\n:white_check_mark:\n\n\n\nServices\n\n\n\nFeature\nNotes\nStatus\nDemo\nDocs\nUsage\n\n\n\n\nValidators\nExpose custom validation methods for reactive forms\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\n\nAvailable Validators\n\n\n\nName\nPurpose\n\n\n\n\ncreditCard\nA credit card number must be valid\n\n\nemail\nAn email address must be valid\n\n\nequalToControl\nA control's value must be equal to another control's value\n\n\ngreaterThan\nA number must be greater than another value\n\n\ngreaterThanOrEqual\nA number must be greater than or equal to another value\n\n\nlessThan\nA number must be less than another value\n\n\nlessThanOrEqual\nA number must be less than or equal to another value\n\n\nlowercase\nA value must contain a minimum amount of lowercase characters\n\n\nminDate\nA date must be after a minimum date\n\n\nmaxDate\nA date must be before a maximum date\n\n\npassword\nA password must meet certain requirements\n\n\nurl\nA URL must be valid\n\n\n\nConstants\n\n\n\nFeature\nNotes\nStatus\nDemo\nDocs\nUsage\n\n\n\n\nTS_SPACING\nExpose our spacing sizes in TypeScript\n:white_check_mark:\nDemo\n\n\n\n\nStyle Helpers\n\n\n\nFeature\nNotes\nStatus\nDocs\n\n\n\n\nanimation\n\n:hammer:\n\n\n\nassets\n\n:hammer:\n\n\n\nbreakpoints\n\n:white_check_mark:\nDocs\n\n\ncolors\n\n:white_check_mark:\nDocs\n\n\ncursors\n\n:white_check_mark:\nDocs\n\n\nlayout\n\n:white_check_mark:\nDocs\n\n\nshadows\n\n:white_check_mark:\nDocs\n\n\nspacing\n\n:white_check_mark:\nDocs\n\n\ntypography\n\n:white_check_mark:\nDocs\n\n\nz-index\n\n:white_check_mark:\nDocs\n\n\n\nInstallation\nInstall the library and required dependencies:\n$ yarn add @terminus/ui @terminus/ngx-tools @angular/flex-layout@6.0.0-beta.15 date-fns@2.0.0-alpha.7Global Styles\nTo use the global styles, import the CSS file into your stylesheets:\n@import '@terminus/ui/terminus-ui.css'SCSS Helpers\nTo use the provided SCSS helper methods/variables/mixins, import the helpers file from @terminus/ui:\n@import '~@terminus/ui/helpers'Contributing\nView the contribution documentation and the development documentation.\nContributors\nThanks goes to these wonderful people (emoji key):\n\n\n\n\n\nBenjamin Charity&#x1F4BB; &#x1F4D6; ⚠️ &#x1F3A8; &#x1F914; &#x1F440; &#x1F527;\ncoreyterminator&#x1F4BB;\nWendy&#x1F41B; &#x1F4BB;\nBrian Malinconico&#x1F41B; &#x1F914;\nDavid Harkness&#x1F4BB;\nkal93&#x1F41B;\ndivyameher&#x1F41B;\n\n\n\n\nDevon Peet&#x1F3A8; &#x1F914;\ndean jones&#x1F4BB;\n\n\n\n\nThis project follows the all-contributors specification. Contributions of any kind welcome!\nProject Resources\n\nSemantic Release - Automatically release versioned release to NPM and generate\n  a changelog in the Github tag.\nCommitizen - Interactive cli for enforcing commit message format.\nCommitizen VSCode Plugin - VSCode plugin for commitizen.\nDoctoc - Generate documentation table of contents.\nCodeCov - Code coverage reporting.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright (c) 2018 Terminus Software, LLC.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TerminusUIModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsAutocompleteModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsAutofocusModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsButtonModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsCSVEntryModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsCardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsChart2Module\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsChartModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsCheckboxModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsConfirmationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsCopyModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsDateRangeModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsDatepickerModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsFileUploadModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsIconButtonModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsIconModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsInputModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsLinkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsLoadingOverlayModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsLoginFormModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsMaskModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsMenuModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsNavigationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsPaginatorModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsPipesModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsRadioGroupModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsScrollbarsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsSearchModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsSelectModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsSortModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsSpacingModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsTableModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsToggleModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsTooltipModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsValidationMessagesModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TerminusUIModule\n\n\n\ncluster_TerminusUIModule_declarations\n\n\n\ncluster_TerminusUIModule_imports\n\n\n\ncluster_TerminusUIModule_exports\n\n\n\ncluster_TerminusUIModule_providers\n\n\n\ncluster_TsAutocompleteModule\n\n\n\ncluster_TsAutocompleteModule_declarations\n\n\n\ncluster_TsAutocompleteModule_exports\n\n\n\ncluster_TsAutofocusModule\n\n\n\ncluster_TsAutofocusModule_declarations\n\n\n\ncluster_TsAutofocusModule_exports\n\n\n\ncluster_TsButtonModule\n\n\n\ncluster_TsButtonModule_declarations\n\n\n\ncluster_TsButtonModule_exports\n\n\n\ncluster_TsCSVEntryModule\n\n\n\ncluster_TsCSVEntryModule_declarations\n\n\n\ncluster_TsCSVEntryModule_exports\n\n\n\ncluster_TsCardModule\n\n\n\ncluster_TsCardModule_declarations\n\n\n\ncluster_TsCardModule_exports\n\n\n\ncluster_TsChart2Module\n\n\n\ncluster_TsChart2Module_declarations\n\n\n\ncluster_TsChart2Module_exports\n\n\n\ncluster_TsChart2Module_providers\n\n\n\ncluster_TsChartModule\n\n\n\ncluster_TsChartModule_declarations\n\n\n\ncluster_TsChartModule_exports\n\n\n\ncluster_TsChartModule_providers\n\n\n\ncluster_TsCheckboxModule\n\n\n\ncluster_TsCheckboxModule_declarations\n\n\n\ncluster_TsCheckboxModule_exports\n\n\n\ncluster_TsConfirmationModule\n\n\n\ncluster_TsConfirmationModule_declarations\n\n\n\ncluster_TsConfirmationModule_exports\n\n\n\ncluster_TsCopyModule\n\n\n\ncluster_TsCopyModule_declarations\n\n\n\ncluster_TsCopyModule_exports\n\n\n\ncluster_TsDateRangeModule\n\n\n\ncluster_TsDateRangeModule_declarations\n\n\n\ncluster_TsDateRangeModule_exports\n\n\n\ncluster_TsDatepickerModule\n\n\n\ncluster_TsDatepickerModule_declarations\n\n\n\ncluster_TsDatepickerModule_TsDatepickerComponent_providers\n\n\n\ncluster_TsDatepickerModule_exports\n\n\n\ncluster_TsFileUploadModule\n\n\n\ncluster_TsFileUploadModule_declarations\n\n\n\ncluster_TsFileUploadModule_TsFileUploadComponent_providers\n\n\n\ncluster_TsFileUploadModule_exports\n\n\n\ncluster_TsFileUploadModule_providers\n\n\n\ncluster_TsIconButtonModule\n\n\n\ncluster_TsIconButtonModule_declarations\n\n\n\ncluster_TsIconButtonModule_exports\n\n\n\ncluster_TsIconModule\n\n\n\ncluster_TsIconModule_declarations\n\n\n\ncluster_TsIconModule_exports\n\n\n\ncluster_TsInputModule\n\n\n\ncluster_TsInputModule_declarations\n\n\n\ncluster_TsInputModule_TsInputComponent_providers\n\n\n\ncluster_TsInputModule_exports\n\n\n\ncluster_TsLinkModule\n\n\n\ncluster_TsLinkModule_declarations\n\n\n\ncluster_TsLinkModule_exports\n\n\n\ncluster_TsLoadingOverlayModule\n\n\n\ncluster_TsLoadingOverlayModule_declarations\n\n\n\ncluster_TsLoadingOverlayModule_exports\n\n\n\ncluster_TsLoginFormModule\n\n\n\ncluster_TsLoginFormModule_declarations\n\n\n\ncluster_TsLoginFormModule_exports\n\n\n\ncluster_TsMaskModule\n\n\n\ncluster_TsMaskModule_declarations\n\n\n\ncluster_TsMaskModule_TsMaskDirective_providers\n\n\n\ncluster_TsMaskModule_exports\n\n\n\ncluster_TsMenuModule\n\n\n\ncluster_TsMenuModule_declarations\n\n\n\ncluster_TsMenuModule_exports\n\n\n\ncluster_TsNavigationModule\n\n\n\ncluster_TsNavigationModule_declarations\n\n\n\ncluster_TsNavigationModule_exports\n\n\n\ncluster_TsPaginatorModule\n\n\n\ncluster_TsPaginatorModule_declarations\n\n\n\ncluster_TsPaginatorModule_exports\n\n\n\ncluster_TsPipesModule\n\n\n\ncluster_TsPipesModule_declarations\n\n\n\ncluster_TsPipesModule_exports\n\n\n\ncluster_TsRadioGroupModule\n\n\n\ncluster_TsRadioGroupModule_declarations\n\n\n\ncluster_TsRadioGroupModule_TsRadioGroupComponent_providers\n\n\n\ncluster_TsRadioGroupModule_exports\n\n\n\ncluster_TsScrollbarsModule\n\n\n\ncluster_TsScrollbarsModule_declarations\n\n\n\ncluster_TsScrollbarsModule_exports\n\n\n\ncluster_TsSearchModule\n\n\n\ncluster_TsSearchModule_declarations\n\n\n\ncluster_TsSearchModule_exports\n\n\n\ncluster_TsSelectModule\n\n\n\ncluster_TsSelectModule_declarations\n\n\n\ncluster_TsSelectModule_TsSelectComponent_providers\n\n\n\ncluster_TsSelectModule_exports\n\n\n\ncluster_TsSortModule\n\n\n\ncluster_TsSortModule_declarations\n\n\n\ncluster_TsSortModule_exports\n\n\n\ncluster_TsSpacingModule\n\n\n\ncluster_TsSpacingModule_declarations\n\n\n\ncluster_TsSpacingModule_exports\n\n\n\ncluster_TsTableModule\n\n\n\ncluster_TsTableModule_declarations\n\n\n\ncluster_TsTableModule_TsCellDefDirective_providers\n\n\n\ncluster_TsTableModule_exports\n\n\n\ncluster_TsToggleModule\n\n\n\ncluster_TsToggleModule_declarations\n\n\n\ncluster_TsToggleModule_TsToggleComponent_providers\n\n\n\ncluster_TsToggleModule_exports\n\n\n\ncluster_TsTooltipModule\n\n\n\ncluster_TsTooltipModule_declarations\n\n\n\ncluster_TsTooltipModule_exports\n\n\n\ncluster_TsValidationMessagesModule\n\n\n\ncluster_TsValidationMessagesModule_declarations\n\n\n\ncluster_TsValidationMessagesModule_exports\n\n\n\ncluster_TsValidationMessagesModule_providers\n\n\n\n\nTsReactiveFormBaseComponent\n\nTsReactiveFormBaseComponent\n\n\n\nTerminusUIModule\n\nTerminusUIModule\n\nTerminusUIModule -->\n\nTsReactiveFormBaseComponent->TerminusUIModule\n\n\n\n\n\nTsAutocompleteModule \n\nTsAutocompleteModule \n\nTsAutocompleteModule  -->\n\nTerminusUIModule->TsAutocompleteModule \n\n\n\n\n\nTsAutofocusModule \n\nTsAutofocusModule \n\nTsAutofocusModule  -->\n\nTerminusUIModule->TsAutofocusModule \n\n\n\n\n\nTsButtonModule \n\nTsButtonModule \n\nTsButtonModule  -->\n\nTerminusUIModule->TsButtonModule \n\n\n\n\n\nTsCSVEntryModule \n\nTsCSVEntryModule \n\nTsCSVEntryModule  -->\n\nTerminusUIModule->TsCSVEntryModule \n\n\n\n\n\nTsCardModule \n\nTsCardModule \n\nTsCardModule  -->\n\nTerminusUIModule->TsCardModule \n\n\n\n\n\nTsChartModule \n\nTsChartModule \n\nTsChartModule  -->\n\nTerminusUIModule->TsChartModule \n\n\n\n\n\nTsCheckboxModule \n\nTsCheckboxModule \n\nTsCheckboxModule  -->\n\nTerminusUIModule->TsCheckboxModule \n\n\n\n\n\nTsConfirmationModule \n\nTsConfirmationModule \n\nTsConfirmationModule  -->\n\nTerminusUIModule->TsConfirmationModule \n\n\n\n\n\nTsCopyModule \n\nTsCopyModule \n\nTsCopyModule  -->\n\nTerminusUIModule->TsCopyModule \n\n\n\n\n\nTsDateRangeModule \n\nTsDateRangeModule \n\nTsDateRangeModule  -->\n\nTerminusUIModule->TsDateRangeModule \n\n\n\n\n\nTsDatepickerModule \n\nTsDatepickerModule \n\nTsDatepickerModule  -->\n\nTerminusUIModule->TsDatepickerModule \n\n\n\n\n\nTsFileUploadModule \n\nTsFileUploadModule \n\nTsFileUploadModule  -->\n\nTerminusUIModule->TsFileUploadModule \n\n\n\n\n\nTsIconButtonModule \n\nTsIconButtonModule \n\nTsIconButtonModule  -->\n\nTerminusUIModule->TsIconButtonModule \n\n\n\n\n\nTsIconModule \n\nTsIconModule \n\nTsIconModule  -->\n\nTerminusUIModule->TsIconModule \n\n\n\n\n\nTsInputModule \n\nTsInputModule \n\nTsInputModule  -->\n\nTerminusUIModule->TsInputModule \n\n\n\n\n\nTsLinkModule \n\nTsLinkModule \n\nTsLinkModule  -->\n\nTerminusUIModule->TsLinkModule \n\n\n\n\n\nTsLoadingOverlayModule \n\nTsLoadingOverlayModule \n\nTsLoadingOverlayModule  -->\n\nTerminusUIModule->TsLoadingOverlayModule \n\n\n\n\n\nTsLoginFormModule \n\nTsLoginFormModule \n\nTsLoginFormModule  -->\n\nTerminusUIModule->TsLoginFormModule \n\n\n\n\n\nTsMaskModule \n\nTsMaskModule \n\nTsMaskModule  -->\n\nTerminusUIModule->TsMaskModule \n\n\n\n\n\nTsMenuModule \n\nTsMenuModule \n\nTsMenuModule  -->\n\nTerminusUIModule->TsMenuModule \n\n\n\n\n\nTsNavigationModule \n\nTsNavigationModule \n\nTsNavigationModule  -->\n\nTerminusUIModule->TsNavigationModule \n\n\n\n\n\nTsPaginatorModule \n\nTsPaginatorModule \n\nTsPaginatorModule  -->\n\nTerminusUIModule->TsPaginatorModule \n\n\n\n\n\nTsRadioGroupModule \n\nTsRadioGroupModule \n\nTsRadioGroupModule  -->\n\nTerminusUIModule->TsRadioGroupModule \n\n\n\n\n\nTsScrollbarsModule \n\nTsScrollbarsModule \n\nTsScrollbarsModule  -->\n\nTerminusUIModule->TsScrollbarsModule \n\n\n\n\n\nTsSearchModule \n\nTsSearchModule \n\nTsSearchModule  -->\n\nTerminusUIModule->TsSearchModule \n\n\n\n\n\nTsSelectModule \n\nTsSelectModule \n\nTsSelectModule  -->\n\nTerminusUIModule->TsSelectModule \n\n\n\n\n\nTsSortModule \n\nTsSortModule \n\nTsSortModule  -->\n\nTerminusUIModule->TsSortModule \n\n\n\n\n\nTsSpacingModule \n\nTsSpacingModule \n\nTsSpacingModule  -->\n\nTerminusUIModule->TsSpacingModule \n\n\n\n\n\nTsTableModule \n\nTsTableModule \n\nTsTableModule  -->\n\nTerminusUIModule->TsTableModule \n\n\n\n\n\nTsToggleModule \n\nTsToggleModule \n\nTsToggleModule  -->\n\nTerminusUIModule->TsToggleModule \n\n\n\n\n\nTsTooltipModule \n\nTsTooltipModule \n\nTsTooltipModule  -->\n\nTerminusUIModule->TsTooltipModule \n\n\n\n\n\nTsValidationMessagesModule \n\nTsValidationMessagesModule \n\nTsValidationMessagesModule  -->\n\nTerminusUIModule->TsValidationMessagesModule \n\n\n\n\n\nTsAutocompleteModule\n\nTsAutocompleteModule\n\nTerminusUIModule -->\n\nTsAutocompleteModule->TerminusUIModule\n\n\n\n\n\nTsAutocompleteComponent \n\nTsAutocompleteComponent \n\nTsAutocompleteComponent  -->\n\nTsAutocompleteModule->TsAutocompleteComponent \n\n\n\n\n\nTsAutofocusModule\n\nTsAutofocusModule\n\nTerminusUIModule -->\n\nTsAutofocusModule->TerminusUIModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsInputModule -->\n\nTsAutofocusModule->TsInputModule\n\n\n\n\n\nTsAutofocusDirective \n\nTsAutofocusDirective \n\nTsAutofocusDirective  -->\n\nTsAutofocusModule->TsAutofocusDirective \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTerminusUIModule -->\n\nTsButtonModule->TerminusUIModule\n\n\n\n\n\nTsCSVEntryModule\n\nTsCSVEntryModule\n\nTsCSVEntryModule -->\n\nTsButtonModule->TsCSVEntryModule\n\n\n\n\n\nTsConfirmationModule\n\nTsConfirmationModule\n\nTsConfirmationModule -->\n\nTsButtonModule->TsConfirmationModule\n\n\n\n\n\nTsFileUploadModule\n\nTsFileUploadModule\n\nTsFileUploadModule -->\n\nTsButtonModule->TsFileUploadModule\n\n\n\n\n\nTsLoginFormModule\n\nTsLoginFormModule\n\nTsLoginFormModule -->\n\nTsButtonModule->TsLoginFormModule\n\n\n\n\n\nTsMenuModule\n\nTsMenuModule\n\nTsMenuModule -->\n\nTsButtonModule->TsMenuModule\n\n\n\n\n\nTsPaginatorModule\n\nTsPaginatorModule\n\nTsPaginatorModule -->\n\nTsButtonModule->TsPaginatorModule\n\n\n\n\n\nTsSearchModule\n\nTsSearchModule\n\nTsSearchModule -->\n\nTsButtonModule->TsSearchModule\n\n\n\n\n\nTsButtonComponent \n\nTsButtonComponent \n\nTsButtonComponent  -->\n\nTsButtonModule->TsButtonComponent \n\n\n\nTerminusUIModule -->\n\nTsCSVEntryModule->TerminusUIModule\n\n\n\n\n\nTsCSVEntryComponent \n\nTsCSVEntryComponent \n\nTsCSVEntryComponent  -->\n\nTsCSVEntryModule->TsCSVEntryComponent \n\n\n\n\n\nTsCardModule\n\nTsCardModule\n\nTerminusUIModule -->\n\nTsCardModule->TerminusUIModule\n\n\n\n\n\nTsCardComponent \n\nTsCardComponent \n\nTsCardComponent  -->\n\nTsCardModule->TsCardComponent \n\n\n\n\n\nTsCardTitleDirective \n\nTsCardTitleDirective \n\nTsCardTitleDirective  -->\n\nTsCardModule->TsCardTitleDirective \n\n\n\n\n\nTsChartModule\n\nTsChartModule\n\nTerminusUIModule -->\n\nTsChartModule->TerminusUIModule\n\n\n\n\n\nTsChartComponent \n\nTsChartComponent \n\nTsChartComponent  -->\n\nTsChartModule->TsChartComponent \n\n\n\n\n\nTsChartPointDirective \n\nTsChartPointDirective \n\nTsChartPointDirective  -->\n\nTsChartModule->TsChartPointDirective \n\n\n\n\n\nTsChartSeriesDirective \n\nTsChartSeriesDirective \n\nTsChartSeriesDirective  -->\n\nTsChartModule->TsChartSeriesDirective \n\n\n\n\n\nTsCheckboxModule\n\nTsCheckboxModule\n\nTerminusUIModule -->\n\nTsCheckboxModule->TerminusUIModule\n\n\n\nTsLoginFormModule -->\n\nTsCheckboxModule->TsLoginFormModule\n\n\n\n\n\nTsCheckboxComponent \n\nTsCheckboxComponent \n\nTsCheckboxComponent  -->\n\nTsCheckboxModule->TsCheckboxComponent \n\n\n\nTerminusUIModule -->\n\nTsConfirmationModule->TerminusUIModule\n\n\n\n\n\nTsConfirmationDirective \n\nTsConfirmationDirective \n\nTsConfirmationDirective  -->\n\nTsConfirmationModule->TsConfirmationDirective \n\n\n\n\n\nTsCopyModule\n\nTsCopyModule\n\nTerminusUIModule -->\n\nTsCopyModule->TerminusUIModule\n\n\n\n\n\nTsCopyComponent \n\nTsCopyComponent \n\nTsCopyComponent  -->\n\nTsCopyModule->TsCopyComponent \n\n\n\n\n\nTsDateRangeModule\n\nTsDateRangeModule\n\nTerminusUIModule -->\n\nTsDateRangeModule->TerminusUIModule\n\n\n\n\n\nTsDateRangeComponent \n\nTsDateRangeComponent \n\nTsDateRangeComponent  -->\n\nTsDateRangeModule->TsDateRangeComponent \n\n\n\n\n\nTsDatepickerModule\n\nTsDatepickerModule\n\nTerminusUIModule -->\n\nTsDatepickerModule->TerminusUIModule\n\n\n\nTsDateRangeModule -->\n\nTsDatepickerModule->TsDateRangeModule\n\n\n\n\n\nTsDatepickerComponent \n\nTsDatepickerComponent \n\nTsDatepickerComponent  -->\n\nTsDatepickerModule->TsDatepickerComponent \n\n\n\nTerminusUIModule -->\n\nTsFileUploadModule->TerminusUIModule\n\n\n\n\n\nTsFileUploadComponent \n\nTsFileUploadComponent \n\nTsFileUploadComponent  -->\n\nTsFileUploadModule->TsFileUploadComponent \n\n\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTerminusUIModule -->\n\nTsIconButtonModule->TerminusUIModule\n\n\n\nTsCSVEntryModule -->\n\nTsIconButtonModule->TsCSVEntryModule\n\n\n\nTsFileUploadModule -->\n\nTsIconButtonModule->TsFileUploadModule\n\n\n\n\n\nTsIconButtonComponent \n\nTsIconButtonComponent \n\nTsIconButtonComponent  -->\n\nTsIconButtonModule->TsIconButtonComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTerminusUIModule -->\n\nTsIconModule->TerminusUIModule\n\n\n\nTsAutocompleteModule -->\n\nTsIconModule->TsAutocompleteModule\n\n\n\nTsButtonModule -->\n\nTsIconModule->TsButtonModule\n\n\n\nTsCSVEntryModule -->\n\nTsIconModule->TsCSVEntryModule\n\n\n\nTsCardModule -->\n\nTsIconModule->TsCardModule\n\n\n\nTsCopyModule -->\n\nTsIconModule->TsCopyModule\n\n\n\nTsFileUploadModule -->\n\nTsIconModule->TsFileUploadModule\n\n\n\nTsIconButtonModule -->\n\nTsIconModule->TsIconButtonModule\n\n\n\nTsInputModule -->\n\nTsIconModule->TsInputModule\n\n\n\n\n\nTsLinkModule\n\nTsLinkModule\n\nTsLinkModule -->\n\nTsIconModule->TsLinkModule\n\n\n\nTsMenuModule -->\n\nTsIconModule->TsMenuModule\n\n\n\n\n\nTsNavigationModule\n\nTsNavigationModule\n\nTsNavigationModule -->\n\nTsIconModule->TsNavigationModule\n\n\n\n\n\nTsRadioGroupModule\n\nTsRadioGroupModule\n\nTsRadioGroupModule -->\n\nTsIconModule->TsRadioGroupModule\n\n\n\n\n\nTsIconComponent \n\nTsIconComponent \n\nTsIconComponent  -->\n\nTsIconModule->TsIconComponent \n\n\n\nTerminusUIModule -->\n\nTsInputModule->TerminusUIModule\n\n\n\nTsAutocompleteModule -->\n\nTsInputModule->TsAutocompleteModule\n\n\n\nTsLoginFormModule -->\n\nTsInputModule->TsLoginFormModule\n\n\n\nTsSearchModule -->\n\nTsInputModule->TsSearchModule\n\n\n\n\n\nTsInputComponent \n\nTsInputComponent \n\nTsInputComponent  -->\n\nTsInputModule->TsInputComponent \n\n\n\nTerminusUIModule -->\n\nTsLinkModule->TerminusUIModule\n\n\n\nTsLoginFormModule -->\n\nTsLinkModule->TsLoginFormModule\n\n\n\n\n\nTsLinkComponent \n\nTsLinkComponent \n\nTsLinkComponent  -->\n\nTsLinkModule->TsLinkComponent \n\n\n\n\n\nTsLoadingOverlayModule\n\nTsLoadingOverlayModule\n\nTerminusUIModule -->\n\nTsLoadingOverlayModule->TerminusUIModule\n\n\n\n\n\nTsLoadingOverlayDirective \n\nTsLoadingOverlayDirective \n\nTsLoadingOverlayDirective  -->\n\nTsLoadingOverlayModule->TsLoadingOverlayDirective \n\n\n\nTerminusUIModule -->\n\nTsLoginFormModule->TerminusUIModule\n\n\n\n\n\nTsLoginFormComponent \n\nTsLoginFormComponent \n\nTsLoginFormComponent  -->\n\nTsLoginFormModule->TsLoginFormComponent \n\n\n\n\n\nTsMaskModule\n\nTsMaskModule\n\nTerminusUIModule -->\n\nTsMaskModule->TerminusUIModule\n\n\n\n\n\nTsMaskDirective \n\nTsMaskDirective \n\nTsMaskDirective  -->\n\nTsMaskModule->TsMaskDirective \n\n\n\nTerminusUIModule -->\n\nTsMenuModule->TerminusUIModule\n\n\n\nTsPaginatorModule -->\n\nTsMenuModule->TsPaginatorModule\n\n\n\n\n\nTsMenuComponent \n\nTsMenuComponent \n\nTsMenuComponent  -->\n\nTsMenuModule->TsMenuComponent \n\n\n\nTerminusUIModule -->\n\nTsNavigationModule->TerminusUIModule\n\n\n\n\n\nTsNavigationComponent \n\nTsNavigationComponent \n\nTsNavigationComponent  -->\n\nTsNavigationModule->TsNavigationComponent \n\n\n\nTerminusUIModule -->\n\nTsPaginatorModule->TerminusUIModule\n\n\n\n\n\nTsTableModule\n\nTsTableModule\n\nTsTableModule -->\n\nTsPaginatorModule->TsTableModule\n\n\n\n\n\nTsPaginatorComponent \n\nTsPaginatorComponent \n\nTsPaginatorComponent  -->\n\nTsPaginatorModule->TsPaginatorComponent \n\n\n\nTerminusUIModule -->\n\nTsRadioGroupModule->TerminusUIModule\n\n\n\n\n\nTsRadioGroupComponent \n\nTsRadioGroupComponent \n\nTsRadioGroupComponent  -->\n\nTsRadioGroupModule->TsRadioGroupComponent \n\n\n\n\n\nTsScrollbarsModule\n\nTsScrollbarsModule\n\nTerminusUIModule -->\n\nTsScrollbarsModule->TerminusUIModule\n\n\n\n\n\nTsScrollbarsComponent \n\nTsScrollbarsComponent \n\nTsScrollbarsComponent  -->\n\nTsScrollbarsModule->TsScrollbarsComponent \n\n\n\nTerminusUIModule -->\n\nTsSearchModule->TerminusUIModule\n\n\n\n\n\nTsSearchComponent \n\nTsSearchComponent \n\nTsSearchComponent  -->\n\nTsSearchModule->TsSearchComponent \n\n\n\n\n\nTsSelectModule\n\nTsSelectModule\n\nTerminusUIModule -->\n\nTsSelectModule->TerminusUIModule\n\n\n\nTsPaginatorModule -->\n\nTsSelectModule->TsPaginatorModule\n\n\n\n\n\nTsSelectComponent \n\nTsSelectComponent \n\nTsSelectComponent  -->\n\nTsSelectModule->TsSelectComponent \n\n\n\n\n\nTsSortModule\n\nTsSortModule\n\nTerminusUIModule -->\n\nTsSortModule->TerminusUIModule\n\n\n\nTsTableModule -->\n\nTsSortModule->TsTableModule\n\n\n\n\n\nTsSortDirective \n\nTsSortDirective \n\nTsSortDirective  -->\n\nTsSortModule->TsSortDirective \n\n\n\n\n\nTsSortHeaderComponent \n\nTsSortHeaderComponent \n\nTsSortHeaderComponent  -->\n\nTsSortModule->TsSortHeaderComponent \n\n\n\n\n\nTsSpacingModule\n\nTsSpacingModule\n\nTerminusUIModule -->\n\nTsSpacingModule->TerminusUIModule\n\n\n\nTsLoginFormModule -->\n\nTsSpacingModule->TsLoginFormModule\n\n\n\n\n\nTsVerticalSpacingDirective \n\nTsVerticalSpacingDirective \n\nTsVerticalSpacingDirective  -->\n\nTsSpacingModule->TsVerticalSpacingDirective \n\n\n\nTerminusUIModule -->\n\nTsTableModule->TerminusUIModule\n\n\n\n\n\nTsCellDefDirective \n\nTsCellDefDirective \n\nTsCellDefDirective  -->\n\nTsTableModule->TsCellDefDirective \n\n\n\n\n\nTsCellDirective \n\nTsCellDirective \n\nTsCellDirective  -->\n\nTsTableModule->TsCellDirective \n\n\n\n\n\nTsColumnDefDirective \n\nTsColumnDefDirective \n\nTsColumnDefDirective  -->\n\nTsTableModule->TsColumnDefDirective \n\n\n\n\n\nTsHeaderCellDefDirective \n\nTsHeaderCellDefDirective \n\nTsHeaderCellDefDirective  -->\n\nTsTableModule->TsHeaderCellDefDirective \n\n\n\n\n\nTsHeaderCellDirective \n\nTsHeaderCellDirective \n\nTsHeaderCellDirective  -->\n\nTsTableModule->TsHeaderCellDirective \n\n\n\n\n\nTsHeaderRowComponent \n\nTsHeaderRowComponent \n\nTsHeaderRowComponent  -->\n\nTsTableModule->TsHeaderRowComponent \n\n\n\n\n\nTsHeaderRowDefDirective \n\nTsHeaderRowDefDirective \n\nTsHeaderRowDefDirective  -->\n\nTsTableModule->TsHeaderRowDefDirective \n\n\n\n\n\nTsRowComponent \n\nTsRowComponent \n\nTsRowComponent  -->\n\nTsTableModule->TsRowComponent \n\n\n\n\n\nTsRowDefDirective \n\nTsRowDefDirective \n\nTsRowDefDirective  -->\n\nTsTableModule->TsRowDefDirective \n\n\n\n\n\nTsTableComponent \n\nTsTableComponent \n\nTsTableComponent  -->\n\nTsTableModule->TsTableComponent \n\n\n\n\n\nTsToggleModule\n\nTsToggleModule\n\nTerminusUIModule -->\n\nTsToggleModule->TerminusUIModule\n\n\n\n\n\nTsToggleComponent \n\nTsToggleComponent \n\nTsToggleComponent  -->\n\nTsToggleModule->TsToggleComponent \n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTerminusUIModule -->\n\nTsTooltipModule->TerminusUIModule\n\n\n\nTsCSVEntryModule -->\n\nTsTooltipModule->TsCSVEntryModule\n\n\n\nTsCopyModule -->\n\nTsTooltipModule->TsCopyModule\n\n\n\nTsFileUploadModule -->\n\nTsTooltipModule->TsFileUploadModule\n\n\n\nTsPaginatorModule -->\n\nTsTooltipModule->TsPaginatorModule\n\n\n\n\n\nTsTooltipComponent \n\nTsTooltipComponent \n\nTsTooltipComponent  -->\n\nTsTooltipModule->TsTooltipComponent \n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTerminusUIModule -->\n\nTsValidationMessagesModule->TerminusUIModule\n\n\n\nTsAutocompleteModule -->\n\nTsValidationMessagesModule->TsAutocompleteModule\n\n\n\nTsDatepickerModule -->\n\nTsValidationMessagesModule->TsDatepickerModule\n\n\n\nTsFileUploadModule -->\n\nTsValidationMessagesModule->TsFileUploadModule\n\n\n\nTsInputModule -->\n\nTsValidationMessagesModule->TsInputModule\n\n\n\nTsRadioGroupModule -->\n\nTsValidationMessagesModule->TsRadioGroupModule\n\n\n\nTsSelectModule -->\n\nTsValidationMessagesModule->TsSelectModule\n\n\n\n\n\nTsValidationMessagesComponent \n\nTsValidationMessagesComponent \n\nTsValidationMessagesComponent  -->\n\nTsValidationMessagesModule->TsValidationMessagesComponent \n\n\n\n\n\nTsValidatorsService\n\nTsValidatorsService\n\nTerminusUIModule -->\n\nTsValidatorsService->TerminusUIModule\n\n\n\nTsInputModule -->\n\nTsValidatorsService->TsInputModule\n\n\n\nTsLoginFormModule -->\n\nTsValidatorsService->TsLoginFormModule\n\n\n\n\n\nTsAutocompleteComponent\n\nTsAutocompleteComponent\n\nTsAutocompleteModule -->\n\nTsAutocompleteComponent->TsAutocompleteModule\n\n\n\n\n\nTsAutofocusDirective\n\nTsAutofocusDirective\n\nTsAutofocusModule -->\n\nTsAutofocusDirective->TsAutofocusModule\n\n\n\n\n\nTsButtonComponent\n\nTsButtonComponent\n\nTsButtonModule -->\n\nTsButtonComponent->TsButtonModule\n\n\n\n\n\nTsCSVEntryComponent\n\nTsCSVEntryComponent\n\nTsCSVEntryModule -->\n\nTsCSVEntryComponent->TsCSVEntryModule\n\n\n\n\n\nTsCardComponent\n\nTsCardComponent\n\nTsCardModule -->\n\nTsCardComponent->TsCardModule\n\n\n\n\n\nTsCardTitleDirective\n\nTsCardTitleDirective\n\nTsCardModule -->\n\nTsCardTitleDirective->TsCardModule\n\n\n\n\n\nTsChart2Component\n\nTsChart2Component\n\n\n\nTsChart2Module\n\nTsChart2Module\n\nTsChart2Module -->\n\nTsChart2Component->TsChart2Module\n\n\n\n\n\nTsChart2Component \n\nTsChart2Component \n\nTsChart2Component  -->\n\nTsChart2Module->TsChart2Component \n\n\n\n\n\nTsAmChartsService\n\nTsAmChartsService\n\nTsChart2Module -->\n\nTsAmChartsService->TsChart2Module\n\n\n\n\n\nTsChartComponent\n\nTsChartComponent\n\nTsChartModule -->\n\nTsChartComponent->TsChartModule\n\n\n\n\n\nTsChartPointDirective\n\nTsChartPointDirective\n\nTsChartModule -->\n\nTsChartPointDirective->TsChartModule\n\n\n\n\n\nTsChartSeriesDirective\n\nTsChartSeriesDirective\n\nTsChartModule -->\n\nTsChartSeriesDirective->TsChartModule\n\n\n\n\n\nHighchartsService\n\nHighchartsService\n\nTsChartModule -->\n\nHighchartsService->TsChartModule\n\n\n\n\n\nTsCheckboxComponent\n\nTsCheckboxComponent\n\nTsCheckboxModule -->\n\nTsCheckboxComponent->TsCheckboxModule\n\n\n\n\n\nTsConfirmationDirective\n\nTsConfirmationDirective\n\nTsConfirmationModule -->\n\nTsConfirmationDirective->TsConfirmationModule\n\n\n\n\n\nTsConfirmationModalComponent\n\nTsConfirmationModalComponent\n\nTsConfirmationModule -->\n\nTsConfirmationModalComponent->TsConfirmationModule\n\n\n\n\n\nTsCopyComponent\n\nTsCopyComponent\n\nTsCopyModule -->\n\nTsCopyComponent->TsCopyModule\n\n\n\n\n\nTsDateRangeComponent\n\nTsDateRangeComponent\n\nTsDateRangeModule -->\n\nTsDateRangeComponent->TsDateRangeModule\n\n\n\n\n\nTsDatepickerComponent\n\nTsDatepickerComponent\n\nTsDatepickerModule -->\n\nTsDatepickerComponent->TsDatepickerModule\n\n\n\n\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR\n\nTsDatepickerComponent -->\n\nCUSTOM_DATEPICKER_CONTROL_VALUE_ACCESSOR->TsDatepickerComponent\n\n\n\n\n\nTsFileUploadComponent\n\nTsFileUploadComponent\n\nTsFileUploadModule -->\n\nTsFileUploadComponent->TsFileUploadModule\n\n\n\n\n\nCUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR\n\nTsFileUploadComponent -->\n\nCUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR->TsFileUploadComponent\n\n\n\n\n\nTsDropProtectionService\n\nTsDropProtectionService\n\nTsFileUploadModule -->\n\nTsDropProtectionService->TsFileUploadModule\n\n\n\n\n\nTsIconButtonComponent\n\nTsIconButtonComponent\n\nTsIconButtonModule -->\n\nTsIconButtonComponent->TsIconButtonModule\n\n\n\n\n\nTsIconComponent\n\nTsIconComponent\n\nTsIconModule -->\n\nTsIconComponent->TsIconModule\n\n\n\n\n\nTsInputComponent\n\nTsInputComponent\n\nTsInputModule -->\n\nTsInputComponent->TsInputModule\n\n\n\n\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n\nTsInputComponent -->\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR->TsInputComponent\n\n\n\n\n\nTsLinkComponent\n\nTsLinkComponent\n\nTsLinkModule -->\n\nTsLinkComponent->TsLinkModule\n\n\n\n\n\nTsLoadingOverlayComponent\n\nTsLoadingOverlayComponent\n\nTsLoadingOverlayModule -->\n\nTsLoadingOverlayComponent->TsLoadingOverlayModule\n\n\n\n\n\nTsLoadingOverlayDirective\n\nTsLoadingOverlayDirective\n\nTsLoadingOverlayModule -->\n\nTsLoadingOverlayDirective->TsLoadingOverlayModule\n\n\n\n\n\nTsLoginFormComponent\n\nTsLoginFormComponent\n\nTsLoginFormModule -->\n\nTsLoginFormComponent->TsLoginFormModule\n\n\n\n\n\nTsMaskDirective\n\nTsMaskDirective\n\nTsMaskModule -->\n\nTsMaskDirective->TsMaskModule\n\n\n\n\n\nMASKED_INPUT_VALUE_ACCESSOR\n\nMASKED_INPUT_VALUE_ACCESSOR\n\nTsMaskDirective -->\n\nMASKED_INPUT_VALUE_ACCESSOR->TsMaskDirective\n\n\n\n\n\nTsMenuComponent\n\nTsMenuComponent\n\nTsMenuModule -->\n\nTsMenuComponent->TsMenuModule\n\n\n\n\n\nTsNavigationComponent\n\nTsNavigationComponent\n\nTsNavigationModule -->\n\nTsNavigationComponent->TsNavigationModule\n\n\n\n\n\nTsPaginatorComponent\n\nTsPaginatorComponent\n\nTsPaginatorModule -->\n\nTsPaginatorComponent->TsPaginatorModule\n\n\n\n\n\nTsDatePipe\n\nTsDatePipe\n\n\n\nTsPipesModule\n\nTsPipesModule\n\nTsPipesModule -->\n\nTsDatePipe->TsPipesModule\n\n\n\n\n\nTsRoundNumberPipe\n\nTsRoundNumberPipe\n\nTsPipesModule -->\n\nTsRoundNumberPipe->TsPipesModule\n\n\n\n\n\nTsSentenceCasePipe\n\nTsSentenceCasePipe\n\nTsPipesModule -->\n\nTsSentenceCasePipe->TsPipesModule\n\n\n\n\n\nTsTimeAgoPipe\n\nTsTimeAgoPipe\n\nTsPipesModule -->\n\nTsTimeAgoPipe->TsPipesModule\n\n\n\n\n\nTsTitleCasePipe\n\nTsTitleCasePipe\n\nTsPipesModule -->\n\nTsTitleCasePipe->TsPipesModule\n\n\n\n\n\nTsDatePipe \n\nTsDatePipe \n\nTsDatePipe  -->\n\nTsPipesModule->TsDatePipe \n\n\n\n\n\nTsRoundNumberPipe \n\nTsRoundNumberPipe \n\nTsRoundNumberPipe  -->\n\nTsPipesModule->TsRoundNumberPipe \n\n\n\n\n\nTsSentenceCasePipe \n\nTsSentenceCasePipe \n\nTsSentenceCasePipe  -->\n\nTsPipesModule->TsSentenceCasePipe \n\n\n\n\n\nTsTimeAgoPipe \n\nTsTimeAgoPipe \n\nTsTimeAgoPipe  -->\n\nTsPipesModule->TsTimeAgoPipe \n\n\n\n\n\nTsTitleCasePipe \n\nTsTitleCasePipe \n\nTsTitleCasePipe  -->\n\nTsPipesModule->TsTitleCasePipe \n\n\n\n\n\nTsRadioGroupComponent\n\nTsRadioGroupComponent\n\nTsRadioGroupModule -->\n\nTsRadioGroupComponent->TsRadioGroupModule\n\n\n\n\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n\nTsRadioGroupComponent -->\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR->TsRadioGroupComponent\n\n\n\n\n\nTsScrollbarsComponent\n\nTsScrollbarsComponent\n\nTsScrollbarsModule -->\n\nTsScrollbarsComponent->TsScrollbarsModule\n\n\n\n\n\nTsSearchComponent\n\nTsSearchComponent\n\nTsSearchModule -->\n\nTsSearchComponent->TsSearchModule\n\n\n\n\n\nTsSelectComponent\n\nTsSelectComponent\n\nTsSelectModule -->\n\nTsSelectComponent->TsSelectModule\n\n\n\n\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n\nTsSelectComponent -->\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR->TsSelectComponent\n\n\n\n\n\nTsSortDirective\n\nTsSortDirective\n\nTsSortModule -->\n\nTsSortDirective->TsSortModule\n\n\n\n\n\nTsSortHeaderComponent\n\nTsSortHeaderComponent\n\nTsSortModule -->\n\nTsSortHeaderComponent->TsSortModule\n\n\n\n\n\nTsVerticalSpacingDirective\n\nTsVerticalSpacingDirective\n\nTsSpacingModule -->\n\nTsVerticalSpacingDirective->TsSpacingModule\n\n\n\n\n\nTsCellDefDirective\n\nTsCellDefDirective\n\nTsTableModule -->\n\nTsCellDefDirective->TsTableModule\n\n\n\n\n\nTsCellDirective\n\nTsCellDirective\n\nTsTableModule -->\n\nTsCellDirective->TsTableModule\n\n\n\n\n\nTsColumnDefDirective\n\nTsColumnDefDirective\n\nTsTableModule -->\n\nTsColumnDefDirective->TsTableModule\n\n\n\n\n\nTsHeaderCellDefDirective\n\nTsHeaderCellDefDirective\n\nTsTableModule -->\n\nTsHeaderCellDefDirective->TsTableModule\n\n\n\n\n\nTsHeaderCellDirective\n\nTsHeaderCellDirective\n\nTsTableModule -->\n\nTsHeaderCellDirective->TsTableModule\n\n\n\n\n\nTsHeaderRowComponent\n\nTsHeaderRowComponent\n\nTsTableModule -->\n\nTsHeaderRowComponent->TsTableModule\n\n\n\n\n\nTsHeaderRowDefDirective\n\nTsHeaderRowDefDirective\n\nTsTableModule -->\n\nTsHeaderRowDefDirective->TsTableModule\n\n\n\n\n\nTsRowComponent\n\nTsRowComponent\n\nTsTableModule -->\n\nTsRowComponent->TsTableModule\n\n\n\n\n\nTsRowDefDirective\n\nTsRowDefDirective\n\nTsTableModule -->\n\nTsRowDefDirective->TsTableModule\n\n\n\n\n\nTsTableComponent\n\nTsTableComponent\n\nTsTableModule -->\n\nTsTableComponent->TsTableModule\n\n\n\n\n\n{ : , :  }\n\n{ : , :  }\n\nTsCellDefDirective -->\n\n{ : , :  }->TsCellDefDirective\n\n\n\nTsColumnDefDirective -->\n\n{ : , :  }->TsColumnDefDirective\n\n\n\nTsHeaderCellDefDirective -->\n\n{ : , :  }->TsHeaderCellDefDirective\n\n\n\nTsHeaderRowDefDirective -->\n\n{ : , :  }->TsHeaderRowDefDirective\n\n\n\nTsRowDefDirective -->\n\n{ : , :  }->TsRowDefDirective\n\n\n\n\n\nTsToggleComponent\n\nTsToggleComponent\n\nTsToggleModule -->\n\nTsToggleComponent->TsToggleModule\n\n\n\n\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n\nTsToggleComponent -->\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR->TsToggleComponent\n\n\n\n\n\nTsTooltipComponent\n\nTsTooltipComponent\n\nTsTooltipModule -->\n\nTsTooltipComponent->TsTooltipModule\n\n\n\n\n\nTsValidationMessagesComponent\n\nTsValidationMessagesComponent\n\nTsValidationMessagesModule -->\n\nTsValidationMessagesComponent->TsValidationMessagesModule\n\n\n\n\n\nTsValidationMessageService\n\nTsValidationMessageService\n\nTsValidationMessagesModule -->\n\nTsValidationMessageService->TsValidationMessagesModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            35 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        33 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        16 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        14 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        32 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MaskFunction   (terminus-ui/.../mask.directive.ts)\n                        \n                        \n                            MaskShortcutOptions   (terminus-ui/.../mask.directive.ts)\n                        \n                        \n                            TS_CUSTOM_ICON   (terminus-ui/.../icon.component.ts)\n                        \n                        \n                            TsAspectRatioTypes   (terminus-ui/.../card.component.ts)\n                        \n                        \n                            TsAutocompleteComparatorFn   (terminus-ui/.../autocomplete.component.ts)\n                        \n                        \n                            TsAutocompleteFormatterFn   (terminus-ui/.../autocomplete.component.ts)\n                        \n                        \n                            TsButtonActionTypes   (terminus-ui/.../button.component.ts)\n                        \n                        \n                            TsButtonFormatTypes   (terminus-ui/.../button.component.ts)\n                        \n                        \n                            TsButtonFunctionTypes   (terminus-ui/.../button.component.ts)\n                        \n                        \n                            TsCardBorderOptions   (terminus-ui/.../card.component.ts)\n                        \n                        \n                            TsChart2VisualizationOptions   (terminus-ui/.../chart2.component.ts)\n                        \n                        \n                            TsChartAxisType   (terminus-ui/.../options.interface.ts)\n                        \n                        \n                            TsChartData   (terminus-ui/.../options.interface.ts)\n                        \n                        \n                            TsChartLabelFormatterFn   (terminus-ui/.../options.interface.ts)\n                        \n                        \n                            TsChartMapTypes   (terminus-ui/.../options.interface.ts)\n                        \n                        \n                            TsChartStacking   (terminus-ui/.../options.interface.ts)\n                        \n                        \n                            TsChartVisualizationOptions   (terminus-ui/.../options.interface.ts)\n                        \n                        \n                            TsDateTypes   (terminus-ui/.../date.pipe.ts)\n                        \n                        \n                            TsFileAcceptedMimeTypes   (terminus-ui/.../mime-types.ts)\n                        \n                        \n                            TsFileImageDimensionConstraints   (terminus-ui/.../image-dimension-constraints.ts)\n                        \n                        \n                            TsInputAutocompleteTypes   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            TsInputTypes   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            TsMenuPositionTypesX   (terminus-ui/.../menu.component.ts)\n                        \n                        \n                            TsMenuPositionTypesY   (terminus-ui/.../menu.component.ts)\n                        \n                        \n                            TsMenuTriggerTypes   (terminus-ui/.../menu.component.ts)\n                        \n                        \n                            TsNavigationItem   (terminus-ui/.../navigation.component.ts)\n                        \n                        \n                            TsRadioFormatFn   (terminus-ui/.../radio-group.component.ts)\n                        \n                        \n                            TsScrollbarsScrollDirections   (terminus-ui/.../scrollbars.component.ts)\n                        \n                        \n                            TsSelectFormatFn   (terminus-ui/.../select.component.ts)\n                        \n                        \n                            TsSortDirection   (terminus-ui/.../sort.directive.ts)\n                        \n                        \n                            TsStyleThemeTypes   (terminus-ui/.../style-theme.types.ts)\n                        \n                        \n                            TsTooltipPositionTypes   (terminus-ui/.../tooltip.component.ts)\n                        \n                        \n                            TsVerticalSpacingTypes   (terminus-ui/.../vertical-spacing.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    terminus-ui/src/mask/mask.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        MaskFunction\n                    \n                \n                    \n                        \n                            A function that returns an array of RegExp (used to determine postal code RegExp)\n\n                        \n                    \n                \n                    \n                        MaskFunction:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        MaskShortcutOptions\n                    \n                \n                    \n                        \n                            Define the allowed mask shortcut option\n\n                        \n                    \n                \n                    \n                        MaskShortcutOptions:     \"phone\" | \"currency\" | \"number\" | \"percentage\" | \"postal\" | \"default\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/icon/icon.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TS_CUSTOM_ICON\n                    \n                \n                    \n                        \n                            Currently supported custom icons\n\n                        \n                    \n                \n                    \n                        TS_CUSTOM_ICON:     \n\n                    \n                \n            \n        \n\n    terminus-ui/src/card/card.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsAspectRatioTypes\n                    \n                \n                    \n                        \n                            Define the allowed aspect ratios. Used in TsCardComponent\n\n                        \n                    \n                \n                    \n                        TsAspectRatioTypes:     \"16:9\" | \"4:3\" | \"3:2\" | \"5:4\" | \"1:1\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsCardBorderOptions\n                    \n                \n                    \n                        \n                            Define allowed border sides. Used in TsCardComponent. Border color determined by the theme.\n\n                        \n                    \n                \n                    \n                        TsCardBorderOptions:     \"none\" | \"left\" | \"right\" | \"top\" | \"bottom\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/autocomplete/autocomplete.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsAutocompleteComparatorFn\n                    \n                \n                    \n                        \n                            Define a type for allowed TsAutocompleteComponent comparator function\n\n                        \n                    \n                \n                    \n                        TsAutocompleteComparatorFn:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsAutocompleteFormatterFn\n                    \n                \n                    \n                        \n                            Define a type for allowed TsAutocompleteComponent formatter function\n\n                        \n                    \n                \n                    \n                        TsAutocompleteFormatterFn:     function\n\n                    \n                \n            \n        \n\n    terminus-ui/src/button/button.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsButtonActionTypes\n                    \n                \n                    \n                        \n                            Define the allowed TsButtonComponent action types\n\n                        \n                    \n                \n                    \n                        TsButtonActionTypes:     \"Button\" | \"Submit\" | \"Menu\" | \"Reset\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsButtonFormatTypes\n                    \n                \n                    \n                        \n                            Define the allowed TsButtonComponent format types\n\n                        \n                    \n                \n                    \n                        TsButtonFormatTypes:     \"filled\" | \"hollow\" | \"collapsable\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsButtonFunctionTypes\n                    \n                \n                    \n                        \n                            Define the allowed TsButtonComponent action types\n\n                        \n                    \n                \n                    \n                        TsButtonFunctionTypes:     \"button\" | \"search\" | \"submit\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/chart2/chart2.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsChart2VisualizationOptions\n                    \n                \n                    \n                        \n                            Define the supported chart visualizations\n\n                        \n                    \n                \n                    \n                        TsChart2VisualizationOptions:     \"pie\" | \"xy\" | \"map\" | \"radar\" | \"treemap\" | \"sankey\" | \"chord\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/chart/options.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        TsChartAxisType\n                    \n                \n                    \n                        \n                            The type of axis.\nIn a datetime axis, the numbers are given in milliseconds, and tick marks are placed on\nappropriate values like full hours or days. In a category axis, the point names of the chart's\nseries are used for categories, if not a categories array is defined.\n\n                        \n                    \n                \n                    \n                        TsChartAxisType:     \"category\" | \"datetime\" | \"linear\" | \"logarithmic\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsChartData\n                    \n                \n                    \n                        \n                            An array of data series'.\n\n                        \n                    \n                \n                    \n                        TsChartData:     TsChartDataItem[]\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsChartLabelFormatterFn\n                    \n                \n                    \n                        \n                            Callback function to format the text of the tooltip from scratch. Return false to disable tooltip\nfor a specific point on series.\nAvailable data: this.percentage|point|series|total|x|y\n\n                        \n                    \n                \n                    \n                        TsChartLabelFormatterFn:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsChartMapTypes\n                    \n                \n                    \n                        \n                            The allowed map types\n\n                        \n                    \n                \n                    \n                        TsChartMapTypes:     \"europe\" | \"northAmerica\" | \"usa\" | \"worldContinents\" | \"world\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsChartStacking\n                    \n                \n                    \n                        \n                            Define how chart data should stack\n\n                        \n                    \n                \n                    \n                        TsChartStacking:     null | \"normal\" | \"percent\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsChartVisualizationOptions\n                    \n                \n                    \n                        \n                            Define the supported chart visualizations\n\n                        \n                    \n                \n                    \n                        TsChartVisualizationOptions:     \"area\" | \"bar\" | \"bullet\" | \"column\" | \"line\" | \"map\" | \"mapbubble\" | \"pie\" | \"scatter\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/pipes/date/date.pipe.ts\n    \n        \n            \n                \n                    \n                        \n                        TsDateTypes\n                    \n                \n                    \n                        \n                            Define the allowed date formats for the TsDatePipe.\n\n                        \n                    \n                \n                    \n                        TsDateTypes:     \"short\" | \"medium\" | \"extended\" | \"timestamp\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/file-upload/mime-types.ts\n    \n        \n            \n                \n                    \n                        \n                        TsFileAcceptedMimeTypes\n                    \n                \n                    \n                        \n                            Define the allowed mime types for TsFileUploadComponent\n\n                        \n                    \n                \n                    \n                        TsFileAcceptedMimeTypes:     \"text/csv\" | \"image/jpeg\" | \"image/jpg\" | \"image/png\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/file-upload/image-dimension-constraints.ts\n    \n        \n            \n                \n                    \n                        \n                        TsFileImageDimensionConstraints\n                    \n                \n                    \n                        \n                            An array of file size constraints\n\n                        \n                    \n                \n                    \n                        TsFileImageDimensionConstraints:     TsFileImageDimensionContraint[]\n\n                    \n                \n            \n        \n\n    terminus-ui/src/input/input.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsInputAutocompleteTypes\n                    \n                \n                    \n                        \n                            Define the allowed autocomplete variations for TsInputComponent\nNOTE: This is not all valid types; only the ones this library supports.\n\n                        \n                    \n                \n                    \n                        TsInputAutocompleteTypes:     \"off\" | \"on\" | \"name\" | \"email\" | \"username\" | \"new-password\" | \"current-password\" | \"tel\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsInputTypes\n                    \n                \n                    \n                        \n                            Define the allowed TsInputComponent input types\n\n                        \n                    \n                \n                    \n                        TsInputTypes:     \"text\" | \"password\" | \"email\" | \"hidden\" | \"number\" | \"search\" | \"tel\" | \"url\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/menu/menu.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsMenuPositionTypesX\n                    \n                \n                    \n                        \n                            Define the allowed X positions for a menu\n\n                        \n                    \n                \n                    \n                        TsMenuPositionTypesX:     \"before\" | \"after\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsMenuPositionTypesY\n                    \n                \n                    \n                        \n                            Define the allowed Y positions for a menu\n\n                        \n                    \n                \n                    \n                        TsMenuPositionTypesY:     \"above\" | \"below\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsMenuTriggerTypes\n                    \n                \n                    \n                        \n                            Define the allowed trigger types for a menu\n\n                        \n                    \n                \n                    \n                        TsMenuTriggerTypes:     \"default\" | \"utility\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/navigation/navigation.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsNavigationItem\n                    \n                \n                    \n                        \n                            Define the allowed keys and types for an item passed to the TsNavigationComponent\n\n                        \n                    \n                \n                    \n                        TsNavigationItem:     TsNavigationLinkItem | TsNavigationActionItem\n\n                    \n                \n            \n        \n\n    terminus-ui/src/radio-group/radio-group.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsRadioFormatFn\n                    \n                \n                    \n                        \n                            Expose the formatter function type used by TsRadioGroupComponent\n\n                        \n                    \n                \n                    \n                        TsRadioFormatFn:     function\n\n                    \n                \n            \n        \n\n    terminus-ui/src/scrollbars/scrollbars.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsScrollbarsScrollDirections\n                    \n                \n                    \n                        \n                            Define possible scroll directions for TsScrollbarsScrollDirections.\n\n                        \n                    \n                \n                    \n                        TsScrollbarsScrollDirections:     \"any\" | \"both\" | \"x\" | \"y\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/select/select.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsSelectFormatFn\n                    \n                \n                    \n                        \n                            Expose the formatter function type\n\n                        \n                    \n                \n                    \n                        TsSelectFormatFn:     function\n\n                    \n                \n            \n        \n\n    terminus-ui/src/sort/sort.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        TsSortDirection\n                    \n                \n                    \n                        \n                            Define the allowed sort directions for {@link TsSort}\n\n                        \n                    \n                \n                    \n                        TsSortDirection:     \"asc\" | \"desc\" | \"\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/utilities/types/style-theme.types.ts\n    \n        \n            \n                \n                    \n                        \n                        TsStyleThemeTypes\n                    \n                \n                    \n                        \n                            Define the allowed theme types\n\n                        \n                    \n                \n                    \n                        TsStyleThemeTypes:     \"primary\" | \"accent\" | \"warn\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/tooltip/tooltip.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsTooltipPositionTypes\n                    \n                \n                    \n                        \n                            Define the accepted string values for the TsTooltipComponent position\n\n                        \n                    \n                \n                    \n                        TsTooltipPositionTypes:     \"left\" | \"right\" | \"above\" | \"below\" | \"before\" | \"after\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/spacing/vertical-spacing.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        TsVerticalSpacingTypes\n                    \n                \n                    \n                        \n                            Define the accepted string values for TsVerticalSpacingDirective\n\n                        \n                    \n                \n                    \n                        TsVerticalSpacingTypes:     \"small--2\" | \"small--1\" | \"small--0\" | \"none\" | \"default--0\" | \"large--0\" | \"large--1\" | \"large--2\" | \"large--3\" | \"large--4\" | \"large--5\" | \"large--6\"\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
